{"$schema":"https://raw.githubusercontent.com/oasis-tcs/sarif-spec/master/Schemata/sarif-schema-2.1.0.json","runs":[{"tool":{"driver":{"name":"Polaris","organization":"Synopsys","rules":[{"id":"CVE-2021-27568 json-smart 2.3: spring-boot-starter-test 2.2.2.RELEASE: net.minidev","shortDescription":{"text":"Transitive Dependency: json-smart 2.3 from spring-boot-starter-test 2.2.2.RELEASE (CVE-2021-27568)"},"fullDescription":{"text":"A vulnerability was found in netplex json-smart **V1** and **V2** due to an uncaught exception in parser. Successful exploitation of this issue could result in a denial-of-service (DoS) or potential sensitive data exposure."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| json-smart 2.3  | 2.5.0  | 2.5.0 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/ed802e1f-bb16-4b37-9d44-5b8d0e93aa2e?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=ae37e408-4fec-4624-9a19-d16a0f56bd11)\n\n\n## Description\nA vulnerability was found in netplex json-smart **V1** and **V2** due to an uncaught exception in parser. Successful exploitation of this issue could result in a denial-of-service (DoS) or potential sensitive data exposure.\n\n## Vulnerabilities(BDSA,CVE)\n:orange_circle: [CVE-2021-27568](https://openhub.net/vulnerabilities/bdsa/CVE-2021-27568) - Sensitive Data Exposure\n\n\n\n## Solution\nFixed in:\n* **json-smart-v1** version [**1.3.2**](https://github.com/netplex/json-smart-v1/releases/tag/1.3.2) by [this](https://github.com/netplex/json-smart-v1/commit/768db58ee0e3e344fcdb574b7629765308a1d0af) commit.\n* **json-smart-v2** version **2.3.1** by [this](https://github.com/netplex/json-smart-v2/commit/b3d52aa168e5a474c70a8e9ec69f823c2e7216ca) commit.\n* **json-smart-v2** version [**2.4.1**](https://github.com/netplex/json-smart-v2/releases/tag/2.4.1) by [this](https://github.com/netplex/json-smart-v2/commit/550411600d5e60e372618fa7c90c8bd82f954e67) commit.\n\n\n\n## Dependency tree\n- org.owasp.webgoat.lesson:http-basics:v8.1.0:-maven\n    - org.springframework.boot:spring-boot-starter-test:2.2.2.RELEASE\n        - com.jayway.jsonpath:json-path:2.4.0\n            - net.minidev:json-smart:2.3\n\n\n## References\n* Common Weakness Enumeration: [CWE-200](https://cwe.mitre.org/data/definitions/200.html)\n* Common Weakness Enumeration: [CWE-400](https://cwe.mitre.org/data/definitions/400.html)\n\n","text":"A vulnerability was found in netplex json-smart **V1** and **V2** due to an uncaught exception in parser. Successful exploitation of this issue could result in a denial-of-service (DoS) or potential sensitive data exposure."},"properties":{"security-severity":"8.9","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-200","external/cwe/cwe-400"]},"defaultConfiguration":{"level":"error"}},{"id":"CVE-2023-1370 json-smart 2.3: spring-boot-starter-test 2.2.2.RELEASE: net.minidev","shortDescription":{"text":"Transitive Dependency: json-smart 2.3 from spring-boot-starter-test 2.2.2.RELEASE (CVE-2023-1370)"},"fullDescription":{"text":"json-smart is vulnerable to denial-of-service (DoS) due to not having any depth limits of nested arrays or objects. Parsing large nested elements could result in stack exhaustion and an application crash."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| json-smart 2.3  | 2.5.0  | 2.5.0 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/ed802e1f-bb16-4b37-9d44-5b8d0e93aa2e?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=ae37e408-4fec-4624-9a19-d16a0f56bd11)\n\n\n## Description\njson-smart is vulnerable to denial-of-service (DoS) due to not having any depth limits of nested arrays or objects. Parsing large nested elements could result in stack exhaustion and an application crash.\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [CVE-2023-1370](https://openhub.net/vulnerabilities/bdsa/CVE-2023-1370) - Allocation of Resources Without Limits or Throttling\n\n\n\n## Solution\nFixed in version [**2.4.9**](https://github.com/netplex/json-smart-v2/releases/tag/2.4.9) by [this](https://github.com/netplex/json-smart-v2/commit/5b3205d051952d3100aa0db1535f6ba6226bd87a) commit.\n\nThe latest stable releases can be found [here](https://github.com/netplex/json-smart-v2/releases).\n\n\n\n## Dependency tree\n- org.owasp.webgoat.lesson:http-basics:v8.1.0:-maven\n    - org.springframework.boot:spring-boot-starter-test:2.2.2.RELEASE\n        - com.jayway.jsonpath:json-path:2.4.0\n            - net.minidev:json-smart:2.3\n\n\n## References\n* Common Weakness Enumeration: [CWE-770](https://cwe.mitre.org/data/definitions/770.html)\n\n","text":"json-smart is vulnerable to denial-of-service (DoS) due to not having any depth limits of nested arrays or objects. Parsing large nested elements could result in stack exhaustion and an application crash."},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-770"]},"defaultConfiguration":{"level":"warning"}},{"id":"CVE-2020-27216 jetty-webapp 9.4.24.v20191120: wiremock 2.8.0: org.eclipse.jetty","shortDescription":{"text":"Transitive Dependency: jetty-webapp 9.4.24.v20191120 from wiremock 2.8.0 (CVE-2020-27216)"},"fullDescription":{"text":"Jetty is vulnerable to temporary directory Hijacking via a race condition. If code is executed from this temporary directory it can lead to local privilege escalation."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| jetty-webapp 9.4.24.v20191120  | 9.4.53.20231009  | 11.0.19 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/ee93672f-853c-4083-a5e8-0d5ab21e8bf9?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=d8221aaa-7d55-4b5a-b3e0-2b5cba26ce60)\n\n\n## Description\nJetty is vulnerable to temporary directory Hijacking via a race condition. If code is executed from this temporary directory it can lead to local privilege escalation.\n\n## Vulnerabilities(BDSA,CVE)\n:orange_circle: [CVE-2020-27216](https://openhub.net/vulnerabilities/bdsa/CVE-2020-27216) - Race Condition due to Improper Synchronization\n\n\n\n## Solution\nFixed in:\n* [**11.0.0.beta3**](https://github.com/eclipse/jetty.project/releases/tag/jetty-11.0.0.beta3)\n* [**10.0.0.beta3**](https://github.com/eclipse/jetty.project/releases/tag/jetty-10.0.0.beta3) \n* [**9.4.33.v20201020**](https://github.com/eclipse/jetty.project/releases/tag/jetty-9.4.33.v20201020) by [this](https://github.com/eclipse/jetty.project/commit/53e0e0e9b25a6309bf24ee3b10984f4145701edb) commit and [this](https://github.com/eclipse/jetty.project/commit/9ad6beb80543b392c91653f6bfce233fc75b9d5f) commit.\n\n## Workaround\nSet a temporary directory, either for the server or the context, to one outside the shared temporary file system. For recent releases, a temporary directory by created by making a directory called work in the `${jetty.base}` directory (the parent directory of the webapps directory). Alternately the java temporary directory can be set with the System Property `java.io.tmpdir`. A more detailed description of how jetty selects a temporary directory is below.\n\nTo mitigate this vulnerability the directory must be set to one that is not writable by an attacker. To avoid information leakage, the directory should also not be readable by an attacker.\n\n## Dependency tree\n- org.owasp.webgoat.lesson:xxe:v8.1.0:-maven\n    - com.github.tomakehurst:wiremock:2.8.0\n        - org.eclipse.jetty:jetty-webapp:9.4.24.v20191120\n\n\n## References\n* Common Weakness Enumeration: [CWE-362](https://cwe.mitre.org/data/definitions/362.html)\n\n","text":"Jetty is vulnerable to temporary directory Hijacking via a race condition. If code is executed from this temporary directory it can lead to local privilege escalation."},"properties":{"security-severity":"8.9","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-362"]},"defaultConfiguration":{"level":"error"}},{"id":"CVE-2023-44487 jetty-webapp 9.4.24.v20191120: wiremock 2.8.0: org.eclipse.jetty","shortDescription":{"text":"Transitive Dependency: jetty-webapp 9.4.24.v20191120 from wiremock 2.8.0 (CVE-2023-44487)"},"fullDescription":{"text":"The HTTP/2 protocol contains a flaw related to the stream multiplexing feature that can allow for excessive resource consumption on servers operating implementations of the HTTP/2 protocol. \n\nThe HTTP/2 protocol allows clients to signal to a server to cancel a previously opened stream by sending an `RST_STREAM` frame. Attackers can abuse this stream canceling ability by opening a large number of streams at once immediately followed by `RST_STREAM` frames. In most HTTP/2 implementations this bypasses concurrent open stream limits and causes servers to spend processing time first handling request frames and then performing stream tear downs. For the server, these operations can pile up whereas the attacker client paid minuscule bandwidth and processing costs.\n\n[Amazon](https://aws.amazon.com/security/security-bulletins/AWS-2023-011/), [Cloudflare](https://blog.cloudflare.com/technical-breakdown-http2-rapid-reset-ddos-attack/) and [Google](https://cloud.google.com/blog/products/identity-security/google-cloud-mitigated-largest-ddos-attack-peaking-above-398-million-rps/) have reported that this vulnerability has been exploited in the wild from August to October 2023.\n\nThis vulnerability is listed as exploitable by the Cybersecurity \u0026 Infrastructure Security Agency in their [Known Exploited Vulnerabilities Catalog](https://www.cisa.gov/known-exploited-vulnerabilities-catalog)."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| jetty-webapp 9.4.24.v20191120  | 9.4.53.20231009  | 11.0.19 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/ee93672f-853c-4083-a5e8-0d5ab21e8bf9?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=d8221aaa-7d55-4b5a-b3e0-2b5cba26ce60)\n\n\n## Description\nThe HTTP/2 protocol contains a flaw related to the stream multiplexing feature that can allow for excessive resource consumption on servers operating implementations of the HTTP/2 protocol. \n\nThe HTTP/2 protocol allows clients to signal to a server to cancel a previously opened stream by sending an `RST_STREAM` frame. Attackers can abuse this stream canceling ability by opening a large number of streams at once immediately followed by `RST_STREAM` frames. In most HTTP/2 implementations this bypasses concurrent open stream limits and causes servers to spend processing time first handling request frames and then performing stream tear downs. For the server, these operations can pile up whereas the attacker client paid minuscule bandwidth and processing costs.\n\n[Amazon](https://aws.amazon.com/security/security-bulletins/AWS-2023-011/), [Cloudflare](https://blog.cloudflare.com/technical-breakdown-http2-rapid-reset-ddos-attack/) and [Google](https://cloud.google.com/blog/products/identity-security/google-cloud-mitigated-largest-ddos-attack-peaking-above-398-million-rps/) have reported that this vulnerability has been exploited in the wild from August to October 2023.\n\nThis vulnerability is listed as exploitable by the Cybersecurity \u0026 Infrastructure Security Agency in their [Known Exploited Vulnerabilities Catalog](https://www.cisa.gov/known-exploited-vulnerabilities-catalog).\n\n## Vulnerabilities(BDSA,CVE)\n:orange_circle: [CVE-2023-44487](https://openhub.net/vulnerabilities/bdsa/CVE-2023-44487) - Uncontrolled Resource Consumption\n\n\n\n## Solution\nFixed in:\n* nghttp2 [**1.57.0**](https://github.com/nghttp2/nghttp2/releases/tag/v1.57.0) by [this](https://github.com/nghttp2/nghttp2/commit/72b4af6143681f528f1d237b21a9a7aee1738832) commit,\n* NGINX [**1.25.3**](https://hg.nginx.org/nginx/rev/release-1.25.3) by [this](https://hg.nginx.org/nginx/rev/cdda286c0f1b) revision,\n* Apache Tomcat \n\t* [**8.5.94**](https://github.com/apache/tomcat/releases/tag/8.5.94) by [this](https://github.com/apache/tomcat/commit/944332bb15bd2f3bf76ec2caeb1ff0a58a3bc628) commit,\n\t* [**9.0.81**](https://github.com/apache/tomcat/releases/tag/9.0.81) by [this](https://github.com/apache/tomcat/commit/6d1a9fd6642387969e4410b9989c85856b74917a) commit,\n\t* [**10.1.14**](https://github.com/apache/tomcat/releases/tag/10.1.14) by [this](https://github.com/apache/tomcat/commit/76bb4bfbfeae827dce896f650655bbf6e251ed49) commit,\n\t* [**11.0.0-M12**](https://github.com/apache/tomcat/releases/tag/11.0.0-M12) by [this](https://github.com/apache/tomcat/commit/9cdfe25bad707f34b3e5da2994f3f1952a163c3e) commit,\n* Apache Traffic Server\n\t* [**9.2.3-rc0**](https://github.com/apache/trafficserver/releases/tag/9.2.3-rc0) by [this](https://github.com/apache/trafficserver/commit/b28ad74f117307e8de206f1de70c3fa716f90682) commit,\n\t* [**8.1.9-rc0**](https://github.com/apache/trafficserver/releases/tag/8.1.9-rc0) by [this](https://github.com/apache/trafficserver/commit/d742d74039aaa548dda0148ab4ba207906abc620) commit,\n* Netty/Codec/HTTP2 [**4.1.100.Final**](https://mvnrepository.com/artifact/io.netty/netty-codec-http2/4.1.100.Final) by [this](https://github.com/netty/netty/commit/58f75f665aa81a8cbcf6ffa74820042a285c5e61) commit,\n* Eclipse Jetty\n\t* [**12.0.2**](https://github.com/jetty/jetty.project/releases/tag/jetty-12.0.2), [**11.0.17**](https://github.com/jetty/jetty.project/releases/tag/jetty-11.0.17), [**10.0.17**](https://github.com/jetty/jetty.project/releases/tag/jetty-10.0.17) by [this](https://github.com/jetty/jetty.project/commit/dbb94514dc9d3fb21fe92080f57c314e7e06a148) commit,\n\t* [**9.4.53.v20231009**](https://github.com/jetty/jetty.project/releases/tag/jetty-9.4.53.v20231009) by [this](https://github.com/jetty/jetty.project/commit/0f246d12090fb15b7b21dee8429f459fd792de53) commit.\n* lighttpd [**1.4.73**](https://github.com/lighttpd/lighttpd1.4/releases/tag/lighttpd-1.4.73) by [this](https://github.com/lighttpd/lighttpd1.4/commit/7b48f3c843e1113b27f5d278f4d10861cc499a06) commit.\n* grpc-go \n  * [**1.56.3**](https://github.com/grpc/grpc-go/releases/tag/v1.56.3) by [this](https://github.com/grpc/grpc-go/commit/5efd7bd7) commit,\n  * [**1.57.1**](https://github.com/grpc/grpc-go/releases/tag/v1.57.1) by [this](https://github.com/grpc/grpc-go/commit/6a1400d5) commit,\n  * [**1.58.3**](https://github.com/grpc/grpc-go/releases/tag/v1.58.3) by [this](https://github.com/grpc/grpc-go/commit/c40c9ba3) commit,\n * h2o fixed in the **master** branch by [this](https://github.com/h2o/h2o/commit/28fe15117b909588bf14269a0e1c6ec4548579fe) commit which is not yet included in any release.\n\n## Workaround\nDepending on technologies use and their configuration, different mitigation strategies may be available.\n\nIn some cases, it may be possible to limit the amount of `RST_STREAM` frame frames that are processed within a given time by configuring the particular HTTP/2 implementation manually. Please refer to your software vendor's advisories for more information.\n\n## Dependency tree\n- org.owasp.webgoat.lesson:xxe:v8.1.0:-maven\n    - com.github.tomakehurst:wiremock:2.8.0\n        - org.eclipse.jetty:jetty-webapp:9.4.24.v20191120\n\n\n## References\n* Common Weakness Enumeration: [CWE-400](https://cwe.mitre.org/data/definitions/400.html)\n\n","text":"The HTTP/2 protocol contains a flaw related to the stream multiplexing feature that can allow for excessive resource consumption on servers operating implementations of the HTTP/2 protocol. \n\nThe HTTP/2 protocol allows clients to signal to a server to cancel a previously opened stream by sending an `RST_STREAM` frame. Attackers can abuse this stream canceling ability by opening a large number of streams at once immediately followed by `RST_STREAM` frames. In most HTTP/2 implementations this bypasses concurrent open stream limits and causes servers to spend processing time first handling request frames and then performing stream tear downs. For the server, these operations can pile up whereas the attacker client paid minuscule bandwidth and processing costs.\n\n[Amazon](https://aws.amazon.com/security/security-bulletins/AWS-2023-011/), [Cloudflare](https://blog.cloudflare.com/technical-breakdown-http2-rapid-reset-ddos-attack/) and [Google](https://cloud.google.com/blog/products/identity-security/google-cloud-mitigated-largest-ddos-attack-peaking-above-398-million-rps/) have reported that this vulnerability has been exploited in the wild from August to October 2023.\n\nThis vulnerability is listed as exploitable by the Cybersecurity \u0026 Infrastructure Security Agency in their [Known Exploited Vulnerabilities Catalog](https://www.cisa.gov/known-exploited-vulnerabilities-catalog)."},"properties":{"security-severity":"8.9","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-400"]},"defaultConfiguration":{"level":"error"}},{"id":"CVE-2020-27223 jetty-webapp 9.4.24.v20191120: wiremock 2.8.0: org.eclipse.jetty","shortDescription":{"text":"Transitive Dependency: jetty-webapp 9.4.24.v20191120 from wiremock 2.8.0 (CVE-2020-27223)"},"fullDescription":{"text":"Jetty is vulnerable to denial-of-service (DoS) due to the use of an exponential algorithm that can have excessive resource requirements. A remote attacker could cause a vulnerable server to become unresponsive by sending maliciously crafted HTTP requests to that server."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| jetty-webapp 9.4.24.v20191120  | 9.4.53.20231009  | 11.0.19 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/ee93672f-853c-4083-a5e8-0d5ab21e8bf9?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=d8221aaa-7d55-4b5a-b3e0-2b5cba26ce60)\n\n\n## Description\nJetty is vulnerable to denial-of-service (DoS) due to the use of an exponential algorithm that can have excessive resource requirements. A remote attacker could cause a vulnerable server to become unresponsive by sending maliciously crafted HTTP requests to that server.\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [CVE-2020-27223](https://openhub.net/vulnerabilities/bdsa/CVE-2020-27223) - Inefficient Algorithmic Complexity\n\n\n\n## Solution\nFixed by [this](https://github.com/eclipse/jetty.project/commit/10e531756b972162eed402c44d0244f7f6b85131) commit in:\n* [**11.0.1**](https://github.com/eclipse/jetty.project/releases/tag/jetty-11.0.1)\n* [**10.0.1**](https://github.com/eclipse/jetty.project/releases/tag/jetty-10.0.1)\n* [**9.4.37.v20210219**](https://github.com/eclipse/jetty.project/releases/tag/jetty-9.4.37.v20210219)\n\nThe latest stable releases are available [here](https://github.com/eclipse/jetty.project/releases).\n\n## Workaround\nThe vendor has stated that the following workarounds are effective:\n\n* Don't use the default error page or handler.\n* Don't deploy an instance of `StatisticsServlet` that is exposed to the network.\n* Don't call the `getLocale` API.\n* Don't enable precompressed static content in instances of `DefaultServlet`.\n* Deploy a rule that limits the number and size of `Accept-*` header fields.\n\n## Dependency tree\n- org.owasp.webgoat.lesson:xxe:v8.1.0:-maven\n    - com.github.tomakehurst:wiremock:2.8.0\n        - org.eclipse.jetty:jetty-webapp:9.4.24.v20191120\n\n\n## References\n* Common Weakness Enumeration: [CWE-407](https://cwe.mitre.org/data/definitions/407.html)\n\n","text":"Jetty is vulnerable to denial-of-service (DoS) due to the use of an exponential algorithm that can have excessive resource requirements. A remote attacker could cause a vulnerable server to become unresponsive by sending maliciously crafted HTTP requests to that server."},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-407"]},"defaultConfiguration":{"level":"warning"}},{"id":"CVE-2021-28165 jetty-webapp 9.4.24.v20191120: wiremock 2.8.0: org.eclipse.jetty","shortDescription":{"text":"Transitive Dependency: jetty-webapp 9.4.24.v20191120 from wiremock 2.8.0 (CVE-2021-28165)"},"fullDescription":{"text":"Eclipse Jetty is vulnerable to Denial-of-Service (DoS) via invalid TLS frames. An attacker could exploit this by sending a TLS frame with a size in excess of 17408 resulting in excessive resource consumption leading to a DoS condition."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| jetty-webapp 9.4.24.v20191120  | 9.4.53.20231009  | 11.0.19 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/ee93672f-853c-4083-a5e8-0d5ab21e8bf9?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=d8221aaa-7d55-4b5a-b3e0-2b5cba26ce60)\n\n\n## Description\nEclipse Jetty is vulnerable to Denial-of-Service (DoS) via invalid TLS frames. An attacker could exploit this by sending a TLS frame with a size in excess of 17408 resulting in excessive resource consumption leading to a DoS condition.\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [CVE-2021-28165](https://openhub.net/vulnerabilities/bdsa/CVE-2021-28165) - Uncontrolled Resource Consumption\n\n\n\n## Solution\nFixed in [**10.0.2**](https://github.com/eclipse/jetty.project/releases/tag/jetty-10.0.2) and [**11.0.2**](https://github.com/eclipse/jetty.project/releases/tag/jetty-11.0.2) by [this](https://github.com/eclipse/jetty.project/commit/be22761a20a1685365c8e0356bf09b47e574cfd9) and [this](https://github.com/eclipse/jetty.project/commit/039c7386d0f3087d7c8aa19ea6001b24c95b9f16) commit.\nFixed in [**9.4.39.v20210325**](https://github.com/eclipse/jetty.project/releases/tag/jetty-9.4.39.v20210325) by [this](https://github.com/eclipse/jetty.project/commit/00d379c94ba865dced2025c2d1bc3e2e0e41e880) and [this](https://github.com/eclipse/jetty.project/commit/294b2ba02b667548617a94cd99592110ac230add) commit. \n\nThe latest stable releases are available [here](https://github.com/eclipse/jetty.project/releases).\n\n## Workaround\nThe problem can be worked around by compiling the following class:\n```\npackage org.eclipse.jetty.server.ssl.fix6072;\n\nimport java.nio.ByteBuffer;\nimport javax.net.ssl.SSLEngine;\nimport javax.net.ssl.SSLEngineResult;\nimport javax.net.ssl.SSLException;\nimport javax.net.ssl.SSLHandshakeException;\n\nimport org.eclipse.jetty.io.EndPoint;\nimport org.eclipse.jetty.io.ssl.SslConnection;\nimport org.eclipse.jetty.server.Connector;\nimport org.eclipse.jetty.server.SslConnectionFactory;\nimport org.eclipse.jetty.util.BufferUtil;\nimport org.eclipse.jetty.util.annotation.Name;\nimport org.eclipse.jetty.util.ssl.SslContextFactory;\n\npublic class SpaceCheckingSslConnectionFactory extends SslConnectionFactory\n{\n    public SpaceCheckingSslConnectionFactory(@Name(\"sslContextFactory\") SslContextFactory factory, @Name(\"next\") String nextProtocol)\n    {\n        super(factory, nextProtocol);\n    }\n\n    @Override\n    protected SslConnection newSslConnection(Connector connector, EndPoint endPoint, SSLEngine engine)\n    {\n        return new SslConnection(connector.getByteBufferPool(), connector.getExecutor(), endPoint, engine, isDirectBuffersForEncryption(), isDirectBuffersForDecryption())\n        {\n            @Override\n            protected SSLEngineResult unwrap(SSLEngine sslEngine, ByteBuffer input, ByteBuffer output) throws SSLException\n            {\n                SSLEngineResult results = super.unwrap(sslEngine, input, output);\n\n                if ((results.getStatus() == SSLEngineResult.Status.BUFFER_UNDERFLOW ||\n                    results.getStatus() == SSLEngineResult.Status.OK \u0026\u0026 results.bytesConsumed() == 0 \u0026\u0026 results.bytesProduced() == 0) \u0026\u0026\n                    BufferUtil.space(input) == 0)\n                {\n                    BufferUtil.clear(input);\n                    throw new SSLHandshakeException(\"Encrypted buffer max length exceeded\");\n                }\n                return results;\n            }\n        };\n    }\n}\n```\n\nThis class can be deployed by:\n* The resulting class file should be put into a jar file (eg `sslfix6072.jar`)\n* The jar file should be made available to the server. For a normal distribution this can be done by putting the file into `${jetty.base}/lib`\n* Copy the file `${jetty.home}/modules/ssl.mod` to `${jetty.base}/modules`\n* Edit the `${jetty.base}/modules/ssl.mod` file to have the following section:\n```\n[lib]\nlib/sslfix6072.jar\n```\n\n* Copy the file `${jetty.home}/etc/jetty-https.xml` and `${jetty.home}/etc/jetty-http2.xml` to `${jetty.base}/etc`\n* Edit files `${jetty.base}/etc/jetty-https.xml` and `${jetty.base}/etc/jetty-http2.xml`, changing any reference of `org.eclipse.jetty.server.SslConnectionFactory` to `org.eclipse.jetty.server.ssl.fix6072.SpaceCheckingSslConnectionFactory`. \n\nFor example:\n```\n  \u003cCall name=\"addIfAbsentConnectionFactory\"\u003e\n    \u003cArg\u003e\n      \u003cNew class=\"org.eclipse.jetty.server.ssl.fix6072.SpaceCheckingSslConnectionFactory\"\u003e\n        \u003cArg name=\"next\"\u003ehttp/1.1\u003c/Arg\u003e\n        \u003cArg name=\"sslContextFactory\"\u003e\u003cRef refid=\"sslContextFactory\"/\u003e\u003c/Arg\u003e\n      \u003c/New\u003e\n    \u003c/Arg\u003e\n  \u003c/Call\u003e\n```\nRestart Jetty\n\n## Dependency tree\n- org.owasp.webgoat.lesson:xxe:v8.1.0:-maven\n    - com.github.tomakehurst:wiremock:2.8.0\n        - org.eclipse.jetty:jetty-webapp:9.4.24.v20191120\n\n\n## References\n* Common Weakness Enumeration: [CWE-400](https://cwe.mitre.org/data/definitions/400.html)\n\n","text":"Eclipse Jetty is vulnerable to Denial-of-Service (DoS) via invalid TLS frames. An attacker could exploit this by sending a TLS frame with a size in excess of 17408 resulting in excessive resource consumption leading to a DoS condition."},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-400"]},"defaultConfiguration":{"level":"warning"}},{"id":"CVE-2021-28169 jetty-webapp 9.4.24.v20191120: wiremock 2.8.0: org.eclipse.jetty","shortDescription":{"text":"Transitive Dependency: jetty-webapp 9.4.24.v20191120 from wiremock 2.8.0 (CVE-2021-28169)"},"fullDescription":{"text":"Jetty is vulnerable to information disclosure due to improper requested path verification. This allows crafted requests to access protected resources of the web application which, depending on the implementation, might reveal sensitive information."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| jetty-webapp 9.4.24.v20191120  | 9.4.53.20231009  | 11.0.19 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/ee93672f-853c-4083-a5e8-0d5ab21e8bf9?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=d8221aaa-7d55-4b5a-b3e0-2b5cba26ce60)\n\n\n## Description\nJetty is vulnerable to information disclosure due to improper requested path verification. This allows crafted requests to access protected resources of the web application which, depending on the implementation, might reveal sensitive information.\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [CVE-2021-28169](https://openhub.net/vulnerabilities/bdsa/CVE-2021-28169) - Directory Traversal\n\n\n\n## Solution\nFixed in [**9.4.41**](https://github.com/eclipse/jetty.project/releases/tag/jetty-9.4.41.v20210512) by [this](https://github.com/eclipse/jetty.project/commit/1c05b0bcb1) commit.\n\nFixed in [**10.0.3**](https://github.com/eclipse/jetty.project/releases/tag/jetty-10.0.3) and [**11.0.3**](https://github.com/eclipse/jetty.project/releases/tag/jetty-11.0.3) by [this](https://github.com/eclipse/jetty.project/commit/f58dbedcd0) commit.\n\nThe latest stable releases are available [here](https://www.eclipse.org/jetty/download.php).\n\n## Workaround\nThe vendor provides the following workaround:\n\nIf you cannot update to the latest version of Jetty, you can instead deploy your own version of the `ConcatServlet` and/or the `WelcomeFilter` by using the code from the latest version of Jetty.\n\n## Dependency tree\n- org.owasp.webgoat.lesson:xxe:v8.1.0:-maven\n    - com.github.tomakehurst:wiremock:2.8.0\n        - org.eclipse.jetty:jetty-webapp:9.4.24.v20191120\n\n\n## References\n* Common Weakness Enumeration: [CWE-22](https://cwe.mitre.org/data/definitions/22.html)\n\n","text":"Jetty is vulnerable to information disclosure due to improper requested path verification. This allows crafted requests to access protected resources of the web application which, depending on the implementation, might reveal sensitive information."},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-22"]},"defaultConfiguration":{"level":"warning"}},{"id":"CVE-2023-36478 jetty-webapp 9.4.24.v20191120: wiremock 2.8.0: org.eclipse.jetty","shortDescription":{"text":"Transitive Dependency: jetty-webapp 9.4.24.v20191120 from wiremock 2.8.0 (CVE-2023-36478)"},"fullDescription":{"text":"Eclipse Jetty is vulnerable to a denial-of-service (DoS) issue due to presence of a user input validation flaw in the HTTP/2 HPACK functionality that can lead to an integer overflow and allow HPACK headers to exceed their expected size limits.\n\nAn attacker could submit crafted HTTP messages that trigger the integer overflow flaw and cause large buffers to be allocated on the server, consuming memory resources in a manner that could cause the server to run out of memory."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| jetty-webapp 9.4.24.v20191120  | 9.4.53.20231009  | 11.0.19 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/ee93672f-853c-4083-a5e8-0d5ab21e8bf9?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=d8221aaa-7d55-4b5a-b3e0-2b5cba26ce60)\n\n\n## Description\nEclipse Jetty is vulnerable to a denial-of-service (DoS) issue due to presence of a user input validation flaw in the HTTP/2 HPACK functionality that can lead to an integer overflow and allow HPACK headers to exceed their expected size limits.\n\nAn attacker could submit crafted HTTP messages that trigger the integer overflow flaw and cause large buffers to be allocated on the server, consuming memory resources in a manner that could cause the server to run out of memory.\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [CVE-2023-36478](https://openhub.net/vulnerabilities/bdsa/CVE-2023-36478) - Integer Overflow / Underflow\n\n\n\n## Solution\nFixed in:\n* [**9.4.53.v20231009**](https://github.com/jetty/jetty.project/releases/tag/jetty-9.4.53.v20231009) by [this](https://github.com/jetty/jetty.project/commit/c7a4b05fc735e73e7522cb617c079045b709957b) commit and [this](https://github.com/jetty/jetty.project/commit/a4d61e9eb026ec98c79107e840cabdf520482c56) commit,\n* [**10.0.16**](https://github.com/jetty/jetty.project/releases/tag/jetty-10.0.16), [**11.0.16**](https://github.com/jetty/jetty.project/releases/tag/jetty-11.0.16) and [**12.0.0.beta2x**](https://github.com/jetty/jetty.project/releases/tag/jetty-12.0.0.beta2x) by [this](https://github.com/jetty/jetty.project/commit/a8c9eea75bffcb2b2557acefb75856707654a56f) commit and [this](https://github.com/jetty/jetty.project/commit/420ec7cc1db65b42693dc002aca0faa567f62f7e) commit.\n\nThe latest stable releases can be found [here](https://eclipse.dev/jetty/download.php).\n\n\n\n## Dependency tree\n- org.owasp.webgoat.lesson:xxe:v8.1.0:-maven\n    - com.github.tomakehurst:wiremock:2.8.0\n        - org.eclipse.jetty:jetty-webapp:9.4.24.v20191120\n\n\n## References\n* Common Weakness Enumeration: [CWE-190](https://cwe.mitre.org/data/definitions/190.html)\n* Common Weakness Enumeration: [CWE-400](https://cwe.mitre.org/data/definitions/400.html)\n\n","text":"Eclipse Jetty is vulnerable to a denial-of-service (DoS) issue due to presence of a user input validation flaw in the HTTP/2 HPACK functionality that can lead to an integer overflow and allow HPACK headers to exceed their expected size limits.\n\nAn attacker could submit crafted HTTP messages that trigger the integer overflow flaw and cause large buffers to be allocated on the server, consuming memory resources in a manner that could cause the server to run out of memory."},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-190","external/cwe/cwe-400"]},"defaultConfiguration":{"level":"warning"}},{"id":"CVE-2022-2048 jetty-webapp 9.4.24.v20191120: wiremock 2.8.0: org.eclipse.jetty","shortDescription":{"text":"Transitive Dependency: jetty-webapp 9.4.24.v20191120 from wiremock 2.8.0 (CVE-2022-2048)"},"fullDescription":{"text":"Eclipse Jetty does not correctly handle invalid HTTP/2 requests. An attacker could exploit this flaw to exhaust the HTTP/2 flow control window or TCP congest the connection. This will cause the relevant selector threads to be blocked and it will lead to a denial-of-service (DoS)."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| jetty-webapp 9.4.24.v20191120  | 9.4.53.20231009  | 11.0.19 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/ee93672f-853c-4083-a5e8-0d5ab21e8bf9?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=d8221aaa-7d55-4b5a-b3e0-2b5cba26ce60)\n\n\n## Description\nEclipse Jetty does not correctly handle invalid HTTP/2 requests. An attacker could exploit this flaw to exhaust the HTTP/2 flow control window or TCP congest the connection. This will cause the relevant selector threads to be blocked and it will lead to a denial-of-service (DoS).\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [CVE-2022-2048](https://openhub.net/vulnerabilities/bdsa/CVE-2022-2048) - Insufficient Resource Pool\n\n\n\n## Solution\nFixed in:\n* **[9.4.47](https://github.com/eclipse/jetty.project/releases/tag/jetty-9.4.47.v20220610)** by [this](https://github.com/eclipse/jetty.project/commit/be912d4315839405a8ae601f2e4ee0306867266e) commit,\n* **[10.0.10](https://github.com/eclipse/jetty.project/releases/tag/jetty-10.0.10)** and **[11.0.10](https://github.com/eclipse/jetty.project/releases/tag/jetty-11.0.10)** by [this](https://github.com/eclipse/jetty.project/commit/b705091afb9158b39590fa36b9b84795524a8f0b) commit.\n\n\nThe latest stable releases can be found [here](https://github.com/eclipse/jetty.project/releases).\n\n## Workaround\nThe vendor recommends users to filter the requests before they are sent to Jetty. One way to filter them would be to use a proxy.\n\n## Dependency tree\n- org.owasp.webgoat.lesson:xxe:v8.1.0:-maven\n    - com.github.tomakehurst:wiremock:2.8.0\n        - org.eclipse.jetty:jetty-webapp:9.4.24.v20191120\n\n\n## References\n* Common Weakness Enumeration: [CWE-410](https://cwe.mitre.org/data/definitions/410.html)\n* Common Weakness Enumeration: [CWE-664](https://cwe.mitre.org/data/definitions/664.html)\n\n","text":"Eclipse Jetty does not correctly handle invalid HTTP/2 requests. An attacker could exploit this flaw to exhaust the HTTP/2 flow control window or TCP congest the connection. This will cause the relevant selector threads to be blocked and it will lead to a denial-of-service (DoS)."},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-410","external/cwe/cwe-664"]},"defaultConfiguration":{"level":"warning"}},{"id":"CVE-2020-27218 jetty-webapp 9.4.24.v20191120: wiremock 2.8.0: org.eclipse.jetty","shortDescription":{"text":"Transitive Dependency: jetty-webapp 9.4.24.v20191120 from wiremock 2.8.0 (CVE-2020-27218)"},"fullDescription":{"text":"Eclipse Jetty contains a vulnerability that allows a remote attacker to inject data into other client's requests. This vulnerability only exists when GZIP request body inflation is enabled, and requests from different clients are multiplexed onto a single connection."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| jetty-webapp 9.4.24.v20191120  | 9.4.53.20231009  | 11.0.19 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/ee93672f-853c-4083-a5e8-0d5ab21e8bf9?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=d8221aaa-7d55-4b5a-b3e0-2b5cba26ce60)\n\n\n## Description\nEclipse Jetty contains a vulnerability that allows a remote attacker to inject data into other client's requests. This vulnerability only exists when GZIP request body inflation is enabled, and requests from different clients are multiplexed onto a single connection.\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [CVE-2020-27218](https://openhub.net/vulnerabilities/bdsa/CVE-2020-27218) - Sensitive Information in Resource Not Removed Before Reuse\n\n\n\n## Solution\nFixed in **[9.4.35.v20201120](https://github.com/eclipse/jetty.project/releases/tag/jetty-9.4.35.v20201120)** by [this](https://github.com/eclipse/jetty.project/commit/850a0330ff25da42b1b1cbdbdca0fcc0c40e47e9) commit.\n\nFixed in **[10.0.0.beta3](https://github.com/eclipse/jetty.project/releases/tag/jetty-10.0.0.beta3)** and in **[11.0.0.beta3](https://github.com/eclipse/jetty.project/releases/tag/jetty-11.0.0.beta3)** by [this](https://github.com/eclipse/jetty.project/commit/34d27e85483c119b7dd1aa9beda735844d14b605) commit.\n\n## Workaround\nThe vendor states that any of the following will mitigate this vulnerability:\n\n\n\u003e * Disabling compressed request body inflation by GzipHandler.\n\u003e * By always fully consuming the request content before sending a response.\n\u003e * By adding a Connection: close to any response where the servlet does not fully consume request content.\n\n## Dependency tree\n- org.owasp.webgoat.lesson:xxe:v8.1.0:-maven\n    - com.github.tomakehurst:wiremock:2.8.0\n        - org.eclipse.jetty:jetty-webapp:9.4.24.v20191120\n\n\n## References\n* Common Weakness Enumeration: [CWE-226](https://cwe.mitre.org/data/definitions/226.html)\n\n","text":"Eclipse Jetty contains a vulnerability that allows a remote attacker to inject data into other client's requests. This vulnerability only exists when GZIP request body inflation is enabled, and requests from different clients are multiplexed onto a single connection."},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-226"]},"defaultConfiguration":{"level":"warning"}},{"id":"CVE-2023-26048 jetty-webapp 9.4.24.v20191120: wiremock 2.8.0: org.eclipse.jetty","shortDescription":{"text":"Transitive Dependency: jetty-webapp 9.4.24.v20191120 from wiremock 2.8.0 (CVE-2023-26048)"},"fullDescription":{"text":"Eclipse Jetty contains a vulnerability in its multipart request parsing mechanism that can lead to an out-of-memory error due to insufficient limiting measures. An attacker can exploit this flaw by supplying a request containing a large multipart without a filename in order to cause a denial-of-service (DoS)."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| jetty-webapp 9.4.24.v20191120  | 9.4.53.20231009  | 11.0.19 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/ee93672f-853c-4083-a5e8-0d5ab21e8bf9?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=d8221aaa-7d55-4b5a-b3e0-2b5cba26ce60)\n\n\n## Description\nEclipse Jetty contains a vulnerability in its multipart request parsing mechanism that can lead to an out-of-memory error due to insufficient limiting measures. An attacker can exploit this flaw by supplying a request containing a large multipart without a filename in order to cause a denial-of-service (DoS).\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [CVE-2023-26048](https://openhub.net/vulnerabilities/bdsa/CVE-2023-26048) - Uncontrolled Resource Consumption\n\n\n\n## Solution\nFixed in [**jetty-9.4.51.v20230217**](https://github.com/eclipse/jetty.project/releases/tag/jetty-9.4.51.v20230217) by [this](https://github.com/eclipse/jetty.project/commit/c3021592218da289563987e6f7fbe05f8704b285) commit.\n\nFixed by [this](https://github.com/eclipse/jetty.project/commit/622befbd0d52f61c1acd41b4ef12458311494f1a) commit in:\n* **[jetty-10.0.14](https://github.com/eclipse/jetty.project/releases/tag/jetty-10.0.14)**\n* **[jetty-11.0.14](https://github.com/eclipse/jetty.project/releases/tag/jetty-11.0.14)**\n* **[jetty-12.0.0.beta0](https://github.com/eclipse/jetty.project/releases/tag/jetty-12.0.0.beta0)**\n\nThe latest stable releases can be found [here](https://github.com/eclipse/jetty.project/releases).\n\n## Workaround\nIt is recommended to set the multipart parameter `maxRequestSize` to a non-negative value in order to limit the whole multipart content. It has also been stated that limiting the multipart parameter `maxFileSize` will not be enough since the attacker can supply a large number of parts that, when summed up, will cause memory issues.\n\n## Dependency tree\n- org.owasp.webgoat.lesson:xxe:v8.1.0:-maven\n    - com.github.tomakehurst:wiremock:2.8.0\n        - org.eclipse.jetty:jetty-webapp:9.4.24.v20191120\n\n\n## References\n* Common Weakness Enumeration: [CWE-400](https://cwe.mitre.org/data/definitions/400.html)\n* Common Weakness Enumeration: [CWE-770](https://cwe.mitre.org/data/definitions/770.html)\n\n","text":"Eclipse Jetty contains a vulnerability in its multipart request parsing mechanism that can lead to an out-of-memory error due to insufficient limiting measures. An attacker can exploit this flaw by supplying a request containing a large multipart without a filename in order to cause a denial-of-service (DoS)."},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-400","external/cwe/cwe-770"]},"defaultConfiguration":{"level":"warning"}},{"id":"CVE-2023-26049 jetty-webapp 9.4.24.v20191120: wiremock 2.8.0: org.eclipse.jetty","shortDescription":{"text":"Transitive Dependency: jetty-webapp 9.4.24.v20191120 from wiremock 2.8.0 (CVE-2023-26049)"},"fullDescription":{"text":"Eclipse Jetty does not properly parse quoted values in cookies. This could allow an attacker to smuggle cookies within other cookies into the application. The attacker can also tamper with the cookie parsing mechanism and cause other unintended behavior."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| jetty-webapp 9.4.24.v20191120  | 9.4.53.20231009  | 11.0.19 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/ee93672f-853c-4083-a5e8-0d5ab21e8bf9?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=d8221aaa-7d55-4b5a-b3e0-2b5cba26ce60)\n\n\n## Description\nEclipse Jetty does not properly parse quoted values in cookies. This could allow an attacker to smuggle cookies within other cookies into the application. The attacker can also tamper with the cookie parsing mechanism and cause other unintended behavior.\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [CVE-2023-26049](https://openhub.net/vulnerabilities/bdsa/CVE-2023-26049) - Weak Input Validation\n\n\n\n## Solution\nFixed in version [**jetty-9.4.51.v20230217**](https://github.com/eclipse/jetty.project/releases/tag/jetty-9.4.51.v20230217) by [this](https://github.com/eclipse/jetty.project/commit/1be1401bafb4c46fae3c234c8e93743a661dcf21) commit.\n\nFixed by [this](https://github.com/eclipse/jetty.project/commit/7b8c2c1bf081c7f408e5da3371c8c3c9802f09fd) commit in:\n* [**jetty-10.0.14**](https://github.com/eclipse/jetty.project/releases/tag/jetty-10.0.14)\n* [**jetty-11.0.14**](https://github.com/eclipse/jetty.project/releases/tag/jetty-11.0.14)\n* [**jetty-12.0.0.beta0**](https://github.com/eclipse/jetty.project/releases/tag/jetty-12.0.0.beta0)\n\nThe latest stable releases can be found [here](https://github.com/eclipse/jetty.project/releases).\n\n\n\n## Dependency tree\n- org.owasp.webgoat.lesson:xxe:v8.1.0:-maven\n    - com.github.tomakehurst:wiremock:2.8.0\n        - org.eclipse.jetty:jetty-webapp:9.4.24.v20191120\n\n\n## References\n* Common Weakness Enumeration: [CWE-20](https://cwe.mitre.org/data/definitions/20.html)\n\n","text":"Eclipse Jetty does not properly parse quoted values in cookies. This could allow an attacker to smuggle cookies within other cookies into the application. The attacker can also tamper with the cookie parsing mechanism and cause other unintended behavior."},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-20"]},"defaultConfiguration":{"level":"warning"}},{"id":"CVE-2023-40167 jetty-webapp 9.4.24.v20191120: wiremock 2.8.0: org.eclipse.jetty","shortDescription":{"text":"Transitive Dependency: jetty-webapp 9.4.24.v20191120 from wiremock 2.8.0 (CVE-2023-40167)"},"fullDescription":{"text":"Eclipse Jetty is vulnerable to HTTP request smuggling due to the improper parsing of HTTP requests. An attacker could exploit this vulnerability by sending maliciously crafted HTTP requests to a vulnerable endpoint with multiple requests included inside the body by manipulating the `Content-Length` of the request. The smuggling of HTTP requests may allow for the bypass of security tools such as web application firewalls (WAFs) and intrusion detection systems (IDSs)."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| jetty-webapp 9.4.24.v20191120  | 9.4.53.20231009  | 11.0.19 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/ee93672f-853c-4083-a5e8-0d5ab21e8bf9?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=d8221aaa-7d55-4b5a-b3e0-2b5cba26ce60)\n\n\n## Description\nEclipse Jetty is vulnerable to HTTP request smuggling due to the improper parsing of HTTP requests. An attacker could exploit this vulnerability by sending maliciously crafted HTTP requests to a vulnerable endpoint with multiple requests included inside the body by manipulating the `Content-Length` of the request. The smuggling of HTTP requests may allow for the bypass of security tools such as web application firewalls (WAFs) and intrusion detection systems (IDSs).\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [CVE-2023-40167](https://openhub.net/vulnerabilities/bdsa/CVE-2023-40167) - Improper Handling of Length Parameter Inconsistency\n\n\n\n## Solution\nFixed in versions:\n* [**12.0.1**](https://github.com/eclipse/jetty.project/releases/tag/jetty-12.0.1) by [this](https://github.com/eclipse/jetty.project/commit/13cf2dade746e5d3bb123fd7ecd9fdc28fc43082) commit.\n* [**11.0.16**](https://github.com/eclipse/jetty.project/releases/tag/jetty-11.0.16) and [**10.0.16**](https://github.com/eclipse/jetty.project/releases/tag/jetty-10.0.16) by [this](https://github.com/eclipse/jetty.project/commit/003e46cae4d71e147d51fb8ea378e8989d381cc3) commit.\n* [**9.4.52.v20230823**](https://github.com/eclipse/jetty.project/releases/tag/jetty-9.4.52.v20230823) by [this](https://github.com/eclipse/jetty.project/commit/e4d596eafc887bcd813ae6e28295b5ce327def47) commit.\n\nThe latest stable releases can be found [here](https://eclipse.dev/jetty/download.php).\n\n\n\n## Dependency tree\n- org.owasp.webgoat.lesson:xxe:v8.1.0:-maven\n    - com.github.tomakehurst:wiremock:2.8.0\n        - org.eclipse.jetty:jetty-webapp:9.4.24.v20191120\n\n\n## References\n* Common Weakness Enumeration: [CWE-130](https://cwe.mitre.org/data/definitions/130.html)\n\n","text":"Eclipse Jetty is vulnerable to HTTP request smuggling due to the improper parsing of HTTP requests. An attacker could exploit this vulnerability by sending maliciously crafted HTTP requests to a vulnerable endpoint with multiple requests included inside the body by manipulating the `Content-Length` of the request. The smuggling of HTTP requests may allow for the bypass of security tools such as web application firewalls (WAFs) and intrusion detection systems (IDSs)."},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-130"]},"defaultConfiguration":{"level":"warning"}},{"id":"CVE-2023-36479 jetty-webapp 9.4.24.v20191120: wiremock 2.8.0: org.eclipse.jetty","shortDescription":{"text":"Transitive Dependency: jetty-webapp 9.4.24.v20191120 from wiremock 2.8.0 (CVE-2023-36479)"},"fullDescription":{"text":"Eclipse Jetty contains an improper neutralization of quoting syntax issue within the CGI servlet. This could allow an authenticated attacker to send a request to the CGI Servlet for a binary with a space in its name in order to manipulate the command structure and execute incorrect commands."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| jetty-webapp 9.4.24.v20191120  | 9.4.53.20231009  | 11.0.19 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/ee93672f-853c-4083-a5e8-0d5ab21e8bf9?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=d8221aaa-7d55-4b5a-b3e0-2b5cba26ce60)\n\n\n## Description\nEclipse Jetty contains an improper neutralization of quoting syntax issue within the CGI servlet. This could allow an authenticated attacker to send a request to the CGI Servlet for a binary with a space in its name in order to manipulate the command structure and execute incorrect commands.\n\n## Vulnerabilities(BDSA,CVE)\n:large_blue_circle: [CVE-2023-36479](https://openhub.net/vulnerabilities/bdsa/CVE-2023-36479) - Improper Neutralization of Quoting Syntax\n\n\n\n## Solution\nFixed in versions:\n* [**12.0.0.beta1**](https://github.com/eclipse/jetty.project/releases/tag/jetty-12.0.0.beta1) by [this](https://github.com/eclipse/jetty.project/commit/6ce5a0fbcdf06ae647dfd304dd81a1f9b0691a5c) commit.\n* [**11.0.16**](https://github.com/eclipse/jetty.project/releases/tag/jetty-11.0.16) and [**10.0.16**](https://github.com/eclipse/jetty.project/releases/tag/jetty-10.0.16) by [this](https://github.com/eclipse/jetty.project/commit/c29491e5ac70c98e4d7d7dff2a6465ddecc45c0c) commit.\n* [**9.4.52.v20230823**](https://github.com/eclipse/jetty.project/releases/tag/jetty-9.4.52.v20230823) by [this](https://github.com/eclipse/jetty.project/commit/ec7e1fd173481e526db4092f558aa2b5aab57580) commit.\n\nThe latest stable releases can be found [here](https://eclipse.dev/jetty/download.php).\n\n## Workaround\nThe vendor has issued the following workaround:\n\n\u003e The` org.eclipse.jetty.servlets.CGI` Servlet should not be used. Fast CGI support is available instead.\n\n## Dependency tree\n- org.owasp.webgoat.lesson:xxe:v8.1.0:-maven\n    - com.github.tomakehurst:wiremock:2.8.0\n        - org.eclipse.jetty:jetty-webapp:9.4.24.v20191120\n\n\n## References\n* Common Weakness Enumeration: [CWE-149](https://cwe.mitre.org/data/definitions/149.html)\n\n","text":"Eclipse Jetty contains an improper neutralization of quoting syntax issue within the CGI servlet. This could allow an authenticated attacker to send a request to the CGI Servlet for a binary with a space in its name in order to manipulate the command structure and execute incorrect commands."},"properties":{"security-severity":"3.8","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-149"]},"defaultConfiguration":{"level":"note"}},{"id":"CVE-2023-41900 jetty-webapp 9.4.24.v20191120: wiremock 2.8.0: org.eclipse.jetty","shortDescription":{"text":"Transitive Dependency: jetty-webapp 9.4.24.v20191120 from wiremock 2.8.0 (CVE-2023-41900)"},"fullDescription":{"text":"Eclipse Jetty contains an improper authentication vulnerability. This could allow an authenticated attacker to bypass authentication after it has been rejected or revoked by the `LoginService` and make a request as if authenticated.\n\n**Note:** The vendor has stated that this issue impacts usages of the `jetty-openid` which have configured a nested `LoginService` and where that `LoginService` is capable of rejecting previously authenticated users."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| jetty-webapp 9.4.24.v20191120  | 9.4.53.20231009  | 11.0.19 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/ee93672f-853c-4083-a5e8-0d5ab21e8bf9?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=d8221aaa-7d55-4b5a-b3e0-2b5cba26ce60)\n\n\n## Description\nEclipse Jetty contains an improper authentication vulnerability. This could allow an authenticated attacker to bypass authentication after it has been rejected or revoked by the `LoginService` and make a request as if authenticated.\n\n**Note:** The vendor has stated that this issue impacts usages of the `jetty-openid` which have configured a nested `LoginService` and where that `LoginService` is capable of rejecting previously authenticated users.\n\n## Vulnerabilities(BDSA,CVE)\n:large_blue_circle: [CVE-2023-41900](https://openhub.net/vulnerabilities/bdsa/CVE-2023-41900) - Improper Authentication\n\n\n\n## Solution\nFixed in version [**11.0.15**](https://github.com/eclipse/jetty.project/releases/tag/jetty-11.0.15) and [**10.0.15**](https://github.com/eclipse/jetty.project/releases/tag/jetty-10.0.15) by [this](https://github.com/eclipse/jetty.project/commit/24b7d06fd5ce5468caa3eaa93688879fb2900fda) commit and in [**9.4.52.v20230823**](https://github.com/eclipse/jetty.project/releases/tag/jetty-9.4.52.v20230823) by [this](https://github.com/eclipse/jetty.project/commit/5f48b4170f36b275e1576548b44bd5009feba669) commit.\n\nThe latest stable releases can be found [here](https://eclipse.dev/jetty/download.php).\n\n\n\n## Dependency tree\n- org.owasp.webgoat.lesson:xxe:v8.1.0:-maven\n    - com.github.tomakehurst:wiremock:2.8.0\n        - org.eclipse.jetty:jetty-webapp:9.4.24.v20191120\n\n\n## References\n* Common Weakness Enumeration: [CWE-287](https://cwe.mitre.org/data/definitions/287.html)\n\n","text":"Eclipse Jetty contains an improper authentication vulnerability. This could allow an authenticated attacker to bypass authentication after it has been rejected or revoked by the `LoginService` and make a request as if authenticated.\n\n**Note:** The vendor has stated that this issue impacts usages of the `jetty-openid` which have configured a nested `LoginService` and where that `LoginService` is capable of rejecting previously authenticated users."},"properties":{"security-severity":"3.8","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-287"]},"defaultConfiguration":{"level":"note"}},{"id":"CVE-2021-34428 jetty-webapp 9.4.24.v20191120: wiremock 2.8.0: org.eclipse.jetty","shortDescription":{"text":"Transitive Dependency: jetty-webapp 9.4.24.v20191120 from wiremock 2.8.0 (CVE-2021-34428)"},"fullDescription":{"text":"Eclipse Jetty is vulnerable to insufficient session expiry. This may result in sessions used on a shared computer persisting for longer than intended."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| jetty-webapp 9.4.24.v20191120  | 9.4.53.20231009  | 11.0.19 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/ee93672f-853c-4083-a5e8-0d5ab21e8bf9?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=d8221aaa-7d55-4b5a-b3e0-2b5cba26ce60)\n\n\n## Description\nEclipse Jetty is vulnerable to insufficient session expiry. This may result in sessions used on a shared computer persisting for longer than intended.\n\n## Vulnerabilities(BDSA,CVE)\n:large_blue_circle: [CVE-2021-34428](https://openhub.net/vulnerabilities/bdsa/CVE-2021-34428) - Insufficient Session Expiration\n\n\n\n## Solution\nFixed in:\n* [**9.4.41.v20210516**](https://github.com/eclipse/jetty.project/releases/tag/jetty-9.4.41.v20210516) by [this](https://github.com/eclipse/jetty.project/commit/087f486b4461746b4ded45833887b3ccb136ee85) commit, \n* [**10.0.3**](https://github.com/eclipse/jetty.project/releases/tag/jetty-10.0.3) by [this](https://github.com/eclipse/jetty.project/commit/cd6462a6252d083b3c9ea2684aab0b4c9669ed19) commit, \n* [**11.0.3**](https://github.com/eclipse/jetty.project/releases/tag/jetty-11.0.3) by [this](https://github.com/eclipse/jetty.project/commit/cd6462a6252d083b3c9ea2684aab0b4c9669ed19) commit.\n\nThe latest stable releases are available [here](https://github.com/eclipse/jetty.project/releases).\n\n## Workaround\nThe vendor has [stated](https://github.com/eclipse/jetty.project/security/advisories/GHSA-m6cp-vxjx-65j6) that a workaround is to ensure that the application catches all Throwables within their `SessionListener#sessionDestroyed()` implementations.\n\n## Dependency tree\n- org.owasp.webgoat.lesson:xxe:v8.1.0:-maven\n    - com.github.tomakehurst:wiremock:2.8.0\n        - org.eclipse.jetty:jetty-webapp:9.4.24.v20191120\n\n\n## References\n* Common Weakness Enumeration: [CWE-613](https://cwe.mitre.org/data/definitions/613.html)\n\n","text":"Eclipse Jetty is vulnerable to insufficient session expiry. This may result in sessions used on a shared computer persisting for longer than intended."},"properties":{"security-severity":"3.8","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-613"]},"defaultConfiguration":{"level":"note"}},{"id":"CVE-2022-2047 jetty-webapp 9.4.24.v20191120: wiremock 2.8.0: org.eclipse.jetty","shortDescription":{"text":"Transitive Dependency: jetty-webapp 9.4.24.v20191120 from wiremock 2.8.0 (CVE-2022-2047)"},"fullDescription":{"text":"Eclipse Jetty does not correctly handle invalid authority segments of HTTP URIs. An authenticated attacker could exploit this flaw by passing an invalid URI that contains an improper authority with no host so that it is interpreted as one with a host."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| jetty-webapp 9.4.24.v20191120  | 9.4.53.20231009  | 11.0.19 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/ee93672f-853c-4083-a5e8-0d5ab21e8bf9?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=d8221aaa-7d55-4b5a-b3e0-2b5cba26ce60)\n\n\n## Description\nEclipse Jetty does not correctly handle invalid authority segments of HTTP URIs. An authenticated attacker could exploit this flaw by passing an invalid URI that contains an improper authority with no host so that it is interpreted as one with a host.\n\n## Vulnerabilities(BDSA,CVE)\n:large_blue_circle: [CVE-2022-2047](https://openhub.net/vulnerabilities/bdsa/CVE-2022-2047) - Weak Input Validation\n\n\n\n## Solution\nFixed in versions:\n* [**9.4.47**](https://github.com/eclipse/jetty.project/releases/tag/jetty-9.4.47.v20220610) by [this](https://github.com/eclipse/jetty.project/commit/4ca8afbbd667c19a084d5ff14a4f08eb7049d1c7) commit.\n* [**10.0.10**](https://github.com/eclipse/jetty.project/releases/tag/jetty-10.0.10) and [**11.0.10**](https://github.com/eclipse/jetty.project/releases/tag/jetty-11.0.10) by [this](https://github.com/eclipse/jetty.project/commit/d1e64f469362bb9371d530cccded5ecb13fa1cb5) commit.\n\nThe latest stable releases can be found [here](https://github.com/eclipse/jetty.project/releases).\n\n\n\n## Dependency tree\n- org.owasp.webgoat.lesson:xxe:v8.1.0:-maven\n    - com.github.tomakehurst:wiremock:2.8.0\n        - org.eclipse.jetty:jetty-webapp:9.4.24.v20191120\n\n\n## References\n* Common Weakness Enumeration: [CWE-20](https://cwe.mitre.org/data/definitions/20.html)\n\n","text":"Eclipse Jetty does not correctly handle invalid authority segments of HTTP URIs. An authenticated attacker could exploit this flaw by passing an invalid URI that contains an improper authority with no host so that it is interpreted as one with a host."},"properties":{"security-severity":"3.8","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-20"]},"defaultConfiguration":{"level":"note"}},{"id":"BDSA-2021-3731 spring-boot-autoconfigure 2.2.2.RELEASE: spring-boot-devtools 2.2.2.RELEASE: org.springframework.boot","shortDescription":{"text":"Transitive Dependency: spring-boot-autoconfigure 2.2.2.RELEASE from spring-boot-devtools 2.2.2.RELEASE (BDSA-2021-3731)"},"fullDescription":{"text":"Apache Log4j, as used in many popular services, is vulnerable to improperly allowing lightweight directory access protocol (LDAP) access via Java naming and directory interface (JNDI). A remote attacker able to supply the end application with specially crafted input that is then processed by the Log4j subcomponent could cause the execution of arbitrary Java code.\n\n**Note** \n\n- log4j-api packages by themselves do not contain the vulnerable functionality and are therefore unaffected. log4j-core packages and the upstream overarching source repository are affected.\n\n- A previously suggested mitigation of setting environment variable `LOG4J_FORMAT_MSG_NO_LOOKUPS=true` is not recommended. This mitigation has been proven inadequate against this vulnerability. \n\n- This vulnerability is partially fixed in [**2.15.0-rc2**](https://github.com/apache/logging-log4j2/releases/tag/log4j-2.15.0-rc2) by [this](https://github.com/apache/logging-log4j2/commit/001aaada7dab82c3c09cde5f8e14245dc9d8b454) commit and [this](https://github.com/apache/logging-log4j2/commit/bac0d8a35c7e354a0d3f706569116dff6c6bd658) commit. These fixes were deemed incomplete. See BDSA-2021-3779 (CVE-2021-45046) for more details.\n\nThis vulnerability is listed as exploitable by the Cybersecurity \u0026 Infrastructure Security Agency in their [Known Exploited Vulnerabilities Catalog](https://www.cisa.gov/known-exploited-vulnerabilities-catalog)."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| spring-boot-autoconfigure 2.2.2.RELEASE  | 2.7.18  | 3.2.1 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/48431389-4a2f-44ed-8597-55184ffc0e88?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=ee1b331d-05e0-4bd1-b6ef-727c3b98e324)\n\n\n## Description\nApache Log4j, as used in many popular services, is vulnerable to improperly allowing lightweight directory access protocol (LDAP) access via Java naming and directory interface (JNDI). A remote attacker able to supply the end application with specially crafted input that is then processed by the Log4j subcomponent could cause the execution of arbitrary Java code.\n\n**Note** \n\n- log4j-api packages by themselves do not contain the vulnerable functionality and are therefore unaffected. log4j-core packages and the upstream overarching source repository are affected.\n\n- A previously suggested mitigation of setting environment variable `LOG4J_FORMAT_MSG_NO_LOOKUPS=true` is not recommended. This mitigation has been proven inadequate against this vulnerability. \n\n- This vulnerability is partially fixed in [**2.15.0-rc2**](https://github.com/apache/logging-log4j2/releases/tag/log4j-2.15.0-rc2) by [this](https://github.com/apache/logging-log4j2/commit/001aaada7dab82c3c09cde5f8e14245dc9d8b454) commit and [this](https://github.com/apache/logging-log4j2/commit/bac0d8a35c7e354a0d3f706569116dff6c6bd658) commit. These fixes were deemed incomplete. See BDSA-2021-3779 (CVE-2021-45046) for more details.\n\nThis vulnerability is listed as exploitable by the Cybersecurity \u0026 Infrastructure Security Agency in their [Known Exploited Vulnerabilities Catalog](https://www.cisa.gov/known-exploited-vulnerabilities-catalog).\n\n## Vulnerabilities(BDSA,CVE)\n:red_circle: [BDSA-2021-3731](https://openhub.net/vulnerabilities/bdsa/BDSA-2021-3731) - Insecure Object Deserialization\n\n\n\n## Solution\nFixed in versions:\n*  [**2.16.0-rc1**](https://github.com/apache/logging-log4j2/releases/tag/log4j-2.16.0-rc1) by [this](https://github.com/apache/logging-log4j2/commit/27972043b76c9645476f561c5adc483dec6d3f5d) commit.\n*  [**2.12.2-rc1**](https://github.com/apache/logging-log4j2/releases/tag/log4j-2.12.2-rc1) by [this](https://github.com/apache/logging-log4j2/commit/f819c83804152cb6ed94cb408302e36b21b65053) commit and [this](https://github.com/apache/logging-log4j2/commit/70edc233343815d5efa043b54294a6fb065aa1c5) commit.\n*   [**2.3.1-rc1**](https://github.com/apache/logging-log4j2/releases/tag/log4j-2.3.1-rc1) by [this](https://github.com/apache/logging-log4j2/commit/be848dacbac6df30c4f32b2852e24446033ecf79) commit and [this](https://github.com/apache/logging-log4j2/commit/f6564bb993d547d0a371b75d869042c334bf57f0) commit.\n\nThe latest releases can be found [here](https://github.com/apache/logging-log4j2/tags).\n\nNOTE: It is recommended to upgrade to version  [**2.17.0**](https://downloads.apache.org/logging/log4j/2.17.0/). This recommendation is due to related vulnerabilities (BDSA-2021-3779, CVE-2021-45046) affecting the version that this vulnerability is fixed in.\n\n## Workaround\nThe vendor states that:\n\n\u003e This issue can be mitigated in prior releases (\u003c**2.16.0**) by removing the JndiLookup class from the classpath (example: `zip -q -d log4j-core-*.jar org/apache/logging/log4j/core/lookup/JndiLookup.class`).\n\n## Dependency tree\n- org.owasp.webgoat:webgoat-server:v8.1.0:-maven\n    - org.springframework.boot:spring-boot-devtools:2.2.2.RELEASE\n        - org.springframework.boot:spring-boot-autoconfigure:2.2.2.RELEASE\n\n\n## References\n* Common Weakness Enumeration: [CWE-502](https://cwe.mitre.org/data/definitions/502.html)\n\n","text":"Apache Log4j, as used in many popular services, is vulnerable to improperly allowing lightweight directory access protocol (LDAP) access via Java naming and directory interface (JNDI). A remote attacker able to supply the end application with specially crafted input that is then processed by the Log4j subcomponent could cause the execution of arbitrary Java code.\n\n**Note** \n\n- log4j-api packages by themselves do not contain the vulnerable functionality and are therefore unaffected. log4j-core packages and the upstream overarching source repository are affected.\n\n- A previously suggested mitigation of setting environment variable `LOG4J_FORMAT_MSG_NO_LOOKUPS=true` is not recommended. This mitigation has been proven inadequate against this vulnerability. \n\n- This vulnerability is partially fixed in [**2.15.0-rc2**](https://github.com/apache/logging-log4j2/releases/tag/log4j-2.15.0-rc2) by [this](https://github.com/apache/logging-log4j2/commit/001aaada7dab82c3c09cde5f8e14245dc9d8b454) commit and [this](https://github.com/apache/logging-log4j2/commit/bac0d8a35c7e354a0d3f706569116dff6c6bd658) commit. These fixes were deemed incomplete. See BDSA-2021-3779 (CVE-2021-45046) for more details.\n\nThis vulnerability is listed as exploitable by the Cybersecurity \u0026 Infrastructure Security Agency in their [Known Exploited Vulnerabilities Catalog](https://www.cisa.gov/known-exploited-vulnerabilities-catalog)."},"properties":{"security-severity":"9.1","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-502"]},"defaultConfiguration":{"level":"error"}},{"id":"CVE-2022-22965 spring-boot-autoconfigure 2.2.2.RELEASE: spring-boot-devtools 2.2.2.RELEASE: org.springframework.boot","shortDescription":{"text":"Transitive Dependency: spring-boot-autoconfigure 2.2.2.RELEASE from spring-boot-devtools 2.2.2.RELEASE (CVE-2022-22965)"},"fullDescription":{"text":"Spring Framework is vulnerable to a flaw in the access restrictions to the security sensitive `ClassLoader` property. The restrictions can be bypassed through alternative paths available with Java9 and later. An attacker can leverage this vulnerability to cause remote code execution (RCE).\n\n**Note** this issue exists because the restrictions that were introduced to prevent exploitation of BDSA-2010-0001 (CVE-2010-1622) can be bypassed on platforms where Java9 and later are in use.\n\nThis vulnerability is listed as exploitable by the Cybersecurity \u0026 Infrastructure Security Agency in their [Known Exploited Vulnerabilities Catalog](https://www.cisa.gov/known-exploited-vulnerabilities-catalog)."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| spring-boot-autoconfigure 2.2.2.RELEASE  | 2.7.18  | 3.2.1 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/48431389-4a2f-44ed-8597-55184ffc0e88?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=ee1b331d-05e0-4bd1-b6ef-727c3b98e324)\n\n\n## Description\nSpring Framework is vulnerable to a flaw in the access restrictions to the security sensitive `ClassLoader` property. The restrictions can be bypassed through alternative paths available with Java9 and later. An attacker can leverage this vulnerability to cause remote code execution (RCE).\n\n**Note** this issue exists because the restrictions that were introduced to prevent exploitation of BDSA-2010-0001 (CVE-2010-1622) can be bypassed on platforms where Java9 and later are in use.\n\nThis vulnerability is listed as exploitable by the Cybersecurity \u0026 Infrastructure Security Agency in their [Known Exploited Vulnerabilities Catalog](https://www.cisa.gov/known-exploited-vulnerabilities-catalog).\n\n## Vulnerabilities(BDSA,CVE)\n:red_circle: [CVE-2022-22965](https://openhub.net/vulnerabilities/bdsa/CVE-2022-22965) - Incomplete List of Disallowed Inputs\n\n\n\n## Solution\nFixed in [**5.3.18**](https://github.com/spring-projects/spring-framework/releases/tag/v5.3.18) by [this](https://github.com/spring-projects/spring-framework/commit/002546b3e4b8d791ea6acccb81eb3168f51abb15) commit and  [**5.2.20**](https://github.com/spring-projects/spring-framework/releases/tag/v5.2.20.RELEASE) by [this](https://github.com/spring-projects/spring-framework/commit/996f701a1916d10202c1d0d281f06ab1f2e1117e) commit .\n\nThe latest releases can be found [here](https://github.com/spring-projects/spring-framework/tags).\n\n## Workaround\nAn official workaround for the issue has been outlined [here](https://spring.io/blog/2022/03/31/spring-framework-rce-early-announcement).\n\n## Dependency tree\n- org.owasp.webgoat:webgoat-server:v8.1.0:-maven\n    - org.springframework.boot:spring-boot-devtools:2.2.2.RELEASE\n        - org.springframework.boot:spring-boot-autoconfigure:2.2.2.RELEASE\n\n\n## References\n* Common Weakness Enumeration: [CWE-184](https://cwe.mitre.org/data/definitions/184.html)\n* Common Weakness Enumeration: [CWE-749](https://cwe.mitre.org/data/definitions/749.html)\n\n","text":"Spring Framework is vulnerable to a flaw in the access restrictions to the security sensitive `ClassLoader` property. The restrictions can be bypassed through alternative paths available with Java9 and later. An attacker can leverage this vulnerability to cause remote code execution (RCE).\n\n**Note** this issue exists because the restrictions that were introduced to prevent exploitation of BDSA-2010-0001 (CVE-2010-1622) can be bypassed on platforms where Java9 and later are in use.\n\nThis vulnerability is listed as exploitable by the Cybersecurity \u0026 Infrastructure Security Agency in their [Known Exploited Vulnerabilities Catalog](https://www.cisa.gov/known-exploited-vulnerabilities-catalog)."},"properties":{"security-severity":"9.1","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-184","external/cwe/cwe-749"]},"defaultConfiguration":{"level":"error"}},{"id":"CVE-2023-20873 spring-boot-autoconfigure 2.2.2.RELEASE: spring-boot-devtools 2.2.2.RELEASE: org.springframework.boot","shortDescription":{"text":"Transitive Dependency: spring-boot-autoconfigure 2.2.2.RELEASE from spring-boot-devtools 2.2.2.RELEASE (CVE-2023-20873)"},"fullDescription":{"text":"Spring framework contains a security bypass vulnerability when `/**` is used as a pattern in Spring Security configuration with the `/cloudfoundryapplication/**` component. The potential for security bypass exists due to the mismatch in pattern matching between Spring Security and Cloud Foundry.\n\n**Note**: The vendor has stated in their [advisory](https://spring.io/security/cve-2023-20873) that this application is not vulnerable if any of the following is true:\n* The application is not deployed to Cloud Foundry.\n* You have disabled Cloud Foundry actuator endpoints with `management.cloudfoundry.enabled` set to `false`.\n* Your application does not have handler mappings that can handle requests to `/cloudfoundryapplication/**`."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| spring-boot-autoconfigure 2.2.2.RELEASE  | 2.7.18  | 3.2.1 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/48431389-4a2f-44ed-8597-55184ffc0e88?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=ee1b331d-05e0-4bd1-b6ef-727c3b98e324)\n\n\n## Description\nSpring framework contains a security bypass vulnerability when `/**` is used as a pattern in Spring Security configuration with the `/cloudfoundryapplication/**` component. The potential for security bypass exists due to the mismatch in pattern matching between Spring Security and Cloud Foundry.\n\n**Note**: The vendor has stated in their [advisory](https://spring.io/security/cve-2023-20873) that this application is not vulnerable if any of the following is true:\n* The application is not deployed to Cloud Foundry.\n* You have disabled Cloud Foundry actuator endpoints with `management.cloudfoundry.enabled` set to `false`.\n* Your application does not have handler mappings that can handle requests to `/cloudfoundryapplication/**`.\n\n## Vulnerabilities(BDSA,CVE)\n:orange_circle: [CVE-2023-20873](https://openhub.net/vulnerabilities/bdsa/CVE-2023-20873) - Improper Access Control\n\n\n\n## Solution\nFixed in [**3.1.0-RC1**](https://github.com/spring-projects/spring-boot/releases/tag/v3.1.0-RC1), [**3.0.6**](https://github.com/spring-projects/spring-boot/releases/tag/v3.0.6) and [**2.7.11**](https://github.com/spring-projects/spring-boot/releases/tag/v2.7.11)  by [this](https://github.com/spring-projects/spring-boot/commit/3522714c13b47af03bf42e7f2d5994af568cb1a7) commit.\n\nFixed in [**2.6.15**](https://github.com/spring-projects/spring-boot/releases/tag/v2.6.15) and [**2.5.15**](https://github.com/spring-projects/spring-boot/releases/tag/v2.5.15) by [this](https://github.com/spring-projects/spring-boot/commit/307f3c339912466e78fcdac648fff95a4edea573) commit.\n\nThe latest stable releases can be found [here](https://github.com/spring-projects/spring-boot/releases).\n\n## Workaround\nThe vendor has advised the following as a workaround:\n\u003eDisable Cloud Foundry actuator endpoints by setting `management.cloudfoundry.enabled` to `false`.\n\n## Dependency tree\n- org.owasp.webgoat:webgoat-server:v8.1.0:-maven\n    - org.springframework.boot:spring-boot-devtools:2.2.2.RELEASE\n        - org.springframework.boot:spring-boot-autoconfigure:2.2.2.RELEASE\n\n\n## References\n* Common Weakness Enumeration: [CWE-284](https://cwe.mitre.org/data/definitions/284.html)\n* Common Weakness Enumeration: [CWE-923](https://cwe.mitre.org/data/definitions/923.html)\n\n","text":"Spring framework contains a security bypass vulnerability when `/**` is used as a pattern in Spring Security configuration with the `/cloudfoundryapplication/**` component. The potential for security bypass exists due to the mismatch in pattern matching between Spring Security and Cloud Foundry.\n\n**Note**: The vendor has stated in their [advisory](https://spring.io/security/cve-2023-20873) that this application is not vulnerable if any of the following is true:\n* The application is not deployed to Cloud Foundry.\n* You have disabled Cloud Foundry actuator endpoints with `management.cloudfoundry.enabled` set to `false`.\n* Your application does not have handler mappings that can handle requests to `/cloudfoundryapplication/**`."},"properties":{"security-severity":"8.9","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-284","external/cwe/cwe-923"]},"defaultConfiguration":{"level":"error"}},{"id":"BDSA-2021-3817 spring-boot-autoconfigure 2.2.2.RELEASE: spring-boot-devtools 2.2.2.RELEASE: org.springframework.boot","shortDescription":{"text":"Transitive Dependency: spring-boot-autoconfigure 2.2.2.RELEASE from spring-boot-devtools 2.2.2.RELEASE (BDSA-2021-3817)"},"fullDescription":{"text":"Apache log4j is vulnerable to a denial-of-service (DoS) when uncontrolled recursion occurs through a self-referencing lookup.  An attacker can trigger a DoS with malicious input data that generates a recursive lookup  and consequent application crash.\n\nSuccessful attacks require the attacker to have access to Thread Context Map (MDC) input, and for log4j configured with non-default pattern layout with a Context Lookup.\n\nOnly the log4j-core JAR file is impacted by this vulnerability. Applications using only the log4j-api JAR file without the log4j-core JAR file are not impacted.\n\nApache Log4j is the only Logging Services subproject affected by this vulnerability. Other projects like Log4net  are not impacted."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| spring-boot-autoconfigure 2.2.2.RELEASE  | 2.7.18  | 3.2.1 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/48431389-4a2f-44ed-8597-55184ffc0e88?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=ee1b331d-05e0-4bd1-b6ef-727c3b98e324)\n\n\n## Description\nApache log4j is vulnerable to a denial-of-service (DoS) when uncontrolled recursion occurs through a self-referencing lookup.  An attacker can trigger a DoS with malicious input data that generates a recursive lookup  and consequent application crash.\n\nSuccessful attacks require the attacker to have access to Thread Context Map (MDC) input, and for log4j configured with non-default pattern layout with a Context Lookup.\n\nOnly the log4j-core JAR file is impacted by this vulnerability. Applications using only the log4j-api JAR file without the log4j-core JAR file are not impacted.\n\nApache Log4j is the only Logging Services subproject affected by this vulnerability. Other projects like Log4net  are not impacted.\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [BDSA-2021-3817](https://openhub.net/vulnerabilities/bdsa/BDSA-2021-3817) - Loop with Unreachable Exit Condition ('Infinite Loop')\n\n\n\n## Solution\nFixed in version [**2.17.0**](https://downloads.apache.org/logging/log4j/2.17.0/)  by [this](https://github.com/apache/logging-log4j2/commit/806023265f8c905b2dd1d81fd2458f64b2ea0b5e) commit.\n\nFixed in [**2.12.3-rc1**](https://github.com/apache/logging-log4j2/releases/tag/log4j-2.12.3-rc1) by [this](https://github.com/apache/logging-log4j2/commit/bf7e916df6335713fe2219c7b3b523fb509deabc) commit.\n\nFixed in [**2.3.1-rc1**](https://github.com/apache/logging-log4j2/releases/tag/log4j-2.3.1-rc1) by [this](https://github.com/apache/logging-log4j2/commit/ce6b78d082aae89089cb3ad25cdd46e9ec70a70b) commit.\n\n\nThe latest stable releases can be found [here](https://github.com/apache/logging-log4j2/releases).\n\n## Workaround\nThe vendor advises that  this vulnerability can can be mitigated through one of the following:\n\n* In PatternLayout in the logging configuration, replace Context Lookups like `${ctx:loginId}` or `$${ctx:loginId}` with Thread Context Map patterns `(%X, %mdc, or %MDC)`.\n\n* Alternatively,  remove references in the configuration to Context Lookups like `${ctx:loginId}` or `$${ctx:loginId}` where they originate from sources external to the application such as HTTP headers or user input.\n\n## Dependency tree\n- org.owasp.webgoat:webgoat-server:v8.1.0:-maven\n    - org.springframework.boot:spring-boot-devtools:2.2.2.RELEASE\n        - org.springframework.boot:spring-boot-autoconfigure:2.2.2.RELEASE\n\n\n## References\n* Common Weakness Enumeration: [CWE-835](https://cwe.mitre.org/data/definitions/835.html)\n\n","text":"Apache log4j is vulnerable to a denial-of-service (DoS) when uncontrolled recursion occurs through a self-referencing lookup.  An attacker can trigger a DoS with malicious input data that generates a recursive lookup  and consequent application crash.\n\nSuccessful attacks require the attacker to have access to Thread Context Map (MDC) input, and for log4j configured with non-default pattern layout with a Context Lookup.\n\nOnly the log4j-core JAR file is impacted by this vulnerability. Applications using only the log4j-api JAR file without the log4j-core JAR file are not impacted.\n\nApache Log4j is the only Logging Services subproject affected by this vulnerability. Other projects like Log4net  are not impacted."},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-835"]},"defaultConfiguration":{"level":"warning"}},{"id":"BDSA-2021-3887 spring-boot-autoconfigure 2.2.2.RELEASE: spring-boot-devtools 2.2.2.RELEASE: org.springframework.boot","shortDescription":{"text":"Transitive Dependency: spring-boot-autoconfigure 2.2.2.RELEASE from spring-boot-devtools 2.2.2.RELEASE (BDSA-2021-3887)"},"fullDescription":{"text":"Apache Log4j contains a remote code execution (RCE) vulnerability. This allows an attacker that has permissions to modify the logging configuration files to input a malicious JDBC Appender with a data source referencing a JDNI URI. This can then lead to RCE.\n\n**Note:** This vulnerability impacts log4j-core."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| spring-boot-autoconfigure 2.2.2.RELEASE  | 2.7.18  | 3.2.1 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/48431389-4a2f-44ed-8597-55184ffc0e88?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=ee1b331d-05e0-4bd1-b6ef-727c3b98e324)\n\n\n## Description\nApache Log4j contains a remote code execution (RCE) vulnerability. This allows an attacker that has permissions to modify the logging configuration files to input a malicious JDBC Appender with a data source referencing a JDNI URI. This can then lead to RCE.\n\n**Note:** This vulnerability impacts log4j-core.\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [BDSA-2021-3887](https://openhub.net/vulnerabilities/bdsa/BDSA-2021-3887) - Weak Input Validation\n\n\n\n## Solution\nFixed in versions:\n\n* [**2.3.2-rc1**](https://github.com/apache/logging-log4j2/releases/tag/log4j-2.3.2-rc1) by [this](https://github.com/apache/logging-log4j2/commit/ae4dc0c1a6389ae895f60451cd87e97e7b9d85c1) commit.\n* [**2.12.4-rc1**](https://github.com/apache/logging-log4j2/releases/tag/log4j-2.12.4-rc1) by [this](https://github.com/apache/logging-log4j2/commit/b3879958cb3b75eb16bf27e970538b6e4e130f1c) commit.\n* [**2.17.1-rc1**](https://github.com/apache/logging-log4j2/releases/tag/log4j-2.17.1-rc1) by [this](https://github.com/apache/logging-log4j2/commit/05db5f9527254632b59aed2a1d78a32c5ab74f16) commit.\n\nThe latest stable releases can be found [here](https://logging.apache.org/log4j/2.x/download.html).\n\n\n\n## Dependency tree\n- org.owasp.webgoat:webgoat-server:v8.1.0:-maven\n    - org.springframework.boot:spring-boot-devtools:2.2.2.RELEASE\n        - org.springframework.boot:spring-boot-autoconfigure:2.2.2.RELEASE\n\n\n## References\n* Common Weakness Enumeration: [CWE-20](https://cwe.mitre.org/data/definitions/20.html)\n\n","text":"Apache Log4j contains a remote code execution (RCE) vulnerability. This allows an attacker that has permissions to modify the logging configuration files to input a malicious JDBC Appender with a data source referencing a JDNI URI. This can then lead to RCE.\n\n**Note:** This vulnerability impacts log4j-core."},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-20"]},"defaultConfiguration":{"level":"warning"}},{"id":"CVE-2022-27772 spring-boot-autoconfigure 2.2.2.RELEASE: spring-boot-devtools 2.2.2.RELEASE: org.springframework.boot","shortDescription":{"text":"Transitive Dependency: spring-boot-autoconfigure 2.2.2.RELEASE from spring-boot-devtools 2.2.2.RELEASE (CVE-2022-27772)"},"fullDescription":{"text":"Spring Boot is vulnerable to privilege escalation due to a race condition which occurs during the creation of a temporary directory. A local attacker could create their own temporary directory by racing against Spring Boot and supply their own configuration files which would allow for the full takeover of the application."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| spring-boot-autoconfigure 2.2.2.RELEASE  | 2.7.18  | 3.2.1 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/48431389-4a2f-44ed-8597-55184ffc0e88?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=ee1b331d-05e0-4bd1-b6ef-727c3b98e324)\n\n\n## Description\nSpring Boot is vulnerable to privilege escalation due to a race condition which occurs during the creation of a temporary directory. A local attacker could create their own temporary directory by racing against Spring Boot and supply their own configuration files which would allow for the full takeover of the application.\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [CVE-2022-27772](https://openhub.net/vulnerabilities/bdsa/CVE-2022-27772) - Race Condition due to Improper Synchronization\n\n\n\n## Solution\nFixed in [**2.2.11**](https://github.com/spring-projects/spring-boot/releases/tag/v2.2.11.RELEASE) by [this](https://github.com/spring-projects/spring-boot/commit/667ccdae84822072f9ea1a27ed5c77964c71002d) commit.\n\nThe latest stable releases can be found [here](https://github.com/spring-projects/spring-boot/releases).\n\n## Workaround\nAccording to the [Github Security Advisory](https://github.com/JLLeitschuh/security-research/security/advisories/GHSA-cm59-pr5q-cw85), setting the `java.io.tmpdir` system environment variable to a directory that is exclusively owned by the executing user will fix this vulnerability for all operating systems.\n\n## Dependency tree\n- org.owasp.webgoat:webgoat-server:v8.1.0:-maven\n    - org.springframework.boot:spring-boot-devtools:2.2.2.RELEASE\n        - org.springframework.boot:spring-boot-autoconfigure:2.2.2.RELEASE\n\n\n## References\n* Common Weakness Enumeration: [CWE-362](https://cwe.mitre.org/data/definitions/362.html)\n* Common Weakness Enumeration: [CWE-379](https://cwe.mitre.org/data/definitions/379.html)\n\n","text":"Spring Boot is vulnerable to privilege escalation due to a race condition which occurs during the creation of a temporary directory. A local attacker could create their own temporary directory by racing against Spring Boot and supply their own configuration files which would allow for the full takeover of the application."},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-362","external/cwe/cwe-379"]},"defaultConfiguration":{"level":"warning"}},{"id":"CVE-2023-20883 spring-boot-autoconfigure 2.2.2.RELEASE: spring-boot-devtools 2.2.2.RELEASE: org.springframework.boot","shortDescription":{"text":"Transitive Dependency: spring-boot-autoconfigure 2.2.2.RELEASE from spring-boot-devtools 2.2.2.RELEASE (CVE-2023-20883)"},"fullDescription":{"text":"Spring Boot is vulnerable to denial-of-service (DoS) via the welcome page when used to serve an application behind a reverse proxy cache. This will cause users to continuously be served a 404 response, preventing standard application use.\n\n\n**Note:** Spring have provided the following guidance for vulnerable criteria. \nAn application is vulnerable if all of the following are true:\n\n- \"The application has Spring MVC auto-configuration enabled. This is the case by default if Spring MVC is on the classpath.\"\n- \"The application makes use of Spring Boot's welcome page support, either static or templated.\"\n- \"Your application is deployed behind a proxy which caches 404 responses.\"\n\nThe application is not vulnerable if any of the following are true:\n\n- \"Spring MVC auto-configuration is disabled. This is true if `WebMvcAutoConfiguration` is explicitly excluded, if Spring MVC is not on the classpath, or if `spring.main.web-application-type` is set to a value other than `SERVLET`.\"\n- \"The application does not use Spring Boot's welcome page support.\"\n- \"You do not have a proxy which caches 404 responses.\""},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| spring-boot-autoconfigure 2.2.2.RELEASE  | 2.7.18  | 3.2.1 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/48431389-4a2f-44ed-8597-55184ffc0e88?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=ee1b331d-05e0-4bd1-b6ef-727c3b98e324)\n\n\n## Description\nSpring Boot is vulnerable to denial-of-service (DoS) via the welcome page when used to serve an application behind a reverse proxy cache. This will cause users to continuously be served a 404 response, preventing standard application use.\n\n\n**Note:** Spring have provided the following guidance for vulnerable criteria. \nAn application is vulnerable if all of the following are true:\n\n- \"The application has Spring MVC auto-configuration enabled. This is the case by default if Spring MVC is on the classpath.\"\n- \"The application makes use of Spring Boot's welcome page support, either static or templated.\"\n- \"Your application is deployed behind a proxy which caches 404 responses.\"\n\nThe application is not vulnerable if any of the following are true:\n\n- \"Spring MVC auto-configuration is disabled. This is true if `WebMvcAutoConfiguration` is explicitly excluded, if Spring MVC is not on the classpath, or if `spring.main.web-application-type` is set to a value other than `SERVLET`.\"\n- \"The application does not use Spring Boot's welcome page support.\"\n- \"You do not have a proxy which caches 404 responses.\"\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [CVE-2023-20883](https://openhub.net/vulnerabilities/bdsa/CVE-2023-20883) - Insufficient Verification of Data Authenticity\n\n\n\n## Solution\nFixed in versions\n- [**2.5.15**](https://github.com/spring-projects/spring-boot/releases/tag/v2.5.15) by [this](https://github.com/spring-projects/spring-boot/commit/d7ff379fb8bb2c33319afeb45a343116b59e0ee2) commit,\n- [**2.6.15**](https://github.com/spring-projects/spring-boot/releases/tag/v2.6.15) by [this](https://github.com/spring-projects/spring-boot/commit/d7ff379fb8bb2c33319afeb45a343116b59e0ee2) commit,\n- [**2.7.12**](https://github.com/spring-projects/spring-boot/releases/tag/v2.7.12) by [this](https://github.com/spring-projects/spring-boot/commit/418dd1ba5bdad79b55a043000164bfcbda2acd78) commit,\n- [**3.0.7**](https://github.com/spring-projects/spring-boot/releases/tag/v3.0.7) by [this](https://github.com/spring-projects/spring-boot/commit/418dd1ba5bdad79b55a043000164bfcbda2acd78) commit,\n- [**3.1.0**](https://github.com/spring-projects/spring-boot/releases/tag/v3.1.0) by [this](https://github.com/spring-projects/spring-boot/commit/418dd1ba5bdad79b55a043000164bfcbda2acd78) commit.\n\nThe latest stable releases can be found [here](https://github.com/spring-projects/spring-boot/releases).\n\n## Workaround\nThe vendor has supplied the following workaround:\n\u003e \"configure the reverse proxy not to cache 404 responses and/or not to cache responses to requests to the root (`/`) of the application.\"\n\n## Dependency tree\n- org.owasp.webgoat:webgoat-server:v8.1.0:-maven\n    - org.springframework.boot:spring-boot-devtools:2.2.2.RELEASE\n        - org.springframework.boot:spring-boot-autoconfigure:2.2.2.RELEASE\n\n\n## References\n* Common Weakness Enumeration: [CWE-345](https://cwe.mitre.org/data/definitions/345.html)\n\n","text":"Spring Boot is vulnerable to denial-of-service (DoS) via the welcome page when used to serve an application behind a reverse proxy cache. This will cause users to continuously be served a 404 response, preventing standard application use.\n\n\n**Note:** Spring have provided the following guidance for vulnerable criteria. \nAn application is vulnerable if all of the following are true:\n\n- \"The application has Spring MVC auto-configuration enabled. This is the case by default if Spring MVC is on the classpath.\"\n- \"The application makes use of Spring Boot's welcome page support, either static or templated.\"\n- \"Your application is deployed behind a proxy which caches 404 responses.\"\n\nThe application is not vulnerable if any of the following are true:\n\n- \"Spring MVC auto-configuration is disabled. This is true if `WebMvcAutoConfiguration` is explicitly excluded, if Spring MVC is not on the classpath, or if `spring.main.web-application-type` is set to a value other than `SERVLET`.\"\n- \"The application does not use Spring Boot's welcome page support.\"\n- \"You do not have a proxy which caches 404 responses.\""},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-345"]},"defaultConfiguration":{"level":"warning"}},{"id":"CVE-2023-34055 spring-boot-autoconfigure 2.2.2.RELEASE: spring-boot-devtools 2.2.2.RELEASE: org.springframework.boot","shortDescription":{"text":"Transitive Dependency: spring-boot-autoconfigure 2.2.2.RELEASE from spring-boot-devtools 2.2.2.RELEASE (CVE-2023-34055)"},"fullDescription":{"text":"Spring Boot is vulnerable to denial-of-service (DoS). An unauthenticated user could trigger the vulnerability by providing specially crafted HTTP requests to a web metrics endpoint."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| spring-boot-autoconfigure 2.2.2.RELEASE  | 2.7.18  | 3.2.1 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/48431389-4a2f-44ed-8597-55184ffc0e88?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=ee1b331d-05e0-4bd1-b6ef-727c3b98e324)\n\n\n## Description\nSpring Boot is vulnerable to denial-of-service (DoS). An unauthenticated user could trigger the vulnerability by providing specially crafted HTTP requests to a web metrics endpoint.\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [CVE-2023-34055](https://openhub.net/vulnerabilities/bdsa/CVE-2023-34055) - Third-party component usage\n\n\n\n## Solution\nFixed in:\n* [**3.1.6**](https://github.com/spring-projects/spring-boot/releases/tag/v3.1.6)\n* [**3.0.13**](https://github.com/spring-projects/spring-boot/releases/tag/v3.0.13)\n* [**2.7.18**](https://github.com/spring-projects/spring-boot/releases/tag/v2.7.18)\n\nThe latest stable releases can be found [here](https://github.com/spring-projects/spring-boot/releases).\n\n## Workaround\nThe vendor notes the following:\n\u003e As a temporary workaround, Spring Boot users can choose to disable web metrics with the following property: `management.metrics.enable.http.server.requests=false`\n\n## Dependency tree\n- org.owasp.webgoat:webgoat-server:v8.1.0:-maven\n    - org.springframework.boot:spring-boot-devtools:2.2.2.RELEASE\n        - org.springframework.boot:spring-boot-autoconfigure:2.2.2.RELEASE\n\n\n\n","text":"Spring Boot is vulnerable to denial-of-service (DoS). An unauthenticated user could trigger the vulnerability by providing specially crafted HTTP requests to a web metrics endpoint."},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","transitive_dependency","patch_available"]},"defaultConfiguration":{"level":"warning"}},{"id":"CVE-2022-1471 snakeyaml 1.25: spring-boot-starter-test 2.2.2.RELEASE: org.yaml","shortDescription":{"text":"Transitive Dependency: snakeyaml 1.25 from spring-boot-starter-test 2.2.2.RELEASE (CVE-2022-1471)"},"fullDescription":{"text":"SnakeYAML is vulnerable to remote code execution (RCE) when used in an application to parse untrusted user-supplied YAML files. A remote attacker could craft a malicious YAML file that when deserialized allows arbitrary command execution on the target system."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| snakeyaml 1.25  | 1.33.0.SP1-redhat-00001  | 2.2 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/59ede022-fde8-405c-8dfa-a2dabf944646?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=7d5b8a95-2ae3-4f89-9b3b-d47c44f9d187)\n\n\n## Description\nSnakeYAML is vulnerable to remote code execution (RCE) when used in an application to parse untrusted user-supplied YAML files. A remote attacker could craft a malicious YAML file that when deserialized allows arbitrary command execution on the target system.\n\n## Vulnerabilities(BDSA,CVE)\n:orange_circle: [CVE-2022-1471](https://openhub.net/vulnerabilities/bdsa/CVE-2022-1471) - Insecure Object Deserialization\n\n\n\n## Solution\nFixed in version [**2.0**](https://bitbucket.org/snakeyaml/snakeyaml/src/snakeyaml-2.0/) by [this](https://bitbucket.org/snakeyaml/snakeyaml/commits/2b8d47c8bcfd402e7a682b7b2674e8d0cb25e522) commit.\n\nThe latest stable releases are available [here](https://bitbucket.org/snakeyaml/snakeyaml/downloads/?tab=tags).\n\n## Workaround\nThe `SafeConstructor()` class may be used instead of `Constructor()` while parsing untrusted content.\n\n## Dependency tree\n- org.owasp.webgoat.lesson:http-basics:v8.1.0:-maven\n    - org.springframework.boot:spring-boot-starter-test:2.2.2.RELEASE\n        - org.springframework.boot:spring-boot-starter:2.2.2.RELEASE\n            - org.yaml:snakeyaml:1.25\n\n\n## References\n* Common Weakness Enumeration: [CWE-502](https://cwe.mitre.org/data/definitions/502.html)\n\n","text":"SnakeYAML is vulnerable to remote code execution (RCE) when used in an application to parse untrusted user-supplied YAML files. A remote attacker could craft a malicious YAML file that when deserialized allows arbitrary command execution on the target system."},"properties":{"security-severity":"8.9","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-502"]},"defaultConfiguration":{"level":"error"}},{"id":"CVE-2017-18640 snakeyaml 1.25: spring-boot-starter-test 2.2.2.RELEASE: org.yaml","shortDescription":{"text":"Transitive Dependency: snakeyaml 1.25 from spring-boot-starter-test 2.2.2.RELEASE (CVE-2017-18640)"},"fullDescription":{"text":"SnakeYAML is vulnerable to a billion laughs attack. An attacker able to supply specially crafted input to the application could cause excessive memory consumption, resulting in a denial-of-service (DoS)."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| snakeyaml 1.25  | 1.33.0.SP1-redhat-00001  | 2.2 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/59ede022-fde8-405c-8dfa-a2dabf944646?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=7d5b8a95-2ae3-4f89-9b3b-d47c44f9d187)\n\n\n## Description\nSnakeYAML is vulnerable to a billion laughs attack. An attacker able to supply specially crafted input to the application could cause excessive memory consumption, resulting in a denial-of-service (DoS).\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [CVE-2017-18640](https://openhub.net/vulnerabilities/bdsa/CVE-2017-18640) - Uncontrolled Resource Consumption\n\n\n\n## Solution\nFixed in version [**1.26**](https://bitbucket.org/asomov/snakeyaml/src/snakeyaml-1.26/) by [this](https://github.com/snakeyaml/snakeyaml/commit/da11ddbd91c1f8392ea932b37fa48110fa54ed8c) commit.\n\n\n\n## Dependency tree\n- org.owasp.webgoat.lesson:http-basics:v8.1.0:-maven\n    - org.springframework.boot:spring-boot-starter-test:2.2.2.RELEASE\n        - org.springframework.boot:spring-boot-starter:2.2.2.RELEASE\n            - org.yaml:snakeyaml:1.25\n\n\n## References\n* Common Weakness Enumeration: [CWE-400](https://cwe.mitre.org/data/definitions/400.html)\n* Common Weakness Enumeration: [CWE-409](https://cwe.mitre.org/data/definitions/409.html)\n\n","text":"SnakeYAML is vulnerable to a billion laughs attack. An attacker able to supply specially crafted input to the application could cause excessive memory consumption, resulting in a denial-of-service (DoS)."},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-400","external/cwe/cwe-409"]},"defaultConfiguration":{"level":"warning"}},{"id":"CVE-2022-38750 snakeyaml 1.25: spring-boot-starter-test 2.2.2.RELEASE: org.yaml","shortDescription":{"text":"Transitive Dependency: snakeyaml 1.25 from spring-boot-starter-test 2.2.2.RELEASE (CVE-2022-38750)"},"fullDescription":{"text":"SnakeYAML is vulnerable to a stack-based buffer overflow issue when parsing untrusted YAML files. An attacker could exploit this by providing crafted input in order to cause a denial-of-service (DoS) condition. \n\n**Note**: The vendor disputes the validity of this issue and other similar recently reported issues and have released an [advisory](https://bitbucket.org/snakeyaml/snakeyaml/wiki/CVE%20\u0026%20NIST.md) in response."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| snakeyaml 1.25  | 1.33.0.SP1-redhat-00001  | 2.2 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/59ede022-fde8-405c-8dfa-a2dabf944646?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=7d5b8a95-2ae3-4f89-9b3b-d47c44f9d187)\n\n\n## Description\nSnakeYAML is vulnerable to a stack-based buffer overflow issue when parsing untrusted YAML files. An attacker could exploit this by providing crafted input in order to cause a denial-of-service (DoS) condition. \n\n**Note**: The vendor disputes the validity of this issue and other similar recently reported issues and have released an [advisory](https://bitbucket.org/snakeyaml/snakeyaml/wiki/CVE%20\u0026%20NIST.md) in response.\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [CVE-2022-38750](https://openhub.net/vulnerabilities/bdsa/CVE-2022-38750) - Stack-based Buffer Overflow\n\n\n\n## Solution\nFixed in [**1.31**](https://mvnrepository.com/artifact/org.yaml/snakeyaml/1.31) by [this](https://bitbucket.org/snakeyaml/snakeyaml/commits/fc30078) commit.\n\nThe latest stable releases can be found [here](https://mvnrepository.com/artifact/org.yaml/snakeyaml).\n\n\n\n## Dependency tree\n- org.owasp.webgoat.lesson:http-basics:v8.1.0:-maven\n    - org.springframework.boot:spring-boot-starter-test:2.2.2.RELEASE\n        - org.springframework.boot:spring-boot-starter:2.2.2.RELEASE\n            - org.yaml:snakeyaml:1.25\n\n\n## References\n* Common Weakness Enumeration: [CWE-121](https://cwe.mitre.org/data/definitions/121.html)\n\n","text":"SnakeYAML is vulnerable to a stack-based buffer overflow issue when parsing untrusted YAML files. An attacker could exploit this by providing crafted input in order to cause a denial-of-service (DoS) condition. \n\n**Note**: The vendor disputes the validity of this issue and other similar recently reported issues and have released an [advisory](https://bitbucket.org/snakeyaml/snakeyaml/wiki/CVE%20\u0026%20NIST.md) in response."},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-121"]},"defaultConfiguration":{"level":"warning"}},{"id":"CVE-2022-25857 snakeyaml 1.25: spring-boot-starter-test 2.2.2.RELEASE: org.yaml","shortDescription":{"text":"Transitive Dependency: snakeyaml 1.25 from spring-boot-starter-test 2.2.2.RELEASE (CVE-2022-25857)"},"fullDescription":{"text":"SnakeYAML is vulnerable to denial-of-service (DoS) due to a lack of nested depth limitation for collections. An attacker could exploit this by providing crafted input in order to cause a crash. \n\n**Note**: The vendor disputes the validity of this issue and other similar recently reported issues and have released an [advisory](https://bitbucket.org/snakeyaml/snakeyaml/wiki/CVE%20\u0026%20NIST.md) in response."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| snakeyaml 1.25  | 1.33.0.SP1-redhat-00001  | 2.2 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/59ede022-fde8-405c-8dfa-a2dabf944646?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=7d5b8a95-2ae3-4f89-9b3b-d47c44f9d187)\n\n\n## Description\nSnakeYAML is vulnerable to denial-of-service (DoS) due to a lack of nested depth limitation for collections. An attacker could exploit this by providing crafted input in order to cause a crash. \n\n**Note**: The vendor disputes the validity of this issue and other similar recently reported issues and have released an [advisory](https://bitbucket.org/snakeyaml/snakeyaml/wiki/CVE%20\u0026%20NIST.md) in response.\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [CVE-2022-25857](https://openhub.net/vulnerabilities/bdsa/CVE-2022-25857) - Uncontrolled Resource Consumption\n\n\n\n## Solution\nFixed in [**1.31**](https://mvnrepository.com/artifact/org.yaml/snakeyaml/1.31) by [this](https://bitbucket.org/snakeyaml/snakeyaml/commits/fc30078) commit.\n\nThe latest stable releases can be found [here](https://mvnrepository.com/artifact/org.yaml/snakeyaml).\n\n\n\n## Dependency tree\n- org.owasp.webgoat.lesson:http-basics:v8.1.0:-maven\n    - org.springframework.boot:spring-boot-starter-test:2.2.2.RELEASE\n        - org.springframework.boot:spring-boot-starter:2.2.2.RELEASE\n            - org.yaml:snakeyaml:1.25\n\n\n## References\n* Common Weakness Enumeration: [CWE-400](https://cwe.mitre.org/data/definitions/400.html)\n\n","text":"SnakeYAML is vulnerable to denial-of-service (DoS) due to a lack of nested depth limitation for collections. An attacker could exploit this by providing crafted input in order to cause a crash. \n\n**Note**: The vendor disputes the validity of this issue and other similar recently reported issues and have released an [advisory](https://bitbucket.org/snakeyaml/snakeyaml/wiki/CVE%20\u0026%20NIST.md) in response."},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-400"]},"defaultConfiguration":{"level":"warning"}},{"id":"CVE-2022-38751 snakeyaml 1.25: spring-boot-starter-test 2.2.2.RELEASE: org.yaml","shortDescription":{"text":"Transitive Dependency: snakeyaml 1.25 from spring-boot-starter-test 2.2.2.RELEASE (CVE-2022-38751)"},"fullDescription":{"text":"SnakeYAML is vulnerable to denial-of-service (DoS) due to a failure to parse regular expressions that contain large values. A remote attacker could cause a vulnerable application to crash by passing a maliciously crafted regular expression to that application."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| snakeyaml 1.25  | 1.33.0.SP1-redhat-00001  | 2.2 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/59ede022-fde8-405c-8dfa-a2dabf944646?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=7d5b8a95-2ae3-4f89-9b3b-d47c44f9d187)\n\n\n## Description\nSnakeYAML is vulnerable to denial-of-service (DoS) due to a failure to parse regular expressions that contain large values. A remote attacker could cause a vulnerable application to crash by passing a maliciously crafted regular expression to that application.\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [CVE-2022-38751](https://openhub.net/vulnerabilities/bdsa/CVE-2022-38751) - Improper Handling of Values\n\n\n\n## Solution\nFixed in version [**1.31**](https://mvnrepository.com/artifact/org.yaml/snakeyaml/1.31) by [this](https://bitbucket.org/snakeyaml/snakeyaml/commits/f3ab4e0f54c37ddb10f00b71d04187bb0ef1799c) commit and [this](https://bitbucket.org/snakeyaml/snakeyaml/commits/6aedd33a811f7347c5dae2940e75940966f59466) commit.\n\nThe latest stable releases can be found [here](https://mvnrepository.com/artifact/org.yaml/snakeyaml).\n\n\n\n## Dependency tree\n- org.owasp.webgoat.lesson:http-basics:v8.1.0:-maven\n    - org.springframework.boot:spring-boot-starter-test:2.2.2.RELEASE\n        - org.springframework.boot:spring-boot-starter:2.2.2.RELEASE\n            - org.yaml:snakeyaml:1.25\n\n\n## References\n* Common Weakness Enumeration: [CWE-229](https://cwe.mitre.org/data/definitions/229.html)\n\n","text":"SnakeYAML is vulnerable to denial-of-service (DoS) due to a failure to parse regular expressions that contain large values. A remote attacker could cause a vulnerable application to crash by passing a maliciously crafted regular expression to that application."},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-229"]},"defaultConfiguration":{"level":"warning"}},{"id":"CVE-2022-38752 snakeyaml 1.25: spring-boot-starter-test 2.2.2.RELEASE: org.yaml","shortDescription":{"text":"Transitive Dependency: snakeyaml 1.25 from spring-boot-starter-test 2.2.2.RELEASE (CVE-2022-38752)"},"fullDescription":{"text":"SnakeYAML is vulnerable to denial-of-service (DoS) due to a stack overflow which can be triggered by parsing a crafted file. [According to the vendor](https://bitbucket.org/snakeyaml/snakeyaml/wiki/CVE%20\u0026%20NIST.md), such vulnerabilities pose low risks unless the parser input is designed to come from untrusted sources on the internet."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| snakeyaml 1.25  | 1.33.0.SP1-redhat-00001  | 2.2 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/59ede022-fde8-405c-8dfa-a2dabf944646?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=7d5b8a95-2ae3-4f89-9b3b-d47c44f9d187)\n\n\n## Description\nSnakeYAML is vulnerable to denial-of-service (DoS) due to a stack overflow which can be triggered by parsing a crafted file. [According to the vendor](https://bitbucket.org/snakeyaml/snakeyaml/wiki/CVE%20\u0026%20NIST.md), such vulnerabilities pose low risks unless the parser input is designed to come from untrusted sources on the internet.\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [CVE-2022-38752](https://openhub.net/vulnerabilities/bdsa/CVE-2022-38752) - Stack-based Buffer Overflow\n\n\n\n## Solution\nFixed in [**1.32**](https://bitbucket.org/snakeyaml/snakeyaml/downloads/?tab=tags).\n\n\n\n## Dependency tree\n- org.owasp.webgoat.lesson:http-basics:v8.1.0:-maven\n    - org.springframework.boot:spring-boot-starter-test:2.2.2.RELEASE\n        - org.springframework.boot:spring-boot-starter:2.2.2.RELEASE\n            - org.yaml:snakeyaml:1.25\n\n\n## References\n* Common Weakness Enumeration: [CWE-121](https://cwe.mitre.org/data/definitions/121.html)\n* Common Weakness Enumeration: [CWE-674](https://cwe.mitre.org/data/definitions/674.html)\n\n","text":"SnakeYAML is vulnerable to denial-of-service (DoS) due to a stack overflow which can be triggered by parsing a crafted file. [According to the vendor](https://bitbucket.org/snakeyaml/snakeyaml/wiki/CVE%20\u0026%20NIST.md), such vulnerabilities pose low risks unless the parser input is designed to come from untrusted sources on the internet."},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-121","external/cwe/cwe-674"]},"defaultConfiguration":{"level":"warning"}},{"id":"CVE-2022-41854 snakeyaml 1.25: spring-boot-starter-test 2.2.2.RELEASE: org.yaml","shortDescription":{"text":"Transitive Dependency: snakeyaml 1.25 from spring-boot-starter-test 2.2.2.RELEASE (CVE-2022-41854)"},"fullDescription":{"text":"Snakeyaml contains a vulnerability that can lead to an uncaught exception in its `java.util.AbstractSet.hashCode` component. This can subsequently cause a stack-based buffer overflow. An attacker could exploit this flaw by supplying a crafted YAML file."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| snakeyaml 1.25  | 1.33.0.SP1-redhat-00001  | 2.2 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/59ede022-fde8-405c-8dfa-a2dabf944646?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=7d5b8a95-2ae3-4f89-9b3b-d47c44f9d187)\n\n\n## Description\nSnakeyaml contains a vulnerability that can lead to an uncaught exception in its `java.util.AbstractSet.hashCode` component. This can subsequently cause a stack-based buffer overflow. An attacker could exploit this flaw by supplying a crafted YAML file.\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [CVE-2022-41854](https://openhub.net/vulnerabilities/bdsa/CVE-2022-41854) - Stack-based Buffer Overflow\n\n\n\n## Solution\nFixed in version [**1.32**](https://bitbucket.org/snakeyaml/snakeyaml/downloads/?tab=tags) by [this](https://bitbucket.org/snakeyaml/snakeyaml/commits/5ee00863a816f2a023d35a7512b5f742c9a36b5a) commit.\n\nThe latest stable releases can be found [here](https://bitbucket.org/snakeyaml/snakeyaml/downloads/?tab=tags).\n\n\n\n## Dependency tree\n- org.owasp.webgoat.lesson:http-basics:v8.1.0:-maven\n    - org.springframework.boot:spring-boot-starter-test:2.2.2.RELEASE\n        - org.springframework.boot:spring-boot-starter:2.2.2.RELEASE\n            - org.yaml:snakeyaml:1.25\n\n\n## References\n* Common Weakness Enumeration: [CWE-121](https://cwe.mitre.org/data/definitions/121.html)\n\n","text":"Snakeyaml contains a vulnerability that can lead to an uncaught exception in its `java.util.AbstractSet.hashCode` component. This can subsequently cause a stack-based buffer overflow. An attacker could exploit this flaw by supplying a crafted YAML file."},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-121"]},"defaultConfiguration":{"level":"warning"}},{"id":"CVE-2022-38749 snakeyaml 1.25: spring-boot-starter-test 2.2.2.RELEASE: org.yaml","shortDescription":{"text":"Transitive Dependency: snakeyaml 1.25 from spring-boot-starter-test 2.2.2.RELEASE (CVE-2022-38749)"},"fullDescription":{"text":"SnakeYAML is vulnerable to a stack-based buffer overflow issue when parsing untrusted YAML files. An attacker could exploit this by providing crafted input in order to cause a denial-of-service (DoS) condition. \n\n**Note**: The vendor disputes the validity of this issue and other similar recently reported issues and have released an [advisory](https://bitbucket.org/snakeyaml/snakeyaml/wiki/CVE%20\u0026%20NIST.md) in response."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| snakeyaml 1.25  | 1.33.0.SP1-redhat-00001  | 2.2 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/59ede022-fde8-405c-8dfa-a2dabf944646?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=7d5b8a95-2ae3-4f89-9b3b-d47c44f9d187)\n\n\n## Description\nSnakeYAML is vulnerable to a stack-based buffer overflow issue when parsing untrusted YAML files. An attacker could exploit this by providing crafted input in order to cause a denial-of-service (DoS) condition. \n\n**Note**: The vendor disputes the validity of this issue and other similar recently reported issues and have released an [advisory](https://bitbucket.org/snakeyaml/snakeyaml/wiki/CVE%20\u0026%20NIST.md) in response.\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [CVE-2022-38749](https://openhub.net/vulnerabilities/bdsa/CVE-2022-38749) - Stack-based Buffer Overflow\n\n\n\n## Solution\nFixed in [**1.31**](https://mvnrepository.com/artifact/org.yaml/snakeyaml/1.31) by [this](https://bitbucket.org/snakeyaml/snakeyaml/commits/fc30078) commit.\n\nThe latest stable releases can be found [here](https://mvnrepository.com/artifact/org.yaml/snakeyaml).\n\n\n\n## Dependency tree\n- org.owasp.webgoat.lesson:http-basics:v8.1.0:-maven\n    - org.springframework.boot:spring-boot-starter-test:2.2.2.RELEASE\n        - org.springframework.boot:spring-boot-starter:2.2.2.RELEASE\n            - org.yaml:snakeyaml:1.25\n\n\n## References\n* Common Weakness Enumeration: [CWE-121](https://cwe.mitre.org/data/definitions/121.html)\n\n","text":"SnakeYAML is vulnerable to a stack-based buffer overflow issue when parsing untrusted YAML files. An attacker could exploit this by providing crafted input in order to cause a denial-of-service (DoS) condition. \n\n**Note**: The vendor disputes the validity of this issue and other similar recently reported issues and have released an [advisory](https://bitbucket.org/snakeyaml/snakeyaml/wiki/CVE%20\u0026%20NIST.md) in response."},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-121"]},"defaultConfiguration":{"level":"warning"}},{"id":"CVE-2020-13956 httpclient 4.5.10: wiremock 2.8.0: org.apache.httpcomponents","shortDescription":{"text":"Transitive Dependency: httpclient 4.5.10 from wiremock 2.8.0 (CVE-2020-13956)"},"fullDescription":{"text":"Apache HttpClient is vulnerable to the disclosure and modification of data due to the mishandling of malformed URIs. An attacker could pass a maliciously crafted request to a vulnerable application, which will then be executed on an incorrect host."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| httpclient 4.5.10  | 4.5.14  | 4.5.14 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/09446f80-5327-4430-adb1-b9e9a41179bc?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=f624d758-10d3-449d-96d2-d4fc12499fda)\n\n\n## Description\nApache HttpClient is vulnerable to the disclosure and modification of data due to the mishandling of malformed URIs. An attacker could pass a maliciously crafted request to a vulnerable application, which will then be executed on an incorrect host.\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [CVE-2020-13956](https://openhub.net/vulnerabilities/bdsa/CVE-2020-13956) - Weak Input Validation\n\n\n\n## Solution\nFixed in [**5.0.3**](https://hc.apache.org/downloads.cgi) by [this](https://github.com/apache/httpcomponents-client/commit/894234a5aeb9958e7e466c383e4d0ded17a9a813) commit, and in [**4.5.13**](https://hc.apache.org/downloads.cgi) by [this](https://github.com/apache/httpcomponents-client/commit/e628b4c5c464c2fa346385596cc78e035a91a62e) commit.\n\n\n\n## Dependency tree\n- org.owasp.webgoat.lesson:xxe:v8.1.0:-maven\n    - com.github.tomakehurst:wiremock:2.8.0\n        - org.apache.httpcomponents:httpclient:4.5.10\n\n\n## References\n* Common Weakness Enumeration: [CWE-20](https://cwe.mitre.org/data/definitions/20.html)\n* Common Weakness Enumeration: [CWE-229](https://cwe.mitre.org/data/definitions/229.html)\n\n","text":"Apache HttpClient is vulnerable to the disclosure and modification of data due to the mishandling of malformed URIs. An attacker could pass a maliciously crafted request to a vulnerable application, which will then be executed on an incorrect host."},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-20","external/cwe/cwe-229"]},"defaultConfiguration":{"level":"warning"}},{"id":"CVE-2020-27216 jetty-servlets 9.4.24.v20191120: wiremock 2.8.0: org.eclipse.jetty","shortDescription":{"text":"Transitive Dependency: jetty-servlets 9.4.24.v20191120 from wiremock 2.8.0 (CVE-2020-27216)"},"fullDescription":{"text":"Jetty is vulnerable to temporary directory Hijacking via a race condition. If code is executed from this temporary directory it can lead to local privilege escalation."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| jetty-servlets 9.4.24.v20191120  | 9.4.53.20231009  | 11.0.19 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/ee93672f-853c-4083-a5e8-0d5ab21e8bf9?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=d8221aaa-7d55-4b5a-b3e0-2b5cba26ce60)\n\n\n## Description\nJetty is vulnerable to temporary directory Hijacking via a race condition. If code is executed from this temporary directory it can lead to local privilege escalation.\n\n## Vulnerabilities(BDSA,CVE)\n:orange_circle: [CVE-2020-27216](https://openhub.net/vulnerabilities/bdsa/CVE-2020-27216) - Race Condition due to Improper Synchronization\n\n\n\n## Solution\nFixed in:\n* [**11.0.0.beta3**](https://github.com/eclipse/jetty.project/releases/tag/jetty-11.0.0.beta3)\n* [**10.0.0.beta3**](https://github.com/eclipse/jetty.project/releases/tag/jetty-10.0.0.beta3) \n* [**9.4.33.v20201020**](https://github.com/eclipse/jetty.project/releases/tag/jetty-9.4.33.v20201020) by [this](https://github.com/eclipse/jetty.project/commit/53e0e0e9b25a6309bf24ee3b10984f4145701edb) commit and [this](https://github.com/eclipse/jetty.project/commit/9ad6beb80543b392c91653f6bfce233fc75b9d5f) commit.\n\n## Workaround\nSet a temporary directory, either for the server or the context, to one outside the shared temporary file system. For recent releases, a temporary directory by created by making a directory called work in the `${jetty.base}` directory (the parent directory of the webapps directory). Alternately the java temporary directory can be set with the System Property `java.io.tmpdir`. A more detailed description of how jetty selects a temporary directory is below.\n\nTo mitigate this vulnerability the directory must be set to one that is not writable by an attacker. To avoid information leakage, the directory should also not be readable by an attacker.\n\n## Dependency tree\n- org.owasp.webgoat.lesson:xxe:v8.1.0:-maven\n    - com.github.tomakehurst:wiremock:2.8.0\n        - org.eclipse.jetty:jetty-servlets:9.4.24.v20191120\n\n\n## References\n* Common Weakness Enumeration: [CWE-362](https://cwe.mitre.org/data/definitions/362.html)\n\n","text":"Jetty is vulnerable to temporary directory Hijacking via a race condition. If code is executed from this temporary directory it can lead to local privilege escalation."},"properties":{"security-severity":"8.9","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-362"]},"defaultConfiguration":{"level":"error"}},{"id":"CVE-2023-44487 jetty-servlets 9.4.24.v20191120: wiremock 2.8.0: org.eclipse.jetty","shortDescription":{"text":"Transitive Dependency: jetty-servlets 9.4.24.v20191120 from wiremock 2.8.0 (CVE-2023-44487)"},"fullDescription":{"text":"The HTTP/2 protocol contains a flaw related to the stream multiplexing feature that can allow for excessive resource consumption on servers operating implementations of the HTTP/2 protocol. \n\nThe HTTP/2 protocol allows clients to signal to a server to cancel a previously opened stream by sending an `RST_STREAM` frame. Attackers can abuse this stream canceling ability by opening a large number of streams at once immediately followed by `RST_STREAM` frames. In most HTTP/2 implementations this bypasses concurrent open stream limits and causes servers to spend processing time first handling request frames and then performing stream tear downs. For the server, these operations can pile up whereas the attacker client paid minuscule bandwidth and processing costs.\n\n[Amazon](https://aws.amazon.com/security/security-bulletins/AWS-2023-011/), [Cloudflare](https://blog.cloudflare.com/technical-breakdown-http2-rapid-reset-ddos-attack/) and [Google](https://cloud.google.com/blog/products/identity-security/google-cloud-mitigated-largest-ddos-attack-peaking-above-398-million-rps/) have reported that this vulnerability has been exploited in the wild from August to October 2023.\n\nThis vulnerability is listed as exploitable by the Cybersecurity \u0026 Infrastructure Security Agency in their [Known Exploited Vulnerabilities Catalog](https://www.cisa.gov/known-exploited-vulnerabilities-catalog)."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| jetty-servlets 9.4.24.v20191120  | 9.4.53.20231009  | 11.0.19 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/ee93672f-853c-4083-a5e8-0d5ab21e8bf9?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=d8221aaa-7d55-4b5a-b3e0-2b5cba26ce60)\n\n\n## Description\nThe HTTP/2 protocol contains a flaw related to the stream multiplexing feature that can allow for excessive resource consumption on servers operating implementations of the HTTP/2 protocol. \n\nThe HTTP/2 protocol allows clients to signal to a server to cancel a previously opened stream by sending an `RST_STREAM` frame. Attackers can abuse this stream canceling ability by opening a large number of streams at once immediately followed by `RST_STREAM` frames. In most HTTP/2 implementations this bypasses concurrent open stream limits and causes servers to spend processing time first handling request frames and then performing stream tear downs. For the server, these operations can pile up whereas the attacker client paid minuscule bandwidth and processing costs.\n\n[Amazon](https://aws.amazon.com/security/security-bulletins/AWS-2023-011/), [Cloudflare](https://blog.cloudflare.com/technical-breakdown-http2-rapid-reset-ddos-attack/) and [Google](https://cloud.google.com/blog/products/identity-security/google-cloud-mitigated-largest-ddos-attack-peaking-above-398-million-rps/) have reported that this vulnerability has been exploited in the wild from August to October 2023.\n\nThis vulnerability is listed as exploitable by the Cybersecurity \u0026 Infrastructure Security Agency in their [Known Exploited Vulnerabilities Catalog](https://www.cisa.gov/known-exploited-vulnerabilities-catalog).\n\n## Vulnerabilities(BDSA,CVE)\n:orange_circle: [CVE-2023-44487](https://openhub.net/vulnerabilities/bdsa/CVE-2023-44487) - Uncontrolled Resource Consumption\n\n\n\n## Solution\nFixed in:\n* nghttp2 [**1.57.0**](https://github.com/nghttp2/nghttp2/releases/tag/v1.57.0) by [this](https://github.com/nghttp2/nghttp2/commit/72b4af6143681f528f1d237b21a9a7aee1738832) commit,\n* NGINX [**1.25.3**](https://hg.nginx.org/nginx/rev/release-1.25.3) by [this](https://hg.nginx.org/nginx/rev/cdda286c0f1b) revision,\n* Apache Tomcat \n\t* [**8.5.94**](https://github.com/apache/tomcat/releases/tag/8.5.94) by [this](https://github.com/apache/tomcat/commit/944332bb15bd2f3bf76ec2caeb1ff0a58a3bc628) commit,\n\t* [**9.0.81**](https://github.com/apache/tomcat/releases/tag/9.0.81) by [this](https://github.com/apache/tomcat/commit/6d1a9fd6642387969e4410b9989c85856b74917a) commit,\n\t* [**10.1.14**](https://github.com/apache/tomcat/releases/tag/10.1.14) by [this](https://github.com/apache/tomcat/commit/76bb4bfbfeae827dce896f650655bbf6e251ed49) commit,\n\t* [**11.0.0-M12**](https://github.com/apache/tomcat/releases/tag/11.0.0-M12) by [this](https://github.com/apache/tomcat/commit/9cdfe25bad707f34b3e5da2994f3f1952a163c3e) commit,\n* Apache Traffic Server\n\t* [**9.2.3-rc0**](https://github.com/apache/trafficserver/releases/tag/9.2.3-rc0) by [this](https://github.com/apache/trafficserver/commit/b28ad74f117307e8de206f1de70c3fa716f90682) commit,\n\t* [**8.1.9-rc0**](https://github.com/apache/trafficserver/releases/tag/8.1.9-rc0) by [this](https://github.com/apache/trafficserver/commit/d742d74039aaa548dda0148ab4ba207906abc620) commit,\n* Netty/Codec/HTTP2 [**4.1.100.Final**](https://mvnrepository.com/artifact/io.netty/netty-codec-http2/4.1.100.Final) by [this](https://github.com/netty/netty/commit/58f75f665aa81a8cbcf6ffa74820042a285c5e61) commit,\n* Eclipse Jetty\n\t* [**12.0.2**](https://github.com/jetty/jetty.project/releases/tag/jetty-12.0.2), [**11.0.17**](https://github.com/jetty/jetty.project/releases/tag/jetty-11.0.17), [**10.0.17**](https://github.com/jetty/jetty.project/releases/tag/jetty-10.0.17) by [this](https://github.com/jetty/jetty.project/commit/dbb94514dc9d3fb21fe92080f57c314e7e06a148) commit,\n\t* [**9.4.53.v20231009**](https://github.com/jetty/jetty.project/releases/tag/jetty-9.4.53.v20231009) by [this](https://github.com/jetty/jetty.project/commit/0f246d12090fb15b7b21dee8429f459fd792de53) commit.\n* lighttpd [**1.4.73**](https://github.com/lighttpd/lighttpd1.4/releases/tag/lighttpd-1.4.73) by [this](https://github.com/lighttpd/lighttpd1.4/commit/7b48f3c843e1113b27f5d278f4d10861cc499a06) commit.\n* grpc-go \n  * [**1.56.3**](https://github.com/grpc/grpc-go/releases/tag/v1.56.3) by [this](https://github.com/grpc/grpc-go/commit/5efd7bd7) commit,\n  * [**1.57.1**](https://github.com/grpc/grpc-go/releases/tag/v1.57.1) by [this](https://github.com/grpc/grpc-go/commit/6a1400d5) commit,\n  * [**1.58.3**](https://github.com/grpc/grpc-go/releases/tag/v1.58.3) by [this](https://github.com/grpc/grpc-go/commit/c40c9ba3) commit,\n * h2o fixed in the **master** branch by [this](https://github.com/h2o/h2o/commit/28fe15117b909588bf14269a0e1c6ec4548579fe) commit which is not yet included in any release.\n\n## Workaround\nDepending on technologies use and their configuration, different mitigation strategies may be available.\n\nIn some cases, it may be possible to limit the amount of `RST_STREAM` frame frames that are processed within a given time by configuring the particular HTTP/2 implementation manually. Please refer to your software vendor's advisories for more information.\n\n## Dependency tree\n- org.owasp.webgoat.lesson:xxe:v8.1.0:-maven\n    - com.github.tomakehurst:wiremock:2.8.0\n        - org.eclipse.jetty:jetty-servlets:9.4.24.v20191120\n\n\n## References\n* Common Weakness Enumeration: [CWE-400](https://cwe.mitre.org/data/definitions/400.html)\n\n","text":"The HTTP/2 protocol contains a flaw related to the stream multiplexing feature that can allow for excessive resource consumption on servers operating implementations of the HTTP/2 protocol. \n\nThe HTTP/2 protocol allows clients to signal to a server to cancel a previously opened stream by sending an `RST_STREAM` frame. Attackers can abuse this stream canceling ability by opening a large number of streams at once immediately followed by `RST_STREAM` frames. In most HTTP/2 implementations this bypasses concurrent open stream limits and causes servers to spend processing time first handling request frames and then performing stream tear downs. For the server, these operations can pile up whereas the attacker client paid minuscule bandwidth and processing costs.\n\n[Amazon](https://aws.amazon.com/security/security-bulletins/AWS-2023-011/), [Cloudflare](https://blog.cloudflare.com/technical-breakdown-http2-rapid-reset-ddos-attack/) and [Google](https://cloud.google.com/blog/products/identity-security/google-cloud-mitigated-largest-ddos-attack-peaking-above-398-million-rps/) have reported that this vulnerability has been exploited in the wild from August to October 2023.\n\nThis vulnerability is listed as exploitable by the Cybersecurity \u0026 Infrastructure Security Agency in their [Known Exploited Vulnerabilities Catalog](https://www.cisa.gov/known-exploited-vulnerabilities-catalog)."},"properties":{"security-severity":"8.9","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-400"]},"defaultConfiguration":{"level":"error"}},{"id":"CVE-2020-27223 jetty-servlets 9.4.24.v20191120: wiremock 2.8.0: org.eclipse.jetty","shortDescription":{"text":"Transitive Dependency: jetty-servlets 9.4.24.v20191120 from wiremock 2.8.0 (CVE-2020-27223)"},"fullDescription":{"text":"Jetty is vulnerable to denial-of-service (DoS) due to the use of an exponential algorithm that can have excessive resource requirements. A remote attacker could cause a vulnerable server to become unresponsive by sending maliciously crafted HTTP requests to that server."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| jetty-servlets 9.4.24.v20191120  | 9.4.53.20231009  | 11.0.19 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/ee93672f-853c-4083-a5e8-0d5ab21e8bf9?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=d8221aaa-7d55-4b5a-b3e0-2b5cba26ce60)\n\n\n## Description\nJetty is vulnerable to denial-of-service (DoS) due to the use of an exponential algorithm that can have excessive resource requirements. A remote attacker could cause a vulnerable server to become unresponsive by sending maliciously crafted HTTP requests to that server.\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [CVE-2020-27223](https://openhub.net/vulnerabilities/bdsa/CVE-2020-27223) - Inefficient Algorithmic Complexity\n\n\n\n## Solution\nFixed by [this](https://github.com/eclipse/jetty.project/commit/10e531756b972162eed402c44d0244f7f6b85131) commit in:\n* [**11.0.1**](https://github.com/eclipse/jetty.project/releases/tag/jetty-11.0.1)\n* [**10.0.1**](https://github.com/eclipse/jetty.project/releases/tag/jetty-10.0.1)\n* [**9.4.37.v20210219**](https://github.com/eclipse/jetty.project/releases/tag/jetty-9.4.37.v20210219)\n\nThe latest stable releases are available [here](https://github.com/eclipse/jetty.project/releases).\n\n## Workaround\nThe vendor has stated that the following workarounds are effective:\n\n* Don't use the default error page or handler.\n* Don't deploy an instance of `StatisticsServlet` that is exposed to the network.\n* Don't call the `getLocale` API.\n* Don't enable precompressed static content in instances of `DefaultServlet`.\n* Deploy a rule that limits the number and size of `Accept-*` header fields.\n\n## Dependency tree\n- org.owasp.webgoat.lesson:xxe:v8.1.0:-maven\n    - com.github.tomakehurst:wiremock:2.8.0\n        - org.eclipse.jetty:jetty-servlets:9.4.24.v20191120\n\n\n## References\n* Common Weakness Enumeration: [CWE-407](https://cwe.mitre.org/data/definitions/407.html)\n\n","text":"Jetty is vulnerable to denial-of-service (DoS) due to the use of an exponential algorithm that can have excessive resource requirements. A remote attacker could cause a vulnerable server to become unresponsive by sending maliciously crafted HTTP requests to that server."},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-407"]},"defaultConfiguration":{"level":"warning"}},{"id":"CVE-2021-28165 jetty-servlets 9.4.24.v20191120: wiremock 2.8.0: org.eclipse.jetty","shortDescription":{"text":"Transitive Dependency: jetty-servlets 9.4.24.v20191120 from wiremock 2.8.0 (CVE-2021-28165)"},"fullDescription":{"text":"Eclipse Jetty is vulnerable to Denial-of-Service (DoS) via invalid TLS frames. An attacker could exploit this by sending a TLS frame with a size in excess of 17408 resulting in excessive resource consumption leading to a DoS condition."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| jetty-servlets 9.4.24.v20191120  | 9.4.53.20231009  | 11.0.19 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/ee93672f-853c-4083-a5e8-0d5ab21e8bf9?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=d8221aaa-7d55-4b5a-b3e0-2b5cba26ce60)\n\n\n## Description\nEclipse Jetty is vulnerable to Denial-of-Service (DoS) via invalid TLS frames. An attacker could exploit this by sending a TLS frame with a size in excess of 17408 resulting in excessive resource consumption leading to a DoS condition.\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [CVE-2021-28165](https://openhub.net/vulnerabilities/bdsa/CVE-2021-28165) - Uncontrolled Resource Consumption\n\n\n\n## Solution\nFixed in [**10.0.2**](https://github.com/eclipse/jetty.project/releases/tag/jetty-10.0.2) and [**11.0.2**](https://github.com/eclipse/jetty.project/releases/tag/jetty-11.0.2) by [this](https://github.com/eclipse/jetty.project/commit/be22761a20a1685365c8e0356bf09b47e574cfd9) and [this](https://github.com/eclipse/jetty.project/commit/039c7386d0f3087d7c8aa19ea6001b24c95b9f16) commit.\nFixed in [**9.4.39.v20210325**](https://github.com/eclipse/jetty.project/releases/tag/jetty-9.4.39.v20210325) by [this](https://github.com/eclipse/jetty.project/commit/00d379c94ba865dced2025c2d1bc3e2e0e41e880) and [this](https://github.com/eclipse/jetty.project/commit/294b2ba02b667548617a94cd99592110ac230add) commit. \n\nThe latest stable releases are available [here](https://github.com/eclipse/jetty.project/releases).\n\n## Workaround\nThe problem can be worked around by compiling the following class:\n```\npackage org.eclipse.jetty.server.ssl.fix6072;\n\nimport java.nio.ByteBuffer;\nimport javax.net.ssl.SSLEngine;\nimport javax.net.ssl.SSLEngineResult;\nimport javax.net.ssl.SSLException;\nimport javax.net.ssl.SSLHandshakeException;\n\nimport org.eclipse.jetty.io.EndPoint;\nimport org.eclipse.jetty.io.ssl.SslConnection;\nimport org.eclipse.jetty.server.Connector;\nimport org.eclipse.jetty.server.SslConnectionFactory;\nimport org.eclipse.jetty.util.BufferUtil;\nimport org.eclipse.jetty.util.annotation.Name;\nimport org.eclipse.jetty.util.ssl.SslContextFactory;\n\npublic class SpaceCheckingSslConnectionFactory extends SslConnectionFactory\n{\n    public SpaceCheckingSslConnectionFactory(@Name(\"sslContextFactory\") SslContextFactory factory, @Name(\"next\") String nextProtocol)\n    {\n        super(factory, nextProtocol);\n    }\n\n    @Override\n    protected SslConnection newSslConnection(Connector connector, EndPoint endPoint, SSLEngine engine)\n    {\n        return new SslConnection(connector.getByteBufferPool(), connector.getExecutor(), endPoint, engine, isDirectBuffersForEncryption(), isDirectBuffersForDecryption())\n        {\n            @Override\n            protected SSLEngineResult unwrap(SSLEngine sslEngine, ByteBuffer input, ByteBuffer output) throws SSLException\n            {\n                SSLEngineResult results = super.unwrap(sslEngine, input, output);\n\n                if ((results.getStatus() == SSLEngineResult.Status.BUFFER_UNDERFLOW ||\n                    results.getStatus() == SSLEngineResult.Status.OK \u0026\u0026 results.bytesConsumed() == 0 \u0026\u0026 results.bytesProduced() == 0) \u0026\u0026\n                    BufferUtil.space(input) == 0)\n                {\n                    BufferUtil.clear(input);\n                    throw new SSLHandshakeException(\"Encrypted buffer max length exceeded\");\n                }\n                return results;\n            }\n        };\n    }\n}\n```\n\nThis class can be deployed by:\n* The resulting class file should be put into a jar file (eg `sslfix6072.jar`)\n* The jar file should be made available to the server. For a normal distribution this can be done by putting the file into `${jetty.base}/lib`\n* Copy the file `${jetty.home}/modules/ssl.mod` to `${jetty.base}/modules`\n* Edit the `${jetty.base}/modules/ssl.mod` file to have the following section:\n```\n[lib]\nlib/sslfix6072.jar\n```\n\n* Copy the file `${jetty.home}/etc/jetty-https.xml` and `${jetty.home}/etc/jetty-http2.xml` to `${jetty.base}/etc`\n* Edit files `${jetty.base}/etc/jetty-https.xml` and `${jetty.base}/etc/jetty-http2.xml`, changing any reference of `org.eclipse.jetty.server.SslConnectionFactory` to `org.eclipse.jetty.server.ssl.fix6072.SpaceCheckingSslConnectionFactory`. \n\nFor example:\n```\n  \u003cCall name=\"addIfAbsentConnectionFactory\"\u003e\n    \u003cArg\u003e\n      \u003cNew class=\"org.eclipse.jetty.server.ssl.fix6072.SpaceCheckingSslConnectionFactory\"\u003e\n        \u003cArg name=\"next\"\u003ehttp/1.1\u003c/Arg\u003e\n        \u003cArg name=\"sslContextFactory\"\u003e\u003cRef refid=\"sslContextFactory\"/\u003e\u003c/Arg\u003e\n      \u003c/New\u003e\n    \u003c/Arg\u003e\n  \u003c/Call\u003e\n```\nRestart Jetty\n\n## Dependency tree\n- org.owasp.webgoat.lesson:xxe:v8.1.0:-maven\n    - com.github.tomakehurst:wiremock:2.8.0\n        - org.eclipse.jetty:jetty-servlets:9.4.24.v20191120\n\n\n## References\n* Common Weakness Enumeration: [CWE-400](https://cwe.mitre.org/data/definitions/400.html)\n\n","text":"Eclipse Jetty is vulnerable to Denial-of-Service (DoS) via invalid TLS frames. An attacker could exploit this by sending a TLS frame with a size in excess of 17408 resulting in excessive resource consumption leading to a DoS condition."},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-400"]},"defaultConfiguration":{"level":"warning"}},{"id":"CVE-2021-28169 jetty-servlets 9.4.24.v20191120: wiremock 2.8.0: org.eclipse.jetty","shortDescription":{"text":"Transitive Dependency: jetty-servlets 9.4.24.v20191120 from wiremock 2.8.0 (CVE-2021-28169)"},"fullDescription":{"text":"Jetty is vulnerable to information disclosure due to improper requested path verification. This allows crafted requests to access protected resources of the web application which, depending on the implementation, might reveal sensitive information."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| jetty-servlets 9.4.24.v20191120  | 9.4.53.20231009  | 11.0.19 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/ee93672f-853c-4083-a5e8-0d5ab21e8bf9?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=d8221aaa-7d55-4b5a-b3e0-2b5cba26ce60)\n\n\n## Description\nJetty is vulnerable to information disclosure due to improper requested path verification. This allows crafted requests to access protected resources of the web application which, depending on the implementation, might reveal sensitive information.\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [CVE-2021-28169](https://openhub.net/vulnerabilities/bdsa/CVE-2021-28169) - Directory Traversal\n\n\n\n## Solution\nFixed in [**9.4.41**](https://github.com/eclipse/jetty.project/releases/tag/jetty-9.4.41.v20210512) by [this](https://github.com/eclipse/jetty.project/commit/1c05b0bcb1) commit.\n\nFixed in [**10.0.3**](https://github.com/eclipse/jetty.project/releases/tag/jetty-10.0.3) and [**11.0.3**](https://github.com/eclipse/jetty.project/releases/tag/jetty-11.0.3) by [this](https://github.com/eclipse/jetty.project/commit/f58dbedcd0) commit.\n\nThe latest stable releases are available [here](https://www.eclipse.org/jetty/download.php).\n\n## Workaround\nThe vendor provides the following workaround:\n\nIf you cannot update to the latest version of Jetty, you can instead deploy your own version of the `ConcatServlet` and/or the `WelcomeFilter` by using the code from the latest version of Jetty.\n\n## Dependency tree\n- org.owasp.webgoat.lesson:xxe:v8.1.0:-maven\n    - com.github.tomakehurst:wiremock:2.8.0\n        - org.eclipse.jetty:jetty-servlets:9.4.24.v20191120\n\n\n## References\n* Common Weakness Enumeration: [CWE-22](https://cwe.mitre.org/data/definitions/22.html)\n\n","text":"Jetty is vulnerable to information disclosure due to improper requested path verification. This allows crafted requests to access protected resources of the web application which, depending on the implementation, might reveal sensitive information."},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-22"]},"defaultConfiguration":{"level":"warning"}},{"id":"CVE-2023-36478 jetty-servlets 9.4.24.v20191120: wiremock 2.8.0: org.eclipse.jetty","shortDescription":{"text":"Transitive Dependency: jetty-servlets 9.4.24.v20191120 from wiremock 2.8.0 (CVE-2023-36478)"},"fullDescription":{"text":"Eclipse Jetty is vulnerable to a denial-of-service (DoS) issue due to presence of a user input validation flaw in the HTTP/2 HPACK functionality that can lead to an integer overflow and allow HPACK headers to exceed their expected size limits.\n\nAn attacker could submit crafted HTTP messages that trigger the integer overflow flaw and cause large buffers to be allocated on the server, consuming memory resources in a manner that could cause the server to run out of memory."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| jetty-servlets 9.4.24.v20191120  | 9.4.53.20231009  | 11.0.19 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/ee93672f-853c-4083-a5e8-0d5ab21e8bf9?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=d8221aaa-7d55-4b5a-b3e0-2b5cba26ce60)\n\n\n## Description\nEclipse Jetty is vulnerable to a denial-of-service (DoS) issue due to presence of a user input validation flaw in the HTTP/2 HPACK functionality that can lead to an integer overflow and allow HPACK headers to exceed their expected size limits.\n\nAn attacker could submit crafted HTTP messages that trigger the integer overflow flaw and cause large buffers to be allocated on the server, consuming memory resources in a manner that could cause the server to run out of memory.\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [CVE-2023-36478](https://openhub.net/vulnerabilities/bdsa/CVE-2023-36478) - Integer Overflow / Underflow\n\n\n\n## Solution\nFixed in:\n* [**9.4.53.v20231009**](https://github.com/jetty/jetty.project/releases/tag/jetty-9.4.53.v20231009) by [this](https://github.com/jetty/jetty.project/commit/c7a4b05fc735e73e7522cb617c079045b709957b) commit and [this](https://github.com/jetty/jetty.project/commit/a4d61e9eb026ec98c79107e840cabdf520482c56) commit,\n* [**10.0.16**](https://github.com/jetty/jetty.project/releases/tag/jetty-10.0.16), [**11.0.16**](https://github.com/jetty/jetty.project/releases/tag/jetty-11.0.16) and [**12.0.0.beta2x**](https://github.com/jetty/jetty.project/releases/tag/jetty-12.0.0.beta2x) by [this](https://github.com/jetty/jetty.project/commit/a8c9eea75bffcb2b2557acefb75856707654a56f) commit and [this](https://github.com/jetty/jetty.project/commit/420ec7cc1db65b42693dc002aca0faa567f62f7e) commit.\n\nThe latest stable releases can be found [here](https://eclipse.dev/jetty/download.php).\n\n\n\n## Dependency tree\n- org.owasp.webgoat.lesson:xxe:v8.1.0:-maven\n    - com.github.tomakehurst:wiremock:2.8.0\n        - org.eclipse.jetty:jetty-servlets:9.4.24.v20191120\n\n\n## References\n* Common Weakness Enumeration: [CWE-190](https://cwe.mitre.org/data/definitions/190.html)\n* Common Weakness Enumeration: [CWE-400](https://cwe.mitre.org/data/definitions/400.html)\n\n","text":"Eclipse Jetty is vulnerable to a denial-of-service (DoS) issue due to presence of a user input validation flaw in the HTTP/2 HPACK functionality that can lead to an integer overflow and allow HPACK headers to exceed their expected size limits.\n\nAn attacker could submit crafted HTTP messages that trigger the integer overflow flaw and cause large buffers to be allocated on the server, consuming memory resources in a manner that could cause the server to run out of memory."},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-190","external/cwe/cwe-400"]},"defaultConfiguration":{"level":"warning"}},{"id":"CVE-2022-2048 jetty-servlets 9.4.24.v20191120: wiremock 2.8.0: org.eclipse.jetty","shortDescription":{"text":"Transitive Dependency: jetty-servlets 9.4.24.v20191120 from wiremock 2.8.0 (CVE-2022-2048)"},"fullDescription":{"text":"Eclipse Jetty does not correctly handle invalid HTTP/2 requests. An attacker could exploit this flaw to exhaust the HTTP/2 flow control window or TCP congest the connection. This will cause the relevant selector threads to be blocked and it will lead to a denial-of-service (DoS)."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| jetty-servlets 9.4.24.v20191120  | 9.4.53.20231009  | 11.0.19 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/ee93672f-853c-4083-a5e8-0d5ab21e8bf9?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=d8221aaa-7d55-4b5a-b3e0-2b5cba26ce60)\n\n\n## Description\nEclipse Jetty does not correctly handle invalid HTTP/2 requests. An attacker could exploit this flaw to exhaust the HTTP/2 flow control window or TCP congest the connection. This will cause the relevant selector threads to be blocked and it will lead to a denial-of-service (DoS).\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [CVE-2022-2048](https://openhub.net/vulnerabilities/bdsa/CVE-2022-2048) - Insufficient Resource Pool\n\n\n\n## Solution\nFixed in:\n* **[9.4.47](https://github.com/eclipse/jetty.project/releases/tag/jetty-9.4.47.v20220610)** by [this](https://github.com/eclipse/jetty.project/commit/be912d4315839405a8ae601f2e4ee0306867266e) commit,\n* **[10.0.10](https://github.com/eclipse/jetty.project/releases/tag/jetty-10.0.10)** and **[11.0.10](https://github.com/eclipse/jetty.project/releases/tag/jetty-11.0.10)** by [this](https://github.com/eclipse/jetty.project/commit/b705091afb9158b39590fa36b9b84795524a8f0b) commit.\n\n\nThe latest stable releases can be found [here](https://github.com/eclipse/jetty.project/releases).\n\n## Workaround\nThe vendor recommends users to filter the requests before they are sent to Jetty. One way to filter them would be to use a proxy.\n\n## Dependency tree\n- org.owasp.webgoat.lesson:xxe:v8.1.0:-maven\n    - com.github.tomakehurst:wiremock:2.8.0\n        - org.eclipse.jetty:jetty-servlets:9.4.24.v20191120\n\n\n## References\n* Common Weakness Enumeration: [CWE-410](https://cwe.mitre.org/data/definitions/410.html)\n* Common Weakness Enumeration: [CWE-664](https://cwe.mitre.org/data/definitions/664.html)\n\n","text":"Eclipse Jetty does not correctly handle invalid HTTP/2 requests. An attacker could exploit this flaw to exhaust the HTTP/2 flow control window or TCP congest the connection. This will cause the relevant selector threads to be blocked and it will lead to a denial-of-service (DoS)."},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-410","external/cwe/cwe-664"]},"defaultConfiguration":{"level":"warning"}},{"id":"CVE-2020-27218 jetty-servlets 9.4.24.v20191120: wiremock 2.8.0: org.eclipse.jetty","shortDescription":{"text":"Transitive Dependency: jetty-servlets 9.4.24.v20191120 from wiremock 2.8.0 (CVE-2020-27218)"},"fullDescription":{"text":"Eclipse Jetty contains a vulnerability that allows a remote attacker to inject data into other client's requests. This vulnerability only exists when GZIP request body inflation is enabled, and requests from different clients are multiplexed onto a single connection."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| jetty-servlets 9.4.24.v20191120  | 9.4.53.20231009  | 11.0.19 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/ee93672f-853c-4083-a5e8-0d5ab21e8bf9?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=d8221aaa-7d55-4b5a-b3e0-2b5cba26ce60)\n\n\n## Description\nEclipse Jetty contains a vulnerability that allows a remote attacker to inject data into other client's requests. This vulnerability only exists when GZIP request body inflation is enabled, and requests from different clients are multiplexed onto a single connection.\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [CVE-2020-27218](https://openhub.net/vulnerabilities/bdsa/CVE-2020-27218) - Sensitive Information in Resource Not Removed Before Reuse\n\n\n\n## Solution\nFixed in **[9.4.35.v20201120](https://github.com/eclipse/jetty.project/releases/tag/jetty-9.4.35.v20201120)** by [this](https://github.com/eclipse/jetty.project/commit/850a0330ff25da42b1b1cbdbdca0fcc0c40e47e9) commit.\n\nFixed in **[10.0.0.beta3](https://github.com/eclipse/jetty.project/releases/tag/jetty-10.0.0.beta3)** and in **[11.0.0.beta3](https://github.com/eclipse/jetty.project/releases/tag/jetty-11.0.0.beta3)** by [this](https://github.com/eclipse/jetty.project/commit/34d27e85483c119b7dd1aa9beda735844d14b605) commit.\n\n## Workaround\nThe vendor states that any of the following will mitigate this vulnerability:\n\n\n\u003e * Disabling compressed request body inflation by GzipHandler.\n\u003e * By always fully consuming the request content before sending a response.\n\u003e * By adding a Connection: close to any response where the servlet does not fully consume request content.\n\n## Dependency tree\n- org.owasp.webgoat.lesson:xxe:v8.1.0:-maven\n    - com.github.tomakehurst:wiremock:2.8.0\n        - org.eclipse.jetty:jetty-servlets:9.4.24.v20191120\n\n\n## References\n* Common Weakness Enumeration: [CWE-226](https://cwe.mitre.org/data/definitions/226.html)\n\n","text":"Eclipse Jetty contains a vulnerability that allows a remote attacker to inject data into other client's requests. This vulnerability only exists when GZIP request body inflation is enabled, and requests from different clients are multiplexed onto a single connection."},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-226"]},"defaultConfiguration":{"level":"warning"}},{"id":"CVE-2023-26048 jetty-servlets 9.4.24.v20191120: wiremock 2.8.0: org.eclipse.jetty","shortDescription":{"text":"Transitive Dependency: jetty-servlets 9.4.24.v20191120 from wiremock 2.8.0 (CVE-2023-26048)"},"fullDescription":{"text":"Eclipse Jetty contains a vulnerability in its multipart request parsing mechanism that can lead to an out-of-memory error due to insufficient limiting measures. An attacker can exploit this flaw by supplying a request containing a large multipart without a filename in order to cause a denial-of-service (DoS)."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| jetty-servlets 9.4.24.v20191120  | 9.4.53.20231009  | 11.0.19 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/ee93672f-853c-4083-a5e8-0d5ab21e8bf9?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=d8221aaa-7d55-4b5a-b3e0-2b5cba26ce60)\n\n\n## Description\nEclipse Jetty contains a vulnerability in its multipart request parsing mechanism that can lead to an out-of-memory error due to insufficient limiting measures. An attacker can exploit this flaw by supplying a request containing a large multipart without a filename in order to cause a denial-of-service (DoS).\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [CVE-2023-26048](https://openhub.net/vulnerabilities/bdsa/CVE-2023-26048) - Uncontrolled Resource Consumption\n\n\n\n## Solution\nFixed in [**jetty-9.4.51.v20230217**](https://github.com/eclipse/jetty.project/releases/tag/jetty-9.4.51.v20230217) by [this](https://github.com/eclipse/jetty.project/commit/c3021592218da289563987e6f7fbe05f8704b285) commit.\n\nFixed by [this](https://github.com/eclipse/jetty.project/commit/622befbd0d52f61c1acd41b4ef12458311494f1a) commit in:\n* **[jetty-10.0.14](https://github.com/eclipse/jetty.project/releases/tag/jetty-10.0.14)**\n* **[jetty-11.0.14](https://github.com/eclipse/jetty.project/releases/tag/jetty-11.0.14)**\n* **[jetty-12.0.0.beta0](https://github.com/eclipse/jetty.project/releases/tag/jetty-12.0.0.beta0)**\n\nThe latest stable releases can be found [here](https://github.com/eclipse/jetty.project/releases).\n\n## Workaround\nIt is recommended to set the multipart parameter `maxRequestSize` to a non-negative value in order to limit the whole multipart content. It has also been stated that limiting the multipart parameter `maxFileSize` will not be enough since the attacker can supply a large number of parts that, when summed up, will cause memory issues.\n\n## Dependency tree\n- org.owasp.webgoat.lesson:xxe:v8.1.0:-maven\n    - com.github.tomakehurst:wiremock:2.8.0\n        - org.eclipse.jetty:jetty-servlets:9.4.24.v20191120\n\n\n## References\n* Common Weakness Enumeration: [CWE-400](https://cwe.mitre.org/data/definitions/400.html)\n* Common Weakness Enumeration: [CWE-770](https://cwe.mitre.org/data/definitions/770.html)\n\n","text":"Eclipse Jetty contains a vulnerability in its multipart request parsing mechanism that can lead to an out-of-memory error due to insufficient limiting measures. An attacker can exploit this flaw by supplying a request containing a large multipart without a filename in order to cause a denial-of-service (DoS)."},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-400","external/cwe/cwe-770"]},"defaultConfiguration":{"level":"warning"}},{"id":"CVE-2023-26049 jetty-servlets 9.4.24.v20191120: wiremock 2.8.0: org.eclipse.jetty","shortDescription":{"text":"Transitive Dependency: jetty-servlets 9.4.24.v20191120 from wiremock 2.8.0 (CVE-2023-26049)"},"fullDescription":{"text":"Eclipse Jetty does not properly parse quoted values in cookies. This could allow an attacker to smuggle cookies within other cookies into the application. The attacker can also tamper with the cookie parsing mechanism and cause other unintended behavior."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| jetty-servlets 9.4.24.v20191120  | 9.4.53.20231009  | 11.0.19 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/ee93672f-853c-4083-a5e8-0d5ab21e8bf9?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=d8221aaa-7d55-4b5a-b3e0-2b5cba26ce60)\n\n\n## Description\nEclipse Jetty does not properly parse quoted values in cookies. This could allow an attacker to smuggle cookies within other cookies into the application. The attacker can also tamper with the cookie parsing mechanism and cause other unintended behavior.\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [CVE-2023-26049](https://openhub.net/vulnerabilities/bdsa/CVE-2023-26049) - Weak Input Validation\n\n\n\n## Solution\nFixed in version [**jetty-9.4.51.v20230217**](https://github.com/eclipse/jetty.project/releases/tag/jetty-9.4.51.v20230217) by [this](https://github.com/eclipse/jetty.project/commit/1be1401bafb4c46fae3c234c8e93743a661dcf21) commit.\n\nFixed by [this](https://github.com/eclipse/jetty.project/commit/7b8c2c1bf081c7f408e5da3371c8c3c9802f09fd) commit in:\n* [**jetty-10.0.14**](https://github.com/eclipse/jetty.project/releases/tag/jetty-10.0.14)\n* [**jetty-11.0.14**](https://github.com/eclipse/jetty.project/releases/tag/jetty-11.0.14)\n* [**jetty-12.0.0.beta0**](https://github.com/eclipse/jetty.project/releases/tag/jetty-12.0.0.beta0)\n\nThe latest stable releases can be found [here](https://github.com/eclipse/jetty.project/releases).\n\n\n\n## Dependency tree\n- org.owasp.webgoat.lesson:xxe:v8.1.0:-maven\n    - com.github.tomakehurst:wiremock:2.8.0\n        - org.eclipse.jetty:jetty-servlets:9.4.24.v20191120\n\n\n## References\n* Common Weakness Enumeration: [CWE-20](https://cwe.mitre.org/data/definitions/20.html)\n\n","text":"Eclipse Jetty does not properly parse quoted values in cookies. This could allow an attacker to smuggle cookies within other cookies into the application. The attacker can also tamper with the cookie parsing mechanism and cause other unintended behavior."},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-20"]},"defaultConfiguration":{"level":"warning"}},{"id":"CVE-2023-40167 jetty-servlets 9.4.24.v20191120: wiremock 2.8.0: org.eclipse.jetty","shortDescription":{"text":"Transitive Dependency: jetty-servlets 9.4.24.v20191120 from wiremock 2.8.0 (CVE-2023-40167)"},"fullDescription":{"text":"Eclipse Jetty is vulnerable to HTTP request smuggling due to the improper parsing of HTTP requests. An attacker could exploit this vulnerability by sending maliciously crafted HTTP requests to a vulnerable endpoint with multiple requests included inside the body by manipulating the `Content-Length` of the request. The smuggling of HTTP requests may allow for the bypass of security tools such as web application firewalls (WAFs) and intrusion detection systems (IDSs)."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| jetty-servlets 9.4.24.v20191120  | 9.4.53.20231009  | 11.0.19 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/ee93672f-853c-4083-a5e8-0d5ab21e8bf9?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=d8221aaa-7d55-4b5a-b3e0-2b5cba26ce60)\n\n\n## Description\nEclipse Jetty is vulnerable to HTTP request smuggling due to the improper parsing of HTTP requests. An attacker could exploit this vulnerability by sending maliciously crafted HTTP requests to a vulnerable endpoint with multiple requests included inside the body by manipulating the `Content-Length` of the request. The smuggling of HTTP requests may allow for the bypass of security tools such as web application firewalls (WAFs) and intrusion detection systems (IDSs).\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [CVE-2023-40167](https://openhub.net/vulnerabilities/bdsa/CVE-2023-40167) - Improper Handling of Length Parameter Inconsistency\n\n\n\n## Solution\nFixed in versions:\n* [**12.0.1**](https://github.com/eclipse/jetty.project/releases/tag/jetty-12.0.1) by [this](https://github.com/eclipse/jetty.project/commit/13cf2dade746e5d3bb123fd7ecd9fdc28fc43082) commit.\n* [**11.0.16**](https://github.com/eclipse/jetty.project/releases/tag/jetty-11.0.16) and [**10.0.16**](https://github.com/eclipse/jetty.project/releases/tag/jetty-10.0.16) by [this](https://github.com/eclipse/jetty.project/commit/003e46cae4d71e147d51fb8ea378e8989d381cc3) commit.\n* [**9.4.52.v20230823**](https://github.com/eclipse/jetty.project/releases/tag/jetty-9.4.52.v20230823) by [this](https://github.com/eclipse/jetty.project/commit/e4d596eafc887bcd813ae6e28295b5ce327def47) commit.\n\nThe latest stable releases can be found [here](https://eclipse.dev/jetty/download.php).\n\n\n\n## Dependency tree\n- org.owasp.webgoat.lesson:xxe:v8.1.0:-maven\n    - com.github.tomakehurst:wiremock:2.8.0\n        - org.eclipse.jetty:jetty-servlets:9.4.24.v20191120\n\n\n## References\n* Common Weakness Enumeration: [CWE-130](https://cwe.mitre.org/data/definitions/130.html)\n\n","text":"Eclipse Jetty is vulnerable to HTTP request smuggling due to the improper parsing of HTTP requests. An attacker could exploit this vulnerability by sending maliciously crafted HTTP requests to a vulnerable endpoint with multiple requests included inside the body by manipulating the `Content-Length` of the request. The smuggling of HTTP requests may allow for the bypass of security tools such as web application firewalls (WAFs) and intrusion detection systems (IDSs)."},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-130"]},"defaultConfiguration":{"level":"warning"}},{"id":"CVE-2023-36479 jetty-servlets 9.4.24.v20191120: wiremock 2.8.0: org.eclipse.jetty","shortDescription":{"text":"Transitive Dependency: jetty-servlets 9.4.24.v20191120 from wiremock 2.8.0 (CVE-2023-36479)"},"fullDescription":{"text":"Eclipse Jetty contains an improper neutralization of quoting syntax issue within the CGI servlet. This could allow an authenticated attacker to send a request to the CGI Servlet for a binary with a space in its name in order to manipulate the command structure and execute incorrect commands."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| jetty-servlets 9.4.24.v20191120  | 9.4.53.20231009  | 11.0.19 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/ee93672f-853c-4083-a5e8-0d5ab21e8bf9?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=d8221aaa-7d55-4b5a-b3e0-2b5cba26ce60)\n\n\n## Description\nEclipse Jetty contains an improper neutralization of quoting syntax issue within the CGI servlet. This could allow an authenticated attacker to send a request to the CGI Servlet for a binary with a space in its name in order to manipulate the command structure and execute incorrect commands.\n\n## Vulnerabilities(BDSA,CVE)\n:large_blue_circle: [CVE-2023-36479](https://openhub.net/vulnerabilities/bdsa/CVE-2023-36479) - Improper Neutralization of Quoting Syntax\n\n\n\n## Solution\nFixed in versions:\n* [**12.0.0.beta1**](https://github.com/eclipse/jetty.project/releases/tag/jetty-12.0.0.beta1) by [this](https://github.com/eclipse/jetty.project/commit/6ce5a0fbcdf06ae647dfd304dd81a1f9b0691a5c) commit.\n* [**11.0.16**](https://github.com/eclipse/jetty.project/releases/tag/jetty-11.0.16) and [**10.0.16**](https://github.com/eclipse/jetty.project/releases/tag/jetty-10.0.16) by [this](https://github.com/eclipse/jetty.project/commit/c29491e5ac70c98e4d7d7dff2a6465ddecc45c0c) commit.\n* [**9.4.52.v20230823**](https://github.com/eclipse/jetty.project/releases/tag/jetty-9.4.52.v20230823) by [this](https://github.com/eclipse/jetty.project/commit/ec7e1fd173481e526db4092f558aa2b5aab57580) commit.\n\nThe latest stable releases can be found [here](https://eclipse.dev/jetty/download.php).\n\n## Workaround\nThe vendor has issued the following workaround:\n\n\u003e The` org.eclipse.jetty.servlets.CGI` Servlet should not be used. Fast CGI support is available instead.\n\n## Dependency tree\n- org.owasp.webgoat.lesson:xxe:v8.1.0:-maven\n    - com.github.tomakehurst:wiremock:2.8.0\n        - org.eclipse.jetty:jetty-servlets:9.4.24.v20191120\n\n\n## References\n* Common Weakness Enumeration: [CWE-149](https://cwe.mitre.org/data/definitions/149.html)\n\n","text":"Eclipse Jetty contains an improper neutralization of quoting syntax issue within the CGI servlet. This could allow an authenticated attacker to send a request to the CGI Servlet for a binary with a space in its name in order to manipulate the command structure and execute incorrect commands."},"properties":{"security-severity":"3.8","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-149"]},"defaultConfiguration":{"level":"note"}},{"id":"CVE-2023-41900 jetty-servlets 9.4.24.v20191120: wiremock 2.8.0: org.eclipse.jetty","shortDescription":{"text":"Transitive Dependency: jetty-servlets 9.4.24.v20191120 from wiremock 2.8.0 (CVE-2023-41900)"},"fullDescription":{"text":"Eclipse Jetty contains an improper authentication vulnerability. This could allow an authenticated attacker to bypass authentication after it has been rejected or revoked by the `LoginService` and make a request as if authenticated.\n\n**Note:** The vendor has stated that this issue impacts usages of the `jetty-openid` which have configured a nested `LoginService` and where that `LoginService` is capable of rejecting previously authenticated users."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| jetty-servlets 9.4.24.v20191120  | 9.4.53.20231009  | 11.0.19 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/ee93672f-853c-4083-a5e8-0d5ab21e8bf9?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=d8221aaa-7d55-4b5a-b3e0-2b5cba26ce60)\n\n\n## Description\nEclipse Jetty contains an improper authentication vulnerability. This could allow an authenticated attacker to bypass authentication after it has been rejected or revoked by the `LoginService` and make a request as if authenticated.\n\n**Note:** The vendor has stated that this issue impacts usages of the `jetty-openid` which have configured a nested `LoginService` and where that `LoginService` is capable of rejecting previously authenticated users.\n\n## Vulnerabilities(BDSA,CVE)\n:large_blue_circle: [CVE-2023-41900](https://openhub.net/vulnerabilities/bdsa/CVE-2023-41900) - Improper Authentication\n\n\n\n## Solution\nFixed in version [**11.0.15**](https://github.com/eclipse/jetty.project/releases/tag/jetty-11.0.15) and [**10.0.15**](https://github.com/eclipse/jetty.project/releases/tag/jetty-10.0.15) by [this](https://github.com/eclipse/jetty.project/commit/24b7d06fd5ce5468caa3eaa93688879fb2900fda) commit and in [**9.4.52.v20230823**](https://github.com/eclipse/jetty.project/releases/tag/jetty-9.4.52.v20230823) by [this](https://github.com/eclipse/jetty.project/commit/5f48b4170f36b275e1576548b44bd5009feba669) commit.\n\nThe latest stable releases can be found [here](https://eclipse.dev/jetty/download.php).\n\n\n\n## Dependency tree\n- org.owasp.webgoat.lesson:xxe:v8.1.0:-maven\n    - com.github.tomakehurst:wiremock:2.8.0\n        - org.eclipse.jetty:jetty-servlets:9.4.24.v20191120\n\n\n## References\n* Common Weakness Enumeration: [CWE-287](https://cwe.mitre.org/data/definitions/287.html)\n\n","text":"Eclipse Jetty contains an improper authentication vulnerability. This could allow an authenticated attacker to bypass authentication after it has been rejected or revoked by the `LoginService` and make a request as if authenticated.\n\n**Note:** The vendor has stated that this issue impacts usages of the `jetty-openid` which have configured a nested `LoginService` and where that `LoginService` is capable of rejecting previously authenticated users."},"properties":{"security-severity":"3.8","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-287"]},"defaultConfiguration":{"level":"note"}},{"id":"CVE-2021-34428 jetty-servlets 9.4.24.v20191120: wiremock 2.8.0: org.eclipse.jetty","shortDescription":{"text":"Transitive Dependency: jetty-servlets 9.4.24.v20191120 from wiremock 2.8.0 (CVE-2021-34428)"},"fullDescription":{"text":"Eclipse Jetty is vulnerable to insufficient session expiry. This may result in sessions used on a shared computer persisting for longer than intended."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| jetty-servlets 9.4.24.v20191120  | 9.4.53.20231009  | 11.0.19 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/ee93672f-853c-4083-a5e8-0d5ab21e8bf9?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=d8221aaa-7d55-4b5a-b3e0-2b5cba26ce60)\n\n\n## Description\nEclipse Jetty is vulnerable to insufficient session expiry. This may result in sessions used on a shared computer persisting for longer than intended.\n\n## Vulnerabilities(BDSA,CVE)\n:large_blue_circle: [CVE-2021-34428](https://openhub.net/vulnerabilities/bdsa/CVE-2021-34428) - Insufficient Session Expiration\n\n\n\n## Solution\nFixed in:\n* [**9.4.41.v20210516**](https://github.com/eclipse/jetty.project/releases/tag/jetty-9.4.41.v20210516) by [this](https://github.com/eclipse/jetty.project/commit/087f486b4461746b4ded45833887b3ccb136ee85) commit, \n* [**10.0.3**](https://github.com/eclipse/jetty.project/releases/tag/jetty-10.0.3) by [this](https://github.com/eclipse/jetty.project/commit/cd6462a6252d083b3c9ea2684aab0b4c9669ed19) commit, \n* [**11.0.3**](https://github.com/eclipse/jetty.project/releases/tag/jetty-11.0.3) by [this](https://github.com/eclipse/jetty.project/commit/cd6462a6252d083b3c9ea2684aab0b4c9669ed19) commit.\n\nThe latest stable releases are available [here](https://github.com/eclipse/jetty.project/releases).\n\n## Workaround\nThe vendor has [stated](https://github.com/eclipse/jetty.project/security/advisories/GHSA-m6cp-vxjx-65j6) that a workaround is to ensure that the application catches all Throwables within their `SessionListener#sessionDestroyed()` implementations.\n\n## Dependency tree\n- org.owasp.webgoat.lesson:xxe:v8.1.0:-maven\n    - com.github.tomakehurst:wiremock:2.8.0\n        - org.eclipse.jetty:jetty-servlets:9.4.24.v20191120\n\n\n## References\n* Common Weakness Enumeration: [CWE-613](https://cwe.mitre.org/data/definitions/613.html)\n\n","text":"Eclipse Jetty is vulnerable to insufficient session expiry. This may result in sessions used on a shared computer persisting for longer than intended."},"properties":{"security-severity":"3.8","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-613"]},"defaultConfiguration":{"level":"note"}},{"id":"CVE-2022-2047 jetty-servlets 9.4.24.v20191120: wiremock 2.8.0: org.eclipse.jetty","shortDescription":{"text":"Transitive Dependency: jetty-servlets 9.4.24.v20191120 from wiremock 2.8.0 (CVE-2022-2047)"},"fullDescription":{"text":"Eclipse Jetty does not correctly handle invalid authority segments of HTTP URIs. An authenticated attacker could exploit this flaw by passing an invalid URI that contains an improper authority with no host so that it is interpreted as one with a host."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| jetty-servlets 9.4.24.v20191120  | 9.4.53.20231009  | 11.0.19 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/ee93672f-853c-4083-a5e8-0d5ab21e8bf9?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=d8221aaa-7d55-4b5a-b3e0-2b5cba26ce60)\n\n\n## Description\nEclipse Jetty does not correctly handle invalid authority segments of HTTP URIs. An authenticated attacker could exploit this flaw by passing an invalid URI that contains an improper authority with no host so that it is interpreted as one with a host.\n\n## Vulnerabilities(BDSA,CVE)\n:large_blue_circle: [CVE-2022-2047](https://openhub.net/vulnerabilities/bdsa/CVE-2022-2047) - Weak Input Validation\n\n\n\n## Solution\nFixed in versions:\n* [**9.4.47**](https://github.com/eclipse/jetty.project/releases/tag/jetty-9.4.47.v20220610) by [this](https://github.com/eclipse/jetty.project/commit/4ca8afbbd667c19a084d5ff14a4f08eb7049d1c7) commit.\n* [**10.0.10**](https://github.com/eclipse/jetty.project/releases/tag/jetty-10.0.10) and [**11.0.10**](https://github.com/eclipse/jetty.project/releases/tag/jetty-11.0.10) by [this](https://github.com/eclipse/jetty.project/commit/d1e64f469362bb9371d530cccded5ecb13fa1cb5) commit.\n\nThe latest stable releases can be found [here](https://github.com/eclipse/jetty.project/releases).\n\n\n\n## Dependency tree\n- org.owasp.webgoat.lesson:xxe:v8.1.0:-maven\n    - com.github.tomakehurst:wiremock:2.8.0\n        - org.eclipse.jetty:jetty-servlets:9.4.24.v20191120\n\n\n## References\n* Common Weakness Enumeration: [CWE-20](https://cwe.mitre.org/data/definitions/20.html)\n\n","text":"Eclipse Jetty does not correctly handle invalid authority segments of HTTP URIs. An authenticated attacker could exploit this flaw by passing an invalid URI that contains an improper authority with no host so that it is interpreted as one with a host."},"properties":{"security-severity":"3.8","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-20"]},"defaultConfiguration":{"level":"note"}},{"id":"BDSA-2018-1836 ant-launcher 1.6.2: ant","shortDescription":{"text":"Direct Dependency: ant-launcher 1.6.2 (BDSA-2018-1836)"},"fullDescription":{"text":"Apache ant is vulnerable to an arbitrary file write vulnerability via a directory traversal. An attacker could exploit this vulnerability by supplying the component with a maliciously crafted archive that, when unpacked, would cause an arbitrary file to be written to the file system."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| ant-launcher 1.6.2  | 1.6.5  | 1.6.5 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/7cbbb5f6-39d6-4416-ad7f-916916aa399d?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=2d89e734-2ee5-401d-9f6d-adafa1452cf2)\n\n\n## Description\nApache ant is vulnerable to an arbitrary file write vulnerability via a directory traversal. An attacker could exploit this vulnerability by supplying the component with a maliciously crafted archive that, when unpacked, would cause an arbitrary file to be written to the file system.\n\n## Vulnerabilities(BDSA,CVE)\n:orange_circle: [BDSA-2018-1836](https://openhub.net/vulnerabilities/bdsa/BDSA-2018-1836) - Directory Traversal\n\n\n\n## Solution\nFixed by [this](https://github.com/apache/ant/commit/e56e54565804991c62ec76dad385d2bdda8972a7#diff-32b057b8e95fa2b3f7d644552643010aR11) commit in.\n* **[1.9.12](https://github.com/apache/ant/releases/tag/rel%2F1.9.12)**\n* **[1.10.4](https://github.com/apache/ant/releases/tag/rel%2F1.10.4)**\n\n\n\n**Note:** To prevent this attack it is required to set `allowFilesToEscapeDest` to false as well as updating the component.\n\n\n\n\n\n## References\n* Common Weakness Enumeration: [CWE-22](https://cwe.mitre.org/data/definitions/22.html)\n\n","text":"Apache ant is vulnerable to an arbitrary file write vulnerability via a directory traversal. An attacker could exploit this vulnerability by supplying the component with a maliciously crafted archive that, when unpacked, would cause an arbitrary file to be written to the file system."},"properties":{"security-severity":"8.9","tags":["security","open_source_analysis","direct_dependency","patch_available","external/cwe/cwe-22"]},"defaultConfiguration":{"level":"error"}},{"id":"BDSA-2012-0078 ant-launcher 1.6.2: ant","shortDescription":{"text":"Direct Dependency: ant-launcher 1.6.2 (BDSA-2012-0078)"},"fullDescription":{"text":"Apache Common Compress and Apache Ant are vulnerable to denial-of-service (DoS) conditions due to the potential worst-case performance of the `bzip2` compressing streams.\n\nAn attacker could supply a crafted input to the Common Compress or Ant `bzip2` tasks to cause a substantial amount of processing time to be used up processing the task."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| ant-launcher 1.6.2  | 1.6.5  | 1.6.5 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/7cbbb5f6-39d6-4416-ad7f-916916aa399d?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=2d89e734-2ee5-401d-9f6d-adafa1452cf2)\n\n\n## Description\nApache Common Compress and Apache Ant are vulnerable to denial-of-service (DoS) conditions due to the potential worst-case performance of the `bzip2` compressing streams.\n\nAn attacker could supply a crafted input to the Common Compress or Ant `bzip2` tasks to cause a substantial amount of processing time to be used up processing the task.\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [BDSA-2012-0078](https://openhub.net/vulnerabilities/bdsa/BDSA-2012-0078) - Uncontrolled Resource Consumption\n\n\n\n## Solution\nFixed in Commons Compress version [**1.4.1**](https://github.com/apache/commons-compress/releases/tag/rel%2F1.4.1) by the following commits:\n* [Commit 1](https://github.com/apache/commons-compress/commit/b06f7b41c936ef1a79589d16ea5c1d8b93f71f66)\n* [Commit 2](https://github.com/apache/commons-compress/commit/6e95697e783767f3549f00d7d2e1b002eac4a3d4)\n* [Commit 3](https://github.com/apache/commons-compress/commit/1ce57d976c4f25fe99edcadf079840c278f3cb84)\n* [Commit 4](https://github.com/apache/commons-compress/commit/020c03d8ef579e80511023fb46ece30e9c3dd27d)\n* [Commit 5](https://github.com/apache/commons-compress/commit/ea31005111f0abede7e43e4ba0012e62e0808b22)\n* [Commit 6](https://github.com/apache/commons-compress/commit/cca0e6e5341aacddefd4c4d36cef7cbdbc2a8777)\n* [Commit 7](https://github.com/apache/commons-compress/commit/fdd7459bc5470e90024dbe762249166481cce769)\n* [Commit 8](https://github.com/apache/commons-compress/commit/0600296ab8f8a0bbdfedd483f51b38005eb8e34e)\n* [Commit 9](https://github.com/apache/commons-compress/commit/2ab2fcb356753927afaa731b9d2dcc47d3083408)\n* [Commit 10](https://github.com/apache/commons-compress/commit/6ced422bf5eca3aac05396367bafb33ec21bf74e)\n* [Commit 11](https://github.com/apache/commons-compress/commit/654222e628097763ee6ca561ae77be5c06666173)\n* [Commit 12](https://github.com/apache/commons-compress/commit/8f702469cbf4c451b6dea349290bc4af0f6f76c7)\n\nFixed by [this](https://github.com/apache/ant/commit/08284bc7aa7d066544b30974231240c9b73597eb) commit and [this](https://github.com/apache/ant/commit/8f2b4c5f4f8a977c4b07393e3156b1c02d1085fc) commit in the **master** branch of Ant. These fixes were applied in Ant version [**1.8.4**](https://github.com/apache/ant/tree/rel/1.8.4) by [this](https://github.com/apache/ant/commit/eb9c33f406f31e3705a963e051ff5004dbe8f0cd) commit.\n\nThe latest stable releases of Commons Compress are available [here](https://commons.apache.org/proper/commons-compress/download_compress.cgi), and the latest stable releases of Ant are available [here](https://ant.apache.org/).\n\n\n\n\n\n## References\n* Common Weakness Enumeration: [CWE-400](https://cwe.mitre.org/data/definitions/400.html)\n\n","text":"Apache Common Compress and Apache Ant are vulnerable to denial-of-service (DoS) conditions due to the potential worst-case performance of the `bzip2` compressing streams.\n\nAn attacker could supply a crafted input to the Common Compress or Ant `bzip2` tasks to cause a substantial amount of processing time to be used up processing the task."},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","direct_dependency","patch_available","external/cwe/cwe-400"]},"defaultConfiguration":{"level":"warning"}},{"id":"CVE-2020-1945 ant-launcher 1.6.2: ant","shortDescription":{"text":"Direct Dependency: ant-launcher 1.6.2 (CVE-2020-1945)"},"fullDescription":{"text":"Apache Ant is vulnerable to information disclosure due to the usage of a default temporary directory for several tasks. Some tasks may also allow the integrity of a build to be damaged."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| ant-launcher 1.6.2  | 1.6.5  | 1.6.5 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/7cbbb5f6-39d6-4416-ad7f-916916aa399d?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=2d89e734-2ee5-401d-9f6d-adafa1452cf2)\n\n\n## Description\nApache Ant is vulnerable to information disclosure due to the usage of a default temporary directory for several tasks. Some tasks may also allow the integrity of a build to be damaged.\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [CVE-2020-1945](https://openhub.net/vulnerabilities/bdsa/CVE-2020-1945) - Sensitive Data Exposure\n\n\n\n## Solution\nFixed in [**1.10.9-rc1**](https://github.com/apache/ant/releases/tag/ANT_1.10.9_RC1) by [this](https://github.com/apache/ant/commit/87ac51d3c22bcf7cfd0dc07cb0bd04a496e0d428) commit.\n\n## Workaround\nSteps were added to vulnerable versions to work around the issue. \n\nIn [**1.9.15-rc1**](https://github.com/apache/ant/releases/tag/rel%2F1.9.15) and [**1.10.8-rc1**](https://github.com/apache/ant/releases/tag/ANT_1.10.8_RC1), the vendor has added [this](https://github.com/apache/ant/commit/9c1f4d905da59bf446570ac28df5b68a37281f35) commit and [this](https://github.com/apache/ant/commit/926f339ea30362bec8e53bf5924ce803938163b7) commit. \n\nThe changes introduce the `ant.tmpdir` property which holds the safe directory path for temporary files. It has to be set by the user. The directory itself should also be set up by the user since Ant may not have the correct permissions to do it automatically.\n\nIn [**1.10.8-rc1**](https://github.com/apache/ant/releases/tag/ANT_1.10.8_RC1), [this](https://github.com/apache/ant/commit/a8645a151bc706259fb1789ef587d05482d98612) commit was also added. It attempts to set secure temporary file permissions, but does not protect the directory. \n\nTherefore it is strongly recommended that users set up a private secure temporary directory with appropriate permissions.\n\nThe official mitigation for versions from **1.1** to **1.9.14** and **1.10.0** to **1.10.7** is setting the `java.io.tmpdir` system property to point to a directory only readable and writable by the current user prior to running Ant.\n\nVersions **1.9.15** and **1.10.8** can be trusted to use the Ant property `ant.tmpfile`, but the vendor still highly recommends using a safer private temporary directory instead.\n\n\n\n## References\n* Common Weakness Enumeration: [CWE-200](https://cwe.mitre.org/data/definitions/200.html)\n* Common Weakness Enumeration: [CWE-829](https://cwe.mitre.org/data/definitions/829.html)\n\n","text":"Apache Ant is vulnerable to information disclosure due to the usage of a default temporary directory for several tasks. Some tasks may also allow the integrity of a build to be damaged."},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","direct_dependency","patch_available","external/cwe/cwe-200","external/cwe/cwe-829"]},"defaultConfiguration":{"level":"warning"}},{"id":"BDSA-2020-2577 ant-launcher 1.6.2: ant","shortDescription":{"text":"Direct Dependency: ant-launcher 1.6.2 (BDSA-2020-2577)"},"fullDescription":{"text":"Apache Ant is vulnerable to information disclosure due to the usage of a default temporary directory for several tasks. Some tasks may also allow the integrity of a build to be damaged."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| ant-launcher 1.6.2  | 1.6.5  | 1.6.5 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/7cbbb5f6-39d6-4416-ad7f-916916aa399d?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=2d89e734-2ee5-401d-9f6d-adafa1452cf2)\n\n\n## Description\nApache Ant is vulnerable to information disclosure due to the usage of a default temporary directory for several tasks. Some tasks may also allow the integrity of a build to be damaged.\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [BDSA-2020-2577](https://openhub.net/vulnerabilities/bdsa/BDSA-2020-2577) - Sensitive Data Exposure\n\n\n\n## Solution\nFixed in [**ANT_1.10.9_RC1**](https://github.com/apache/ant/releases/tag/ANT_1.10.9_RC1) by [this](https://github.com/apache/ant/commit/87ac51d3c22bcf7cfd0dc07cb0bd04a496e0d428) commit and [this](http://link-to-the-commit.com) commit.\n\n## Workaround\n**Note:** Per the vendor, The best mitigation still is to make Ant use a directory that is only readable and writable by the current user.\n\nThe official mitigation for versions from **1.1** to **1.9.14** and **1.10.0** to **1.10.7** is setting the `java.io.tmpdir` system property to point to a directory only readable and writable by the current user prior to running Ant.\n\nVersions **1.9.15** and **1.10.8** can be trusted to use the Ant property `ant.tmpfile`, but the vendor still highly recommends using a safer private temporary directory instead.\n\nAnt **1.10.9** will also try to create a temporary directory only accessible by the current user if neither of the properties above is set but may fail to create one if the underlying filesystem doesn't allow it.\n\nExplicitly setting up a directory to use and set the respective property is the only mitigation that will work on every platform.\n\n\n\n## References\n* Common Weakness Enumeration: [CWE-200](https://cwe.mitre.org/data/definitions/200.html)\n* Common Weakness Enumeration: [CWE-829](https://cwe.mitre.org/data/definitions/829.html)\n\n","text":"Apache Ant is vulnerable to information disclosure due to the usage of a default temporary directory for several tasks. Some tasks may also allow the integrity of a build to be damaged."},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","direct_dependency","patch_available","external/cwe/cwe-200","external/cwe/cwe-829"]},"defaultConfiguration":{"level":"warning"}},{"id":"BDSA-2021-2083 ant-launcher 1.6.2: ant","shortDescription":{"text":"Direct Dependency: ant-launcher 1.6.2 (BDSA-2021-2083)"},"fullDescription":{"text":"Apache Ant is vulnerable to an out of memory error via a crafted `TAR` archive. An attacker could exploit this in order to cause as denial-of-service (DoS) condition.\n\n**Note:** Per the Vendor, \"Versions prior to 1.9.0 are not affected when reading tar archives.\"."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| ant-launcher 1.6.2  | 1.6.5  | 1.6.5 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/7cbbb5f6-39d6-4416-ad7f-916916aa399d?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=2d89e734-2ee5-401d-9f6d-adafa1452cf2)\n\n\n## Description\nApache Ant is vulnerable to an out of memory error via a crafted `TAR` archive. An attacker could exploit this in order to cause as denial-of-service (DoS) condition.\n\n**Note:** Per the Vendor, \"Versions prior to 1.9.0 are not affected when reading tar archives.\".\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [BDSA-2021-2083](https://openhub.net/vulnerabilities/bdsa/BDSA-2021-2083) - Uncontrolled Resource Consumption\n\n\n\n## Solution\nFixed in [**1.9.16-rc1**](https://github.com/apache/ant/releases/tag/ANT_1.9.16_RC1) and [**1.10.11-rc1**](https://github.com/apache/ant/releases/tag/ANT_1.10.11_RC1) by [this](https://github.com/apache/ant/commit/6594a2d66f7f060dafcbbf094dd60676db19a842) commit.\n\nThe latest stable releases are available [here](https://github.com/apache/ant/releases).\n\n\n\n\n\n## References\n* Common Weakness Enumeration: [CWE-400](https://cwe.mitre.org/data/definitions/400.html)\n\n","text":"Apache Ant is vulnerable to an out of memory error via a crafted `TAR` archive. An attacker could exploit this in order to cause as denial-of-service (DoS) condition.\n\n**Note:** Per the Vendor, \"Versions prior to 1.9.0 are not affected when reading tar archives.\"."},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","direct_dependency","patch_available","external/cwe/cwe-400"]},"defaultConfiguration":{"level":"warning"}},{"id":"BDSA-2021-2085 ant-launcher 1.6.2: ant","shortDescription":{"text":"Direct Dependency: ant-launcher 1.6.2 (BDSA-2021-2085)"},"fullDescription":{"text":"Apache Ant is vulnerable to an out of memory error via a crafted `ZIP` archive. An attacker could exploit this in order to cause as denial-of-service (DoS) condition."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| ant-launcher 1.6.2  | 1.6.5  | 1.6.5 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/7cbbb5f6-39d6-4416-ad7f-916916aa399d?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=2d89e734-2ee5-401d-9f6d-adafa1452cf2)\n\n\n## Description\nApache Ant is vulnerable to an out of memory error via a crafted `ZIP` archive. An attacker could exploit this in order to cause as denial-of-service (DoS) condition.\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [BDSA-2021-2085](https://openhub.net/vulnerabilities/bdsa/BDSA-2021-2085) - Uncontrolled Resource Consumption\n\n\n\n## Solution\nFixed in [**1.9.16-rc1**](https://github.com/apache/ant/releases/tag/ANT_1.9.16_RC1) and [**1.10.11-rc1**](https://github.com/apache/ant/releases/tag/ANT_1.10.11_RC1) by [this](https://github.com/apache/ant/commit/6594a2d66f7f060dafcbbf094dd60676db19a842) commit.\n\nThe latest stable releases are available [here](https://github.com/apache/ant/releases).\n\n\n\n\n\n## References\n* Common Weakness Enumeration: [CWE-400](https://cwe.mitre.org/data/definitions/400.html)\n\n","text":"Apache Ant is vulnerable to an out of memory error via a crafted `ZIP` archive. An attacker could exploit this in order to cause as denial-of-service (DoS) condition."},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","direct_dependency","patch_available","external/cwe/cwe-400"]},"defaultConfiguration":{"level":"warning"}},{"id":"CVE-2016-1000027 spring-web 5.2.2.RELEASE: spring-boot-starter-web 2.2.2.RELEASE: org.springframework","shortDescription":{"text":"Transitive Dependency: spring-web 5.2.2.RELEASE from spring-boot-starter-web 2.2.2.RELEASE (CVE-2016-1000027)"},"fullDescription":{"text":"Pivotal Spring Framework through 5.3.16 suffers from a potential remote code execution (RCE) issue if used for Java deserialization of untrusted data. Depending on how the library is implemented within a product, this issue may or not occur, and authentication may be required. NOTE: the vendor's position is that untrusted data is not an intended use case. The product's behavior will not be changed because some users rely on deserialization of trusted data."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| spring-web 5.2.2.RELEASE  | 5.3.31  | 6.1.2 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/ba6e9d03-9fbd-4086-9631-99d1ad5e520c?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=09f17d81-b282-43ec-9f2b-36c8021d3ca7)\n\n\n## Description\nPivotal Spring Framework through 5.3.16 suffers from a potential remote code execution (RCE) issue if used for Java deserialization of untrusted data. Depending on how the library is implemented within a product, this issue may or not occur, and authentication may be required. NOTE: the vendor's position is that untrusted data is not an intended use case. The product's behavior will not be changed because some users rely on deserialization of trusted data.\n\n## Vulnerabilities(BDSA,CVE)\n:red_circle: [CVE-2016-1000027](https://openhub.net/vulnerabilities/bdsa/CVE-2016-1000027) - Insecure Object Deserialization\n\n\n\n\n\n\n\n## Dependency tree\n- org.owasp.webgoat:webgoat-container:v8.1.0:-maven\n    - org.springframework.boot:spring-boot-starter-web:2.2.2.RELEASE\n        - org.springframework:spring-web:5.2.2.RELEASE\n\n\n## References\n* Common Weakness Enumeration: [CWE-502](https://cwe.mitre.org/data/definitions/502.html)\n\n","text":"Pivotal Spring Framework through 5.3.16 suffers from a potential remote code execution (RCE) issue if used for Java deserialization of untrusted data. Depending on how the library is implemented within a product, this issue may or not occur, and authentication may be required. NOTE: the vendor's position is that untrusted data is not an intended use case. The product's behavior will not be changed because some users rely on deserialization of trusted data."},"properties":{"security-severity":"9.1","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-502"]},"defaultConfiguration":{"level":"error"}},{"id":"CVE-2022-22965 spring-web 5.2.2.RELEASE: spring-boot-starter-web 2.2.2.RELEASE: org.springframework","shortDescription":{"text":"Transitive Dependency: spring-web 5.2.2.RELEASE from spring-boot-starter-web 2.2.2.RELEASE (CVE-2022-22965)"},"fullDescription":{"text":"Spring Framework is vulnerable to a flaw in the access restrictions to the security sensitive `ClassLoader` property. The restrictions can be bypassed through alternative paths available with Java9 and later. An attacker can leverage this vulnerability to cause remote code execution (RCE).\n\n**Note** this issue exists because the restrictions that were introduced to prevent exploitation of BDSA-2010-0001 (CVE-2010-1622) can be bypassed on platforms where Java9 and later are in use.\n\nThis vulnerability is listed as exploitable by the Cybersecurity \u0026 Infrastructure Security Agency in their [Known Exploited Vulnerabilities Catalog](https://www.cisa.gov/known-exploited-vulnerabilities-catalog)."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| spring-web 5.2.2.RELEASE  | 5.3.31  | 6.1.2 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/ba6e9d03-9fbd-4086-9631-99d1ad5e520c?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=09f17d81-b282-43ec-9f2b-36c8021d3ca7)\n\n\n## Description\nSpring Framework is vulnerable to a flaw in the access restrictions to the security sensitive `ClassLoader` property. The restrictions can be bypassed through alternative paths available with Java9 and later. An attacker can leverage this vulnerability to cause remote code execution (RCE).\n\n**Note** this issue exists because the restrictions that were introduced to prevent exploitation of BDSA-2010-0001 (CVE-2010-1622) can be bypassed on platforms where Java9 and later are in use.\n\nThis vulnerability is listed as exploitable by the Cybersecurity \u0026 Infrastructure Security Agency in their [Known Exploited Vulnerabilities Catalog](https://www.cisa.gov/known-exploited-vulnerabilities-catalog).\n\n## Vulnerabilities(BDSA,CVE)\n:red_circle: [CVE-2022-22965](https://openhub.net/vulnerabilities/bdsa/CVE-2022-22965) - Incomplete List of Disallowed Inputs\n\n\n\n## Solution\nFixed in [**5.3.18**](https://github.com/spring-projects/spring-framework/releases/tag/v5.3.18) by [this](https://github.com/spring-projects/spring-framework/commit/002546b3e4b8d791ea6acccb81eb3168f51abb15) commit and  [**5.2.20**](https://github.com/spring-projects/spring-framework/releases/tag/v5.2.20.RELEASE) by [this](https://github.com/spring-projects/spring-framework/commit/996f701a1916d10202c1d0d281f06ab1f2e1117e) commit .\n\nThe latest releases can be found [here](https://github.com/spring-projects/spring-framework/tags).\n\n## Workaround\nAn official workaround for the issue has been outlined [here](https://spring.io/blog/2022/03/31/spring-framework-rce-early-announcement).\n\n## Dependency tree\n- org.owasp.webgoat:webgoat-container:v8.1.0:-maven\n    - org.springframework.boot:spring-boot-starter-web:2.2.2.RELEASE\n        - org.springframework:spring-web:5.2.2.RELEASE\n\n\n## References\n* Common Weakness Enumeration: [CWE-184](https://cwe.mitre.org/data/definitions/184.html)\n* Common Weakness Enumeration: [CWE-749](https://cwe.mitre.org/data/definitions/749.html)\n\n","text":"Spring Framework is vulnerable to a flaw in the access restrictions to the security sensitive `ClassLoader` property. The restrictions can be bypassed through alternative paths available with Java9 and later. An attacker can leverage this vulnerability to cause remote code execution (RCE).\n\n**Note** this issue exists because the restrictions that were introduced to prevent exploitation of BDSA-2010-0001 (CVE-2010-1622) can be bypassed on platforms where Java9 and later are in use.\n\nThis vulnerability is listed as exploitable by the Cybersecurity \u0026 Infrastructure Security Agency in their [Known Exploited Vulnerabilities Catalog](https://www.cisa.gov/known-exploited-vulnerabilities-catalog)."},"properties":{"security-severity":"9.1","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-184","external/cwe/cwe-749"]},"defaultConfiguration":{"level":"error"}},{"id":"CVE-2020-5397 spring-web 5.2.2.RELEASE: spring-boot-starter-web 2.2.2.RELEASE: org.springframework","shortDescription":{"text":"Transitive Dependency: spring-web 5.2.2.RELEASE from spring-boot-starter-web 2.2.2.RELEASE (CVE-2020-5397)"},"fullDescription":{"text":"Spring Framework is vulnerable to cross-site request forgery (CSRF) attacks via CORS preflight requests which target Spring MVC or Spring WebFlux endpoints."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| spring-web 5.2.2.RELEASE  | 5.3.31  | 6.1.2 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/ba6e9d03-9fbd-4086-9631-99d1ad5e520c?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=09f17d81-b282-43ec-9f2b-36c8021d3ca7)\n\n\n## Description\nSpring Framework is vulnerable to cross-site request forgery (CSRF) attacks via CORS preflight requests which target Spring MVC or Spring WebFlux endpoints.\n\n## Vulnerabilities(BDSA,CVE)\n:orange_circle: [CVE-2020-5397](https://openhub.net/vulnerabilities/bdsa/CVE-2020-5397) - Cross-Site Request Forgery (CSRF)\n\n\n\n## Solution\nFixed in [**5.2.3**](https://github.com/spring-projects/spring-framework/releases/tag/v5.2.3.RELEASE).\n\n\n\n## Dependency tree\n- org.owasp.webgoat:webgoat-container:v8.1.0:-maven\n    - org.springframework.boot:spring-boot-starter-web:2.2.2.RELEASE\n        - org.springframework:spring-web:5.2.2.RELEASE\n\n\n## References\n* Common Weakness Enumeration: [CWE-352](https://cwe.mitre.org/data/definitions/352.html)\n\n","text":"Spring Framework is vulnerable to cross-site request forgery (CSRF) attacks via CORS preflight requests which target Spring MVC or Spring WebFlux endpoints."},"properties":{"security-severity":"8.9","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-352"]},"defaultConfiguration":{"level":"error"}},{"id":"BDSA-2022-0847 spring-web 5.2.2.RELEASE: spring-boot-starter-web 2.2.2.RELEASE: org.springframework","shortDescription":{"text":"Transitive Dependency: spring-web 5.2.2.RELEASE from spring-boot-starter-web 2.2.2.RELEASE (BDSA-2022-0847)"},"fullDescription":{"text":"Software systems using Spring Framework may be vulnerable to unsafe deserialization if they employ unsafe use of certain provided deserialization functionality. A remote attacker could potentially execute arbitrary code on a vulnerable endpoint by passing a maliciously crafted serialized object to that endpoint.\n\n**Note**: This issue only affects software that has been written to leverage specific deserialization functionality provided by the Spring Framework without sanitization."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| spring-web 5.2.2.RELEASE  | 5.3.31  | 6.1.2 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/ba6e9d03-9fbd-4086-9631-99d1ad5e520c?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=09f17d81-b282-43ec-9f2b-36c8021d3ca7)\n\n\n## Description\nSoftware systems using Spring Framework may be vulnerable to unsafe deserialization if they employ unsafe use of certain provided deserialization functionality. A remote attacker could potentially execute arbitrary code on a vulnerable endpoint by passing a maliciously crafted serialized object to that endpoint.\n\n**Note**: This issue only affects software that has been written to leverage specific deserialization functionality provided by the Spring Framework without sanitization.\n\n## Vulnerabilities(BDSA,CVE)\n:orange_circle: [BDSA-2022-0847](https://openhub.net/vulnerabilities/bdsa/BDSA-2022-0847) - Insecure Object Deserialization\n\n\n\n## Solution\nFixed in **[6.0.0-M4](https://github.com/spring-projects/spring-framework/releases/tag/v6.0.0-M4)** by [this](https://github.com/spring-projects/spring-framework/commit/7f7fb58dd0dae86d22268a4b59ac7c72a6c22529) commit.\n\nFixed in **[5.3.18](https://github.com/spring-projects/spring-framework/releases/tag/v5.3.18)** and **[5.2.20](https://github.com/spring-projects/spring-framework/releases/tag/v5.2.20.RELEASE)** by [this](https://github.com/spring-projects/spring-framework/commit/3811cd4c0a0be3aac6e842cf1890610ce986449d) commit.\n\n**Note**: These patches simply annotate the dangerous method as deprecated or documents the dangers. It is the responsibility of developers who call this method to ensure that it is not used with unsanitized untrusted input.\n\n\n\n## Dependency tree\n- org.owasp.webgoat:webgoat-container:v8.1.0:-maven\n    - org.springframework.boot:spring-boot-starter-web:2.2.2.RELEASE\n        - org.springframework:spring-web:5.2.2.RELEASE\n\n\n## References\n* Common Weakness Enumeration: [CWE-502](https://cwe.mitre.org/data/definitions/502.html)\n\n","text":"Software systems using Spring Framework may be vulnerable to unsafe deserialization if they employ unsafe use of certain provided deserialization functionality. A remote attacker could potentially execute arbitrary code on a vulnerable endpoint by passing a maliciously crafted serialized object to that endpoint.\n\n**Note**: This issue only affects software that has been written to leverage specific deserialization functionality provided by the Spring Framework without sanitization."},"properties":{"security-severity":"8.9","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-502"]},"defaultConfiguration":{"level":"error"}},{"id":"CVE-2020-5398 spring-web 5.2.2.RELEASE: spring-boot-starter-web 2.2.2.RELEASE: org.springframework","shortDescription":{"text":"Transitive Dependency: spring-web 5.2.2.RELEASE from spring-boot-starter-web 2.2.2.RELEASE (CVE-2020-5398)"},"fullDescription":{"text":"Spring Framework is vulnerable to a reflected file download (RFD) attack via improper input validation on filenames in a `Content-Disposition` header."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| spring-web 5.2.2.RELEASE  | 5.3.31  | 6.1.2 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/ba6e9d03-9fbd-4086-9631-99d1ad5e520c?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=09f17d81-b282-43ec-9f2b-36c8021d3ca7)\n\n\n## Description\nSpring Framework is vulnerable to a reflected file download (RFD) attack via improper input validation on filenames in a `Content-Disposition` header.\n\n## Vulnerabilities(BDSA,CVE)\n:orange_circle: [CVE-2020-5398](https://openhub.net/vulnerabilities/bdsa/CVE-2020-5398) - Weak Input Validation\n\n\n\n## Solution\nFixed by [this](https://github.com/spring-projects/spring-framework/commit/956ffe68587c8d5f21135b5ce4650af0c2dea933) commit in:\n* [**5.2.3**](https://github.com/spring-projects/spring-framework/releases/tag/v5.2.3.RELEASE)\n* [**5.1.13**](https://github.com/spring-projects/spring-framework/releases/tag/v5.1.13.RELEASE) \n* [**5.0.16**](https://github.com/spring-projects/spring-framework/releases/tag/v5.0.16.RELEASE)\n\n\n\n## Dependency tree\n- org.owasp.webgoat:webgoat-container:v8.1.0:-maven\n    - org.springframework.boot:spring-boot-starter-web:2.2.2.RELEASE\n        - org.springframework:spring-web:5.2.2.RELEASE\n\n\n## References\n* Common Weakness Enumeration: [CWE-20](https://cwe.mitre.org/data/definitions/20.html)\n\n","text":"Spring Framework is vulnerable to a reflected file download (RFD) attack via improper input validation on filenames in a `Content-Disposition` header."},"properties":{"security-severity":"8.9","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-20"]},"defaultConfiguration":{"level":"error"}},{"id":"CVE-2021-22096 spring-web 5.2.2.RELEASE: spring-boot-starter-web 2.2.2.RELEASE: org.springframework","shortDescription":{"text":"Transitive Dependency: spring-web 5.2.2.RELEASE from spring-boot-starter-web 2.2.2.RELEASE (CVE-2021-22096)"},"fullDescription":{"text":"Spring Framework is vulnerable to log file injection due to the insufficient validation of user input in an undisclosed component. An attacker could leverage this issue in order to add arbitrary entries to a log file which could impact both the integrity issues and performance issues.\n\n**Note**: a follow-up to this issue was disclosed as **CVE-2021-22060** (**BDSA-2021-3236**), with further fixed releases that protect against additional types of input and in more places of the Spring Framework codebase."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| spring-web 5.2.2.RELEASE  | 5.3.31  | 6.1.2 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/ba6e9d03-9fbd-4086-9631-99d1ad5e520c?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=09f17d81-b282-43ec-9f2b-36c8021d3ca7)\n\n\n## Description\nSpring Framework is vulnerable to log file injection due to the insufficient validation of user input in an undisclosed component. An attacker could leverage this issue in order to add arbitrary entries to a log file which could impact both the integrity issues and performance issues.\n\n**Note**: a follow-up to this issue was disclosed as **CVE-2021-22060** (**BDSA-2021-3236**), with further fixed releases that protect against additional types of input and in more places of the Spring Framework codebase.\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [CVE-2021-22096](https://openhub.net/vulnerabilities/bdsa/CVE-2021-22096) - Injection in Downstream Component\n\n\n\n## Solution\nFixed in versions [**5.3.14**](https://github.com/spring-projects/spring-framework/releases/tag/v5.3.14) and [**5.2.19**](https://github.com/spring-projects/spring-framework/releases/tag/v5.2.19.RELEASE).\n\nThe latest stable releases can be found [here](https://github.com/spring-projects/spring-framework/releases).\n\n\n\n## Dependency tree\n- org.owasp.webgoat:webgoat-container:v8.1.0:-maven\n    - org.springframework.boot:spring-boot-starter-web:2.2.2.RELEASE\n        - org.springframework:spring-web:5.2.2.RELEASE\n\n\n## References\n* Common Weakness Enumeration: [CWE-74](https://cwe.mitre.org/data/definitions/74.html)\n\n","text":"Spring Framework is vulnerable to log file injection due to the insufficient validation of user input in an undisclosed component. An attacker could leverage this issue in order to add arbitrary entries to a log file which could impact both the integrity issues and performance issues.\n\n**Note**: a follow-up to this issue was disclosed as **CVE-2021-22060** (**BDSA-2021-3236**), with further fixed releases that protect against additional types of input and in more places of the Spring Framework codebase."},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-74"]},"defaultConfiguration":{"level":"warning"}},{"id":"CVE-2021-22060 spring-web 5.2.2.RELEASE: spring-boot-starter-web 2.2.2.RELEASE: org.springframework","shortDescription":{"text":"Transitive Dependency: spring-web 5.2.2.RELEASE from spring-boot-starter-web 2.2.2.RELEASE (CVE-2021-22060)"},"fullDescription":{"text":"Spring Framework is vulnerable to log file injection due to the insufficient validation of user input in an undisclosed component. An attacker could leverage this issue in order to add arbitrary entries to a log file which could impact both the integrity issues and performance issues.\n\n**Note**: the vendor states this issue exists as a follow up to CVE-2021-22096 (BDSA-2022-0011) that protects against additional types of input and in more places of the Spring Framework codebase."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| spring-web 5.2.2.RELEASE  | 5.3.31  | 6.1.2 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/ba6e9d03-9fbd-4086-9631-99d1ad5e520c?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=09f17d81-b282-43ec-9f2b-36c8021d3ca7)\n\n\n## Description\nSpring Framework is vulnerable to log file injection due to the insufficient validation of user input in an undisclosed component. An attacker could leverage this issue in order to add arbitrary entries to a log file which could impact both the integrity issues and performance issues.\n\n**Note**: the vendor states this issue exists as a follow up to CVE-2021-22096 (BDSA-2022-0011) that protects against additional types of input and in more places of the Spring Framework codebase.\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [CVE-2021-22060](https://openhub.net/vulnerabilities/bdsa/CVE-2021-22060) - Injection in Downstream Component\n\n\n\n## Solution\nFixed in versions [**5.3.14**](https://github.com/spring-projects/spring-framework/releases/tag/v5.3.14) and [**5.2.19**](https://github.com/spring-projects/spring-framework/releases/tag/v5.2.19.RELEASE).\n\nThe latest stable releases can be found [here](https://github.com/spring-projects/spring-framework/releases).\n\n\n\n## Dependency tree\n- org.owasp.webgoat:webgoat-container:v8.1.0:-maven\n    - org.springframework.boot:spring-boot-starter-web:2.2.2.RELEASE\n        - org.springframework:spring-web:5.2.2.RELEASE\n\n\n## References\n* Common Weakness Enumeration: [CWE-74](https://cwe.mitre.org/data/definitions/74.html)\n\n","text":"Spring Framework is vulnerable to log file injection due to the insufficient validation of user input in an undisclosed component. An attacker could leverage this issue in order to add arbitrary entries to a log file which could impact both the integrity issues and performance issues.\n\n**Note**: the vendor states this issue exists as a follow up to CVE-2021-22096 (BDSA-2022-0011) that protects against additional types of input and in more places of the Spring Framework codebase."},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-74"]},"defaultConfiguration":{"level":"warning"}},{"id":"CVE-2022-22950 spring-web 5.2.2.RELEASE: spring-boot-starter-web 2.2.2.RELEASE: org.springframework","shortDescription":{"text":"Transitive Dependency: spring-web 5.2.2.RELEASE from spring-boot-starter-web 2.2.2.RELEASE (CVE-2022-22950)"},"fullDescription":{"text":"Spring-Framework's spring-expression is vulnerable to a denial-of-service (DoS) condition. This allows an attacker to use crafted input to cause the spring-expression process to crash due to an exception."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| spring-web 5.2.2.RELEASE  | 5.3.31  | 6.1.2 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/ba6e9d03-9fbd-4086-9631-99d1ad5e520c?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=09f17d81-b282-43ec-9f2b-36c8021d3ca7)\n\n\n## Description\nSpring-Framework's spring-expression is vulnerable to a denial-of-service (DoS) condition. This allows an attacker to use crafted input to cause the spring-expression process to crash due to an exception.\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [CVE-2022-22950](https://openhub.net/vulnerabilities/bdsa/CVE-2022-22950) - Allocation of Resources Without Limits or Throttling\n\n\n\n## Solution\nFixed in version [**5.3.17**](https://github.com/spring-projects/spring-framework/releases/tag/v5.3.17) by [this](https://github.com/spring-projects/spring-framework/commit/94af2ca06bf711de03286999b1c64a703d6de552) commit.\n\nThe latest stable releases can be found [here](https://github.com/spring-projects/spring-framework/tags).\n\n\n\n## Dependency tree\n- org.owasp.webgoat:webgoat-container:v8.1.0:-maven\n    - org.springframework.boot:spring-boot-starter-web:2.2.2.RELEASE\n        - org.springframework:spring-web:5.2.2.RELEASE\n\n\n## References\n* Common Weakness Enumeration: [CWE-770](https://cwe.mitre.org/data/definitions/770.html)\n\n","text":"Spring-Framework's spring-expression is vulnerable to a denial-of-service (DoS) condition. This allows an attacker to use crafted input to cause the spring-expression process to crash due to an exception."},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-770"]},"defaultConfiguration":{"level":"warning"}},{"id":"CVE-2021-22118 spring-web 5.2.2.RELEASE: spring-boot-starter-web 2.2.2.RELEASE: org.springframework","shortDescription":{"text":"Transitive Dependency: spring-web 5.2.2.RELEASE from spring-boot-starter-web 2.2.2.RELEASE (CVE-2021-22118)"},"fullDescription":{"text":"Spring Framework is vulnerable to privilege escalation due to the creation of unsafe temporary directories by the WebFlux component. A local authenticated attacker could modify arbitrary files via maliciously crafted `multipart` requests. \n\nThis vulnerability does not affect Spring MVC applications, or applications that do not handle `multipart` file requests."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| spring-web 5.2.2.RELEASE  | 5.3.31  | 6.1.2 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/ba6e9d03-9fbd-4086-9631-99d1ad5e520c?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=09f17d81-b282-43ec-9f2b-36c8021d3ca7)\n\n\n## Description\nSpring Framework is vulnerable to privilege escalation due to the creation of unsafe temporary directories by the WebFlux component. A local authenticated attacker could modify arbitrary files via maliciously crafted `multipart` requests. \n\nThis vulnerability does not affect Spring MVC applications, or applications that do not handle `multipart` file requests.\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [CVE-2021-22118](https://openhub.net/vulnerabilities/bdsa/CVE-2021-22118) - Third-party component usage\n\n\n\n## Solution\nFixed in [**5.3.7**](https://github.com/spring-projects/spring-framework/releases/tag/v5.3.7)  by [this](https://github.com/spring-projects/spring-framework/commit/cce60c479c22101f24b2b4abebb6d79440b120d1) commit and [this](https://github.com/spring-projects/spring-framework/commit/0d0d75e25322d8161002d861fff3ec04ba8be5ac) commit, and in [**5.2.15**](https://github.com/spring-projects/spring-framework/releases/tag/v5.2.15.RELEASE) by [this](https://github.com/spring-projects/spring-framework/commit/85ad63bd35f6f10fa5549ba9a11869144338bd8a) commit.\n\nThe latest stable releases are available [here](https://github.com/spring-projects/spring-framework/releases/).\n\n\n\n## Dependency tree\n- org.owasp.webgoat:webgoat-container:v8.1.0:-maven\n    - org.springframework.boot:spring-boot-starter-web:2.2.2.RELEASE\n        - org.springframework:spring-web:5.2.2.RELEASE\n\n\n## References\n* Common Weakness Enumeration: [CWE-264](https://cwe.mitre.org/data/definitions/264.html)\n* Common Weakness Enumeration: [CWE-376](https://cwe.mitre.org/data/definitions/376.html)\n\n","text":"Spring Framework is vulnerable to privilege escalation due to the creation of unsafe temporary directories by the WebFlux component. A local authenticated attacker could modify arbitrary files via maliciously crafted `multipart` requests. \n\nThis vulnerability does not affect Spring MVC applications, or applications that do not handle `multipart` file requests."},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-264","external/cwe/cwe-376"]},"defaultConfiguration":{"level":"warning"}},{"id":"CVE-2022-22970 spring-web 5.2.2.RELEASE: spring-boot-starter-web 2.2.2.RELEASE: org.springframework","shortDescription":{"text":"Transitive Dependency: spring-web 5.2.2.RELEASE from spring-boot-starter-web 2.2.2.RELEASE (CVE-2022-22970)"},"fullDescription":{"text":"Spring Framework is vulnerable to denial-of-service (DoS) due to the improper implementation of data binding functionality. A remote attacker could cause a vulnerable server to crash if that server provides file upload functionality."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| spring-web 5.2.2.RELEASE  | 5.3.31  | 6.1.2 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/ba6e9d03-9fbd-4086-9631-99d1ad5e520c?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=09f17d81-b282-43ec-9f2b-36c8021d3ca7)\n\n\n## Description\nSpring Framework is vulnerable to denial-of-service (DoS) due to the improper implementation of data binding functionality. A remote attacker could cause a vulnerable server to crash if that server provides file upload functionality.\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [CVE-2022-22970](https://openhub.net/vulnerabilities/bdsa/CVE-2022-22970) - Incorrect Provision of Specified Functionality\n\n\n\n## Solution\nFixed in version [**5.3.20**](https://github.com/spring-projects/spring-framework/releases/tag/v5.3.20) and in version [**5.2.22**](https://github.com/spring-projects/spring-framework/releases/tag/v5.2.22.RELEASE).\n\nThe latest stable releases can be found [here](https://github.com/spring-projects/spring-framework/releases).\n\n\n\n## Dependency tree\n- org.owasp.webgoat:webgoat-container:v8.1.0:-maven\n    - org.springframework.boot:spring-boot-starter-web:2.2.2.RELEASE\n        - org.springframework:spring-web:5.2.2.RELEASE\n\n\n## References\n* Common Weakness Enumeration: [CWE-684](https://cwe.mitre.org/data/definitions/684.html)\n\n","text":"Spring Framework is vulnerable to denial-of-service (DoS) due to the improper implementation of data binding functionality. A remote attacker could cause a vulnerable server to crash if that server provides file upload functionality."},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-684"]},"defaultConfiguration":{"level":"warning"}},{"id":"CVE-2022-22971 spring-web 5.2.2.RELEASE: spring-boot-starter-web 2.2.2.RELEASE: org.springframework","shortDescription":{"text":"Transitive Dependency: spring-web 5.2.2.RELEASE from spring-boot-starter-web 2.2.2.RELEASE (CVE-2022-22971)"},"fullDescription":{"text":"Spring Framework is vulnerable to denial-of-service (DoS) due to the improper handling of the STOMP protocol for websockets. A remote authenticated attacker could leverage this issue in order to cause a server to crash."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| spring-web 5.2.2.RELEASE  | 5.3.31  | 6.1.2 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/ba6e9d03-9fbd-4086-9631-99d1ad5e520c?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=09f17d81-b282-43ec-9f2b-36c8021d3ca7)\n\n\n## Description\nSpring Framework is vulnerable to denial-of-service (DoS) due to the improper handling of the STOMP protocol for websockets. A remote authenticated attacker could leverage this issue in order to cause a server to crash.\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [CVE-2022-22971](https://openhub.net/vulnerabilities/bdsa/CVE-2022-22971) - Incorrect Provision of Specified Functionality\n\n\n\n## Solution\nFixed in version [**5.3.20**](https://github.com/spring-projects/spring-framework/releases/tag/v5.3.20) and in version [**5.2.22**](https://github.com/spring-projects/spring-framework/releases/tag/v5.2.22.RELEASE).\n\nThe latest stable releases can be found [here](https://github.com/spring-projects/spring-framework/releases).\n\n\n\n## Dependency tree\n- org.owasp.webgoat:webgoat-container:v8.1.0:-maven\n    - org.springframework.boot:spring-boot-starter-web:2.2.2.RELEASE\n        - org.springframework:spring-web:5.2.2.RELEASE\n\n\n## References\n* Common Weakness Enumeration: [CWE-684](https://cwe.mitre.org/data/definitions/684.html)\n\n","text":"Spring Framework is vulnerable to denial-of-service (DoS) due to the improper handling of the STOMP protocol for websockets. A remote authenticated attacker could leverage this issue in order to cause a server to crash."},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-684"]},"defaultConfiguration":{"level":"warning"}},{"id":"CVE-2023-20861 spring-web 5.2.2.RELEASE: spring-boot-starter-web 2.2.2.RELEASE: org.springframework","shortDescription":{"text":"Transitive Dependency: spring-web 5.2.2.RELEASE from spring-boot-starter-web 2.2.2.RELEASE (CVE-2023-20861)"},"fullDescription":{"text":"Spring Framework is vulnerable to denial-of-service (DoS) via specially crafted SpEL expressions. An attacker could exploit this issue by passing a crafted SpEL expression to the application which may result in a crash."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| spring-web 5.2.2.RELEASE  | 5.3.31  | 6.1.2 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/ba6e9d03-9fbd-4086-9631-99d1ad5e520c?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=09f17d81-b282-43ec-9f2b-36c8021d3ca7)\n\n\n## Description\nSpring Framework is vulnerable to denial-of-service (DoS) via specially crafted SpEL expressions. An attacker could exploit this issue by passing a crafted SpEL expression to the application which may result in a crash.\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [CVE-2023-20861](https://openhub.net/vulnerabilities/bdsa/CVE-2023-20861) - Weak Input Validation\n\n\n\n## Solution\nFixed in:\n* [**5.2.23**](https://github.com/spring-projects/spring-framework/releases/tag/v5.2.23.RELEASE) by [this](https://github.com/spring-projects/spring-framework/commit/52c93b1c4b24d70de233a958e60e7c5822bd274f) commit,\n* [**5.3.26**](https://github.com/spring-projects/spring-framework/releases/tag/v5.3.26) by [this](https://github.com/spring-projects/spring-framework/commit/430fc25acad2e85cbdddcd52b64481691f03ebd1) commit,\n* [**6.0.7**](https://github.com/spring-projects/spring-framework/releases/tag/v6.0.7) by [this](https://github.com/spring-projects/spring-framework/commit/935c29e3ddba5b19951e54f6685c70ed45d9cbe5) commit.\n\nThe latest stable releases are available [here](https://github.com/spring-projects/spring-framework/releases).\n\n\n\n## Dependency tree\n- org.owasp.webgoat:webgoat-container:v8.1.0:-maven\n    - org.springframework.boot:spring-boot-starter-web:2.2.2.RELEASE\n        - org.springframework:spring-web:5.2.2.RELEASE\n\n\n## References\n* Common Weakness Enumeration: [CWE-20](https://cwe.mitre.org/data/definitions/20.html)\n\n","text":"Spring Framework is vulnerable to denial-of-service (DoS) via specially crafted SpEL expressions. An attacker could exploit this issue by passing a crafted SpEL expression to the application which may result in a crash."},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-20"]},"defaultConfiguration":{"level":"warning"}},{"id":"CVE-2023-20863 spring-web 5.2.2.RELEASE: spring-boot-starter-web 2.2.2.RELEASE: org.springframework","shortDescription":{"text":"Transitive Dependency: spring-web 5.2.2.RELEASE from spring-boot-starter-web 2.2.2.RELEASE (CVE-2023-20863)"},"fullDescription":{"text":"Spring Framework is vulnerable to denial-of-service (DoS) via specially crafted SpEL expressions."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| spring-web 5.2.2.RELEASE  | 5.3.31  | 6.1.2 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/ba6e9d03-9fbd-4086-9631-99d1ad5e520c?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=09f17d81-b282-43ec-9f2b-36c8021d3ca7)\n\n\n## Description\nSpring Framework is vulnerable to denial-of-service (DoS) via specially crafted SpEL expressions.\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [CVE-2023-20863](https://openhub.net/vulnerabilities/bdsa/CVE-2023-20863) - Weak Input Validation\n\n\n\n## Solution\nFixed in:\n* [**5.2.24**](https://github.com/spring-projects/spring-framework/releases/tag/v5.2.24.RELEASE)\n* [**5.3.27**](https://github.com/spring-projects/spring-framework/releases/tag/v5.3.27)\n* [**6.0.8**](https://github.com/spring-projects/spring-framework/releases/tag/v6.0.8)\n\nThe latest stable releases are available [here](https://github.com/spring-projects/spring-framework/releases).\n\n\n\n## Dependency tree\n- org.owasp.webgoat:webgoat-container:v8.1.0:-maven\n    - org.springframework.boot:spring-boot-starter-web:2.2.2.RELEASE\n        - org.springframework:spring-web:5.2.2.RELEASE\n\n\n## References\n* Common Weakness Enumeration: [CWE-20](https://cwe.mitre.org/data/definitions/20.html)\n\n","text":"Spring Framework is vulnerable to denial-of-service (DoS) via specially crafted SpEL expressions."},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-20"]},"defaultConfiguration":{"level":"warning"}},{"id":"CVE-2020-5421 spring-web 5.2.2.RELEASE: spring-boot-starter-web 2.2.2.RELEASE: org.springframework","shortDescription":{"text":"Transitive Dependency: spring-web 5.2.2.RELEASE from spring-boot-starter-web 2.2.2.RELEASE (CVE-2020-5421)"},"fullDescription":{"text":"It was discovered that Spring Framework was vulnerable to RFD protection bypass. In some instances, depending on the browser used, an attacker could bypass the RFD attack protections via the use of a `jsessionid` path parameter."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| spring-web 5.2.2.RELEASE  | 5.3.31  | 6.1.2 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/ba6e9d03-9fbd-4086-9631-99d1ad5e520c?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=09f17d81-b282-43ec-9f2b-36c8021d3ca7)\n\n\n## Description\nIt was discovered that Spring Framework was vulnerable to RFD protection bypass. In some instances, depending on the browser used, an attacker could bypass the RFD attack protections via the use of a `jsessionid` path parameter.\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [CVE-2020-5421](https://openhub.net/vulnerabilities/bdsa/CVE-2020-5421) - Weak Input Validation\n\n\n\n## Solution\nFixed in:\n* [**5.2.9**](https://github.com/spring-projects/spring-framework/releases/tag/v5.2.9.RELEASE) by [this](https://github.com/spring-projects/spring-framework/commit/899761f0a8890353dc01f10d2af96ae192f3e655) commit,\n* [**5.1.18**](https://github.com/spring-projects/spring-framework/releases/tag/v5.1.18.RELEASE) by [this](https://github.com/spring-projects/spring-framework/commit/a63c8886c00f30fea5b25f50ddf6f56c6eb957bd) commit,\n* [**5.0.19**](https://github.com/spring-projects/spring-framework/releases/tag/v5.0.19.RELEASE) by [this](https://github.com/spring-projects/spring-framework/commit/aec3a4c69e02d87f87258b0ab5c1d6c83f4cb44f) commit,\n* [**4.3.29**](https://github.com/spring-projects/spring-framework/releases/tag/v4.3.29.RELEASE) by [this](https://github.com/spring-projects/spring-framework/commit/2f75212eb667a30fe2fa9b5aca8f22d5e255821f) commit.\n\n\n\n## Dependency tree\n- org.owasp.webgoat:webgoat-container:v8.1.0:-maven\n    - org.springframework.boot:spring-boot-starter-web:2.2.2.RELEASE\n        - org.springframework:spring-web:5.2.2.RELEASE\n\n\n## References\n* Common Weakness Enumeration: [CWE-20](https://cwe.mitre.org/data/definitions/20.html)\n\n","text":"It was discovered that Spring Framework was vulnerable to RFD protection bypass. In some instances, depending on the browser used, an attacker could bypass the RFD attack protections via the use of a `jsessionid` path parameter."},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-20"]},"defaultConfiguration":{"level":"warning"}},{"id":"CVE-2022-22968 spring-web 5.2.2.RELEASE: spring-boot-starter-web 2.2.2.RELEASE: org.springframework","shortDescription":{"text":"Transitive Dependency: spring-web 5.2.2.RELEASE from spring-boot-starter-web 2.2.2.RELEASE (CVE-2022-22968)"},"fullDescription":{"text":"Spring Framework is vulnerable to data binding protection bypass due to improper validation of specified disallowed fields in `DataBinders`. This could be leveraged by an attacker to bypass the suggested workaround to **CVE-2022-22965** (**BDSA-2022-0858**) if it is improperly implemented."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| spring-web 5.2.2.RELEASE  | 5.3.31  | 6.1.2 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/ba6e9d03-9fbd-4086-9631-99d1ad5e520c?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=09f17d81-b282-43ec-9f2b-36c8021d3ca7)\n\n\n## Description\nSpring Framework is vulnerable to data binding protection bypass due to improper validation of specified disallowed fields in `DataBinders`. This could be leveraged by an attacker to bypass the suggested workaround to **CVE-2022-22965** (**BDSA-2022-0858**) if it is improperly implemented.\n\n## Vulnerabilities(BDSA,CVE)\n:large_blue_circle: [CVE-2022-22968](https://openhub.net/vulnerabilities/bdsa/CVE-2022-22968) - Weak Input Validation\n\n\n\n## Solution\nFixed  in [**5.3.19**](https://github.com/spring-projects/spring-framework/releases/tag/v5.3.19) by [this](https://github.com/spring-projects/spring-framework/commit/a7cf19cec5ebd270f97a194d749e2d5701ad2ab7) commit and [**5.2.21**](https://github.com/spring-projects/spring-framework/releases/tag/v5.2.21.RELEASE) by [this](https://github.com/spring-projects/spring-framework/commit/833e750175349ab4fd502109a8b41af77e25cdea) commit.\n\n\n\n## Dependency tree\n- org.owasp.webgoat:webgoat-container:v8.1.0:-maven\n    - org.springframework.boot:spring-boot-starter-web:2.2.2.RELEASE\n        - org.springframework:spring-web:5.2.2.RELEASE\n\n\n## References\n* Common Weakness Enumeration: [CWE-20](https://cwe.mitre.org/data/definitions/20.html)\n\n","text":"Spring Framework is vulnerable to data binding protection bypass due to improper validation of specified disallowed fields in `DataBinders`. This could be leveraged by an attacker to bypass the suggested workaround to **CVE-2022-22965** (**BDSA-2022-0858**) if it is improperly implemented."},"properties":{"security-severity":"3.8","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-20"]},"defaultConfiguration":{"level":"note"}},{"id":"CVE-2016-1000027 spring-tx 5.2.2.RELEASE: spring-boot-starter-data-jpa 2.2.2.RELEASE: org.springframework","shortDescription":{"text":"Transitive Dependency: spring-tx 5.2.2.RELEASE from spring-boot-starter-data-jpa 2.2.2.RELEASE (CVE-2016-1000027)"},"fullDescription":{"text":"Pivotal Spring Framework through 5.3.16 suffers from a potential remote code execution (RCE) issue if used for Java deserialization of untrusted data. Depending on how the library is implemented within a product, this issue may or not occur, and authentication may be required. NOTE: the vendor's position is that untrusted data is not an intended use case. The product's behavior will not be changed because some users rely on deserialization of trusted data."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| spring-tx 5.2.2.RELEASE  | 5.3.31  | 6.1.2 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/ba6e9d03-9fbd-4086-9631-99d1ad5e520c?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=09f17d81-b282-43ec-9f2b-36c8021d3ca7)\n\n\n## Description\nPivotal Spring Framework through 5.3.16 suffers from a potential remote code execution (RCE) issue if used for Java deserialization of untrusted data. Depending on how the library is implemented within a product, this issue may or not occur, and authentication may be required. NOTE: the vendor's position is that untrusted data is not an intended use case. The product's behavior will not be changed because some users rely on deserialization of trusted data.\n\n## Vulnerabilities(BDSA,CVE)\n:red_circle: [CVE-2016-1000027](https://openhub.net/vulnerabilities/bdsa/CVE-2016-1000027) - Insecure Object Deserialization\n\n\n\n\n\n\n\n## Dependency tree\n- org.owasp.webgoat:webgoat-container:v8.1.0:-maven\n    - org.springframework.boot:spring-boot-starter-data-jpa:2.2.2.RELEASE\n        - org.springframework.data:spring-data-jpa:2.2.3.RELEASE\n            - org.springframework:spring-tx:5.2.2.RELEASE\n\n\n## References\n* Common Weakness Enumeration: [CWE-502](https://cwe.mitre.org/data/definitions/502.html)\n\n","text":"Pivotal Spring Framework through 5.3.16 suffers from a potential remote code execution (RCE) issue if used for Java deserialization of untrusted data. Depending on how the library is implemented within a product, this issue may or not occur, and authentication may be required. NOTE: the vendor's position is that untrusted data is not an intended use case. The product's behavior will not be changed because some users rely on deserialization of trusted data."},"properties":{"security-severity":"9.1","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-502"]},"defaultConfiguration":{"level":"error"}},{"id":"CVE-2022-22965 spring-tx 5.2.2.RELEASE: spring-boot-starter-data-jpa 2.2.2.RELEASE: org.springframework","shortDescription":{"text":"Transitive Dependency: spring-tx 5.2.2.RELEASE from spring-boot-starter-data-jpa 2.2.2.RELEASE (CVE-2022-22965)"},"fullDescription":{"text":"Spring Framework is vulnerable to a flaw in the access restrictions to the security sensitive `ClassLoader` property. The restrictions can be bypassed through alternative paths available with Java9 and later. An attacker can leverage this vulnerability to cause remote code execution (RCE).\n\n**Note** this issue exists because the restrictions that were introduced to prevent exploitation of BDSA-2010-0001 (CVE-2010-1622) can be bypassed on platforms where Java9 and later are in use.\n\nThis vulnerability is listed as exploitable by the Cybersecurity \u0026 Infrastructure Security Agency in their [Known Exploited Vulnerabilities Catalog](https://www.cisa.gov/known-exploited-vulnerabilities-catalog)."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| spring-tx 5.2.2.RELEASE  | 5.3.31  | 6.1.2 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/ba6e9d03-9fbd-4086-9631-99d1ad5e520c?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=09f17d81-b282-43ec-9f2b-36c8021d3ca7)\n\n\n## Description\nSpring Framework is vulnerable to a flaw in the access restrictions to the security sensitive `ClassLoader` property. The restrictions can be bypassed through alternative paths available with Java9 and later. An attacker can leverage this vulnerability to cause remote code execution (RCE).\n\n**Note** this issue exists because the restrictions that were introduced to prevent exploitation of BDSA-2010-0001 (CVE-2010-1622) can be bypassed on platforms where Java9 and later are in use.\n\nThis vulnerability is listed as exploitable by the Cybersecurity \u0026 Infrastructure Security Agency in their [Known Exploited Vulnerabilities Catalog](https://www.cisa.gov/known-exploited-vulnerabilities-catalog).\n\n## Vulnerabilities(BDSA,CVE)\n:red_circle: [CVE-2022-22965](https://openhub.net/vulnerabilities/bdsa/CVE-2022-22965) - Incomplete List of Disallowed Inputs\n\n\n\n## Solution\nFixed in [**5.3.18**](https://github.com/spring-projects/spring-framework/releases/tag/v5.3.18) by [this](https://github.com/spring-projects/spring-framework/commit/002546b3e4b8d791ea6acccb81eb3168f51abb15) commit and  [**5.2.20**](https://github.com/spring-projects/spring-framework/releases/tag/v5.2.20.RELEASE) by [this](https://github.com/spring-projects/spring-framework/commit/996f701a1916d10202c1d0d281f06ab1f2e1117e) commit .\n\nThe latest releases can be found [here](https://github.com/spring-projects/spring-framework/tags).\n\n## Workaround\nAn official workaround for the issue has been outlined [here](https://spring.io/blog/2022/03/31/spring-framework-rce-early-announcement).\n\n## Dependency tree\n- org.owasp.webgoat:webgoat-container:v8.1.0:-maven\n    - org.springframework.boot:spring-boot-starter-data-jpa:2.2.2.RELEASE\n        - org.springframework.data:spring-data-jpa:2.2.3.RELEASE\n            - org.springframework:spring-tx:5.2.2.RELEASE\n\n\n## References\n* Common Weakness Enumeration: [CWE-184](https://cwe.mitre.org/data/definitions/184.html)\n* Common Weakness Enumeration: [CWE-749](https://cwe.mitre.org/data/definitions/749.html)\n\n","text":"Spring Framework is vulnerable to a flaw in the access restrictions to the security sensitive `ClassLoader` property. The restrictions can be bypassed through alternative paths available with Java9 and later. An attacker can leverage this vulnerability to cause remote code execution (RCE).\n\n**Note** this issue exists because the restrictions that were introduced to prevent exploitation of BDSA-2010-0001 (CVE-2010-1622) can be bypassed on platforms where Java9 and later are in use.\n\nThis vulnerability is listed as exploitable by the Cybersecurity \u0026 Infrastructure Security Agency in their [Known Exploited Vulnerabilities Catalog](https://www.cisa.gov/known-exploited-vulnerabilities-catalog)."},"properties":{"security-severity":"9.1","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-184","external/cwe/cwe-749"]},"defaultConfiguration":{"level":"error"}},{"id":"CVE-2020-5397 spring-tx 5.2.2.RELEASE: spring-boot-starter-data-jpa 2.2.2.RELEASE: org.springframework","shortDescription":{"text":"Transitive Dependency: spring-tx 5.2.2.RELEASE from spring-boot-starter-data-jpa 2.2.2.RELEASE (CVE-2020-5397)"},"fullDescription":{"text":"Spring Framework is vulnerable to cross-site request forgery (CSRF) attacks via CORS preflight requests which target Spring MVC or Spring WebFlux endpoints."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| spring-tx 5.2.2.RELEASE  | 5.3.31  | 6.1.2 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/ba6e9d03-9fbd-4086-9631-99d1ad5e520c?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=09f17d81-b282-43ec-9f2b-36c8021d3ca7)\n\n\n## Description\nSpring Framework is vulnerable to cross-site request forgery (CSRF) attacks via CORS preflight requests which target Spring MVC or Spring WebFlux endpoints.\n\n## Vulnerabilities(BDSA,CVE)\n:orange_circle: [CVE-2020-5397](https://openhub.net/vulnerabilities/bdsa/CVE-2020-5397) - Cross-Site Request Forgery (CSRF)\n\n\n\n## Solution\nFixed in [**5.2.3**](https://github.com/spring-projects/spring-framework/releases/tag/v5.2.3.RELEASE).\n\n\n\n## Dependency tree\n- org.owasp.webgoat:webgoat-container:v8.1.0:-maven\n    - org.springframework.boot:spring-boot-starter-data-jpa:2.2.2.RELEASE\n        - org.springframework.data:spring-data-jpa:2.2.3.RELEASE\n            - org.springframework:spring-tx:5.2.2.RELEASE\n\n\n## References\n* Common Weakness Enumeration: [CWE-352](https://cwe.mitre.org/data/definitions/352.html)\n\n","text":"Spring Framework is vulnerable to cross-site request forgery (CSRF) attacks via CORS preflight requests which target Spring MVC or Spring WebFlux endpoints."},"properties":{"security-severity":"8.9","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-352"]},"defaultConfiguration":{"level":"error"}},{"id":"BDSA-2022-0847 spring-tx 5.2.2.RELEASE: spring-boot-starter-data-jpa 2.2.2.RELEASE: org.springframework","shortDescription":{"text":"Transitive Dependency: spring-tx 5.2.2.RELEASE from spring-boot-starter-data-jpa 2.2.2.RELEASE (BDSA-2022-0847)"},"fullDescription":{"text":"Software systems using Spring Framework may be vulnerable to unsafe deserialization if they employ unsafe use of certain provided deserialization functionality. A remote attacker could potentially execute arbitrary code on a vulnerable endpoint by passing a maliciously crafted serialized object to that endpoint.\n\n**Note**: This issue only affects software that has been written to leverage specific deserialization functionality provided by the Spring Framework without sanitization."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| spring-tx 5.2.2.RELEASE  | 5.3.31  | 6.1.2 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/ba6e9d03-9fbd-4086-9631-99d1ad5e520c?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=09f17d81-b282-43ec-9f2b-36c8021d3ca7)\n\n\n## Description\nSoftware systems using Spring Framework may be vulnerable to unsafe deserialization if they employ unsafe use of certain provided deserialization functionality. A remote attacker could potentially execute arbitrary code on a vulnerable endpoint by passing a maliciously crafted serialized object to that endpoint.\n\n**Note**: This issue only affects software that has been written to leverage specific deserialization functionality provided by the Spring Framework without sanitization.\n\n## Vulnerabilities(BDSA,CVE)\n:orange_circle: [BDSA-2022-0847](https://openhub.net/vulnerabilities/bdsa/BDSA-2022-0847) - Insecure Object Deserialization\n\n\n\n## Solution\nFixed in **[6.0.0-M4](https://github.com/spring-projects/spring-framework/releases/tag/v6.0.0-M4)** by [this](https://github.com/spring-projects/spring-framework/commit/7f7fb58dd0dae86d22268a4b59ac7c72a6c22529) commit.\n\nFixed in **[5.3.18](https://github.com/spring-projects/spring-framework/releases/tag/v5.3.18)** and **[5.2.20](https://github.com/spring-projects/spring-framework/releases/tag/v5.2.20.RELEASE)** by [this](https://github.com/spring-projects/spring-framework/commit/3811cd4c0a0be3aac6e842cf1890610ce986449d) commit.\n\n**Note**: These patches simply annotate the dangerous method as deprecated or documents the dangers. It is the responsibility of developers who call this method to ensure that it is not used with unsanitized untrusted input.\n\n\n\n## Dependency tree\n- org.owasp.webgoat:webgoat-container:v8.1.0:-maven\n    - org.springframework.boot:spring-boot-starter-data-jpa:2.2.2.RELEASE\n        - org.springframework.data:spring-data-jpa:2.2.3.RELEASE\n            - org.springframework:spring-tx:5.2.2.RELEASE\n\n\n## References\n* Common Weakness Enumeration: [CWE-502](https://cwe.mitre.org/data/definitions/502.html)\n\n","text":"Software systems using Spring Framework may be vulnerable to unsafe deserialization if they employ unsafe use of certain provided deserialization functionality. A remote attacker could potentially execute arbitrary code on a vulnerable endpoint by passing a maliciously crafted serialized object to that endpoint.\n\n**Note**: This issue only affects software that has been written to leverage specific deserialization functionality provided by the Spring Framework without sanitization."},"properties":{"security-severity":"8.9","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-502"]},"defaultConfiguration":{"level":"error"}},{"id":"CVE-2020-5398 spring-tx 5.2.2.RELEASE: spring-boot-starter-data-jpa 2.2.2.RELEASE: org.springframework","shortDescription":{"text":"Transitive Dependency: spring-tx 5.2.2.RELEASE from spring-boot-starter-data-jpa 2.2.2.RELEASE (CVE-2020-5398)"},"fullDescription":{"text":"Spring Framework is vulnerable to a reflected file download (RFD) attack via improper input validation on filenames in a `Content-Disposition` header."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| spring-tx 5.2.2.RELEASE  | 5.3.31  | 6.1.2 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/ba6e9d03-9fbd-4086-9631-99d1ad5e520c?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=09f17d81-b282-43ec-9f2b-36c8021d3ca7)\n\n\n## Description\nSpring Framework is vulnerable to a reflected file download (RFD) attack via improper input validation on filenames in a `Content-Disposition` header.\n\n## Vulnerabilities(BDSA,CVE)\n:orange_circle: [CVE-2020-5398](https://openhub.net/vulnerabilities/bdsa/CVE-2020-5398) - Weak Input Validation\n\n\n\n## Solution\nFixed by [this](https://github.com/spring-projects/spring-framework/commit/956ffe68587c8d5f21135b5ce4650af0c2dea933) commit in:\n* [**5.2.3**](https://github.com/spring-projects/spring-framework/releases/tag/v5.2.3.RELEASE)\n* [**5.1.13**](https://github.com/spring-projects/spring-framework/releases/tag/v5.1.13.RELEASE) \n* [**5.0.16**](https://github.com/spring-projects/spring-framework/releases/tag/v5.0.16.RELEASE)\n\n\n\n## Dependency tree\n- org.owasp.webgoat:webgoat-container:v8.1.0:-maven\n    - org.springframework.boot:spring-boot-starter-data-jpa:2.2.2.RELEASE\n        - org.springframework.data:spring-data-jpa:2.2.3.RELEASE\n            - org.springframework:spring-tx:5.2.2.RELEASE\n\n\n## References\n* Common Weakness Enumeration: [CWE-20](https://cwe.mitre.org/data/definitions/20.html)\n\n","text":"Spring Framework is vulnerable to a reflected file download (RFD) attack via improper input validation on filenames in a `Content-Disposition` header."},"properties":{"security-severity":"8.9","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-20"]},"defaultConfiguration":{"level":"error"}},{"id":"CVE-2021-22096 spring-tx 5.2.2.RELEASE: spring-boot-starter-data-jpa 2.2.2.RELEASE: org.springframework","shortDescription":{"text":"Transitive Dependency: spring-tx 5.2.2.RELEASE from spring-boot-starter-data-jpa 2.2.2.RELEASE (CVE-2021-22096)"},"fullDescription":{"text":"Spring Framework is vulnerable to log file injection due to the insufficient validation of user input in an undisclosed component. An attacker could leverage this issue in order to add arbitrary entries to a log file which could impact both the integrity issues and performance issues.\n\n**Note**: a follow-up to this issue was disclosed as **CVE-2021-22060** (**BDSA-2021-3236**), with further fixed releases that protect against additional types of input and in more places of the Spring Framework codebase."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| spring-tx 5.2.2.RELEASE  | 5.3.31  | 6.1.2 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/ba6e9d03-9fbd-4086-9631-99d1ad5e520c?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=09f17d81-b282-43ec-9f2b-36c8021d3ca7)\n\n\n## Description\nSpring Framework is vulnerable to log file injection due to the insufficient validation of user input in an undisclosed component. An attacker could leverage this issue in order to add arbitrary entries to a log file which could impact both the integrity issues and performance issues.\n\n**Note**: a follow-up to this issue was disclosed as **CVE-2021-22060** (**BDSA-2021-3236**), with further fixed releases that protect against additional types of input and in more places of the Spring Framework codebase.\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [CVE-2021-22096](https://openhub.net/vulnerabilities/bdsa/CVE-2021-22096) - Injection in Downstream Component\n\n\n\n## Solution\nFixed in versions [**5.3.14**](https://github.com/spring-projects/spring-framework/releases/tag/v5.3.14) and [**5.2.19**](https://github.com/spring-projects/spring-framework/releases/tag/v5.2.19.RELEASE).\n\nThe latest stable releases can be found [here](https://github.com/spring-projects/spring-framework/releases).\n\n\n\n## Dependency tree\n- org.owasp.webgoat:webgoat-container:v8.1.0:-maven\n    - org.springframework.boot:spring-boot-starter-data-jpa:2.2.2.RELEASE\n        - org.springframework.data:spring-data-jpa:2.2.3.RELEASE\n            - org.springframework:spring-tx:5.2.2.RELEASE\n\n\n## References\n* Common Weakness Enumeration: [CWE-74](https://cwe.mitre.org/data/definitions/74.html)\n\n","text":"Spring Framework is vulnerable to log file injection due to the insufficient validation of user input in an undisclosed component. An attacker could leverage this issue in order to add arbitrary entries to a log file which could impact both the integrity issues and performance issues.\n\n**Note**: a follow-up to this issue was disclosed as **CVE-2021-22060** (**BDSA-2021-3236**), with further fixed releases that protect against additional types of input and in more places of the Spring Framework codebase."},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-74"]},"defaultConfiguration":{"level":"warning"}},{"id":"CVE-2021-22060 spring-tx 5.2.2.RELEASE: spring-boot-starter-data-jpa 2.2.2.RELEASE: org.springframework","shortDescription":{"text":"Transitive Dependency: spring-tx 5.2.2.RELEASE from spring-boot-starter-data-jpa 2.2.2.RELEASE (CVE-2021-22060)"},"fullDescription":{"text":"Spring Framework is vulnerable to log file injection due to the insufficient validation of user input in an undisclosed component. An attacker could leverage this issue in order to add arbitrary entries to a log file which could impact both the integrity issues and performance issues.\n\n**Note**: the vendor states this issue exists as a follow up to CVE-2021-22096 (BDSA-2022-0011) that protects against additional types of input and in more places of the Spring Framework codebase."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| spring-tx 5.2.2.RELEASE  | 5.3.31  | 6.1.2 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/ba6e9d03-9fbd-4086-9631-99d1ad5e520c?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=09f17d81-b282-43ec-9f2b-36c8021d3ca7)\n\n\n## Description\nSpring Framework is vulnerable to log file injection due to the insufficient validation of user input in an undisclosed component. An attacker could leverage this issue in order to add arbitrary entries to a log file which could impact both the integrity issues and performance issues.\n\n**Note**: the vendor states this issue exists as a follow up to CVE-2021-22096 (BDSA-2022-0011) that protects against additional types of input and in more places of the Spring Framework codebase.\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [CVE-2021-22060](https://openhub.net/vulnerabilities/bdsa/CVE-2021-22060) - Injection in Downstream Component\n\n\n\n## Solution\nFixed in versions [**5.3.14**](https://github.com/spring-projects/spring-framework/releases/tag/v5.3.14) and [**5.2.19**](https://github.com/spring-projects/spring-framework/releases/tag/v5.2.19.RELEASE).\n\nThe latest stable releases can be found [here](https://github.com/spring-projects/spring-framework/releases).\n\n\n\n## Dependency tree\n- org.owasp.webgoat:webgoat-container:v8.1.0:-maven\n    - org.springframework.boot:spring-boot-starter-data-jpa:2.2.2.RELEASE\n        - org.springframework.data:spring-data-jpa:2.2.3.RELEASE\n            - org.springframework:spring-tx:5.2.2.RELEASE\n\n\n## References\n* Common Weakness Enumeration: [CWE-74](https://cwe.mitre.org/data/definitions/74.html)\n\n","text":"Spring Framework is vulnerable to log file injection due to the insufficient validation of user input in an undisclosed component. An attacker could leverage this issue in order to add arbitrary entries to a log file which could impact both the integrity issues and performance issues.\n\n**Note**: the vendor states this issue exists as a follow up to CVE-2021-22096 (BDSA-2022-0011) that protects against additional types of input and in more places of the Spring Framework codebase."},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-74"]},"defaultConfiguration":{"level":"warning"}},{"id":"CVE-2022-22950 spring-tx 5.2.2.RELEASE: spring-boot-starter-data-jpa 2.2.2.RELEASE: org.springframework","shortDescription":{"text":"Transitive Dependency: spring-tx 5.2.2.RELEASE from spring-boot-starter-data-jpa 2.2.2.RELEASE (CVE-2022-22950)"},"fullDescription":{"text":"Spring-Framework's spring-expression is vulnerable to a denial-of-service (DoS) condition. This allows an attacker to use crafted input to cause the spring-expression process to crash due to an exception."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| spring-tx 5.2.2.RELEASE  | 5.3.31  | 6.1.2 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/ba6e9d03-9fbd-4086-9631-99d1ad5e520c?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=09f17d81-b282-43ec-9f2b-36c8021d3ca7)\n\n\n## Description\nSpring-Framework's spring-expression is vulnerable to a denial-of-service (DoS) condition. This allows an attacker to use crafted input to cause the spring-expression process to crash due to an exception.\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [CVE-2022-22950](https://openhub.net/vulnerabilities/bdsa/CVE-2022-22950) - Allocation of Resources Without Limits or Throttling\n\n\n\n## Solution\nFixed in version [**5.3.17**](https://github.com/spring-projects/spring-framework/releases/tag/v5.3.17) by [this](https://github.com/spring-projects/spring-framework/commit/94af2ca06bf711de03286999b1c64a703d6de552) commit.\n\nThe latest stable releases can be found [here](https://github.com/spring-projects/spring-framework/tags).\n\n\n\n## Dependency tree\n- org.owasp.webgoat:webgoat-container:v8.1.0:-maven\n    - org.springframework.boot:spring-boot-starter-data-jpa:2.2.2.RELEASE\n        - org.springframework.data:spring-data-jpa:2.2.3.RELEASE\n            - org.springframework:spring-tx:5.2.2.RELEASE\n\n\n## References\n* Common Weakness Enumeration: [CWE-770](https://cwe.mitre.org/data/definitions/770.html)\n\n","text":"Spring-Framework's spring-expression is vulnerable to a denial-of-service (DoS) condition. This allows an attacker to use crafted input to cause the spring-expression process to crash due to an exception."},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-770"]},"defaultConfiguration":{"level":"warning"}},{"id":"CVE-2021-22118 spring-tx 5.2.2.RELEASE: spring-boot-starter-data-jpa 2.2.2.RELEASE: org.springframework","shortDescription":{"text":"Transitive Dependency: spring-tx 5.2.2.RELEASE from spring-boot-starter-data-jpa 2.2.2.RELEASE (CVE-2021-22118)"},"fullDescription":{"text":"Spring Framework is vulnerable to privilege escalation due to the creation of unsafe temporary directories by the WebFlux component. A local authenticated attacker could modify arbitrary files via maliciously crafted `multipart` requests. \n\nThis vulnerability does not affect Spring MVC applications, or applications that do not handle `multipart` file requests."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| spring-tx 5.2.2.RELEASE  | 5.3.31  | 6.1.2 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/ba6e9d03-9fbd-4086-9631-99d1ad5e520c?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=09f17d81-b282-43ec-9f2b-36c8021d3ca7)\n\n\n## Description\nSpring Framework is vulnerable to privilege escalation due to the creation of unsafe temporary directories by the WebFlux component. A local authenticated attacker could modify arbitrary files via maliciously crafted `multipart` requests. \n\nThis vulnerability does not affect Spring MVC applications, or applications that do not handle `multipart` file requests.\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [CVE-2021-22118](https://openhub.net/vulnerabilities/bdsa/CVE-2021-22118) - Third-party component usage\n\n\n\n## Solution\nFixed in [**5.3.7**](https://github.com/spring-projects/spring-framework/releases/tag/v5.3.7)  by [this](https://github.com/spring-projects/spring-framework/commit/cce60c479c22101f24b2b4abebb6d79440b120d1) commit and [this](https://github.com/spring-projects/spring-framework/commit/0d0d75e25322d8161002d861fff3ec04ba8be5ac) commit, and in [**5.2.15**](https://github.com/spring-projects/spring-framework/releases/tag/v5.2.15.RELEASE) by [this](https://github.com/spring-projects/spring-framework/commit/85ad63bd35f6f10fa5549ba9a11869144338bd8a) commit.\n\nThe latest stable releases are available [here](https://github.com/spring-projects/spring-framework/releases/).\n\n\n\n## Dependency tree\n- org.owasp.webgoat:webgoat-container:v8.1.0:-maven\n    - org.springframework.boot:spring-boot-starter-data-jpa:2.2.2.RELEASE\n        - org.springframework.data:spring-data-jpa:2.2.3.RELEASE\n            - org.springframework:spring-tx:5.2.2.RELEASE\n\n\n## References\n* Common Weakness Enumeration: [CWE-264](https://cwe.mitre.org/data/definitions/264.html)\n* Common Weakness Enumeration: [CWE-376](https://cwe.mitre.org/data/definitions/376.html)\n\n","text":"Spring Framework is vulnerable to privilege escalation due to the creation of unsafe temporary directories by the WebFlux component. A local authenticated attacker could modify arbitrary files via maliciously crafted `multipart` requests. \n\nThis vulnerability does not affect Spring MVC applications, or applications that do not handle `multipart` file requests."},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-264","external/cwe/cwe-376"]},"defaultConfiguration":{"level":"warning"}},{"id":"CVE-2022-22970 spring-tx 5.2.2.RELEASE: spring-boot-starter-data-jpa 2.2.2.RELEASE: org.springframework","shortDescription":{"text":"Transitive Dependency: spring-tx 5.2.2.RELEASE from spring-boot-starter-data-jpa 2.2.2.RELEASE (CVE-2022-22970)"},"fullDescription":{"text":"Spring Framework is vulnerable to denial-of-service (DoS) due to the improper implementation of data binding functionality. A remote attacker could cause a vulnerable server to crash if that server provides file upload functionality."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| spring-tx 5.2.2.RELEASE  | 5.3.31  | 6.1.2 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/ba6e9d03-9fbd-4086-9631-99d1ad5e520c?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=09f17d81-b282-43ec-9f2b-36c8021d3ca7)\n\n\n## Description\nSpring Framework is vulnerable to denial-of-service (DoS) due to the improper implementation of data binding functionality. A remote attacker could cause a vulnerable server to crash if that server provides file upload functionality.\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [CVE-2022-22970](https://openhub.net/vulnerabilities/bdsa/CVE-2022-22970) - Incorrect Provision of Specified Functionality\n\n\n\n## Solution\nFixed in version [**5.3.20**](https://github.com/spring-projects/spring-framework/releases/tag/v5.3.20) and in version [**5.2.22**](https://github.com/spring-projects/spring-framework/releases/tag/v5.2.22.RELEASE).\n\nThe latest stable releases can be found [here](https://github.com/spring-projects/spring-framework/releases).\n\n\n\n## Dependency tree\n- org.owasp.webgoat:webgoat-container:v8.1.0:-maven\n    - org.springframework.boot:spring-boot-starter-data-jpa:2.2.2.RELEASE\n        - org.springframework.data:spring-data-jpa:2.2.3.RELEASE\n            - org.springframework:spring-tx:5.2.2.RELEASE\n\n\n## References\n* Common Weakness Enumeration: [CWE-684](https://cwe.mitre.org/data/definitions/684.html)\n\n","text":"Spring Framework is vulnerable to denial-of-service (DoS) due to the improper implementation of data binding functionality. A remote attacker could cause a vulnerable server to crash if that server provides file upload functionality."},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-684"]},"defaultConfiguration":{"level":"warning"}},{"id":"CVE-2022-22971 spring-tx 5.2.2.RELEASE: spring-boot-starter-data-jpa 2.2.2.RELEASE: org.springframework","shortDescription":{"text":"Transitive Dependency: spring-tx 5.2.2.RELEASE from spring-boot-starter-data-jpa 2.2.2.RELEASE (CVE-2022-22971)"},"fullDescription":{"text":"Spring Framework is vulnerable to denial-of-service (DoS) due to the improper handling of the STOMP protocol for websockets. A remote authenticated attacker could leverage this issue in order to cause a server to crash."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| spring-tx 5.2.2.RELEASE  | 5.3.31  | 6.1.2 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/ba6e9d03-9fbd-4086-9631-99d1ad5e520c?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=09f17d81-b282-43ec-9f2b-36c8021d3ca7)\n\n\n## Description\nSpring Framework is vulnerable to denial-of-service (DoS) due to the improper handling of the STOMP protocol for websockets. A remote authenticated attacker could leverage this issue in order to cause a server to crash.\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [CVE-2022-22971](https://openhub.net/vulnerabilities/bdsa/CVE-2022-22971) - Incorrect Provision of Specified Functionality\n\n\n\n## Solution\nFixed in version [**5.3.20**](https://github.com/spring-projects/spring-framework/releases/tag/v5.3.20) and in version [**5.2.22**](https://github.com/spring-projects/spring-framework/releases/tag/v5.2.22.RELEASE).\n\nThe latest stable releases can be found [here](https://github.com/spring-projects/spring-framework/releases).\n\n\n\n## Dependency tree\n- org.owasp.webgoat:webgoat-container:v8.1.0:-maven\n    - org.springframework.boot:spring-boot-starter-data-jpa:2.2.2.RELEASE\n        - org.springframework.data:spring-data-jpa:2.2.3.RELEASE\n            - org.springframework:spring-tx:5.2.2.RELEASE\n\n\n## References\n* Common Weakness Enumeration: [CWE-684](https://cwe.mitre.org/data/definitions/684.html)\n\n","text":"Spring Framework is vulnerable to denial-of-service (DoS) due to the improper handling of the STOMP protocol for websockets. A remote authenticated attacker could leverage this issue in order to cause a server to crash."},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-684"]},"defaultConfiguration":{"level":"warning"}},{"id":"CVE-2023-20861 spring-tx 5.2.2.RELEASE: spring-boot-starter-data-jpa 2.2.2.RELEASE: org.springframework","shortDescription":{"text":"Transitive Dependency: spring-tx 5.2.2.RELEASE from spring-boot-starter-data-jpa 2.2.2.RELEASE (CVE-2023-20861)"},"fullDescription":{"text":"Spring Framework is vulnerable to denial-of-service (DoS) via specially crafted SpEL expressions. An attacker could exploit this issue by passing a crafted SpEL expression to the application which may result in a crash."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| spring-tx 5.2.2.RELEASE  | 5.3.31  | 6.1.2 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/ba6e9d03-9fbd-4086-9631-99d1ad5e520c?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=09f17d81-b282-43ec-9f2b-36c8021d3ca7)\n\n\n## Description\nSpring Framework is vulnerable to denial-of-service (DoS) via specially crafted SpEL expressions. An attacker could exploit this issue by passing a crafted SpEL expression to the application which may result in a crash.\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [CVE-2023-20861](https://openhub.net/vulnerabilities/bdsa/CVE-2023-20861) - Weak Input Validation\n\n\n\n## Solution\nFixed in:\n* [**5.2.23**](https://github.com/spring-projects/spring-framework/releases/tag/v5.2.23.RELEASE) by [this](https://github.com/spring-projects/spring-framework/commit/52c93b1c4b24d70de233a958e60e7c5822bd274f) commit,\n* [**5.3.26**](https://github.com/spring-projects/spring-framework/releases/tag/v5.3.26) by [this](https://github.com/spring-projects/spring-framework/commit/430fc25acad2e85cbdddcd52b64481691f03ebd1) commit,\n* [**6.0.7**](https://github.com/spring-projects/spring-framework/releases/tag/v6.0.7) by [this](https://github.com/spring-projects/spring-framework/commit/935c29e3ddba5b19951e54f6685c70ed45d9cbe5) commit.\n\nThe latest stable releases are available [here](https://github.com/spring-projects/spring-framework/releases).\n\n\n\n## Dependency tree\n- org.owasp.webgoat:webgoat-container:v8.1.0:-maven\n    - org.springframework.boot:spring-boot-starter-data-jpa:2.2.2.RELEASE\n        - org.springframework.data:spring-data-jpa:2.2.3.RELEASE\n            - org.springframework:spring-tx:5.2.2.RELEASE\n\n\n## References\n* Common Weakness Enumeration: [CWE-20](https://cwe.mitre.org/data/definitions/20.html)\n\n","text":"Spring Framework is vulnerable to denial-of-service (DoS) via specially crafted SpEL expressions. An attacker could exploit this issue by passing a crafted SpEL expression to the application which may result in a crash."},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-20"]},"defaultConfiguration":{"level":"warning"}},{"id":"CVE-2023-20863 spring-tx 5.2.2.RELEASE: spring-boot-starter-data-jpa 2.2.2.RELEASE: org.springframework","shortDescription":{"text":"Transitive Dependency: spring-tx 5.2.2.RELEASE from spring-boot-starter-data-jpa 2.2.2.RELEASE (CVE-2023-20863)"},"fullDescription":{"text":"Spring Framework is vulnerable to denial-of-service (DoS) via specially crafted SpEL expressions."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| spring-tx 5.2.2.RELEASE  | 5.3.31  | 6.1.2 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/ba6e9d03-9fbd-4086-9631-99d1ad5e520c?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=09f17d81-b282-43ec-9f2b-36c8021d3ca7)\n\n\n## Description\nSpring Framework is vulnerable to denial-of-service (DoS) via specially crafted SpEL expressions.\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [CVE-2023-20863](https://openhub.net/vulnerabilities/bdsa/CVE-2023-20863) - Weak Input Validation\n\n\n\n## Solution\nFixed in:\n* [**5.2.24**](https://github.com/spring-projects/spring-framework/releases/tag/v5.2.24.RELEASE)\n* [**5.3.27**](https://github.com/spring-projects/spring-framework/releases/tag/v5.3.27)\n* [**6.0.8**](https://github.com/spring-projects/spring-framework/releases/tag/v6.0.8)\n\nThe latest stable releases are available [here](https://github.com/spring-projects/spring-framework/releases).\n\n\n\n## Dependency tree\n- org.owasp.webgoat:webgoat-container:v8.1.0:-maven\n    - org.springframework.boot:spring-boot-starter-data-jpa:2.2.2.RELEASE\n        - org.springframework.data:spring-data-jpa:2.2.3.RELEASE\n            - org.springframework:spring-tx:5.2.2.RELEASE\n\n\n## References\n* Common Weakness Enumeration: [CWE-20](https://cwe.mitre.org/data/definitions/20.html)\n\n","text":"Spring Framework is vulnerable to denial-of-service (DoS) via specially crafted SpEL expressions."},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-20"]},"defaultConfiguration":{"level":"warning"}},{"id":"CVE-2020-5421 spring-tx 5.2.2.RELEASE: spring-boot-starter-data-jpa 2.2.2.RELEASE: org.springframework","shortDescription":{"text":"Transitive Dependency: spring-tx 5.2.2.RELEASE from spring-boot-starter-data-jpa 2.2.2.RELEASE (CVE-2020-5421)"},"fullDescription":{"text":"It was discovered that Spring Framework was vulnerable to RFD protection bypass. In some instances, depending on the browser used, an attacker could bypass the RFD attack protections via the use of a `jsessionid` path parameter."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| spring-tx 5.2.2.RELEASE  | 5.3.31  | 6.1.2 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/ba6e9d03-9fbd-4086-9631-99d1ad5e520c?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=09f17d81-b282-43ec-9f2b-36c8021d3ca7)\n\n\n## Description\nIt was discovered that Spring Framework was vulnerable to RFD protection bypass. In some instances, depending on the browser used, an attacker could bypass the RFD attack protections via the use of a `jsessionid` path parameter.\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [CVE-2020-5421](https://openhub.net/vulnerabilities/bdsa/CVE-2020-5421) - Weak Input Validation\n\n\n\n## Solution\nFixed in:\n* [**5.2.9**](https://github.com/spring-projects/spring-framework/releases/tag/v5.2.9.RELEASE) by [this](https://github.com/spring-projects/spring-framework/commit/899761f0a8890353dc01f10d2af96ae192f3e655) commit,\n* [**5.1.18**](https://github.com/spring-projects/spring-framework/releases/tag/v5.1.18.RELEASE) by [this](https://github.com/spring-projects/spring-framework/commit/a63c8886c00f30fea5b25f50ddf6f56c6eb957bd) commit,\n* [**5.0.19**](https://github.com/spring-projects/spring-framework/releases/tag/v5.0.19.RELEASE) by [this](https://github.com/spring-projects/spring-framework/commit/aec3a4c69e02d87f87258b0ab5c1d6c83f4cb44f) commit,\n* [**4.3.29**](https://github.com/spring-projects/spring-framework/releases/tag/v4.3.29.RELEASE) by [this](https://github.com/spring-projects/spring-framework/commit/2f75212eb667a30fe2fa9b5aca8f22d5e255821f) commit.\n\n\n\n## Dependency tree\n- org.owasp.webgoat:webgoat-container:v8.1.0:-maven\n    - org.springframework.boot:spring-boot-starter-data-jpa:2.2.2.RELEASE\n        - org.springframework.data:spring-data-jpa:2.2.3.RELEASE\n            - org.springframework:spring-tx:5.2.2.RELEASE\n\n\n## References\n* Common Weakness Enumeration: [CWE-20](https://cwe.mitre.org/data/definitions/20.html)\n\n","text":"It was discovered that Spring Framework was vulnerable to RFD protection bypass. In some instances, depending on the browser used, an attacker could bypass the RFD attack protections via the use of a `jsessionid` path parameter."},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-20"]},"defaultConfiguration":{"level":"warning"}},{"id":"CVE-2022-22968 spring-tx 5.2.2.RELEASE: spring-boot-starter-data-jpa 2.2.2.RELEASE: org.springframework","shortDescription":{"text":"Transitive Dependency: spring-tx 5.2.2.RELEASE from spring-boot-starter-data-jpa 2.2.2.RELEASE (CVE-2022-22968)"},"fullDescription":{"text":"Spring Framework is vulnerable to data binding protection bypass due to improper validation of specified disallowed fields in `DataBinders`. This could be leveraged by an attacker to bypass the suggested workaround to **CVE-2022-22965** (**BDSA-2022-0858**) if it is improperly implemented."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| spring-tx 5.2.2.RELEASE  | 5.3.31  | 6.1.2 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/ba6e9d03-9fbd-4086-9631-99d1ad5e520c?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=09f17d81-b282-43ec-9f2b-36c8021d3ca7)\n\n\n## Description\nSpring Framework is vulnerable to data binding protection bypass due to improper validation of specified disallowed fields in `DataBinders`. This could be leveraged by an attacker to bypass the suggested workaround to **CVE-2022-22965** (**BDSA-2022-0858**) if it is improperly implemented.\n\n## Vulnerabilities(BDSA,CVE)\n:large_blue_circle: [CVE-2022-22968](https://openhub.net/vulnerabilities/bdsa/CVE-2022-22968) - Weak Input Validation\n\n\n\n## Solution\nFixed  in [**5.3.19**](https://github.com/spring-projects/spring-framework/releases/tag/v5.3.19) by [this](https://github.com/spring-projects/spring-framework/commit/a7cf19cec5ebd270f97a194d749e2d5701ad2ab7) commit and [**5.2.21**](https://github.com/spring-projects/spring-framework/releases/tag/v5.2.21.RELEASE) by [this](https://github.com/spring-projects/spring-framework/commit/833e750175349ab4fd502109a8b41af77e25cdea) commit.\n\n\n\n## Dependency tree\n- org.owasp.webgoat:webgoat-container:v8.1.0:-maven\n    - org.springframework.boot:spring-boot-starter-data-jpa:2.2.2.RELEASE\n        - org.springframework.data:spring-data-jpa:2.2.3.RELEASE\n            - org.springframework:spring-tx:5.2.2.RELEASE\n\n\n## References\n* Common Weakness Enumeration: [CWE-20](https://cwe.mitre.org/data/definitions/20.html)\n\n","text":"Spring Framework is vulnerable to data binding protection bypass due to improper validation of specified disallowed fields in `DataBinders`. This could be leveraged by an attacker to bypass the suggested workaround to **CVE-2022-22965** (**BDSA-2022-0858**) if it is improperly implemented."},"properties":{"security-severity":"3.8","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-20"]},"defaultConfiguration":{"level":"note"}},{"id":"CVE-2020-25638 hibernate-core 5.4.9.Final: spring-boot-starter-data-jpa 2.2.2.RELEASE: org.hibernate","shortDescription":{"text":"Transitive Dependency: hibernate-core 5.4.9.Final from spring-boot-starter-data-jpa 2.2.2.RELEASE (CVE-2020-25638)"},"fullDescription":{"text":"Hibernate ORM is vulnerable to SQL injection due to the unsafe implementation of comments that are intended for debugging purposes. A remote attacker could potentially recover, modify or delete sensitive information that resides in back-end databases by submitting crafted requests that abuse these comments. It should be noted that only instances of Hibernate ORM that use a non-default configuration are affected."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| hibernate-core 5.4.9.Final  | 5.6.15.Final-redhat-00001  | 6.4.1.Final |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/a39d062d-7710-472f-9186-37b12cc068cd?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=cf193b88-f9ec-4af9-85b9-420c4a14b846)\n\n\n## Description\nHibernate ORM is vulnerable to SQL injection due to the unsafe implementation of comments that are intended for debugging purposes. A remote attacker could potentially recover, modify or delete sensitive information that resides in back-end databases by submitting crafted requests that abuse these comments. It should be noted that only instances of Hibernate ORM that use a non-default configuration are affected.\n\n## Vulnerabilities(BDSA,CVE)\n:orange_circle: [CVE-2020-25638](https://openhub.net/vulnerabilities/bdsa/CVE-2020-25638) - SQL Injection\n\n\n\n## Solution\nFixed in:\n* [**5.4.24**](https://github.com/hibernate/hibernate-orm/releases/tag/5.4.24) by [this](https://github.com/hibernate/hibernate-orm/commit/36ebf7d3836e83e99f2a91777b5389e1daf1f2b7) commit.\n* [**5.3.20**](https://github.com/hibernate/hibernate-orm/releases/tag/5.3.20) by [this](https://github.com/hibernate/hibernate-orm/commit/d22bbb5c339c9df7712c3365bb1df97c91b35ec5) commit.\n\nThe latest stable releases are available [here](https://hibernate.org/orm/releases/).\n\n## Workaround\nThe vulnerability can be mitigated by using the setting `hibernate.use_sql_comments=false`.\n\n## Dependency tree\n- org.owasp.webgoat:webgoat-container:v8.1.0:-maven\n    - org.springframework.boot:spring-boot-starter-data-jpa:2.2.2.RELEASE\n        - org.hibernate:hibernate-core:5.4.9.Final\n\n\n## References\n* Common Weakness Enumeration: [CWE-89](https://cwe.mitre.org/data/definitions/89.html)\n\n","text":"Hibernate ORM is vulnerable to SQL injection due to the unsafe implementation of comments that are intended for debugging purposes. A remote attacker could potentially recover, modify or delete sensitive information that resides in back-end databases by submitting crafted requests that abuse these comments. It should be noted that only instances of Hibernate ORM that use a non-default configuration are affected."},"properties":{"security-severity":"8.9","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-89"]},"defaultConfiguration":{"level":"error"}},{"id":"CVE-2019-14900 hibernate-core 5.4.9.Final: spring-boot-starter-data-jpa 2.2.2.RELEASE: org.hibernate","shortDescription":{"text":"Transitive Dependency: hibernate-core 5.4.9.Final from spring-boot-starter-data-jpa 2.2.2.RELEASE (CVE-2019-14900)"},"fullDescription":{"text":"Hibernate ORM is vulnerable to SQL injection (SQLi) due to insufficient validation of user-controlled input. An attacker may be able to obtain unauthorized information from the database by executing arbitrary SQL commands."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| hibernate-core 5.4.9.Final  | 5.6.15.Final-redhat-00001  | 6.4.1.Final |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/a39d062d-7710-472f-9186-37b12cc068cd?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=cf193b88-f9ec-4af9-85b9-420c4a14b846)\n\n\n## Description\nHibernate ORM is vulnerable to SQL injection (SQLi) due to insufficient validation of user-controlled input. An attacker may be able to obtain unauthorized information from the database by executing arbitrary SQL commands.\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [CVE-2019-14900](https://openhub.net/vulnerabilities/bdsa/CVE-2019-14900) - SQL Injection\n\n\n\n## Solution\nFixed in:\n* **[5.3.18](https://github.com/hibernate/hibernate-orm/releases/tag/5.3.18)** by [this](https://github.com/hibernate/hibernate-orm/commit/646b383f959eff18d58081b1a574f0d777d353da) commit,\n* **[5.4.18](https://github.com/hibernate/hibernate-orm/releases/tag/5.4.18)** by [this](https://github.com/hibernate/hibernate-orm/commit/e0e22ea256) commit,\n* **[6.0.0Alpha6](https://github.com/hibernate/hibernate-orm/releases/tag/6.0.0.Alpha6)** by [this](https://github.com/hibernate/hibernate-orm/commit/eebf01fbf3) commit.\n\n\n\n## Dependency tree\n- org.owasp.webgoat:webgoat-container:v8.1.0:-maven\n    - org.springframework.boot:spring-boot-starter-data-jpa:2.2.2.RELEASE\n        - org.hibernate:hibernate-core:5.4.9.Final\n\n\n## References\n* Common Weakness Enumeration: [CWE-89](https://cwe.mitre.org/data/definitions/89.html)\n\n","text":"Hibernate ORM is vulnerable to SQL injection (SQLi) due to insufficient validation of user-controlled input. An attacker may be able to obtain unauthorized information from the database by executing arbitrary SQL commands."},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-89"]},"defaultConfiguration":{"level":"warning"}},{"id":"BDSA-2021-3731 spring-boot-starter-jdbc 2.2.2.RELEASE: spring-boot-starter-data-jpa 2.2.2.RELEASE: org.springframework.boot","shortDescription":{"text":"Transitive Dependency: spring-boot-starter-jdbc 2.2.2.RELEASE from spring-boot-starter-data-jpa 2.2.2.RELEASE (BDSA-2021-3731)"},"fullDescription":{"text":"Apache Log4j, as used in many popular services, is vulnerable to improperly allowing lightweight directory access protocol (LDAP) access via Java naming and directory interface (JNDI). A remote attacker able to supply the end application with specially crafted input that is then processed by the Log4j subcomponent could cause the execution of arbitrary Java code.\n\n**Note** \n\n- log4j-api packages by themselves do not contain the vulnerable functionality and are therefore unaffected. log4j-core packages and the upstream overarching source repository are affected.\n\n- A previously suggested mitigation of setting environment variable `LOG4J_FORMAT_MSG_NO_LOOKUPS=true` is not recommended. This mitigation has been proven inadequate against this vulnerability. \n\n- This vulnerability is partially fixed in [**2.15.0-rc2**](https://github.com/apache/logging-log4j2/releases/tag/log4j-2.15.0-rc2) by [this](https://github.com/apache/logging-log4j2/commit/001aaada7dab82c3c09cde5f8e14245dc9d8b454) commit and [this](https://github.com/apache/logging-log4j2/commit/bac0d8a35c7e354a0d3f706569116dff6c6bd658) commit. These fixes were deemed incomplete. See BDSA-2021-3779 (CVE-2021-45046) for more details.\n\nThis vulnerability is listed as exploitable by the Cybersecurity \u0026 Infrastructure Security Agency in their [Known Exploited Vulnerabilities Catalog](https://www.cisa.gov/known-exploited-vulnerabilities-catalog)."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| spring-boot-starter-jdbc 2.2.2.RELEASE  | 2.7.18  | 3.2.1 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/48431389-4a2f-44ed-8597-55184ffc0e88?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=ee1b331d-05e0-4bd1-b6ef-727c3b98e324)\n\n\n## Description\nApache Log4j, as used in many popular services, is vulnerable to improperly allowing lightweight directory access protocol (LDAP) access via Java naming and directory interface (JNDI). A remote attacker able to supply the end application with specially crafted input that is then processed by the Log4j subcomponent could cause the execution of arbitrary Java code.\n\n**Note** \n\n- log4j-api packages by themselves do not contain the vulnerable functionality and are therefore unaffected. log4j-core packages and the upstream overarching source repository are affected.\n\n- A previously suggested mitigation of setting environment variable `LOG4J_FORMAT_MSG_NO_LOOKUPS=true` is not recommended. This mitigation has been proven inadequate against this vulnerability. \n\n- This vulnerability is partially fixed in [**2.15.0-rc2**](https://github.com/apache/logging-log4j2/releases/tag/log4j-2.15.0-rc2) by [this](https://github.com/apache/logging-log4j2/commit/001aaada7dab82c3c09cde5f8e14245dc9d8b454) commit and [this](https://github.com/apache/logging-log4j2/commit/bac0d8a35c7e354a0d3f706569116dff6c6bd658) commit. These fixes were deemed incomplete. See BDSA-2021-3779 (CVE-2021-45046) for more details.\n\nThis vulnerability is listed as exploitable by the Cybersecurity \u0026 Infrastructure Security Agency in their [Known Exploited Vulnerabilities Catalog](https://www.cisa.gov/known-exploited-vulnerabilities-catalog).\n\n## Vulnerabilities(BDSA,CVE)\n:red_circle: [BDSA-2021-3731](https://openhub.net/vulnerabilities/bdsa/BDSA-2021-3731) - Insecure Object Deserialization\n\n\n\n## Solution\nFixed in versions:\n*  [**2.16.0-rc1**](https://github.com/apache/logging-log4j2/releases/tag/log4j-2.16.0-rc1) by [this](https://github.com/apache/logging-log4j2/commit/27972043b76c9645476f561c5adc483dec6d3f5d) commit.\n*  [**2.12.2-rc1**](https://github.com/apache/logging-log4j2/releases/tag/log4j-2.12.2-rc1) by [this](https://github.com/apache/logging-log4j2/commit/f819c83804152cb6ed94cb408302e36b21b65053) commit and [this](https://github.com/apache/logging-log4j2/commit/70edc233343815d5efa043b54294a6fb065aa1c5) commit.\n*   [**2.3.1-rc1**](https://github.com/apache/logging-log4j2/releases/tag/log4j-2.3.1-rc1) by [this](https://github.com/apache/logging-log4j2/commit/be848dacbac6df30c4f32b2852e24446033ecf79) commit and [this](https://github.com/apache/logging-log4j2/commit/f6564bb993d547d0a371b75d869042c334bf57f0) commit.\n\nThe latest releases can be found [here](https://github.com/apache/logging-log4j2/tags).\n\nNOTE: It is recommended to upgrade to version  [**2.17.0**](https://downloads.apache.org/logging/log4j/2.17.0/). This recommendation is due to related vulnerabilities (BDSA-2021-3779, CVE-2021-45046) affecting the version that this vulnerability is fixed in.\n\n## Workaround\nThe vendor states that:\n\n\u003e This issue can be mitigated in prior releases (\u003c**2.16.0**) by removing the JndiLookup class from the classpath (example: `zip -q -d log4j-core-*.jar org/apache/logging/log4j/core/lookup/JndiLookup.class`).\n\n## Dependency tree\n- org.owasp.webgoat:webgoat-container:v8.1.0:-maven\n    - org.springframework.boot:spring-boot-starter-data-jpa:2.2.2.RELEASE\n        - org.springframework.boot:spring-boot-starter-jdbc:2.2.2.RELEASE\n\n\n## References\n* Common Weakness Enumeration: [CWE-502](https://cwe.mitre.org/data/definitions/502.html)\n\n","text":"Apache Log4j, as used in many popular services, is vulnerable to improperly allowing lightweight directory access protocol (LDAP) access via Java naming and directory interface (JNDI). A remote attacker able to supply the end application with specially crafted input that is then processed by the Log4j subcomponent could cause the execution of arbitrary Java code.\n\n**Note** \n\n- log4j-api packages by themselves do not contain the vulnerable functionality and are therefore unaffected. log4j-core packages and the upstream overarching source repository are affected.\n\n- A previously suggested mitigation of setting environment variable `LOG4J_FORMAT_MSG_NO_LOOKUPS=true` is not recommended. This mitigation has been proven inadequate against this vulnerability. \n\n- This vulnerability is partially fixed in [**2.15.0-rc2**](https://github.com/apache/logging-log4j2/releases/tag/log4j-2.15.0-rc2) by [this](https://github.com/apache/logging-log4j2/commit/001aaada7dab82c3c09cde5f8e14245dc9d8b454) commit and [this](https://github.com/apache/logging-log4j2/commit/bac0d8a35c7e354a0d3f706569116dff6c6bd658) commit. These fixes were deemed incomplete. See BDSA-2021-3779 (CVE-2021-45046) for more details.\n\nThis vulnerability is listed as exploitable by the Cybersecurity \u0026 Infrastructure Security Agency in their [Known Exploited Vulnerabilities Catalog](https://www.cisa.gov/known-exploited-vulnerabilities-catalog)."},"properties":{"security-severity":"9.1","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-502"]},"defaultConfiguration":{"level":"error"}},{"id":"CVE-2022-22965 spring-boot-starter-jdbc 2.2.2.RELEASE: spring-boot-starter-data-jpa 2.2.2.RELEASE: org.springframework.boot","shortDescription":{"text":"Transitive Dependency: spring-boot-starter-jdbc 2.2.2.RELEASE from spring-boot-starter-data-jpa 2.2.2.RELEASE (CVE-2022-22965)"},"fullDescription":{"text":"Spring Framework is vulnerable to a flaw in the access restrictions to the security sensitive `ClassLoader` property. The restrictions can be bypassed through alternative paths available with Java9 and later. An attacker can leverage this vulnerability to cause remote code execution (RCE).\n\n**Note** this issue exists because the restrictions that were introduced to prevent exploitation of BDSA-2010-0001 (CVE-2010-1622) can be bypassed on platforms where Java9 and later are in use.\n\nThis vulnerability is listed as exploitable by the Cybersecurity \u0026 Infrastructure Security Agency in their [Known Exploited Vulnerabilities Catalog](https://www.cisa.gov/known-exploited-vulnerabilities-catalog)."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| spring-boot-starter-jdbc 2.2.2.RELEASE  | 2.7.18  | 3.2.1 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/48431389-4a2f-44ed-8597-55184ffc0e88?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=ee1b331d-05e0-4bd1-b6ef-727c3b98e324)\n\n\n## Description\nSpring Framework is vulnerable to a flaw in the access restrictions to the security sensitive `ClassLoader` property. The restrictions can be bypassed through alternative paths available with Java9 and later. An attacker can leverage this vulnerability to cause remote code execution (RCE).\n\n**Note** this issue exists because the restrictions that were introduced to prevent exploitation of BDSA-2010-0001 (CVE-2010-1622) can be bypassed on platforms where Java9 and later are in use.\n\nThis vulnerability is listed as exploitable by the Cybersecurity \u0026 Infrastructure Security Agency in their [Known Exploited Vulnerabilities Catalog](https://www.cisa.gov/known-exploited-vulnerabilities-catalog).\n\n## Vulnerabilities(BDSA,CVE)\n:red_circle: [CVE-2022-22965](https://openhub.net/vulnerabilities/bdsa/CVE-2022-22965) - Incomplete List of Disallowed Inputs\n\n\n\n## Solution\nFixed in [**5.3.18**](https://github.com/spring-projects/spring-framework/releases/tag/v5.3.18) by [this](https://github.com/spring-projects/spring-framework/commit/002546b3e4b8d791ea6acccb81eb3168f51abb15) commit and  [**5.2.20**](https://github.com/spring-projects/spring-framework/releases/tag/v5.2.20.RELEASE) by [this](https://github.com/spring-projects/spring-framework/commit/996f701a1916d10202c1d0d281f06ab1f2e1117e) commit .\n\nThe latest releases can be found [here](https://github.com/spring-projects/spring-framework/tags).\n\n## Workaround\nAn official workaround for the issue has been outlined [here](https://spring.io/blog/2022/03/31/spring-framework-rce-early-announcement).\n\n## Dependency tree\n- org.owasp.webgoat:webgoat-container:v8.1.0:-maven\n    - org.springframework.boot:spring-boot-starter-data-jpa:2.2.2.RELEASE\n        - org.springframework.boot:spring-boot-starter-jdbc:2.2.2.RELEASE\n\n\n## References\n* Common Weakness Enumeration: [CWE-184](https://cwe.mitre.org/data/definitions/184.html)\n* Common Weakness Enumeration: [CWE-749](https://cwe.mitre.org/data/definitions/749.html)\n\n","text":"Spring Framework is vulnerable to a flaw in the access restrictions to the security sensitive `ClassLoader` property. The restrictions can be bypassed through alternative paths available with Java9 and later. An attacker can leverage this vulnerability to cause remote code execution (RCE).\n\n**Note** this issue exists because the restrictions that were introduced to prevent exploitation of BDSA-2010-0001 (CVE-2010-1622) can be bypassed on platforms where Java9 and later are in use.\n\nThis vulnerability is listed as exploitable by the Cybersecurity \u0026 Infrastructure Security Agency in their [Known Exploited Vulnerabilities Catalog](https://www.cisa.gov/known-exploited-vulnerabilities-catalog)."},"properties":{"security-severity":"9.1","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-184","external/cwe/cwe-749"]},"defaultConfiguration":{"level":"error"}},{"id":"CVE-2023-20873 spring-boot-starter-jdbc 2.2.2.RELEASE: spring-boot-starter-data-jpa 2.2.2.RELEASE: org.springframework.boot","shortDescription":{"text":"Transitive Dependency: spring-boot-starter-jdbc 2.2.2.RELEASE from spring-boot-starter-data-jpa 2.2.2.RELEASE (CVE-2023-20873)"},"fullDescription":{"text":"Spring framework contains a security bypass vulnerability when `/**` is used as a pattern in Spring Security configuration with the `/cloudfoundryapplication/**` component. The potential for security bypass exists due to the mismatch in pattern matching between Spring Security and Cloud Foundry.\n\n**Note**: The vendor has stated in their [advisory](https://spring.io/security/cve-2023-20873) that this application is not vulnerable if any of the following is true:\n* The application is not deployed to Cloud Foundry.\n* You have disabled Cloud Foundry actuator endpoints with `management.cloudfoundry.enabled` set to `false`.\n* Your application does not have handler mappings that can handle requests to `/cloudfoundryapplication/**`."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| spring-boot-starter-jdbc 2.2.2.RELEASE  | 2.7.18  | 3.2.1 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/48431389-4a2f-44ed-8597-55184ffc0e88?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=ee1b331d-05e0-4bd1-b6ef-727c3b98e324)\n\n\n## Description\nSpring framework contains a security bypass vulnerability when `/**` is used as a pattern in Spring Security configuration with the `/cloudfoundryapplication/**` component. The potential for security bypass exists due to the mismatch in pattern matching between Spring Security and Cloud Foundry.\n\n**Note**: The vendor has stated in their [advisory](https://spring.io/security/cve-2023-20873) that this application is not vulnerable if any of the following is true:\n* The application is not deployed to Cloud Foundry.\n* You have disabled Cloud Foundry actuator endpoints with `management.cloudfoundry.enabled` set to `false`.\n* Your application does not have handler mappings that can handle requests to `/cloudfoundryapplication/**`.\n\n## Vulnerabilities(BDSA,CVE)\n:orange_circle: [CVE-2023-20873](https://openhub.net/vulnerabilities/bdsa/CVE-2023-20873) - Improper Access Control\n\n\n\n## Solution\nFixed in [**3.1.0-RC1**](https://github.com/spring-projects/spring-boot/releases/tag/v3.1.0-RC1), [**3.0.6**](https://github.com/spring-projects/spring-boot/releases/tag/v3.0.6) and [**2.7.11**](https://github.com/spring-projects/spring-boot/releases/tag/v2.7.11)  by [this](https://github.com/spring-projects/spring-boot/commit/3522714c13b47af03bf42e7f2d5994af568cb1a7) commit.\n\nFixed in [**2.6.15**](https://github.com/spring-projects/spring-boot/releases/tag/v2.6.15) and [**2.5.15**](https://github.com/spring-projects/spring-boot/releases/tag/v2.5.15) by [this](https://github.com/spring-projects/spring-boot/commit/307f3c339912466e78fcdac648fff95a4edea573) commit.\n\nThe latest stable releases can be found [here](https://github.com/spring-projects/spring-boot/releases).\n\n## Workaround\nThe vendor has advised the following as a workaround:\n\u003eDisable Cloud Foundry actuator endpoints by setting `management.cloudfoundry.enabled` to `false`.\n\n## Dependency tree\n- org.owasp.webgoat:webgoat-container:v8.1.0:-maven\n    - org.springframework.boot:spring-boot-starter-data-jpa:2.2.2.RELEASE\n        - org.springframework.boot:spring-boot-starter-jdbc:2.2.2.RELEASE\n\n\n## References\n* Common Weakness Enumeration: [CWE-284](https://cwe.mitre.org/data/definitions/284.html)\n* Common Weakness Enumeration: [CWE-923](https://cwe.mitre.org/data/definitions/923.html)\n\n","text":"Spring framework contains a security bypass vulnerability when `/**` is used as a pattern in Spring Security configuration with the `/cloudfoundryapplication/**` component. The potential for security bypass exists due to the mismatch in pattern matching between Spring Security and Cloud Foundry.\n\n**Note**: The vendor has stated in their [advisory](https://spring.io/security/cve-2023-20873) that this application is not vulnerable if any of the following is true:\n* The application is not deployed to Cloud Foundry.\n* You have disabled Cloud Foundry actuator endpoints with `management.cloudfoundry.enabled` set to `false`.\n* Your application does not have handler mappings that can handle requests to `/cloudfoundryapplication/**`."},"properties":{"security-severity":"8.9","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-284","external/cwe/cwe-923"]},"defaultConfiguration":{"level":"error"}},{"id":"BDSA-2021-3817 spring-boot-starter-jdbc 2.2.2.RELEASE: spring-boot-starter-data-jpa 2.2.2.RELEASE: org.springframework.boot","shortDescription":{"text":"Transitive Dependency: spring-boot-starter-jdbc 2.2.2.RELEASE from spring-boot-starter-data-jpa 2.2.2.RELEASE (BDSA-2021-3817)"},"fullDescription":{"text":"Apache log4j is vulnerable to a denial-of-service (DoS) when uncontrolled recursion occurs through a self-referencing lookup.  An attacker can trigger a DoS with malicious input data that generates a recursive lookup  and consequent application crash.\n\nSuccessful attacks require the attacker to have access to Thread Context Map (MDC) input, and for log4j configured with non-default pattern layout with a Context Lookup.\n\nOnly the log4j-core JAR file is impacted by this vulnerability. Applications using only the log4j-api JAR file without the log4j-core JAR file are not impacted.\n\nApache Log4j is the only Logging Services subproject affected by this vulnerability. Other projects like Log4net  are not impacted."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| spring-boot-starter-jdbc 2.2.2.RELEASE  | 2.7.18  | 3.2.1 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/48431389-4a2f-44ed-8597-55184ffc0e88?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=ee1b331d-05e0-4bd1-b6ef-727c3b98e324)\n\n\n## Description\nApache log4j is vulnerable to a denial-of-service (DoS) when uncontrolled recursion occurs through a self-referencing lookup.  An attacker can trigger a DoS with malicious input data that generates a recursive lookup  and consequent application crash.\n\nSuccessful attacks require the attacker to have access to Thread Context Map (MDC) input, and for log4j configured with non-default pattern layout with a Context Lookup.\n\nOnly the log4j-core JAR file is impacted by this vulnerability. Applications using only the log4j-api JAR file without the log4j-core JAR file are not impacted.\n\nApache Log4j is the only Logging Services subproject affected by this vulnerability. Other projects like Log4net  are not impacted.\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [BDSA-2021-3817](https://openhub.net/vulnerabilities/bdsa/BDSA-2021-3817) - Loop with Unreachable Exit Condition ('Infinite Loop')\n\n\n\n## Solution\nFixed in version [**2.17.0**](https://downloads.apache.org/logging/log4j/2.17.0/)  by [this](https://github.com/apache/logging-log4j2/commit/806023265f8c905b2dd1d81fd2458f64b2ea0b5e) commit.\n\nFixed in [**2.12.3-rc1**](https://github.com/apache/logging-log4j2/releases/tag/log4j-2.12.3-rc1) by [this](https://github.com/apache/logging-log4j2/commit/bf7e916df6335713fe2219c7b3b523fb509deabc) commit.\n\nFixed in [**2.3.1-rc1**](https://github.com/apache/logging-log4j2/releases/tag/log4j-2.3.1-rc1) by [this](https://github.com/apache/logging-log4j2/commit/ce6b78d082aae89089cb3ad25cdd46e9ec70a70b) commit.\n\n\nThe latest stable releases can be found [here](https://github.com/apache/logging-log4j2/releases).\n\n## Workaround\nThe vendor advises that  this vulnerability can can be mitigated through one of the following:\n\n* In PatternLayout in the logging configuration, replace Context Lookups like `${ctx:loginId}` or `$${ctx:loginId}` with Thread Context Map patterns `(%X, %mdc, or %MDC)`.\n\n* Alternatively,  remove references in the configuration to Context Lookups like `${ctx:loginId}` or `$${ctx:loginId}` where they originate from sources external to the application such as HTTP headers or user input.\n\n## Dependency tree\n- org.owasp.webgoat:webgoat-container:v8.1.0:-maven\n    - org.springframework.boot:spring-boot-starter-data-jpa:2.2.2.RELEASE\n        - org.springframework.boot:spring-boot-starter-jdbc:2.2.2.RELEASE\n\n\n## References\n* Common Weakness Enumeration: [CWE-835](https://cwe.mitre.org/data/definitions/835.html)\n\n","text":"Apache log4j is vulnerable to a denial-of-service (DoS) when uncontrolled recursion occurs through a self-referencing lookup.  An attacker can trigger a DoS with malicious input data that generates a recursive lookup  and consequent application crash.\n\nSuccessful attacks require the attacker to have access to Thread Context Map (MDC) input, and for log4j configured with non-default pattern layout with a Context Lookup.\n\nOnly the log4j-core JAR file is impacted by this vulnerability. Applications using only the log4j-api JAR file without the log4j-core JAR file are not impacted.\n\nApache Log4j is the only Logging Services subproject affected by this vulnerability. Other projects like Log4net  are not impacted."},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-835"]},"defaultConfiguration":{"level":"warning"}},{"id":"BDSA-2021-3887 spring-boot-starter-jdbc 2.2.2.RELEASE: spring-boot-starter-data-jpa 2.2.2.RELEASE: org.springframework.boot","shortDescription":{"text":"Transitive Dependency: spring-boot-starter-jdbc 2.2.2.RELEASE from spring-boot-starter-data-jpa 2.2.2.RELEASE (BDSA-2021-3887)"},"fullDescription":{"text":"Apache Log4j contains a remote code execution (RCE) vulnerability. This allows an attacker that has permissions to modify the logging configuration files to input a malicious JDBC Appender with a data source referencing a JDNI URI. This can then lead to RCE.\n\n**Note:** This vulnerability impacts log4j-core."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| spring-boot-starter-jdbc 2.2.2.RELEASE  | 2.7.18  | 3.2.1 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/48431389-4a2f-44ed-8597-55184ffc0e88?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=ee1b331d-05e0-4bd1-b6ef-727c3b98e324)\n\n\n## Description\nApache Log4j contains a remote code execution (RCE) vulnerability. This allows an attacker that has permissions to modify the logging configuration files to input a malicious JDBC Appender with a data source referencing a JDNI URI. This can then lead to RCE.\n\n**Note:** This vulnerability impacts log4j-core.\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [BDSA-2021-3887](https://openhub.net/vulnerabilities/bdsa/BDSA-2021-3887) - Weak Input Validation\n\n\n\n## Solution\nFixed in versions:\n\n* [**2.3.2-rc1**](https://github.com/apache/logging-log4j2/releases/tag/log4j-2.3.2-rc1) by [this](https://github.com/apache/logging-log4j2/commit/ae4dc0c1a6389ae895f60451cd87e97e7b9d85c1) commit.\n* [**2.12.4-rc1**](https://github.com/apache/logging-log4j2/releases/tag/log4j-2.12.4-rc1) by [this](https://github.com/apache/logging-log4j2/commit/b3879958cb3b75eb16bf27e970538b6e4e130f1c) commit.\n* [**2.17.1-rc1**](https://github.com/apache/logging-log4j2/releases/tag/log4j-2.17.1-rc1) by [this](https://github.com/apache/logging-log4j2/commit/05db5f9527254632b59aed2a1d78a32c5ab74f16) commit.\n\nThe latest stable releases can be found [here](https://logging.apache.org/log4j/2.x/download.html).\n\n\n\n## Dependency tree\n- org.owasp.webgoat:webgoat-container:v8.1.0:-maven\n    - org.springframework.boot:spring-boot-starter-data-jpa:2.2.2.RELEASE\n        - org.springframework.boot:spring-boot-starter-jdbc:2.2.2.RELEASE\n\n\n## References\n* Common Weakness Enumeration: [CWE-20](https://cwe.mitre.org/data/definitions/20.html)\n\n","text":"Apache Log4j contains a remote code execution (RCE) vulnerability. This allows an attacker that has permissions to modify the logging configuration files to input a malicious JDBC Appender with a data source referencing a JDNI URI. This can then lead to RCE.\n\n**Note:** This vulnerability impacts log4j-core."},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-20"]},"defaultConfiguration":{"level":"warning"}},{"id":"CVE-2022-27772 spring-boot-starter-jdbc 2.2.2.RELEASE: spring-boot-starter-data-jpa 2.2.2.RELEASE: org.springframework.boot","shortDescription":{"text":"Transitive Dependency: spring-boot-starter-jdbc 2.2.2.RELEASE from spring-boot-starter-data-jpa 2.2.2.RELEASE (CVE-2022-27772)"},"fullDescription":{"text":"Spring Boot is vulnerable to privilege escalation due to a race condition which occurs during the creation of a temporary directory. A local attacker could create their own temporary directory by racing against Spring Boot and supply their own configuration files which would allow for the full takeover of the application."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| spring-boot-starter-jdbc 2.2.2.RELEASE  | 2.7.18  | 3.2.1 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/48431389-4a2f-44ed-8597-55184ffc0e88?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=ee1b331d-05e0-4bd1-b6ef-727c3b98e324)\n\n\n## Description\nSpring Boot is vulnerable to privilege escalation due to a race condition which occurs during the creation of a temporary directory. A local attacker could create their own temporary directory by racing against Spring Boot and supply their own configuration files which would allow for the full takeover of the application.\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [CVE-2022-27772](https://openhub.net/vulnerabilities/bdsa/CVE-2022-27772) - Race Condition due to Improper Synchronization\n\n\n\n## Solution\nFixed in [**2.2.11**](https://github.com/spring-projects/spring-boot/releases/tag/v2.2.11.RELEASE) by [this](https://github.com/spring-projects/spring-boot/commit/667ccdae84822072f9ea1a27ed5c77964c71002d) commit.\n\nThe latest stable releases can be found [here](https://github.com/spring-projects/spring-boot/releases).\n\n## Workaround\nAccording to the [Github Security Advisory](https://github.com/JLLeitschuh/security-research/security/advisories/GHSA-cm59-pr5q-cw85), setting the `java.io.tmpdir` system environment variable to a directory that is exclusively owned by the executing user will fix this vulnerability for all operating systems.\n\n## Dependency tree\n- org.owasp.webgoat:webgoat-container:v8.1.0:-maven\n    - org.springframework.boot:spring-boot-starter-data-jpa:2.2.2.RELEASE\n        - org.springframework.boot:spring-boot-starter-jdbc:2.2.2.RELEASE\n\n\n## References\n* Common Weakness Enumeration: [CWE-362](https://cwe.mitre.org/data/definitions/362.html)\n* Common Weakness Enumeration: [CWE-379](https://cwe.mitre.org/data/definitions/379.html)\n\n","text":"Spring Boot is vulnerable to privilege escalation due to a race condition which occurs during the creation of a temporary directory. A local attacker could create their own temporary directory by racing against Spring Boot and supply their own configuration files which would allow for the full takeover of the application."},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-362","external/cwe/cwe-379"]},"defaultConfiguration":{"level":"warning"}},{"id":"CVE-2023-20883 spring-boot-starter-jdbc 2.2.2.RELEASE: spring-boot-starter-data-jpa 2.2.2.RELEASE: org.springframework.boot","shortDescription":{"text":"Transitive Dependency: spring-boot-starter-jdbc 2.2.2.RELEASE from spring-boot-starter-data-jpa 2.2.2.RELEASE (CVE-2023-20883)"},"fullDescription":{"text":"Spring Boot is vulnerable to denial-of-service (DoS) via the welcome page when used to serve an application behind a reverse proxy cache. This will cause users to continuously be served a 404 response, preventing standard application use.\n\n\n**Note:** Spring have provided the following guidance for vulnerable criteria. \nAn application is vulnerable if all of the following are true:\n\n- \"The application has Spring MVC auto-configuration enabled. This is the case by default if Spring MVC is on the classpath.\"\n- \"The application makes use of Spring Boot's welcome page support, either static or templated.\"\n- \"Your application is deployed behind a proxy which caches 404 responses.\"\n\nThe application is not vulnerable if any of the following are true:\n\n- \"Spring MVC auto-configuration is disabled. This is true if `WebMvcAutoConfiguration` is explicitly excluded, if Spring MVC is not on the classpath, or if `spring.main.web-application-type` is set to a value other than `SERVLET`.\"\n- \"The application does not use Spring Boot's welcome page support.\"\n- \"You do not have a proxy which caches 404 responses.\""},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| spring-boot-starter-jdbc 2.2.2.RELEASE  | 2.7.18  | 3.2.1 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/48431389-4a2f-44ed-8597-55184ffc0e88?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=ee1b331d-05e0-4bd1-b6ef-727c3b98e324)\n\n\n## Description\nSpring Boot is vulnerable to denial-of-service (DoS) via the welcome page when used to serve an application behind a reverse proxy cache. This will cause users to continuously be served a 404 response, preventing standard application use.\n\n\n**Note:** Spring have provided the following guidance for vulnerable criteria. \nAn application is vulnerable if all of the following are true:\n\n- \"The application has Spring MVC auto-configuration enabled. This is the case by default if Spring MVC is on the classpath.\"\n- \"The application makes use of Spring Boot's welcome page support, either static or templated.\"\n- \"Your application is deployed behind a proxy which caches 404 responses.\"\n\nThe application is not vulnerable if any of the following are true:\n\n- \"Spring MVC auto-configuration is disabled. This is true if `WebMvcAutoConfiguration` is explicitly excluded, if Spring MVC is not on the classpath, or if `spring.main.web-application-type` is set to a value other than `SERVLET`.\"\n- \"The application does not use Spring Boot's welcome page support.\"\n- \"You do not have a proxy which caches 404 responses.\"\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [CVE-2023-20883](https://openhub.net/vulnerabilities/bdsa/CVE-2023-20883) - Insufficient Verification of Data Authenticity\n\n\n\n## Solution\nFixed in versions\n- [**2.5.15**](https://github.com/spring-projects/spring-boot/releases/tag/v2.5.15) by [this](https://github.com/spring-projects/spring-boot/commit/d7ff379fb8bb2c33319afeb45a343116b59e0ee2) commit,\n- [**2.6.15**](https://github.com/spring-projects/spring-boot/releases/tag/v2.6.15) by [this](https://github.com/spring-projects/spring-boot/commit/d7ff379fb8bb2c33319afeb45a343116b59e0ee2) commit,\n- [**2.7.12**](https://github.com/spring-projects/spring-boot/releases/tag/v2.7.12) by [this](https://github.com/spring-projects/spring-boot/commit/418dd1ba5bdad79b55a043000164bfcbda2acd78) commit,\n- [**3.0.7**](https://github.com/spring-projects/spring-boot/releases/tag/v3.0.7) by [this](https://github.com/spring-projects/spring-boot/commit/418dd1ba5bdad79b55a043000164bfcbda2acd78) commit,\n- [**3.1.0**](https://github.com/spring-projects/spring-boot/releases/tag/v3.1.0) by [this](https://github.com/spring-projects/spring-boot/commit/418dd1ba5bdad79b55a043000164bfcbda2acd78) commit.\n\nThe latest stable releases can be found [here](https://github.com/spring-projects/spring-boot/releases).\n\n## Workaround\nThe vendor has supplied the following workaround:\n\u003e \"configure the reverse proxy not to cache 404 responses and/or not to cache responses to requests to the root (`/`) of the application.\"\n\n## Dependency tree\n- org.owasp.webgoat:webgoat-container:v8.1.0:-maven\n    - org.springframework.boot:spring-boot-starter-data-jpa:2.2.2.RELEASE\n        - org.springframework.boot:spring-boot-starter-jdbc:2.2.2.RELEASE\n\n\n## References\n* Common Weakness Enumeration: [CWE-345](https://cwe.mitre.org/data/definitions/345.html)\n\n","text":"Spring Boot is vulnerable to denial-of-service (DoS) via the welcome page when used to serve an application behind a reverse proxy cache. This will cause users to continuously be served a 404 response, preventing standard application use.\n\n\n**Note:** Spring have provided the following guidance for vulnerable criteria. \nAn application is vulnerable if all of the following are true:\n\n- \"The application has Spring MVC auto-configuration enabled. This is the case by default if Spring MVC is on the classpath.\"\n- \"The application makes use of Spring Boot's welcome page support, either static or templated.\"\n- \"Your application is deployed behind a proxy which caches 404 responses.\"\n\nThe application is not vulnerable if any of the following are true:\n\n- \"Spring MVC auto-configuration is disabled. This is true if `WebMvcAutoConfiguration` is explicitly excluded, if Spring MVC is not on the classpath, or if `spring.main.web-application-type` is set to a value other than `SERVLET`.\"\n- \"The application does not use Spring Boot's welcome page support.\"\n- \"You do not have a proxy which caches 404 responses.\""},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-345"]},"defaultConfiguration":{"level":"warning"}},{"id":"CVE-2023-34055 spring-boot-starter-jdbc 2.2.2.RELEASE: spring-boot-starter-data-jpa 2.2.2.RELEASE: org.springframework.boot","shortDescription":{"text":"Transitive Dependency: spring-boot-starter-jdbc 2.2.2.RELEASE from spring-boot-starter-data-jpa 2.2.2.RELEASE (CVE-2023-34055)"},"fullDescription":{"text":"Spring Boot is vulnerable to denial-of-service (DoS). An unauthenticated user could trigger the vulnerability by providing specially crafted HTTP requests to a web metrics endpoint."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| spring-boot-starter-jdbc 2.2.2.RELEASE  | 2.7.18  | 3.2.1 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/48431389-4a2f-44ed-8597-55184ffc0e88?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=ee1b331d-05e0-4bd1-b6ef-727c3b98e324)\n\n\n## Description\nSpring Boot is vulnerable to denial-of-service (DoS). An unauthenticated user could trigger the vulnerability by providing specially crafted HTTP requests to a web metrics endpoint.\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [CVE-2023-34055](https://openhub.net/vulnerabilities/bdsa/CVE-2023-34055) - Third-party component usage\n\n\n\n## Solution\nFixed in:\n* [**3.1.6**](https://github.com/spring-projects/spring-boot/releases/tag/v3.1.6)\n* [**3.0.13**](https://github.com/spring-projects/spring-boot/releases/tag/v3.0.13)\n* [**2.7.18**](https://github.com/spring-projects/spring-boot/releases/tag/v2.7.18)\n\nThe latest stable releases can be found [here](https://github.com/spring-projects/spring-boot/releases).\n\n## Workaround\nThe vendor notes the following:\n\u003e As a temporary workaround, Spring Boot users can choose to disable web metrics with the following property: `management.metrics.enable.http.server.requests=false`\n\n## Dependency tree\n- org.owasp.webgoat:webgoat-container:v8.1.0:-maven\n    - org.springframework.boot:spring-boot-starter-data-jpa:2.2.2.RELEASE\n        - org.springframework.boot:spring-boot-starter-jdbc:2.2.2.RELEASE\n\n\n\n","text":"Spring Boot is vulnerable to denial-of-service (DoS). An unauthenticated user could trigger the vulnerability by providing specially crafted HTTP requests to a web metrics endpoint."},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","transitive_dependency","patch_available"]},"defaultConfiguration":{"level":"warning"}},{"id":"CVE-2022-0084 xnio-nio 3.3.8.Final: spring-boot-starter-undertow 2.2.2.RELEASE: org.jboss.xnio","shortDescription":{"text":"Transitive Dependency: xnio-nio 3.3.8.Final from spring-boot-starter-undertow 2.2.2.RELEASE (CVE-2022-0084)"},"fullDescription":{"text":"A flaw was found in XNIO, specifically in the notifyReadClosed method. The issue revealed this method was logging a message to another expected end. This flaw allows an attacker to send flawed requests to a server, possibly causing log contention-related performance concerns or an unwanted disk fill-up."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| xnio-nio 3.3.8.Final  | 3.8.12.Final  | 3.8.12.Final |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/d70e94e3-41e7-4ff3-9c9d-08511b298af9?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=f690accd-82a8-497f-af60-df6b66c751e7)\n\n\n## Description\nA flaw was found in XNIO, specifically in the notifyReadClosed method. The issue revealed this method was logging a message to another expected end. This flaw allows an attacker to send flawed requests to a server, possibly causing log contention-related performance concerns or an unwanted disk fill-up.\n\n## Vulnerabilities(BDSA,CVE)\n:orange_circle: [CVE-2022-0084](https://openhub.net/vulnerabilities/bdsa/CVE-2022-0084) - Allocation of Resources Without Limits or Throttling\n\n\n\n\n\n\n\n## Dependency tree\n- org.owasp.webgoat:webgoat-container:v8.1.0:-maven\n    - org.springframework.boot:spring-boot-starter-undertow:2.2.2.RELEASE\n        - io.undertow:undertow-core:2.0.28.Final\n            - org.jboss.xnio:xnio-nio:3.3.8.Final\n\n\n## References\n* Common Weakness Enumeration: [CWE-770](https://cwe.mitre.org/data/definitions/770.html)\n\n","text":"A flaw was found in XNIO, specifically in the notifyReadClosed method. The issue revealed this method was logging a message to another expected end. This flaw allows an attacker to send flawed requests to a server, possibly causing log contention-related performance concerns or an unwanted disk fill-up."},"properties":{"security-severity":"8.9","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-770"]},"defaultConfiguration":{"level":"error"}},{"id":"CVE-2020-27216 jetty-xml 9.4.24.v20191120: wiremock 2.8.0: org.eclipse.jetty","shortDescription":{"text":"Transitive Dependency: jetty-xml 9.4.24.v20191120 from wiremock 2.8.0 (CVE-2020-27216)"},"fullDescription":{"text":"Jetty is vulnerable to temporary directory Hijacking via a race condition. If code is executed from this temporary directory it can lead to local privilege escalation."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| jetty-xml 9.4.24.v20191120  | 9.4.53.20231009  | 12.0.5 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/ee93672f-853c-4083-a5e8-0d5ab21e8bf9?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=d8221aaa-7d55-4b5a-b3e0-2b5cba26ce60)\n\n\n## Description\nJetty is vulnerable to temporary directory Hijacking via a race condition. If code is executed from this temporary directory it can lead to local privilege escalation.\n\n## Vulnerabilities(BDSA,CVE)\n:orange_circle: [CVE-2020-27216](https://openhub.net/vulnerabilities/bdsa/CVE-2020-27216) - Race Condition due to Improper Synchronization\n\n\n\n## Solution\nFixed in:\n* [**11.0.0.beta3**](https://github.com/eclipse/jetty.project/releases/tag/jetty-11.0.0.beta3)\n* [**10.0.0.beta3**](https://github.com/eclipse/jetty.project/releases/tag/jetty-10.0.0.beta3) \n* [**9.4.33.v20201020**](https://github.com/eclipse/jetty.project/releases/tag/jetty-9.4.33.v20201020) by [this](https://github.com/eclipse/jetty.project/commit/53e0e0e9b25a6309bf24ee3b10984f4145701edb) commit and [this](https://github.com/eclipse/jetty.project/commit/9ad6beb80543b392c91653f6bfce233fc75b9d5f) commit.\n\n## Workaround\nSet a temporary directory, either for the server or the context, to one outside the shared temporary file system. For recent releases, a temporary directory by created by making a directory called work in the `${jetty.base}` directory (the parent directory of the webapps directory). Alternately the java temporary directory can be set with the System Property `java.io.tmpdir`. A more detailed description of how jetty selects a temporary directory is below.\n\nTo mitigate this vulnerability the directory must be set to one that is not writable by an attacker. To avoid information leakage, the directory should also not be readable by an attacker.\n\n## Dependency tree\n- org.owasp.webgoat.lesson:xxe:v8.1.0:-maven\n    - com.github.tomakehurst:wiremock:2.8.0\n        - org.eclipse.jetty:jetty-webapp:9.4.24.v20191120\n            - org.eclipse.jetty:jetty-xml:9.4.24.v20191120\n\n\n## References\n* Common Weakness Enumeration: [CWE-362](https://cwe.mitre.org/data/definitions/362.html)\n\n","text":"Jetty is vulnerable to temporary directory Hijacking via a race condition. If code is executed from this temporary directory it can lead to local privilege escalation."},"properties":{"security-severity":"8.9","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-362"]},"defaultConfiguration":{"level":"error"}},{"id":"CVE-2023-44487 jetty-xml 9.4.24.v20191120: wiremock 2.8.0: org.eclipse.jetty","shortDescription":{"text":"Transitive Dependency: jetty-xml 9.4.24.v20191120 from wiremock 2.8.0 (CVE-2023-44487)"},"fullDescription":{"text":"The HTTP/2 protocol contains a flaw related to the stream multiplexing feature that can allow for excessive resource consumption on servers operating implementations of the HTTP/2 protocol. \n\nThe HTTP/2 protocol allows clients to signal to a server to cancel a previously opened stream by sending an `RST_STREAM` frame. Attackers can abuse this stream canceling ability by opening a large number of streams at once immediately followed by `RST_STREAM` frames. In most HTTP/2 implementations this bypasses concurrent open stream limits and causes servers to spend processing time first handling request frames and then performing stream tear downs. For the server, these operations can pile up whereas the attacker client paid minuscule bandwidth and processing costs.\n\n[Amazon](https://aws.amazon.com/security/security-bulletins/AWS-2023-011/), [Cloudflare](https://blog.cloudflare.com/technical-breakdown-http2-rapid-reset-ddos-attack/) and [Google](https://cloud.google.com/blog/products/identity-security/google-cloud-mitigated-largest-ddos-attack-peaking-above-398-million-rps/) have reported that this vulnerability has been exploited in the wild from August to October 2023.\n\nThis vulnerability is listed as exploitable by the Cybersecurity \u0026 Infrastructure Security Agency in their [Known Exploited Vulnerabilities Catalog](https://www.cisa.gov/known-exploited-vulnerabilities-catalog)."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| jetty-xml 9.4.24.v20191120  | 9.4.53.20231009  | 12.0.5 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/ee93672f-853c-4083-a5e8-0d5ab21e8bf9?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=d8221aaa-7d55-4b5a-b3e0-2b5cba26ce60)\n\n\n## Description\nThe HTTP/2 protocol contains a flaw related to the stream multiplexing feature that can allow for excessive resource consumption on servers operating implementations of the HTTP/2 protocol. \n\nThe HTTP/2 protocol allows clients to signal to a server to cancel a previously opened stream by sending an `RST_STREAM` frame. Attackers can abuse this stream canceling ability by opening a large number of streams at once immediately followed by `RST_STREAM` frames. In most HTTP/2 implementations this bypasses concurrent open stream limits and causes servers to spend processing time first handling request frames and then performing stream tear downs. For the server, these operations can pile up whereas the attacker client paid minuscule bandwidth and processing costs.\n\n[Amazon](https://aws.amazon.com/security/security-bulletins/AWS-2023-011/), [Cloudflare](https://blog.cloudflare.com/technical-breakdown-http2-rapid-reset-ddos-attack/) and [Google](https://cloud.google.com/blog/products/identity-security/google-cloud-mitigated-largest-ddos-attack-peaking-above-398-million-rps/) have reported that this vulnerability has been exploited in the wild from August to October 2023.\n\nThis vulnerability is listed as exploitable by the Cybersecurity \u0026 Infrastructure Security Agency in their [Known Exploited Vulnerabilities Catalog](https://www.cisa.gov/known-exploited-vulnerabilities-catalog).\n\n## Vulnerabilities(BDSA,CVE)\n:orange_circle: [CVE-2023-44487](https://openhub.net/vulnerabilities/bdsa/CVE-2023-44487) - Uncontrolled Resource Consumption\n\n\n\n## Solution\nFixed in:\n* nghttp2 [**1.57.0**](https://github.com/nghttp2/nghttp2/releases/tag/v1.57.0) by [this](https://github.com/nghttp2/nghttp2/commit/72b4af6143681f528f1d237b21a9a7aee1738832) commit,\n* NGINX [**1.25.3**](https://hg.nginx.org/nginx/rev/release-1.25.3) by [this](https://hg.nginx.org/nginx/rev/cdda286c0f1b) revision,\n* Apache Tomcat \n\t* [**8.5.94**](https://github.com/apache/tomcat/releases/tag/8.5.94) by [this](https://github.com/apache/tomcat/commit/944332bb15bd2f3bf76ec2caeb1ff0a58a3bc628) commit,\n\t* [**9.0.81**](https://github.com/apache/tomcat/releases/tag/9.0.81) by [this](https://github.com/apache/tomcat/commit/6d1a9fd6642387969e4410b9989c85856b74917a) commit,\n\t* [**10.1.14**](https://github.com/apache/tomcat/releases/tag/10.1.14) by [this](https://github.com/apache/tomcat/commit/76bb4bfbfeae827dce896f650655bbf6e251ed49) commit,\n\t* [**11.0.0-M12**](https://github.com/apache/tomcat/releases/tag/11.0.0-M12) by [this](https://github.com/apache/tomcat/commit/9cdfe25bad707f34b3e5da2994f3f1952a163c3e) commit,\n* Apache Traffic Server\n\t* [**9.2.3-rc0**](https://github.com/apache/trafficserver/releases/tag/9.2.3-rc0) by [this](https://github.com/apache/trafficserver/commit/b28ad74f117307e8de206f1de70c3fa716f90682) commit,\n\t* [**8.1.9-rc0**](https://github.com/apache/trafficserver/releases/tag/8.1.9-rc0) by [this](https://github.com/apache/trafficserver/commit/d742d74039aaa548dda0148ab4ba207906abc620) commit,\n* Netty/Codec/HTTP2 [**4.1.100.Final**](https://mvnrepository.com/artifact/io.netty/netty-codec-http2/4.1.100.Final) by [this](https://github.com/netty/netty/commit/58f75f665aa81a8cbcf6ffa74820042a285c5e61) commit,\n* Eclipse Jetty\n\t* [**12.0.2**](https://github.com/jetty/jetty.project/releases/tag/jetty-12.0.2), [**11.0.17**](https://github.com/jetty/jetty.project/releases/tag/jetty-11.0.17), [**10.0.17**](https://github.com/jetty/jetty.project/releases/tag/jetty-10.0.17) by [this](https://github.com/jetty/jetty.project/commit/dbb94514dc9d3fb21fe92080f57c314e7e06a148) commit,\n\t* [**9.4.53.v20231009**](https://github.com/jetty/jetty.project/releases/tag/jetty-9.4.53.v20231009) by [this](https://github.com/jetty/jetty.project/commit/0f246d12090fb15b7b21dee8429f459fd792de53) commit.\n* lighttpd [**1.4.73**](https://github.com/lighttpd/lighttpd1.4/releases/tag/lighttpd-1.4.73) by [this](https://github.com/lighttpd/lighttpd1.4/commit/7b48f3c843e1113b27f5d278f4d10861cc499a06) commit.\n* grpc-go \n  * [**1.56.3**](https://github.com/grpc/grpc-go/releases/tag/v1.56.3) by [this](https://github.com/grpc/grpc-go/commit/5efd7bd7) commit,\n  * [**1.57.1**](https://github.com/grpc/grpc-go/releases/tag/v1.57.1) by [this](https://github.com/grpc/grpc-go/commit/6a1400d5) commit,\n  * [**1.58.3**](https://github.com/grpc/grpc-go/releases/tag/v1.58.3) by [this](https://github.com/grpc/grpc-go/commit/c40c9ba3) commit,\n * h2o fixed in the **master** branch by [this](https://github.com/h2o/h2o/commit/28fe15117b909588bf14269a0e1c6ec4548579fe) commit which is not yet included in any release.\n\n## Workaround\nDepending on technologies use and their configuration, different mitigation strategies may be available.\n\nIn some cases, it may be possible to limit the amount of `RST_STREAM` frame frames that are processed within a given time by configuring the particular HTTP/2 implementation manually. Please refer to your software vendor's advisories for more information.\n\n## Dependency tree\n- org.owasp.webgoat.lesson:xxe:v8.1.0:-maven\n    - com.github.tomakehurst:wiremock:2.8.0\n        - org.eclipse.jetty:jetty-webapp:9.4.24.v20191120\n            - org.eclipse.jetty:jetty-xml:9.4.24.v20191120\n\n\n## References\n* Common Weakness Enumeration: [CWE-400](https://cwe.mitre.org/data/definitions/400.html)\n\n","text":"The HTTP/2 protocol contains a flaw related to the stream multiplexing feature that can allow for excessive resource consumption on servers operating implementations of the HTTP/2 protocol. \n\nThe HTTP/2 protocol allows clients to signal to a server to cancel a previously opened stream by sending an `RST_STREAM` frame. Attackers can abuse this stream canceling ability by opening a large number of streams at once immediately followed by `RST_STREAM` frames. In most HTTP/2 implementations this bypasses concurrent open stream limits and causes servers to spend processing time first handling request frames and then performing stream tear downs. For the server, these operations can pile up whereas the attacker client paid minuscule bandwidth and processing costs.\n\n[Amazon](https://aws.amazon.com/security/security-bulletins/AWS-2023-011/), [Cloudflare](https://blog.cloudflare.com/technical-breakdown-http2-rapid-reset-ddos-attack/) and [Google](https://cloud.google.com/blog/products/identity-security/google-cloud-mitigated-largest-ddos-attack-peaking-above-398-million-rps/) have reported that this vulnerability has been exploited in the wild from August to October 2023.\n\nThis vulnerability is listed as exploitable by the Cybersecurity \u0026 Infrastructure Security Agency in their [Known Exploited Vulnerabilities Catalog](https://www.cisa.gov/known-exploited-vulnerabilities-catalog)."},"properties":{"security-severity":"8.9","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-400"]},"defaultConfiguration":{"level":"error"}},{"id":"CVE-2020-27223 jetty-xml 9.4.24.v20191120: wiremock 2.8.0: org.eclipse.jetty","shortDescription":{"text":"Transitive Dependency: jetty-xml 9.4.24.v20191120 from wiremock 2.8.0 (CVE-2020-27223)"},"fullDescription":{"text":"Jetty is vulnerable to denial-of-service (DoS) due to the use of an exponential algorithm that can have excessive resource requirements. A remote attacker could cause a vulnerable server to become unresponsive by sending maliciously crafted HTTP requests to that server."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| jetty-xml 9.4.24.v20191120  | 9.4.53.20231009  | 12.0.5 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/ee93672f-853c-4083-a5e8-0d5ab21e8bf9?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=d8221aaa-7d55-4b5a-b3e0-2b5cba26ce60)\n\n\n## Description\nJetty is vulnerable to denial-of-service (DoS) due to the use of an exponential algorithm that can have excessive resource requirements. A remote attacker could cause a vulnerable server to become unresponsive by sending maliciously crafted HTTP requests to that server.\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [CVE-2020-27223](https://openhub.net/vulnerabilities/bdsa/CVE-2020-27223) - Inefficient Algorithmic Complexity\n\n\n\n## Solution\nFixed by [this](https://github.com/eclipse/jetty.project/commit/10e531756b972162eed402c44d0244f7f6b85131) commit in:\n* [**11.0.1**](https://github.com/eclipse/jetty.project/releases/tag/jetty-11.0.1)\n* [**10.0.1**](https://github.com/eclipse/jetty.project/releases/tag/jetty-10.0.1)\n* [**9.4.37.v20210219**](https://github.com/eclipse/jetty.project/releases/tag/jetty-9.4.37.v20210219)\n\nThe latest stable releases are available [here](https://github.com/eclipse/jetty.project/releases).\n\n## Workaround\nThe vendor has stated that the following workarounds are effective:\n\n* Don't use the default error page or handler.\n* Don't deploy an instance of `StatisticsServlet` that is exposed to the network.\n* Don't call the `getLocale` API.\n* Don't enable precompressed static content in instances of `DefaultServlet`.\n* Deploy a rule that limits the number and size of `Accept-*` header fields.\n\n## Dependency tree\n- org.owasp.webgoat.lesson:xxe:v8.1.0:-maven\n    - com.github.tomakehurst:wiremock:2.8.0\n        - org.eclipse.jetty:jetty-webapp:9.4.24.v20191120\n            - org.eclipse.jetty:jetty-xml:9.4.24.v20191120\n\n\n## References\n* Common Weakness Enumeration: [CWE-407](https://cwe.mitre.org/data/definitions/407.html)\n\n","text":"Jetty is vulnerable to denial-of-service (DoS) due to the use of an exponential algorithm that can have excessive resource requirements. A remote attacker could cause a vulnerable server to become unresponsive by sending maliciously crafted HTTP requests to that server."},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-407"]},"defaultConfiguration":{"level":"warning"}},{"id":"CVE-2021-28165 jetty-xml 9.4.24.v20191120: wiremock 2.8.0: org.eclipse.jetty","shortDescription":{"text":"Transitive Dependency: jetty-xml 9.4.24.v20191120 from wiremock 2.8.0 (CVE-2021-28165)"},"fullDescription":{"text":"Eclipse Jetty is vulnerable to Denial-of-Service (DoS) via invalid TLS frames. An attacker could exploit this by sending a TLS frame with a size in excess of 17408 resulting in excessive resource consumption leading to a DoS condition."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| jetty-xml 9.4.24.v20191120  | 9.4.53.20231009  | 12.0.5 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/ee93672f-853c-4083-a5e8-0d5ab21e8bf9?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=d8221aaa-7d55-4b5a-b3e0-2b5cba26ce60)\n\n\n## Description\nEclipse Jetty is vulnerable to Denial-of-Service (DoS) via invalid TLS frames. An attacker could exploit this by sending a TLS frame with a size in excess of 17408 resulting in excessive resource consumption leading to a DoS condition.\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [CVE-2021-28165](https://openhub.net/vulnerabilities/bdsa/CVE-2021-28165) - Uncontrolled Resource Consumption\n\n\n\n## Solution\nFixed in [**10.0.2**](https://github.com/eclipse/jetty.project/releases/tag/jetty-10.0.2) and [**11.0.2**](https://github.com/eclipse/jetty.project/releases/tag/jetty-11.0.2) by [this](https://github.com/eclipse/jetty.project/commit/be22761a20a1685365c8e0356bf09b47e574cfd9) and [this](https://github.com/eclipse/jetty.project/commit/039c7386d0f3087d7c8aa19ea6001b24c95b9f16) commit.\nFixed in [**9.4.39.v20210325**](https://github.com/eclipse/jetty.project/releases/tag/jetty-9.4.39.v20210325) by [this](https://github.com/eclipse/jetty.project/commit/00d379c94ba865dced2025c2d1bc3e2e0e41e880) and [this](https://github.com/eclipse/jetty.project/commit/294b2ba02b667548617a94cd99592110ac230add) commit. \n\nThe latest stable releases are available [here](https://github.com/eclipse/jetty.project/releases).\n\n## Workaround\nThe problem can be worked around by compiling the following class:\n```\npackage org.eclipse.jetty.server.ssl.fix6072;\n\nimport java.nio.ByteBuffer;\nimport javax.net.ssl.SSLEngine;\nimport javax.net.ssl.SSLEngineResult;\nimport javax.net.ssl.SSLException;\nimport javax.net.ssl.SSLHandshakeException;\n\nimport org.eclipse.jetty.io.EndPoint;\nimport org.eclipse.jetty.io.ssl.SslConnection;\nimport org.eclipse.jetty.server.Connector;\nimport org.eclipse.jetty.server.SslConnectionFactory;\nimport org.eclipse.jetty.util.BufferUtil;\nimport org.eclipse.jetty.util.annotation.Name;\nimport org.eclipse.jetty.util.ssl.SslContextFactory;\n\npublic class SpaceCheckingSslConnectionFactory extends SslConnectionFactory\n{\n    public SpaceCheckingSslConnectionFactory(@Name(\"sslContextFactory\") SslContextFactory factory, @Name(\"next\") String nextProtocol)\n    {\n        super(factory, nextProtocol);\n    }\n\n    @Override\n    protected SslConnection newSslConnection(Connector connector, EndPoint endPoint, SSLEngine engine)\n    {\n        return new SslConnection(connector.getByteBufferPool(), connector.getExecutor(), endPoint, engine, isDirectBuffersForEncryption(), isDirectBuffersForDecryption())\n        {\n            @Override\n            protected SSLEngineResult unwrap(SSLEngine sslEngine, ByteBuffer input, ByteBuffer output) throws SSLException\n            {\n                SSLEngineResult results = super.unwrap(sslEngine, input, output);\n\n                if ((results.getStatus() == SSLEngineResult.Status.BUFFER_UNDERFLOW ||\n                    results.getStatus() == SSLEngineResult.Status.OK \u0026\u0026 results.bytesConsumed() == 0 \u0026\u0026 results.bytesProduced() == 0) \u0026\u0026\n                    BufferUtil.space(input) == 0)\n                {\n                    BufferUtil.clear(input);\n                    throw new SSLHandshakeException(\"Encrypted buffer max length exceeded\");\n                }\n                return results;\n            }\n        };\n    }\n}\n```\n\nThis class can be deployed by:\n* The resulting class file should be put into a jar file (eg `sslfix6072.jar`)\n* The jar file should be made available to the server. For a normal distribution this can be done by putting the file into `${jetty.base}/lib`\n* Copy the file `${jetty.home}/modules/ssl.mod` to `${jetty.base}/modules`\n* Edit the `${jetty.base}/modules/ssl.mod` file to have the following section:\n```\n[lib]\nlib/sslfix6072.jar\n```\n\n* Copy the file `${jetty.home}/etc/jetty-https.xml` and `${jetty.home}/etc/jetty-http2.xml` to `${jetty.base}/etc`\n* Edit files `${jetty.base}/etc/jetty-https.xml` and `${jetty.base}/etc/jetty-http2.xml`, changing any reference of `org.eclipse.jetty.server.SslConnectionFactory` to `org.eclipse.jetty.server.ssl.fix6072.SpaceCheckingSslConnectionFactory`. \n\nFor example:\n```\n  \u003cCall name=\"addIfAbsentConnectionFactory\"\u003e\n    \u003cArg\u003e\n      \u003cNew class=\"org.eclipse.jetty.server.ssl.fix6072.SpaceCheckingSslConnectionFactory\"\u003e\n        \u003cArg name=\"next\"\u003ehttp/1.1\u003c/Arg\u003e\n        \u003cArg name=\"sslContextFactory\"\u003e\u003cRef refid=\"sslContextFactory\"/\u003e\u003c/Arg\u003e\n      \u003c/New\u003e\n    \u003c/Arg\u003e\n  \u003c/Call\u003e\n```\nRestart Jetty\n\n## Dependency tree\n- org.owasp.webgoat.lesson:xxe:v8.1.0:-maven\n    - com.github.tomakehurst:wiremock:2.8.0\n        - org.eclipse.jetty:jetty-webapp:9.4.24.v20191120\n            - org.eclipse.jetty:jetty-xml:9.4.24.v20191120\n\n\n## References\n* Common Weakness Enumeration: [CWE-400](https://cwe.mitre.org/data/definitions/400.html)\n\n","text":"Eclipse Jetty is vulnerable to Denial-of-Service (DoS) via invalid TLS frames. An attacker could exploit this by sending a TLS frame with a size in excess of 17408 resulting in excessive resource consumption leading to a DoS condition."},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-400"]},"defaultConfiguration":{"level":"warning"}},{"id":"CVE-2021-28169 jetty-xml 9.4.24.v20191120: wiremock 2.8.0: org.eclipse.jetty","shortDescription":{"text":"Transitive Dependency: jetty-xml 9.4.24.v20191120 from wiremock 2.8.0 (CVE-2021-28169)"},"fullDescription":{"text":"Jetty is vulnerable to information disclosure due to improper requested path verification. This allows crafted requests to access protected resources of the web application which, depending on the implementation, might reveal sensitive information."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| jetty-xml 9.4.24.v20191120  | 9.4.53.20231009  | 12.0.5 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/ee93672f-853c-4083-a5e8-0d5ab21e8bf9?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=d8221aaa-7d55-4b5a-b3e0-2b5cba26ce60)\n\n\n## Description\nJetty is vulnerable to information disclosure due to improper requested path verification. This allows crafted requests to access protected resources of the web application which, depending on the implementation, might reveal sensitive information.\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [CVE-2021-28169](https://openhub.net/vulnerabilities/bdsa/CVE-2021-28169) - Directory Traversal\n\n\n\n## Solution\nFixed in [**9.4.41**](https://github.com/eclipse/jetty.project/releases/tag/jetty-9.4.41.v20210512) by [this](https://github.com/eclipse/jetty.project/commit/1c05b0bcb1) commit.\n\nFixed in [**10.0.3**](https://github.com/eclipse/jetty.project/releases/tag/jetty-10.0.3) and [**11.0.3**](https://github.com/eclipse/jetty.project/releases/tag/jetty-11.0.3) by [this](https://github.com/eclipse/jetty.project/commit/f58dbedcd0) commit.\n\nThe latest stable releases are available [here](https://www.eclipse.org/jetty/download.php).\n\n## Workaround\nThe vendor provides the following workaround:\n\nIf you cannot update to the latest version of Jetty, you can instead deploy your own version of the `ConcatServlet` and/or the `WelcomeFilter` by using the code from the latest version of Jetty.\n\n## Dependency tree\n- org.owasp.webgoat.lesson:xxe:v8.1.0:-maven\n    - com.github.tomakehurst:wiremock:2.8.0\n        - org.eclipse.jetty:jetty-webapp:9.4.24.v20191120\n            - org.eclipse.jetty:jetty-xml:9.4.24.v20191120\n\n\n## References\n* Common Weakness Enumeration: [CWE-22](https://cwe.mitre.org/data/definitions/22.html)\n\n","text":"Jetty is vulnerable to information disclosure due to improper requested path verification. This allows crafted requests to access protected resources of the web application which, depending on the implementation, might reveal sensitive information."},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-22"]},"defaultConfiguration":{"level":"warning"}},{"id":"CVE-2023-36478 jetty-xml 9.4.24.v20191120: wiremock 2.8.0: org.eclipse.jetty","shortDescription":{"text":"Transitive Dependency: jetty-xml 9.4.24.v20191120 from wiremock 2.8.0 (CVE-2023-36478)"},"fullDescription":{"text":"Eclipse Jetty is vulnerable to a denial-of-service (DoS) issue due to presence of a user input validation flaw in the HTTP/2 HPACK functionality that can lead to an integer overflow and allow HPACK headers to exceed their expected size limits.\n\nAn attacker could submit crafted HTTP messages that trigger the integer overflow flaw and cause large buffers to be allocated on the server, consuming memory resources in a manner that could cause the server to run out of memory."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| jetty-xml 9.4.24.v20191120  | 9.4.53.20231009  | 12.0.5 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/ee93672f-853c-4083-a5e8-0d5ab21e8bf9?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=d8221aaa-7d55-4b5a-b3e0-2b5cba26ce60)\n\n\n## Description\nEclipse Jetty is vulnerable to a denial-of-service (DoS) issue due to presence of a user input validation flaw in the HTTP/2 HPACK functionality that can lead to an integer overflow and allow HPACK headers to exceed their expected size limits.\n\nAn attacker could submit crafted HTTP messages that trigger the integer overflow flaw and cause large buffers to be allocated on the server, consuming memory resources in a manner that could cause the server to run out of memory.\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [CVE-2023-36478](https://openhub.net/vulnerabilities/bdsa/CVE-2023-36478) - Integer Overflow / Underflow\n\n\n\n## Solution\nFixed in:\n* [**9.4.53.v20231009**](https://github.com/jetty/jetty.project/releases/tag/jetty-9.4.53.v20231009) by [this](https://github.com/jetty/jetty.project/commit/c7a4b05fc735e73e7522cb617c079045b709957b) commit and [this](https://github.com/jetty/jetty.project/commit/a4d61e9eb026ec98c79107e840cabdf520482c56) commit,\n* [**10.0.16**](https://github.com/jetty/jetty.project/releases/tag/jetty-10.0.16), [**11.0.16**](https://github.com/jetty/jetty.project/releases/tag/jetty-11.0.16) and [**12.0.0.beta2x**](https://github.com/jetty/jetty.project/releases/tag/jetty-12.0.0.beta2x) by [this](https://github.com/jetty/jetty.project/commit/a8c9eea75bffcb2b2557acefb75856707654a56f) commit and [this](https://github.com/jetty/jetty.project/commit/420ec7cc1db65b42693dc002aca0faa567f62f7e) commit.\n\nThe latest stable releases can be found [here](https://eclipse.dev/jetty/download.php).\n\n\n\n## Dependency tree\n- org.owasp.webgoat.lesson:xxe:v8.1.0:-maven\n    - com.github.tomakehurst:wiremock:2.8.0\n        - org.eclipse.jetty:jetty-webapp:9.4.24.v20191120\n            - org.eclipse.jetty:jetty-xml:9.4.24.v20191120\n\n\n## References\n* Common Weakness Enumeration: [CWE-190](https://cwe.mitre.org/data/definitions/190.html)\n* Common Weakness Enumeration: [CWE-400](https://cwe.mitre.org/data/definitions/400.html)\n\n","text":"Eclipse Jetty is vulnerable to a denial-of-service (DoS) issue due to presence of a user input validation flaw in the HTTP/2 HPACK functionality that can lead to an integer overflow and allow HPACK headers to exceed their expected size limits.\n\nAn attacker could submit crafted HTTP messages that trigger the integer overflow flaw and cause large buffers to be allocated on the server, consuming memory resources in a manner that could cause the server to run out of memory."},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-190","external/cwe/cwe-400"]},"defaultConfiguration":{"level":"warning"}},{"id":"CVE-2022-2048 jetty-xml 9.4.24.v20191120: wiremock 2.8.0: org.eclipse.jetty","shortDescription":{"text":"Transitive Dependency: jetty-xml 9.4.24.v20191120 from wiremock 2.8.0 (CVE-2022-2048)"},"fullDescription":{"text":"Eclipse Jetty does not correctly handle invalid HTTP/2 requests. An attacker could exploit this flaw to exhaust the HTTP/2 flow control window or TCP congest the connection. This will cause the relevant selector threads to be blocked and it will lead to a denial-of-service (DoS)."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| jetty-xml 9.4.24.v20191120  | 9.4.53.20231009  | 12.0.5 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/ee93672f-853c-4083-a5e8-0d5ab21e8bf9?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=d8221aaa-7d55-4b5a-b3e0-2b5cba26ce60)\n\n\n## Description\nEclipse Jetty does not correctly handle invalid HTTP/2 requests. An attacker could exploit this flaw to exhaust the HTTP/2 flow control window or TCP congest the connection. This will cause the relevant selector threads to be blocked and it will lead to a denial-of-service (DoS).\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [CVE-2022-2048](https://openhub.net/vulnerabilities/bdsa/CVE-2022-2048) - Insufficient Resource Pool\n\n\n\n## Solution\nFixed in:\n* **[9.4.47](https://github.com/eclipse/jetty.project/releases/tag/jetty-9.4.47.v20220610)** by [this](https://github.com/eclipse/jetty.project/commit/be912d4315839405a8ae601f2e4ee0306867266e) commit,\n* **[10.0.10](https://github.com/eclipse/jetty.project/releases/tag/jetty-10.0.10)** and **[11.0.10](https://github.com/eclipse/jetty.project/releases/tag/jetty-11.0.10)** by [this](https://github.com/eclipse/jetty.project/commit/b705091afb9158b39590fa36b9b84795524a8f0b) commit.\n\n\nThe latest stable releases can be found [here](https://github.com/eclipse/jetty.project/releases).\n\n## Workaround\nThe vendor recommends users to filter the requests before they are sent to Jetty. One way to filter them would be to use a proxy.\n\n## Dependency tree\n- org.owasp.webgoat.lesson:xxe:v8.1.0:-maven\n    - com.github.tomakehurst:wiremock:2.8.0\n        - org.eclipse.jetty:jetty-webapp:9.4.24.v20191120\n            - org.eclipse.jetty:jetty-xml:9.4.24.v20191120\n\n\n## References\n* Common Weakness Enumeration: [CWE-410](https://cwe.mitre.org/data/definitions/410.html)\n* Common Weakness Enumeration: [CWE-664](https://cwe.mitre.org/data/definitions/664.html)\n\n","text":"Eclipse Jetty does not correctly handle invalid HTTP/2 requests. An attacker could exploit this flaw to exhaust the HTTP/2 flow control window or TCP congest the connection. This will cause the relevant selector threads to be blocked and it will lead to a denial-of-service (DoS)."},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-410","external/cwe/cwe-664"]},"defaultConfiguration":{"level":"warning"}},{"id":"CVE-2020-27218 jetty-xml 9.4.24.v20191120: wiremock 2.8.0: org.eclipse.jetty","shortDescription":{"text":"Transitive Dependency: jetty-xml 9.4.24.v20191120 from wiremock 2.8.0 (CVE-2020-27218)"},"fullDescription":{"text":"Eclipse Jetty contains a vulnerability that allows a remote attacker to inject data into other client's requests. This vulnerability only exists when GZIP request body inflation is enabled, and requests from different clients are multiplexed onto a single connection."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| jetty-xml 9.4.24.v20191120  | 9.4.53.20231009  | 12.0.5 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/ee93672f-853c-4083-a5e8-0d5ab21e8bf9?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=d8221aaa-7d55-4b5a-b3e0-2b5cba26ce60)\n\n\n## Description\nEclipse Jetty contains a vulnerability that allows a remote attacker to inject data into other client's requests. This vulnerability only exists when GZIP request body inflation is enabled, and requests from different clients are multiplexed onto a single connection.\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [CVE-2020-27218](https://openhub.net/vulnerabilities/bdsa/CVE-2020-27218) - Sensitive Information in Resource Not Removed Before Reuse\n\n\n\n## Solution\nFixed in **[9.4.35.v20201120](https://github.com/eclipse/jetty.project/releases/tag/jetty-9.4.35.v20201120)** by [this](https://github.com/eclipse/jetty.project/commit/850a0330ff25da42b1b1cbdbdca0fcc0c40e47e9) commit.\n\nFixed in **[10.0.0.beta3](https://github.com/eclipse/jetty.project/releases/tag/jetty-10.0.0.beta3)** and in **[11.0.0.beta3](https://github.com/eclipse/jetty.project/releases/tag/jetty-11.0.0.beta3)** by [this](https://github.com/eclipse/jetty.project/commit/34d27e85483c119b7dd1aa9beda735844d14b605) commit.\n\n## Workaround\nThe vendor states that any of the following will mitigate this vulnerability:\n\n\n\u003e * Disabling compressed request body inflation by GzipHandler.\n\u003e * By always fully consuming the request content before sending a response.\n\u003e * By adding a Connection: close to any response where the servlet does not fully consume request content.\n\n## Dependency tree\n- org.owasp.webgoat.lesson:xxe:v8.1.0:-maven\n    - com.github.tomakehurst:wiremock:2.8.0\n        - org.eclipse.jetty:jetty-webapp:9.4.24.v20191120\n            - org.eclipse.jetty:jetty-xml:9.4.24.v20191120\n\n\n## References\n* Common Weakness Enumeration: [CWE-226](https://cwe.mitre.org/data/definitions/226.html)\n\n","text":"Eclipse Jetty contains a vulnerability that allows a remote attacker to inject data into other client's requests. This vulnerability only exists when GZIP request body inflation is enabled, and requests from different clients are multiplexed onto a single connection."},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-226"]},"defaultConfiguration":{"level":"warning"}},{"id":"CVE-2023-26048 jetty-xml 9.4.24.v20191120: wiremock 2.8.0: org.eclipse.jetty","shortDescription":{"text":"Transitive Dependency: jetty-xml 9.4.24.v20191120 from wiremock 2.8.0 (CVE-2023-26048)"},"fullDescription":{"text":"Eclipse Jetty contains a vulnerability in its multipart request parsing mechanism that can lead to an out-of-memory error due to insufficient limiting measures. An attacker can exploit this flaw by supplying a request containing a large multipart without a filename in order to cause a denial-of-service (DoS)."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| jetty-xml 9.4.24.v20191120  | 9.4.53.20231009  | 12.0.5 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/ee93672f-853c-4083-a5e8-0d5ab21e8bf9?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=d8221aaa-7d55-4b5a-b3e0-2b5cba26ce60)\n\n\n## Description\nEclipse Jetty contains a vulnerability in its multipart request parsing mechanism that can lead to an out-of-memory error due to insufficient limiting measures. An attacker can exploit this flaw by supplying a request containing a large multipart without a filename in order to cause a denial-of-service (DoS).\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [CVE-2023-26048](https://openhub.net/vulnerabilities/bdsa/CVE-2023-26048) - Uncontrolled Resource Consumption\n\n\n\n## Solution\nFixed in [**jetty-9.4.51.v20230217**](https://github.com/eclipse/jetty.project/releases/tag/jetty-9.4.51.v20230217) by [this](https://github.com/eclipse/jetty.project/commit/c3021592218da289563987e6f7fbe05f8704b285) commit.\n\nFixed by [this](https://github.com/eclipse/jetty.project/commit/622befbd0d52f61c1acd41b4ef12458311494f1a) commit in:\n* **[jetty-10.0.14](https://github.com/eclipse/jetty.project/releases/tag/jetty-10.0.14)**\n* **[jetty-11.0.14](https://github.com/eclipse/jetty.project/releases/tag/jetty-11.0.14)**\n* **[jetty-12.0.0.beta0](https://github.com/eclipse/jetty.project/releases/tag/jetty-12.0.0.beta0)**\n\nThe latest stable releases can be found [here](https://github.com/eclipse/jetty.project/releases).\n\n## Workaround\nIt is recommended to set the multipart parameter `maxRequestSize` to a non-negative value in order to limit the whole multipart content. It has also been stated that limiting the multipart parameter `maxFileSize` will not be enough since the attacker can supply a large number of parts that, when summed up, will cause memory issues.\n\n## Dependency tree\n- org.owasp.webgoat.lesson:xxe:v8.1.0:-maven\n    - com.github.tomakehurst:wiremock:2.8.0\n        - org.eclipse.jetty:jetty-webapp:9.4.24.v20191120\n            - org.eclipse.jetty:jetty-xml:9.4.24.v20191120\n\n\n## References\n* Common Weakness Enumeration: [CWE-400](https://cwe.mitre.org/data/definitions/400.html)\n* Common Weakness Enumeration: [CWE-770](https://cwe.mitre.org/data/definitions/770.html)\n\n","text":"Eclipse Jetty contains a vulnerability in its multipart request parsing mechanism that can lead to an out-of-memory error due to insufficient limiting measures. An attacker can exploit this flaw by supplying a request containing a large multipart without a filename in order to cause a denial-of-service (DoS)."},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-400","external/cwe/cwe-770"]},"defaultConfiguration":{"level":"warning"}},{"id":"CVE-2023-26049 jetty-xml 9.4.24.v20191120: wiremock 2.8.0: org.eclipse.jetty","shortDescription":{"text":"Transitive Dependency: jetty-xml 9.4.24.v20191120 from wiremock 2.8.0 (CVE-2023-26049)"},"fullDescription":{"text":"Eclipse Jetty does not properly parse quoted values in cookies. This could allow an attacker to smuggle cookies within other cookies into the application. The attacker can also tamper with the cookie parsing mechanism and cause other unintended behavior."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| jetty-xml 9.4.24.v20191120  | 9.4.53.20231009  | 12.0.5 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/ee93672f-853c-4083-a5e8-0d5ab21e8bf9?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=d8221aaa-7d55-4b5a-b3e0-2b5cba26ce60)\n\n\n## Description\nEclipse Jetty does not properly parse quoted values in cookies. This could allow an attacker to smuggle cookies within other cookies into the application. The attacker can also tamper with the cookie parsing mechanism and cause other unintended behavior.\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [CVE-2023-26049](https://openhub.net/vulnerabilities/bdsa/CVE-2023-26049) - Weak Input Validation\n\n\n\n## Solution\nFixed in version [**jetty-9.4.51.v20230217**](https://github.com/eclipse/jetty.project/releases/tag/jetty-9.4.51.v20230217) by [this](https://github.com/eclipse/jetty.project/commit/1be1401bafb4c46fae3c234c8e93743a661dcf21) commit.\n\nFixed by [this](https://github.com/eclipse/jetty.project/commit/7b8c2c1bf081c7f408e5da3371c8c3c9802f09fd) commit in:\n* [**jetty-10.0.14**](https://github.com/eclipse/jetty.project/releases/tag/jetty-10.0.14)\n* [**jetty-11.0.14**](https://github.com/eclipse/jetty.project/releases/tag/jetty-11.0.14)\n* [**jetty-12.0.0.beta0**](https://github.com/eclipse/jetty.project/releases/tag/jetty-12.0.0.beta0)\n\nThe latest stable releases can be found [here](https://github.com/eclipse/jetty.project/releases).\n\n\n\n## Dependency tree\n- org.owasp.webgoat.lesson:xxe:v8.1.0:-maven\n    - com.github.tomakehurst:wiremock:2.8.0\n        - org.eclipse.jetty:jetty-webapp:9.4.24.v20191120\n            - org.eclipse.jetty:jetty-xml:9.4.24.v20191120\n\n\n## References\n* Common Weakness Enumeration: [CWE-20](https://cwe.mitre.org/data/definitions/20.html)\n\n","text":"Eclipse Jetty does not properly parse quoted values in cookies. This could allow an attacker to smuggle cookies within other cookies into the application. The attacker can also tamper with the cookie parsing mechanism and cause other unintended behavior."},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-20"]},"defaultConfiguration":{"level":"warning"}},{"id":"CVE-2023-40167 jetty-xml 9.4.24.v20191120: wiremock 2.8.0: org.eclipse.jetty","shortDescription":{"text":"Transitive Dependency: jetty-xml 9.4.24.v20191120 from wiremock 2.8.0 (CVE-2023-40167)"},"fullDescription":{"text":"Eclipse Jetty is vulnerable to HTTP request smuggling due to the improper parsing of HTTP requests. An attacker could exploit this vulnerability by sending maliciously crafted HTTP requests to a vulnerable endpoint with multiple requests included inside the body by manipulating the `Content-Length` of the request. The smuggling of HTTP requests may allow for the bypass of security tools such as web application firewalls (WAFs) and intrusion detection systems (IDSs)."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| jetty-xml 9.4.24.v20191120  | 9.4.53.20231009  | 12.0.5 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/ee93672f-853c-4083-a5e8-0d5ab21e8bf9?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=d8221aaa-7d55-4b5a-b3e0-2b5cba26ce60)\n\n\n## Description\nEclipse Jetty is vulnerable to HTTP request smuggling due to the improper parsing of HTTP requests. An attacker could exploit this vulnerability by sending maliciously crafted HTTP requests to a vulnerable endpoint with multiple requests included inside the body by manipulating the `Content-Length` of the request. The smuggling of HTTP requests may allow for the bypass of security tools such as web application firewalls (WAFs) and intrusion detection systems (IDSs).\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [CVE-2023-40167](https://openhub.net/vulnerabilities/bdsa/CVE-2023-40167) - Improper Handling of Length Parameter Inconsistency\n\n\n\n## Solution\nFixed in versions:\n* [**12.0.1**](https://github.com/eclipse/jetty.project/releases/tag/jetty-12.0.1) by [this](https://github.com/eclipse/jetty.project/commit/13cf2dade746e5d3bb123fd7ecd9fdc28fc43082) commit.\n* [**11.0.16**](https://github.com/eclipse/jetty.project/releases/tag/jetty-11.0.16) and [**10.0.16**](https://github.com/eclipse/jetty.project/releases/tag/jetty-10.0.16) by [this](https://github.com/eclipse/jetty.project/commit/003e46cae4d71e147d51fb8ea378e8989d381cc3) commit.\n* [**9.4.52.v20230823**](https://github.com/eclipse/jetty.project/releases/tag/jetty-9.4.52.v20230823) by [this](https://github.com/eclipse/jetty.project/commit/e4d596eafc887bcd813ae6e28295b5ce327def47) commit.\n\nThe latest stable releases can be found [here](https://eclipse.dev/jetty/download.php).\n\n\n\n## Dependency tree\n- org.owasp.webgoat.lesson:xxe:v8.1.0:-maven\n    - com.github.tomakehurst:wiremock:2.8.0\n        - org.eclipse.jetty:jetty-webapp:9.4.24.v20191120\n            - org.eclipse.jetty:jetty-xml:9.4.24.v20191120\n\n\n## References\n* Common Weakness Enumeration: [CWE-130](https://cwe.mitre.org/data/definitions/130.html)\n\n","text":"Eclipse Jetty is vulnerable to HTTP request smuggling due to the improper parsing of HTTP requests. An attacker could exploit this vulnerability by sending maliciously crafted HTTP requests to a vulnerable endpoint with multiple requests included inside the body by manipulating the `Content-Length` of the request. The smuggling of HTTP requests may allow for the bypass of security tools such as web application firewalls (WAFs) and intrusion detection systems (IDSs)."},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-130"]},"defaultConfiguration":{"level":"warning"}},{"id":"CVE-2023-36479 jetty-xml 9.4.24.v20191120: wiremock 2.8.0: org.eclipse.jetty","shortDescription":{"text":"Transitive Dependency: jetty-xml 9.4.24.v20191120 from wiremock 2.8.0 (CVE-2023-36479)"},"fullDescription":{"text":"Eclipse Jetty contains an improper neutralization of quoting syntax issue within the CGI servlet. This could allow an authenticated attacker to send a request to the CGI Servlet for a binary with a space in its name in order to manipulate the command structure and execute incorrect commands."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| jetty-xml 9.4.24.v20191120  | 9.4.53.20231009  | 12.0.5 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/ee93672f-853c-4083-a5e8-0d5ab21e8bf9?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=d8221aaa-7d55-4b5a-b3e0-2b5cba26ce60)\n\n\n## Description\nEclipse Jetty contains an improper neutralization of quoting syntax issue within the CGI servlet. This could allow an authenticated attacker to send a request to the CGI Servlet for a binary with a space in its name in order to manipulate the command structure and execute incorrect commands.\n\n## Vulnerabilities(BDSA,CVE)\n:large_blue_circle: [CVE-2023-36479](https://openhub.net/vulnerabilities/bdsa/CVE-2023-36479) - Improper Neutralization of Quoting Syntax\n\n\n\n## Solution\nFixed in versions:\n* [**12.0.0.beta1**](https://github.com/eclipse/jetty.project/releases/tag/jetty-12.0.0.beta1) by [this](https://github.com/eclipse/jetty.project/commit/6ce5a0fbcdf06ae647dfd304dd81a1f9b0691a5c) commit.\n* [**11.0.16**](https://github.com/eclipse/jetty.project/releases/tag/jetty-11.0.16) and [**10.0.16**](https://github.com/eclipse/jetty.project/releases/tag/jetty-10.0.16) by [this](https://github.com/eclipse/jetty.project/commit/c29491e5ac70c98e4d7d7dff2a6465ddecc45c0c) commit.\n* [**9.4.52.v20230823**](https://github.com/eclipse/jetty.project/releases/tag/jetty-9.4.52.v20230823) by [this](https://github.com/eclipse/jetty.project/commit/ec7e1fd173481e526db4092f558aa2b5aab57580) commit.\n\nThe latest stable releases can be found [here](https://eclipse.dev/jetty/download.php).\n\n## Workaround\nThe vendor has issued the following workaround:\n\n\u003e The` org.eclipse.jetty.servlets.CGI` Servlet should not be used. Fast CGI support is available instead.\n\n## Dependency tree\n- org.owasp.webgoat.lesson:xxe:v8.1.0:-maven\n    - com.github.tomakehurst:wiremock:2.8.0\n        - org.eclipse.jetty:jetty-webapp:9.4.24.v20191120\n            - org.eclipse.jetty:jetty-xml:9.4.24.v20191120\n\n\n## References\n* Common Weakness Enumeration: [CWE-149](https://cwe.mitre.org/data/definitions/149.html)\n\n","text":"Eclipse Jetty contains an improper neutralization of quoting syntax issue within the CGI servlet. This could allow an authenticated attacker to send a request to the CGI Servlet for a binary with a space in its name in order to manipulate the command structure and execute incorrect commands."},"properties":{"security-severity":"3.8","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-149"]},"defaultConfiguration":{"level":"note"}},{"id":"CVE-2023-41900 jetty-xml 9.4.24.v20191120: wiremock 2.8.0: org.eclipse.jetty","shortDescription":{"text":"Transitive Dependency: jetty-xml 9.4.24.v20191120 from wiremock 2.8.0 (CVE-2023-41900)"},"fullDescription":{"text":"Eclipse Jetty contains an improper authentication vulnerability. This could allow an authenticated attacker to bypass authentication after it has been rejected or revoked by the `LoginService` and make a request as if authenticated.\n\n**Note:** The vendor has stated that this issue impacts usages of the `jetty-openid` which have configured a nested `LoginService` and where that `LoginService` is capable of rejecting previously authenticated users."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| jetty-xml 9.4.24.v20191120  | 9.4.53.20231009  | 12.0.5 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/ee93672f-853c-4083-a5e8-0d5ab21e8bf9?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=d8221aaa-7d55-4b5a-b3e0-2b5cba26ce60)\n\n\n## Description\nEclipse Jetty contains an improper authentication vulnerability. This could allow an authenticated attacker to bypass authentication after it has been rejected or revoked by the `LoginService` and make a request as if authenticated.\n\n**Note:** The vendor has stated that this issue impacts usages of the `jetty-openid` which have configured a nested `LoginService` and where that `LoginService` is capable of rejecting previously authenticated users.\n\n## Vulnerabilities(BDSA,CVE)\n:large_blue_circle: [CVE-2023-41900](https://openhub.net/vulnerabilities/bdsa/CVE-2023-41900) - Improper Authentication\n\n\n\n## Solution\nFixed in version [**11.0.15**](https://github.com/eclipse/jetty.project/releases/tag/jetty-11.0.15) and [**10.0.15**](https://github.com/eclipse/jetty.project/releases/tag/jetty-10.0.15) by [this](https://github.com/eclipse/jetty.project/commit/24b7d06fd5ce5468caa3eaa93688879fb2900fda) commit and in [**9.4.52.v20230823**](https://github.com/eclipse/jetty.project/releases/tag/jetty-9.4.52.v20230823) by [this](https://github.com/eclipse/jetty.project/commit/5f48b4170f36b275e1576548b44bd5009feba669) commit.\n\nThe latest stable releases can be found [here](https://eclipse.dev/jetty/download.php).\n\n\n\n## Dependency tree\n- org.owasp.webgoat.lesson:xxe:v8.1.0:-maven\n    - com.github.tomakehurst:wiremock:2.8.0\n        - org.eclipse.jetty:jetty-webapp:9.4.24.v20191120\n            - org.eclipse.jetty:jetty-xml:9.4.24.v20191120\n\n\n## References\n* Common Weakness Enumeration: [CWE-287](https://cwe.mitre.org/data/definitions/287.html)\n\n","text":"Eclipse Jetty contains an improper authentication vulnerability. This could allow an authenticated attacker to bypass authentication after it has been rejected or revoked by the `LoginService` and make a request as if authenticated.\n\n**Note:** The vendor has stated that this issue impacts usages of the `jetty-openid` which have configured a nested `LoginService` and where that `LoginService` is capable of rejecting previously authenticated users."},"properties":{"security-severity":"3.8","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-287"]},"defaultConfiguration":{"level":"note"}},{"id":"CVE-2021-34428 jetty-xml 9.4.24.v20191120: wiremock 2.8.0: org.eclipse.jetty","shortDescription":{"text":"Transitive Dependency: jetty-xml 9.4.24.v20191120 from wiremock 2.8.0 (CVE-2021-34428)"},"fullDescription":{"text":"Eclipse Jetty is vulnerable to insufficient session expiry. This may result in sessions used on a shared computer persisting for longer than intended."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| jetty-xml 9.4.24.v20191120  | 9.4.53.20231009  | 12.0.5 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/ee93672f-853c-4083-a5e8-0d5ab21e8bf9?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=d8221aaa-7d55-4b5a-b3e0-2b5cba26ce60)\n\n\n## Description\nEclipse Jetty is vulnerable to insufficient session expiry. This may result in sessions used on a shared computer persisting for longer than intended.\n\n## Vulnerabilities(BDSA,CVE)\n:large_blue_circle: [CVE-2021-34428](https://openhub.net/vulnerabilities/bdsa/CVE-2021-34428) - Insufficient Session Expiration\n\n\n\n## Solution\nFixed in:\n* [**9.4.41.v20210516**](https://github.com/eclipse/jetty.project/releases/tag/jetty-9.4.41.v20210516) by [this](https://github.com/eclipse/jetty.project/commit/087f486b4461746b4ded45833887b3ccb136ee85) commit, \n* [**10.0.3**](https://github.com/eclipse/jetty.project/releases/tag/jetty-10.0.3) by [this](https://github.com/eclipse/jetty.project/commit/cd6462a6252d083b3c9ea2684aab0b4c9669ed19) commit, \n* [**11.0.3**](https://github.com/eclipse/jetty.project/releases/tag/jetty-11.0.3) by [this](https://github.com/eclipse/jetty.project/commit/cd6462a6252d083b3c9ea2684aab0b4c9669ed19) commit.\n\nThe latest stable releases are available [here](https://github.com/eclipse/jetty.project/releases).\n\n## Workaround\nThe vendor has [stated](https://github.com/eclipse/jetty.project/security/advisories/GHSA-m6cp-vxjx-65j6) that a workaround is to ensure that the application catches all Throwables within their `SessionListener#sessionDestroyed()` implementations.\n\n## Dependency tree\n- org.owasp.webgoat.lesson:xxe:v8.1.0:-maven\n    - com.github.tomakehurst:wiremock:2.8.0\n        - org.eclipse.jetty:jetty-webapp:9.4.24.v20191120\n            - org.eclipse.jetty:jetty-xml:9.4.24.v20191120\n\n\n## References\n* Common Weakness Enumeration: [CWE-613](https://cwe.mitre.org/data/definitions/613.html)\n\n","text":"Eclipse Jetty is vulnerable to insufficient session expiry. This may result in sessions used on a shared computer persisting for longer than intended."},"properties":{"security-severity":"3.8","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-613"]},"defaultConfiguration":{"level":"note"}},{"id":"CVE-2022-2047 jetty-xml 9.4.24.v20191120: wiremock 2.8.0: org.eclipse.jetty","shortDescription":{"text":"Transitive Dependency: jetty-xml 9.4.24.v20191120 from wiremock 2.8.0 (CVE-2022-2047)"},"fullDescription":{"text":"Eclipse Jetty does not correctly handle invalid authority segments of HTTP URIs. An authenticated attacker could exploit this flaw by passing an invalid URI that contains an improper authority with no host so that it is interpreted as one with a host."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| jetty-xml 9.4.24.v20191120  | 9.4.53.20231009  | 12.0.5 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/ee93672f-853c-4083-a5e8-0d5ab21e8bf9?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=d8221aaa-7d55-4b5a-b3e0-2b5cba26ce60)\n\n\n## Description\nEclipse Jetty does not correctly handle invalid authority segments of HTTP URIs. An authenticated attacker could exploit this flaw by passing an invalid URI that contains an improper authority with no host so that it is interpreted as one with a host.\n\n## Vulnerabilities(BDSA,CVE)\n:large_blue_circle: [CVE-2022-2047](https://openhub.net/vulnerabilities/bdsa/CVE-2022-2047) - Weak Input Validation\n\n\n\n## Solution\nFixed in versions:\n* [**9.4.47**](https://github.com/eclipse/jetty.project/releases/tag/jetty-9.4.47.v20220610) by [this](https://github.com/eclipse/jetty.project/commit/4ca8afbbd667c19a084d5ff14a4f08eb7049d1c7) commit.\n* [**10.0.10**](https://github.com/eclipse/jetty.project/releases/tag/jetty-10.0.10) and [**11.0.10**](https://github.com/eclipse/jetty.project/releases/tag/jetty-11.0.10) by [this](https://github.com/eclipse/jetty.project/commit/d1e64f469362bb9371d530cccded5ecb13fa1cb5) commit.\n\nThe latest stable releases can be found [here](https://github.com/eclipse/jetty.project/releases).\n\n\n\n## Dependency tree\n- org.owasp.webgoat.lesson:xxe:v8.1.0:-maven\n    - com.github.tomakehurst:wiremock:2.8.0\n        - org.eclipse.jetty:jetty-webapp:9.4.24.v20191120\n            - org.eclipse.jetty:jetty-xml:9.4.24.v20191120\n\n\n## References\n* Common Weakness Enumeration: [CWE-20](https://cwe.mitre.org/data/definitions/20.html)\n\n","text":"Eclipse Jetty does not correctly handle invalid authority segments of HTTP URIs. An authenticated attacker could exploit this flaw by passing an invalid URI that contains an improper authority with no host so that it is interpreted as one with a host."},"properties":{"security-severity":"3.8","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-20"]},"defaultConfiguration":{"level":"note"}},{"id":"BDSA-2018-1836 ant 1.6.2: ant","shortDescription":{"text":"Direct Dependency: ant 1.6.2 (BDSA-2018-1836)"},"fullDescription":{"text":"Apache ant is vulnerable to an arbitrary file write vulnerability via a directory traversal. An attacker could exploit this vulnerability by supplying the component with a maliciously crafted archive that, when unpacked, would cause an arbitrary file to be written to the file system."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| ant 1.6.2  | 1.6.5  | 1.6.5 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/7cbbb5f6-39d6-4416-ad7f-916916aa399d?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=2d89e734-2ee5-401d-9f6d-adafa1452cf2)\n\n\n## Description\nApache ant is vulnerable to an arbitrary file write vulnerability via a directory traversal. An attacker could exploit this vulnerability by supplying the component with a maliciously crafted archive that, when unpacked, would cause an arbitrary file to be written to the file system.\n\n## Vulnerabilities(BDSA,CVE)\n:orange_circle: [BDSA-2018-1836](https://openhub.net/vulnerabilities/bdsa/BDSA-2018-1836) - Directory Traversal\n\n\n\n## Solution\nFixed by [this](https://github.com/apache/ant/commit/e56e54565804991c62ec76dad385d2bdda8972a7#diff-32b057b8e95fa2b3f7d644552643010aR11) commit in.\n* **[1.9.12](https://github.com/apache/ant/releases/tag/rel%2F1.9.12)**\n* **[1.10.4](https://github.com/apache/ant/releases/tag/rel%2F1.10.4)**\n\n\n\n**Note:** To prevent this attack it is required to set `allowFilesToEscapeDest` to false as well as updating the component.\n\n\n\n\n\n## References\n* Common Weakness Enumeration: [CWE-22](https://cwe.mitre.org/data/definitions/22.html)\n\n","text":"Apache ant is vulnerable to an arbitrary file write vulnerability via a directory traversal. An attacker could exploit this vulnerability by supplying the component with a maliciously crafted archive that, when unpacked, would cause an arbitrary file to be written to the file system."},"properties":{"security-severity":"8.9","tags":["security","open_source_analysis","direct_dependency","patch_available","external/cwe/cwe-22"]},"defaultConfiguration":{"level":"error"}},{"id":"BDSA-2012-0078 ant 1.6.2: ant","shortDescription":{"text":"Direct Dependency: ant 1.6.2 (BDSA-2012-0078)"},"fullDescription":{"text":"Apache Common Compress and Apache Ant are vulnerable to denial-of-service (DoS) conditions due to the potential worst-case performance of the `bzip2` compressing streams.\n\nAn attacker could supply a crafted input to the Common Compress or Ant `bzip2` tasks to cause a substantial amount of processing time to be used up processing the task."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| ant 1.6.2  | 1.6.5  | 1.6.5 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/7cbbb5f6-39d6-4416-ad7f-916916aa399d?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=2d89e734-2ee5-401d-9f6d-adafa1452cf2)\n\n\n## Description\nApache Common Compress and Apache Ant are vulnerable to denial-of-service (DoS) conditions due to the potential worst-case performance of the `bzip2` compressing streams.\n\nAn attacker could supply a crafted input to the Common Compress or Ant `bzip2` tasks to cause a substantial amount of processing time to be used up processing the task.\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [BDSA-2012-0078](https://openhub.net/vulnerabilities/bdsa/BDSA-2012-0078) - Uncontrolled Resource Consumption\n\n\n\n## Solution\nFixed in Commons Compress version [**1.4.1**](https://github.com/apache/commons-compress/releases/tag/rel%2F1.4.1) by the following commits:\n* [Commit 1](https://github.com/apache/commons-compress/commit/b06f7b41c936ef1a79589d16ea5c1d8b93f71f66)\n* [Commit 2](https://github.com/apache/commons-compress/commit/6e95697e783767f3549f00d7d2e1b002eac4a3d4)\n* [Commit 3](https://github.com/apache/commons-compress/commit/1ce57d976c4f25fe99edcadf079840c278f3cb84)\n* [Commit 4](https://github.com/apache/commons-compress/commit/020c03d8ef579e80511023fb46ece30e9c3dd27d)\n* [Commit 5](https://github.com/apache/commons-compress/commit/ea31005111f0abede7e43e4ba0012e62e0808b22)\n* [Commit 6](https://github.com/apache/commons-compress/commit/cca0e6e5341aacddefd4c4d36cef7cbdbc2a8777)\n* [Commit 7](https://github.com/apache/commons-compress/commit/fdd7459bc5470e90024dbe762249166481cce769)\n* [Commit 8](https://github.com/apache/commons-compress/commit/0600296ab8f8a0bbdfedd483f51b38005eb8e34e)\n* [Commit 9](https://github.com/apache/commons-compress/commit/2ab2fcb356753927afaa731b9d2dcc47d3083408)\n* [Commit 10](https://github.com/apache/commons-compress/commit/6ced422bf5eca3aac05396367bafb33ec21bf74e)\n* [Commit 11](https://github.com/apache/commons-compress/commit/654222e628097763ee6ca561ae77be5c06666173)\n* [Commit 12](https://github.com/apache/commons-compress/commit/8f702469cbf4c451b6dea349290bc4af0f6f76c7)\n\nFixed by [this](https://github.com/apache/ant/commit/08284bc7aa7d066544b30974231240c9b73597eb) commit and [this](https://github.com/apache/ant/commit/8f2b4c5f4f8a977c4b07393e3156b1c02d1085fc) commit in the **master** branch of Ant. These fixes were applied in Ant version [**1.8.4**](https://github.com/apache/ant/tree/rel/1.8.4) by [this](https://github.com/apache/ant/commit/eb9c33f406f31e3705a963e051ff5004dbe8f0cd) commit.\n\nThe latest stable releases of Commons Compress are available [here](https://commons.apache.org/proper/commons-compress/download_compress.cgi), and the latest stable releases of Ant are available [here](https://ant.apache.org/).\n\n\n\n\n\n## References\n* Common Weakness Enumeration: [CWE-400](https://cwe.mitre.org/data/definitions/400.html)\n\n","text":"Apache Common Compress and Apache Ant are vulnerable to denial-of-service (DoS) conditions due to the potential worst-case performance of the `bzip2` compressing streams.\n\nAn attacker could supply a crafted input to the Common Compress or Ant `bzip2` tasks to cause a substantial amount of processing time to be used up processing the task."},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","direct_dependency","patch_available","external/cwe/cwe-400"]},"defaultConfiguration":{"level":"warning"}},{"id":"CVE-2020-1945 ant 1.6.2: ant","shortDescription":{"text":"Direct Dependency: ant 1.6.2 (CVE-2020-1945)"},"fullDescription":{"text":"Apache Ant is vulnerable to information disclosure due to the usage of a default temporary directory for several tasks. Some tasks may also allow the integrity of a build to be damaged."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| ant 1.6.2  | 1.6.5  | 1.6.5 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/7cbbb5f6-39d6-4416-ad7f-916916aa399d?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=2d89e734-2ee5-401d-9f6d-adafa1452cf2)\n\n\n## Description\nApache Ant is vulnerable to information disclosure due to the usage of a default temporary directory for several tasks. Some tasks may also allow the integrity of a build to be damaged.\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [CVE-2020-1945](https://openhub.net/vulnerabilities/bdsa/CVE-2020-1945) - Sensitive Data Exposure\n\n\n\n## Solution\nFixed in [**1.10.9-rc1**](https://github.com/apache/ant/releases/tag/ANT_1.10.9_RC1) by [this](https://github.com/apache/ant/commit/87ac51d3c22bcf7cfd0dc07cb0bd04a496e0d428) commit.\n\n## Workaround\nSteps were added to vulnerable versions to work around the issue. \n\nIn [**1.9.15-rc1**](https://github.com/apache/ant/releases/tag/rel%2F1.9.15) and [**1.10.8-rc1**](https://github.com/apache/ant/releases/tag/ANT_1.10.8_RC1), the vendor has added [this](https://github.com/apache/ant/commit/9c1f4d905da59bf446570ac28df5b68a37281f35) commit and [this](https://github.com/apache/ant/commit/926f339ea30362bec8e53bf5924ce803938163b7) commit. \n\nThe changes introduce the `ant.tmpdir` property which holds the safe directory path for temporary files. It has to be set by the user. The directory itself should also be set up by the user since Ant may not have the correct permissions to do it automatically.\n\nIn [**1.10.8-rc1**](https://github.com/apache/ant/releases/tag/ANT_1.10.8_RC1), [this](https://github.com/apache/ant/commit/a8645a151bc706259fb1789ef587d05482d98612) commit was also added. It attempts to set secure temporary file permissions, but does not protect the directory. \n\nTherefore it is strongly recommended that users set up a private secure temporary directory with appropriate permissions.\n\nThe official mitigation for versions from **1.1** to **1.9.14** and **1.10.0** to **1.10.7** is setting the `java.io.tmpdir` system property to point to a directory only readable and writable by the current user prior to running Ant.\n\nVersions **1.9.15** and **1.10.8** can be trusted to use the Ant property `ant.tmpfile`, but the vendor still highly recommends using a safer private temporary directory instead.\n\n\n\n## References\n* Common Weakness Enumeration: [CWE-200](https://cwe.mitre.org/data/definitions/200.html)\n* Common Weakness Enumeration: [CWE-829](https://cwe.mitre.org/data/definitions/829.html)\n\n","text":"Apache Ant is vulnerable to information disclosure due to the usage of a default temporary directory for several tasks. Some tasks may also allow the integrity of a build to be damaged."},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","direct_dependency","patch_available","external/cwe/cwe-200","external/cwe/cwe-829"]},"defaultConfiguration":{"level":"warning"}},{"id":"BDSA-2020-2577 ant 1.6.2: ant","shortDescription":{"text":"Direct Dependency: ant 1.6.2 (BDSA-2020-2577)"},"fullDescription":{"text":"Apache Ant is vulnerable to information disclosure due to the usage of a default temporary directory for several tasks. Some tasks may also allow the integrity of a build to be damaged."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| ant 1.6.2  | 1.6.5  | 1.6.5 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/7cbbb5f6-39d6-4416-ad7f-916916aa399d?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=2d89e734-2ee5-401d-9f6d-adafa1452cf2)\n\n\n## Description\nApache Ant is vulnerable to information disclosure due to the usage of a default temporary directory for several tasks. Some tasks may also allow the integrity of a build to be damaged.\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [BDSA-2020-2577](https://openhub.net/vulnerabilities/bdsa/BDSA-2020-2577) - Sensitive Data Exposure\n\n\n\n## Solution\nFixed in [**ANT_1.10.9_RC1**](https://github.com/apache/ant/releases/tag/ANT_1.10.9_RC1) by [this](https://github.com/apache/ant/commit/87ac51d3c22bcf7cfd0dc07cb0bd04a496e0d428) commit and [this](http://link-to-the-commit.com) commit.\n\n## Workaround\n**Note:** Per the vendor, The best mitigation still is to make Ant use a directory that is only readable and writable by the current user.\n\nThe official mitigation for versions from **1.1** to **1.9.14** and **1.10.0** to **1.10.7** is setting the `java.io.tmpdir` system property to point to a directory only readable and writable by the current user prior to running Ant.\n\nVersions **1.9.15** and **1.10.8** can be trusted to use the Ant property `ant.tmpfile`, but the vendor still highly recommends using a safer private temporary directory instead.\n\nAnt **1.10.9** will also try to create a temporary directory only accessible by the current user if neither of the properties above is set but may fail to create one if the underlying filesystem doesn't allow it.\n\nExplicitly setting up a directory to use and set the respective property is the only mitigation that will work on every platform.\n\n\n\n## References\n* Common Weakness Enumeration: [CWE-200](https://cwe.mitre.org/data/definitions/200.html)\n* Common Weakness Enumeration: [CWE-829](https://cwe.mitre.org/data/definitions/829.html)\n\n","text":"Apache Ant is vulnerable to information disclosure due to the usage of a default temporary directory for several tasks. Some tasks may also allow the integrity of a build to be damaged."},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","direct_dependency","patch_available","external/cwe/cwe-200","external/cwe/cwe-829"]},"defaultConfiguration":{"level":"warning"}},{"id":"BDSA-2021-2083 ant 1.6.2: ant","shortDescription":{"text":"Direct Dependency: ant 1.6.2 (BDSA-2021-2083)"},"fullDescription":{"text":"Apache Ant is vulnerable to an out of memory error via a crafted `TAR` archive. An attacker could exploit this in order to cause as denial-of-service (DoS) condition.\n\n**Note:** Per the Vendor, \"Versions prior to 1.9.0 are not affected when reading tar archives.\"."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| ant 1.6.2  | 1.6.5  | 1.6.5 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/7cbbb5f6-39d6-4416-ad7f-916916aa399d?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=2d89e734-2ee5-401d-9f6d-adafa1452cf2)\n\n\n## Description\nApache Ant is vulnerable to an out of memory error via a crafted `TAR` archive. An attacker could exploit this in order to cause as denial-of-service (DoS) condition.\n\n**Note:** Per the Vendor, \"Versions prior to 1.9.0 are not affected when reading tar archives.\".\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [BDSA-2021-2083](https://openhub.net/vulnerabilities/bdsa/BDSA-2021-2083) - Uncontrolled Resource Consumption\n\n\n\n## Solution\nFixed in [**1.9.16-rc1**](https://github.com/apache/ant/releases/tag/ANT_1.9.16_RC1) and [**1.10.11-rc1**](https://github.com/apache/ant/releases/tag/ANT_1.10.11_RC1) by [this](https://github.com/apache/ant/commit/6594a2d66f7f060dafcbbf094dd60676db19a842) commit.\n\nThe latest stable releases are available [here](https://github.com/apache/ant/releases).\n\n\n\n\n\n## References\n* Common Weakness Enumeration: [CWE-400](https://cwe.mitre.org/data/definitions/400.html)\n\n","text":"Apache Ant is vulnerable to an out of memory error via a crafted `TAR` archive. An attacker could exploit this in order to cause as denial-of-service (DoS) condition.\n\n**Note:** Per the Vendor, \"Versions prior to 1.9.0 are not affected when reading tar archives.\"."},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","direct_dependency","patch_available","external/cwe/cwe-400"]},"defaultConfiguration":{"level":"warning"}},{"id":"BDSA-2021-2085 ant 1.6.2: ant","shortDescription":{"text":"Direct Dependency: ant 1.6.2 (BDSA-2021-2085)"},"fullDescription":{"text":"Apache Ant is vulnerable to an out of memory error via a crafted `ZIP` archive. An attacker could exploit this in order to cause as denial-of-service (DoS) condition."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| ant 1.6.2  | 1.6.5  | 1.6.5 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/7cbbb5f6-39d6-4416-ad7f-916916aa399d?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=2d89e734-2ee5-401d-9f6d-adafa1452cf2)\n\n\n## Description\nApache Ant is vulnerable to an out of memory error via a crafted `ZIP` archive. An attacker could exploit this in order to cause as denial-of-service (DoS) condition.\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [BDSA-2021-2085](https://openhub.net/vulnerabilities/bdsa/BDSA-2021-2085) - Uncontrolled Resource Consumption\n\n\n\n## Solution\nFixed in [**1.9.16-rc1**](https://github.com/apache/ant/releases/tag/ANT_1.9.16_RC1) and [**1.10.11-rc1**](https://github.com/apache/ant/releases/tag/ANT_1.10.11_RC1) by [this](https://github.com/apache/ant/commit/6594a2d66f7f060dafcbbf094dd60676db19a842) commit.\n\nThe latest stable releases are available [here](https://github.com/apache/ant/releases).\n\n\n\n\n\n## References\n* Common Weakness Enumeration: [CWE-400](https://cwe.mitre.org/data/definitions/400.html)\n\n","text":"Apache Ant is vulnerable to an out of memory error via a crafted `ZIP` archive. An attacker could exploit this in order to cause as denial-of-service (DoS) condition."},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","direct_dependency","patch_available","external/cwe/cwe-400"]},"defaultConfiguration":{"level":"warning"}},{"id":"CVE-2021-29425 commons-io 2.6: commons-io","shortDescription":{"text":"Direct Dependency: commons-io 2.6 (CVE-2021-29425)"},"fullDescription":{"text":"Apache Commons IO contains a path traversal vulnerability. Successfully exploiting this could allow an attacker access to files they do not have permission to view."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| commons-io 2.6  | 2.15.1  | 20030203.000550 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/74dadf96-5c26-4c92-bfe2-b84ac810b505?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=96dc9f7b-73e3-4dc2-b0bb-b6bba56b535d)\n\n\n## Description\nApache Commons IO contains a path traversal vulnerability. Successfully exploiting this could allow an attacker access to files they do not have permission to view.\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [CVE-2021-29425](https://openhub.net/vulnerabilities/bdsa/CVE-2021-29425) - Directory Traversal\n\n\n\n## Solution\nFixed in [**2.7-RC1**](https://github.com/apache/commons-io/releases/tag/commons-io-2.7-RC1) by [this](https://github.com/apache/commons-io/commit/2736b6fe0b3fa22ec8e2b4184897ecadb021fc78) commit.\n\nThe latest stable releases are available [here](https://commons.apache.org/proper/commons-io/).\n\n## Workaround\nThe vendor has [stated](https://lists.apache.org/thread.html/rc359823b5500e9a9a2572678ddb8e01d3505a7ffcadfa8d13b8780ab%40%3Cuser.commons.apache.org%3E) that a possible workaround would be not passing any unsafe input to `FileNameUtils.normalize`.\n\n\n\n## References\n* Common Weakness Enumeration: [CWE-22](https://cwe.mitre.org/data/definitions/22.html)\n\n","text":"Apache Commons IO contains a path traversal vulnerability. Successfully exploiting this could allow an attacker access to files they do not have permission to view."},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","direct_dependency","patch_available","external/cwe/cwe-22"]},"defaultConfiguration":{"level":"warning"}},{"id":"CVE-2023-20873 spring-boot-actuator-autoconfigure 2.2.2.RELEASE: spring-boot-starter-actuator 2.2.2.RELEASE: org.springframework.boot","shortDescription":{"text":"Transitive Dependency: spring-boot-actuator-autoconfigure 2.2.2.RELEASE from spring-boot-starter-actuator 2.2.2.RELEASE (CVE-2023-20873)"},"fullDescription":{"text":"In Spring Boot versions 3.0.0 - 3.0.5, 2.7.0 - 2.7.10, and older unsupported versions, an application that is deployed to Cloud Foundry could be susceptible to a security bypass. Users of affected versions should apply the following mitigation: 3.0.x users should upgrade to 3.0.6+. 2.7.x users should upgrade to 2.7.11+. Users of older, unsupported versions should upgrade to 3.0.6+ or 2.7.11+."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| spring-boot-actuator-autoconfigure 2.2.2.RELEASE  | 2.7.18  | 3.2.1 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/830af68f-53af-41c2-8705-7dba18e5a609?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=de1d07dd-074c-463c-99b8-3e1f8dee8cae)\n\n\n## Description\nIn Spring Boot versions 3.0.0 - 3.0.5, 2.7.0 - 2.7.10, and older unsupported versions, an application that is deployed to Cloud Foundry could be susceptible to a security bypass. Users of affected versions should apply the following mitigation: 3.0.x users should upgrade to 3.0.6+. 2.7.x users should upgrade to 2.7.11+. Users of older, unsupported versions should upgrade to 3.0.6+ or 2.7.11+.\n\n## Vulnerabilities(BDSA,CVE)\n:red_circle: [CVE-2023-20873](https://openhub.net/vulnerabilities/bdsa/CVE-2023-20873) - Third-party component usage\n\n\n\n\n\n\n\n## Dependency tree\n- org.owasp.webgoat:webgoat-container:v8.1.0:-maven\n    - org.springframework.boot:spring-boot-starter-actuator:2.2.2.RELEASE\n        - org.springframework.boot:spring-boot-actuator-autoconfigure:2.2.2.RELEASE\n\n\n\n","text":"In Spring Boot versions 3.0.0 - 3.0.5, 2.7.0 - 2.7.10, and older unsupported versions, an application that is deployed to Cloud Foundry could be susceptible to a security bypass. Users of affected versions should apply the following mitigation: 3.0.x users should upgrade to 3.0.6+. 2.7.x users should upgrade to 2.7.11+. Users of older, unsupported versions should upgrade to 3.0.6+ or 2.7.11+."},"properties":{"security-severity":"9.1","tags":["security","open_source_analysis","transitive_dependency","patch_available"]},"defaultConfiguration":{"level":"error"}},{"id":"CVE-2020-10683 dom4j 2.1.1: spring-boot-starter-data-jpa 2.2.2.RELEASE: org.dom4j","shortDescription":{"text":"Transitive Dependency: dom4j 2.1.1 from spring-boot-starter-data-jpa 2.2.2.RELEASE (CVE-2020-10683)"},"fullDescription":{"text":"Dom4j is vulnerable to XML external entities (XXE) attacks.  This is due to the XML parser expanding XML entities by default.  A remote attacker that is able to supply input to Dom4j may be able to send crafted XML input that can be used to obtain file, upload content, or cause an impact on the availability of a system."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| dom4j 2.1.1  | 2.1.4  | 2.1.4 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/0ac10e18-4f29-404f-a13d-8a605200b64b?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=50bca935-34bc-4929-b6f0-036189498786)\n\n\n## Description\nDom4j is vulnerable to XML external entities (XXE) attacks.  This is due to the XML parser expanding XML entities by default.  A remote attacker that is able to supply input to Dom4j may be able to send crafted XML input that can be used to obtain file, upload content, or cause an impact on the availability of a system.\n\n## Vulnerabilities(BDSA,CVE)\n:orange_circle: [CVE-2020-10683](https://openhub.net/vulnerabilities/bdsa/CVE-2020-10683) - XML External Entity (XXE) Injection\n\n\n\n## Solution\nFixed in versions [**2.0.3**](https://github.com/dom4j/dom4j/releases/tag/version-2.0.3) and [**2.1.2**](https://github.com/dom4j/dom4j/releases/tag/version-2.1.2) by [this](https://github.com/dom4j/dom4j/commit/a8228522a99a02146106672a34c104adbda5c658) commit.\n\n\n\n## Dependency tree\n- org.owasp.webgoat:webgoat-container:v8.1.0:-maven\n    - org.springframework.boot:spring-boot-starter-data-jpa:2.2.2.RELEASE\n        - org.hibernate:hibernate-core:5.4.9.Final\n            - org.dom4j:dom4j:2.1.1\n\n\n## References\n* Common Weakness Enumeration: [CWE-611](https://cwe.mitre.org/data/definitions/611.html)\n\n","text":"Dom4j is vulnerable to XML external entities (XXE) attacks.  This is due to the XML parser expanding XML entities by default.  A remote attacker that is able to supply input to Dom4j may be able to send crafted XML input that can be used to obtain file, upload content, or cause an impact on the availability of a system."},"properties":{"security-severity":"8.9","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-611"]},"defaultConfiguration":{"level":"error"}},{"id":"BDSA-2021-3731 spring-boot-starter-security 2.2.2.RELEASE: org.springframework.boot","shortDescription":{"text":"Direct Dependency: spring-boot-starter-security 2.2.2.RELEASE (BDSA-2021-3731)"},"fullDescription":{"text":"Apache Log4j, as used in many popular services, is vulnerable to improperly allowing lightweight directory access protocol (LDAP) access via Java naming and directory interface (JNDI). A remote attacker able to supply the end application with specially crafted input that is then processed by the Log4j subcomponent could cause the execution of arbitrary Java code.\n\n**Note** \n\n- log4j-api packages by themselves do not contain the vulnerable functionality and are therefore unaffected. log4j-core packages and the upstream overarching source repository are affected.\n\n- A previously suggested mitigation of setting environment variable `LOG4J_FORMAT_MSG_NO_LOOKUPS=true` is not recommended. This mitigation has been proven inadequate against this vulnerability. \n\n- This vulnerability is partially fixed in [**2.15.0-rc2**](https://github.com/apache/logging-log4j2/releases/tag/log4j-2.15.0-rc2) by [this](https://github.com/apache/logging-log4j2/commit/001aaada7dab82c3c09cde5f8e14245dc9d8b454) commit and [this](https://github.com/apache/logging-log4j2/commit/bac0d8a35c7e354a0d3f706569116dff6c6bd658) commit. These fixes were deemed incomplete. See BDSA-2021-3779 (CVE-2021-45046) for more details.\n\nThis vulnerability is listed as exploitable by the Cybersecurity \u0026 Infrastructure Security Agency in their [Known Exploited Vulnerabilities Catalog](https://www.cisa.gov/known-exploited-vulnerabilities-catalog)."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| spring-boot-starter-security 2.2.2.RELEASE  | 2.7.18  | 3.2.1 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/48431389-4a2f-44ed-8597-55184ffc0e88?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=ee1b331d-05e0-4bd1-b6ef-727c3b98e324)\n\n\n## Description\nApache Log4j, as used in many popular services, is vulnerable to improperly allowing lightweight directory access protocol (LDAP) access via Java naming and directory interface (JNDI). A remote attacker able to supply the end application with specially crafted input that is then processed by the Log4j subcomponent could cause the execution of arbitrary Java code.\n\n**Note** \n\n- log4j-api packages by themselves do not contain the vulnerable functionality and are therefore unaffected. log4j-core packages and the upstream overarching source repository are affected.\n\n- A previously suggested mitigation of setting environment variable `LOG4J_FORMAT_MSG_NO_LOOKUPS=true` is not recommended. This mitigation has been proven inadequate against this vulnerability. \n\n- This vulnerability is partially fixed in [**2.15.0-rc2**](https://github.com/apache/logging-log4j2/releases/tag/log4j-2.15.0-rc2) by [this](https://github.com/apache/logging-log4j2/commit/001aaada7dab82c3c09cde5f8e14245dc9d8b454) commit and [this](https://github.com/apache/logging-log4j2/commit/bac0d8a35c7e354a0d3f706569116dff6c6bd658) commit. These fixes were deemed incomplete. See BDSA-2021-3779 (CVE-2021-45046) for more details.\n\nThis vulnerability is listed as exploitable by the Cybersecurity \u0026 Infrastructure Security Agency in their [Known Exploited Vulnerabilities Catalog](https://www.cisa.gov/known-exploited-vulnerabilities-catalog).\n\n## Vulnerabilities(BDSA,CVE)\n:red_circle: [BDSA-2021-3731](https://openhub.net/vulnerabilities/bdsa/BDSA-2021-3731) - Insecure Object Deserialization\n\n\n\n## Solution\nFixed in versions:\n*  [**2.16.0-rc1**](https://github.com/apache/logging-log4j2/releases/tag/log4j-2.16.0-rc1) by [this](https://github.com/apache/logging-log4j2/commit/27972043b76c9645476f561c5adc483dec6d3f5d) commit.\n*  [**2.12.2-rc1**](https://github.com/apache/logging-log4j2/releases/tag/log4j-2.12.2-rc1) by [this](https://github.com/apache/logging-log4j2/commit/f819c83804152cb6ed94cb408302e36b21b65053) commit and [this](https://github.com/apache/logging-log4j2/commit/70edc233343815d5efa043b54294a6fb065aa1c5) commit.\n*   [**2.3.1-rc1**](https://github.com/apache/logging-log4j2/releases/tag/log4j-2.3.1-rc1) by [this](https://github.com/apache/logging-log4j2/commit/be848dacbac6df30c4f32b2852e24446033ecf79) commit and [this](https://github.com/apache/logging-log4j2/commit/f6564bb993d547d0a371b75d869042c334bf57f0) commit.\n\nThe latest releases can be found [here](https://github.com/apache/logging-log4j2/tags).\n\nNOTE: It is recommended to upgrade to version  [**2.17.0**](https://downloads.apache.org/logging/log4j/2.17.0/). This recommendation is due to related vulnerabilities (BDSA-2021-3779, CVE-2021-45046) affecting the version that this vulnerability is fixed in.\n\n## Workaround\nThe vendor states that:\n\n\u003e This issue can be mitigated in prior releases (\u003c**2.16.0**) by removing the JndiLookup class from the classpath (example: `zip -q -d log4j-core-*.jar org/apache/logging/log4j/core/lookup/JndiLookup.class`).\n\n\n\n## References\n* Common Weakness Enumeration: [CWE-502](https://cwe.mitre.org/data/definitions/502.html)\n\n","text":"Apache Log4j, as used in many popular services, is vulnerable to improperly allowing lightweight directory access protocol (LDAP) access via Java naming and directory interface (JNDI). A remote attacker able to supply the end application with specially crafted input that is then processed by the Log4j subcomponent could cause the execution of arbitrary Java code.\n\n**Note** \n\n- log4j-api packages by themselves do not contain the vulnerable functionality and are therefore unaffected. log4j-core packages and the upstream overarching source repository are affected.\n\n- A previously suggested mitigation of setting environment variable `LOG4J_FORMAT_MSG_NO_LOOKUPS=true` is not recommended. This mitigation has been proven inadequate against this vulnerability. \n\n- This vulnerability is partially fixed in [**2.15.0-rc2**](https://github.com/apache/logging-log4j2/releases/tag/log4j-2.15.0-rc2) by [this](https://github.com/apache/logging-log4j2/commit/001aaada7dab82c3c09cde5f8e14245dc9d8b454) commit and [this](https://github.com/apache/logging-log4j2/commit/bac0d8a35c7e354a0d3f706569116dff6c6bd658) commit. These fixes were deemed incomplete. See BDSA-2021-3779 (CVE-2021-45046) for more details.\n\nThis vulnerability is listed as exploitable by the Cybersecurity \u0026 Infrastructure Security Agency in their [Known Exploited Vulnerabilities Catalog](https://www.cisa.gov/known-exploited-vulnerabilities-catalog)."},"properties":{"security-severity":"9.1","tags":["security","open_source_analysis","direct_dependency","patch_available","external/cwe/cwe-502"]},"defaultConfiguration":{"level":"error"}},{"id":"CVE-2022-22965 spring-boot-starter-security 2.2.2.RELEASE: org.springframework.boot","shortDescription":{"text":"Direct Dependency: spring-boot-starter-security 2.2.2.RELEASE (CVE-2022-22965)"},"fullDescription":{"text":"Spring Framework is vulnerable to a flaw in the access restrictions to the security sensitive `ClassLoader` property. The restrictions can be bypassed through alternative paths available with Java9 and later. An attacker can leverage this vulnerability to cause remote code execution (RCE).\n\n**Note** this issue exists because the restrictions that were introduced to prevent exploitation of BDSA-2010-0001 (CVE-2010-1622) can be bypassed on platforms where Java9 and later are in use.\n\nThis vulnerability is listed as exploitable by the Cybersecurity \u0026 Infrastructure Security Agency in their [Known Exploited Vulnerabilities Catalog](https://www.cisa.gov/known-exploited-vulnerabilities-catalog)."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| spring-boot-starter-security 2.2.2.RELEASE  | 2.7.18  | 3.2.1 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/48431389-4a2f-44ed-8597-55184ffc0e88?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=ee1b331d-05e0-4bd1-b6ef-727c3b98e324)\n\n\n## Description\nSpring Framework is vulnerable to a flaw in the access restrictions to the security sensitive `ClassLoader` property. The restrictions can be bypassed through alternative paths available with Java9 and later. An attacker can leverage this vulnerability to cause remote code execution (RCE).\n\n**Note** this issue exists because the restrictions that were introduced to prevent exploitation of BDSA-2010-0001 (CVE-2010-1622) can be bypassed on platforms where Java9 and later are in use.\n\nThis vulnerability is listed as exploitable by the Cybersecurity \u0026 Infrastructure Security Agency in their [Known Exploited Vulnerabilities Catalog](https://www.cisa.gov/known-exploited-vulnerabilities-catalog).\n\n## Vulnerabilities(BDSA,CVE)\n:red_circle: [CVE-2022-22965](https://openhub.net/vulnerabilities/bdsa/CVE-2022-22965) - Incomplete List of Disallowed Inputs\n\n\n\n## Solution\nFixed in [**5.3.18**](https://github.com/spring-projects/spring-framework/releases/tag/v5.3.18) by [this](https://github.com/spring-projects/spring-framework/commit/002546b3e4b8d791ea6acccb81eb3168f51abb15) commit and  [**5.2.20**](https://github.com/spring-projects/spring-framework/releases/tag/v5.2.20.RELEASE) by [this](https://github.com/spring-projects/spring-framework/commit/996f701a1916d10202c1d0d281f06ab1f2e1117e) commit .\n\nThe latest releases can be found [here](https://github.com/spring-projects/spring-framework/tags).\n\n## Workaround\nAn official workaround for the issue has been outlined [here](https://spring.io/blog/2022/03/31/spring-framework-rce-early-announcement).\n\n\n\n## References\n* Common Weakness Enumeration: [CWE-184](https://cwe.mitre.org/data/definitions/184.html)\n* Common Weakness Enumeration: [CWE-749](https://cwe.mitre.org/data/definitions/749.html)\n\n","text":"Spring Framework is vulnerable to a flaw in the access restrictions to the security sensitive `ClassLoader` property. The restrictions can be bypassed through alternative paths available with Java9 and later. An attacker can leverage this vulnerability to cause remote code execution (RCE).\n\n**Note** this issue exists because the restrictions that were introduced to prevent exploitation of BDSA-2010-0001 (CVE-2010-1622) can be bypassed on platforms where Java9 and later are in use.\n\nThis vulnerability is listed as exploitable by the Cybersecurity \u0026 Infrastructure Security Agency in their [Known Exploited Vulnerabilities Catalog](https://www.cisa.gov/known-exploited-vulnerabilities-catalog)."},"properties":{"security-severity":"9.1","tags":["security","open_source_analysis","direct_dependency","patch_available","external/cwe/cwe-184","external/cwe/cwe-749"]},"defaultConfiguration":{"level":"error"}},{"id":"CVE-2023-20873 spring-boot-starter-security 2.2.2.RELEASE: org.springframework.boot","shortDescription":{"text":"Direct Dependency: spring-boot-starter-security 2.2.2.RELEASE (CVE-2023-20873)"},"fullDescription":{"text":"Spring framework contains a security bypass vulnerability when `/**` is used as a pattern in Spring Security configuration with the `/cloudfoundryapplication/**` component. The potential for security bypass exists due to the mismatch in pattern matching between Spring Security and Cloud Foundry.\n\n**Note**: The vendor has stated in their [advisory](https://spring.io/security/cve-2023-20873) that this application is not vulnerable if any of the following is true:\n* The application is not deployed to Cloud Foundry.\n* You have disabled Cloud Foundry actuator endpoints with `management.cloudfoundry.enabled` set to `false`.\n* Your application does not have handler mappings that can handle requests to `/cloudfoundryapplication/**`."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| spring-boot-starter-security 2.2.2.RELEASE  | 2.7.18  | 3.2.1 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/48431389-4a2f-44ed-8597-55184ffc0e88?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=ee1b331d-05e0-4bd1-b6ef-727c3b98e324)\n\n\n## Description\nSpring framework contains a security bypass vulnerability when `/**` is used as a pattern in Spring Security configuration with the `/cloudfoundryapplication/**` component. The potential for security bypass exists due to the mismatch in pattern matching between Spring Security and Cloud Foundry.\n\n**Note**: The vendor has stated in their [advisory](https://spring.io/security/cve-2023-20873) that this application is not vulnerable if any of the following is true:\n* The application is not deployed to Cloud Foundry.\n* You have disabled Cloud Foundry actuator endpoints with `management.cloudfoundry.enabled` set to `false`.\n* Your application does not have handler mappings that can handle requests to `/cloudfoundryapplication/**`.\n\n## Vulnerabilities(BDSA,CVE)\n:orange_circle: [CVE-2023-20873](https://openhub.net/vulnerabilities/bdsa/CVE-2023-20873) - Improper Access Control\n\n\n\n## Solution\nFixed in [**3.1.0-RC1**](https://github.com/spring-projects/spring-boot/releases/tag/v3.1.0-RC1), [**3.0.6**](https://github.com/spring-projects/spring-boot/releases/tag/v3.0.6) and [**2.7.11**](https://github.com/spring-projects/spring-boot/releases/tag/v2.7.11)  by [this](https://github.com/spring-projects/spring-boot/commit/3522714c13b47af03bf42e7f2d5994af568cb1a7) commit.\n\nFixed in [**2.6.15**](https://github.com/spring-projects/spring-boot/releases/tag/v2.6.15) and [**2.5.15**](https://github.com/spring-projects/spring-boot/releases/tag/v2.5.15) by [this](https://github.com/spring-projects/spring-boot/commit/307f3c339912466e78fcdac648fff95a4edea573) commit.\n\nThe latest stable releases can be found [here](https://github.com/spring-projects/spring-boot/releases).\n\n## Workaround\nThe vendor has advised the following as a workaround:\n\u003eDisable Cloud Foundry actuator endpoints by setting `management.cloudfoundry.enabled` to `false`.\n\n\n\n## References\n* Common Weakness Enumeration: [CWE-284](https://cwe.mitre.org/data/definitions/284.html)\n* Common Weakness Enumeration: [CWE-923](https://cwe.mitre.org/data/definitions/923.html)\n\n","text":"Spring framework contains a security bypass vulnerability when `/**` is used as a pattern in Spring Security configuration with the `/cloudfoundryapplication/**` component. The potential for security bypass exists due to the mismatch in pattern matching between Spring Security and Cloud Foundry.\n\n**Note**: The vendor has stated in their [advisory](https://spring.io/security/cve-2023-20873) that this application is not vulnerable if any of the following is true:\n* The application is not deployed to Cloud Foundry.\n* You have disabled Cloud Foundry actuator endpoints with `management.cloudfoundry.enabled` set to `false`.\n* Your application does not have handler mappings that can handle requests to `/cloudfoundryapplication/**`."},"properties":{"security-severity":"8.9","tags":["security","open_source_analysis","direct_dependency","patch_available","external/cwe/cwe-284","external/cwe/cwe-923"]},"defaultConfiguration":{"level":"error"}},{"id":"BDSA-2021-3817 spring-boot-starter-security 2.2.2.RELEASE: org.springframework.boot","shortDescription":{"text":"Direct Dependency: spring-boot-starter-security 2.2.2.RELEASE (BDSA-2021-3817)"},"fullDescription":{"text":"Apache log4j is vulnerable to a denial-of-service (DoS) when uncontrolled recursion occurs through a self-referencing lookup.  An attacker can trigger a DoS with malicious input data that generates a recursive lookup  and consequent application crash.\n\nSuccessful attacks require the attacker to have access to Thread Context Map (MDC) input, and for log4j configured with non-default pattern layout with a Context Lookup.\n\nOnly the log4j-core JAR file is impacted by this vulnerability. Applications using only the log4j-api JAR file without the log4j-core JAR file are not impacted.\n\nApache Log4j is the only Logging Services subproject affected by this vulnerability. Other projects like Log4net  are not impacted."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| spring-boot-starter-security 2.2.2.RELEASE  | 2.7.18  | 3.2.1 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/48431389-4a2f-44ed-8597-55184ffc0e88?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=ee1b331d-05e0-4bd1-b6ef-727c3b98e324)\n\n\n## Description\nApache log4j is vulnerable to a denial-of-service (DoS) when uncontrolled recursion occurs through a self-referencing lookup.  An attacker can trigger a DoS with malicious input data that generates a recursive lookup  and consequent application crash.\n\nSuccessful attacks require the attacker to have access to Thread Context Map (MDC) input, and for log4j configured with non-default pattern layout with a Context Lookup.\n\nOnly the log4j-core JAR file is impacted by this vulnerability. Applications using only the log4j-api JAR file without the log4j-core JAR file are not impacted.\n\nApache Log4j is the only Logging Services subproject affected by this vulnerability. Other projects like Log4net  are not impacted.\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [BDSA-2021-3817](https://openhub.net/vulnerabilities/bdsa/BDSA-2021-3817) - Loop with Unreachable Exit Condition ('Infinite Loop')\n\n\n\n## Solution\nFixed in version [**2.17.0**](https://downloads.apache.org/logging/log4j/2.17.0/)  by [this](https://github.com/apache/logging-log4j2/commit/806023265f8c905b2dd1d81fd2458f64b2ea0b5e) commit.\n\nFixed in [**2.12.3-rc1**](https://github.com/apache/logging-log4j2/releases/tag/log4j-2.12.3-rc1) by [this](https://github.com/apache/logging-log4j2/commit/bf7e916df6335713fe2219c7b3b523fb509deabc) commit.\n\nFixed in [**2.3.1-rc1**](https://github.com/apache/logging-log4j2/releases/tag/log4j-2.3.1-rc1) by [this](https://github.com/apache/logging-log4j2/commit/ce6b78d082aae89089cb3ad25cdd46e9ec70a70b) commit.\n\n\nThe latest stable releases can be found [here](https://github.com/apache/logging-log4j2/releases).\n\n## Workaround\nThe vendor advises that  this vulnerability can can be mitigated through one of the following:\n\n* In PatternLayout in the logging configuration, replace Context Lookups like `${ctx:loginId}` or `$${ctx:loginId}` with Thread Context Map patterns `(%X, %mdc, or %MDC)`.\n\n* Alternatively,  remove references in the configuration to Context Lookups like `${ctx:loginId}` or `$${ctx:loginId}` where they originate from sources external to the application such as HTTP headers or user input.\n\n\n\n## References\n* Common Weakness Enumeration: [CWE-835](https://cwe.mitre.org/data/definitions/835.html)\n\n","text":"Apache log4j is vulnerable to a denial-of-service (DoS) when uncontrolled recursion occurs through a self-referencing lookup.  An attacker can trigger a DoS with malicious input data that generates a recursive lookup  and consequent application crash.\n\nSuccessful attacks require the attacker to have access to Thread Context Map (MDC) input, and for log4j configured with non-default pattern layout with a Context Lookup.\n\nOnly the log4j-core JAR file is impacted by this vulnerability. Applications using only the log4j-api JAR file without the log4j-core JAR file are not impacted.\n\nApache Log4j is the only Logging Services subproject affected by this vulnerability. Other projects like Log4net  are not impacted."},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","direct_dependency","patch_available","external/cwe/cwe-835"]},"defaultConfiguration":{"level":"warning"}},{"id":"BDSA-2021-3887 spring-boot-starter-security 2.2.2.RELEASE: org.springframework.boot","shortDescription":{"text":"Direct Dependency: spring-boot-starter-security 2.2.2.RELEASE (BDSA-2021-3887)"},"fullDescription":{"text":"Apache Log4j contains a remote code execution (RCE) vulnerability. This allows an attacker that has permissions to modify the logging configuration files to input a malicious JDBC Appender with a data source referencing a JDNI URI. This can then lead to RCE.\n\n**Note:** This vulnerability impacts log4j-core."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| spring-boot-starter-security 2.2.2.RELEASE  | 2.7.18  | 3.2.1 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/48431389-4a2f-44ed-8597-55184ffc0e88?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=ee1b331d-05e0-4bd1-b6ef-727c3b98e324)\n\n\n## Description\nApache Log4j contains a remote code execution (RCE) vulnerability. This allows an attacker that has permissions to modify the logging configuration files to input a malicious JDBC Appender with a data source referencing a JDNI URI. This can then lead to RCE.\n\n**Note:** This vulnerability impacts log4j-core.\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [BDSA-2021-3887](https://openhub.net/vulnerabilities/bdsa/BDSA-2021-3887) - Weak Input Validation\n\n\n\n## Solution\nFixed in versions:\n\n* [**2.3.2-rc1**](https://github.com/apache/logging-log4j2/releases/tag/log4j-2.3.2-rc1) by [this](https://github.com/apache/logging-log4j2/commit/ae4dc0c1a6389ae895f60451cd87e97e7b9d85c1) commit.\n* [**2.12.4-rc1**](https://github.com/apache/logging-log4j2/releases/tag/log4j-2.12.4-rc1) by [this](https://github.com/apache/logging-log4j2/commit/b3879958cb3b75eb16bf27e970538b6e4e130f1c) commit.\n* [**2.17.1-rc1**](https://github.com/apache/logging-log4j2/releases/tag/log4j-2.17.1-rc1) by [this](https://github.com/apache/logging-log4j2/commit/05db5f9527254632b59aed2a1d78a32c5ab74f16) commit.\n\nThe latest stable releases can be found [here](https://logging.apache.org/log4j/2.x/download.html).\n\n\n\n\n\n## References\n* Common Weakness Enumeration: [CWE-20](https://cwe.mitre.org/data/definitions/20.html)\n\n","text":"Apache Log4j contains a remote code execution (RCE) vulnerability. This allows an attacker that has permissions to modify the logging configuration files to input a malicious JDBC Appender with a data source referencing a JDNI URI. This can then lead to RCE.\n\n**Note:** This vulnerability impacts log4j-core."},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","direct_dependency","patch_available","external/cwe/cwe-20"]},"defaultConfiguration":{"level":"warning"}},{"id":"CVE-2022-27772 spring-boot-starter-security 2.2.2.RELEASE: org.springframework.boot","shortDescription":{"text":"Direct Dependency: spring-boot-starter-security 2.2.2.RELEASE (CVE-2022-27772)"},"fullDescription":{"text":"Spring Boot is vulnerable to privilege escalation due to a race condition which occurs during the creation of a temporary directory. A local attacker could create their own temporary directory by racing against Spring Boot and supply their own configuration files which would allow for the full takeover of the application."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| spring-boot-starter-security 2.2.2.RELEASE  | 2.7.18  | 3.2.1 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/48431389-4a2f-44ed-8597-55184ffc0e88?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=ee1b331d-05e0-4bd1-b6ef-727c3b98e324)\n\n\n## Description\nSpring Boot is vulnerable to privilege escalation due to a race condition which occurs during the creation of a temporary directory. A local attacker could create their own temporary directory by racing against Spring Boot and supply their own configuration files which would allow for the full takeover of the application.\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [CVE-2022-27772](https://openhub.net/vulnerabilities/bdsa/CVE-2022-27772) - Race Condition due to Improper Synchronization\n\n\n\n## Solution\nFixed in [**2.2.11**](https://github.com/spring-projects/spring-boot/releases/tag/v2.2.11.RELEASE) by [this](https://github.com/spring-projects/spring-boot/commit/667ccdae84822072f9ea1a27ed5c77964c71002d) commit.\n\nThe latest stable releases can be found [here](https://github.com/spring-projects/spring-boot/releases).\n\n## Workaround\nAccording to the [Github Security Advisory](https://github.com/JLLeitschuh/security-research/security/advisories/GHSA-cm59-pr5q-cw85), setting the `java.io.tmpdir` system environment variable to a directory that is exclusively owned by the executing user will fix this vulnerability for all operating systems.\n\n\n\n## References\n* Common Weakness Enumeration: [CWE-362](https://cwe.mitre.org/data/definitions/362.html)\n* Common Weakness Enumeration: [CWE-379](https://cwe.mitre.org/data/definitions/379.html)\n\n","text":"Spring Boot is vulnerable to privilege escalation due to a race condition which occurs during the creation of a temporary directory. A local attacker could create their own temporary directory by racing against Spring Boot and supply their own configuration files which would allow for the full takeover of the application."},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","direct_dependency","patch_available","external/cwe/cwe-362","external/cwe/cwe-379"]},"defaultConfiguration":{"level":"warning"}},{"id":"CVE-2023-20883 spring-boot-starter-security 2.2.2.RELEASE: org.springframework.boot","shortDescription":{"text":"Direct Dependency: spring-boot-starter-security 2.2.2.RELEASE (CVE-2023-20883)"},"fullDescription":{"text":"Spring Boot is vulnerable to denial-of-service (DoS) via the welcome page when used to serve an application behind a reverse proxy cache. This will cause users to continuously be served a 404 response, preventing standard application use.\n\n\n**Note:** Spring have provided the following guidance for vulnerable criteria. \nAn application is vulnerable if all of the following are true:\n\n- \"The application has Spring MVC auto-configuration enabled. This is the case by default if Spring MVC is on the classpath.\"\n- \"The application makes use of Spring Boot's welcome page support, either static or templated.\"\n- \"Your application is deployed behind a proxy which caches 404 responses.\"\n\nThe application is not vulnerable if any of the following are true:\n\n- \"Spring MVC auto-configuration is disabled. This is true if `WebMvcAutoConfiguration` is explicitly excluded, if Spring MVC is not on the classpath, or if `spring.main.web-application-type` is set to a value other than `SERVLET`.\"\n- \"The application does not use Spring Boot's welcome page support.\"\n- \"You do not have a proxy which caches 404 responses.\""},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| spring-boot-starter-security 2.2.2.RELEASE  | 2.7.18  | 3.2.1 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/48431389-4a2f-44ed-8597-55184ffc0e88?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=ee1b331d-05e0-4bd1-b6ef-727c3b98e324)\n\n\n## Description\nSpring Boot is vulnerable to denial-of-service (DoS) via the welcome page when used to serve an application behind a reverse proxy cache. This will cause users to continuously be served a 404 response, preventing standard application use.\n\n\n**Note:** Spring have provided the following guidance for vulnerable criteria. \nAn application is vulnerable if all of the following are true:\n\n- \"The application has Spring MVC auto-configuration enabled. This is the case by default if Spring MVC is on the classpath.\"\n- \"The application makes use of Spring Boot's welcome page support, either static or templated.\"\n- \"Your application is deployed behind a proxy which caches 404 responses.\"\n\nThe application is not vulnerable if any of the following are true:\n\n- \"Spring MVC auto-configuration is disabled. This is true if `WebMvcAutoConfiguration` is explicitly excluded, if Spring MVC is not on the classpath, or if `spring.main.web-application-type` is set to a value other than `SERVLET`.\"\n- \"The application does not use Spring Boot's welcome page support.\"\n- \"You do not have a proxy which caches 404 responses.\"\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [CVE-2023-20883](https://openhub.net/vulnerabilities/bdsa/CVE-2023-20883) - Insufficient Verification of Data Authenticity\n\n\n\n## Solution\nFixed in versions\n- [**2.5.15**](https://github.com/spring-projects/spring-boot/releases/tag/v2.5.15) by [this](https://github.com/spring-projects/spring-boot/commit/d7ff379fb8bb2c33319afeb45a343116b59e0ee2) commit,\n- [**2.6.15**](https://github.com/spring-projects/spring-boot/releases/tag/v2.6.15) by [this](https://github.com/spring-projects/spring-boot/commit/d7ff379fb8bb2c33319afeb45a343116b59e0ee2) commit,\n- [**2.7.12**](https://github.com/spring-projects/spring-boot/releases/tag/v2.7.12) by [this](https://github.com/spring-projects/spring-boot/commit/418dd1ba5bdad79b55a043000164bfcbda2acd78) commit,\n- [**3.0.7**](https://github.com/spring-projects/spring-boot/releases/tag/v3.0.7) by [this](https://github.com/spring-projects/spring-boot/commit/418dd1ba5bdad79b55a043000164bfcbda2acd78) commit,\n- [**3.1.0**](https://github.com/spring-projects/spring-boot/releases/tag/v3.1.0) by [this](https://github.com/spring-projects/spring-boot/commit/418dd1ba5bdad79b55a043000164bfcbda2acd78) commit.\n\nThe latest stable releases can be found [here](https://github.com/spring-projects/spring-boot/releases).\n\n## Workaround\nThe vendor has supplied the following workaround:\n\u003e \"configure the reverse proxy not to cache 404 responses and/or not to cache responses to requests to the root (`/`) of the application.\"\n\n\n\n## References\n* Common Weakness Enumeration: [CWE-345](https://cwe.mitre.org/data/definitions/345.html)\n\n","text":"Spring Boot is vulnerable to denial-of-service (DoS) via the welcome page when used to serve an application behind a reverse proxy cache. This will cause users to continuously be served a 404 response, preventing standard application use.\n\n\n**Note:** Spring have provided the following guidance for vulnerable criteria. \nAn application is vulnerable if all of the following are true:\n\n- \"The application has Spring MVC auto-configuration enabled. This is the case by default if Spring MVC is on the classpath.\"\n- \"The application makes use of Spring Boot's welcome page support, either static or templated.\"\n- \"Your application is deployed behind a proxy which caches 404 responses.\"\n\nThe application is not vulnerable if any of the following are true:\n\n- \"Spring MVC auto-configuration is disabled. This is true if `WebMvcAutoConfiguration` is explicitly excluded, if Spring MVC is not on the classpath, or if `spring.main.web-application-type` is set to a value other than `SERVLET`.\"\n- \"The application does not use Spring Boot's welcome page support.\"\n- \"You do not have a proxy which caches 404 responses.\""},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","direct_dependency","patch_available","external/cwe/cwe-345"]},"defaultConfiguration":{"level":"warning"}},{"id":"CVE-2023-34055 spring-boot-starter-security 2.2.2.RELEASE: org.springframework.boot","shortDescription":{"text":"Direct Dependency: spring-boot-starter-security 2.2.2.RELEASE (CVE-2023-34055)"},"fullDescription":{"text":"Spring Boot is vulnerable to denial-of-service (DoS). An unauthenticated user could trigger the vulnerability by providing specially crafted HTTP requests to a web metrics endpoint."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| spring-boot-starter-security 2.2.2.RELEASE  | 2.7.18  | 3.2.1 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/48431389-4a2f-44ed-8597-55184ffc0e88?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=ee1b331d-05e0-4bd1-b6ef-727c3b98e324)\n\n\n## Description\nSpring Boot is vulnerable to denial-of-service (DoS). An unauthenticated user could trigger the vulnerability by providing specially crafted HTTP requests to a web metrics endpoint.\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [CVE-2023-34055](https://openhub.net/vulnerabilities/bdsa/CVE-2023-34055) - Third-party component usage\n\n\n\n## Solution\nFixed in:\n* [**3.1.6**](https://github.com/spring-projects/spring-boot/releases/tag/v3.1.6)\n* [**3.0.13**](https://github.com/spring-projects/spring-boot/releases/tag/v3.0.13)\n* [**2.7.18**](https://github.com/spring-projects/spring-boot/releases/tag/v2.7.18)\n\nThe latest stable releases can be found [here](https://github.com/spring-projects/spring-boot/releases).\n\n## Workaround\nThe vendor notes the following:\n\u003e As a temporary workaround, Spring Boot users can choose to disable web metrics with the following property: `management.metrics.enable.http.server.requests=false`\n\n\n\n\n","text":"Spring Boot is vulnerable to denial-of-service (DoS). An unauthenticated user could trigger the vulnerability by providing specially crafted HTTP requests to a web metrics endpoint."},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","direct_dependency","patch_available"]},"defaultConfiguration":{"level":"warning"}},{"id":"BDSA-2022-3109 spring-security-web 5.2.1.RELEASE: spring-security-test 4.1.3.RELEASE: org.springframework.security","shortDescription":{"text":"Transitive Dependency: spring-security-web 5.2.1.RELEASE from spring-security-test 4.1.3.RELEASE (BDSA-2022-3109)"},"fullDescription":{"text":"Spring Security contains a flaw when dealing with OAuth2 access token empty scope list  responses. A remote attacker could leverage this to escalate their privileges under **all** the following conditions being met:\n\n* They act as the role of a Login Client (e.g. uses `http.oauth2Login()`).\n* They use one or more authorization rules with authorities mapped from authorized scopes (e.g. `anyRequest().hasAuthority(\"SCOPE_message.write\")`) in the client application.\n* An authorization server that responds with empty scopes list is registered (RFC 6749, Section 5.1).\n\n**Note:** The role of Resource Servers (`http.oauth2ResourceServer()`) and applications that do not map authorization rules from authorized scopes (eg. `anyRequest().hasAuthority(\"ROLE_USER\")`) cannot be exploited by this vulnerability."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| spring-security-web 5.2.1.RELEASE  | 5.8.9  | 6.2.1 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/bfe44ed0-0640-4faa-92fc-2c894ff23018?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=d80c013b-7862-4ea8-83e5-eb7b91623e0c)\n\n\n## Description\nSpring Security contains a flaw when dealing with OAuth2 access token empty scope list  responses. A remote attacker could leverage this to escalate their privileges under **all** the following conditions being met:\n\n* They act as the role of a Login Client (e.g. uses `http.oauth2Login()`).\n* They use one or more authorization rules with authorities mapped from authorized scopes (e.g. `anyRequest().hasAuthority(\"SCOPE_message.write\")`) in the client application.\n* An authorization server that responds with empty scopes list is registered (RFC 6749, Section 5.1).\n\n**Note:** The role of Resource Servers (`http.oauth2ResourceServer()`) and applications that do not map authorization rules from authorized scopes (eg. `anyRequest().hasAuthority(\"ROLE_USER\")`) cannot be exploited by this vulnerability.\n\n## Vulnerabilities(BDSA,CVE)\n:orange_circle: [BDSA-2022-3109](https://openhub.net/vulnerabilities/bdsa/BDSA-2022-3109) - Missing or Broken Authorization Mechanism\n\n\n\n## Solution\nFixed in versions [**5.7.5**](https://github.com/spring-projects/spring-security/releases/tag/5.7.5) and [**5.6.9**](https://github.com/spring-projects/spring-security/releases/tag/5.6.9) by [this](https://github.com/spring-projects/spring-security/commit/75004587a419a96d18909030b20c6b16b226ecbe) commit..\n\nThe latest releases can be found [here](https://github.com/spring-projects/spring-security/tags).\n\n\n\n## Dependency tree\n- org.owasp.webgoat.lesson:http-basics:v8.1.0:-maven\n    - org.springframework.security:spring-security-test:4.1.3.RELEASE\n        - org.springframework.security:spring-security-web:5.2.1.RELEASE\n\n\n## References\n* Common Weakness Enumeration: [CWE-285](https://cwe.mitre.org/data/definitions/285.html)\n\n","text":"Spring Security contains a flaw when dealing with OAuth2 access token empty scope list  responses. A remote attacker could leverage this to escalate their privileges under **all** the following conditions being met:\n\n* They act as the role of a Login Client (e.g. uses `http.oauth2Login()`).\n* They use one or more authorization rules with authorities mapped from authorized scopes (e.g. `anyRequest().hasAuthority(\"SCOPE_message.write\")`) in the client application.\n* An authorization server that responds with empty scopes list is registered (RFC 6749, Section 5.1).\n\n**Note:** The role of Resource Servers (`http.oauth2ResourceServer()`) and applications that do not map authorization rules from authorized scopes (eg. `anyRequest().hasAuthority(\"ROLE_USER\")`) cannot be exploited by this vulnerability."},"properties":{"security-severity":"8.9","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-285"]},"defaultConfiguration":{"level":"error"}},{"id":"BDSA-2023-1825 spring-security-web 5.2.1.RELEASE: spring-security-test 4.1.3.RELEASE: org.springframework.security","shortDescription":{"text":"Transitive Dependency: spring-security-web 5.2.1.RELEASE from spring-security-test 4.1.3.RELEASE (BDSA-2023-1825)"},"fullDescription":{"text":"Spring Security used with Spring WebFlux performs incorrect parsing when using `**` as a pattern in Spring Security configuration due to inconsistent pattern matching between the two components. This could lead to bypassing of security mechanisms configured by Spring Security."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| spring-security-web 5.2.1.RELEASE  | 5.8.9  | 6.2.1 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/bfe44ed0-0640-4faa-92fc-2c894ff23018?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=d80c013b-7862-4ea8-83e5-eb7b91623e0c)\n\n\n## Description\nSpring Security used with Spring WebFlux performs incorrect parsing when using `**` as a pattern in Spring Security configuration due to inconsistent pattern matching between the two components. This could lead to bypassing of security mechanisms configured by Spring Security.\n\n## Vulnerabilities(BDSA,CVE)\n:orange_circle: [BDSA-2023-1825](https://openhub.net/vulnerabilities/bdsa/BDSA-2023-1825) - Missing or Broken Authorization Mechanism\n\n\n\n## Solution\nFixed in versions:\n- [**5.6.12**](https://github.com/spring-projects/spring-security/releases/tag/5.6.12) by [this](https://github.com/spring-projects/spring-security/commit/7813a9ba26e53fe54e4d2ec6eb076126e8550780) commit,\n- [**5.7.10**](https://github.com/spring-projects/spring-security/releases/tag/5.7.10) by [this](https://github.com/spring-projects/spring-security/commit/fe9bc26bdcfea2a40c93e3db98e649bfb0edaab2) commit,\n- [**5.8.5**](https://github.com/spring-projects/spring-security/releases/tag/5.8.5) by [this](https://github.com/spring-projects/spring-security/commit/a939f17890a9415604ecf81bc236d3e969e2d9b4) commit,\n- [**6.0.5**](https://github.com/spring-projects/spring-security/releases/tag/6.0.5) by [this](https://github.com/spring-projects/spring-security/commit/cbef118026e38005109158dd35e79038af2bb913) commit,\n- [**6.1.2**](https://github.com/spring-projects/spring-security/releases/tag/6.1.2) by [this](https://github.com/spring-projects/spring-security/commit/aaa31312bd74c637ce9549ed68cab33214008bf5) commit.\n\nThe above fixed versions require Spring Framework versions:\n- [**5.2.25**](https://github.com/spring-projects/spring-framework/releases/tag/5.2.25),\n- [**5.3.29**](https://github.com/spring-projects/spring-framework/releases/tag/5.3.29),\n- [**6.0.11**](https://github.com/spring-projects/spring-framework/releases/tag/6.0.11).\n\nThe latest stable releases can be found [here](https://github.com/spring-projects/spring-security/releases).\n\n\n\n## Dependency tree\n- org.owasp.webgoat.lesson:http-basics:v8.1.0:-maven\n    - org.springframework.security:spring-security-test:4.1.3.RELEASE\n        - org.springframework.security:spring-security-web:5.2.1.RELEASE\n\n\n## References\n* Common Weakness Enumeration: [CWE-285](https://cwe.mitre.org/data/definitions/285.html)\n* Common Weakness Enumeration: [CWE-287](https://cwe.mitre.org/data/definitions/287.html)\n\n","text":"Spring Security used with Spring WebFlux performs incorrect parsing when using `**` as a pattern in Spring Security configuration due to inconsistent pattern matching between the two components. This could lead to bypassing of security mechanisms configured by Spring Security."},"properties":{"security-severity":"8.9","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-285","external/cwe/cwe-287"]},"defaultConfiguration":{"level":"error"}},{"id":"CVE-2022-22978 spring-security-web 5.2.1.RELEASE: spring-security-test 4.1.3.RELEASE: org.springframework.security","shortDescription":{"text":"Transitive Dependency: spring-security-web 5.2.1.RELEASE from spring-security-test 4.1.3.RELEASE (CVE-2022-22978)"},"fullDescription":{"text":"Spring Security is vulnerable to the bypassing of an authorization mechanism due to improperly implemented regular expression matching. A remote attacker could perform unauthorized actions on a vulnerable server by sending maliciously crafted requests to that server."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| spring-security-web 5.2.1.RELEASE  | 5.8.9  | 6.2.1 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/bfe44ed0-0640-4faa-92fc-2c894ff23018?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=d80c013b-7862-4ea8-83e5-eb7b91623e0c)\n\n\n## Description\nSpring Security is vulnerable to the bypassing of an authorization mechanism due to improperly implemented regular expression matching. A remote attacker could perform unauthorized actions on a vulnerable server by sending maliciously crafted requests to that server.\n\n## Vulnerabilities(BDSA,CVE)\n:orange_circle: [CVE-2022-22978](https://openhub.net/vulnerabilities/bdsa/CVE-2022-22978) - Incorrect Regular Expression\n\n\n\n## Solution\nFixed in versions:\n* [**5.7.0**](https://github.com/spring-projects/spring-security/releases/tag/5.7.0)\n* [**5.6.4**](https://github.com/spring-projects/spring-security/releases/tag/5.6.4)\n* [**5.5.7**](https://github.com/spring-projects/spring-security/releases/tag/5.5.7)\n\nThe latest stable releases can be found [here](https://github.com/spring-projects/spring-security/releases).\n\n\n\n## Dependency tree\n- org.owasp.webgoat.lesson:http-basics:v8.1.0:-maven\n    - org.springframework.security:spring-security-test:4.1.3.RELEASE\n        - org.springframework.security:spring-security-web:5.2.1.RELEASE\n\n\n## References\n* Common Weakness Enumeration: [CWE-185](https://cwe.mitre.org/data/definitions/185.html)\n\n","text":"Spring Security is vulnerable to the bypassing of an authorization mechanism due to improperly implemented regular expression matching. A remote attacker could perform unauthorized actions on a vulnerable server by sending maliciously crafted requests to that server."},"properties":{"security-severity":"8.9","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-185"]},"defaultConfiguration":{"level":"error"}},{"id":"CVE-2021-22112 spring-security-web 5.2.1.RELEASE: spring-security-test 4.1.3.RELEASE: org.springframework.security","shortDescription":{"text":"Transitive Dependency: spring-security-web 5.2.1.RELEASE from spring-security-test 4.1.3.RELEASE (CVE-2021-22112)"},"fullDescription":{"text":"Spring Security is vulnerable to privilege escalation due to a failure to correctly save security context information. An attacker who is allowed to use elevated privileges in a small portion of a program could extend those privileges to the entire program by sending maliciously crafted requests to the application.\n\nIt should be noted that the vulnerability is not present by default, and must be programmed in by an application developer."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| spring-security-web 5.2.1.RELEASE  | 5.8.9  | 6.2.1 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/bfe44ed0-0640-4faa-92fc-2c894ff23018?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=d80c013b-7862-4ea8-83e5-eb7b91623e0c)\n\n\n## Description\nSpring Security is vulnerable to privilege escalation due to a failure to correctly save security context information. An attacker who is allowed to use elevated privileges in a small portion of a program could extend those privileges to the entire program by sending maliciously crafted requests to the application.\n\nIt should be noted that the vulnerability is not present by default, and must be programmed in by an application developer.\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [CVE-2021-22112](https://openhub.net/vulnerabilities/bdsa/CVE-2021-22112) - Third-party component usage\n\n\n\n## Solution\nFixed in:\n* [**5.4.4**](https://github.com/spring-projects/spring-security/releases/tag/5.4.4) by [this](https://github.com/spring-projects/spring-security/commit/c72a6fac04853912a4b7caad5f0500f2aace5a79) commit.\n* [**5.3.8**](https://github.com/spring-projects/spring-security/releases/tag/5.3.8.RELEASE) by [this](https://github.com/spring-projects/spring-security/commit/38e9e8ca52ddc4bdd272083563a657d5e37ea1e8) commit.\n* [**5.2.9**](https://github.com/spring-projects/spring-security/releases/tag/5.2.9.RELEASE) by [this](https://github.com/spring-projects/spring-security/commit/7cab7b06c51ea885dd0d07ff26b135dd3afce1d1) commit.\n\nThe latest stable releases are available [here](https://github.com/spring-projects/spring-security/releases).\n\n\n\n## Dependency tree\n- org.owasp.webgoat.lesson:http-basics:v8.1.0:-maven\n    - org.springframework.security:spring-security-test:4.1.3.RELEASE\n        - org.springframework.security:spring-security-web:5.2.1.RELEASE\n\n\n## References\n* Common Weakness Enumeration: [CWE-265](https://cwe.mitre.org/data/definitions/265.html)\n\n","text":"Spring Security is vulnerable to privilege escalation due to a failure to correctly save security context information. An attacker who is allowed to use elevated privileges in a small portion of a program could extend those privileges to the entire program by sending maliciously crafted requests to the application.\n\nIt should be noted that the vulnerability is not present by default, and must be programmed in by an application developer."},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-265"]},"defaultConfiguration":{"level":"warning"}},{"id":"CVE-2021-22119 spring-security-web 5.2.1.RELEASE: spring-security-test 4.1.3.RELEASE: org.springframework.security","shortDescription":{"text":"Transitive Dependency: spring-security-web 5.2.1.RELEASE from spring-security-test 4.1.3.RELEASE (CVE-2021-22119)"},"fullDescription":{"text":"Spring Security contains an uncontrolled resource consumption vulnerability. Attackers could exploit this to create an `OutOfMemory` error and exhaust  system resources, triggering a denial-of-service (DoS) condition."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| spring-security-web 5.2.1.RELEASE  | 5.8.9  | 6.2.1 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/bfe44ed0-0640-4faa-92fc-2c894ff23018?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=d80c013b-7862-4ea8-83e5-eb7b91623e0c)\n\n\n## Description\nSpring Security contains an uncontrolled resource consumption vulnerability. Attackers could exploit this to create an `OutOfMemory` error and exhaust  system resources, triggering a denial-of-service (DoS) condition.\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [CVE-2021-22119](https://openhub.net/vulnerabilities/bdsa/CVE-2021-22119) - Uncontrolled Resource Consumption\n\n\n\n## Solution\nFixed in:\n* **[5.5.1](https://github.com/spring-projects/spring-security/releases/tag/5.5.1)**\n* **[5.4.7](https://github.com/spring-projects/spring-security/releases/tag/5.4.7)**\n* **[5.3.10](https://github.com/spring-projects/spring-security/releases/tag/5.3.10.RELEASE)**\n* **[5.2.11](https://github.com/spring-projects/spring-security/releases/tag/5.2.11.RELEASE)**\n\nThe latest stable releases are also available [here](https://github.com/spring-projects/spring-security/releases).\n\n\n\n## Dependency tree\n- org.owasp.webgoat.lesson:http-basics:v8.1.0:-maven\n    - org.springframework.security:spring-security-test:4.1.3.RELEASE\n        - org.springframework.security:spring-security-web:5.2.1.RELEASE\n\n\n## References\n* Common Weakness Enumeration: [CWE-400](https://cwe.mitre.org/data/definitions/400.html)\n\n","text":"Spring Security contains an uncontrolled resource consumption vulnerability. Attackers could exploit this to create an `OutOfMemory` error and exhaust  system resources, triggering a denial-of-service (DoS) condition."},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-400"]},"defaultConfiguration":{"level":"warning"}},{"id":"CVE-2022-22976 spring-security-web 5.2.1.RELEASE: spring-security-test 4.1.3.RELEASE: org.springframework.security","shortDescription":{"text":"Transitive Dependency: spring-security-web 5.2.1.RELEASE from spring-security-test 4.1.3.RELEASE (CVE-2022-22976)"},"fullDescription":{"text":"Spring Security is vulnerable to the weakening of bcrypt-generated password hashes due to an integer overflow. An attacker that is able to obtain weak password hashes that have been produced by a vulnerable application could potentially retrieve the plaintext password. It should be noted that the `BCryptPasswordEncoder` class must have been configured to use the maximum work factor (31) in order for the vulnerability to manifest. This is a non-default value."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| spring-security-web 5.2.1.RELEASE  | 5.8.9  | 6.2.1 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/bfe44ed0-0640-4faa-92fc-2c894ff23018?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=d80c013b-7862-4ea8-83e5-eb7b91623e0c)\n\n\n## Description\nSpring Security is vulnerable to the weakening of bcrypt-generated password hashes due to an integer overflow. An attacker that is able to obtain weak password hashes that have been produced by a vulnerable application could potentially retrieve the plaintext password. It should be noted that the `BCryptPasswordEncoder` class must have been configured to use the maximum work factor (31) in order for the vulnerability to manifest. This is a non-default value.\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [CVE-2022-22976](https://openhub.net/vulnerabilities/bdsa/CVE-2022-22976) - Integer Overflow / Underflow\n\n\n\n## Solution\nFixed in versions:\n* [**5.7.0**](https://github.com/spring-projects/spring-security/releases/tag/5.7.0)\n* [**5.6.4**](https://github.com/spring-projects/spring-security/releases/tag/5.6.4)\n* [**5.5.7**](https://github.com/spring-projects/spring-security/releases/tag/5.5.7)\n\nThe latest stable releases can be found [here](https://github.com/spring-projects/spring-security/releases).\n\n## Workaround\nThe vendor has stated [here](https://tanzu.vmware.com/security/cve-2022-22976) that the following workaround can be implemented:\n\n\u003e Update your BCryptPasswordEncoder to use a lower number of rounds.\n\n## Dependency tree\n- org.owasp.webgoat.lesson:http-basics:v8.1.0:-maven\n    - org.springframework.security:spring-security-test:4.1.3.RELEASE\n        - org.springframework.security:spring-security-web:5.2.1.RELEASE\n\n\n## References\n* Common Weakness Enumeration: [CWE-190](https://cwe.mitre.org/data/definitions/190.html)\n\n","text":"Spring Security is vulnerable to the weakening of bcrypt-generated password hashes due to an integer overflow. An attacker that is able to obtain weak password hashes that have been produced by a vulnerable application could potentially retrieve the plaintext password. It should be noted that the `BCryptPasswordEncoder` class must have been configured to use the maximum work factor (31) in order for the vulnerability to manifest. This is a non-default value."},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-190"]},"defaultConfiguration":{"level":"warning"}},{"id":"CVE-2020-5407 spring-security-web 5.2.1.RELEASE: spring-security-test 4.1.3.RELEASE: org.springframework.security","shortDescription":{"text":"Transitive Dependency: spring-security-web 5.2.1.RELEASE from spring-security-test 4.1.3.RELEASE (CVE-2020-5407)"},"fullDescription":{"text":"Spring Security is vulnerable to authentication abuse due to the improper handling of SAML response validation. This could allow an attacker to inject arbitrary assertions into SAML responses."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| spring-security-web 5.2.1.RELEASE  | 5.8.9  | 6.2.1 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/bfe44ed0-0640-4faa-92fc-2c894ff23018?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=d80c013b-7862-4ea8-83e5-eb7b91623e0c)\n\n\n## Description\nSpring Security is vulnerable to authentication abuse due to the improper handling of SAML response validation. This could allow an attacker to inject arbitrary assertions into SAML responses.\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [CVE-2020-5407](https://openhub.net/vulnerabilities/bdsa/CVE-2020-5407) - Improper Authentication\n\n\n\n## Solution\nFixed in **[5.3.2](https://github.com/spring-projects/spring-security/releases/tag/5.3.2.RELEASE)** by [this](https://github.com/spring-projects/spring-security/commit/0db9cd075d621118cdff303f402d25425ec81bbc) commit and **[5.2.4](https://github.com/spring-projects/spring-security/releases/tag/5.2.4.RELEASE)** by [this](https://github.com/spring-projects/spring-security/commit/69b1bc62ffe7c1e1bbf508951efa1e0235954198) commit.\n\n\n\n## Dependency tree\n- org.owasp.webgoat.lesson:http-basics:v8.1.0:-maven\n    - org.springframework.security:spring-security-test:4.1.3.RELEASE\n        - org.springframework.security:spring-security-web:5.2.1.RELEASE\n\n\n## References\n* Common Weakness Enumeration: [CWE-287](https://cwe.mitre.org/data/definitions/287.html)\n\n","text":"Spring Security is vulnerable to authentication abuse due to the improper handling of SAML response validation. This could allow an attacker to inject arbitrary assertions into SAML responses."},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-287"]},"defaultConfiguration":{"level":"warning"}},{"id":"CVE-2020-5408 spring-security-web 5.2.1.RELEASE: spring-security-test 4.1.3.RELEASE: org.springframework.security","shortDescription":{"text":"Transitive Dependency: spring-security-web 5.2.1.RELEASE from spring-security-test 4.1.3.RELEASE (CVE-2020-5408)"},"fullDescription":{"text":"Spring Security is vulnerable to information exposure due to an insecure cryptographic mechanism in the queryable text encryptor. This could be leveraged by an attacker to derive sensitive information from encrypted text using dictionary attacks."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| spring-security-web 5.2.1.RELEASE  | 5.8.9  | 6.2.1 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/bfe44ed0-0640-4faa-92fc-2c894ff23018?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=d80c013b-7862-4ea8-83e5-eb7b91623e0c)\n\n\n## Description\nSpring Security is vulnerable to information exposure due to an insecure cryptographic mechanism in the queryable text encryptor. This could be leveraged by an attacker to derive sensitive information from encrypted text using dictionary attacks.\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [CVE-2020-5408](https://openhub.net/vulnerabilities/bdsa/CVE-2020-5408) - Generation of Predictable IV with CBC Mode\n\n\n\n## Solution\nFixed by [this](https://github.com/spring-projects/spring-security/commit/db155b30941536e6c33408a20f62e790b2c78a97) commit in:\n* **[5.3.2](https://github.com/spring-projects/spring-security/releases/tag/5.3.2.RELEASE)**\n* **[5.2.4](https://github.com/spring-projects/spring-security/releases/tag/5.2.4.RELEASE)**\n* **[5.1.10](https://github.com/spring-projects/spring-security/releases/tag/5.1.10.RELEASE)**\n* **[5.0.16](https://github.com/spring-projects/spring-security/releases/tag/5.0.16.RELEASE)**\n* **[4.2.16](https://github.com/spring-projects/spring-security/releases/tag/4.2.16.RELEASE)**\n\n## Workaround\nIf upgrading to a fixed version cannot be performed immediately, users should discontinue use of the function `Encryptors#queryableText(CharSequence, CharSequence)` and look to their data store for a secure mechanism to query encrypted data.\n\n## Dependency tree\n- org.owasp.webgoat.lesson:http-basics:v8.1.0:-maven\n    - org.springframework.security:spring-security-test:4.1.3.RELEASE\n        - org.springframework.security:spring-security-web:5.2.1.RELEASE\n\n\n## References\n* Common Weakness Enumeration: [CWE-329](https://cwe.mitre.org/data/definitions/329.html)\n\n","text":"Spring Security is vulnerable to information exposure due to an insecure cryptographic mechanism in the queryable text encryptor. This could be leveraged by an attacker to derive sensitive information from encrypted text using dictionary attacks."},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-329"]},"defaultConfiguration":{"level":"warning"}},{"id":"CVE-2020-15250 junit 4.12: junit","shortDescription":{"text":"Direct Dependency: junit 4.12 (CVE-2020-15250)"},"fullDescription":{"text":"JUnit4 is vulnerable to information disclosure via the `TemporaryFolder` directory. A local user could exploit this vulnerability in order to read files and directories stored within this directory."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| junit 4.12  | 4.13.2  | 4.13.2 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/880f9c56-3b35-44ac-94d5-7ca931b6d850?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=8a5366e4-bf7d-4158-a1e9-5b3375bd9c69)\n\n\n## Description\nJUnit4 is vulnerable to information disclosure via the `TemporaryFolder` directory. A local user could exploit this vulnerability in order to read files and directories stored within this directory.\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [CVE-2020-15250](https://openhub.net/vulnerabilities/bdsa/CVE-2020-15250) - Sensitive Data Exposure\n\n\n\n## Solution\nFixed in [**4.13.1**](https://github.com/junit-team/junit4/releases/tag/r4.13.1) by [this](https://github.com/junit-team/junit4/commit/610155b8c22138329f0723eec22521627dbc52ae) commit.\n\nThe latest stable releases are available [here](https://github.com/junit-team/junit4/releases).\n\n\n\n\n\n## References\n* Common Weakness Enumeration: [CWE-200](https://cwe.mitre.org/data/definitions/200.html)\n\n","text":"JUnit4 is vulnerable to information disclosure via the `TemporaryFolder` directory. A local user could exploit this vulnerability in order to read files and directories stored within this directory."},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","direct_dependency","patch_available","external/cwe/cwe-200"]},"defaultConfiguration":{"level":"warning"}},{"id":"CVE-2020-27216 jetty-http 9.4.24.v20191120: wiremock 2.8.0: org.eclipse.jetty","shortDescription":{"text":"Transitive Dependency: jetty-http 9.4.24.v20191120 from wiremock 2.8.0 (CVE-2020-27216)"},"fullDescription":{"text":"Jetty is vulnerable to temporary directory Hijacking via a race condition. If code is executed from this temporary directory it can lead to local privilege escalation."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| jetty-http 9.4.24.v20191120  | 9.4.53.20231009  | 12.0.5 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/ee93672f-853c-4083-a5e8-0d5ab21e8bf9?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=d8221aaa-7d55-4b5a-b3e0-2b5cba26ce60)\n\n\n## Description\nJetty is vulnerable to temporary directory Hijacking via a race condition. If code is executed from this temporary directory it can lead to local privilege escalation.\n\n## Vulnerabilities(BDSA,CVE)\n:orange_circle: [CVE-2020-27216](https://openhub.net/vulnerabilities/bdsa/CVE-2020-27216) - Race Condition due to Improper Synchronization\n\n\n\n## Solution\nFixed in:\n* [**11.0.0.beta3**](https://github.com/eclipse/jetty.project/releases/tag/jetty-11.0.0.beta3)\n* [**10.0.0.beta3**](https://github.com/eclipse/jetty.project/releases/tag/jetty-10.0.0.beta3) \n* [**9.4.33.v20201020**](https://github.com/eclipse/jetty.project/releases/tag/jetty-9.4.33.v20201020) by [this](https://github.com/eclipse/jetty.project/commit/53e0e0e9b25a6309bf24ee3b10984f4145701edb) commit and [this](https://github.com/eclipse/jetty.project/commit/9ad6beb80543b392c91653f6bfce233fc75b9d5f) commit.\n\n## Workaround\nSet a temporary directory, either for the server or the context, to one outside the shared temporary file system. For recent releases, a temporary directory by created by making a directory called work in the `${jetty.base}` directory (the parent directory of the webapps directory). Alternately the java temporary directory can be set with the System Property `java.io.tmpdir`. A more detailed description of how jetty selects a temporary directory is below.\n\nTo mitigate this vulnerability the directory must be set to one that is not writable by an attacker. To avoid information leakage, the directory should also not be readable by an attacker.\n\n## Dependency tree\n- org.owasp.webgoat.lesson:xxe:v8.1.0:-maven\n    - com.github.tomakehurst:wiremock:2.8.0\n        - org.eclipse.jetty:jetty-server:9.4.24.v20191120\n            - org.eclipse.jetty:jetty-http:9.4.24.v20191120\n\n\n## References\n* Common Weakness Enumeration: [CWE-362](https://cwe.mitre.org/data/definitions/362.html)\n\n","text":"Jetty is vulnerable to temporary directory Hijacking via a race condition. If code is executed from this temporary directory it can lead to local privilege escalation."},"properties":{"security-severity":"8.9","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-362"]},"defaultConfiguration":{"level":"error"}},{"id":"CVE-2023-44487 jetty-http 9.4.24.v20191120: wiremock 2.8.0: org.eclipse.jetty","shortDescription":{"text":"Transitive Dependency: jetty-http 9.4.24.v20191120 from wiremock 2.8.0 (CVE-2023-44487)"},"fullDescription":{"text":"The HTTP/2 protocol contains a flaw related to the stream multiplexing feature that can allow for excessive resource consumption on servers operating implementations of the HTTP/2 protocol. \n\nThe HTTP/2 protocol allows clients to signal to a server to cancel a previously opened stream by sending an `RST_STREAM` frame. Attackers can abuse this stream canceling ability by opening a large number of streams at once immediately followed by `RST_STREAM` frames. In most HTTP/2 implementations this bypasses concurrent open stream limits and causes servers to spend processing time first handling request frames and then performing stream tear downs. For the server, these operations can pile up whereas the attacker client paid minuscule bandwidth and processing costs.\n\n[Amazon](https://aws.amazon.com/security/security-bulletins/AWS-2023-011/), [Cloudflare](https://blog.cloudflare.com/technical-breakdown-http2-rapid-reset-ddos-attack/) and [Google](https://cloud.google.com/blog/products/identity-security/google-cloud-mitigated-largest-ddos-attack-peaking-above-398-million-rps/) have reported that this vulnerability has been exploited in the wild from August to October 2023.\n\nThis vulnerability is listed as exploitable by the Cybersecurity \u0026 Infrastructure Security Agency in their [Known Exploited Vulnerabilities Catalog](https://www.cisa.gov/known-exploited-vulnerabilities-catalog)."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| jetty-http 9.4.24.v20191120  | 9.4.53.20231009  | 12.0.5 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/ee93672f-853c-4083-a5e8-0d5ab21e8bf9?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=d8221aaa-7d55-4b5a-b3e0-2b5cba26ce60)\n\n\n## Description\nThe HTTP/2 protocol contains a flaw related to the stream multiplexing feature that can allow for excessive resource consumption on servers operating implementations of the HTTP/2 protocol. \n\nThe HTTP/2 protocol allows clients to signal to a server to cancel a previously opened stream by sending an `RST_STREAM` frame. Attackers can abuse this stream canceling ability by opening a large number of streams at once immediately followed by `RST_STREAM` frames. In most HTTP/2 implementations this bypasses concurrent open stream limits and causes servers to spend processing time first handling request frames and then performing stream tear downs. For the server, these operations can pile up whereas the attacker client paid minuscule bandwidth and processing costs.\n\n[Amazon](https://aws.amazon.com/security/security-bulletins/AWS-2023-011/), [Cloudflare](https://blog.cloudflare.com/technical-breakdown-http2-rapid-reset-ddos-attack/) and [Google](https://cloud.google.com/blog/products/identity-security/google-cloud-mitigated-largest-ddos-attack-peaking-above-398-million-rps/) have reported that this vulnerability has been exploited in the wild from August to October 2023.\n\nThis vulnerability is listed as exploitable by the Cybersecurity \u0026 Infrastructure Security Agency in their [Known Exploited Vulnerabilities Catalog](https://www.cisa.gov/known-exploited-vulnerabilities-catalog).\n\n## Vulnerabilities(BDSA,CVE)\n:orange_circle: [CVE-2023-44487](https://openhub.net/vulnerabilities/bdsa/CVE-2023-44487) - Uncontrolled Resource Consumption\n\n\n\n## Solution\nFixed in:\n* nghttp2 [**1.57.0**](https://github.com/nghttp2/nghttp2/releases/tag/v1.57.0) by [this](https://github.com/nghttp2/nghttp2/commit/72b4af6143681f528f1d237b21a9a7aee1738832) commit,\n* NGINX [**1.25.3**](https://hg.nginx.org/nginx/rev/release-1.25.3) by [this](https://hg.nginx.org/nginx/rev/cdda286c0f1b) revision,\n* Apache Tomcat \n\t* [**8.5.94**](https://github.com/apache/tomcat/releases/tag/8.5.94) by [this](https://github.com/apache/tomcat/commit/944332bb15bd2f3bf76ec2caeb1ff0a58a3bc628) commit,\n\t* [**9.0.81**](https://github.com/apache/tomcat/releases/tag/9.0.81) by [this](https://github.com/apache/tomcat/commit/6d1a9fd6642387969e4410b9989c85856b74917a) commit,\n\t* [**10.1.14**](https://github.com/apache/tomcat/releases/tag/10.1.14) by [this](https://github.com/apache/tomcat/commit/76bb4bfbfeae827dce896f650655bbf6e251ed49) commit,\n\t* [**11.0.0-M12**](https://github.com/apache/tomcat/releases/tag/11.0.0-M12) by [this](https://github.com/apache/tomcat/commit/9cdfe25bad707f34b3e5da2994f3f1952a163c3e) commit,\n* Apache Traffic Server\n\t* [**9.2.3-rc0**](https://github.com/apache/trafficserver/releases/tag/9.2.3-rc0) by [this](https://github.com/apache/trafficserver/commit/b28ad74f117307e8de206f1de70c3fa716f90682) commit,\n\t* [**8.1.9-rc0**](https://github.com/apache/trafficserver/releases/tag/8.1.9-rc0) by [this](https://github.com/apache/trafficserver/commit/d742d74039aaa548dda0148ab4ba207906abc620) commit,\n* Netty/Codec/HTTP2 [**4.1.100.Final**](https://mvnrepository.com/artifact/io.netty/netty-codec-http2/4.1.100.Final) by [this](https://github.com/netty/netty/commit/58f75f665aa81a8cbcf6ffa74820042a285c5e61) commit,\n* Eclipse Jetty\n\t* [**12.0.2**](https://github.com/jetty/jetty.project/releases/tag/jetty-12.0.2), [**11.0.17**](https://github.com/jetty/jetty.project/releases/tag/jetty-11.0.17), [**10.0.17**](https://github.com/jetty/jetty.project/releases/tag/jetty-10.0.17) by [this](https://github.com/jetty/jetty.project/commit/dbb94514dc9d3fb21fe92080f57c314e7e06a148) commit,\n\t* [**9.4.53.v20231009**](https://github.com/jetty/jetty.project/releases/tag/jetty-9.4.53.v20231009) by [this](https://github.com/jetty/jetty.project/commit/0f246d12090fb15b7b21dee8429f459fd792de53) commit.\n* lighttpd [**1.4.73**](https://github.com/lighttpd/lighttpd1.4/releases/tag/lighttpd-1.4.73) by [this](https://github.com/lighttpd/lighttpd1.4/commit/7b48f3c843e1113b27f5d278f4d10861cc499a06) commit.\n* grpc-go \n  * [**1.56.3**](https://github.com/grpc/grpc-go/releases/tag/v1.56.3) by [this](https://github.com/grpc/grpc-go/commit/5efd7bd7) commit,\n  * [**1.57.1**](https://github.com/grpc/grpc-go/releases/tag/v1.57.1) by [this](https://github.com/grpc/grpc-go/commit/6a1400d5) commit,\n  * [**1.58.3**](https://github.com/grpc/grpc-go/releases/tag/v1.58.3) by [this](https://github.com/grpc/grpc-go/commit/c40c9ba3) commit,\n * h2o fixed in the **master** branch by [this](https://github.com/h2o/h2o/commit/28fe15117b909588bf14269a0e1c6ec4548579fe) commit which is not yet included in any release.\n\n## Workaround\nDepending on technologies use and their configuration, different mitigation strategies may be available.\n\nIn some cases, it may be possible to limit the amount of `RST_STREAM` frame frames that are processed within a given time by configuring the particular HTTP/2 implementation manually. Please refer to your software vendor's advisories for more information.\n\n## Dependency tree\n- org.owasp.webgoat.lesson:xxe:v8.1.0:-maven\n    - com.github.tomakehurst:wiremock:2.8.0\n        - org.eclipse.jetty:jetty-server:9.4.24.v20191120\n            - org.eclipse.jetty:jetty-http:9.4.24.v20191120\n\n\n## References\n* Common Weakness Enumeration: [CWE-400](https://cwe.mitre.org/data/definitions/400.html)\n\n","text":"The HTTP/2 protocol contains a flaw related to the stream multiplexing feature that can allow for excessive resource consumption on servers operating implementations of the HTTP/2 protocol. \n\nThe HTTP/2 protocol allows clients to signal to a server to cancel a previously opened stream by sending an `RST_STREAM` frame. Attackers can abuse this stream canceling ability by opening a large number of streams at once immediately followed by `RST_STREAM` frames. In most HTTP/2 implementations this bypasses concurrent open stream limits and causes servers to spend processing time first handling request frames and then performing stream tear downs. For the server, these operations can pile up whereas the attacker client paid minuscule bandwidth and processing costs.\n\n[Amazon](https://aws.amazon.com/security/security-bulletins/AWS-2023-011/), [Cloudflare](https://blog.cloudflare.com/technical-breakdown-http2-rapid-reset-ddos-attack/) and [Google](https://cloud.google.com/blog/products/identity-security/google-cloud-mitigated-largest-ddos-attack-peaking-above-398-million-rps/) have reported that this vulnerability has been exploited in the wild from August to October 2023.\n\nThis vulnerability is listed as exploitable by the Cybersecurity \u0026 Infrastructure Security Agency in their [Known Exploited Vulnerabilities Catalog](https://www.cisa.gov/known-exploited-vulnerabilities-catalog)."},"properties":{"security-severity":"8.9","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-400"]},"defaultConfiguration":{"level":"error"}},{"id":"CVE-2020-27223 jetty-http 9.4.24.v20191120: wiremock 2.8.0: org.eclipse.jetty","shortDescription":{"text":"Transitive Dependency: jetty-http 9.4.24.v20191120 from wiremock 2.8.0 (CVE-2020-27223)"},"fullDescription":{"text":"Jetty is vulnerable to denial-of-service (DoS) due to the use of an exponential algorithm that can have excessive resource requirements. A remote attacker could cause a vulnerable server to become unresponsive by sending maliciously crafted HTTP requests to that server."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| jetty-http 9.4.24.v20191120  | 9.4.53.20231009  | 12.0.5 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/ee93672f-853c-4083-a5e8-0d5ab21e8bf9?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=d8221aaa-7d55-4b5a-b3e0-2b5cba26ce60)\n\n\n## Description\nJetty is vulnerable to denial-of-service (DoS) due to the use of an exponential algorithm that can have excessive resource requirements. A remote attacker could cause a vulnerable server to become unresponsive by sending maliciously crafted HTTP requests to that server.\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [CVE-2020-27223](https://openhub.net/vulnerabilities/bdsa/CVE-2020-27223) - Inefficient Algorithmic Complexity\n\n\n\n## Solution\nFixed by [this](https://github.com/eclipse/jetty.project/commit/10e531756b972162eed402c44d0244f7f6b85131) commit in:\n* [**11.0.1**](https://github.com/eclipse/jetty.project/releases/tag/jetty-11.0.1)\n* [**10.0.1**](https://github.com/eclipse/jetty.project/releases/tag/jetty-10.0.1)\n* [**9.4.37.v20210219**](https://github.com/eclipse/jetty.project/releases/tag/jetty-9.4.37.v20210219)\n\nThe latest stable releases are available [here](https://github.com/eclipse/jetty.project/releases).\n\n## Workaround\nThe vendor has stated that the following workarounds are effective:\n\n* Don't use the default error page or handler.\n* Don't deploy an instance of `StatisticsServlet` that is exposed to the network.\n* Don't call the `getLocale` API.\n* Don't enable precompressed static content in instances of `DefaultServlet`.\n* Deploy a rule that limits the number and size of `Accept-*` header fields.\n\n## Dependency tree\n- org.owasp.webgoat.lesson:xxe:v8.1.0:-maven\n    - com.github.tomakehurst:wiremock:2.8.0\n        - org.eclipse.jetty:jetty-server:9.4.24.v20191120\n            - org.eclipse.jetty:jetty-http:9.4.24.v20191120\n\n\n## References\n* Common Weakness Enumeration: [CWE-407](https://cwe.mitre.org/data/definitions/407.html)\n\n","text":"Jetty is vulnerable to denial-of-service (DoS) due to the use of an exponential algorithm that can have excessive resource requirements. A remote attacker could cause a vulnerable server to become unresponsive by sending maliciously crafted HTTP requests to that server."},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-407"]},"defaultConfiguration":{"level":"warning"}},{"id":"CVE-2021-28165 jetty-http 9.4.24.v20191120: wiremock 2.8.0: org.eclipse.jetty","shortDescription":{"text":"Transitive Dependency: jetty-http 9.4.24.v20191120 from wiremock 2.8.0 (CVE-2021-28165)"},"fullDescription":{"text":"Eclipse Jetty is vulnerable to Denial-of-Service (DoS) via invalid TLS frames. An attacker could exploit this by sending a TLS frame with a size in excess of 17408 resulting in excessive resource consumption leading to a DoS condition."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| jetty-http 9.4.24.v20191120  | 9.4.53.20231009  | 12.0.5 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/ee93672f-853c-4083-a5e8-0d5ab21e8bf9?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=d8221aaa-7d55-4b5a-b3e0-2b5cba26ce60)\n\n\n## Description\nEclipse Jetty is vulnerable to Denial-of-Service (DoS) via invalid TLS frames. An attacker could exploit this by sending a TLS frame with a size in excess of 17408 resulting in excessive resource consumption leading to a DoS condition.\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [CVE-2021-28165](https://openhub.net/vulnerabilities/bdsa/CVE-2021-28165) - Uncontrolled Resource Consumption\n\n\n\n## Solution\nFixed in [**10.0.2**](https://github.com/eclipse/jetty.project/releases/tag/jetty-10.0.2) and [**11.0.2**](https://github.com/eclipse/jetty.project/releases/tag/jetty-11.0.2) by [this](https://github.com/eclipse/jetty.project/commit/be22761a20a1685365c8e0356bf09b47e574cfd9) and [this](https://github.com/eclipse/jetty.project/commit/039c7386d0f3087d7c8aa19ea6001b24c95b9f16) commit.\nFixed in [**9.4.39.v20210325**](https://github.com/eclipse/jetty.project/releases/tag/jetty-9.4.39.v20210325) by [this](https://github.com/eclipse/jetty.project/commit/00d379c94ba865dced2025c2d1bc3e2e0e41e880) and [this](https://github.com/eclipse/jetty.project/commit/294b2ba02b667548617a94cd99592110ac230add) commit. \n\nThe latest stable releases are available [here](https://github.com/eclipse/jetty.project/releases).\n\n## Workaround\nThe problem can be worked around by compiling the following class:\n```\npackage org.eclipse.jetty.server.ssl.fix6072;\n\nimport java.nio.ByteBuffer;\nimport javax.net.ssl.SSLEngine;\nimport javax.net.ssl.SSLEngineResult;\nimport javax.net.ssl.SSLException;\nimport javax.net.ssl.SSLHandshakeException;\n\nimport org.eclipse.jetty.io.EndPoint;\nimport org.eclipse.jetty.io.ssl.SslConnection;\nimport org.eclipse.jetty.server.Connector;\nimport org.eclipse.jetty.server.SslConnectionFactory;\nimport org.eclipse.jetty.util.BufferUtil;\nimport org.eclipse.jetty.util.annotation.Name;\nimport org.eclipse.jetty.util.ssl.SslContextFactory;\n\npublic class SpaceCheckingSslConnectionFactory extends SslConnectionFactory\n{\n    public SpaceCheckingSslConnectionFactory(@Name(\"sslContextFactory\") SslContextFactory factory, @Name(\"next\") String nextProtocol)\n    {\n        super(factory, nextProtocol);\n    }\n\n    @Override\n    protected SslConnection newSslConnection(Connector connector, EndPoint endPoint, SSLEngine engine)\n    {\n        return new SslConnection(connector.getByteBufferPool(), connector.getExecutor(), endPoint, engine, isDirectBuffersForEncryption(), isDirectBuffersForDecryption())\n        {\n            @Override\n            protected SSLEngineResult unwrap(SSLEngine sslEngine, ByteBuffer input, ByteBuffer output) throws SSLException\n            {\n                SSLEngineResult results = super.unwrap(sslEngine, input, output);\n\n                if ((results.getStatus() == SSLEngineResult.Status.BUFFER_UNDERFLOW ||\n                    results.getStatus() == SSLEngineResult.Status.OK \u0026\u0026 results.bytesConsumed() == 0 \u0026\u0026 results.bytesProduced() == 0) \u0026\u0026\n                    BufferUtil.space(input) == 0)\n                {\n                    BufferUtil.clear(input);\n                    throw new SSLHandshakeException(\"Encrypted buffer max length exceeded\");\n                }\n                return results;\n            }\n        };\n    }\n}\n```\n\nThis class can be deployed by:\n* The resulting class file should be put into a jar file (eg `sslfix6072.jar`)\n* The jar file should be made available to the server. For a normal distribution this can be done by putting the file into `${jetty.base}/lib`\n* Copy the file `${jetty.home}/modules/ssl.mod` to `${jetty.base}/modules`\n* Edit the `${jetty.base}/modules/ssl.mod` file to have the following section:\n```\n[lib]\nlib/sslfix6072.jar\n```\n\n* Copy the file `${jetty.home}/etc/jetty-https.xml` and `${jetty.home}/etc/jetty-http2.xml` to `${jetty.base}/etc`\n* Edit files `${jetty.base}/etc/jetty-https.xml` and `${jetty.base}/etc/jetty-http2.xml`, changing any reference of `org.eclipse.jetty.server.SslConnectionFactory` to `org.eclipse.jetty.server.ssl.fix6072.SpaceCheckingSslConnectionFactory`. \n\nFor example:\n```\n  \u003cCall name=\"addIfAbsentConnectionFactory\"\u003e\n    \u003cArg\u003e\n      \u003cNew class=\"org.eclipse.jetty.server.ssl.fix6072.SpaceCheckingSslConnectionFactory\"\u003e\n        \u003cArg name=\"next\"\u003ehttp/1.1\u003c/Arg\u003e\n        \u003cArg name=\"sslContextFactory\"\u003e\u003cRef refid=\"sslContextFactory\"/\u003e\u003c/Arg\u003e\n      \u003c/New\u003e\n    \u003c/Arg\u003e\n  \u003c/Call\u003e\n```\nRestart Jetty\n\n## Dependency tree\n- org.owasp.webgoat.lesson:xxe:v8.1.0:-maven\n    - com.github.tomakehurst:wiremock:2.8.0\n        - org.eclipse.jetty:jetty-server:9.4.24.v20191120\n            - org.eclipse.jetty:jetty-http:9.4.24.v20191120\n\n\n## References\n* Common Weakness Enumeration: [CWE-400](https://cwe.mitre.org/data/definitions/400.html)\n\n","text":"Eclipse Jetty is vulnerable to Denial-of-Service (DoS) via invalid TLS frames. An attacker could exploit this by sending a TLS frame with a size in excess of 17408 resulting in excessive resource consumption leading to a DoS condition."},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-400"]},"defaultConfiguration":{"level":"warning"}},{"id":"CVE-2021-28169 jetty-http 9.4.24.v20191120: wiremock 2.8.0: org.eclipse.jetty","shortDescription":{"text":"Transitive Dependency: jetty-http 9.4.24.v20191120 from wiremock 2.8.0 (CVE-2021-28169)"},"fullDescription":{"text":"Jetty is vulnerable to information disclosure due to improper requested path verification. This allows crafted requests to access protected resources of the web application which, depending on the implementation, might reveal sensitive information."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| jetty-http 9.4.24.v20191120  | 9.4.53.20231009  | 12.0.5 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/ee93672f-853c-4083-a5e8-0d5ab21e8bf9?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=d8221aaa-7d55-4b5a-b3e0-2b5cba26ce60)\n\n\n## Description\nJetty is vulnerable to information disclosure due to improper requested path verification. This allows crafted requests to access protected resources of the web application which, depending on the implementation, might reveal sensitive information.\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [CVE-2021-28169](https://openhub.net/vulnerabilities/bdsa/CVE-2021-28169) - Directory Traversal\n\n\n\n## Solution\nFixed in [**9.4.41**](https://github.com/eclipse/jetty.project/releases/tag/jetty-9.4.41.v20210512) by [this](https://github.com/eclipse/jetty.project/commit/1c05b0bcb1) commit.\n\nFixed in [**10.0.3**](https://github.com/eclipse/jetty.project/releases/tag/jetty-10.0.3) and [**11.0.3**](https://github.com/eclipse/jetty.project/releases/tag/jetty-11.0.3) by [this](https://github.com/eclipse/jetty.project/commit/f58dbedcd0) commit.\n\nThe latest stable releases are available [here](https://www.eclipse.org/jetty/download.php).\n\n## Workaround\nThe vendor provides the following workaround:\n\nIf you cannot update to the latest version of Jetty, you can instead deploy your own version of the `ConcatServlet` and/or the `WelcomeFilter` by using the code from the latest version of Jetty.\n\n## Dependency tree\n- org.owasp.webgoat.lesson:xxe:v8.1.0:-maven\n    - com.github.tomakehurst:wiremock:2.8.0\n        - org.eclipse.jetty:jetty-server:9.4.24.v20191120\n            - org.eclipse.jetty:jetty-http:9.4.24.v20191120\n\n\n## References\n* Common Weakness Enumeration: [CWE-22](https://cwe.mitre.org/data/definitions/22.html)\n\n","text":"Jetty is vulnerable to information disclosure due to improper requested path verification. This allows crafted requests to access protected resources of the web application which, depending on the implementation, might reveal sensitive information."},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-22"]},"defaultConfiguration":{"level":"warning"}},{"id":"CVE-2023-36478 jetty-http 9.4.24.v20191120: wiremock 2.8.0: org.eclipse.jetty","shortDescription":{"text":"Transitive Dependency: jetty-http 9.4.24.v20191120 from wiremock 2.8.0 (CVE-2023-36478)"},"fullDescription":{"text":"Eclipse Jetty is vulnerable to a denial-of-service (DoS) issue due to presence of a user input validation flaw in the HTTP/2 HPACK functionality that can lead to an integer overflow and allow HPACK headers to exceed their expected size limits.\n\nAn attacker could submit crafted HTTP messages that trigger the integer overflow flaw and cause large buffers to be allocated on the server, consuming memory resources in a manner that could cause the server to run out of memory."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| jetty-http 9.4.24.v20191120  | 9.4.53.20231009  | 12.0.5 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/ee93672f-853c-4083-a5e8-0d5ab21e8bf9?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=d8221aaa-7d55-4b5a-b3e0-2b5cba26ce60)\n\n\n## Description\nEclipse Jetty is vulnerable to a denial-of-service (DoS) issue due to presence of a user input validation flaw in the HTTP/2 HPACK functionality that can lead to an integer overflow and allow HPACK headers to exceed their expected size limits.\n\nAn attacker could submit crafted HTTP messages that trigger the integer overflow flaw and cause large buffers to be allocated on the server, consuming memory resources in a manner that could cause the server to run out of memory.\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [CVE-2023-36478](https://openhub.net/vulnerabilities/bdsa/CVE-2023-36478) - Integer Overflow / Underflow\n\n\n\n## Solution\nFixed in:\n* [**9.4.53.v20231009**](https://github.com/jetty/jetty.project/releases/tag/jetty-9.4.53.v20231009) by [this](https://github.com/jetty/jetty.project/commit/c7a4b05fc735e73e7522cb617c079045b709957b) commit and [this](https://github.com/jetty/jetty.project/commit/a4d61e9eb026ec98c79107e840cabdf520482c56) commit,\n* [**10.0.16**](https://github.com/jetty/jetty.project/releases/tag/jetty-10.0.16), [**11.0.16**](https://github.com/jetty/jetty.project/releases/tag/jetty-11.0.16) and [**12.0.0.beta2x**](https://github.com/jetty/jetty.project/releases/tag/jetty-12.0.0.beta2x) by [this](https://github.com/jetty/jetty.project/commit/a8c9eea75bffcb2b2557acefb75856707654a56f) commit and [this](https://github.com/jetty/jetty.project/commit/420ec7cc1db65b42693dc002aca0faa567f62f7e) commit.\n\nThe latest stable releases can be found [here](https://eclipse.dev/jetty/download.php).\n\n\n\n## Dependency tree\n- org.owasp.webgoat.lesson:xxe:v8.1.0:-maven\n    - com.github.tomakehurst:wiremock:2.8.0\n        - org.eclipse.jetty:jetty-server:9.4.24.v20191120\n            - org.eclipse.jetty:jetty-http:9.4.24.v20191120\n\n\n## References\n* Common Weakness Enumeration: [CWE-190](https://cwe.mitre.org/data/definitions/190.html)\n* Common Weakness Enumeration: [CWE-400](https://cwe.mitre.org/data/definitions/400.html)\n\n","text":"Eclipse Jetty is vulnerable to a denial-of-service (DoS) issue due to presence of a user input validation flaw in the HTTP/2 HPACK functionality that can lead to an integer overflow and allow HPACK headers to exceed their expected size limits.\n\nAn attacker could submit crafted HTTP messages that trigger the integer overflow flaw and cause large buffers to be allocated on the server, consuming memory resources in a manner that could cause the server to run out of memory."},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-190","external/cwe/cwe-400"]},"defaultConfiguration":{"level":"warning"}},{"id":"CVE-2022-2048 jetty-http 9.4.24.v20191120: wiremock 2.8.0: org.eclipse.jetty","shortDescription":{"text":"Transitive Dependency: jetty-http 9.4.24.v20191120 from wiremock 2.8.0 (CVE-2022-2048)"},"fullDescription":{"text":"Eclipse Jetty does not correctly handle invalid HTTP/2 requests. An attacker could exploit this flaw to exhaust the HTTP/2 flow control window or TCP congest the connection. This will cause the relevant selector threads to be blocked and it will lead to a denial-of-service (DoS)."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| jetty-http 9.4.24.v20191120  | 9.4.53.20231009  | 12.0.5 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/ee93672f-853c-4083-a5e8-0d5ab21e8bf9?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=d8221aaa-7d55-4b5a-b3e0-2b5cba26ce60)\n\n\n## Description\nEclipse Jetty does not correctly handle invalid HTTP/2 requests. An attacker could exploit this flaw to exhaust the HTTP/2 flow control window or TCP congest the connection. This will cause the relevant selector threads to be blocked and it will lead to a denial-of-service (DoS).\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [CVE-2022-2048](https://openhub.net/vulnerabilities/bdsa/CVE-2022-2048) - Insufficient Resource Pool\n\n\n\n## Solution\nFixed in:\n* **[9.4.47](https://github.com/eclipse/jetty.project/releases/tag/jetty-9.4.47.v20220610)** by [this](https://github.com/eclipse/jetty.project/commit/be912d4315839405a8ae601f2e4ee0306867266e) commit,\n* **[10.0.10](https://github.com/eclipse/jetty.project/releases/tag/jetty-10.0.10)** and **[11.0.10](https://github.com/eclipse/jetty.project/releases/tag/jetty-11.0.10)** by [this](https://github.com/eclipse/jetty.project/commit/b705091afb9158b39590fa36b9b84795524a8f0b) commit.\n\n\nThe latest stable releases can be found [here](https://github.com/eclipse/jetty.project/releases).\n\n## Workaround\nThe vendor recommends users to filter the requests before they are sent to Jetty. One way to filter them would be to use a proxy.\n\n## Dependency tree\n- org.owasp.webgoat.lesson:xxe:v8.1.0:-maven\n    - com.github.tomakehurst:wiremock:2.8.0\n        - org.eclipse.jetty:jetty-server:9.4.24.v20191120\n            - org.eclipse.jetty:jetty-http:9.4.24.v20191120\n\n\n## References\n* Common Weakness Enumeration: [CWE-410](https://cwe.mitre.org/data/definitions/410.html)\n* Common Weakness Enumeration: [CWE-664](https://cwe.mitre.org/data/definitions/664.html)\n\n","text":"Eclipse Jetty does not correctly handle invalid HTTP/2 requests. An attacker could exploit this flaw to exhaust the HTTP/2 flow control window or TCP congest the connection. This will cause the relevant selector threads to be blocked and it will lead to a denial-of-service (DoS)."},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-410","external/cwe/cwe-664"]},"defaultConfiguration":{"level":"warning"}},{"id":"CVE-2020-27218 jetty-http 9.4.24.v20191120: wiremock 2.8.0: org.eclipse.jetty","shortDescription":{"text":"Transitive Dependency: jetty-http 9.4.24.v20191120 from wiremock 2.8.0 (CVE-2020-27218)"},"fullDescription":{"text":"Eclipse Jetty contains a vulnerability that allows a remote attacker to inject data into other client's requests. This vulnerability only exists when GZIP request body inflation is enabled, and requests from different clients are multiplexed onto a single connection."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| jetty-http 9.4.24.v20191120  | 9.4.53.20231009  | 12.0.5 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/ee93672f-853c-4083-a5e8-0d5ab21e8bf9?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=d8221aaa-7d55-4b5a-b3e0-2b5cba26ce60)\n\n\n## Description\nEclipse Jetty contains a vulnerability that allows a remote attacker to inject data into other client's requests. This vulnerability only exists when GZIP request body inflation is enabled, and requests from different clients are multiplexed onto a single connection.\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [CVE-2020-27218](https://openhub.net/vulnerabilities/bdsa/CVE-2020-27218) - Sensitive Information in Resource Not Removed Before Reuse\n\n\n\n## Solution\nFixed in **[9.4.35.v20201120](https://github.com/eclipse/jetty.project/releases/tag/jetty-9.4.35.v20201120)** by [this](https://github.com/eclipse/jetty.project/commit/850a0330ff25da42b1b1cbdbdca0fcc0c40e47e9) commit.\n\nFixed in **[10.0.0.beta3](https://github.com/eclipse/jetty.project/releases/tag/jetty-10.0.0.beta3)** and in **[11.0.0.beta3](https://github.com/eclipse/jetty.project/releases/tag/jetty-11.0.0.beta3)** by [this](https://github.com/eclipse/jetty.project/commit/34d27e85483c119b7dd1aa9beda735844d14b605) commit.\n\n## Workaround\nThe vendor states that any of the following will mitigate this vulnerability:\n\n\n\u003e * Disabling compressed request body inflation by GzipHandler.\n\u003e * By always fully consuming the request content before sending a response.\n\u003e * By adding a Connection: close to any response where the servlet does not fully consume request content.\n\n## Dependency tree\n- org.owasp.webgoat.lesson:xxe:v8.1.0:-maven\n    - com.github.tomakehurst:wiremock:2.8.0\n        - org.eclipse.jetty:jetty-server:9.4.24.v20191120\n            - org.eclipse.jetty:jetty-http:9.4.24.v20191120\n\n\n## References\n* Common Weakness Enumeration: [CWE-226](https://cwe.mitre.org/data/definitions/226.html)\n\n","text":"Eclipse Jetty contains a vulnerability that allows a remote attacker to inject data into other client's requests. This vulnerability only exists when GZIP request body inflation is enabled, and requests from different clients are multiplexed onto a single connection."},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-226"]},"defaultConfiguration":{"level":"warning"}},{"id":"CVE-2023-26048 jetty-http 9.4.24.v20191120: wiremock 2.8.0: org.eclipse.jetty","shortDescription":{"text":"Transitive Dependency: jetty-http 9.4.24.v20191120 from wiremock 2.8.0 (CVE-2023-26048)"},"fullDescription":{"text":"Eclipse Jetty contains a vulnerability in its multipart request parsing mechanism that can lead to an out-of-memory error due to insufficient limiting measures. An attacker can exploit this flaw by supplying a request containing a large multipart without a filename in order to cause a denial-of-service (DoS)."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| jetty-http 9.4.24.v20191120  | 9.4.53.20231009  | 12.0.5 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/ee93672f-853c-4083-a5e8-0d5ab21e8bf9?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=d8221aaa-7d55-4b5a-b3e0-2b5cba26ce60)\n\n\n## Description\nEclipse Jetty contains a vulnerability in its multipart request parsing mechanism that can lead to an out-of-memory error due to insufficient limiting measures. An attacker can exploit this flaw by supplying a request containing a large multipart without a filename in order to cause a denial-of-service (DoS).\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [CVE-2023-26048](https://openhub.net/vulnerabilities/bdsa/CVE-2023-26048) - Uncontrolled Resource Consumption\n\n\n\n## Solution\nFixed in [**jetty-9.4.51.v20230217**](https://github.com/eclipse/jetty.project/releases/tag/jetty-9.4.51.v20230217) by [this](https://github.com/eclipse/jetty.project/commit/c3021592218da289563987e6f7fbe05f8704b285) commit.\n\nFixed by [this](https://github.com/eclipse/jetty.project/commit/622befbd0d52f61c1acd41b4ef12458311494f1a) commit in:\n* **[jetty-10.0.14](https://github.com/eclipse/jetty.project/releases/tag/jetty-10.0.14)**\n* **[jetty-11.0.14](https://github.com/eclipse/jetty.project/releases/tag/jetty-11.0.14)**\n* **[jetty-12.0.0.beta0](https://github.com/eclipse/jetty.project/releases/tag/jetty-12.0.0.beta0)**\n\nThe latest stable releases can be found [here](https://github.com/eclipse/jetty.project/releases).\n\n## Workaround\nIt is recommended to set the multipart parameter `maxRequestSize` to a non-negative value in order to limit the whole multipart content. It has also been stated that limiting the multipart parameter `maxFileSize` will not be enough since the attacker can supply a large number of parts that, when summed up, will cause memory issues.\n\n## Dependency tree\n- org.owasp.webgoat.lesson:xxe:v8.1.0:-maven\n    - com.github.tomakehurst:wiremock:2.8.0\n        - org.eclipse.jetty:jetty-server:9.4.24.v20191120\n            - org.eclipse.jetty:jetty-http:9.4.24.v20191120\n\n\n## References\n* Common Weakness Enumeration: [CWE-400](https://cwe.mitre.org/data/definitions/400.html)\n* Common Weakness Enumeration: [CWE-770](https://cwe.mitre.org/data/definitions/770.html)\n\n","text":"Eclipse Jetty contains a vulnerability in its multipart request parsing mechanism that can lead to an out-of-memory error due to insufficient limiting measures. An attacker can exploit this flaw by supplying a request containing a large multipart without a filename in order to cause a denial-of-service (DoS)."},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-400","external/cwe/cwe-770"]},"defaultConfiguration":{"level":"warning"}},{"id":"CVE-2023-26049 jetty-http 9.4.24.v20191120: wiremock 2.8.0: org.eclipse.jetty","shortDescription":{"text":"Transitive Dependency: jetty-http 9.4.24.v20191120 from wiremock 2.8.0 (CVE-2023-26049)"},"fullDescription":{"text":"Eclipse Jetty does not properly parse quoted values in cookies. This could allow an attacker to smuggle cookies within other cookies into the application. The attacker can also tamper with the cookie parsing mechanism and cause other unintended behavior."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| jetty-http 9.4.24.v20191120  | 9.4.53.20231009  | 12.0.5 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/ee93672f-853c-4083-a5e8-0d5ab21e8bf9?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=d8221aaa-7d55-4b5a-b3e0-2b5cba26ce60)\n\n\n## Description\nEclipse Jetty does not properly parse quoted values in cookies. This could allow an attacker to smuggle cookies within other cookies into the application. The attacker can also tamper with the cookie parsing mechanism and cause other unintended behavior.\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [CVE-2023-26049](https://openhub.net/vulnerabilities/bdsa/CVE-2023-26049) - Weak Input Validation\n\n\n\n## Solution\nFixed in version [**jetty-9.4.51.v20230217**](https://github.com/eclipse/jetty.project/releases/tag/jetty-9.4.51.v20230217) by [this](https://github.com/eclipse/jetty.project/commit/1be1401bafb4c46fae3c234c8e93743a661dcf21) commit.\n\nFixed by [this](https://github.com/eclipse/jetty.project/commit/7b8c2c1bf081c7f408e5da3371c8c3c9802f09fd) commit in:\n* [**jetty-10.0.14**](https://github.com/eclipse/jetty.project/releases/tag/jetty-10.0.14)\n* [**jetty-11.0.14**](https://github.com/eclipse/jetty.project/releases/tag/jetty-11.0.14)\n* [**jetty-12.0.0.beta0**](https://github.com/eclipse/jetty.project/releases/tag/jetty-12.0.0.beta0)\n\nThe latest stable releases can be found [here](https://github.com/eclipse/jetty.project/releases).\n\n\n\n## Dependency tree\n- org.owasp.webgoat.lesson:xxe:v8.1.0:-maven\n    - com.github.tomakehurst:wiremock:2.8.0\n        - org.eclipse.jetty:jetty-server:9.4.24.v20191120\n            - org.eclipse.jetty:jetty-http:9.4.24.v20191120\n\n\n## References\n* Common Weakness Enumeration: [CWE-20](https://cwe.mitre.org/data/definitions/20.html)\n\n","text":"Eclipse Jetty does not properly parse quoted values in cookies. This could allow an attacker to smuggle cookies within other cookies into the application. The attacker can also tamper with the cookie parsing mechanism and cause other unintended behavior."},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-20"]},"defaultConfiguration":{"level":"warning"}},{"id":"CVE-2023-40167 jetty-http 9.4.24.v20191120: wiremock 2.8.0: org.eclipse.jetty","shortDescription":{"text":"Transitive Dependency: jetty-http 9.4.24.v20191120 from wiremock 2.8.0 (CVE-2023-40167)"},"fullDescription":{"text":"Eclipse Jetty is vulnerable to HTTP request smuggling due to the improper parsing of HTTP requests. An attacker could exploit this vulnerability by sending maliciously crafted HTTP requests to a vulnerable endpoint with multiple requests included inside the body by manipulating the `Content-Length` of the request. The smuggling of HTTP requests may allow for the bypass of security tools such as web application firewalls (WAFs) and intrusion detection systems (IDSs)."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| jetty-http 9.4.24.v20191120  | 9.4.53.20231009  | 12.0.5 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/ee93672f-853c-4083-a5e8-0d5ab21e8bf9?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=d8221aaa-7d55-4b5a-b3e0-2b5cba26ce60)\n\n\n## Description\nEclipse Jetty is vulnerable to HTTP request smuggling due to the improper parsing of HTTP requests. An attacker could exploit this vulnerability by sending maliciously crafted HTTP requests to a vulnerable endpoint with multiple requests included inside the body by manipulating the `Content-Length` of the request. The smuggling of HTTP requests may allow for the bypass of security tools such as web application firewalls (WAFs) and intrusion detection systems (IDSs).\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [CVE-2023-40167](https://openhub.net/vulnerabilities/bdsa/CVE-2023-40167) - Improper Handling of Length Parameter Inconsistency\n\n\n\n## Solution\nFixed in versions:\n* [**12.0.1**](https://github.com/eclipse/jetty.project/releases/tag/jetty-12.0.1) by [this](https://github.com/eclipse/jetty.project/commit/13cf2dade746e5d3bb123fd7ecd9fdc28fc43082) commit.\n* [**11.0.16**](https://github.com/eclipse/jetty.project/releases/tag/jetty-11.0.16) and [**10.0.16**](https://github.com/eclipse/jetty.project/releases/tag/jetty-10.0.16) by [this](https://github.com/eclipse/jetty.project/commit/003e46cae4d71e147d51fb8ea378e8989d381cc3) commit.\n* [**9.4.52.v20230823**](https://github.com/eclipse/jetty.project/releases/tag/jetty-9.4.52.v20230823) by [this](https://github.com/eclipse/jetty.project/commit/e4d596eafc887bcd813ae6e28295b5ce327def47) commit.\n\nThe latest stable releases can be found [here](https://eclipse.dev/jetty/download.php).\n\n\n\n## Dependency tree\n- org.owasp.webgoat.lesson:xxe:v8.1.0:-maven\n    - com.github.tomakehurst:wiremock:2.8.0\n        - org.eclipse.jetty:jetty-server:9.4.24.v20191120\n            - org.eclipse.jetty:jetty-http:9.4.24.v20191120\n\n\n## References\n* Common Weakness Enumeration: [CWE-130](https://cwe.mitre.org/data/definitions/130.html)\n\n","text":"Eclipse Jetty is vulnerable to HTTP request smuggling due to the improper parsing of HTTP requests. An attacker could exploit this vulnerability by sending maliciously crafted HTTP requests to a vulnerable endpoint with multiple requests included inside the body by manipulating the `Content-Length` of the request. The smuggling of HTTP requests may allow for the bypass of security tools such as web application firewalls (WAFs) and intrusion detection systems (IDSs)."},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-130"]},"defaultConfiguration":{"level":"warning"}},{"id":"CVE-2023-36479 jetty-http 9.4.24.v20191120: wiremock 2.8.0: org.eclipse.jetty","shortDescription":{"text":"Transitive Dependency: jetty-http 9.4.24.v20191120 from wiremock 2.8.0 (CVE-2023-36479)"},"fullDescription":{"text":"Eclipse Jetty contains an improper neutralization of quoting syntax issue within the CGI servlet. This could allow an authenticated attacker to send a request to the CGI Servlet for a binary with a space in its name in order to manipulate the command structure and execute incorrect commands."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| jetty-http 9.4.24.v20191120  | 9.4.53.20231009  | 12.0.5 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/ee93672f-853c-4083-a5e8-0d5ab21e8bf9?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=d8221aaa-7d55-4b5a-b3e0-2b5cba26ce60)\n\n\n## Description\nEclipse Jetty contains an improper neutralization of quoting syntax issue within the CGI servlet. This could allow an authenticated attacker to send a request to the CGI Servlet for a binary with a space in its name in order to manipulate the command structure and execute incorrect commands.\n\n## Vulnerabilities(BDSA,CVE)\n:large_blue_circle: [CVE-2023-36479](https://openhub.net/vulnerabilities/bdsa/CVE-2023-36479) - Improper Neutralization of Quoting Syntax\n\n\n\n## Solution\nFixed in versions:\n* [**12.0.0.beta1**](https://github.com/eclipse/jetty.project/releases/tag/jetty-12.0.0.beta1) by [this](https://github.com/eclipse/jetty.project/commit/6ce5a0fbcdf06ae647dfd304dd81a1f9b0691a5c) commit.\n* [**11.0.16**](https://github.com/eclipse/jetty.project/releases/tag/jetty-11.0.16) and [**10.0.16**](https://github.com/eclipse/jetty.project/releases/tag/jetty-10.0.16) by [this](https://github.com/eclipse/jetty.project/commit/c29491e5ac70c98e4d7d7dff2a6465ddecc45c0c) commit.\n* [**9.4.52.v20230823**](https://github.com/eclipse/jetty.project/releases/tag/jetty-9.4.52.v20230823) by [this](https://github.com/eclipse/jetty.project/commit/ec7e1fd173481e526db4092f558aa2b5aab57580) commit.\n\nThe latest stable releases can be found [here](https://eclipse.dev/jetty/download.php).\n\n## Workaround\nThe vendor has issued the following workaround:\n\n\u003e The` org.eclipse.jetty.servlets.CGI` Servlet should not be used. Fast CGI support is available instead.\n\n## Dependency tree\n- org.owasp.webgoat.lesson:xxe:v8.1.0:-maven\n    - com.github.tomakehurst:wiremock:2.8.0\n        - org.eclipse.jetty:jetty-server:9.4.24.v20191120\n            - org.eclipse.jetty:jetty-http:9.4.24.v20191120\n\n\n## References\n* Common Weakness Enumeration: [CWE-149](https://cwe.mitre.org/data/definitions/149.html)\n\n","text":"Eclipse Jetty contains an improper neutralization of quoting syntax issue within the CGI servlet. This could allow an authenticated attacker to send a request to the CGI Servlet for a binary with a space in its name in order to manipulate the command structure and execute incorrect commands."},"properties":{"security-severity":"3.8","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-149"]},"defaultConfiguration":{"level":"note"}},{"id":"CVE-2023-41900 jetty-http 9.4.24.v20191120: wiremock 2.8.0: org.eclipse.jetty","shortDescription":{"text":"Transitive Dependency: jetty-http 9.4.24.v20191120 from wiremock 2.8.0 (CVE-2023-41900)"},"fullDescription":{"text":"Eclipse Jetty contains an improper authentication vulnerability. This could allow an authenticated attacker to bypass authentication after it has been rejected or revoked by the `LoginService` and make a request as if authenticated.\n\n**Note:** The vendor has stated that this issue impacts usages of the `jetty-openid` which have configured a nested `LoginService` and where that `LoginService` is capable of rejecting previously authenticated users."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| jetty-http 9.4.24.v20191120  | 9.4.53.20231009  | 12.0.5 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/ee93672f-853c-4083-a5e8-0d5ab21e8bf9?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=d8221aaa-7d55-4b5a-b3e0-2b5cba26ce60)\n\n\n## Description\nEclipse Jetty contains an improper authentication vulnerability. This could allow an authenticated attacker to bypass authentication after it has been rejected or revoked by the `LoginService` and make a request as if authenticated.\n\n**Note:** The vendor has stated that this issue impacts usages of the `jetty-openid` which have configured a nested `LoginService` and where that `LoginService` is capable of rejecting previously authenticated users.\n\n## Vulnerabilities(BDSA,CVE)\n:large_blue_circle: [CVE-2023-41900](https://openhub.net/vulnerabilities/bdsa/CVE-2023-41900) - Improper Authentication\n\n\n\n## Solution\nFixed in version [**11.0.15**](https://github.com/eclipse/jetty.project/releases/tag/jetty-11.0.15) and [**10.0.15**](https://github.com/eclipse/jetty.project/releases/tag/jetty-10.0.15) by [this](https://github.com/eclipse/jetty.project/commit/24b7d06fd5ce5468caa3eaa93688879fb2900fda) commit and in [**9.4.52.v20230823**](https://github.com/eclipse/jetty.project/releases/tag/jetty-9.4.52.v20230823) by [this](https://github.com/eclipse/jetty.project/commit/5f48b4170f36b275e1576548b44bd5009feba669) commit.\n\nThe latest stable releases can be found [here](https://eclipse.dev/jetty/download.php).\n\n\n\n## Dependency tree\n- org.owasp.webgoat.lesson:xxe:v8.1.0:-maven\n    - com.github.tomakehurst:wiremock:2.8.0\n        - org.eclipse.jetty:jetty-server:9.4.24.v20191120\n            - org.eclipse.jetty:jetty-http:9.4.24.v20191120\n\n\n## References\n* Common Weakness Enumeration: [CWE-287](https://cwe.mitre.org/data/definitions/287.html)\n\n","text":"Eclipse Jetty contains an improper authentication vulnerability. This could allow an authenticated attacker to bypass authentication after it has been rejected or revoked by the `LoginService` and make a request as if authenticated.\n\n**Note:** The vendor has stated that this issue impacts usages of the `jetty-openid` which have configured a nested `LoginService` and where that `LoginService` is capable of rejecting previously authenticated users."},"properties":{"security-severity":"3.8","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-287"]},"defaultConfiguration":{"level":"note"}},{"id":"CVE-2021-34428 jetty-http 9.4.24.v20191120: wiremock 2.8.0: org.eclipse.jetty","shortDescription":{"text":"Transitive Dependency: jetty-http 9.4.24.v20191120 from wiremock 2.8.0 (CVE-2021-34428)"},"fullDescription":{"text":"Eclipse Jetty is vulnerable to insufficient session expiry. This may result in sessions used on a shared computer persisting for longer than intended."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| jetty-http 9.4.24.v20191120  | 9.4.53.20231009  | 12.0.5 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/ee93672f-853c-4083-a5e8-0d5ab21e8bf9?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=d8221aaa-7d55-4b5a-b3e0-2b5cba26ce60)\n\n\n## Description\nEclipse Jetty is vulnerable to insufficient session expiry. This may result in sessions used on a shared computer persisting for longer than intended.\n\n## Vulnerabilities(BDSA,CVE)\n:large_blue_circle: [CVE-2021-34428](https://openhub.net/vulnerabilities/bdsa/CVE-2021-34428) - Insufficient Session Expiration\n\n\n\n## Solution\nFixed in:\n* [**9.4.41.v20210516**](https://github.com/eclipse/jetty.project/releases/tag/jetty-9.4.41.v20210516) by [this](https://github.com/eclipse/jetty.project/commit/087f486b4461746b4ded45833887b3ccb136ee85) commit, \n* [**10.0.3**](https://github.com/eclipse/jetty.project/releases/tag/jetty-10.0.3) by [this](https://github.com/eclipse/jetty.project/commit/cd6462a6252d083b3c9ea2684aab0b4c9669ed19) commit, \n* [**11.0.3**](https://github.com/eclipse/jetty.project/releases/tag/jetty-11.0.3) by [this](https://github.com/eclipse/jetty.project/commit/cd6462a6252d083b3c9ea2684aab0b4c9669ed19) commit.\n\nThe latest stable releases are available [here](https://github.com/eclipse/jetty.project/releases).\n\n## Workaround\nThe vendor has [stated](https://github.com/eclipse/jetty.project/security/advisories/GHSA-m6cp-vxjx-65j6) that a workaround is to ensure that the application catches all Throwables within their `SessionListener#sessionDestroyed()` implementations.\n\n## Dependency tree\n- org.owasp.webgoat.lesson:xxe:v8.1.0:-maven\n    - com.github.tomakehurst:wiremock:2.8.0\n        - org.eclipse.jetty:jetty-server:9.4.24.v20191120\n            - org.eclipse.jetty:jetty-http:9.4.24.v20191120\n\n\n## References\n* Common Weakness Enumeration: [CWE-613](https://cwe.mitre.org/data/definitions/613.html)\n\n","text":"Eclipse Jetty is vulnerable to insufficient session expiry. This may result in sessions used on a shared computer persisting for longer than intended."},"properties":{"security-severity":"3.8","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-613"]},"defaultConfiguration":{"level":"note"}},{"id":"CVE-2022-2047 jetty-http 9.4.24.v20191120: wiremock 2.8.0: org.eclipse.jetty","shortDescription":{"text":"Transitive Dependency: jetty-http 9.4.24.v20191120 from wiremock 2.8.0 (CVE-2022-2047)"},"fullDescription":{"text":"Eclipse Jetty does not correctly handle invalid authority segments of HTTP URIs. An authenticated attacker could exploit this flaw by passing an invalid URI that contains an improper authority with no host so that it is interpreted as one with a host."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| jetty-http 9.4.24.v20191120  | 9.4.53.20231009  | 12.0.5 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/ee93672f-853c-4083-a5e8-0d5ab21e8bf9?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=d8221aaa-7d55-4b5a-b3e0-2b5cba26ce60)\n\n\n## Description\nEclipse Jetty does not correctly handle invalid authority segments of HTTP URIs. An authenticated attacker could exploit this flaw by passing an invalid URI that contains an improper authority with no host so that it is interpreted as one with a host.\n\n## Vulnerabilities(BDSA,CVE)\n:large_blue_circle: [CVE-2022-2047](https://openhub.net/vulnerabilities/bdsa/CVE-2022-2047) - Weak Input Validation\n\n\n\n## Solution\nFixed in versions:\n* [**9.4.47**](https://github.com/eclipse/jetty.project/releases/tag/jetty-9.4.47.v20220610) by [this](https://github.com/eclipse/jetty.project/commit/4ca8afbbd667c19a084d5ff14a4f08eb7049d1c7) commit.\n* [**10.0.10**](https://github.com/eclipse/jetty.project/releases/tag/jetty-10.0.10) and [**11.0.10**](https://github.com/eclipse/jetty.project/releases/tag/jetty-11.0.10) by [this](https://github.com/eclipse/jetty.project/commit/d1e64f469362bb9371d530cccded5ecb13fa1cb5) commit.\n\nThe latest stable releases can be found [here](https://github.com/eclipse/jetty.project/releases).\n\n\n\n## Dependency tree\n- org.owasp.webgoat.lesson:xxe:v8.1.0:-maven\n    - com.github.tomakehurst:wiremock:2.8.0\n        - org.eclipse.jetty:jetty-server:9.4.24.v20191120\n            - org.eclipse.jetty:jetty-http:9.4.24.v20191120\n\n\n## References\n* Common Weakness Enumeration: [CWE-20](https://cwe.mitre.org/data/definitions/20.html)\n\n","text":"Eclipse Jetty does not correctly handle invalid authority segments of HTTP URIs. An authenticated attacker could exploit this flaw by passing an invalid URI that contains an improper authority with no host so that it is interpreted as one with a host."},"properties":{"security-severity":"3.8","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-20"]},"defaultConfiguration":{"level":"note"}},{"id":"CVE-2020-17521 groovy-json 2.5.8: rest-assured 3.3.0: org.codehaus.groovy","shortDescription":{"text":"Transitive Dependency: groovy-json 2.5.8 from rest-assured 3.3.0 (CVE-2020-17521)"},"fullDescription":{"text":"Apache Groovy is vulnerable to privilege escalation and information exposure due to inappropriate use of an insecure JDK method. A local attacker could exploit this vulnerability by supplying a system with maliciously crafted input."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| groovy-json 2.5.8  | 2.5.23  | 3.0.20 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/2753baae-27d4-436c-b4f8-04fa18e1a849?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=81f45bb9-9c2e-4a23-be4b-2a85101048a1)\n\n\n## Description\nApache Groovy is vulnerable to privilege escalation and information exposure due to inappropriate use of an insecure JDK method. A local attacker could exploit this vulnerability by supplying a system with maliciously crafted input.\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [CVE-2020-17521](https://openhub.net/vulnerabilities/bdsa/CVE-2020-17521) - Sensitive Data Exposure\n\n\n\n## Solution\nFixed in:\n* [**2.4.21**](https://github.com/apache/groovy/releases/tag/GROOVY_2_4_21) by [this](https://github.com/apache/groovy/commit/4e418d4a34c973a7ec1e822552103043ac13780e) commit,\n* [**2.5.14**](https://github.com/apache/groovy/releases/tag/GROOVY_2_5_14) by [this](https://github.com/apache/groovy/commit/98dc5d713926cd81b006c510a1546ccd520fe17f) commit,\n* [**3.0.7**](https://github.com/apache/groovy/releases/tag/GROOVY_3_0_7) by [this](https://github.com/apache/groovy/commit/f069c35c4bbaf68547c76381509d59840a7ed32d) commit,\n* [**4.0.0-alpha-2**](https://github.com/apache/groovy/releases/tag/GROOVY_4_0_0_ALPHA_2) by [this](https://github.com/apache/groovy/commit/bcbe5c4c76db83736166530647c024ac1e47ef28) commit.\n\nNote: the vendor states that the fix for **2.4**, when Groovy is running on a pre-JDK7 version of the JDK, eliminates the risk of privilege escalation but still leaves the potential for sensitive information leakage. The vendor recommends applying the following mitigation for **2.4**/pre-JDK7 users:\n\u003e Set the `java.io.tmpdir` system environment variable to a directory that is exclusively owned by the executing user.\n\n\n\n## Dependency tree\n- org.owasp.webgoat:webgoat-integration-tests:v8.1.0:-maven\n    - io.rest-assured:rest-assured:3.3.0\n        - io.rest-assured:json-path:3.3.0\n            - org.codehaus.groovy:groovy-json:2.5.8\n\n\n## References\n* Common Weakness Enumeration: [CWE-200](https://cwe.mitre.org/data/definitions/200.html)\n* Common Weakness Enumeration: [CWE-379](https://cwe.mitre.org/data/definitions/379.html)\n\n","text":"Apache Groovy is vulnerable to privilege escalation and information exposure due to inappropriate use of an insecure JDK method. A local attacker could exploit this vulnerability by supplying a system with maliciously crafted input."},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-200","external/cwe/cwe-379"]},"defaultConfiguration":{"level":"warning"}},{"id":"BDSA-2021-2110 jakarta.el 3.0.3: spring-boot-starter-undertow 2.2.2.RELEASE: org.glassfish","shortDescription":{"text":"Transitive Dependency: jakarta.el 3.0.3 from spring-boot-starter-undertow 2.2.2.RELEASE (BDSA-2021-2110)"},"fullDescription":{"text":"Jakarta Expression Language is vulnerable to remote code execution (RCE) due to a bug that enables invalid expressions to be evaluated as if they were valid. Applications that evaluate user-supplied expressions in error messages are vulnerable to arbitrary code execution."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| jakarta.el 3.0.3  | 3.0.4  | 4.0.2 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/8cc4ef37-cefd-45e0-a0ed-4c64e5724dc1?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=b7d78273-bfaf-4273-9fda-f6416dc0db2e)\n\n\n## Description\nJakarta Expression Language is vulnerable to remote code execution (RCE) due to a bug that enables invalid expressions to be evaluated as if they were valid. Applications that evaluate user-supplied expressions in error messages are vulnerable to arbitrary code execution.\n\n## Vulnerabilities(BDSA,CVE)\n:orange_circle: [BDSA-2021-2110](https://openhub.net/vulnerabilities/bdsa/BDSA-2021-2110) - Improper Neutralization of Expression/Command Delimiters\n\n\n\n## Solution\nFixed in:\n* [**3.0.4-impl**](https://github.com/eclipse-ee4j/el-ri/releases/tag/3.0.4-impl) by [this](https://github.com/eclipse-ee4j/el-ri/commit/c76b9e6) commit\n* [**4.0.2-impl**](https://github.com/eclipse-ee4j/el-ri/releases/tag/4.0.2-impl) by [this](https://github.com/eclipse-ee4j/el-ri/commit/de73c2b) commit\n* [**5.0.0-M1-RELEASE-api**](https://github.com/eclipse-ee4j/el-ri/releases/tag/5.0.0-M1-RELEASE-api) by [this](https://github.com/eclipse-ee4j/el-ri/commit/fe0c60b) commit\n\n## Workaround\nFixed in [**3.0.3-jbossorg3**](https://github.com/jbossas/el-ri/releases/tag/3.0.3.jbossorg-3) by [this](https://github.com/jbossas/el-ri/commit/cc774521f21606ae256ffa4b293d196aec957042) commit.\n\n**Note:** this fixed release is offered by the maintainers of JBoss products.\n\n## Dependency tree\n- org.owasp.webgoat:webgoat-container:v8.1.0:-maven\n    - org.springframework.boot:spring-boot-starter-undertow:2.2.2.RELEASE\n        - org.glassfish:jakarta.el:3.0.3\n\n\n## References\n* Common Weakness Enumeration: [CWE-146](https://cwe.mitre.org/data/definitions/146.html)\n\n","text":"Jakarta Expression Language is vulnerable to remote code execution (RCE) due to a bug that enables invalid expressions to be evaluated as if they were valid. Applications that evaluate user-supplied expressions in error messages are vulnerable to arbitrary code execution."},"properties":{"security-severity":"8.9","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-146"]},"defaultConfiguration":{"level":"error"}},{"id":"CVE-2020-27216 jetty-util 9.4.24.v20191120: wiremock 2.8.0: org.eclipse.jetty","shortDescription":{"text":"Transitive Dependency: jetty-util 9.4.24.v20191120 from wiremock 2.8.0 (CVE-2020-27216)"},"fullDescription":{"text":"Jetty is vulnerable to temporary directory Hijacking via a race condition. If code is executed from this temporary directory it can lead to local privilege escalation."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| jetty-util 9.4.24.v20191120  | 9.4.53.20231009  | 12.0.5 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/ee93672f-853c-4083-a5e8-0d5ab21e8bf9?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=d8221aaa-7d55-4b5a-b3e0-2b5cba26ce60)\n\n\n## Description\nJetty is vulnerable to temporary directory Hijacking via a race condition. If code is executed from this temporary directory it can lead to local privilege escalation.\n\n## Vulnerabilities(BDSA,CVE)\n:orange_circle: [CVE-2020-27216](https://openhub.net/vulnerabilities/bdsa/CVE-2020-27216) - Race Condition due to Improper Synchronization\n\n\n\n## Solution\nFixed in:\n* [**11.0.0.beta3**](https://github.com/eclipse/jetty.project/releases/tag/jetty-11.0.0.beta3)\n* [**10.0.0.beta3**](https://github.com/eclipse/jetty.project/releases/tag/jetty-10.0.0.beta3) \n* [**9.4.33.v20201020**](https://github.com/eclipse/jetty.project/releases/tag/jetty-9.4.33.v20201020) by [this](https://github.com/eclipse/jetty.project/commit/53e0e0e9b25a6309bf24ee3b10984f4145701edb) commit and [this](https://github.com/eclipse/jetty.project/commit/9ad6beb80543b392c91653f6bfce233fc75b9d5f) commit.\n\n## Workaround\nSet a temporary directory, either for the server or the context, to one outside the shared temporary file system. For recent releases, a temporary directory by created by making a directory called work in the `${jetty.base}` directory (the parent directory of the webapps directory). Alternately the java temporary directory can be set with the System Property `java.io.tmpdir`. A more detailed description of how jetty selects a temporary directory is below.\n\nTo mitigate this vulnerability the directory must be set to one that is not writable by an attacker. To avoid information leakage, the directory should also not be readable by an attacker.\n\n## Dependency tree\n- org.owasp.webgoat.lesson:xxe:v8.1.0:-maven\n    - com.github.tomakehurst:wiremock:2.8.0\n        - org.eclipse.jetty:jetty-servlets:9.4.24.v20191120\n            - org.eclipse.jetty:jetty-util:9.4.24.v20191120\n\n\n## References\n* Common Weakness Enumeration: [CWE-362](https://cwe.mitre.org/data/definitions/362.html)\n\n","text":"Jetty is vulnerable to temporary directory Hijacking via a race condition. If code is executed from this temporary directory it can lead to local privilege escalation."},"properties":{"security-severity":"8.9","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-362"]},"defaultConfiguration":{"level":"error"}},{"id":"CVE-2023-44487 jetty-util 9.4.24.v20191120: wiremock 2.8.0: org.eclipse.jetty","shortDescription":{"text":"Transitive Dependency: jetty-util 9.4.24.v20191120 from wiremock 2.8.0 (CVE-2023-44487)"},"fullDescription":{"text":"The HTTP/2 protocol contains a flaw related to the stream multiplexing feature that can allow for excessive resource consumption on servers operating implementations of the HTTP/2 protocol. \n\nThe HTTP/2 protocol allows clients to signal to a server to cancel a previously opened stream by sending an `RST_STREAM` frame. Attackers can abuse this stream canceling ability by opening a large number of streams at once immediately followed by `RST_STREAM` frames. In most HTTP/2 implementations this bypasses concurrent open stream limits and causes servers to spend processing time first handling request frames and then performing stream tear downs. For the server, these operations can pile up whereas the attacker client paid minuscule bandwidth and processing costs.\n\n[Amazon](https://aws.amazon.com/security/security-bulletins/AWS-2023-011/), [Cloudflare](https://blog.cloudflare.com/technical-breakdown-http2-rapid-reset-ddos-attack/) and [Google](https://cloud.google.com/blog/products/identity-security/google-cloud-mitigated-largest-ddos-attack-peaking-above-398-million-rps/) have reported that this vulnerability has been exploited in the wild from August to October 2023.\n\nThis vulnerability is listed as exploitable by the Cybersecurity \u0026 Infrastructure Security Agency in their [Known Exploited Vulnerabilities Catalog](https://www.cisa.gov/known-exploited-vulnerabilities-catalog)."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| jetty-util 9.4.24.v20191120  | 9.4.53.20231009  | 12.0.5 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/ee93672f-853c-4083-a5e8-0d5ab21e8bf9?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=d8221aaa-7d55-4b5a-b3e0-2b5cba26ce60)\n\n\n## Description\nThe HTTP/2 protocol contains a flaw related to the stream multiplexing feature that can allow for excessive resource consumption on servers operating implementations of the HTTP/2 protocol. \n\nThe HTTP/2 protocol allows clients to signal to a server to cancel a previously opened stream by sending an `RST_STREAM` frame. Attackers can abuse this stream canceling ability by opening a large number of streams at once immediately followed by `RST_STREAM` frames. In most HTTP/2 implementations this bypasses concurrent open stream limits and causes servers to spend processing time first handling request frames and then performing stream tear downs. For the server, these operations can pile up whereas the attacker client paid minuscule bandwidth and processing costs.\n\n[Amazon](https://aws.amazon.com/security/security-bulletins/AWS-2023-011/), [Cloudflare](https://blog.cloudflare.com/technical-breakdown-http2-rapid-reset-ddos-attack/) and [Google](https://cloud.google.com/blog/products/identity-security/google-cloud-mitigated-largest-ddos-attack-peaking-above-398-million-rps/) have reported that this vulnerability has been exploited in the wild from August to October 2023.\n\nThis vulnerability is listed as exploitable by the Cybersecurity \u0026 Infrastructure Security Agency in their [Known Exploited Vulnerabilities Catalog](https://www.cisa.gov/known-exploited-vulnerabilities-catalog).\n\n## Vulnerabilities(BDSA,CVE)\n:orange_circle: [CVE-2023-44487](https://openhub.net/vulnerabilities/bdsa/CVE-2023-44487) - Uncontrolled Resource Consumption\n\n\n\n## Solution\nFixed in:\n* nghttp2 [**1.57.0**](https://github.com/nghttp2/nghttp2/releases/tag/v1.57.0) by [this](https://github.com/nghttp2/nghttp2/commit/72b4af6143681f528f1d237b21a9a7aee1738832) commit,\n* NGINX [**1.25.3**](https://hg.nginx.org/nginx/rev/release-1.25.3) by [this](https://hg.nginx.org/nginx/rev/cdda286c0f1b) revision,\n* Apache Tomcat \n\t* [**8.5.94**](https://github.com/apache/tomcat/releases/tag/8.5.94) by [this](https://github.com/apache/tomcat/commit/944332bb15bd2f3bf76ec2caeb1ff0a58a3bc628) commit,\n\t* [**9.0.81**](https://github.com/apache/tomcat/releases/tag/9.0.81) by [this](https://github.com/apache/tomcat/commit/6d1a9fd6642387969e4410b9989c85856b74917a) commit,\n\t* [**10.1.14**](https://github.com/apache/tomcat/releases/tag/10.1.14) by [this](https://github.com/apache/tomcat/commit/76bb4bfbfeae827dce896f650655bbf6e251ed49) commit,\n\t* [**11.0.0-M12**](https://github.com/apache/tomcat/releases/tag/11.0.0-M12) by [this](https://github.com/apache/tomcat/commit/9cdfe25bad707f34b3e5da2994f3f1952a163c3e) commit,\n* Apache Traffic Server\n\t* [**9.2.3-rc0**](https://github.com/apache/trafficserver/releases/tag/9.2.3-rc0) by [this](https://github.com/apache/trafficserver/commit/b28ad74f117307e8de206f1de70c3fa716f90682) commit,\n\t* [**8.1.9-rc0**](https://github.com/apache/trafficserver/releases/tag/8.1.9-rc0) by [this](https://github.com/apache/trafficserver/commit/d742d74039aaa548dda0148ab4ba207906abc620) commit,\n* Netty/Codec/HTTP2 [**4.1.100.Final**](https://mvnrepository.com/artifact/io.netty/netty-codec-http2/4.1.100.Final) by [this](https://github.com/netty/netty/commit/58f75f665aa81a8cbcf6ffa74820042a285c5e61) commit,\n* Eclipse Jetty\n\t* [**12.0.2**](https://github.com/jetty/jetty.project/releases/tag/jetty-12.0.2), [**11.0.17**](https://github.com/jetty/jetty.project/releases/tag/jetty-11.0.17), [**10.0.17**](https://github.com/jetty/jetty.project/releases/tag/jetty-10.0.17) by [this](https://github.com/jetty/jetty.project/commit/dbb94514dc9d3fb21fe92080f57c314e7e06a148) commit,\n\t* [**9.4.53.v20231009**](https://github.com/jetty/jetty.project/releases/tag/jetty-9.4.53.v20231009) by [this](https://github.com/jetty/jetty.project/commit/0f246d12090fb15b7b21dee8429f459fd792de53) commit.\n* lighttpd [**1.4.73**](https://github.com/lighttpd/lighttpd1.4/releases/tag/lighttpd-1.4.73) by [this](https://github.com/lighttpd/lighttpd1.4/commit/7b48f3c843e1113b27f5d278f4d10861cc499a06) commit.\n* grpc-go \n  * [**1.56.3**](https://github.com/grpc/grpc-go/releases/tag/v1.56.3) by [this](https://github.com/grpc/grpc-go/commit/5efd7bd7) commit,\n  * [**1.57.1**](https://github.com/grpc/grpc-go/releases/tag/v1.57.1) by [this](https://github.com/grpc/grpc-go/commit/6a1400d5) commit,\n  * [**1.58.3**](https://github.com/grpc/grpc-go/releases/tag/v1.58.3) by [this](https://github.com/grpc/grpc-go/commit/c40c9ba3) commit,\n * h2o fixed in the **master** branch by [this](https://github.com/h2o/h2o/commit/28fe15117b909588bf14269a0e1c6ec4548579fe) commit which is not yet included in any release.\n\n## Workaround\nDepending on technologies use and their configuration, different mitigation strategies may be available.\n\nIn some cases, it may be possible to limit the amount of `RST_STREAM` frame frames that are processed within a given time by configuring the particular HTTP/2 implementation manually. Please refer to your software vendor's advisories for more information.\n\n## Dependency tree\n- org.owasp.webgoat.lesson:xxe:v8.1.0:-maven\n    - com.github.tomakehurst:wiremock:2.8.0\n        - org.eclipse.jetty:jetty-servlets:9.4.24.v20191120\n            - org.eclipse.jetty:jetty-util:9.4.24.v20191120\n\n\n## References\n* Common Weakness Enumeration: [CWE-400](https://cwe.mitre.org/data/definitions/400.html)\n\n","text":"The HTTP/2 protocol contains a flaw related to the stream multiplexing feature that can allow for excessive resource consumption on servers operating implementations of the HTTP/2 protocol. \n\nThe HTTP/2 protocol allows clients to signal to a server to cancel a previously opened stream by sending an `RST_STREAM` frame. Attackers can abuse this stream canceling ability by opening a large number of streams at once immediately followed by `RST_STREAM` frames. In most HTTP/2 implementations this bypasses concurrent open stream limits and causes servers to spend processing time first handling request frames and then performing stream tear downs. For the server, these operations can pile up whereas the attacker client paid minuscule bandwidth and processing costs.\n\n[Amazon](https://aws.amazon.com/security/security-bulletins/AWS-2023-011/), [Cloudflare](https://blog.cloudflare.com/technical-breakdown-http2-rapid-reset-ddos-attack/) and [Google](https://cloud.google.com/blog/products/identity-security/google-cloud-mitigated-largest-ddos-attack-peaking-above-398-million-rps/) have reported that this vulnerability has been exploited in the wild from August to October 2023.\n\nThis vulnerability is listed as exploitable by the Cybersecurity \u0026 Infrastructure Security Agency in their [Known Exploited Vulnerabilities Catalog](https://www.cisa.gov/known-exploited-vulnerabilities-catalog)."},"properties":{"security-severity":"8.9","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-400"]},"defaultConfiguration":{"level":"error"}},{"id":"CVE-2020-27223 jetty-util 9.4.24.v20191120: wiremock 2.8.0: org.eclipse.jetty","shortDescription":{"text":"Transitive Dependency: jetty-util 9.4.24.v20191120 from wiremock 2.8.0 (CVE-2020-27223)"},"fullDescription":{"text":"Jetty is vulnerable to denial-of-service (DoS) due to the use of an exponential algorithm that can have excessive resource requirements. A remote attacker could cause a vulnerable server to become unresponsive by sending maliciously crafted HTTP requests to that server."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| jetty-util 9.4.24.v20191120  | 9.4.53.20231009  | 12.0.5 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/ee93672f-853c-4083-a5e8-0d5ab21e8bf9?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=d8221aaa-7d55-4b5a-b3e0-2b5cba26ce60)\n\n\n## Description\nJetty is vulnerable to denial-of-service (DoS) due to the use of an exponential algorithm that can have excessive resource requirements. A remote attacker could cause a vulnerable server to become unresponsive by sending maliciously crafted HTTP requests to that server.\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [CVE-2020-27223](https://openhub.net/vulnerabilities/bdsa/CVE-2020-27223) - Inefficient Algorithmic Complexity\n\n\n\n## Solution\nFixed by [this](https://github.com/eclipse/jetty.project/commit/10e531756b972162eed402c44d0244f7f6b85131) commit in:\n* [**11.0.1**](https://github.com/eclipse/jetty.project/releases/tag/jetty-11.0.1)\n* [**10.0.1**](https://github.com/eclipse/jetty.project/releases/tag/jetty-10.0.1)\n* [**9.4.37.v20210219**](https://github.com/eclipse/jetty.project/releases/tag/jetty-9.4.37.v20210219)\n\nThe latest stable releases are available [here](https://github.com/eclipse/jetty.project/releases).\n\n## Workaround\nThe vendor has stated that the following workarounds are effective:\n\n* Don't use the default error page or handler.\n* Don't deploy an instance of `StatisticsServlet` that is exposed to the network.\n* Don't call the `getLocale` API.\n* Don't enable precompressed static content in instances of `DefaultServlet`.\n* Deploy a rule that limits the number and size of `Accept-*` header fields.\n\n## Dependency tree\n- org.owasp.webgoat.lesson:xxe:v8.1.0:-maven\n    - com.github.tomakehurst:wiremock:2.8.0\n        - org.eclipse.jetty:jetty-servlets:9.4.24.v20191120\n            - org.eclipse.jetty:jetty-util:9.4.24.v20191120\n\n\n## References\n* Common Weakness Enumeration: [CWE-407](https://cwe.mitre.org/data/definitions/407.html)\n\n","text":"Jetty is vulnerable to denial-of-service (DoS) due to the use of an exponential algorithm that can have excessive resource requirements. A remote attacker could cause a vulnerable server to become unresponsive by sending maliciously crafted HTTP requests to that server."},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-407"]},"defaultConfiguration":{"level":"warning"}},{"id":"CVE-2021-28165 jetty-util 9.4.24.v20191120: wiremock 2.8.0: org.eclipse.jetty","shortDescription":{"text":"Transitive Dependency: jetty-util 9.4.24.v20191120 from wiremock 2.8.0 (CVE-2021-28165)"},"fullDescription":{"text":"Eclipse Jetty is vulnerable to Denial-of-Service (DoS) via invalid TLS frames. An attacker could exploit this by sending a TLS frame with a size in excess of 17408 resulting in excessive resource consumption leading to a DoS condition."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| jetty-util 9.4.24.v20191120  | 9.4.53.20231009  | 12.0.5 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/ee93672f-853c-4083-a5e8-0d5ab21e8bf9?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=d8221aaa-7d55-4b5a-b3e0-2b5cba26ce60)\n\n\n## Description\nEclipse Jetty is vulnerable to Denial-of-Service (DoS) via invalid TLS frames. An attacker could exploit this by sending a TLS frame with a size in excess of 17408 resulting in excessive resource consumption leading to a DoS condition.\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [CVE-2021-28165](https://openhub.net/vulnerabilities/bdsa/CVE-2021-28165) - Uncontrolled Resource Consumption\n\n\n\n## Solution\nFixed in [**10.0.2**](https://github.com/eclipse/jetty.project/releases/tag/jetty-10.0.2) and [**11.0.2**](https://github.com/eclipse/jetty.project/releases/tag/jetty-11.0.2) by [this](https://github.com/eclipse/jetty.project/commit/be22761a20a1685365c8e0356bf09b47e574cfd9) and [this](https://github.com/eclipse/jetty.project/commit/039c7386d0f3087d7c8aa19ea6001b24c95b9f16) commit.\nFixed in [**9.4.39.v20210325**](https://github.com/eclipse/jetty.project/releases/tag/jetty-9.4.39.v20210325) by [this](https://github.com/eclipse/jetty.project/commit/00d379c94ba865dced2025c2d1bc3e2e0e41e880) and [this](https://github.com/eclipse/jetty.project/commit/294b2ba02b667548617a94cd99592110ac230add) commit. \n\nThe latest stable releases are available [here](https://github.com/eclipse/jetty.project/releases).\n\n## Workaround\nThe problem can be worked around by compiling the following class:\n```\npackage org.eclipse.jetty.server.ssl.fix6072;\n\nimport java.nio.ByteBuffer;\nimport javax.net.ssl.SSLEngine;\nimport javax.net.ssl.SSLEngineResult;\nimport javax.net.ssl.SSLException;\nimport javax.net.ssl.SSLHandshakeException;\n\nimport org.eclipse.jetty.io.EndPoint;\nimport org.eclipse.jetty.io.ssl.SslConnection;\nimport org.eclipse.jetty.server.Connector;\nimport org.eclipse.jetty.server.SslConnectionFactory;\nimport org.eclipse.jetty.util.BufferUtil;\nimport org.eclipse.jetty.util.annotation.Name;\nimport org.eclipse.jetty.util.ssl.SslContextFactory;\n\npublic class SpaceCheckingSslConnectionFactory extends SslConnectionFactory\n{\n    public SpaceCheckingSslConnectionFactory(@Name(\"sslContextFactory\") SslContextFactory factory, @Name(\"next\") String nextProtocol)\n    {\n        super(factory, nextProtocol);\n    }\n\n    @Override\n    protected SslConnection newSslConnection(Connector connector, EndPoint endPoint, SSLEngine engine)\n    {\n        return new SslConnection(connector.getByteBufferPool(), connector.getExecutor(), endPoint, engine, isDirectBuffersForEncryption(), isDirectBuffersForDecryption())\n        {\n            @Override\n            protected SSLEngineResult unwrap(SSLEngine sslEngine, ByteBuffer input, ByteBuffer output) throws SSLException\n            {\n                SSLEngineResult results = super.unwrap(sslEngine, input, output);\n\n                if ((results.getStatus() == SSLEngineResult.Status.BUFFER_UNDERFLOW ||\n                    results.getStatus() == SSLEngineResult.Status.OK \u0026\u0026 results.bytesConsumed() == 0 \u0026\u0026 results.bytesProduced() == 0) \u0026\u0026\n                    BufferUtil.space(input) == 0)\n                {\n                    BufferUtil.clear(input);\n                    throw new SSLHandshakeException(\"Encrypted buffer max length exceeded\");\n                }\n                return results;\n            }\n        };\n    }\n}\n```\n\nThis class can be deployed by:\n* The resulting class file should be put into a jar file (eg `sslfix6072.jar`)\n* The jar file should be made available to the server. For a normal distribution this can be done by putting the file into `${jetty.base}/lib`\n* Copy the file `${jetty.home}/modules/ssl.mod` to `${jetty.base}/modules`\n* Edit the `${jetty.base}/modules/ssl.mod` file to have the following section:\n```\n[lib]\nlib/sslfix6072.jar\n```\n\n* Copy the file `${jetty.home}/etc/jetty-https.xml` and `${jetty.home}/etc/jetty-http2.xml` to `${jetty.base}/etc`\n* Edit files `${jetty.base}/etc/jetty-https.xml` and `${jetty.base}/etc/jetty-http2.xml`, changing any reference of `org.eclipse.jetty.server.SslConnectionFactory` to `org.eclipse.jetty.server.ssl.fix6072.SpaceCheckingSslConnectionFactory`. \n\nFor example:\n```\n  \u003cCall name=\"addIfAbsentConnectionFactory\"\u003e\n    \u003cArg\u003e\n      \u003cNew class=\"org.eclipse.jetty.server.ssl.fix6072.SpaceCheckingSslConnectionFactory\"\u003e\n        \u003cArg name=\"next\"\u003ehttp/1.1\u003c/Arg\u003e\n        \u003cArg name=\"sslContextFactory\"\u003e\u003cRef refid=\"sslContextFactory\"/\u003e\u003c/Arg\u003e\n      \u003c/New\u003e\n    \u003c/Arg\u003e\n  \u003c/Call\u003e\n```\nRestart Jetty\n\n## Dependency tree\n- org.owasp.webgoat.lesson:xxe:v8.1.0:-maven\n    - com.github.tomakehurst:wiremock:2.8.0\n        - org.eclipse.jetty:jetty-servlets:9.4.24.v20191120\n            - org.eclipse.jetty:jetty-util:9.4.24.v20191120\n\n\n## References\n* Common Weakness Enumeration: [CWE-400](https://cwe.mitre.org/data/definitions/400.html)\n\n","text":"Eclipse Jetty is vulnerable to Denial-of-Service (DoS) via invalid TLS frames. An attacker could exploit this by sending a TLS frame with a size in excess of 17408 resulting in excessive resource consumption leading to a DoS condition."},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-400"]},"defaultConfiguration":{"level":"warning"}},{"id":"CVE-2021-28169 jetty-util 9.4.24.v20191120: wiremock 2.8.0: org.eclipse.jetty","shortDescription":{"text":"Transitive Dependency: jetty-util 9.4.24.v20191120 from wiremock 2.8.0 (CVE-2021-28169)"},"fullDescription":{"text":"Jetty is vulnerable to information disclosure due to improper requested path verification. This allows crafted requests to access protected resources of the web application which, depending on the implementation, might reveal sensitive information."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| jetty-util 9.4.24.v20191120  | 9.4.53.20231009  | 12.0.5 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/ee93672f-853c-4083-a5e8-0d5ab21e8bf9?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=d8221aaa-7d55-4b5a-b3e0-2b5cba26ce60)\n\n\n## Description\nJetty is vulnerable to information disclosure due to improper requested path verification. This allows crafted requests to access protected resources of the web application which, depending on the implementation, might reveal sensitive information.\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [CVE-2021-28169](https://openhub.net/vulnerabilities/bdsa/CVE-2021-28169) - Directory Traversal\n\n\n\n## Solution\nFixed in [**9.4.41**](https://github.com/eclipse/jetty.project/releases/tag/jetty-9.4.41.v20210512) by [this](https://github.com/eclipse/jetty.project/commit/1c05b0bcb1) commit.\n\nFixed in [**10.0.3**](https://github.com/eclipse/jetty.project/releases/tag/jetty-10.0.3) and [**11.0.3**](https://github.com/eclipse/jetty.project/releases/tag/jetty-11.0.3) by [this](https://github.com/eclipse/jetty.project/commit/f58dbedcd0) commit.\n\nThe latest stable releases are available [here](https://www.eclipse.org/jetty/download.php).\n\n## Workaround\nThe vendor provides the following workaround:\n\nIf you cannot update to the latest version of Jetty, you can instead deploy your own version of the `ConcatServlet` and/or the `WelcomeFilter` by using the code from the latest version of Jetty.\n\n## Dependency tree\n- org.owasp.webgoat.lesson:xxe:v8.1.0:-maven\n    - com.github.tomakehurst:wiremock:2.8.0\n        - org.eclipse.jetty:jetty-servlets:9.4.24.v20191120\n            - org.eclipse.jetty:jetty-util:9.4.24.v20191120\n\n\n## References\n* Common Weakness Enumeration: [CWE-22](https://cwe.mitre.org/data/definitions/22.html)\n\n","text":"Jetty is vulnerable to information disclosure due to improper requested path verification. This allows crafted requests to access protected resources of the web application which, depending on the implementation, might reveal sensitive information."},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-22"]},"defaultConfiguration":{"level":"warning"}},{"id":"CVE-2023-36478 jetty-util 9.4.24.v20191120: wiremock 2.8.0: org.eclipse.jetty","shortDescription":{"text":"Transitive Dependency: jetty-util 9.4.24.v20191120 from wiremock 2.8.0 (CVE-2023-36478)"},"fullDescription":{"text":"Eclipse Jetty is vulnerable to a denial-of-service (DoS) issue due to presence of a user input validation flaw in the HTTP/2 HPACK functionality that can lead to an integer overflow and allow HPACK headers to exceed their expected size limits.\n\nAn attacker could submit crafted HTTP messages that trigger the integer overflow flaw and cause large buffers to be allocated on the server, consuming memory resources in a manner that could cause the server to run out of memory."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| jetty-util 9.4.24.v20191120  | 9.4.53.20231009  | 12.0.5 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/ee93672f-853c-4083-a5e8-0d5ab21e8bf9?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=d8221aaa-7d55-4b5a-b3e0-2b5cba26ce60)\n\n\n## Description\nEclipse Jetty is vulnerable to a denial-of-service (DoS) issue due to presence of a user input validation flaw in the HTTP/2 HPACK functionality that can lead to an integer overflow and allow HPACK headers to exceed their expected size limits.\n\nAn attacker could submit crafted HTTP messages that trigger the integer overflow flaw and cause large buffers to be allocated on the server, consuming memory resources in a manner that could cause the server to run out of memory.\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [CVE-2023-36478](https://openhub.net/vulnerabilities/bdsa/CVE-2023-36478) - Integer Overflow / Underflow\n\n\n\n## Solution\nFixed in:\n* [**9.4.53.v20231009**](https://github.com/jetty/jetty.project/releases/tag/jetty-9.4.53.v20231009) by [this](https://github.com/jetty/jetty.project/commit/c7a4b05fc735e73e7522cb617c079045b709957b) commit and [this](https://github.com/jetty/jetty.project/commit/a4d61e9eb026ec98c79107e840cabdf520482c56) commit,\n* [**10.0.16**](https://github.com/jetty/jetty.project/releases/tag/jetty-10.0.16), [**11.0.16**](https://github.com/jetty/jetty.project/releases/tag/jetty-11.0.16) and [**12.0.0.beta2x**](https://github.com/jetty/jetty.project/releases/tag/jetty-12.0.0.beta2x) by [this](https://github.com/jetty/jetty.project/commit/a8c9eea75bffcb2b2557acefb75856707654a56f) commit and [this](https://github.com/jetty/jetty.project/commit/420ec7cc1db65b42693dc002aca0faa567f62f7e) commit.\n\nThe latest stable releases can be found [here](https://eclipse.dev/jetty/download.php).\n\n\n\n## Dependency tree\n- org.owasp.webgoat.lesson:xxe:v8.1.0:-maven\n    - com.github.tomakehurst:wiremock:2.8.0\n        - org.eclipse.jetty:jetty-servlets:9.4.24.v20191120\n            - org.eclipse.jetty:jetty-util:9.4.24.v20191120\n\n\n## References\n* Common Weakness Enumeration: [CWE-190](https://cwe.mitre.org/data/definitions/190.html)\n* Common Weakness Enumeration: [CWE-400](https://cwe.mitre.org/data/definitions/400.html)\n\n","text":"Eclipse Jetty is vulnerable to a denial-of-service (DoS) issue due to presence of a user input validation flaw in the HTTP/2 HPACK functionality that can lead to an integer overflow and allow HPACK headers to exceed their expected size limits.\n\nAn attacker could submit crafted HTTP messages that trigger the integer overflow flaw and cause large buffers to be allocated on the server, consuming memory resources in a manner that could cause the server to run out of memory."},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-190","external/cwe/cwe-400"]},"defaultConfiguration":{"level":"warning"}},{"id":"CVE-2022-2048 jetty-util 9.4.24.v20191120: wiremock 2.8.0: org.eclipse.jetty","shortDescription":{"text":"Transitive Dependency: jetty-util 9.4.24.v20191120 from wiremock 2.8.0 (CVE-2022-2048)"},"fullDescription":{"text":"Eclipse Jetty does not correctly handle invalid HTTP/2 requests. An attacker could exploit this flaw to exhaust the HTTP/2 flow control window or TCP congest the connection. This will cause the relevant selector threads to be blocked and it will lead to a denial-of-service (DoS)."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| jetty-util 9.4.24.v20191120  | 9.4.53.20231009  | 12.0.5 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/ee93672f-853c-4083-a5e8-0d5ab21e8bf9?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=d8221aaa-7d55-4b5a-b3e0-2b5cba26ce60)\n\n\n## Description\nEclipse Jetty does not correctly handle invalid HTTP/2 requests. An attacker could exploit this flaw to exhaust the HTTP/2 flow control window or TCP congest the connection. This will cause the relevant selector threads to be blocked and it will lead to a denial-of-service (DoS).\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [CVE-2022-2048](https://openhub.net/vulnerabilities/bdsa/CVE-2022-2048) - Insufficient Resource Pool\n\n\n\n## Solution\nFixed in:\n* **[9.4.47](https://github.com/eclipse/jetty.project/releases/tag/jetty-9.4.47.v20220610)** by [this](https://github.com/eclipse/jetty.project/commit/be912d4315839405a8ae601f2e4ee0306867266e) commit,\n* **[10.0.10](https://github.com/eclipse/jetty.project/releases/tag/jetty-10.0.10)** and **[11.0.10](https://github.com/eclipse/jetty.project/releases/tag/jetty-11.0.10)** by [this](https://github.com/eclipse/jetty.project/commit/b705091afb9158b39590fa36b9b84795524a8f0b) commit.\n\n\nThe latest stable releases can be found [here](https://github.com/eclipse/jetty.project/releases).\n\n## Workaround\nThe vendor recommends users to filter the requests before they are sent to Jetty. One way to filter them would be to use a proxy.\n\n## Dependency tree\n- org.owasp.webgoat.lesson:xxe:v8.1.0:-maven\n    - com.github.tomakehurst:wiremock:2.8.0\n        - org.eclipse.jetty:jetty-servlets:9.4.24.v20191120\n            - org.eclipse.jetty:jetty-util:9.4.24.v20191120\n\n\n## References\n* Common Weakness Enumeration: [CWE-410](https://cwe.mitre.org/data/definitions/410.html)\n* Common Weakness Enumeration: [CWE-664](https://cwe.mitre.org/data/definitions/664.html)\n\n","text":"Eclipse Jetty does not correctly handle invalid HTTP/2 requests. An attacker could exploit this flaw to exhaust the HTTP/2 flow control window or TCP congest the connection. This will cause the relevant selector threads to be blocked and it will lead to a denial-of-service (DoS)."},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-410","external/cwe/cwe-664"]},"defaultConfiguration":{"level":"warning"}},{"id":"CVE-2020-27218 jetty-util 9.4.24.v20191120: wiremock 2.8.0: org.eclipse.jetty","shortDescription":{"text":"Transitive Dependency: jetty-util 9.4.24.v20191120 from wiremock 2.8.0 (CVE-2020-27218)"},"fullDescription":{"text":"Eclipse Jetty contains a vulnerability that allows a remote attacker to inject data into other client's requests. This vulnerability only exists when GZIP request body inflation is enabled, and requests from different clients are multiplexed onto a single connection."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| jetty-util 9.4.24.v20191120  | 9.4.53.20231009  | 12.0.5 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/ee93672f-853c-4083-a5e8-0d5ab21e8bf9?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=d8221aaa-7d55-4b5a-b3e0-2b5cba26ce60)\n\n\n## Description\nEclipse Jetty contains a vulnerability that allows a remote attacker to inject data into other client's requests. This vulnerability only exists when GZIP request body inflation is enabled, and requests from different clients are multiplexed onto a single connection.\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [CVE-2020-27218](https://openhub.net/vulnerabilities/bdsa/CVE-2020-27218) - Sensitive Information in Resource Not Removed Before Reuse\n\n\n\n## Solution\nFixed in **[9.4.35.v20201120](https://github.com/eclipse/jetty.project/releases/tag/jetty-9.4.35.v20201120)** by [this](https://github.com/eclipse/jetty.project/commit/850a0330ff25da42b1b1cbdbdca0fcc0c40e47e9) commit.\n\nFixed in **[10.0.0.beta3](https://github.com/eclipse/jetty.project/releases/tag/jetty-10.0.0.beta3)** and in **[11.0.0.beta3](https://github.com/eclipse/jetty.project/releases/tag/jetty-11.0.0.beta3)** by [this](https://github.com/eclipse/jetty.project/commit/34d27e85483c119b7dd1aa9beda735844d14b605) commit.\n\n## Workaround\nThe vendor states that any of the following will mitigate this vulnerability:\n\n\n\u003e * Disabling compressed request body inflation by GzipHandler.\n\u003e * By always fully consuming the request content before sending a response.\n\u003e * By adding a Connection: close to any response where the servlet does not fully consume request content.\n\n## Dependency tree\n- org.owasp.webgoat.lesson:xxe:v8.1.0:-maven\n    - com.github.tomakehurst:wiremock:2.8.0\n        - org.eclipse.jetty:jetty-servlets:9.4.24.v20191120\n            - org.eclipse.jetty:jetty-util:9.4.24.v20191120\n\n\n## References\n* Common Weakness Enumeration: [CWE-226](https://cwe.mitre.org/data/definitions/226.html)\n\n","text":"Eclipse Jetty contains a vulnerability that allows a remote attacker to inject data into other client's requests. This vulnerability only exists when GZIP request body inflation is enabled, and requests from different clients are multiplexed onto a single connection."},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-226"]},"defaultConfiguration":{"level":"warning"}},{"id":"CVE-2023-26048 jetty-util 9.4.24.v20191120: wiremock 2.8.0: org.eclipse.jetty","shortDescription":{"text":"Transitive Dependency: jetty-util 9.4.24.v20191120 from wiremock 2.8.0 (CVE-2023-26048)"},"fullDescription":{"text":"Eclipse Jetty contains a vulnerability in its multipart request parsing mechanism that can lead to an out-of-memory error due to insufficient limiting measures. An attacker can exploit this flaw by supplying a request containing a large multipart without a filename in order to cause a denial-of-service (DoS)."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| jetty-util 9.4.24.v20191120  | 9.4.53.20231009  | 12.0.5 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/ee93672f-853c-4083-a5e8-0d5ab21e8bf9?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=d8221aaa-7d55-4b5a-b3e0-2b5cba26ce60)\n\n\n## Description\nEclipse Jetty contains a vulnerability in its multipart request parsing mechanism that can lead to an out-of-memory error due to insufficient limiting measures. An attacker can exploit this flaw by supplying a request containing a large multipart without a filename in order to cause a denial-of-service (DoS).\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [CVE-2023-26048](https://openhub.net/vulnerabilities/bdsa/CVE-2023-26048) - Uncontrolled Resource Consumption\n\n\n\n## Solution\nFixed in [**jetty-9.4.51.v20230217**](https://github.com/eclipse/jetty.project/releases/tag/jetty-9.4.51.v20230217) by [this](https://github.com/eclipse/jetty.project/commit/c3021592218da289563987e6f7fbe05f8704b285) commit.\n\nFixed by [this](https://github.com/eclipse/jetty.project/commit/622befbd0d52f61c1acd41b4ef12458311494f1a) commit in:\n* **[jetty-10.0.14](https://github.com/eclipse/jetty.project/releases/tag/jetty-10.0.14)**\n* **[jetty-11.0.14](https://github.com/eclipse/jetty.project/releases/tag/jetty-11.0.14)**\n* **[jetty-12.0.0.beta0](https://github.com/eclipse/jetty.project/releases/tag/jetty-12.0.0.beta0)**\n\nThe latest stable releases can be found [here](https://github.com/eclipse/jetty.project/releases).\n\n## Workaround\nIt is recommended to set the multipart parameter `maxRequestSize` to a non-negative value in order to limit the whole multipart content. It has also been stated that limiting the multipart parameter `maxFileSize` will not be enough since the attacker can supply a large number of parts that, when summed up, will cause memory issues.\n\n## Dependency tree\n- org.owasp.webgoat.lesson:xxe:v8.1.0:-maven\n    - com.github.tomakehurst:wiremock:2.8.0\n        - org.eclipse.jetty:jetty-servlets:9.4.24.v20191120\n            - org.eclipse.jetty:jetty-util:9.4.24.v20191120\n\n\n## References\n* Common Weakness Enumeration: [CWE-400](https://cwe.mitre.org/data/definitions/400.html)\n* Common Weakness Enumeration: [CWE-770](https://cwe.mitre.org/data/definitions/770.html)\n\n","text":"Eclipse Jetty contains a vulnerability in its multipart request parsing mechanism that can lead to an out-of-memory error due to insufficient limiting measures. An attacker can exploit this flaw by supplying a request containing a large multipart without a filename in order to cause a denial-of-service (DoS)."},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-400","external/cwe/cwe-770"]},"defaultConfiguration":{"level":"warning"}},{"id":"CVE-2023-26049 jetty-util 9.4.24.v20191120: wiremock 2.8.0: org.eclipse.jetty","shortDescription":{"text":"Transitive Dependency: jetty-util 9.4.24.v20191120 from wiremock 2.8.0 (CVE-2023-26049)"},"fullDescription":{"text":"Eclipse Jetty does not properly parse quoted values in cookies. This could allow an attacker to smuggle cookies within other cookies into the application. The attacker can also tamper with the cookie parsing mechanism and cause other unintended behavior."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| jetty-util 9.4.24.v20191120  | 9.4.53.20231009  | 12.0.5 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/ee93672f-853c-4083-a5e8-0d5ab21e8bf9?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=d8221aaa-7d55-4b5a-b3e0-2b5cba26ce60)\n\n\n## Description\nEclipse Jetty does not properly parse quoted values in cookies. This could allow an attacker to smuggle cookies within other cookies into the application. The attacker can also tamper with the cookie parsing mechanism and cause other unintended behavior.\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [CVE-2023-26049](https://openhub.net/vulnerabilities/bdsa/CVE-2023-26049) - Weak Input Validation\n\n\n\n## Solution\nFixed in version [**jetty-9.4.51.v20230217**](https://github.com/eclipse/jetty.project/releases/tag/jetty-9.4.51.v20230217) by [this](https://github.com/eclipse/jetty.project/commit/1be1401bafb4c46fae3c234c8e93743a661dcf21) commit.\n\nFixed by [this](https://github.com/eclipse/jetty.project/commit/7b8c2c1bf081c7f408e5da3371c8c3c9802f09fd) commit in:\n* [**jetty-10.0.14**](https://github.com/eclipse/jetty.project/releases/tag/jetty-10.0.14)\n* [**jetty-11.0.14**](https://github.com/eclipse/jetty.project/releases/tag/jetty-11.0.14)\n* [**jetty-12.0.0.beta0**](https://github.com/eclipse/jetty.project/releases/tag/jetty-12.0.0.beta0)\n\nThe latest stable releases can be found [here](https://github.com/eclipse/jetty.project/releases).\n\n\n\n## Dependency tree\n- org.owasp.webgoat.lesson:xxe:v8.1.0:-maven\n    - com.github.tomakehurst:wiremock:2.8.0\n        - org.eclipse.jetty:jetty-servlets:9.4.24.v20191120\n            - org.eclipse.jetty:jetty-util:9.4.24.v20191120\n\n\n## References\n* Common Weakness Enumeration: [CWE-20](https://cwe.mitre.org/data/definitions/20.html)\n\n","text":"Eclipse Jetty does not properly parse quoted values in cookies. This could allow an attacker to smuggle cookies within other cookies into the application. The attacker can also tamper with the cookie parsing mechanism and cause other unintended behavior."},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-20"]},"defaultConfiguration":{"level":"warning"}},{"id":"CVE-2023-40167 jetty-util 9.4.24.v20191120: wiremock 2.8.0: org.eclipse.jetty","shortDescription":{"text":"Transitive Dependency: jetty-util 9.4.24.v20191120 from wiremock 2.8.0 (CVE-2023-40167)"},"fullDescription":{"text":"Eclipse Jetty is vulnerable to HTTP request smuggling due to the improper parsing of HTTP requests. An attacker could exploit this vulnerability by sending maliciously crafted HTTP requests to a vulnerable endpoint with multiple requests included inside the body by manipulating the `Content-Length` of the request. The smuggling of HTTP requests may allow for the bypass of security tools such as web application firewalls (WAFs) and intrusion detection systems (IDSs)."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| jetty-util 9.4.24.v20191120  | 9.4.53.20231009  | 12.0.5 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/ee93672f-853c-4083-a5e8-0d5ab21e8bf9?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=d8221aaa-7d55-4b5a-b3e0-2b5cba26ce60)\n\n\n## Description\nEclipse Jetty is vulnerable to HTTP request smuggling due to the improper parsing of HTTP requests. An attacker could exploit this vulnerability by sending maliciously crafted HTTP requests to a vulnerable endpoint with multiple requests included inside the body by manipulating the `Content-Length` of the request. The smuggling of HTTP requests may allow for the bypass of security tools such as web application firewalls (WAFs) and intrusion detection systems (IDSs).\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [CVE-2023-40167](https://openhub.net/vulnerabilities/bdsa/CVE-2023-40167) - Improper Handling of Length Parameter Inconsistency\n\n\n\n## Solution\nFixed in versions:\n* [**12.0.1**](https://github.com/eclipse/jetty.project/releases/tag/jetty-12.0.1) by [this](https://github.com/eclipse/jetty.project/commit/13cf2dade746e5d3bb123fd7ecd9fdc28fc43082) commit.\n* [**11.0.16**](https://github.com/eclipse/jetty.project/releases/tag/jetty-11.0.16) and [**10.0.16**](https://github.com/eclipse/jetty.project/releases/tag/jetty-10.0.16) by [this](https://github.com/eclipse/jetty.project/commit/003e46cae4d71e147d51fb8ea378e8989d381cc3) commit.\n* [**9.4.52.v20230823**](https://github.com/eclipse/jetty.project/releases/tag/jetty-9.4.52.v20230823) by [this](https://github.com/eclipse/jetty.project/commit/e4d596eafc887bcd813ae6e28295b5ce327def47) commit.\n\nThe latest stable releases can be found [here](https://eclipse.dev/jetty/download.php).\n\n\n\n## Dependency tree\n- org.owasp.webgoat.lesson:xxe:v8.1.0:-maven\n    - com.github.tomakehurst:wiremock:2.8.0\n        - org.eclipse.jetty:jetty-servlets:9.4.24.v20191120\n            - org.eclipse.jetty:jetty-util:9.4.24.v20191120\n\n\n## References\n* Common Weakness Enumeration: [CWE-130](https://cwe.mitre.org/data/definitions/130.html)\n\n","text":"Eclipse Jetty is vulnerable to HTTP request smuggling due to the improper parsing of HTTP requests. An attacker could exploit this vulnerability by sending maliciously crafted HTTP requests to a vulnerable endpoint with multiple requests included inside the body by manipulating the `Content-Length` of the request. The smuggling of HTTP requests may allow for the bypass of security tools such as web application firewalls (WAFs) and intrusion detection systems (IDSs)."},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-130"]},"defaultConfiguration":{"level":"warning"}},{"id":"CVE-2023-36479 jetty-util 9.4.24.v20191120: wiremock 2.8.0: org.eclipse.jetty","shortDescription":{"text":"Transitive Dependency: jetty-util 9.4.24.v20191120 from wiremock 2.8.0 (CVE-2023-36479)"},"fullDescription":{"text":"Eclipse Jetty contains an improper neutralization of quoting syntax issue within the CGI servlet. This could allow an authenticated attacker to send a request to the CGI Servlet for a binary with a space in its name in order to manipulate the command structure and execute incorrect commands."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| jetty-util 9.4.24.v20191120  | 9.4.53.20231009  | 12.0.5 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/ee93672f-853c-4083-a5e8-0d5ab21e8bf9?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=d8221aaa-7d55-4b5a-b3e0-2b5cba26ce60)\n\n\n## Description\nEclipse Jetty contains an improper neutralization of quoting syntax issue within the CGI servlet. This could allow an authenticated attacker to send a request to the CGI Servlet for a binary with a space in its name in order to manipulate the command structure and execute incorrect commands.\n\n## Vulnerabilities(BDSA,CVE)\n:large_blue_circle: [CVE-2023-36479](https://openhub.net/vulnerabilities/bdsa/CVE-2023-36479) - Improper Neutralization of Quoting Syntax\n\n\n\n## Solution\nFixed in versions:\n* [**12.0.0.beta1**](https://github.com/eclipse/jetty.project/releases/tag/jetty-12.0.0.beta1) by [this](https://github.com/eclipse/jetty.project/commit/6ce5a0fbcdf06ae647dfd304dd81a1f9b0691a5c) commit.\n* [**11.0.16**](https://github.com/eclipse/jetty.project/releases/tag/jetty-11.0.16) and [**10.0.16**](https://github.com/eclipse/jetty.project/releases/tag/jetty-10.0.16) by [this](https://github.com/eclipse/jetty.project/commit/c29491e5ac70c98e4d7d7dff2a6465ddecc45c0c) commit.\n* [**9.4.52.v20230823**](https://github.com/eclipse/jetty.project/releases/tag/jetty-9.4.52.v20230823) by [this](https://github.com/eclipse/jetty.project/commit/ec7e1fd173481e526db4092f558aa2b5aab57580) commit.\n\nThe latest stable releases can be found [here](https://eclipse.dev/jetty/download.php).\n\n## Workaround\nThe vendor has issued the following workaround:\n\n\u003e The` org.eclipse.jetty.servlets.CGI` Servlet should not be used. Fast CGI support is available instead.\n\n## Dependency tree\n- org.owasp.webgoat.lesson:xxe:v8.1.0:-maven\n    - com.github.tomakehurst:wiremock:2.8.0\n        - org.eclipse.jetty:jetty-servlets:9.4.24.v20191120\n            - org.eclipse.jetty:jetty-util:9.4.24.v20191120\n\n\n## References\n* Common Weakness Enumeration: [CWE-149](https://cwe.mitre.org/data/definitions/149.html)\n\n","text":"Eclipse Jetty contains an improper neutralization of quoting syntax issue within the CGI servlet. This could allow an authenticated attacker to send a request to the CGI Servlet for a binary with a space in its name in order to manipulate the command structure and execute incorrect commands."},"properties":{"security-severity":"3.8","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-149"]},"defaultConfiguration":{"level":"note"}},{"id":"CVE-2023-41900 jetty-util 9.4.24.v20191120: wiremock 2.8.0: org.eclipse.jetty","shortDescription":{"text":"Transitive Dependency: jetty-util 9.4.24.v20191120 from wiremock 2.8.0 (CVE-2023-41900)"},"fullDescription":{"text":"Eclipse Jetty contains an improper authentication vulnerability. This could allow an authenticated attacker to bypass authentication after it has been rejected or revoked by the `LoginService` and make a request as if authenticated.\n\n**Note:** The vendor has stated that this issue impacts usages of the `jetty-openid` which have configured a nested `LoginService` and where that `LoginService` is capable of rejecting previously authenticated users."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| jetty-util 9.4.24.v20191120  | 9.4.53.20231009  | 12.0.5 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/ee93672f-853c-4083-a5e8-0d5ab21e8bf9?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=d8221aaa-7d55-4b5a-b3e0-2b5cba26ce60)\n\n\n## Description\nEclipse Jetty contains an improper authentication vulnerability. This could allow an authenticated attacker to bypass authentication after it has been rejected or revoked by the `LoginService` and make a request as if authenticated.\n\n**Note:** The vendor has stated that this issue impacts usages of the `jetty-openid` which have configured a nested `LoginService` and where that `LoginService` is capable of rejecting previously authenticated users.\n\n## Vulnerabilities(BDSA,CVE)\n:large_blue_circle: [CVE-2023-41900](https://openhub.net/vulnerabilities/bdsa/CVE-2023-41900) - Improper Authentication\n\n\n\n## Solution\nFixed in version [**11.0.15**](https://github.com/eclipse/jetty.project/releases/tag/jetty-11.0.15) and [**10.0.15**](https://github.com/eclipse/jetty.project/releases/tag/jetty-10.0.15) by [this](https://github.com/eclipse/jetty.project/commit/24b7d06fd5ce5468caa3eaa93688879fb2900fda) commit and in [**9.4.52.v20230823**](https://github.com/eclipse/jetty.project/releases/tag/jetty-9.4.52.v20230823) by [this](https://github.com/eclipse/jetty.project/commit/5f48b4170f36b275e1576548b44bd5009feba669) commit.\n\nThe latest stable releases can be found [here](https://eclipse.dev/jetty/download.php).\n\n\n\n## Dependency tree\n- org.owasp.webgoat.lesson:xxe:v8.1.0:-maven\n    - com.github.tomakehurst:wiremock:2.8.0\n        - org.eclipse.jetty:jetty-servlets:9.4.24.v20191120\n            - org.eclipse.jetty:jetty-util:9.4.24.v20191120\n\n\n## References\n* Common Weakness Enumeration: [CWE-287](https://cwe.mitre.org/data/definitions/287.html)\n\n","text":"Eclipse Jetty contains an improper authentication vulnerability. This could allow an authenticated attacker to bypass authentication after it has been rejected or revoked by the `LoginService` and make a request as if authenticated.\n\n**Note:** The vendor has stated that this issue impacts usages of the `jetty-openid` which have configured a nested `LoginService` and where that `LoginService` is capable of rejecting previously authenticated users."},"properties":{"security-severity":"3.8","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-287"]},"defaultConfiguration":{"level":"note"}},{"id":"CVE-2021-34428 jetty-util 9.4.24.v20191120: wiremock 2.8.0: org.eclipse.jetty","shortDescription":{"text":"Transitive Dependency: jetty-util 9.4.24.v20191120 from wiremock 2.8.0 (CVE-2021-34428)"},"fullDescription":{"text":"Eclipse Jetty is vulnerable to insufficient session expiry. This may result in sessions used on a shared computer persisting for longer than intended."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| jetty-util 9.4.24.v20191120  | 9.4.53.20231009  | 12.0.5 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/ee93672f-853c-4083-a5e8-0d5ab21e8bf9?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=d8221aaa-7d55-4b5a-b3e0-2b5cba26ce60)\n\n\n## Description\nEclipse Jetty is vulnerable to insufficient session expiry. This may result in sessions used on a shared computer persisting for longer than intended.\n\n## Vulnerabilities(BDSA,CVE)\n:large_blue_circle: [CVE-2021-34428](https://openhub.net/vulnerabilities/bdsa/CVE-2021-34428) - Insufficient Session Expiration\n\n\n\n## Solution\nFixed in:\n* [**9.4.41.v20210516**](https://github.com/eclipse/jetty.project/releases/tag/jetty-9.4.41.v20210516) by [this](https://github.com/eclipse/jetty.project/commit/087f486b4461746b4ded45833887b3ccb136ee85) commit, \n* [**10.0.3**](https://github.com/eclipse/jetty.project/releases/tag/jetty-10.0.3) by [this](https://github.com/eclipse/jetty.project/commit/cd6462a6252d083b3c9ea2684aab0b4c9669ed19) commit, \n* [**11.0.3**](https://github.com/eclipse/jetty.project/releases/tag/jetty-11.0.3) by [this](https://github.com/eclipse/jetty.project/commit/cd6462a6252d083b3c9ea2684aab0b4c9669ed19) commit.\n\nThe latest stable releases are available [here](https://github.com/eclipse/jetty.project/releases).\n\n## Workaround\nThe vendor has [stated](https://github.com/eclipse/jetty.project/security/advisories/GHSA-m6cp-vxjx-65j6) that a workaround is to ensure that the application catches all Throwables within their `SessionListener#sessionDestroyed()` implementations.\n\n## Dependency tree\n- org.owasp.webgoat.lesson:xxe:v8.1.0:-maven\n    - com.github.tomakehurst:wiremock:2.8.0\n        - org.eclipse.jetty:jetty-servlets:9.4.24.v20191120\n            - org.eclipse.jetty:jetty-util:9.4.24.v20191120\n\n\n## References\n* Common Weakness Enumeration: [CWE-613](https://cwe.mitre.org/data/definitions/613.html)\n\n","text":"Eclipse Jetty is vulnerable to insufficient session expiry. This may result in sessions used on a shared computer persisting for longer than intended."},"properties":{"security-severity":"3.8","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-613"]},"defaultConfiguration":{"level":"note"}},{"id":"CVE-2022-2047 jetty-util 9.4.24.v20191120: wiremock 2.8.0: org.eclipse.jetty","shortDescription":{"text":"Transitive Dependency: jetty-util 9.4.24.v20191120 from wiremock 2.8.0 (CVE-2022-2047)"},"fullDescription":{"text":"Eclipse Jetty does not correctly handle invalid authority segments of HTTP URIs. An authenticated attacker could exploit this flaw by passing an invalid URI that contains an improper authority with no host so that it is interpreted as one with a host."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| jetty-util 9.4.24.v20191120  | 9.4.53.20231009  | 12.0.5 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/ee93672f-853c-4083-a5e8-0d5ab21e8bf9?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=d8221aaa-7d55-4b5a-b3e0-2b5cba26ce60)\n\n\n## Description\nEclipse Jetty does not correctly handle invalid authority segments of HTTP URIs. An authenticated attacker could exploit this flaw by passing an invalid URI that contains an improper authority with no host so that it is interpreted as one with a host.\n\n## Vulnerabilities(BDSA,CVE)\n:large_blue_circle: [CVE-2022-2047](https://openhub.net/vulnerabilities/bdsa/CVE-2022-2047) - Weak Input Validation\n\n\n\n## Solution\nFixed in versions:\n* [**9.4.47**](https://github.com/eclipse/jetty.project/releases/tag/jetty-9.4.47.v20220610) by [this](https://github.com/eclipse/jetty.project/commit/4ca8afbbd667c19a084d5ff14a4f08eb7049d1c7) commit.\n* [**10.0.10**](https://github.com/eclipse/jetty.project/releases/tag/jetty-10.0.10) and [**11.0.10**](https://github.com/eclipse/jetty.project/releases/tag/jetty-11.0.10) by [this](https://github.com/eclipse/jetty.project/commit/d1e64f469362bb9371d530cccded5ecb13fa1cb5) commit.\n\nThe latest stable releases can be found [here](https://github.com/eclipse/jetty.project/releases).\n\n\n\n## Dependency tree\n- org.owasp.webgoat.lesson:xxe:v8.1.0:-maven\n    - com.github.tomakehurst:wiremock:2.8.0\n        - org.eclipse.jetty:jetty-servlets:9.4.24.v20191120\n            - org.eclipse.jetty:jetty-util:9.4.24.v20191120\n\n\n## References\n* Common Weakness Enumeration: [CWE-20](https://cwe.mitre.org/data/definitions/20.html)\n\n","text":"Eclipse Jetty does not correctly handle invalid authority segments of HTTP URIs. An authenticated attacker could exploit this flaw by passing an invalid URI that contains an improper authority with no host so that it is interpreted as one with a host."},"properties":{"security-severity":"3.8","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-20"]},"defaultConfiguration":{"level":"note"}},{"id":"BDSA-2021-3401 logback-classic 1.2.3: spring-boot-starter-test 2.2.2.RELEASE: ch.qos.logback","shortDescription":{"text":"Transitive Dependency: logback-classic 1.2.3 from spring-boot-starter-test 2.2.2.RELEASE (BDSA-2021-3401)"},"fullDescription":{"text":"logback does not verify the SSL hostname as part of the certificate verification process. A remote attacker could leverage this to perform man-in-the-middle (MitM) attacks against applications using logback."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| logback-classic 1.2.3  | 1.4.11  | 1.4.11 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/7e1ae58f-8e7c-4250-8b78-a19fee025d36?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=6ca9663c-41d4-44c0-8d1e-b1b12745bdc5)\n\n\n## Description\nlogback does not verify the SSL hostname as part of the certificate verification process. A remote attacker could leverage this to perform man-in-the-middle (MitM) attacks against applications using logback.\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [BDSA-2021-3401](https://openhub.net/vulnerabilities/bdsa/BDSA-2021-3401) - Improper Validation of Certificate with Host Mismatch\n\n\n\n## Solution\nFixed in [**1.2.7**](https://github.com/qos-ch/logback/releases/tag/v_1.2.7) by [this](https://github.com/qos-ch/logback/commit/626c7733c188) commit.\n\nThe latest releases can be found [here](https://github.com/qos-ch/logback/tags).\n\n\n\n## Dependency tree\n- org.owasp.webgoat.lesson:http-basics:v8.1.0:-maven\n    - org.springframework.boot:spring-boot-starter-test:2.2.2.RELEASE\n        - org.springframework.boot:spring-boot-starter:2.2.2.RELEASE\n            - org.springframework.boot:spring-boot-starter-logging:2.2.2.RELEASE\n                - ch.qos.logback:logback-classic:1.2.3\n\n\n## References\n* Common Weakness Enumeration: [CWE-297](https://cwe.mitre.org/data/definitions/297.html)\n\n","text":"logback does not verify the SSL hostname as part of the certificate verification process. A remote attacker could leverage this to perform man-in-the-middle (MitM) attacks against applications using logback."},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-297"]},"defaultConfiguration":{"level":"warning"}},{"id":"CVE-2021-42550 logback-classic 1.2.3: spring-boot-starter-test 2.2.2.RELEASE: ch.qos.logback","shortDescription":{"text":"Transitive Dependency: logback-classic 1.2.3 from spring-boot-starter-test 2.2.2.RELEASE (CVE-2021-42550)"},"fullDescription":{"text":"Logback is vulnerable to remote code execution (RCE) due to missing restrictions on JNDI locations provided in the configuration file. An attacker with an access to `logback.xml` configuration file could provide a JNDI location that would load and execute malicious code from an LDAP server.\n\n**Note:** In addition to high privileges required to access `logback.xml`, successful exploitation requires reloading poisoned configuration data. This can be achieved by an application restart or `scan=\"true\"` set prior to the attack."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| logback-classic 1.2.3  | 1.4.11  | 1.4.11 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/7e1ae58f-8e7c-4250-8b78-a19fee025d36?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=6ca9663c-41d4-44c0-8d1e-b1b12745bdc5)\n\n\n## Description\nLogback is vulnerable to remote code execution (RCE) due to missing restrictions on JNDI locations provided in the configuration file. An attacker with an access to `logback.xml` configuration file could provide a JNDI location that would load and execute malicious code from an LDAP server.\n\n**Note:** In addition to high privileges required to access `logback.xml`, successful exploitation requires reloading poisoned configuration data. This can be achieved by an application restart or `scan=\"true\"` set prior to the attack.\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [CVE-2021-42550](https://openhub.net/vulnerabilities/bdsa/CVE-2021-42550) - Insecure Object Deserialization\n\n\n\n## Solution\nFixed in [**1.2.9**](https://github.com/qos-ch/logback/releases/tag/v_1.2.9) by the following commits:\n* [Commit 1](https://github.com/qos-ch/logback/commit/21d772f2bc2ed780b01b4fe108df7e29707763f1)\n* [Commit 2](https://github.com/qos-ch/logback/commit/54e81d74a9304a188c62a8110d4d393ccad5cbc5)\n* [Commit 3](https://github.com/qos-ch/logback/commit/3b9cd0efe0b3390026a04a6092aa03e433ddd330)\n\nFixed in [**1.3.0-alpha11**](https://github.com/qos-ch/logback/releases/tag/v_1.3.0-alpha11) by the following commits:\n* [Commit 1](https://github.com/qos-ch/logback/commit/ef4fc4186b74b45ce80d86833820106ff27edd42)\n* [Commit 2](https://github.com/qos-ch/logback/commit/87291079a1de9369ac67e20dc70a8fdc7cc4359c)\n* [Commit 3](https://github.com/qos-ch/logback/commit/8fb44ca67e6ab8d89bb15ec6cb75075921106f38)\n* [Commit 4](https://github.com/qos-ch/logback/commit/c43bd30e1092b89bb91f5fb6a28310956b3bac61)\n\n**Note**: As an extra precaution, in addition to upgrading to logback version **1.2.9**, the vendor also recommends users to set their logback configuration files as read-only.\n\nThe latest stable releases can be found [here](https://github.com/qos-ch/logback/tags).\n\n\n\n## Dependency tree\n- org.owasp.webgoat.lesson:http-basics:v8.1.0:-maven\n    - org.springframework.boot:spring-boot-starter-test:2.2.2.RELEASE\n        - org.springframework.boot:spring-boot-starter:2.2.2.RELEASE\n            - org.springframework.boot:spring-boot-starter-logging:2.2.2.RELEASE\n                - ch.qos.logback:logback-classic:1.2.3\n\n\n## References\n* Common Weakness Enumeration: [CWE-502](https://cwe.mitre.org/data/definitions/502.html)\n* Common Weakness Enumeration: [CWE-829](https://cwe.mitre.org/data/definitions/829.html)\n\n","text":"Logback is vulnerable to remote code execution (RCE) due to missing restrictions on JNDI locations provided in the configuration file. An attacker with an access to `logback.xml` configuration file could provide a JNDI location that would load and execute malicious code from an LDAP server.\n\n**Note:** In addition to high privileges required to access `logback.xml`, successful exploitation requires reloading poisoned configuration data. This can be achieved by an application restart or `scan=\"true\"` set prior to the attack."},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-502","external/cwe/cwe-829"]},"defaultConfiguration":{"level":"warning"}},{"id":"CVE-2023-6378 logback-classic 1.2.3: spring-boot-starter-test 2.2.2.RELEASE: ch.qos.logback","shortDescription":{"text":"Transitive Dependency: logback-classic 1.2.3 from spring-boot-starter-test 2.2.2.RELEASE (CVE-2023-6378)"},"fullDescription":{"text":"Logback contains a denial-of-service (DoS) vulnerability. An attacker could exploit this issue by connecting to a receiver and sending maliciously crafted data, which could in turn allow them to slow the logging of events or crash the application.\n\nSuccessful exploitation of this vulnerability requires that logback-receiver component is enabled and also reachable by the attacker."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| logback-classic 1.2.3  | 1.4.11  | 1.4.11 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/7e1ae58f-8e7c-4250-8b78-a19fee025d36?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=6ca9663c-41d4-44c0-8d1e-b1b12745bdc5)\n\n\n## Description\nLogback contains a denial-of-service (DoS) vulnerability. An attacker could exploit this issue by connecting to a receiver and sending maliciously crafted data, which could in turn allow them to slow the logging of events or crash the application.\n\nSuccessful exploitation of this vulnerability requires that logback-receiver component is enabled and also reachable by the attacker.\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [CVE-2023-6378](https://openhub.net/vulnerabilities/bdsa/CVE-2023-6378) - Uncontrolled Resource Consumption\n\n\n\n## Solution\nFixed in versions:\n* [**1.2.13**](https://github.com/qos-ch/logback/releases/tag/v_1.2.13) by [this](https://github.com/qos-ch/logback/commit/bb095154be011267b64e37a1d401546e7cc2b7c3) commit.\n* [**1.3.14**](https://github.com/qos-ch/logback/releases/tag/v_1.3.14) by [this](https://github.com/qos-ch/logback/commit/b8eac23a9de9e05fb6d51160b3f46acd91af9731) commit and [this](https://github.com/qos-ch/logback/commit/7018a3609c7bcc9dc7bf5903509901a986e5f578) commit.\n* [**1.4.14**](https://github.com/qos-ch/logback/releases/tag/v_1.4.14) by [this](https://github.com/qos-ch/logback/commit/9c782b45be4abdafb7e17481e24e7354c2acd1eb) commit and [this](https://github.com/qos-ch/logback/commit/7018a3609c7bcc9dc7bf5903509901a986e5f578) commit.\n\nThe latest stable releases can be found [here](https://github.com/qos-ch/logback/tags).\n\n\n\n## Dependency tree\n- org.owasp.webgoat.lesson:http-basics:v8.1.0:-maven\n    - org.springframework.boot:spring-boot-starter-test:2.2.2.RELEASE\n        - org.springframework.boot:spring-boot-starter:2.2.2.RELEASE\n            - org.springframework.boot:spring-boot-starter-logging:2.2.2.RELEASE\n                - ch.qos.logback:logback-classic:1.2.3\n\n\n## References\n* Common Weakness Enumeration: [CWE-400](https://cwe.mitre.org/data/definitions/400.html)\n\n","text":"Logback contains a denial-of-service (DoS) vulnerability. An attacker could exploit this issue by connecting to a receiver and sending maliciously crafted data, which could in turn allow them to slow the logging of events or crash the application.\n\nSuccessful exploitation of this vulnerability requires that logback-receiver component is enabled and also reachable by the attacker."},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-400"]},"defaultConfiguration":{"level":"warning"}},{"id":"BDSA-2023-3341 logback-classic 1.2.3: spring-boot-starter-test 2.2.2.RELEASE: ch.qos.logback","shortDescription":{"text":"Transitive Dependency: logback-classic 1.2.3 from spring-boot-starter-test 2.2.2.RELEASE (BDSA-2023-3341)"},"fullDescription":{"text":"Logback contains a denial-of-service (DoS) vulnerability. An attacker could exploit this issue by connecting to a receiver and sending maliciously crafted data, which could in turn allow them to slow the logging of events or crash the application.\n\nSuccessful exploitation of this vulnerability requires that logback-receiver component is enabled and also reachable by the attacker."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| logback-classic 1.2.3  | 1.4.11  | 1.4.11 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/7e1ae58f-8e7c-4250-8b78-a19fee025d36?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=6ca9663c-41d4-44c0-8d1e-b1b12745bdc5)\n\n\n## Description\nLogback contains a denial-of-service (DoS) vulnerability. An attacker could exploit this issue by connecting to a receiver and sending maliciously crafted data, which could in turn allow them to slow the logging of events or crash the application.\n\nSuccessful exploitation of this vulnerability requires that logback-receiver component is enabled and also reachable by the attacker.\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [BDSA-2023-3341](https://openhub.net/vulnerabilities/bdsa/BDSA-2023-3341) - Uncontrolled Resource Consumption\n\n\n\n## Solution\nFixed in versions:\n* [**1.2.13**](https://github.com/qos-ch/logback/releases/tag/v_1.2.13) by [this](https://github.com/qos-ch/logback/commit/bb095154be011267b64e37a1d401546e7cc2b7c3) commit.\n* [**1.3.14**](https://github.com/qos-ch/logback/releases/tag/v_1.3.14) by [this](https://github.com/qos-ch/logback/commit/b8eac23a9de9e05fb6d51160b3f46acd91af9731) commit and [this](https://github.com/qos-ch/logback/commit/7018a3609c7bcc9dc7bf5903509901a986e5f578) commit.\n* [**1.4.14**](https://github.com/qos-ch/logback/releases/tag/v_1.4.14) by [this](https://github.com/qos-ch/logback/commit/9c782b45be4abdafb7e17481e24e7354c2acd1eb) commit and [this](https://github.com/qos-ch/logback/commit/7018a3609c7bcc9dc7bf5903509901a986e5f578) commit.\n\nThe latest stable releases can be found [here](https://github.com/qos-ch/logback/tags).\n\n\n\n## Dependency tree\n- org.owasp.webgoat.lesson:http-basics:v8.1.0:-maven\n    - org.springframework.boot:spring-boot-starter-test:2.2.2.RELEASE\n        - org.springframework.boot:spring-boot-starter:2.2.2.RELEASE\n            - org.springframework.boot:spring-boot-starter-logging:2.2.2.RELEASE\n                - ch.qos.logback:logback-classic:1.2.3\n\n\n## References\n* Common Weakness Enumeration: [CWE-400](https://cwe.mitre.org/data/definitions/400.html)\n\n","text":"Logback contains a denial-of-service (DoS) vulnerability. An attacker could exploit this issue by connecting to a receiver and sending maliciously crafted data, which could in turn allow them to slow the logging of events or crash the application.\n\nSuccessful exploitation of this vulnerability requires that logback-receiver component is enabled and also reachable by the attacker."},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-400"]},"defaultConfiguration":{"level":"warning"}},{"id":"CVE-2019-11358 jquery 3.2.1: org.webjars","shortDescription":{"text":"Direct Dependency: jquery 3.2.1 (CVE-2019-11358)"},"fullDescription":{"text":"An improper input validation vulnerability has been discovered in JQuery. An attacker could exploit this vulnerability to execute cross-site scripting (XSS) attacks, trigger a denial-of-service (DoS) condition, or gain unauthorized access to the application."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| jquery 3.2.1  | 3.7.1  | 3.7.1 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/ebff8999-fe61-488f-bd64-69fd5e8b251f?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=286bed55-3d70-4402-b41f-efbec8daf3b6)\n\n\n## Description\nAn improper input validation vulnerability has been discovered in JQuery. An attacker could exploit this vulnerability to execute cross-site scripting (XSS) attacks, trigger a denial-of-service (DoS) condition, or gain unauthorized access to the application.\n\n## Vulnerabilities(BDSA,CVE)\n:orange_circle: [CVE-2019-11358](https://openhub.net/vulnerabilities/bdsa/CVE-2019-11358) - Weak Input Validation\n\n\n\n## Solution\nFixed in jQuery version [**3.4.0**](https://github.com/jquery/jquery/releases/tag/3.4.0) by [this](https://github.com/jquery/jquery/commit/753d591aea698e57d6db58c9f722cd0808619b1b) commit.\n\n## Workaround\nThird party patches for previous jQuery versions can be found [here](https://github.com/DanielRuf/snyk-js-jquery-174006?files=1). Please be aware that these patches may not be fully tested.\n\n\n\n## References\n* Common Weakness Enumeration: [CWE-20](https://cwe.mitre.org/data/definitions/20.html)\n\n","text":"An improper input validation vulnerability has been discovered in JQuery. An attacker could exploit this vulnerability to execute cross-site scripting (XSS) attacks, trigger a denial-of-service (DoS) condition, or gain unauthorized access to the application."},"properties":{"security-severity":"8.9","tags":["security","open_source_analysis","direct_dependency","patch_available","external/cwe/cwe-20"]},"defaultConfiguration":{"level":"error"}},{"id":"CVE-2020-11022 jquery 3.2.1: org.webjars","shortDescription":{"text":"Direct Dependency: jquery 3.2.1 (CVE-2020-11022)"},"fullDescription":{"text":"It was discovered that jQuery could allow for cross-site scripting (XSS) vulnerabilities to be introduced if `jQuery.htmlPrefilter` method is used. Attackers could exploit XSS vulnerabilities to execute JavaScript code in a target's browser by tricking them into accessing the vulnerable page. This would allow an attacker to steal an administrator's session tokens or execute arbitrary code on their behalf by sending the link to an unsuspecting user or waiting for them to discover it."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| jquery 3.2.1  | 3.7.1  | 3.7.1 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/ebff8999-fe61-488f-bd64-69fd5e8b251f?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=286bed55-3d70-4402-b41f-efbec8daf3b6)\n\n\n## Description\nIt was discovered that jQuery could allow for cross-site scripting (XSS) vulnerabilities to be introduced if `jQuery.htmlPrefilter` method is used. Attackers could exploit XSS vulnerabilities to execute JavaScript code in a target's browser by tricking them into accessing the vulnerable page. This would allow an attacker to steal an administrator's session tokens or execute arbitrary code on their behalf by sending the link to an unsuspecting user or waiting for them to discover it.\n\n## Vulnerabilities(BDSA,CVE)\n:orange_circle: [CVE-2020-11022](https://openhub.net/vulnerabilities/bdsa/CVE-2020-11022) - Improper Neutralization of Script-Related HTML Tags in Web Pages\n\n\n\n## Solution\nFixed in [**3.5.0**](https://github.com/jquery/jquery/releases/tag/3.5.0) by [this](https://github.com/jquery/jquery/commit/1d61fd9407e6fbe82fe55cb0b938307aa0791f77) commit.\n\nThe latest stable releases are available [here](https://jquery.com/download/).\n\n## Workaround\nIf the old behaviour of `jQuery.htmlPrefilter` in jQuery **3.5.0** is required nonetheless, the vendor advises using `jQuery.UNSAFE_restoreLegacyHtmlPrefilter` from `jQuery Migrate` **3.2.0**. Since this reverses the security fix, it is also recommended to use `DOMPurify` plugin's `sanitize` method with `SAFE_FOR_JQUERY` set to `True` to properly sanitize user's HTML input again.\n\n\n\n## References\n* Common Weakness Enumeration: [CWE-80](https://cwe.mitre.org/data/definitions/80.html)\n\n","text":"It was discovered that jQuery could allow for cross-site scripting (XSS) vulnerabilities to be introduced if `jQuery.htmlPrefilter` method is used. Attackers could exploit XSS vulnerabilities to execute JavaScript code in a target's browser by tricking them into accessing the vulnerable page. This would allow an attacker to steal an administrator's session tokens or execute arbitrary code on their behalf by sending the link to an unsuspecting user or waiting for them to discover it."},"properties":{"security-severity":"8.9","tags":["security","open_source_analysis","direct_dependency","patch_available","external/cwe/cwe-80"]},"defaultConfiguration":{"level":"error"}},{"id":"CVE-2020-11023 jquery 3.2.1: org.webjars","shortDescription":{"text":"Direct Dependency: jquery 3.2.1 (CVE-2020-11023)"},"fullDescription":{"text":"It was discovered that jQuery could allow for cross-site scripting (XSS) vulnerabilities to be introduced if certain HTML is passed to Document Object Model (DOM) manipulation methods. Attackers could exploit XSS vulnerabilities to execute JavaScript code in a target browser by tricking them into accessing the vulnerable page. This would allow an attacker to steal an administrator's session tokens or execute arbitrary code on their behalf by sending the link to an unsuspecting user or waiting for them to discover it."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| jquery 3.2.1  | 3.7.1  | 3.7.1 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/ebff8999-fe61-488f-bd64-69fd5e8b251f?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=286bed55-3d70-4402-b41f-efbec8daf3b6)\n\n\n## Description\nIt was discovered that jQuery could allow for cross-site scripting (XSS) vulnerabilities to be introduced if certain HTML is passed to Document Object Model (DOM) manipulation methods. Attackers could exploit XSS vulnerabilities to execute JavaScript code in a target browser by tricking them into accessing the vulnerable page. This would allow an attacker to steal an administrator's session tokens or execute arbitrary code on their behalf by sending the link to an unsuspecting user or waiting for them to discover it.\n\n## Vulnerabilities(BDSA,CVE)\n:orange_circle: [CVE-2020-11023](https://openhub.net/vulnerabilities/bdsa/CVE-2020-11023) - Improper Neutralization of Script-Related HTML Tags in Web Pages\n\n\n\n## Solution\nFixed in [**3.5.0**](https://github.com/jquery/jquery/releases/tag/3.5.0) by [this](https://github.com/jquery/jquery/commit/966a70909019aa09632c87c0002c522fa4a1e30e) commit.\n\n## Workaround\nTo work around this issue the vendor suggests using `DOMPurify` plugin with its `SAFE_FOR_JQUERY` option to sanitize the HTML string before passing it to a jQuery method.\n\n\n\n## References\n* Common Weakness Enumeration: [CWE-80](https://cwe.mitre.org/data/definitions/80.html)\n\n","text":"It was discovered that jQuery could allow for cross-site scripting (XSS) vulnerabilities to be introduced if certain HTML is passed to Document Object Model (DOM) manipulation methods. Attackers could exploit XSS vulnerabilities to execute JavaScript code in a target browser by tricking them into accessing the vulnerable page. This would allow an attacker to steal an administrator's session tokens or execute arbitrary code on their behalf by sending the link to an unsuspecting user or waiting for them to discover it."},"properties":{"security-severity":"8.9","tags":["security","open_source_analysis","direct_dependency","patch_available","external/cwe/cwe-80"]},"defaultConfiguration":{"level":"error"}},{"id":"CVE-2020-23064 jquery 3.2.1: org.webjars","shortDescription":{"text":"Direct Dependency: jquery 3.2.1 (CVE-2020-23064)"},"fullDescription":{"text":"jQuery is vulnerable to cross-site scripting (XSS) due to a flaw present in Document Object Model (DOM) manipulation methods.\n\nAn attacker could craft HTML content that when viewed by a victim user could allow for the execution of arbitrary scripts. Such scripts could be used to steal tokens or tamper with the rendering of the web content.\n\n**Note**: This reported issue appears to be a duplicate of **CVE-2020-11023** (**BDSA-2020-0964**)."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| jquery 3.2.1  | 3.7.1  | 3.7.1 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/ebff8999-fe61-488f-bd64-69fd5e8b251f?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=286bed55-3d70-4402-b41f-efbec8daf3b6)\n\n\n## Description\njQuery is vulnerable to cross-site scripting (XSS) due to a flaw present in Document Object Model (DOM) manipulation methods.\n\nAn attacker could craft HTML content that when viewed by a victim user could allow for the execution of arbitrary scripts. Such scripts could be used to steal tokens or tamper with the rendering of the web content.\n\n**Note**: This reported issue appears to be a duplicate of **CVE-2020-11023** (**BDSA-2020-0964**).\n\n## Vulnerabilities(BDSA,CVE)\n:orange_circle: [CVE-2020-23064](https://openhub.net/vulnerabilities/bdsa/CVE-2020-23064) - Improper Neutralization of Script-Related HTML Tags in Web Pages\n\n\n\n## Solution\nFixed in [**3.5.0**](https://github.com/jquery/jquery/releases/tag/3.5.0) by [this](https://github.com/jquery/jquery/commit/966a70909019aa09632c87c0002c522fa4a1e30e) commit.\n\nThe latest stable releases are available [here](https://github.com/jquery/jquery/releases).\n\n\n\n\n\n## References\n* Common Weakness Enumeration: [CWE-80](https://cwe.mitre.org/data/definitions/80.html)\n\n","text":"jQuery is vulnerable to cross-site scripting (XSS) due to a flaw present in Document Object Model (DOM) manipulation methods.\n\nAn attacker could craft HTML content that when viewed by a victim user could allow for the execution of arbitrary scripts. Such scripts could be used to steal tokens or tamper with the rendering of the web content.\n\n**Note**: This reported issue appears to be a duplicate of **CVE-2020-11023** (**BDSA-2020-0964**)."},"properties":{"security-severity":"8.9","tags":["security","open_source_analysis","direct_dependency","patch_available","external/cwe/cwe-80"]},"defaultConfiguration":{"level":"error"}},{"id":"BDSA-2021-3651 jquery 3.2.1: org.webjars","shortDescription":{"text":"Direct Dependency: jquery 3.2.1 (BDSA-2021-3651)"},"fullDescription":{"text":"jQuery contains commented references to the hijacked domain `blindsignals`, within the source/non-minified versions of the files `src/queue/delay.js` and `test/data/jquery-1.9.1.js` (the former referring to a Web Archive version of the original site). References to this domain are not present in the minified files.\n\nUsers viewing the jQuery source code may attempt to follow links to the hijacked site without awareness of the domain's current status. This could expose them to attacks such as phishing, where they are tricked into supplying credentials or downloading malicious software. Users are not at risk if they do not manually follow links to the `blindsignals` domain."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| jquery 3.2.1  | 3.7.1  | 3.7.1 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/ebff8999-fe61-488f-bd64-69fd5e8b251f?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=286bed55-3d70-4402-b41f-efbec8daf3b6)\n\n\n## Description\njQuery contains commented references to the hijacked domain `blindsignals`, within the source/non-minified versions of the files `src/queue/delay.js` and `test/data/jquery-1.9.1.js` (the former referring to a Web Archive version of the original site). References to this domain are not present in the minified files.\n\nUsers viewing the jQuery source code may attempt to follow links to the hijacked site without awareness of the domain's current status. This could expose them to attacks such as phishing, where they are tricked into supplying credentials or downloading malicious software. Users are not at risk if they do not manually follow links to the `blindsignals` domain.\n\n## Vulnerabilities(BDSA,CVE)\n:large_blue_circle: [BDSA-2021-3651](https://openhub.net/vulnerabilities/bdsa/BDSA-2021-3651) - Suspicious Comment\n\n\n\n## Solution\nFixed in **[3.6.1](https://github.com/jquery/jquery/releases/tag/3.6.1)** by [this](https://github.com/jquery/jquery/commit/4b0d8900) commit.\n\nThe latest stable releases are available [here](https://jquery.com/download/).\n\n## Workaround\nUsers should remove references to the `blindsignals` domain within `src/queue/delay.js` and `test/data/jquery-1.9.1.js`, to ensure anyone viewing these files does not try to follow links to the malicious domain.\n\n\n\n## References\n* Common Weakness Enumeration: [CWE-546](https://cwe.mitre.org/data/definitions/546.html)\n\n","text":"jQuery contains commented references to the hijacked domain `blindsignals`, within the source/non-minified versions of the files `src/queue/delay.js` and `test/data/jquery-1.9.1.js` (the former referring to a Web Archive version of the original site). References to this domain are not present in the minified files.\n\nUsers viewing the jQuery source code may attempt to follow links to the hijacked site without awareness of the domain's current status. This could expose them to attacks such as phishing, where they are tricked into supplying credentials or downloading malicious software. Users are not at risk if they do not manually follow links to the `blindsignals` domain."},"properties":{"security-severity":"3.8","tags":["security","open_source_analysis","direct_dependency","patch_available","external/cwe/cwe-546"]},"defaultConfiguration":{"level":"note"}},{"id":"CVE-2021-39148 xstream 1.4.5: com.thoughtworks.xstream","shortDescription":{"text":"Direct Dependency: xstream 1.4.5 (CVE-2021-39148)"},"fullDescription":{"text":"XStream is vulnerable to remote code execution (RCE) due to the unsafe deserialization of classes. A remote attacker could execute arbitrary code on a vulnerable server by causing that server to deserialize a maliciously crafted serialized object."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| xstream 1.4.5  | 1.4.20  | 1.4.20 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/6c637fee-b979-47e7-b2cb-64f781a4dc92?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=f8c25f33-8c23-4fec-8c9b-39b218b0bd98)\n\n\n## Description\nXStream is vulnerable to remote code execution (RCE) due to the unsafe deserialization of classes. A remote attacker could execute arbitrary code on a vulnerable server by causing that server to deserialize a maliciously crafted serialized object.\n\n## Vulnerabilities(BDSA,CVE)\n:red_circle: [CVE-2021-39148](https://openhub.net/vulnerabilities/bdsa/CVE-2021-39148) - Insecure Object Deserialization\n\n\n\n## Solution\nFixed in version [**1.4.18**](https://github.com/x-stream/xstream/releases/tag/XSTREAM_1_4_18) by [this](https://github.com/x-stream/xstream/commit/652d72f38b33938c54fd3b2ef626cb7dce38001c) commit.\n\nThe latest stable releases can be found [here](https://github.com/x-stream/xstream/releases).\n\n## Workaround\nClasses that should be blacklisted for various versions of XStream are listed [here](https://x-stream.github.io/security.html#workaround).\n\n\n\n## References\n* Common Weakness Enumeration: [CWE-502](https://cwe.mitre.org/data/definitions/502.html)\n\n","text":"XStream is vulnerable to remote code execution (RCE) due to the unsafe deserialization of classes. A remote attacker could execute arbitrary code on a vulnerable server by causing that server to deserialize a maliciously crafted serialized object."},"properties":{"security-severity":"9.1","tags":["security","open_source_analysis","direct_dependency","patch_available","external/cwe/cwe-502"]},"defaultConfiguration":{"level":"error"}},{"id":"CVE-2021-39145 xstream 1.4.5: com.thoughtworks.xstream","shortDescription":{"text":"Direct Dependency: xstream 1.4.5 (CVE-2021-39145)"},"fullDescription":{"text":"XStream is vulnerable to remote code execution (RCE) due to the unsafe deserialization of classes. A remote attacker could execute arbitrary code on a vulnerable server by causing that server to deserialize a maliciously crafted serialized object."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| xstream 1.4.5  | 1.4.20  | 1.4.20 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/6c637fee-b979-47e7-b2cb-64f781a4dc92?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=f8c25f33-8c23-4fec-8c9b-39b218b0bd98)\n\n\n## Description\nXStream is vulnerable to remote code execution (RCE) due to the unsafe deserialization of classes. A remote attacker could execute arbitrary code on a vulnerable server by causing that server to deserialize a maliciously crafted serialized object.\n\n## Vulnerabilities(BDSA,CVE)\n:red_circle: [CVE-2021-39145](https://openhub.net/vulnerabilities/bdsa/CVE-2021-39145) - Insecure Object Deserialization\n\n\n\n## Solution\nFixed in version [**1.4.18**](https://github.com/x-stream/xstream/releases/tag/XSTREAM_1_4_18) by [this](https://github.com/x-stream/xstream/commit/652d72f38b33938c54fd3b2ef626cb7dce38001c) commit.\n\nThe latest stable releases can be found [here](https://github.com/x-stream/xstream/releases).\n\n## Workaround\nClasses that should be blacklisted for various versions of XStream are listed [here](https://x-stream.github.io/security.html#workaround).\n\n\n\n## References\n* Common Weakness Enumeration: [CWE-502](https://cwe.mitre.org/data/definitions/502.html)\n\n","text":"XStream is vulnerable to remote code execution (RCE) due to the unsafe deserialization of classes. A remote attacker could execute arbitrary code on a vulnerable server by causing that server to deserialize a maliciously crafted serialized object."},"properties":{"security-severity":"9.1","tags":["security","open_source_analysis","direct_dependency","patch_available","external/cwe/cwe-502"]},"defaultConfiguration":{"level":"error"}},{"id":"CVE-2019-10173 xstream 1.4.5: com.thoughtworks.xstream","shortDescription":{"text":"Direct Dependency: xstream 1.4.5 (CVE-2019-10173)"},"fullDescription":{"text":"It was found that xstream API version 1.4.10 before 1.4.11 introduced a regression for a previous deserialization flaw. If the security framework has not been initialized, it may allow a remote attacker to run arbitrary shell commands when unmarshalling XML or any supported format. e.g. JSON. (regression of CVE-2013-7285)"},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| xstream 1.4.5  | 1.4.20  | 1.4.20 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/6c637fee-b979-47e7-b2cb-64f781a4dc92?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=f8c25f33-8c23-4fec-8c9b-39b218b0bd98)\n\n\n## Description\nIt was found that xstream API version 1.4.10 before 1.4.11 introduced a regression for a previous deserialization flaw. If the security framework has not been initialized, it may allow a remote attacker to run arbitrary shell commands when unmarshalling XML or any supported format. e.g. JSON. (regression of CVE-2013-7285)\n\n## Vulnerabilities(BDSA,CVE)\n:red_circle: [CVE-2019-10173](https://openhub.net/vulnerabilities/bdsa/CVE-2019-10173) - Improper Control of Generation of Code ('Code Injection')\n\n\n\n\n\n\n\n\n\n## References\n* Common Weakness Enumeration: [CWE-94](https://cwe.mitre.org/data/definitions/94.html)\n\n","text":"It was found that xstream API version 1.4.10 before 1.4.11 introduced a regression for a previous deserialization flaw. If the security framework has not been initialized, it may allow a remote attacker to run arbitrary shell commands when unmarshalling XML or any supported format. e.g. JSON. (regression of CVE-2013-7285)"},"properties":{"security-severity":"9.1","tags":["security","open_source_analysis","direct_dependency","patch_available","external/cwe/cwe-94"]},"defaultConfiguration":{"level":"error"}},{"id":"CVE-2020-26217 xstream 1.4.5: com.thoughtworks.xstream","shortDescription":{"text":"Direct Dependency: xstream 1.4.5 (CVE-2020-26217)"},"fullDescription":{"text":"Xstream is vulnerable to remote code execution (RCE) through specially crafted input. A remote attacker is able to execute arbitrary system commands on the host machine if Xstream's security framework has been configured with a default blacklist, rather than the more secure whitelisting method."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| xstream 1.4.5  | 1.4.20  | 1.4.20 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/6c637fee-b979-47e7-b2cb-64f781a4dc92?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=f8c25f33-8c23-4fec-8c9b-39b218b0bd98)\n\n\n## Description\nXstream is vulnerable to remote code execution (RCE) through specially crafted input. A remote attacker is able to execute arbitrary system commands on the host machine if Xstream's security framework has been configured with a default blacklist, rather than the more secure whitelisting method.\n\n## Vulnerabilities(BDSA,CVE)\n:red_circle: [CVE-2020-26217](https://openhub.net/vulnerabilities/bdsa/CVE-2020-26217) - Incomplete List of Disallowed Inputs\n\n\n\n## Solution\nFixed in **[1.4.14](https://github.com/x-stream/xstream/releases/tag/XSTREAM_1_4_14)** by [this](https://github.com/x-stream/xstream/commit/0fec095d534126931c99fd38e9c6d41f5c685c1a) commit.\n\nThe latest stable releases are available [here](https://github.com/x-stream/xstream/releases/).\n\n## Workaround\nThe vendor has supplied the following workarounds if you rely on the blacklisting feature and are unable to upgrade to **1.4.14**.\n\nFor version **1.4.13**\nAdd two lines to XStream's setup code:\n\u003e \n\u003e ```\n\u003e xstream.denyTypes(new String[]{ \"javax.imageio.ImageIO$ContainsFilter\" });\n\u003e xstream.denyTypes(new Class[]{ java.lang.ProcessBuilder.class });\n\u003e ```\n\u003e\nFor versions **1.4.7** to **1.4.12** deny at least the following types: javax.imageio.ImageIO$ContainsFilter, java.beans.EventHandler, java.lang.ProcessBuilder, java.lang.Void and void.\n\u003e```\n\u003e xstream.denyTypes(new String[]{ \"javax.imageio.ImageIO$ContainsFilter\" });\n\u003e xstream.denyTypes(new Class[]{ java.lang.ProcessBuilder.class, java.beans.EventHandler.class, java.lang.ProcessBuilder.class, java.lang.Void.class, void.class });\n\u003e ```\n\nFor versions **1.4.6** or below, register a converter to prevent the unmarshalling of the currently know critical types of the Java runtime.\n\u003e ```\n\u003e xstream.registerConverter(new Converter() {\n\u003e   public boolean canConvert(Class type) {\n\u003e     return type != null \u0026\u0026 (type == java.beans.EventHandler.class || type == java.lang.ProcessBuilder.class || type == java.lang.Void.class || void.class || type.getName().equals(\"javax.imageio.ImageIO$ContainsFilter\") || Proxy.isProxy(type));\n\u003e   }\n\u003e \n\u003e   public Object unmarshal(HierarchicalStreamReader reader, UnmarshallingContext context) {\n\u003e     throw new ConversionException(\"Unsupported type due to security reasons.\");\n\u003e   }\n\u003e \n\u003e   public void marshal(Object source, HierarchicalStreamWriter writer, MarshallingContext context) {\n\u003e     throw new ConversionException(\"Unsupported type due to security reasons.\");\n\u003e   }\n\u003e }, XStream.PRIORITY_LOW);\n\u003e ```\n\n\n\n## References\n* Common Weakness Enumeration: [CWE-184](https://cwe.mitre.org/data/definitions/184.html)\n* Common Weakness Enumeration: [CWE-502](https://cwe.mitre.org/data/definitions/502.html)\n\n","text":"Xstream is vulnerable to remote code execution (RCE) through specially crafted input. A remote attacker is able to execute arbitrary system commands on the host machine if Xstream's security framework has been configured with a default blacklist, rather than the more secure whitelisting method."},"properties":{"security-severity":"9.1","tags":["security","open_source_analysis","direct_dependency","patch_available","external/cwe/cwe-184","external/cwe/cwe-502"]},"defaultConfiguration":{"level":"error"}},{"id":"CVE-2021-39139 xstream 1.4.5: com.thoughtworks.xstream","shortDescription":{"text":"Direct Dependency: xstream 1.4.5 (CVE-2021-39139)"},"fullDescription":{"text":"XStream is vulnerable to unsafe deserialization of user-controlled input. A remote attacker could leverage this to execute arbitrary code from a remote server.\n\n**Note:** If the application uses XStream's security framework and whitelist approach to deserialization (recommended), it is not vulnerable."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| xstream 1.4.5  | 1.4.20  | 1.4.20 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/6c637fee-b979-47e7-b2cb-64f781a4dc92?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=f8c25f33-8c23-4fec-8c9b-39b218b0bd98)\n\n\n## Description\nXStream is vulnerable to unsafe deserialization of user-controlled input. A remote attacker could leverage this to execute arbitrary code from a remote server.\n\n**Note:** If the application uses XStream's security framework and whitelist approach to deserialization (recommended), it is not vulnerable.\n\n## Vulnerabilities(BDSA,CVE)\n:red_circle: [CVE-2021-39139](https://openhub.net/vulnerabilities/bdsa/CVE-2021-39139) - Incomplete List of Disallowed Inputs\n\n\n\n## Solution\nFixed in version [**1.4.18**](https://github.com/x-stream/xstream/releases/tag/XSTREAM_1_4_18) by [this](https://github.com/x-stream/xstream/commit/652d72f38b33938c54fd3b2ef626cb7dce38001c) commit.\n\nThe latest releases can be found [here](https://github.com/x-stream/xstream/tags).\n\n## Workaround\nClasses that should be blacklisted for various versions of XStream are listed [here](https://x-stream.github.io/security.html#workaround).\n\n\n\n## References\n* Common Weakness Enumeration: [CWE-184](https://cwe.mitre.org/data/definitions/184.html)\n* Common Weakness Enumeration: [CWE-502](https://cwe.mitre.org/data/definitions/502.html)\n\n","text":"XStream is vulnerable to unsafe deserialization of user-controlled input. A remote attacker could leverage this to execute arbitrary code from a remote server.\n\n**Note:** If the application uses XStream's security framework and whitelist approach to deserialization (recommended), it is not vulnerable."},"properties":{"security-severity":"9.1","tags":["security","open_source_analysis","direct_dependency","patch_available","external/cwe/cwe-184","external/cwe/cwe-502"]},"defaultConfiguration":{"level":"error"}},{"id":"CVE-2021-39141 xstream 1.4.5: com.thoughtworks.xstream","shortDescription":{"text":"Direct Dependency: xstream 1.4.5 (CVE-2021-39141)"},"fullDescription":{"text":"XStream is vulnerable to unsafe deserialization of attacker controlled input. A remote attacker could leverage this to execute arbitrary code from a remote server.\n\n**Note** If the application uses XStreams security framework and whitelist approach to deserialization (recommended), it is not vulnerable."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| xstream 1.4.5  | 1.4.20  | 1.4.20 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/6c637fee-b979-47e7-b2cb-64f781a4dc92?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=f8c25f33-8c23-4fec-8c9b-39b218b0bd98)\n\n\n## Description\nXStream is vulnerable to unsafe deserialization of attacker controlled input. A remote attacker could leverage this to execute arbitrary code from a remote server.\n\n**Note** If the application uses XStreams security framework and whitelist approach to deserialization (recommended), it is not vulnerable.\n\n## Vulnerabilities(BDSA,CVE)\n:red_circle: [CVE-2021-39141](https://openhub.net/vulnerabilities/bdsa/CVE-2021-39141) - Incomplete List of Disallowed Inputs\n\n\n\n## Solution\nFixed in version [**1.4.18**](https://github.com/x-stream/xstream/releases/tag/XSTREAM_1_4_18) by [this](https://github.com/x-stream/xstream/commit/652d72f38b33938c54fd3b2ef626cb7dce38001c) commit.\n\nThe latest releases can be found [here](https://github.com/x-stream/xstream/tags).\n\n## Workaround\nClasses that should be blacklisted for various versions of XStream are listed [here](https://x-stream.github.io/security.html#workaround).\n\n\n\n## References\n* Common Weakness Enumeration: [CWE-184](https://cwe.mitre.org/data/definitions/184.html)\n* Common Weakness Enumeration: [CWE-502](https://cwe.mitre.org/data/definitions/502.html)\n\n","text":"XStream is vulnerable to unsafe deserialization of attacker controlled input. A remote attacker could leverage this to execute arbitrary code from a remote server.\n\n**Note** If the application uses XStreams security framework and whitelist approach to deserialization (recommended), it is not vulnerable."},"properties":{"security-severity":"9.1","tags":["security","open_source_analysis","direct_dependency","patch_available","external/cwe/cwe-184","external/cwe/cwe-502"]},"defaultConfiguration":{"level":"error"}},{"id":"CVE-2021-39154 xstream 1.4.5: com.thoughtworks.xstream","shortDescription":{"text":"Direct Dependency: xstream 1.4.5 (CVE-2021-39154)"},"fullDescription":{"text":"XStream is vulnerable to unsafe deserialization of attacker controlled input. A remote attacker could leverage this to execute arbitrary code from a remote server.\n\nNote that if the application uses XStreams security framework and whitelist approach to deserialization (recommended), it is not vulnerable."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| xstream 1.4.5  | 1.4.20  | 1.4.20 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/6c637fee-b979-47e7-b2cb-64f781a4dc92?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=f8c25f33-8c23-4fec-8c9b-39b218b0bd98)\n\n\n## Description\nXStream is vulnerable to unsafe deserialization of attacker controlled input. A remote attacker could leverage this to execute arbitrary code from a remote server.\n\nNote that if the application uses XStreams security framework and whitelist approach to deserialization (recommended), it is not vulnerable.\n\n## Vulnerabilities(BDSA,CVE)\n:red_circle: [CVE-2021-39154](https://openhub.net/vulnerabilities/bdsa/CVE-2021-39154) - Incomplete List of Disallowed Inputs\n\n\n\n## Solution\nFixed in version [**1.4.18**](https://github.com/x-stream/xstream/releases/tag/XSTREAM_1_4_18) by [this](https://github.com/x-stream/xstream/commit/652d72f38b33938c54fd3b2ef626cb7dce38001c) commit.\n\nThe latest releases can be found [here](https://github.com/x-stream/xstream/tags).\n\n## Workaround\nClasses that should be blacklisted for various versions of XStream are listed [here](https://x-stream.github.io/security.html#workaround).\n\n\n\n## References\n* Common Weakness Enumeration: [CWE-184](https://cwe.mitre.org/data/definitions/184.html)\n* Common Weakness Enumeration: [CWE-502](https://cwe.mitre.org/data/definitions/502.html)\n\n","text":"XStream is vulnerable to unsafe deserialization of attacker controlled input. A remote attacker could leverage this to execute arbitrary code from a remote server.\n\nNote that if the application uses XStreams security framework and whitelist approach to deserialization (recommended), it is not vulnerable."},"properties":{"security-severity":"9.1","tags":["security","open_source_analysis","direct_dependency","patch_available","external/cwe/cwe-184","external/cwe/cwe-502"]},"defaultConfiguration":{"level":"error"}},{"id":"CVE-2021-39144 xstream 1.4.5: com.thoughtworks.xstream","shortDescription":{"text":"Direct Dependency: xstream 1.4.5 (CVE-2021-39144)"},"fullDescription":{"text":"XStream is vulnerable to unsafe deserialization of attacker controlled input. A remote attacker could leverage this to execute arbitrary system commands.\n\nNote that if the application uses XStream's security framework and allowlist approach to deserialization (recommended), it is not vulnerable.\n\nThis vulnerability is listed as exploitable by the Cybersecurity \u0026 Infrastructure Security Agency in their [Known Exploited Vulnerabilities Catalog](https://www.cisa.gov/known-exploited-vulnerabilities-catalog)."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| xstream 1.4.5  | 1.4.20  | 1.4.20 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/6c637fee-b979-47e7-b2cb-64f781a4dc92?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=f8c25f33-8c23-4fec-8c9b-39b218b0bd98)\n\n\n## Description\nXStream is vulnerable to unsafe deserialization of attacker controlled input. A remote attacker could leverage this to execute arbitrary system commands.\n\nNote that if the application uses XStream's security framework and allowlist approach to deserialization (recommended), it is not vulnerable.\n\nThis vulnerability is listed as exploitable by the Cybersecurity \u0026 Infrastructure Security Agency in their [Known Exploited Vulnerabilities Catalog](https://www.cisa.gov/known-exploited-vulnerabilities-catalog).\n\n## Vulnerabilities(BDSA,CVE)\n:red_circle: [CVE-2021-39144](https://openhub.net/vulnerabilities/bdsa/CVE-2021-39144) - Incomplete List of Disallowed Inputs\n\n\n\n## Solution\nFixed in version [**1.4.18**](https://github.com/x-stream/xstream/releases/tag/XSTREAM_1_4_18) by [this](https://github.com/x-stream/xstream/commit/652d72f38b33938c54fd3b2ef626cb7dce38001c) commit.\n\nThe latest releases can be found [here](https://github.com/x-stream/xstream/tags).\n\n## Workaround\nClasses that should be blacklisted for various versions of XStream are listed [here](https://x-stream.github.io/security.html#workaround).\n\n\n\n## References\n* Common Weakness Enumeration: [CWE-184](https://cwe.mitre.org/data/definitions/184.html)\n* Common Weakness Enumeration: [CWE-502](https://cwe.mitre.org/data/definitions/502.html)\n\n","text":"XStream is vulnerable to unsafe deserialization of attacker controlled input. A remote attacker could leverage this to execute arbitrary system commands.\n\nNote that if the application uses XStream's security framework and allowlist approach to deserialization (recommended), it is not vulnerable.\n\nThis vulnerability is listed as exploitable by the Cybersecurity \u0026 Infrastructure Security Agency in their [Known Exploited Vulnerabilities Catalog](https://www.cisa.gov/known-exploited-vulnerabilities-catalog)."},"properties":{"security-severity":"9.1","tags":["security","open_source_analysis","direct_dependency","patch_available","external/cwe/cwe-184","external/cwe/cwe-502"]},"defaultConfiguration":{"level":"error"}},{"id":"CVE-2013-7285 xstream 1.4.5: com.thoughtworks.xstream","shortDescription":{"text":"Direct Dependency: xstream 1.4.5 (CVE-2013-7285)"},"fullDescription":{"text":"Xstream is vulnerable to remote code execution (RCE) by an attacker who can supply a specially crafted input stream."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| xstream 1.4.5  | 1.4.20  | 1.4.20 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/6c637fee-b979-47e7-b2cb-64f781a4dc92?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=f8c25f33-8c23-4fec-8c9b-39b218b0bd98)\n\n\n## Description\nXstream is vulnerable to remote code execution (RCE) by an attacker who can supply a specially crafted input stream.\n\n## Vulnerabilities(BDSA,CVE)\n:red_circle: [CVE-2013-7285](https://openhub.net/vulnerabilities/bdsa/CVE-2013-7285) - Insecure Object Deserialization\n\n\n\n## Solution\nFixed in version [**1.4.7**](https://github.com/x-stream/xstream/releases/tag/XSTREAM_1_4_7) by [this](https://github.com/x-stream/xstream/commit/94666ae6dfe839410c73bdfeeb211374f04a2059) commit.\n\n## Workaround\nThe vendor supplies the following workaround:\n\n\"Users can register an own converter for dynamic proxies, the java.beans.EventHandler type or for the java.lang.ProcessBuilder type, that also protects against an attack for this special case:\n```\nxstream.registerConverter(new Converter() {\n  public boolean canConvert(Class type) {\n    return type != null \u0026\u0026 (type == java.beans.EventHandler || type == java.lang.ProcessBuilder || Proxy.isProxy(type));\n  }\n\n  public Object unmarshal(HierarchicalStreamReader reader, UnmarshallingContext context) {\n    throw new ConversionException(\"Unsupported type due to security reasons.\");\n  }\n\n  public void marshal(Object source, HierarchicalStreamWriter writer, MarshallingContext context) {\n    throw new ConversionException(\"Unsupported type due to security reasons.\");\n  }\n}, XStream.PRIORITY_LOW);\n```\n\"\n\n\n\n## References\n* Common Weakness Enumeration: [CWE-502](https://cwe.mitre.org/data/definitions/502.html)\n\n","text":"Xstream is vulnerable to remote code execution (RCE) by an attacker who can supply a specially crafted input stream."},"properties":{"security-severity":"9.1","tags":["security","open_source_analysis","direct_dependency","patch_available","external/cwe/cwe-502"]},"defaultConfiguration":{"level":"error"}},{"id":"CVE-2021-39146 xstream 1.4.5: com.thoughtworks.xstream","shortDescription":{"text":"Direct Dependency: xstream 1.4.5 (CVE-2021-39146)"},"fullDescription":{"text":"XStream is vulnerable to remote code execution (RCE) due to the unsafe deserialization of classes. A remote attacker could execute arbitrary code on a vulnerable server by causing that server to deserialize a maliciously crafted serialized object."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| xstream 1.4.5  | 1.4.20  | 1.4.20 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/6c637fee-b979-47e7-b2cb-64f781a4dc92?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=f8c25f33-8c23-4fec-8c9b-39b218b0bd98)\n\n\n## Description\nXStream is vulnerable to remote code execution (RCE) due to the unsafe deserialization of classes. A remote attacker could execute arbitrary code on a vulnerable server by causing that server to deserialize a maliciously crafted serialized object.\n\n## Vulnerabilities(BDSA,CVE)\n:red_circle: [CVE-2021-39146](https://openhub.net/vulnerabilities/bdsa/CVE-2021-39146) - Insecure Object Deserialization\n\n\n\n## Solution\nFixed in version [**1.4.18**](https://github.com/x-stream/xstream/releases/tag/XSTREAM_1_4_18) by [this](https://github.com/x-stream/xstream/commit/652d72f38b33938c54fd3b2ef626cb7dce38001c) commit.\n\nThe latest stable releases can be found [here](https://github.com/x-stream/xstream/releases).\n\n## Workaround\nClasses that should be blacklisted for various versions of XStream are listed [here](https://x-stream.github.io/security.html#workaround).\n\n\n\n## References\n* Common Weakness Enumeration: [CWE-502](https://cwe.mitre.org/data/definitions/502.html)\n\n","text":"XStream is vulnerable to remote code execution (RCE) due to the unsafe deserialization of classes. A remote attacker could execute arbitrary code on a vulnerable server by causing that server to deserialize a maliciously crafted serialized object."},"properties":{"security-severity":"9.1","tags":["security","open_source_analysis","direct_dependency","patch_available","external/cwe/cwe-502"]},"defaultConfiguration":{"level":"error"}},{"id":"CVE-2021-39147 xstream 1.4.5: com.thoughtworks.xstream","shortDescription":{"text":"Direct Dependency: xstream 1.4.5 (CVE-2021-39147)"},"fullDescription":{"text":"XStream is vulnerable to remote code execution (RCE) due to the unsafe deserialization of classes. A remote attacker could execute arbitrary code on a vulnerable server by causing that server to deserialize a maliciously crafted serialized object."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| xstream 1.4.5  | 1.4.20  | 1.4.20 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/6c637fee-b979-47e7-b2cb-64f781a4dc92?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=f8c25f33-8c23-4fec-8c9b-39b218b0bd98)\n\n\n## Description\nXStream is vulnerable to remote code execution (RCE) due to the unsafe deserialization of classes. A remote attacker could execute arbitrary code on a vulnerable server by causing that server to deserialize a maliciously crafted serialized object.\n\n## Vulnerabilities(BDSA,CVE)\n:red_circle: [CVE-2021-39147](https://openhub.net/vulnerabilities/bdsa/CVE-2021-39147) - Insecure Object Deserialization\n\n\n\n## Solution\nFixed in version [**1.4.18**](https://github.com/x-stream/xstream/releases/tag/XSTREAM_1_4_18) by [this](https://github.com/x-stream/xstream/commit/652d72f38b33938c54fd3b2ef626cb7dce38001c) commit.\n\nThe latest stable releases can be found [here](https://github.com/x-stream/xstream/releases).\n\n## Workaround\nClasses that should be blacklisted for various versions of XStream are listed [here](https://x-stream.github.io/security.html#workaround).\n\n\n\n## References\n* Common Weakness Enumeration: [CWE-502](https://cwe.mitre.org/data/definitions/502.html)\n\n","text":"XStream is vulnerable to remote code execution (RCE) due to the unsafe deserialization of classes. A remote attacker could execute arbitrary code on a vulnerable server by causing that server to deserialize a maliciously crafted serialized object."},"properties":{"security-severity":"9.1","tags":["security","open_source_analysis","direct_dependency","patch_available","external/cwe/cwe-502"]},"defaultConfiguration":{"level":"error"}},{"id":"CVE-2021-39152 xstream 1.4.5: com.thoughtworks.xstream","shortDescription":{"text":"Direct Dependency: xstream 1.4.5 (CVE-2021-39152)"},"fullDescription":{"text":"XStream is vulnerable to server-side request forgery (SSRF) due to the improper restriction of deserialization functionality. A remote attacker could send requests to intranet hosts by sending maliciously crafted serialized data to a vulnerable server.\n\n **Note** If the application uses XStreams security framework and whitelist approach to deserialization (recommended), it is not vulnerable."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| xstream 1.4.5  | 1.4.20  | 1.4.20 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/6c637fee-b979-47e7-b2cb-64f781a4dc92?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=f8c25f33-8c23-4fec-8c9b-39b218b0bd98)\n\n\n## Description\nXStream is vulnerable to server-side request forgery (SSRF) due to the improper restriction of deserialization functionality. A remote attacker could send requests to intranet hosts by sending maliciously crafted serialized data to a vulnerable server.\n\n **Note** If the application uses XStreams security framework and whitelist approach to deserialization (recommended), it is not vulnerable.\n\n## Vulnerabilities(BDSA,CVE)\n:orange_circle: [CVE-2021-39152](https://openhub.net/vulnerabilities/bdsa/CVE-2021-39152) - Insecure Object Deserialization\n\n\n\n## Solution\nFixed in version [**1.4.18**](https://github.com/x-stream/xstream/releases/tag/XSTREAM_1_4_18) by [this](https://github.com/x-stream/xstream/commit/652d72f38b33938c54fd3b2ef626cb7dce38001c) commit.\n\nThe latest stable releases can be found [here](https://github.com/x-stream/xstream/releases).\n\n## Workaround\nUsers can manually prevent the deserialization of problematic classes by following the [guidance](https://x-stream.github.io/security.html#workaround) provided by the vendor.\n\n\n\n## References\n* Common Weakness Enumeration: [CWE-502](https://cwe.mitre.org/data/definitions/502.html)\n* Common Weakness Enumeration: [CWE-918](https://cwe.mitre.org/data/definitions/918.html)\n\n","text":"XStream is vulnerable to server-side request forgery (SSRF) due to the improper restriction of deserialization functionality. A remote attacker could send requests to intranet hosts by sending maliciously crafted serialized data to a vulnerable server.\n\n **Note** If the application uses XStreams security framework and whitelist approach to deserialization (recommended), it is not vulnerable."},"properties":{"security-severity":"8.9","tags":["security","open_source_analysis","direct_dependency","patch_available","external/cwe/cwe-502","external/cwe/cwe-918"]},"defaultConfiguration":{"level":"error"}},{"id":"CVE-2021-21349 xstream 1.4.5: com.thoughtworks.xstream","shortDescription":{"text":"Direct Dependency: xstream 1.4.5 (CVE-2021-21349)"},"fullDescription":{"text":"XStream is vulnerable to server-side request forgery (SSRF) by a remote attacker who can supply a specially crafted input stream to modify or inject objects. This allows them to request data from the internal network that the XStream application is hosted on."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| xstream 1.4.5  | 1.4.20  | 1.4.20 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/6c637fee-b979-47e7-b2cb-64f781a4dc92?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=f8c25f33-8c23-4fec-8c9b-39b218b0bd98)\n\n\n## Description\nXStream is vulnerable to server-side request forgery (SSRF) by a remote attacker who can supply a specially crafted input stream to modify or inject objects. This allows them to request data from the internal network that the XStream application is hosted on.\n\n## Vulnerabilities(BDSA,CVE)\n:orange_circle: [CVE-2021-21349](https://openhub.net/vulnerabilities/bdsa/CVE-2021-21349) - Incomplete List of Disallowed Inputs\n\n\n\n## Solution\nFixed in **[1.4.16](https://github.com/x-stream/xstream/releases/tag/XSTREAM_1_4_16)** by [this](https://github.com/x-stream/xstream/commit/d5e51177634afea7213b9dc2d21f101d2e258db9) commit.\n\nThe latest stable releases are available [here](https://x-stream.github.io/download.html).\n\n## Workaround\nThe vendor recommends the use of XStream's security framework to implement a whitelist for allowed types. \n\nThe vendor has made available a set of [workarounds](https://x-stream.github.io/security.html#workaround) detailing this feature.\n\n\n\n## References\n* Common Weakness Enumeration: [CWE-184](https://cwe.mitre.org/data/definitions/184.html)\n* Common Weakness Enumeration: [CWE-918](https://cwe.mitre.org/data/definitions/918.html)\n\n","text":"XStream is vulnerable to server-side request forgery (SSRF) by a remote attacker who can supply a specially crafted input stream to modify or inject objects. This allows them to request data from the internal network that the XStream application is hosted on."},"properties":{"security-severity":"8.9","tags":["security","open_source_analysis","direct_dependency","patch_available","external/cwe/cwe-184","external/cwe/cwe-918"]},"defaultConfiguration":{"level":"error"}},{"id":"CVE-2021-21344 xstream 1.4.5: com.thoughtworks.xstream","shortDescription":{"text":"Direct Dependency: xstream 1.4.5 (CVE-2021-21344)"},"fullDescription":{"text":"XStream, when in its default configuration or operating without a sufficient blacklist / whitelist configuration, is vulnerable to an arbitrary code execution issue. This is due to how XStream can potentially create new instances of dangerous objects that are not blocked based on the contents of the input stream. The potentially dangerous types in this case are the JAXB `Accessor$GetterSetterReflection` internal type and `com.sun.rowset.JdbcRowSetImpl`.\n\nAn attacker could supply a crafted input to XStream in order execute arbitrary code stored on a remote host."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| xstream 1.4.5  | 1.4.20  | 1.4.20 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/6c637fee-b979-47e7-b2cb-64f781a4dc92?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=f8c25f33-8c23-4fec-8c9b-39b218b0bd98)\n\n\n## Description\nXStream, when in its default configuration or operating without a sufficient blacklist / whitelist configuration, is vulnerable to an arbitrary code execution issue. This is due to how XStream can potentially create new instances of dangerous objects that are not blocked based on the contents of the input stream. The potentially dangerous types in this case are the JAXB `Accessor$GetterSetterReflection` internal type and `com.sun.rowset.JdbcRowSetImpl`.\n\nAn attacker could supply a crafted input to XStream in order execute arbitrary code stored on a remote host.\n\n## Vulnerabilities(BDSA,CVE)\n:orange_circle: [CVE-2021-21344](https://openhub.net/vulnerabilities/bdsa/CVE-2021-21344) - Insecure Object Deserialization\n\n\n\n## Solution\nFixed in [**1.4.16**](https://github.com/x-stream/xstream/releases/tag/XSTREAM_1_4_16) by [this](https://github.com/x-stream/xstream/commit/d5e51177634afea7213b9dc2d21f101d2e258db9) commit.\n\nThe latest stable releases are available [here](http://x-stream.github.io/download.html).\n\n## Workaround\nThe vendor recommends the use of XStream's security framework to implement a whitelist for allowed types.\n\nThe vendor has made available a set of [workarounds](https://x-stream.github.io/security.html#workaround) detailing this feature.\n\n\n\n## References\n* Common Weakness Enumeration: [CWE-502](https://cwe.mitre.org/data/definitions/502.html)\n\n","text":"XStream, when in its default configuration or operating without a sufficient blacklist / whitelist configuration, is vulnerable to an arbitrary code execution issue. This is due to how XStream can potentially create new instances of dangerous objects that are not blocked based on the contents of the input stream. The potentially dangerous types in this case are the JAXB `Accessor$GetterSetterReflection` internal type and `com.sun.rowset.JdbcRowSetImpl`.\n\nAn attacker could supply a crafted input to XStream in order execute arbitrary code stored on a remote host."},"properties":{"security-severity":"8.9","tags":["security","open_source_analysis","direct_dependency","patch_available","external/cwe/cwe-502"]},"defaultConfiguration":{"level":"error"}},{"id":"CVE-2021-21345 xstream 1.4.5: com.thoughtworks.xstream","shortDescription":{"text":"Direct Dependency: xstream 1.4.5 (CVE-2021-21345)"},"fullDescription":{"text":"XStream, when in its default configuration or operating without a sufficient blacklist / whitelist configuration, is vulnerable to an arbitrary command execution issue. This is due to how XStream can potentially create new instances of dangerous objects that are not blocked based on the contents of the input stream. The potentially dangerous type in this case is `com.sun.corba.se.impl.activation.ServerTableEntry`.\n\nAn attacker could supply a crafted input to XStream in order execute arbitrary commands on the XStream host."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| xstream 1.4.5  | 1.4.20  | 1.4.20 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/6c637fee-b979-47e7-b2cb-64f781a4dc92?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=f8c25f33-8c23-4fec-8c9b-39b218b0bd98)\n\n\n## Description\nXStream, when in its default configuration or operating without a sufficient blacklist / whitelist configuration, is vulnerable to an arbitrary command execution issue. This is due to how XStream can potentially create new instances of dangerous objects that are not blocked based on the contents of the input stream. The potentially dangerous type in this case is `com.sun.corba.se.impl.activation.ServerTableEntry`.\n\nAn attacker could supply a crafted input to XStream in order execute arbitrary commands on the XStream host.\n\n## Vulnerabilities(BDSA,CVE)\n:orange_circle: [CVE-2021-21345](https://openhub.net/vulnerabilities/bdsa/CVE-2021-21345) - Insecure Object Deserialization\n\n\n\n## Solution\nFixed in [**1.4.16**](https://github.com/x-stream/xstream/releases/tag/XSTREAM_1_4_16) by [this](https://github.com/x-stream/xstream/commit/d5e51177634afea7213b9dc2d21f101d2e258db9) commit.\n\nThe latest stable releases are available [here](http://x-stream.github.io/download.html).\n\n## Workaround\nThe vendor recommends the use of XStream's security framework to implement a whitelist for allowed types.\n\nThe vendor has made available a set of [workarounds](https://x-stream.github.io/security.html#workaround) detailing this feature.\n\n\n\n## References\n* Common Weakness Enumeration: [CWE-502](https://cwe.mitre.org/data/definitions/502.html)\n* Common Weakness Enumeration: [CWE-77](https://cwe.mitre.org/data/definitions/77.html)\n\n","text":"XStream, when in its default configuration or operating without a sufficient blacklist / whitelist configuration, is vulnerable to an arbitrary command execution issue. This is due to how XStream can potentially create new instances of dangerous objects that are not blocked based on the contents of the input stream. The potentially dangerous type in this case is `com.sun.corba.se.impl.activation.ServerTableEntry`.\n\nAn attacker could supply a crafted input to XStream in order execute arbitrary commands on the XStream host."},"properties":{"security-severity":"8.9","tags":["security","open_source_analysis","direct_dependency","patch_available","external/cwe/cwe-502","external/cwe/cwe-77"]},"defaultConfiguration":{"level":"error"}},{"id":"CVE-2021-21342 xstream 1.4.5: com.thoughtworks.xstream","shortDescription":{"text":"Direct Dependency: xstream 1.4.5 (CVE-2021-21342)"},"fullDescription":{"text":"XStream, when in its default configuration or operating without a sufficient blacklist / whitelist configuration, is vulnerable to a server-side request forgery (SSRF) issue. This is due to how XStream can potentially create new instances of dangerous objects that are not blocked based on the contents of the input stream. The potentially dangerous types in this case are `sun.awt.datatransfer.DataTransferer$IndexOrderComparator` and `javax.activation.URLDataSource`.\n\nAn attacker could supply a crafted input to XStream in order request information from internal resources."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| xstream 1.4.5  | 1.4.20  | 1.4.20 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/6c637fee-b979-47e7-b2cb-64f781a4dc92?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=f8c25f33-8c23-4fec-8c9b-39b218b0bd98)\n\n\n## Description\nXStream, when in its default configuration or operating without a sufficient blacklist / whitelist configuration, is vulnerable to a server-side request forgery (SSRF) issue. This is due to how XStream can potentially create new instances of dangerous objects that are not blocked based on the contents of the input stream. The potentially dangerous types in this case are `sun.awt.datatransfer.DataTransferer$IndexOrderComparator` and `javax.activation.URLDataSource`.\n\nAn attacker could supply a crafted input to XStream in order request information from internal resources.\n\n## Vulnerabilities(BDSA,CVE)\n:orange_circle: [CVE-2021-21342](https://openhub.net/vulnerabilities/bdsa/CVE-2021-21342) - Insecure Object Deserialization\n\n\n\n## Solution\nFixed in [**1.4.16**](https://github.com/x-stream/xstream/releases/tag/XSTREAM_1_4_16) by [this](https://github.com/x-stream/xstream/commit/d5e51177634afea7213b9dc2d21f101d2e258db9) commit.\n\nThe latest stable releases are available [here](http://x-stream.github.io/download.html).\n\n## Workaround\nThe vendor recommends the use of XStream's security framework to implement a whitelist for allowed types. \n\nThe vendor has made available a set of [workarounds](https://x-stream.github.io/security.html#workaround) detailing this feature.\n\n\n\n## References\n* Common Weakness Enumeration: [CWE-502](https://cwe.mitre.org/data/definitions/502.html)\n* Common Weakness Enumeration: [CWE-918](https://cwe.mitre.org/data/definitions/918.html)\n\n","text":"XStream, when in its default configuration or operating without a sufficient blacklist / whitelist configuration, is vulnerable to a server-side request forgery (SSRF) issue. This is due to how XStream can potentially create new instances of dangerous objects that are not blocked based on the contents of the input stream. The potentially dangerous types in this case are `sun.awt.datatransfer.DataTransferer$IndexOrderComparator` and `javax.activation.URLDataSource`.\n\nAn attacker could supply a crafted input to XStream in order request information from internal resources."},"properties":{"security-severity":"8.9","tags":["security","open_source_analysis","direct_dependency","patch_available","external/cwe/cwe-502","external/cwe/cwe-918"]},"defaultConfiguration":{"level":"error"}},{"id":"CVE-2021-21346 xstream 1.4.5: com.thoughtworks.xstream","shortDescription":{"text":"Direct Dependency: xstream 1.4.5 (CVE-2021-21346)"},"fullDescription":{"text":"XStream, when in its default configuration or operating without a sufficient blacklist / whitelist configuration, is vulnerable to an arbitrary code execution issue. This is due to how XStream can potentially create new instances of dangerous objects that are not blocked based on the contents of the input stream. The potentially dangerous type in this case is `sun.swing.SwingLazyValue`.\n\nAn attacker could supply a crafted input to XStream in order execute arbitrary code stored on a remote host."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| xstream 1.4.5  | 1.4.20  | 1.4.20 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/6c637fee-b979-47e7-b2cb-64f781a4dc92?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=f8c25f33-8c23-4fec-8c9b-39b218b0bd98)\n\n\n## Description\nXStream, when in its default configuration or operating without a sufficient blacklist / whitelist configuration, is vulnerable to an arbitrary code execution issue. This is due to how XStream can potentially create new instances of dangerous objects that are not blocked based on the contents of the input stream. The potentially dangerous type in this case is `sun.swing.SwingLazyValue`.\n\nAn attacker could supply a crafted input to XStream in order execute arbitrary code stored on a remote host.\n\n## Vulnerabilities(BDSA,CVE)\n:orange_circle: [CVE-2021-21346](https://openhub.net/vulnerabilities/bdsa/CVE-2021-21346) - Insecure Object Deserialization\n\n\n\n## Solution\nFixed in [**1.4.16**](https://github.com/x-stream/xstream/releases/tag/XSTREAM_1_4_16) by [this](https://github.com/x-stream/xstream/commit/d5e51177634afea7213b9dc2d21f101d2e258db9) commit.\n\nThe latest stable releases are available [here](http://x-stream.github.io/download.html).\n\n## Workaround\nThe vendor recommends the use of XStream's security framework to implement a whitelist for allowed types. \n\nThe vendor has made available a set of [workarounds](https://x-stream.github.io/security.html#workaround) detailing this feature.\n\n\n\n## References\n* Common Weakness Enumeration: [CWE-502](https://cwe.mitre.org/data/definitions/502.html)\n\n","text":"XStream, when in its default configuration or operating without a sufficient blacklist / whitelist configuration, is vulnerable to an arbitrary code execution issue. This is due to how XStream can potentially create new instances of dangerous objects that are not blocked based on the contents of the input stream. The potentially dangerous type in this case is `sun.swing.SwingLazyValue`.\n\nAn attacker could supply a crafted input to XStream in order execute arbitrary code stored on a remote host."},"properties":{"security-severity":"8.9","tags":["security","open_source_analysis","direct_dependency","patch_available","external/cwe/cwe-502"]},"defaultConfiguration":{"level":"error"}},{"id":"CVE-2021-29505 xstream 1.4.5: com.thoughtworks.xstream","shortDescription":{"text":"Direct Dependency: xstream 1.4.5 (CVE-2021-29505)"},"fullDescription":{"text":"XStream, when in its default configuration or operating without a sufficient blacklist / whitelist configuration, is vulnerable to an arbitrary code execution issue. This is due to how XStream can potentially create new instances of dangerous objects that are not blocked based on the contents of the input stream. The potentially dangerous type in this case is `sun.jndi.toolkit.dir.LazySearchEnumerationImpl`.\n\nAn attacker could supply a crafted input to XStream in order execute arbitrary code stored on a remote host."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| xstream 1.4.5  | 1.4.20  | 1.4.20 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/6c637fee-b979-47e7-b2cb-64f781a4dc92?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=f8c25f33-8c23-4fec-8c9b-39b218b0bd98)\n\n\n## Description\nXStream, when in its default configuration or operating without a sufficient blacklist / whitelist configuration, is vulnerable to an arbitrary code execution issue. This is due to how XStream can potentially create new instances of dangerous objects that are not blocked based on the contents of the input stream. The potentially dangerous type in this case is `sun.jndi.toolkit.dir.LazySearchEnumerationImpl`.\n\nAn attacker could supply a crafted input to XStream in order execute arbitrary code stored on a remote host.\n\n## Vulnerabilities(BDSA,CVE)\n:orange_circle: [CVE-2021-29505](https://openhub.net/vulnerabilities/bdsa/CVE-2021-29505) - Insecure Object Deserialization\n\n\n\n## Solution\nFixed in [**1.4.17**](https://github.com/x-stream/xstream/releases/tag/XSTREAM_1_4_16) by [this](https://github.com/x-stream/xstream/commit/24fac82191292c6ae25f94508d28b9823f83624f) commit.\n\nThe latest stable releases are available [here](http://x-stream.github.io/download.html).\n\n## Workaround\nThe vendor recommends the use of XStream's security framework to implement a whitelist for allowed types.\n\nThe vendor has made available a set of [workarounds](https://x-stream.github.io/security.html#workaround) detailing this feature.\n\n\n\n## References\n* Common Weakness Enumeration: [CWE-502](https://cwe.mitre.org/data/definitions/502.html)\n\n","text":"XStream, when in its default configuration or operating without a sufficient blacklist / whitelist configuration, is vulnerable to an arbitrary code execution issue. This is due to how XStream can potentially create new instances of dangerous objects that are not blocked based on the contents of the input stream. The potentially dangerous type in this case is `sun.jndi.toolkit.dir.LazySearchEnumerationImpl`.\n\nAn attacker could supply a crafted input to XStream in order execute arbitrary code stored on a remote host."},"properties":{"security-severity":"8.9","tags":["security","open_source_analysis","direct_dependency","patch_available","external/cwe/cwe-502"]},"defaultConfiguration":{"level":"error"}},{"id":"CVE-2021-21350 xstream 1.4.5: com.thoughtworks.xstream","shortDescription":{"text":"Direct Dependency: xstream 1.4.5 (CVE-2021-21350)"},"fullDescription":{"text":"Xstream is vulnerable to remote code execution (RCE) by an attacker who can supply a specially crafted input stream."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| xstream 1.4.5  | 1.4.20  | 1.4.20 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/6c637fee-b979-47e7-b2cb-64f781a4dc92?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=f8c25f33-8c23-4fec-8c9b-39b218b0bd98)\n\n\n## Description\nXstream is vulnerable to remote code execution (RCE) by an attacker who can supply a specially crafted input stream.\n\n## Vulnerabilities(BDSA,CVE)\n:orange_circle: [CVE-2021-21350](https://openhub.net/vulnerabilities/bdsa/CVE-2021-21350) - Insecure Object Deserialization\n\n\n\n## Solution\nFixed in **[1.4.16](https://github.com/x-stream/xstream/releases/tag/XSTREAM_1_4_16)** by [this](https://github.com/x-stream/xstream/commit/d5e51177634afea7213b9dc2d21f101d2e258db9) commit.\n\n## Workaround\nOfficial workarounds for various versions are available [here](https://x-stream.github.io/security.html#workaround).\n\n\n\n## References\n* Common Weakness Enumeration: [CWE-502](https://cwe.mitre.org/data/definitions/502.html)\n\n","text":"Xstream is vulnerable to remote code execution (RCE) by an attacker who can supply a specially crafted input stream."},"properties":{"security-severity":"8.9","tags":["security","open_source_analysis","direct_dependency","patch_available","external/cwe/cwe-502"]},"defaultConfiguration":{"level":"error"}},{"id":"CVE-2021-39151 xstream 1.4.5: com.thoughtworks.xstream","shortDescription":{"text":"Direct Dependency: xstream 1.4.5 (CVE-2021-39151)"},"fullDescription":{"text":"XStream is vulnerable to remote code execution (RCE) due to the unsafe demarshalling of the `KeyStoreResolver$KeyStoreIterator` subclass. A remote attacker could execute arbitrary code on a vulnerable server by causing that server to deserialize a maliciously crafted serialized object."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| xstream 1.4.5  | 1.4.20  | 1.4.20 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/6c637fee-b979-47e7-b2cb-64f781a4dc92?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=f8c25f33-8c23-4fec-8c9b-39b218b0bd98)\n\n\n## Description\nXStream is vulnerable to remote code execution (RCE) due to the unsafe demarshalling of the `KeyStoreResolver$KeyStoreIterator` subclass. A remote attacker could execute arbitrary code on a vulnerable server by causing that server to deserialize a maliciously crafted serialized object.\n\n## Vulnerabilities(BDSA,CVE)\n:orange_circle: [CVE-2021-39151](https://openhub.net/vulnerabilities/bdsa/CVE-2021-39151) - Insecure Object Deserialization\n\n\n\n## Solution\nFixed in version [**1.4.18**](https://github.com/x-stream/xstream/releases/tag/XSTREAM_1_4_18) by [this](https://github.com/x-stream/xstream/commit/652d72f38b33938c54fd3b2ef626cb7dce38001c) commit.\n\nThe latest stable releases can be found [here](https://github.com/x-stream/xstream/releases).\n\n## Workaround\nUsers can manually prevent the deserialization of problematic classes by following the [guidance](https://x-stream.github.io/security.html#workaround) provided by the vendor.\n\n\n\n## References\n* Common Weakness Enumeration: [CWE-502](https://cwe.mitre.org/data/definitions/502.html)\n\n","text":"XStream is vulnerable to remote code execution (RCE) due to the unsafe demarshalling of the `KeyStoreResolver$KeyStoreIterator` subclass. A remote attacker could execute arbitrary code on a vulnerable server by causing that server to deserialize a maliciously crafted serialized object."},"properties":{"security-severity":"8.9","tags":["security","open_source_analysis","direct_dependency","patch_available","external/cwe/cwe-502"]},"defaultConfiguration":{"level":"error"}},{"id":"CVE-2021-21347 xstream 1.4.5: com.thoughtworks.xstream","shortDescription":{"text":"Direct Dependency: xstream 1.4.5 (CVE-2021-21347)"},"fullDescription":{"text":"XStream, when in its default configuration or operating without a sufficient blacklist / whitelist configuration, is vulnerable to an arbitrary code execution issue. This is due to how XStream can potentially create new instances of dangerous objects that are not blocked based on the contents of the input stream. The potentially dangerous type in this case are `javafx.collections.ObservableList` and `JavacProcessingEnvironment$NameProcessIterator`.\n\nAn attacker could supply a crafted input to XStream in order execute arbitrary code stored on a remote host."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| xstream 1.4.5  | 1.4.20  | 1.4.20 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/6c637fee-b979-47e7-b2cb-64f781a4dc92?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=f8c25f33-8c23-4fec-8c9b-39b218b0bd98)\n\n\n## Description\nXStream, when in its default configuration or operating without a sufficient blacklist / whitelist configuration, is vulnerable to an arbitrary code execution issue. This is due to how XStream can potentially create new instances of dangerous objects that are not blocked based on the contents of the input stream. The potentially dangerous type in this case are `javafx.collections.ObservableList` and `JavacProcessingEnvironment$NameProcessIterator`.\n\nAn attacker could supply a crafted input to XStream in order execute arbitrary code stored on a remote host.\n\n## Vulnerabilities(BDSA,CVE)\n:orange_circle: [CVE-2021-21347](https://openhub.net/vulnerabilities/bdsa/CVE-2021-21347) - Insecure Object Deserialization\n\n\n\n## Solution\nFixed in [**1.4.16**](https://github.com/x-stream/xstream/releases/tag/XSTREAM_1_4_16) by [this](https://github.com/x-stream/xstream/commit/d5e51177634afea7213b9dc2d21f101d2e258db9) commit.\n\nThe latest stable releases are available [here](http://x-stream.github.io/download.html).\n\n## Workaround\nThe vendor recommends the use of XStream's security framework to implement a whitelist for allowed types. \n\nThe vendor has made available a set of [workarounds](https://x-stream.github.io/security.html#workaround) detailing this feature.\n\n\n\n## References\n* Common Weakness Enumeration: [CWE-502](https://cwe.mitre.org/data/definitions/502.html)\n\n","text":"XStream, when in its default configuration or operating without a sufficient blacklist / whitelist configuration, is vulnerable to an arbitrary code execution issue. This is due to how XStream can potentially create new instances of dangerous objects that are not blocked based on the contents of the input stream. The potentially dangerous type in this case are `javafx.collections.ObservableList` and `JavacProcessingEnvironment$NameProcessIterator`.\n\nAn attacker could supply a crafted input to XStream in order execute arbitrary code stored on a remote host."},"properties":{"security-severity":"8.9","tags":["security","open_source_analysis","direct_dependency","patch_available","external/cwe/cwe-502"]},"defaultConfiguration":{"level":"error"}},{"id":"CVE-2021-21351 xstream 1.4.5: com.thoughtworks.xstream","shortDescription":{"text":"Direct Dependency: xstream 1.4.5 (CVE-2021-21351)"},"fullDescription":{"text":"Xstream is vulnerable to remote code execution (RCE) by an attacker who can supply a specially crafted input stream."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| xstream 1.4.5  | 1.4.20  | 1.4.20 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/6c637fee-b979-47e7-b2cb-64f781a4dc92?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=f8c25f33-8c23-4fec-8c9b-39b218b0bd98)\n\n\n## Description\nXstream is vulnerable to remote code execution (RCE) by an attacker who can supply a specially crafted input stream.\n\n## Vulnerabilities(BDSA,CVE)\n:orange_circle: [CVE-2021-21351](https://openhub.net/vulnerabilities/bdsa/CVE-2021-21351) - Incomplete List of Disallowed Inputs\n\n\n\n## Solution\nFixed in **[1.4.16](https://github.com/x-stream/xstream/releases/tag/XSTREAM_1_4_16)** by [this](https://github.com/x-stream/xstream/commit/d5e51177634afea7213b9dc2d21f101d2e258db9) commit.\n\n## Workaround\nOfficial workarounds for various versions are available [here](https://x-stream.github.io/security.html#workaround).\n\n\n\n## References\n* Common Weakness Enumeration: [CWE-184](https://cwe.mitre.org/data/definitions/184.html)\n* Common Weakness Enumeration: [CWE-502](https://cwe.mitre.org/data/definitions/502.html)\n\n","text":"Xstream is vulnerable to remote code execution (RCE) by an attacker who can supply a specially crafted input stream."},"properties":{"security-severity":"8.9","tags":["security","open_source_analysis","direct_dependency","patch_available","external/cwe/cwe-184","external/cwe/cwe-502"]},"defaultConfiguration":{"level":"error"}},{"id":"CVE-2021-39153 xstream 1.4.5: com.thoughtworks.xstream","shortDescription":{"text":"Direct Dependency: xstream 1.4.5 (CVE-2021-39153)"},"fullDescription":{"text":"XStream is vulnerable to remote code execution (RCE) due to the unsafe deserialization of classes from the `com.sun.java.util.jar.pack` package. A remote attacker could execute arbitrary code on a vulnerable server by causing it to process a maliciously crafted serialized object."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| xstream 1.4.5  | 1.4.20  | 1.4.20 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/6c637fee-b979-47e7-b2cb-64f781a4dc92?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=f8c25f33-8c23-4fec-8c9b-39b218b0bd98)\n\n\n## Description\nXStream is vulnerable to remote code execution (RCE) due to the unsafe deserialization of classes from the `com.sun.java.util.jar.pack` package. A remote attacker could execute arbitrary code on a vulnerable server by causing it to process a maliciously crafted serialized object.\n\n## Vulnerabilities(BDSA,CVE)\n:orange_circle: [CVE-2021-39153](https://openhub.net/vulnerabilities/bdsa/CVE-2021-39153) - Insecure Object Deserialization\n\n\n\n## Solution\nFixed in version [**1.4.18**](https://github.com/x-stream/xstream/releases/tag/XSTREAM_1_4_18) by [this](https://github.com/x-stream/xstream/commit/652d72f38b33938c54fd3b2ef626cb7dce38001c) commit.\n\nThe latest stable releases can be found [here](https://github.com/x-stream/xstream/releases).\n\n## Workaround\nUsers can manually prevent the deserialization of problematic classes by following the [guidance](https://x-stream.github.io/security.html#workaround) provided by the vendor.\n\n\n\n## References\n* Common Weakness Enumeration: [CWE-502](https://cwe.mitre.org/data/definitions/502.html)\n\n","text":"XStream is vulnerable to remote code execution (RCE) due to the unsafe deserialization of classes from the `com.sun.java.util.jar.pack` package. A remote attacker could execute arbitrary code on a vulnerable server by causing it to process a maliciously crafted serialized object."},"properties":{"security-severity":"8.9","tags":["security","open_source_analysis","direct_dependency","patch_available","external/cwe/cwe-502"]},"defaultConfiguration":{"level":"error"}},{"id":"CVE-2020-26258 xstream 1.4.5: com.thoughtworks.xstream","shortDescription":{"text":"Direct Dependency: xstream 1.4.5 (CVE-2020-26258)"},"fullDescription":{"text":"Xstream is vulnerable to an information disclosure flaw where it can be tricked into including remote resources when unmarshalling specially crafted input. A remote attacker could learn details about the internal network."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| xstream 1.4.5  | 1.4.20  | 1.4.20 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/6c637fee-b979-47e7-b2cb-64f781a4dc92?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=f8c25f33-8c23-4fec-8c9b-39b218b0bd98)\n\n\n## Description\nXstream is vulnerable to an information disclosure flaw where it can be tricked into including remote resources when unmarshalling specially crafted input. A remote attacker could learn details about the internal network.\n\n## Vulnerabilities(BDSA,CVE)\n:orange_circle: [CVE-2020-26258](https://openhub.net/vulnerabilities/bdsa/CVE-2020-26258) - Insecure Object Deserialization\n\n\n\n## Solution\nFixed in [**1.4.15**](https://github.com/x-stream/xstream/releases/tag/XSTREAM_1_4_15) by [this](https://github.com/x-stream/xstream/commit/6740c04b217aef02d44fba26402b35e0f6f493ce) commit.\n\n## Workaround\nFor users who do not use the [recommended](https://x-stream.github.io/security.html#framework) white listing approach of the security framework, the vendor has supplied a comprehensive workaround involving the blacklist approach [here](https://x-stream.github.io/CVE-2020-26258.html).\n\n\n\n## References\n* Common Weakness Enumeration: [CWE-502](https://cwe.mitre.org/data/definitions/502.html)\n* Common Weakness Enumeration: [CWE-918](https://cwe.mitre.org/data/definitions/918.html)\n\n","text":"Xstream is vulnerable to an information disclosure flaw where it can be tricked into including remote resources when unmarshalling specially crafted input. A remote attacker could learn details about the internal network."},"properties":{"security-severity":"8.9","tags":["security","open_source_analysis","direct_dependency","patch_available","external/cwe/cwe-502","external/cwe/cwe-918"]},"defaultConfiguration":{"level":"error"}},{"id":"CVE-2020-26259 xstream 1.4.5: com.thoughtworks.xstream","shortDescription":{"text":"Direct Dependency: xstream 1.4.5 (CVE-2020-26259)"},"fullDescription":{"text":"XStream is vulnerable to an arbitrary file deletion flaw in it's handling of unmarshalling specially crafted input. A remote attacker could delete arbitrary files on the server, if the server process has sufficient rights. As well as impacting the integrity of data, this might lead to a denial-of-service (DoS) of applications on the system that rely on specific files for their operation."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| xstream 1.4.5  | 1.4.20  | 1.4.20 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/6c637fee-b979-47e7-b2cb-64f781a4dc92?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=f8c25f33-8c23-4fec-8c9b-39b218b0bd98)\n\n\n## Description\nXStream is vulnerable to an arbitrary file deletion flaw in it's handling of unmarshalling specially crafted input. A remote attacker could delete arbitrary files on the server, if the server process has sufficient rights. As well as impacting the integrity of data, this might lead to a denial-of-service (DoS) of applications on the system that rely on specific files for their operation.\n\n## Vulnerabilities(BDSA,CVE)\n:orange_circle: [CVE-2020-26259](https://openhub.net/vulnerabilities/bdsa/CVE-2020-26259) - Incomplete List of Disallowed Inputs\n\n\n\n## Solution\nFixed in [**1.4.15**](https://github.com/x-stream/xstream/releases/tag/XSTREAM_1_4_15) by [this](https://github.com/x-stream/xstream/commit/0bcbf50126a62dfcd65f93a0da0c6d1ae92aa738) commit.\n\nThe latest stable releases can be found [here](https://github.com/x-stream/xstream/releases).\n\n## Workaround\nUsers who configured the white listing approach of the Security Framework, without the affected classes on the whitelist, are not vulnerable.\n\nFor users of the blacklisting approach of the security framework, the vendor supplies a comprehensive workaround [here](https://x-stream.github.io/CVE-2020-26259.html).\n\n\n\n## References\n* Common Weakness Enumeration: [CWE-184](https://cwe.mitre.org/data/definitions/184.html)\n* Common Weakness Enumeration: [CWE-502](https://cwe.mitre.org/data/definitions/502.html)\n\n","text":"XStream is vulnerable to an arbitrary file deletion flaw in it's handling of unmarshalling specially crafted input. A remote attacker could delete arbitrary files on the server, if the server process has sufficient rights. As well as impacting the integrity of data, this might lead to a denial-of-service (DoS) of applications on the system that rely on specific files for their operation."},"properties":{"security-severity":"8.9","tags":["security","open_source_analysis","direct_dependency","patch_available","external/cwe/cwe-184","external/cwe/cwe-502"]},"defaultConfiguration":{"level":"error"}},{"id":"CVE-2016-3674 xstream 1.4.5: com.thoughtworks.xstream","shortDescription":{"text":"Direct Dependency: xstream 1.4.5 (CVE-2016-3674)"},"fullDescription":{"text":"XStream, when using some supported parsers, is vulnerable to an XML entity expansion issue due to how these parsers can process external entities by default.\n\nA remote attacker could use this issue to retrieve the content of arbitrary files with known locations in a local file system if the Java process has read access.\n\n**Note**: XStream is not vulnerable if the default XML Pull Parser (`Xpp3` or `kXML2`) is used. These parser types do not process XML entities."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| xstream 1.4.5  | 1.4.20  | 1.4.20 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/6c637fee-b979-47e7-b2cb-64f781a4dc92?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=f8c25f33-8c23-4fec-8c9b-39b218b0bd98)\n\n\n## Description\nXStream, when using some supported parsers, is vulnerable to an XML entity expansion issue due to how these parsers can process external entities by default.\n\nA remote attacker could use this issue to retrieve the content of arbitrary files with known locations in a local file system if the Java process has read access.\n\n**Note**: XStream is not vulnerable if the default XML Pull Parser (`Xpp3` or `kXML2`) is used. These parser types do not process XML entities.\n\n## Vulnerabilities(BDSA,CVE)\n:orange_circle: [CVE-2016-3674](https://openhub.net/vulnerabilities/bdsa/CVE-2016-3674) - XML External Entity (XXE) Injection\n\n\n\n## Solution\nThis vulnerability is fixed in version [**1.4.9**](http://repo.maven.apache.org/maven2/com/thoughtworks/xstream/xstream/1.4.9/).\n\n**Note**: Applications using one of the following parser implementations are still vulnerable:\n* `DOM` implementation from Java 5 runtime and below\n* `StAX` implementation from Java 6 runtime and below\n* `StAX` implementation from BEA (old reference implementation)\n* `XOM`\n\nThe latest stable releases are available [here](https://x-stream.github.io/download.html).\n\n## Workaround\nThe vendor has recommended [here](https://x-stream.github.io/CVE-2016-3674.html) that users can opt to use one of the XML Pull Parser implementations in order to mitigate this issue.\n\n\n\n## References\n* Common Weakness Enumeration: [CWE-611](https://cwe.mitre.org/data/definitions/611.html)\n* Common Weakness Enumeration: [CWE-776](https://cwe.mitre.org/data/definitions/776.html)\n\n","text":"XStream, when using some supported parsers, is vulnerable to an XML entity expansion issue due to how these parsers can process external entities by default.\n\nA remote attacker could use this issue to retrieve the content of arbitrary files with known locations in a local file system if the Java process has read access.\n\n**Note**: XStream is not vulnerable if the default XML Pull Parser (`Xpp3` or `kXML2`) is used. These parser types do not process XML entities."},"properties":{"security-severity":"8.9","tags":["security","open_source_analysis","direct_dependency","patch_available","external/cwe/cwe-611","external/cwe/cwe-776"]},"defaultConfiguration":{"level":"error"}},{"id":"CVE-2021-39150 xstream 1.4.5: com.thoughtworks.xstream","shortDescription":{"text":"Direct Dependency: xstream 1.4.5 (CVE-2021-39150)"},"fullDescription":{"text":"XStream is vulnerable to server-side request forgery (SSRF) due to the improper restriction of deserialization functionality. A remote attacker could send requests to intranet hosts by sending maliciously crafted serialized data to a vulnerable server.\n\n **Note** If the application uses XStreams security framework and whitelist approach to deserialization (recommended), it is not vulnerable."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| xstream 1.4.5  | 1.4.20  | 1.4.20 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/6c637fee-b979-47e7-b2cb-64f781a4dc92?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=f8c25f33-8c23-4fec-8c9b-39b218b0bd98)\n\n\n## Description\nXStream is vulnerable to server-side request forgery (SSRF) due to the improper restriction of deserialization functionality. A remote attacker could send requests to intranet hosts by sending maliciously crafted serialized data to a vulnerable server.\n\n **Note** If the application uses XStreams security framework and whitelist approach to deserialization (recommended), it is not vulnerable.\n\n## Vulnerabilities(BDSA,CVE)\n:orange_circle: [CVE-2021-39150](https://openhub.net/vulnerabilities/bdsa/CVE-2021-39150) - Insecure Object Deserialization\n\n\n\n## Solution\nFixed in version [**1.4.18**](https://github.com/x-stream/xstream/releases/tag/XSTREAM_1_4_18) by [this](https://github.com/x-stream/xstream/commit/652d72f38b33938c54fd3b2ef626cb7dce38001c) commit.\n\nThe latest stable releases can be found [here](https://github.com/x-stream/xstream/releases).\n\n## Workaround\nUsers can manually prevent the deserialization of problematic classes by following the [guidance](https://x-stream.github.io/security.html#workaround) provided by the vendor.\n\n\n\n## References\n* Common Weakness Enumeration: [CWE-502](https://cwe.mitre.org/data/definitions/502.html)\n* Common Weakness Enumeration: [CWE-918](https://cwe.mitre.org/data/definitions/918.html)\n\n","text":"XStream is vulnerable to server-side request forgery (SSRF) due to the improper restriction of deserialization functionality. A remote attacker could send requests to intranet hosts by sending maliciously crafted serialized data to a vulnerable server.\n\n **Note** If the application uses XStreams security framework and whitelist approach to deserialization (recommended), it is not vulnerable."},"properties":{"security-severity":"8.9","tags":["security","open_source_analysis","direct_dependency","patch_available","external/cwe/cwe-502","external/cwe/cwe-918"]},"defaultConfiguration":{"level":"error"}},{"id":"CVE-2021-39149 xstream 1.4.5: com.thoughtworks.xstream","shortDescription":{"text":"Direct Dependency: xstream 1.4.5 (CVE-2021-39149)"},"fullDescription":{"text":"XStream is vulnerable to remote code execution (RCE) due to the unsafe demarshalling of CORBA and XSLTC classes. A remote attacker could execute arbitrary code on a vulnerable server by causing that server to deserialize a maliciously crafted serialized object."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| xstream 1.4.5  | 1.4.20  | 1.4.20 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/6c637fee-b979-47e7-b2cb-64f781a4dc92?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=f8c25f33-8c23-4fec-8c9b-39b218b0bd98)\n\n\n## Description\nXStream is vulnerable to remote code execution (RCE) due to the unsafe demarshalling of CORBA and XSLTC classes. A remote attacker could execute arbitrary code on a vulnerable server by causing that server to deserialize a maliciously crafted serialized object.\n\n## Vulnerabilities(BDSA,CVE)\n:orange_circle: [CVE-2021-39149](https://openhub.net/vulnerabilities/bdsa/CVE-2021-39149) - Insecure Object Deserialization\n\n\n\n## Solution\nFixed in version [**1.4.18**](https://github.com/x-stream/xstream/releases/tag/XSTREAM_1_4_18) by [this](https://github.com/x-stream/xstream/commit/652d72f38b33938c54fd3b2ef626cb7dce38001c) commit.\n\nThe latest stable releases can be found [here](https://github.com/x-stream/xstream/releases).\n\n## Workaround\nUsers can manually prevent the deserialization of problematic classes by following the [guidance](https://x-stream.github.io/security.html#workaround) provided by the vendor.\n\n\n\n## References\n* Common Weakness Enumeration: [CWE-502](https://cwe.mitre.org/data/definitions/502.html)\n\n","text":"XStream is vulnerable to remote code execution (RCE) due to the unsafe demarshalling of CORBA and XSLTC classes. A remote attacker could execute arbitrary code on a vulnerable server by causing that server to deserialize a maliciously crafted serialized object."},"properties":{"security-severity":"8.9","tags":["security","open_source_analysis","direct_dependency","patch_available","external/cwe/cwe-502"]},"defaultConfiguration":{"level":"error"}},{"id":"CVE-2022-40152 xstream 1.4.5: com.thoughtworks.xstream","shortDescription":{"text":"Direct Dependency: xstream 1.4.5 (CVE-2022-40152)"},"fullDescription":{"text":"Those using Woodstox to parse XML data may be vulnerable to Denial of Service attacks (DOS) if DTD support is enabled. If the parser is running on user supplied input, an attacker may supply content that causes the parser to crash by stackoverflow. This effect may support a denial of service attack."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| xstream 1.4.5  | 1.4.20  | 1.4.20 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/6c637fee-b979-47e7-b2cb-64f781a4dc92?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=f8c25f33-8c23-4fec-8c9b-39b218b0bd98)\n\n\n## Description\nThose using Woodstox to parse XML data may be vulnerable to Denial of Service attacks (DOS) if DTD support is enabled. If the parser is running on user supplied input, an attacker may supply content that causes the parser to crash by stackoverflow. This effect may support a denial of service attack.\n\n## Vulnerabilities(BDSA,CVE)\n:orange_circle: [CVE-2022-40152](https://openhub.net/vulnerabilities/bdsa/CVE-2022-40152) - Out-of-bounds Write\n\n\n\n\n\n\n\n\n\n## References\n* Common Weakness Enumeration: [CWE-787](https://cwe.mitre.org/data/definitions/787.html)\n\n","text":"Those using Woodstox to parse XML data may be vulnerable to Denial of Service attacks (DOS) if DTD support is enabled. If the parser is running on user supplied input, an attacker may supply content that causes the parser to crash by stackoverflow. This effect may support a denial of service attack."},"properties":{"security-severity":"8.9","tags":["security","open_source_analysis","direct_dependency","patch_available","external/cwe/cwe-787"]},"defaultConfiguration":{"level":"error"}},{"id":"CVE-2021-39140 xstream 1.4.5: com.thoughtworks.xstream","shortDescription":{"text":"Direct Dependency: xstream 1.4.5 (CVE-2021-39140)"},"fullDescription":{"text":"XStream is vulnerable to unsafe deserialization of attacker controlled input. A remote attacker could leverage this to consume all available CPU cycles via an infinite loop condition.\n\n**Note:** If the application uses XStreams security framework and whitelist approach to deserialization (recommended), it is not vulnerable."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| xstream 1.4.5  | 1.4.20  | 1.4.20 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/6c637fee-b979-47e7-b2cb-64f781a4dc92?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=f8c25f33-8c23-4fec-8c9b-39b218b0bd98)\n\n\n## Description\nXStream is vulnerable to unsafe deserialization of attacker controlled input. A remote attacker could leverage this to consume all available CPU cycles via an infinite loop condition.\n\n**Note:** If the application uses XStreams security framework and whitelist approach to deserialization (recommended), it is not vulnerable.\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [CVE-2021-39140](https://openhub.net/vulnerabilities/bdsa/CVE-2021-39140) - Incomplete List of Disallowed Inputs\n\n\n\n## Solution\nFixed in version [**1.4.18**](https://github.com/x-stream/xstream/releases/tag/XSTREAM_1_4_18) by [this](https://github.com/x-stream/xstream/commit/652d72f38b33938c54fd3b2ef626cb7dce38001c) commit.\n\nThe latest releases can be found [here](https://github.com/x-stream/xstream/tags).\n\n## Workaround\nClasses that should be blacklisted for various versions of XStream are listed [here](https://x-stream.github.io/security.html#workaround).\n\n\n\n## References\n* Common Weakness Enumeration: [CWE-184](https://cwe.mitre.org/data/definitions/184.html)\n* Common Weakness Enumeration: [CWE-502](https://cwe.mitre.org/data/definitions/502.html)\n* Common Weakness Enumeration: [CWE-835](https://cwe.mitre.org/data/definitions/835.html)\n\n","text":"XStream is vulnerable to unsafe deserialization of attacker controlled input. A remote attacker could leverage this to consume all available CPU cycles via an infinite loop condition.\n\n**Note:** If the application uses XStreams security framework and whitelist approach to deserialization (recommended), it is not vulnerable."},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","direct_dependency","patch_available","external/cwe/cwe-184","external/cwe/cwe-502","external/cwe/cwe-835"]},"defaultConfiguration":{"level":"warning"}},{"id":"CVE-2021-21341 xstream 1.4.5: com.thoughtworks.xstream","shortDescription":{"text":"Direct Dependency: xstream 1.4.5 (CVE-2021-21341)"},"fullDescription":{"text":"XStream, when in its default configuration or operating without a sufficient blacklist / whitelist configuration, is vulnerable to a denial-of-service (DoS) issue. This is due to how XStream can potentially create new instances of dangerous objects that are not blocked based on the contents of the input stream. The potentially dangerous type in this case is `java.io.ByteArrayInputStream`.\n\nAn attacker could supply a crafted input to XStream in order to cause an endless loop, negatively impacting the availability of XStream."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| xstream 1.4.5  | 1.4.20  | 1.4.20 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/6c637fee-b979-47e7-b2cb-64f781a4dc92?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=f8c25f33-8c23-4fec-8c9b-39b218b0bd98)\n\n\n## Description\nXStream, when in its default configuration or operating without a sufficient blacklist / whitelist configuration, is vulnerable to a denial-of-service (DoS) issue. This is due to how XStream can potentially create new instances of dangerous objects that are not blocked based on the contents of the input stream. The potentially dangerous type in this case is `java.io.ByteArrayInputStream`.\n\nAn attacker could supply a crafted input to XStream in order to cause an endless loop, negatively impacting the availability of XStream.\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [CVE-2021-21341](https://openhub.net/vulnerabilities/bdsa/CVE-2021-21341) - Insecure Object Deserialization\n\n\n\n## Solution\nFixed in [**1.4.16**](https://github.com/x-stream/xstream/releases/tag/XSTREAM_1_4_16) by [this](https://github.com/x-stream/xstream/commit/d5e51177634afea7213b9dc2d21f101d2e258db9) commit.\n\nThe latest stable releases are available [here](http://x-stream.github.io/download.html).\n\n## Workaround\nThe vendor recommends the use of XStream's security framework to implement a whitelist for allowed types. \n\nThe vendor has made available a set of [workarounds](https://x-stream.github.io/security.html#workaround) detailing this feature.\n\n\n\n## References\n* Common Weakness Enumeration: [CWE-502](https://cwe.mitre.org/data/definitions/502.html)\n* Common Weakness Enumeration: [CWE-835](https://cwe.mitre.org/data/definitions/835.html)\n\n","text":"XStream, when in its default configuration or operating without a sufficient blacklist / whitelist configuration, is vulnerable to a denial-of-service (DoS) issue. This is due to how XStream can potentially create new instances of dangerous objects that are not blocked based on the contents of the input stream. The potentially dangerous type in this case is `java.io.ByteArrayInputStream`.\n\nAn attacker could supply a crafted input to XStream in order to cause an endless loop, negatively impacting the availability of XStream."},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","direct_dependency","patch_available","external/cwe/cwe-502","external/cwe/cwe-835"]},"defaultConfiguration":{"level":"warning"}},{"id":"CVE-2021-21343 xstream 1.4.5: com.thoughtworks.xstream","shortDescription":{"text":"Direct Dependency: xstream 1.4.5 (CVE-2021-21343)"},"fullDescription":{"text":"XStream, when in its default configuration or operating without a sufficient blacklist / whitelist configuration, is vulnerable to an arbitrary file deletion issue. This is due to how XStream can potentially create new instances of dangerous objects that are not blocked based on the contents of the input stream. The potentially dangerous types in this case are  `sun.awt.datatransfer.DataTransferer$IndexOrderComparator` and `java.io.FileInputStream`.\n\nAn attacker could supply a crafted input to XStream in order deletion arbitrary files on the local host."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| xstream 1.4.5  | 1.4.20  | 1.4.20 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/6c637fee-b979-47e7-b2cb-64f781a4dc92?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=f8c25f33-8c23-4fec-8c9b-39b218b0bd98)\n\n\n## Description\nXStream, when in its default configuration or operating without a sufficient blacklist / whitelist configuration, is vulnerable to an arbitrary file deletion issue. This is due to how XStream can potentially create new instances of dangerous objects that are not blocked based on the contents of the input stream. The potentially dangerous types in this case are  `sun.awt.datatransfer.DataTransferer$IndexOrderComparator` and `java.io.FileInputStream`.\n\nAn attacker could supply a crafted input to XStream in order deletion arbitrary files on the local host.\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [CVE-2021-21343](https://openhub.net/vulnerabilities/bdsa/CVE-2021-21343) - Insecure Object Deserialization\n\n\n\n## Solution\nFixed in [**1.4.16**](https://github.com/x-stream/xstream/releases/tag/XSTREAM_1_4_16) by [this](https://github.com/x-stream/xstream/commit/d5e51177634afea7213b9dc2d21f101d2e258db9) commit.\n\nThe latest stable releases are available [here](http://x-stream.github.io/download.html).\n\n## Workaround\nThe vendor recommends the use of XStream's security framework to implement a whitelist for allowed types. \n\nThe vendor has made available a set of [workarounds](https://x-stream.github.io/security.html#workaround) detailing this feature.\n\n\n\n## References\n* Common Weakness Enumeration: [CWE-502](https://cwe.mitre.org/data/definitions/502.html)\n\n","text":"XStream, when in its default configuration or operating without a sufficient blacklist / whitelist configuration, is vulnerable to an arbitrary file deletion issue. This is due to how XStream can potentially create new instances of dangerous objects that are not blocked based on the contents of the input stream. The potentially dangerous types in this case are  `sun.awt.datatransfer.DataTransferer$IndexOrderComparator` and `java.io.FileInputStream`.\n\nAn attacker could supply a crafted input to XStream in order deletion arbitrary files on the local host."},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","direct_dependency","patch_available","external/cwe/cwe-502"]},"defaultConfiguration":{"level":"warning"}},{"id":"CVE-2021-43859 xstream 1.4.5: com.thoughtworks.xstream","shortDescription":{"text":"Direct Dependency: xstream 1.4.5 (CVE-2021-43859)"},"fullDescription":{"text":"XStream is vulnerable to denial-of-service (DoS). An attacker could exploit this by manipulating the processed input stream by injecting a highly recursive collection or map."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| xstream 1.4.5  | 1.4.20  | 1.4.20 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/6c637fee-b979-47e7-b2cb-64f781a4dc92?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=f8c25f33-8c23-4fec-8c9b-39b218b0bd98)\n\n\n## Description\nXStream is vulnerable to denial-of-service (DoS). An attacker could exploit this by manipulating the processed input stream by injecting a highly recursive collection or map.\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [CVE-2021-43859](https://openhub.net/vulnerabilities/bdsa/CVE-2021-43859) - Uncontrolled Resource Consumption\n\n\n\n## Solution\nFixed in [**1.4.19**](https://github.com/x-stream/xstream/releases/tag/XSTREAM_1_4_19) by [this](https://github.com/x-stream/xstream/commit/e8e88621ba1c85ac3b8620337dd672e0c0c3a846) commit.\n\nThe latest stable releases can be found [here](https://github.com/x-stream/xstream/tags).\n\n## Workaround\nPer the Vendor [workaround](https://x-stream.github.io/CVE-2021-43859.html):\n\n\u003e If your object graph does not use referenced elements at all, you may simply set the NO_REFERENCE mode:\n\u003e ```\n\u003e XStream xstream = new XStream();\n\u003e xstream.setMode(XStream.NO_REFERENCES);\n\u003e ```\n\u003e If your object graph contains neither a Hashtable, HashMap nor a HashSet (or one of the linked variants of it) then you can use the security framework to deny the usage of these types:\n\u003e ```\n\u003e XStream xstream = new XStream();\n\u003e xstream.denyTypes(new Class[]{\n\u003e \tjava.util.HashMap.class, java.util.HashSet.class, java.util.Hashtable.class, java.util.LinkedHashMap.class, java.util.LinkedHashSet.class\n\u003e });\n\u003e ```\n\u003e \n\u003e Unfortunately these types are very common. If you only use HashMap or HashSet and your XML refers these only as default map or set, you may additionally change the default implementation of java.util.Map and java.util.Set at unmarshalling time:\n\u003e \n\u003e ```\n\u003e xstream.addDefaultImplementation(java.util.TreeMap.class, java.util.Map.class);\n\u003e xstream.addDefaultImplementation(java.util.TreeSet.class, java.util.Set.class);\n\u003e ```\n\u003e However, this implies that your application does not care about the implementation of the map and all elements are comparable.\n\n\n\n## References\n* Common Weakness Enumeration: [CWE-400](https://cwe.mitre.org/data/definitions/400.html)\n* Common Weakness Enumeration: [CWE-502](https://cwe.mitre.org/data/definitions/502.html)\n\n","text":"XStream is vulnerable to denial-of-service (DoS). An attacker could exploit this by manipulating the processed input stream by injecting a highly recursive collection or map."},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","direct_dependency","patch_available","external/cwe/cwe-400","external/cwe/cwe-502"]},"defaultConfiguration":{"level":"warning"}},{"id":"CVE-2022-40151 xstream 1.4.5: com.thoughtworks.xstream","shortDescription":{"text":"Direct Dependency: xstream 1.4.5 (CVE-2022-40151)"},"fullDescription":{"text":"XStream contains a stack overflow vulnerability. An attacker could exploit this by providing crafted content in order to cause a denial-of-service (DoS) condition via a crash."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| xstream 1.4.5  | 1.4.20  | 1.4.20 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/6c637fee-b979-47e7-b2cb-64f781a4dc92?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=f8c25f33-8c23-4fec-8c9b-39b218b0bd98)\n\n\n## Description\nXStream contains a stack overflow vulnerability. An attacker could exploit this by providing crafted content in order to cause a denial-of-service (DoS) condition via a crash.\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [CVE-2022-40151](https://openhub.net/vulnerabilities/bdsa/CVE-2022-40151) - Stack-based Buffer Overflow\n\n\n\n## Solution\nFixed in version [**1.4.20**](https://github.com/x-stream/xstream/releases/tag/XSTREAM_1_4_20) by [this](https://github.com/x-stream/xstream/commit/e9151f221b4969fb15b1e946d5d61dcdd459a391) commit.\n\nThe latest stable releases can be found [here](https://github.com/x-stream/xstream/tags).\n\n\n\n\n\n## References\n* Common Weakness Enumeration: [CWE-121](https://cwe.mitre.org/data/definitions/121.html)\n* Common Weakness Enumeration: [CWE-502](https://cwe.mitre.org/data/definitions/502.html)\n* Common Weakness Enumeration: [CWE-674](https://cwe.mitre.org/data/definitions/674.html)\n\n","text":"XStream contains a stack overflow vulnerability. An attacker could exploit this by providing crafted content in order to cause a denial-of-service (DoS) condition via a crash."},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","direct_dependency","patch_available","external/cwe/cwe-121","external/cwe/cwe-502","external/cwe/cwe-674"]},"defaultConfiguration":{"level":"warning"}},{"id":"CVE-2022-41966 xstream 1.4.5: com.thoughtworks.xstream","shortDescription":{"text":"Direct Dependency: xstream 1.4.5 (CVE-2022-41966)"},"fullDescription":{"text":"XStream is vulnerable to denial-of-service due to a stack overflow that exists due to a recursive hash set calculation. A remote attacker could cause a vulnerable application to crash by causing that application to process a maliciously crafted input stream."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| xstream 1.4.5  | 1.4.20  | 1.4.20 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/6c637fee-b979-47e7-b2cb-64f781a4dc92?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=f8c25f33-8c23-4fec-8c9b-39b218b0bd98)\n\n\n## Description\nXStream is vulnerable to denial-of-service due to a stack overflow that exists due to a recursive hash set calculation. A remote attacker could cause a vulnerable application to crash by causing that application to process a maliciously crafted input stream.\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [CVE-2022-41966](https://openhub.net/vulnerabilities/bdsa/CVE-2022-41966) - Insecure Object Deserialization\n\n\n\n## Solution\nFixed in version [**1.4.20**](https://github.com/x-stream/xstream/releases/tag/XSTREAM_1_4_20) by [this](https://github.com/x-stream/xstream/commit/e9151f221b4969fb15b1e946d5d61dcdd459a391) commit.\n\nThe latest stable releases can be found [here](https://github.com/x-stream/xstream/tags).\n\n## Workaround\nThe vendor has stated [here](https://github.com/x-stream/xstream/security/advisories/GHSA-j563-grx4-pjpv) that the following workaround can be implemented:\n\n\u003e The attack uses the hash code implementation for collections and maps to force recursive hash calculation causing a stack overflow. Following types of the Java runtime are affected:\n\u003e\n\u003e * java.util.HashMap\n\u003e * java.util.HashSet\n\u003e * java.util.Hashtable\n\u003e * java.util.LinkedHashMap\n\u003e * java.util.LinkedHashSet\n\u003e Other third party collection implementations that use their element's hash code may also be affected\n\u003e A simple solution is to catch the StackOverflowError in the client code calling XStream.\n\u003e \n\u003e If your object graph does not use referenced elements at all, you may simply set the NO_REFERENCE mode:\n\u003e \n\u003e XStream xstream = new XStream();\n\u003e xstream.setMode(XStream.NO_REFERENCES);\n\u003e If your object graph contains neither a Hashtable, HashMap nor a HashSet (or one of the linked variants of it) then you can use the security framework to deny the usage of these types:\n\u003e \n\u003e XStream xstream = new XStream();\n\u003e xstream.denyTypes(new Class[]{\n\u003e  java.util.HashMap.class, java.util.HashSet.class, java.util.Hashtable.class, java.util.LinkedHashMap.class, java.util.LinkedHashSet.class\n\u003e });\n\u003e Unfortunately these types are very common. If you only use HashMap or HashSet and your XML refers these only as default map or set, you may additionally change the default implementation of java.util.Map and java.util.Set at unmarshalling time::\n\u003e \n\u003e xstream.addDefaultImplementation(java.util.TreeMap.class, java.util.Map.class);\n\u003e xstream.addDefaultImplementation(java.util.TreeSet.class, java.util.Set.class);\n\u003e However, this implies that your application does not care about the implementation of the map and all elements are comparable.\n\n\n\n## References\n* Common Weakness Enumeration: [CWE-502](https://cwe.mitre.org/data/definitions/502.html)\n* Common Weakness Enumeration: [CWE-674](https://cwe.mitre.org/data/definitions/674.html)\n\n","text":"XStream is vulnerable to denial-of-service due to a stack overflow that exists due to a recursive hash set calculation. A remote attacker could cause a vulnerable application to crash by causing that application to process a maliciously crafted input stream."},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","direct_dependency","patch_available","external/cwe/cwe-502","external/cwe/cwe-674"]},"defaultConfiguration":{"level":"warning"}},{"id":"CVE-2017-7957 xstream 1.4.5: com.thoughtworks.xstream","shortDescription":{"text":"Direct Dependency: xstream 1.4.5 (CVE-2017-7957)"},"fullDescription":{"text":"A flaw exists within (de)seralization functionality within XStream. Sending a carefully crafted object data will crash the Java process and cause a DoS *(Denial of Service)*. In order to exploit this vulnerability, users require the ability to manipulate the incoming stream of data."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| xstream 1.4.5  | 1.4.20  | 1.4.20 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/6c637fee-b979-47e7-b2cb-64f781a4dc92?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=f8c25f33-8c23-4fec-8c9b-39b218b0bd98)\n\n\n## Description\nA flaw exists within (de)seralization functionality within XStream. Sending a carefully crafted object data will crash the Java process and cause a DoS *(Denial of Service)*. In order to exploit this vulnerability, users require the ability to manipulate the incoming stream of data.\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [CVE-2017-7957](https://openhub.net/vulnerabilities/bdsa/CVE-2017-7957) - Weak Input Validation\n\n\n\n## Solution\nUpgrade to version **1.4.10** or later.\n\n## Workaround\nXStream contains since version 1.4.7 a security framework to prevent an \nattack described in CVE-2013-7285. This framework can also be used to \nsuppress the current vulnerability by setting:\n\nxstream.denyTypes(void.class, Void.class);\n\nUsers of older XStream releases can register an own converter for the 'void' \ntype, that also protects against this attack:\n\nxstream.registerConverter(new Converter() {\n  public boolean canConvert(Class type) {\n    return Void.class == type || void.class == type;\n  }\n  public Object unmarshal(HierarchicalStreamReader reader, \nUnmarshallingContext context) {\n    throw new ConversionException(\"Type void cannot have an instance\");\n  }\n  public void marshal(Object source, HierarchicalStreamWriter writer, \nMarshallingContext context) {\n    throw new ConversionException(\"Type void cannot have an instance\");\n  }\n}, XStream.PRIORITY_VERY_HIGH);\n\n\n\n## References\n* Common Weakness Enumeration: [CWE-20](https://cwe.mitre.org/data/definitions/20.html)\n\n","text":"A flaw exists within (de)seralization functionality within XStream. Sending a carefully crafted object data will crash the Java process and cause a DoS *(Denial of Service)*. In order to exploit this vulnerability, users require the ability to manipulate the incoming stream of data."},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","direct_dependency","patch_available","external/cwe/cwe-20"]},"defaultConfiguration":{"level":"warning"}},{"id":"CVE-2021-21348 xstream 1.4.5: com.thoughtworks.xstream","shortDescription":{"text":"Direct Dependency: xstream 1.4.5 (CVE-2021-21348)"},"fullDescription":{"text":"Xstream is vulnerable to regular expression denial-of-service (ReDoS) by a remote attacker who can supply a specially crafted input stream. This allows the attacker to occupy a thread that consumes maximum CPU time, making it unavailable for service."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| xstream 1.4.5  | 1.4.20  | 1.4.20 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/6c637fee-b979-47e7-b2cb-64f781a4dc92?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=f8c25f33-8c23-4fec-8c9b-39b218b0bd98)\n\n\n## Description\nXstream is vulnerable to regular expression denial-of-service (ReDoS) by a remote attacker who can supply a specially crafted input stream. This allows the attacker to occupy a thread that consumes maximum CPU time, making it unavailable for service.\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [CVE-2021-21348](https://openhub.net/vulnerabilities/bdsa/CVE-2021-21348) - Incorrect Regular Expression\n\n\n\n## Solution\nFixed in **[1.4.16](https://github.com/x-stream/xstream/releases/tag/XSTREAM_1_4_16)** by [this](https://github.com/x-stream/xstream/commit/d5e51177634afea7213b9dc2d21f101d2e258db9) commit.\n\nThe latest stable releases are available [here](https://x-stream.github.io/download.html).\n\n## Workaround\nThe vendor recommends the use of XStream's security framework to implement a whitelist for allowed types. \n\nThe vendor has made available a set of [workarounds](https://x-stream.github.io/security.html#workaround) detailing this feature.\n\n\n\n## References\n* Common Weakness Enumeration: [CWE-185](https://cwe.mitre.org/data/definitions/185.html)\n* Common Weakness Enumeration: [CWE-400](https://cwe.mitre.org/data/definitions/400.html)\n\n","text":"Xstream is vulnerable to regular expression denial-of-service (ReDoS) by a remote attacker who can supply a specially crafted input stream. This allows the attacker to occupy a thread that consumes maximum CPU time, making it unavailable for service."},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","direct_dependency","patch_available","external/cwe/cwe-185","external/cwe/cwe-400"]},"defaultConfiguration":{"level":"warning"}},{"id":"CVE-2016-1000027 spring-expression 5.2.2.RELEASE: spring-security-test 4.1.3.RELEASE: org.springframework","shortDescription":{"text":"Transitive Dependency: spring-expression 5.2.2.RELEASE from spring-security-test 4.1.3.RELEASE (CVE-2016-1000027)"},"fullDescription":{"text":"Pivotal Spring Framework through 5.3.16 suffers from a potential remote code execution (RCE) issue if used for Java deserialization of untrusted data. Depending on how the library is implemented within a product, this issue may or not occur, and authentication may be required. NOTE: the vendor's position is that untrusted data is not an intended use case. The product's behavior will not be changed because some users rely on deserialization of trusted data."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| spring-expression 5.2.2.RELEASE  | 5.3.31  | 6.1.2 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/ba6e9d03-9fbd-4086-9631-99d1ad5e520c?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=09f17d81-b282-43ec-9f2b-36c8021d3ca7)\n\n\n## Description\nPivotal Spring Framework through 5.3.16 suffers from a potential remote code execution (RCE) issue if used for Java deserialization of untrusted data. Depending on how the library is implemented within a product, this issue may or not occur, and authentication may be required. NOTE: the vendor's position is that untrusted data is not an intended use case. The product's behavior will not be changed because some users rely on deserialization of trusted data.\n\n## Vulnerabilities(BDSA,CVE)\n:red_circle: [CVE-2016-1000027](https://openhub.net/vulnerabilities/bdsa/CVE-2016-1000027) - Insecure Object Deserialization\n\n\n\n\n\n\n\n## Dependency tree\n- org.owasp.webgoat.lesson:http-basics:v8.1.0:-maven\n    - org.springframework.security:spring-security-test:4.1.3.RELEASE\n        - org.springframework.security:spring-security-core:5.2.1.RELEASE\n            - org.springframework:spring-expression:5.2.2.RELEASE\n\n\n## References\n* Common Weakness Enumeration: [CWE-502](https://cwe.mitre.org/data/definitions/502.html)\n\n","text":"Pivotal Spring Framework through 5.3.16 suffers from a potential remote code execution (RCE) issue if used for Java deserialization of untrusted data. Depending on how the library is implemented within a product, this issue may or not occur, and authentication may be required. NOTE: the vendor's position is that untrusted data is not an intended use case. The product's behavior will not be changed because some users rely on deserialization of trusted data."},"properties":{"security-severity":"9.1","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-502"]},"defaultConfiguration":{"level":"error"}},{"id":"CVE-2022-22965 spring-expression 5.2.2.RELEASE: spring-security-test 4.1.3.RELEASE: org.springframework","shortDescription":{"text":"Transitive Dependency: spring-expression 5.2.2.RELEASE from spring-security-test 4.1.3.RELEASE (CVE-2022-22965)"},"fullDescription":{"text":"Spring Framework is vulnerable to a flaw in the access restrictions to the security sensitive `ClassLoader` property. The restrictions can be bypassed through alternative paths available with Java9 and later. An attacker can leverage this vulnerability to cause remote code execution (RCE).\n\n**Note** this issue exists because the restrictions that were introduced to prevent exploitation of BDSA-2010-0001 (CVE-2010-1622) can be bypassed on platforms where Java9 and later are in use.\n\nThis vulnerability is listed as exploitable by the Cybersecurity \u0026 Infrastructure Security Agency in their [Known Exploited Vulnerabilities Catalog](https://www.cisa.gov/known-exploited-vulnerabilities-catalog)."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| spring-expression 5.2.2.RELEASE  | 5.3.31  | 6.1.2 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/ba6e9d03-9fbd-4086-9631-99d1ad5e520c?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=09f17d81-b282-43ec-9f2b-36c8021d3ca7)\n\n\n## Description\nSpring Framework is vulnerable to a flaw in the access restrictions to the security sensitive `ClassLoader` property. The restrictions can be bypassed through alternative paths available with Java9 and later. An attacker can leverage this vulnerability to cause remote code execution (RCE).\n\n**Note** this issue exists because the restrictions that were introduced to prevent exploitation of BDSA-2010-0001 (CVE-2010-1622) can be bypassed on platforms where Java9 and later are in use.\n\nThis vulnerability is listed as exploitable by the Cybersecurity \u0026 Infrastructure Security Agency in their [Known Exploited Vulnerabilities Catalog](https://www.cisa.gov/known-exploited-vulnerabilities-catalog).\n\n## Vulnerabilities(BDSA,CVE)\n:red_circle: [CVE-2022-22965](https://openhub.net/vulnerabilities/bdsa/CVE-2022-22965) - Incomplete List of Disallowed Inputs\n\n\n\n## Solution\nFixed in [**5.3.18**](https://github.com/spring-projects/spring-framework/releases/tag/v5.3.18) by [this](https://github.com/spring-projects/spring-framework/commit/002546b3e4b8d791ea6acccb81eb3168f51abb15) commit and  [**5.2.20**](https://github.com/spring-projects/spring-framework/releases/tag/v5.2.20.RELEASE) by [this](https://github.com/spring-projects/spring-framework/commit/996f701a1916d10202c1d0d281f06ab1f2e1117e) commit .\n\nThe latest releases can be found [here](https://github.com/spring-projects/spring-framework/tags).\n\n## Workaround\nAn official workaround for the issue has been outlined [here](https://spring.io/blog/2022/03/31/spring-framework-rce-early-announcement).\n\n## Dependency tree\n- org.owasp.webgoat.lesson:http-basics:v8.1.0:-maven\n    - org.springframework.security:spring-security-test:4.1.3.RELEASE\n        - org.springframework.security:spring-security-core:5.2.1.RELEASE\n            - org.springframework:spring-expression:5.2.2.RELEASE\n\n\n## References\n* Common Weakness Enumeration: [CWE-184](https://cwe.mitre.org/data/definitions/184.html)\n* Common Weakness Enumeration: [CWE-749](https://cwe.mitre.org/data/definitions/749.html)\n\n","text":"Spring Framework is vulnerable to a flaw in the access restrictions to the security sensitive `ClassLoader` property. The restrictions can be bypassed through alternative paths available with Java9 and later. An attacker can leverage this vulnerability to cause remote code execution (RCE).\n\n**Note** this issue exists because the restrictions that were introduced to prevent exploitation of BDSA-2010-0001 (CVE-2010-1622) can be bypassed on platforms where Java9 and later are in use.\n\nThis vulnerability is listed as exploitable by the Cybersecurity \u0026 Infrastructure Security Agency in their [Known Exploited Vulnerabilities Catalog](https://www.cisa.gov/known-exploited-vulnerabilities-catalog)."},"properties":{"security-severity":"9.1","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-184","external/cwe/cwe-749"]},"defaultConfiguration":{"level":"error"}},{"id":"CVE-2020-5397 spring-expression 5.2.2.RELEASE: spring-security-test 4.1.3.RELEASE: org.springframework","shortDescription":{"text":"Transitive Dependency: spring-expression 5.2.2.RELEASE from spring-security-test 4.1.3.RELEASE (CVE-2020-5397)"},"fullDescription":{"text":"Spring Framework is vulnerable to cross-site request forgery (CSRF) attacks via CORS preflight requests which target Spring MVC or Spring WebFlux endpoints."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| spring-expression 5.2.2.RELEASE  | 5.3.31  | 6.1.2 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/ba6e9d03-9fbd-4086-9631-99d1ad5e520c?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=09f17d81-b282-43ec-9f2b-36c8021d3ca7)\n\n\n## Description\nSpring Framework is vulnerable to cross-site request forgery (CSRF) attacks via CORS preflight requests which target Spring MVC or Spring WebFlux endpoints.\n\n## Vulnerabilities(BDSA,CVE)\n:orange_circle: [CVE-2020-5397](https://openhub.net/vulnerabilities/bdsa/CVE-2020-5397) - Cross-Site Request Forgery (CSRF)\n\n\n\n## Solution\nFixed in [**5.2.3**](https://github.com/spring-projects/spring-framework/releases/tag/v5.2.3.RELEASE).\n\n\n\n## Dependency tree\n- org.owasp.webgoat.lesson:http-basics:v8.1.0:-maven\n    - org.springframework.security:spring-security-test:4.1.3.RELEASE\n        - org.springframework.security:spring-security-core:5.2.1.RELEASE\n            - org.springframework:spring-expression:5.2.2.RELEASE\n\n\n## References\n* Common Weakness Enumeration: [CWE-352](https://cwe.mitre.org/data/definitions/352.html)\n\n","text":"Spring Framework is vulnerable to cross-site request forgery (CSRF) attacks via CORS preflight requests which target Spring MVC or Spring WebFlux endpoints."},"properties":{"security-severity":"8.9","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-352"]},"defaultConfiguration":{"level":"error"}},{"id":"BDSA-2022-0847 spring-expression 5.2.2.RELEASE: spring-security-test 4.1.3.RELEASE: org.springframework","shortDescription":{"text":"Transitive Dependency: spring-expression 5.2.2.RELEASE from spring-security-test 4.1.3.RELEASE (BDSA-2022-0847)"},"fullDescription":{"text":"Software systems using Spring Framework may be vulnerable to unsafe deserialization if they employ unsafe use of certain provided deserialization functionality. A remote attacker could potentially execute arbitrary code on a vulnerable endpoint by passing a maliciously crafted serialized object to that endpoint.\n\n**Note**: This issue only affects software that has been written to leverage specific deserialization functionality provided by the Spring Framework without sanitization."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| spring-expression 5.2.2.RELEASE  | 5.3.31  | 6.1.2 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/ba6e9d03-9fbd-4086-9631-99d1ad5e520c?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=09f17d81-b282-43ec-9f2b-36c8021d3ca7)\n\n\n## Description\nSoftware systems using Spring Framework may be vulnerable to unsafe deserialization if they employ unsafe use of certain provided deserialization functionality. A remote attacker could potentially execute arbitrary code on a vulnerable endpoint by passing a maliciously crafted serialized object to that endpoint.\n\n**Note**: This issue only affects software that has been written to leverage specific deserialization functionality provided by the Spring Framework without sanitization.\n\n## Vulnerabilities(BDSA,CVE)\n:orange_circle: [BDSA-2022-0847](https://openhub.net/vulnerabilities/bdsa/BDSA-2022-0847) - Insecure Object Deserialization\n\n\n\n## Solution\nFixed in **[6.0.0-M4](https://github.com/spring-projects/spring-framework/releases/tag/v6.0.0-M4)** by [this](https://github.com/spring-projects/spring-framework/commit/7f7fb58dd0dae86d22268a4b59ac7c72a6c22529) commit.\n\nFixed in **[5.3.18](https://github.com/spring-projects/spring-framework/releases/tag/v5.3.18)** and **[5.2.20](https://github.com/spring-projects/spring-framework/releases/tag/v5.2.20.RELEASE)** by [this](https://github.com/spring-projects/spring-framework/commit/3811cd4c0a0be3aac6e842cf1890610ce986449d) commit.\n\n**Note**: These patches simply annotate the dangerous method as deprecated or documents the dangers. It is the responsibility of developers who call this method to ensure that it is not used with unsanitized untrusted input.\n\n\n\n## Dependency tree\n- org.owasp.webgoat.lesson:http-basics:v8.1.0:-maven\n    - org.springframework.security:spring-security-test:4.1.3.RELEASE\n        - org.springframework.security:spring-security-core:5.2.1.RELEASE\n            - org.springframework:spring-expression:5.2.2.RELEASE\n\n\n## References\n* Common Weakness Enumeration: [CWE-502](https://cwe.mitre.org/data/definitions/502.html)\n\n","text":"Software systems using Spring Framework may be vulnerable to unsafe deserialization if they employ unsafe use of certain provided deserialization functionality. A remote attacker could potentially execute arbitrary code on a vulnerable endpoint by passing a maliciously crafted serialized object to that endpoint.\n\n**Note**: This issue only affects software that has been written to leverage specific deserialization functionality provided by the Spring Framework without sanitization."},"properties":{"security-severity":"8.9","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-502"]},"defaultConfiguration":{"level":"error"}},{"id":"CVE-2020-5398 spring-expression 5.2.2.RELEASE: spring-security-test 4.1.3.RELEASE: org.springframework","shortDescription":{"text":"Transitive Dependency: spring-expression 5.2.2.RELEASE from spring-security-test 4.1.3.RELEASE (CVE-2020-5398)"},"fullDescription":{"text":"Spring Framework is vulnerable to a reflected file download (RFD) attack via improper input validation on filenames in a `Content-Disposition` header."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| spring-expression 5.2.2.RELEASE  | 5.3.31  | 6.1.2 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/ba6e9d03-9fbd-4086-9631-99d1ad5e520c?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=09f17d81-b282-43ec-9f2b-36c8021d3ca7)\n\n\n## Description\nSpring Framework is vulnerable to a reflected file download (RFD) attack via improper input validation on filenames in a `Content-Disposition` header.\n\n## Vulnerabilities(BDSA,CVE)\n:orange_circle: [CVE-2020-5398](https://openhub.net/vulnerabilities/bdsa/CVE-2020-5398) - Weak Input Validation\n\n\n\n## Solution\nFixed by [this](https://github.com/spring-projects/spring-framework/commit/956ffe68587c8d5f21135b5ce4650af0c2dea933) commit in:\n* [**5.2.3**](https://github.com/spring-projects/spring-framework/releases/tag/v5.2.3.RELEASE)\n* [**5.1.13**](https://github.com/spring-projects/spring-framework/releases/tag/v5.1.13.RELEASE) \n* [**5.0.16**](https://github.com/spring-projects/spring-framework/releases/tag/v5.0.16.RELEASE)\n\n\n\n## Dependency tree\n- org.owasp.webgoat.lesson:http-basics:v8.1.0:-maven\n    - org.springframework.security:spring-security-test:4.1.3.RELEASE\n        - org.springframework.security:spring-security-core:5.2.1.RELEASE\n            - org.springframework:spring-expression:5.2.2.RELEASE\n\n\n## References\n* Common Weakness Enumeration: [CWE-20](https://cwe.mitre.org/data/definitions/20.html)\n\n","text":"Spring Framework is vulnerable to a reflected file download (RFD) attack via improper input validation on filenames in a `Content-Disposition` header."},"properties":{"security-severity":"8.9","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-20"]},"defaultConfiguration":{"level":"error"}},{"id":"CVE-2021-22096 spring-expression 5.2.2.RELEASE: spring-security-test 4.1.3.RELEASE: org.springframework","shortDescription":{"text":"Transitive Dependency: spring-expression 5.2.2.RELEASE from spring-security-test 4.1.3.RELEASE (CVE-2021-22096)"},"fullDescription":{"text":"Spring Framework is vulnerable to log file injection due to the insufficient validation of user input in an undisclosed component. An attacker could leverage this issue in order to add arbitrary entries to a log file which could impact both the integrity issues and performance issues.\n\n**Note**: a follow-up to this issue was disclosed as **CVE-2021-22060** (**BDSA-2021-3236**), with further fixed releases that protect against additional types of input and in more places of the Spring Framework codebase."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| spring-expression 5.2.2.RELEASE  | 5.3.31  | 6.1.2 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/ba6e9d03-9fbd-4086-9631-99d1ad5e520c?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=09f17d81-b282-43ec-9f2b-36c8021d3ca7)\n\n\n## Description\nSpring Framework is vulnerable to log file injection due to the insufficient validation of user input in an undisclosed component. An attacker could leverage this issue in order to add arbitrary entries to a log file which could impact both the integrity issues and performance issues.\n\n**Note**: a follow-up to this issue was disclosed as **CVE-2021-22060** (**BDSA-2021-3236**), with further fixed releases that protect against additional types of input and in more places of the Spring Framework codebase.\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [CVE-2021-22096](https://openhub.net/vulnerabilities/bdsa/CVE-2021-22096) - Injection in Downstream Component\n\n\n\n## Solution\nFixed in versions [**5.3.14**](https://github.com/spring-projects/spring-framework/releases/tag/v5.3.14) and [**5.2.19**](https://github.com/spring-projects/spring-framework/releases/tag/v5.2.19.RELEASE).\n\nThe latest stable releases can be found [here](https://github.com/spring-projects/spring-framework/releases).\n\n\n\n## Dependency tree\n- org.owasp.webgoat.lesson:http-basics:v8.1.0:-maven\n    - org.springframework.security:spring-security-test:4.1.3.RELEASE\n        - org.springframework.security:spring-security-core:5.2.1.RELEASE\n            - org.springframework:spring-expression:5.2.2.RELEASE\n\n\n## References\n* Common Weakness Enumeration: [CWE-74](https://cwe.mitre.org/data/definitions/74.html)\n\n","text":"Spring Framework is vulnerable to log file injection due to the insufficient validation of user input in an undisclosed component. An attacker could leverage this issue in order to add arbitrary entries to a log file which could impact both the integrity issues and performance issues.\n\n**Note**: a follow-up to this issue was disclosed as **CVE-2021-22060** (**BDSA-2021-3236**), with further fixed releases that protect against additional types of input and in more places of the Spring Framework codebase."},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-74"]},"defaultConfiguration":{"level":"warning"}},{"id":"CVE-2021-22060 spring-expression 5.2.2.RELEASE: spring-security-test 4.1.3.RELEASE: org.springframework","shortDescription":{"text":"Transitive Dependency: spring-expression 5.2.2.RELEASE from spring-security-test 4.1.3.RELEASE (CVE-2021-22060)"},"fullDescription":{"text":"Spring Framework is vulnerable to log file injection due to the insufficient validation of user input in an undisclosed component. An attacker could leverage this issue in order to add arbitrary entries to a log file which could impact both the integrity issues and performance issues.\n\n**Note**: the vendor states this issue exists as a follow up to CVE-2021-22096 (BDSA-2022-0011) that protects against additional types of input and in more places of the Spring Framework codebase."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| spring-expression 5.2.2.RELEASE  | 5.3.31  | 6.1.2 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/ba6e9d03-9fbd-4086-9631-99d1ad5e520c?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=09f17d81-b282-43ec-9f2b-36c8021d3ca7)\n\n\n## Description\nSpring Framework is vulnerable to log file injection due to the insufficient validation of user input in an undisclosed component. An attacker could leverage this issue in order to add arbitrary entries to a log file which could impact both the integrity issues and performance issues.\n\n**Note**: the vendor states this issue exists as a follow up to CVE-2021-22096 (BDSA-2022-0011) that protects against additional types of input and in more places of the Spring Framework codebase.\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [CVE-2021-22060](https://openhub.net/vulnerabilities/bdsa/CVE-2021-22060) - Injection in Downstream Component\n\n\n\n## Solution\nFixed in versions [**5.3.14**](https://github.com/spring-projects/spring-framework/releases/tag/v5.3.14) and [**5.2.19**](https://github.com/spring-projects/spring-framework/releases/tag/v5.2.19.RELEASE).\n\nThe latest stable releases can be found [here](https://github.com/spring-projects/spring-framework/releases).\n\n\n\n## Dependency tree\n- org.owasp.webgoat.lesson:http-basics:v8.1.0:-maven\n    - org.springframework.security:spring-security-test:4.1.3.RELEASE\n        - org.springframework.security:spring-security-core:5.2.1.RELEASE\n            - org.springframework:spring-expression:5.2.2.RELEASE\n\n\n## References\n* Common Weakness Enumeration: [CWE-74](https://cwe.mitre.org/data/definitions/74.html)\n\n","text":"Spring Framework is vulnerable to log file injection due to the insufficient validation of user input in an undisclosed component. An attacker could leverage this issue in order to add arbitrary entries to a log file which could impact both the integrity issues and performance issues.\n\n**Note**: the vendor states this issue exists as a follow up to CVE-2021-22096 (BDSA-2022-0011) that protects against additional types of input and in more places of the Spring Framework codebase."},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-74"]},"defaultConfiguration":{"level":"warning"}},{"id":"CVE-2022-22950 spring-expression 5.2.2.RELEASE: spring-security-test 4.1.3.RELEASE: org.springframework","shortDescription":{"text":"Transitive Dependency: spring-expression 5.2.2.RELEASE from spring-security-test 4.1.3.RELEASE (CVE-2022-22950)"},"fullDescription":{"text":"Spring-Framework's spring-expression is vulnerable to a denial-of-service (DoS) condition. This allows an attacker to use crafted input to cause the spring-expression process to crash due to an exception."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| spring-expression 5.2.2.RELEASE  | 5.3.31  | 6.1.2 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/ba6e9d03-9fbd-4086-9631-99d1ad5e520c?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=09f17d81-b282-43ec-9f2b-36c8021d3ca7)\n\n\n## Description\nSpring-Framework's spring-expression is vulnerable to a denial-of-service (DoS) condition. This allows an attacker to use crafted input to cause the spring-expression process to crash due to an exception.\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [CVE-2022-22950](https://openhub.net/vulnerabilities/bdsa/CVE-2022-22950) - Allocation of Resources Without Limits or Throttling\n\n\n\n## Solution\nFixed in version [**5.3.17**](https://github.com/spring-projects/spring-framework/releases/tag/v5.3.17) by [this](https://github.com/spring-projects/spring-framework/commit/94af2ca06bf711de03286999b1c64a703d6de552) commit.\n\nThe latest stable releases can be found [here](https://github.com/spring-projects/spring-framework/tags).\n\n\n\n## Dependency tree\n- org.owasp.webgoat.lesson:http-basics:v8.1.0:-maven\n    - org.springframework.security:spring-security-test:4.1.3.RELEASE\n        - org.springframework.security:spring-security-core:5.2.1.RELEASE\n            - org.springframework:spring-expression:5.2.2.RELEASE\n\n\n## References\n* Common Weakness Enumeration: [CWE-770](https://cwe.mitre.org/data/definitions/770.html)\n\n","text":"Spring-Framework's spring-expression is vulnerable to a denial-of-service (DoS) condition. This allows an attacker to use crafted input to cause the spring-expression process to crash due to an exception."},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-770"]},"defaultConfiguration":{"level":"warning"}},{"id":"CVE-2021-22118 spring-expression 5.2.2.RELEASE: spring-security-test 4.1.3.RELEASE: org.springframework","shortDescription":{"text":"Transitive Dependency: spring-expression 5.2.2.RELEASE from spring-security-test 4.1.3.RELEASE (CVE-2021-22118)"},"fullDescription":{"text":"Spring Framework is vulnerable to privilege escalation due to the creation of unsafe temporary directories by the WebFlux component. A local authenticated attacker could modify arbitrary files via maliciously crafted `multipart` requests. \n\nThis vulnerability does not affect Spring MVC applications, or applications that do not handle `multipart` file requests."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| spring-expression 5.2.2.RELEASE  | 5.3.31  | 6.1.2 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/ba6e9d03-9fbd-4086-9631-99d1ad5e520c?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=09f17d81-b282-43ec-9f2b-36c8021d3ca7)\n\n\n## Description\nSpring Framework is vulnerable to privilege escalation due to the creation of unsafe temporary directories by the WebFlux component. A local authenticated attacker could modify arbitrary files via maliciously crafted `multipart` requests. \n\nThis vulnerability does not affect Spring MVC applications, or applications that do not handle `multipart` file requests.\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [CVE-2021-22118](https://openhub.net/vulnerabilities/bdsa/CVE-2021-22118) - Third-party component usage\n\n\n\n## Solution\nFixed in [**5.3.7**](https://github.com/spring-projects/spring-framework/releases/tag/v5.3.7)  by [this](https://github.com/spring-projects/spring-framework/commit/cce60c479c22101f24b2b4abebb6d79440b120d1) commit and [this](https://github.com/spring-projects/spring-framework/commit/0d0d75e25322d8161002d861fff3ec04ba8be5ac) commit, and in [**5.2.15**](https://github.com/spring-projects/spring-framework/releases/tag/v5.2.15.RELEASE) by [this](https://github.com/spring-projects/spring-framework/commit/85ad63bd35f6f10fa5549ba9a11869144338bd8a) commit.\n\nThe latest stable releases are available [here](https://github.com/spring-projects/spring-framework/releases/).\n\n\n\n## Dependency tree\n- org.owasp.webgoat.lesson:http-basics:v8.1.0:-maven\n    - org.springframework.security:spring-security-test:4.1.3.RELEASE\n        - org.springframework.security:spring-security-core:5.2.1.RELEASE\n            - org.springframework:spring-expression:5.2.2.RELEASE\n\n\n## References\n* Common Weakness Enumeration: [CWE-264](https://cwe.mitre.org/data/definitions/264.html)\n* Common Weakness Enumeration: [CWE-376](https://cwe.mitre.org/data/definitions/376.html)\n\n","text":"Spring Framework is vulnerable to privilege escalation due to the creation of unsafe temporary directories by the WebFlux component. A local authenticated attacker could modify arbitrary files via maliciously crafted `multipart` requests. \n\nThis vulnerability does not affect Spring MVC applications, or applications that do not handle `multipart` file requests."},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-264","external/cwe/cwe-376"]},"defaultConfiguration":{"level":"warning"}},{"id":"CVE-2022-22970 spring-expression 5.2.2.RELEASE: spring-security-test 4.1.3.RELEASE: org.springframework","shortDescription":{"text":"Transitive Dependency: spring-expression 5.2.2.RELEASE from spring-security-test 4.1.3.RELEASE (CVE-2022-22970)"},"fullDescription":{"text":"Spring Framework is vulnerable to denial-of-service (DoS) due to the improper implementation of data binding functionality. A remote attacker could cause a vulnerable server to crash if that server provides file upload functionality."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| spring-expression 5.2.2.RELEASE  | 5.3.31  | 6.1.2 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/ba6e9d03-9fbd-4086-9631-99d1ad5e520c?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=09f17d81-b282-43ec-9f2b-36c8021d3ca7)\n\n\n## Description\nSpring Framework is vulnerable to denial-of-service (DoS) due to the improper implementation of data binding functionality. A remote attacker could cause a vulnerable server to crash if that server provides file upload functionality.\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [CVE-2022-22970](https://openhub.net/vulnerabilities/bdsa/CVE-2022-22970) - Incorrect Provision of Specified Functionality\n\n\n\n## Solution\nFixed in version [**5.3.20**](https://github.com/spring-projects/spring-framework/releases/tag/v5.3.20) and in version [**5.2.22**](https://github.com/spring-projects/spring-framework/releases/tag/v5.2.22.RELEASE).\n\nThe latest stable releases can be found [here](https://github.com/spring-projects/spring-framework/releases).\n\n\n\n## Dependency tree\n- org.owasp.webgoat.lesson:http-basics:v8.1.0:-maven\n    - org.springframework.security:spring-security-test:4.1.3.RELEASE\n        - org.springframework.security:spring-security-core:5.2.1.RELEASE\n            - org.springframework:spring-expression:5.2.2.RELEASE\n\n\n## References\n* Common Weakness Enumeration: [CWE-684](https://cwe.mitre.org/data/definitions/684.html)\n\n","text":"Spring Framework is vulnerable to denial-of-service (DoS) due to the improper implementation of data binding functionality. A remote attacker could cause a vulnerable server to crash if that server provides file upload functionality."},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-684"]},"defaultConfiguration":{"level":"warning"}},{"id":"CVE-2022-22971 spring-expression 5.2.2.RELEASE: spring-security-test 4.1.3.RELEASE: org.springframework","shortDescription":{"text":"Transitive Dependency: spring-expression 5.2.2.RELEASE from spring-security-test 4.1.3.RELEASE (CVE-2022-22971)"},"fullDescription":{"text":"Spring Framework is vulnerable to denial-of-service (DoS) due to the improper handling of the STOMP protocol for websockets. A remote authenticated attacker could leverage this issue in order to cause a server to crash."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| spring-expression 5.2.2.RELEASE  | 5.3.31  | 6.1.2 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/ba6e9d03-9fbd-4086-9631-99d1ad5e520c?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=09f17d81-b282-43ec-9f2b-36c8021d3ca7)\n\n\n## Description\nSpring Framework is vulnerable to denial-of-service (DoS) due to the improper handling of the STOMP protocol for websockets. A remote authenticated attacker could leverage this issue in order to cause a server to crash.\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [CVE-2022-22971](https://openhub.net/vulnerabilities/bdsa/CVE-2022-22971) - Incorrect Provision of Specified Functionality\n\n\n\n## Solution\nFixed in version [**5.3.20**](https://github.com/spring-projects/spring-framework/releases/tag/v5.3.20) and in version [**5.2.22**](https://github.com/spring-projects/spring-framework/releases/tag/v5.2.22.RELEASE).\n\nThe latest stable releases can be found [here](https://github.com/spring-projects/spring-framework/releases).\n\n\n\n## Dependency tree\n- org.owasp.webgoat.lesson:http-basics:v8.1.0:-maven\n    - org.springframework.security:spring-security-test:4.1.3.RELEASE\n        - org.springframework.security:spring-security-core:5.2.1.RELEASE\n            - org.springframework:spring-expression:5.2.2.RELEASE\n\n\n## References\n* Common Weakness Enumeration: [CWE-684](https://cwe.mitre.org/data/definitions/684.html)\n\n","text":"Spring Framework is vulnerable to denial-of-service (DoS) due to the improper handling of the STOMP protocol for websockets. A remote authenticated attacker could leverage this issue in order to cause a server to crash."},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-684"]},"defaultConfiguration":{"level":"warning"}},{"id":"CVE-2023-20861 spring-expression 5.2.2.RELEASE: spring-security-test 4.1.3.RELEASE: org.springframework","shortDescription":{"text":"Transitive Dependency: spring-expression 5.2.2.RELEASE from spring-security-test 4.1.3.RELEASE (CVE-2023-20861)"},"fullDescription":{"text":"Spring Framework is vulnerable to denial-of-service (DoS) via specially crafted SpEL expressions. An attacker could exploit this issue by passing a crafted SpEL expression to the application which may result in a crash."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| spring-expression 5.2.2.RELEASE  | 5.3.31  | 6.1.2 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/ba6e9d03-9fbd-4086-9631-99d1ad5e520c?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=09f17d81-b282-43ec-9f2b-36c8021d3ca7)\n\n\n## Description\nSpring Framework is vulnerable to denial-of-service (DoS) via specially crafted SpEL expressions. An attacker could exploit this issue by passing a crafted SpEL expression to the application which may result in a crash.\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [CVE-2023-20861](https://openhub.net/vulnerabilities/bdsa/CVE-2023-20861) - Weak Input Validation\n\n\n\n## Solution\nFixed in:\n* [**5.2.23**](https://github.com/spring-projects/spring-framework/releases/tag/v5.2.23.RELEASE) by [this](https://github.com/spring-projects/spring-framework/commit/52c93b1c4b24d70de233a958e60e7c5822bd274f) commit,\n* [**5.3.26**](https://github.com/spring-projects/spring-framework/releases/tag/v5.3.26) by [this](https://github.com/spring-projects/spring-framework/commit/430fc25acad2e85cbdddcd52b64481691f03ebd1) commit,\n* [**6.0.7**](https://github.com/spring-projects/spring-framework/releases/tag/v6.0.7) by [this](https://github.com/spring-projects/spring-framework/commit/935c29e3ddba5b19951e54f6685c70ed45d9cbe5) commit.\n\nThe latest stable releases are available [here](https://github.com/spring-projects/spring-framework/releases).\n\n\n\n## Dependency tree\n- org.owasp.webgoat.lesson:http-basics:v8.1.0:-maven\n    - org.springframework.security:spring-security-test:4.1.3.RELEASE\n        - org.springframework.security:spring-security-core:5.2.1.RELEASE\n            - org.springframework:spring-expression:5.2.2.RELEASE\n\n\n## References\n* Common Weakness Enumeration: [CWE-20](https://cwe.mitre.org/data/definitions/20.html)\n\n","text":"Spring Framework is vulnerable to denial-of-service (DoS) via specially crafted SpEL expressions. An attacker could exploit this issue by passing a crafted SpEL expression to the application which may result in a crash."},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-20"]},"defaultConfiguration":{"level":"warning"}},{"id":"CVE-2023-20863 spring-expression 5.2.2.RELEASE: spring-security-test 4.1.3.RELEASE: org.springframework","shortDescription":{"text":"Transitive Dependency: spring-expression 5.2.2.RELEASE from spring-security-test 4.1.3.RELEASE (CVE-2023-20863)"},"fullDescription":{"text":"Spring Framework is vulnerable to denial-of-service (DoS) via specially crafted SpEL expressions."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| spring-expression 5.2.2.RELEASE  | 5.3.31  | 6.1.2 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/ba6e9d03-9fbd-4086-9631-99d1ad5e520c?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=09f17d81-b282-43ec-9f2b-36c8021d3ca7)\n\n\n## Description\nSpring Framework is vulnerable to denial-of-service (DoS) via specially crafted SpEL expressions.\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [CVE-2023-20863](https://openhub.net/vulnerabilities/bdsa/CVE-2023-20863) - Weak Input Validation\n\n\n\n## Solution\nFixed in:\n* [**5.2.24**](https://github.com/spring-projects/spring-framework/releases/tag/v5.2.24.RELEASE)\n* [**5.3.27**](https://github.com/spring-projects/spring-framework/releases/tag/v5.3.27)\n* [**6.0.8**](https://github.com/spring-projects/spring-framework/releases/tag/v6.0.8)\n\nThe latest stable releases are available [here](https://github.com/spring-projects/spring-framework/releases).\n\n\n\n## Dependency tree\n- org.owasp.webgoat.lesson:http-basics:v8.1.0:-maven\n    - org.springframework.security:spring-security-test:4.1.3.RELEASE\n        - org.springframework.security:spring-security-core:5.2.1.RELEASE\n            - org.springframework:spring-expression:5.2.2.RELEASE\n\n\n## References\n* Common Weakness Enumeration: [CWE-20](https://cwe.mitre.org/data/definitions/20.html)\n\n","text":"Spring Framework is vulnerable to denial-of-service (DoS) via specially crafted SpEL expressions."},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-20"]},"defaultConfiguration":{"level":"warning"}},{"id":"CVE-2020-5421 spring-expression 5.2.2.RELEASE: spring-security-test 4.1.3.RELEASE: org.springframework","shortDescription":{"text":"Transitive Dependency: spring-expression 5.2.2.RELEASE from spring-security-test 4.1.3.RELEASE (CVE-2020-5421)"},"fullDescription":{"text":"It was discovered that Spring Framework was vulnerable to RFD protection bypass. In some instances, depending on the browser used, an attacker could bypass the RFD attack protections via the use of a `jsessionid` path parameter."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| spring-expression 5.2.2.RELEASE  | 5.3.31  | 6.1.2 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/ba6e9d03-9fbd-4086-9631-99d1ad5e520c?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=09f17d81-b282-43ec-9f2b-36c8021d3ca7)\n\n\n## Description\nIt was discovered that Spring Framework was vulnerable to RFD protection bypass. In some instances, depending on the browser used, an attacker could bypass the RFD attack protections via the use of a `jsessionid` path parameter.\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [CVE-2020-5421](https://openhub.net/vulnerabilities/bdsa/CVE-2020-5421) - Weak Input Validation\n\n\n\n## Solution\nFixed in:\n* [**5.2.9**](https://github.com/spring-projects/spring-framework/releases/tag/v5.2.9.RELEASE) by [this](https://github.com/spring-projects/spring-framework/commit/899761f0a8890353dc01f10d2af96ae192f3e655) commit,\n* [**5.1.18**](https://github.com/spring-projects/spring-framework/releases/tag/v5.1.18.RELEASE) by [this](https://github.com/spring-projects/spring-framework/commit/a63c8886c00f30fea5b25f50ddf6f56c6eb957bd) commit,\n* [**5.0.19**](https://github.com/spring-projects/spring-framework/releases/tag/v5.0.19.RELEASE) by [this](https://github.com/spring-projects/spring-framework/commit/aec3a4c69e02d87f87258b0ab5c1d6c83f4cb44f) commit,\n* [**4.3.29**](https://github.com/spring-projects/spring-framework/releases/tag/v4.3.29.RELEASE) by [this](https://github.com/spring-projects/spring-framework/commit/2f75212eb667a30fe2fa9b5aca8f22d5e255821f) commit.\n\n\n\n## Dependency tree\n- org.owasp.webgoat.lesson:http-basics:v8.1.0:-maven\n    - org.springframework.security:spring-security-test:4.1.3.RELEASE\n        - org.springframework.security:spring-security-core:5.2.1.RELEASE\n            - org.springframework:spring-expression:5.2.2.RELEASE\n\n\n## References\n* Common Weakness Enumeration: [CWE-20](https://cwe.mitre.org/data/definitions/20.html)\n\n","text":"It was discovered that Spring Framework was vulnerable to RFD protection bypass. In some instances, depending on the browser used, an attacker could bypass the RFD attack protections via the use of a `jsessionid` path parameter."},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-20"]},"defaultConfiguration":{"level":"warning"}},{"id":"CVE-2022-22968 spring-expression 5.2.2.RELEASE: spring-security-test 4.1.3.RELEASE: org.springframework","shortDescription":{"text":"Transitive Dependency: spring-expression 5.2.2.RELEASE from spring-security-test 4.1.3.RELEASE (CVE-2022-22968)"},"fullDescription":{"text":"Spring Framework is vulnerable to data binding protection bypass due to improper validation of specified disallowed fields in `DataBinders`. This could be leveraged by an attacker to bypass the suggested workaround to **CVE-2022-22965** (**BDSA-2022-0858**) if it is improperly implemented."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| spring-expression 5.2.2.RELEASE  | 5.3.31  | 6.1.2 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/ba6e9d03-9fbd-4086-9631-99d1ad5e520c?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=09f17d81-b282-43ec-9f2b-36c8021d3ca7)\n\n\n## Description\nSpring Framework is vulnerable to data binding protection bypass due to improper validation of specified disallowed fields in `DataBinders`. This could be leveraged by an attacker to bypass the suggested workaround to **CVE-2022-22965** (**BDSA-2022-0858**) if it is improperly implemented.\n\n## Vulnerabilities(BDSA,CVE)\n:large_blue_circle: [CVE-2022-22968](https://openhub.net/vulnerabilities/bdsa/CVE-2022-22968) - Weak Input Validation\n\n\n\n## Solution\nFixed  in [**5.3.19**](https://github.com/spring-projects/spring-framework/releases/tag/v5.3.19) by [this](https://github.com/spring-projects/spring-framework/commit/a7cf19cec5ebd270f97a194d749e2d5701ad2ab7) commit and [**5.2.21**](https://github.com/spring-projects/spring-framework/releases/tag/v5.2.21.RELEASE) by [this](https://github.com/spring-projects/spring-framework/commit/833e750175349ab4fd502109a8b41af77e25cdea) commit.\n\n\n\n## Dependency tree\n- org.owasp.webgoat.lesson:http-basics:v8.1.0:-maven\n    - org.springframework.security:spring-security-test:4.1.3.RELEASE\n        - org.springframework.security:spring-security-core:5.2.1.RELEASE\n            - org.springframework:spring-expression:5.2.2.RELEASE\n\n\n## References\n* Common Weakness Enumeration: [CWE-20](https://cwe.mitre.org/data/definitions/20.html)\n\n","text":"Spring Framework is vulnerable to data binding protection bypass due to improper validation of specified disallowed fields in `DataBinders`. This could be leveraged by an attacker to bypass the suggested workaround to **CVE-2022-22965** (**BDSA-2022-0858**) if it is improperly implemented."},"properties":{"security-severity":"3.8","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-20"]},"defaultConfiguration":{"level":"note"}},{"id":"CVE-2016-9879 spring-security-test 4.1.3.RELEASE: org.springframework.security","shortDescription":{"text":"Direct Dependency: spring-security-test 4.1.3.RELEASE (CVE-2016-9879)"},"fullDescription":{"text":"Spring Security contains a path traversal vulnerability. This could be exploited by a remote attacker to bypass security constraints when handling URL path parameters."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| spring-security-test 4.1.3.RELEASE  | 4.2.20  | 6.2.1 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/4b85e797-3439-4801-be45-d2df651f2298?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=d80c013b-7862-4ea8-83e5-eb7b91623e0c)\n\n\n## Description\nSpring Security contains a path traversal vulnerability. This could be exploited by a remote attacker to bypass security constraints when handling URL path parameters.\n\n## Vulnerabilities(BDSA,CVE)\n:orange_circle: [CVE-2016-9879](https://openhub.net/vulnerabilities/bdsa/CVE-2016-9879) - Directory Traversal\n\n\n\n## Solution\nFixed in:\n\n* **[4.2.1](https://github.com/spring-projects/spring-security/releases/tag/4.2.1.RELEASE)** by [this](https://github.com/spring-projects/spring-security/commit/666e356ebc479194ba51e43bb99fc42f849b6175) commit,\n* **[4.1.4](https://github.com/spring-projects/spring-security/releases/tag/4.1.4.RELEASE)** by [this](https://github.com/spring-projects/spring-security/commit/ed2ae21074b7850d386371b2ab9e29268ef2f0c0) commit,\n* **[3.2.10](https://github.com/spring-projects/spring-security/releases/tag/3.2.10.RELEASE)** by [this](https://github.com/spring-projects/spring-security/commit/6d30da2e1f166ceac339899295e1b8a8ff2f08c4) commit.\n\n## Workaround\nAvoid using Servlet containers which include path parameters in return values for `getServletPath()` and `getPathInfo()`.\n\n\n\n## References\n* Common Weakness Enumeration: [CWE-22](https://cwe.mitre.org/data/definitions/22.html)\n\n","text":"Spring Security contains a path traversal vulnerability. This could be exploited by a remote attacker to bypass security constraints when handling URL path parameters."},"properties":{"security-severity":"8.9","tags":["security","open_source_analysis","direct_dependency","patch_available","external/cwe/cwe-22"]},"defaultConfiguration":{"level":"error"}},{"id":"BDSA-2022-3109 spring-security-test 4.1.3.RELEASE: org.springframework.security","shortDescription":{"text":"Direct Dependency: spring-security-test 4.1.3.RELEASE (BDSA-2022-3109)"},"fullDescription":{"text":"Spring Security contains a flaw when dealing with OAuth2 access token empty scope list  responses. A remote attacker could leverage this to escalate their privileges under **all** the following conditions being met:\n\n* They act as the role of a Login Client (e.g. uses `http.oauth2Login()`).\n* They use one or more authorization rules with authorities mapped from authorized scopes (e.g. `anyRequest().hasAuthority(\"SCOPE_message.write\")`) in the client application.\n* An authorization server that responds with empty scopes list is registered (RFC 6749, Section 5.1).\n\n**Note:** The role of Resource Servers (`http.oauth2ResourceServer()`) and applications that do not map authorization rules from authorized scopes (eg. `anyRequest().hasAuthority(\"ROLE_USER\")`) cannot be exploited by this vulnerability."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| spring-security-test 4.1.3.RELEASE  | 4.2.20  | 6.2.1 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/4b85e797-3439-4801-be45-d2df651f2298?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=d80c013b-7862-4ea8-83e5-eb7b91623e0c)\n\n\n## Description\nSpring Security contains a flaw when dealing with OAuth2 access token empty scope list  responses. A remote attacker could leverage this to escalate their privileges under **all** the following conditions being met:\n\n* They act as the role of a Login Client (e.g. uses `http.oauth2Login()`).\n* They use one or more authorization rules with authorities mapped from authorized scopes (e.g. `anyRequest().hasAuthority(\"SCOPE_message.write\")`) in the client application.\n* An authorization server that responds with empty scopes list is registered (RFC 6749, Section 5.1).\n\n**Note:** The role of Resource Servers (`http.oauth2ResourceServer()`) and applications that do not map authorization rules from authorized scopes (eg. `anyRequest().hasAuthority(\"ROLE_USER\")`) cannot be exploited by this vulnerability.\n\n## Vulnerabilities(BDSA,CVE)\n:orange_circle: [BDSA-2022-3109](https://openhub.net/vulnerabilities/bdsa/BDSA-2022-3109) - Missing or Broken Authorization Mechanism\n\n\n\n## Solution\nFixed in versions [**5.7.5**](https://github.com/spring-projects/spring-security/releases/tag/5.7.5) and [**5.6.9**](https://github.com/spring-projects/spring-security/releases/tag/5.6.9) by [this](https://github.com/spring-projects/spring-security/commit/75004587a419a96d18909030b20c6b16b226ecbe) commit..\n\nThe latest releases can be found [here](https://github.com/spring-projects/spring-security/tags).\n\n\n\n\n\n## References\n* Common Weakness Enumeration: [CWE-285](https://cwe.mitre.org/data/definitions/285.html)\n\n","text":"Spring Security contains a flaw when dealing with OAuth2 access token empty scope list  responses. A remote attacker could leverage this to escalate their privileges under **all** the following conditions being met:\n\n* They act as the role of a Login Client (e.g. uses `http.oauth2Login()`).\n* They use one or more authorization rules with authorities mapped from authorized scopes (e.g. `anyRequest().hasAuthority(\"SCOPE_message.write\")`) in the client application.\n* An authorization server that responds with empty scopes list is registered (RFC 6749, Section 5.1).\n\n**Note:** The role of Resource Servers (`http.oauth2ResourceServer()`) and applications that do not map authorization rules from authorized scopes (eg. `anyRequest().hasAuthority(\"ROLE_USER\")`) cannot be exploited by this vulnerability."},"properties":{"security-severity":"8.9","tags":["security","open_source_analysis","direct_dependency","patch_available","external/cwe/cwe-285"]},"defaultConfiguration":{"level":"error"}},{"id":"CVE-2022-22978 spring-security-test 4.1.3.RELEASE: org.springframework.security","shortDescription":{"text":"Direct Dependency: spring-security-test 4.1.3.RELEASE (CVE-2022-22978)"},"fullDescription":{"text":"Spring Security is vulnerable to the bypassing of an authorization mechanism due to improperly implemented regular expression matching. A remote attacker could perform unauthorized actions on a vulnerable server by sending maliciously crafted requests to that server."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| spring-security-test 4.1.3.RELEASE  | 4.2.20  | 6.2.1 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/4b85e797-3439-4801-be45-d2df651f2298?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=d80c013b-7862-4ea8-83e5-eb7b91623e0c)\n\n\n## Description\nSpring Security is vulnerable to the bypassing of an authorization mechanism due to improperly implemented regular expression matching. A remote attacker could perform unauthorized actions on a vulnerable server by sending maliciously crafted requests to that server.\n\n## Vulnerabilities(BDSA,CVE)\n:orange_circle: [CVE-2022-22978](https://openhub.net/vulnerabilities/bdsa/CVE-2022-22978) - Incorrect Regular Expression\n\n\n\n## Solution\nFixed in versions:\n* [**5.7.0**](https://github.com/spring-projects/spring-security/releases/tag/5.7.0)\n* [**5.6.4**](https://github.com/spring-projects/spring-security/releases/tag/5.6.4)\n* [**5.5.7**](https://github.com/spring-projects/spring-security/releases/tag/5.5.7)\n\nThe latest stable releases can be found [here](https://github.com/spring-projects/spring-security/releases).\n\n\n\n\n\n## References\n* Common Weakness Enumeration: [CWE-185](https://cwe.mitre.org/data/definitions/185.html)\n\n","text":"Spring Security is vulnerable to the bypassing of an authorization mechanism due to improperly implemented regular expression matching. A remote attacker could perform unauthorized actions on a vulnerable server by sending maliciously crafted requests to that server."},"properties":{"security-severity":"8.9","tags":["security","open_source_analysis","direct_dependency","patch_available","external/cwe/cwe-185"]},"defaultConfiguration":{"level":"error"}},{"id":"CVE-2019-11272 spring-security-test 4.1.3.RELEASE: org.springframework.security","shortDescription":{"text":"Direct Dependency: spring-security-test 4.1.3.RELEASE (CVE-2019-11272)"},"fullDescription":{"text":"Spring Security contains a vulnerability that allows authentication bypass. An attacker could exploit this to gain unauthorized access to the application."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| spring-security-test 4.1.3.RELEASE  | 4.2.20  | 6.2.1 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/4b85e797-3439-4801-be45-d2df651f2298?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=d80c013b-7862-4ea8-83e5-eb7b91623e0c)\n\n\n## Description\nSpring Security contains a vulnerability that allows authentication bypass. An attacker could exploit this to gain unauthorized access to the application.\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [CVE-2019-11272](https://openhub.net/vulnerabilities/bdsa/CVE-2019-11272) - Improper Authentication\n\n\n\n## Solution\nFixed in version [**4.2.13**](https://github.com/spring-projects/spring-security/commits/4.2.13.RELEASE) by [this](https://github.com/spring-projects/spring-security/commit/b2d4fec3617c497c5a8eb9c7e5270e0c7db293ee) commit.\n\n\n\n\n\n## References\n* Common Weakness Enumeration: [CWE-287](https://cwe.mitre.org/data/definitions/287.html)\n\n","text":"Spring Security contains a vulnerability that allows authentication bypass. An attacker could exploit this to gain unauthorized access to the application."},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","direct_dependency","patch_available","external/cwe/cwe-287"]},"defaultConfiguration":{"level":"warning"}},{"id":"CVE-2021-22112 spring-security-test 4.1.3.RELEASE: org.springframework.security","shortDescription":{"text":"Direct Dependency: spring-security-test 4.1.3.RELEASE (CVE-2021-22112)"},"fullDescription":{"text":"Spring Security is vulnerable to privilege escalation due to a failure to correctly save security context information. An attacker who is allowed to use elevated privileges in a small portion of a program could extend those privileges to the entire program by sending maliciously crafted requests to the application.\n\nIt should be noted that the vulnerability is not present by default, and must be programmed in by an application developer."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| spring-security-test 4.1.3.RELEASE  | 4.2.20  | 6.2.1 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/4b85e797-3439-4801-be45-d2df651f2298?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=d80c013b-7862-4ea8-83e5-eb7b91623e0c)\n\n\n## Description\nSpring Security is vulnerable to privilege escalation due to a failure to correctly save security context information. An attacker who is allowed to use elevated privileges in a small portion of a program could extend those privileges to the entire program by sending maliciously crafted requests to the application.\n\nIt should be noted that the vulnerability is not present by default, and must be programmed in by an application developer.\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [CVE-2021-22112](https://openhub.net/vulnerabilities/bdsa/CVE-2021-22112) - Third-party component usage\n\n\n\n## Solution\nFixed in:\n* [**5.4.4**](https://github.com/spring-projects/spring-security/releases/tag/5.4.4) by [this](https://github.com/spring-projects/spring-security/commit/c72a6fac04853912a4b7caad5f0500f2aace5a79) commit.\n* [**5.3.8**](https://github.com/spring-projects/spring-security/releases/tag/5.3.8.RELEASE) by [this](https://github.com/spring-projects/spring-security/commit/38e9e8ca52ddc4bdd272083563a657d5e37ea1e8) commit.\n* [**5.2.9**](https://github.com/spring-projects/spring-security/releases/tag/5.2.9.RELEASE) by [this](https://github.com/spring-projects/spring-security/commit/7cab7b06c51ea885dd0d07ff26b135dd3afce1d1) commit.\n\nThe latest stable releases are available [here](https://github.com/spring-projects/spring-security/releases).\n\n\n\n\n\n## References\n* Common Weakness Enumeration: [CWE-265](https://cwe.mitre.org/data/definitions/265.html)\n\n","text":"Spring Security is vulnerable to privilege escalation due to a failure to correctly save security context information. An attacker who is allowed to use elevated privileges in a small portion of a program could extend those privileges to the entire program by sending maliciously crafted requests to the application.\n\nIt should be noted that the vulnerability is not present by default, and must be programmed in by an application developer."},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","direct_dependency","patch_available","external/cwe/cwe-265"]},"defaultConfiguration":{"level":"warning"}},{"id":"BDSA-2021-2310 spring-security-test 4.1.3.RELEASE: org.springframework.security","shortDescription":{"text":"Direct Dependency: spring-security-test 4.1.3.RELEASE (BDSA-2021-2310)"},"fullDescription":{"text":"Spring Security contains an uncontrolled resource consumption vulnerability. Attackers could exploit this to create an `OutOfMemory` error and exhaust  system resources, triggering a denial-of-service (DoS) condition."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| spring-security-test 4.1.3.RELEASE  | 4.2.20  | 6.2.1 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/4b85e797-3439-4801-be45-d2df651f2298?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=d80c013b-7862-4ea8-83e5-eb7b91623e0c)\n\n\n## Description\nSpring Security contains an uncontrolled resource consumption vulnerability. Attackers could exploit this to create an `OutOfMemory` error and exhaust  system resources, triggering a denial-of-service (DoS) condition.\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [BDSA-2021-2310](https://openhub.net/vulnerabilities/bdsa/BDSA-2021-2310) - Uncontrolled Resource Consumption\n\n\n\n## Solution\nFixed in:\n* **[5.5.1](https://github.com/spring-projects/spring-security/releases/tag/5.5.1)**\n* **[5.4.7](https://github.com/spring-projects/spring-security/releases/tag/5.4.7)**\n* **[5.3.10](https://github.com/spring-projects/spring-security/releases/tag/5.3.10.RELEASE)**\n* **[5.2.11](https://github.com/spring-projects/spring-security/releases/tag/5.2.11.RELEASE)**\n\nThe latest stable releases are also available [here](https://github.com/spring-projects/spring-security/releases).\n\n\n\n\n\n## References\n* Common Weakness Enumeration: [CWE-400](https://cwe.mitre.org/data/definitions/400.html)\n\n","text":"Spring Security contains an uncontrolled resource consumption vulnerability. Attackers could exploit this to create an `OutOfMemory` error and exhaust  system resources, triggering a denial-of-service (DoS) condition."},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","direct_dependency","patch_available","external/cwe/cwe-400"]},"defaultConfiguration":{"level":"warning"}},{"id":"CVE-2022-22976 spring-security-test 4.1.3.RELEASE: org.springframework.security","shortDescription":{"text":"Direct Dependency: spring-security-test 4.1.3.RELEASE (CVE-2022-22976)"},"fullDescription":{"text":"Spring Security is vulnerable to the weakening of bcrypt-generated password hashes due to an integer overflow. An attacker that is able to obtain weak password hashes that have been produced by a vulnerable application could potentially retrieve the plaintext password. It should be noted that the `BCryptPasswordEncoder` class must have been configured to use the maximum work factor (31) in order for the vulnerability to manifest. This is a non-default value."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| spring-security-test 4.1.3.RELEASE  | 4.2.20  | 6.2.1 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/4b85e797-3439-4801-be45-d2df651f2298?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=d80c013b-7862-4ea8-83e5-eb7b91623e0c)\n\n\n## Description\nSpring Security is vulnerable to the weakening of bcrypt-generated password hashes due to an integer overflow. An attacker that is able to obtain weak password hashes that have been produced by a vulnerable application could potentially retrieve the plaintext password. It should be noted that the `BCryptPasswordEncoder` class must have been configured to use the maximum work factor (31) in order for the vulnerability to manifest. This is a non-default value.\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [CVE-2022-22976](https://openhub.net/vulnerabilities/bdsa/CVE-2022-22976) - Integer Overflow / Underflow\n\n\n\n## Solution\nFixed in versions:\n* [**5.7.0**](https://github.com/spring-projects/spring-security/releases/tag/5.7.0)\n* [**5.6.4**](https://github.com/spring-projects/spring-security/releases/tag/5.6.4)\n* [**5.5.7**](https://github.com/spring-projects/spring-security/releases/tag/5.5.7)\n\nThe latest stable releases can be found [here](https://github.com/spring-projects/spring-security/releases).\n\n## Workaround\nThe vendor has stated [here](https://tanzu.vmware.com/security/cve-2022-22976) that the following workaround can be implemented:\n\n\u003e Update your BCryptPasswordEncoder to use a lower number of rounds.\n\n\n\n## References\n* Common Weakness Enumeration: [CWE-190](https://cwe.mitre.org/data/definitions/190.html)\n\n","text":"Spring Security is vulnerable to the weakening of bcrypt-generated password hashes due to an integer overflow. An attacker that is able to obtain weak password hashes that have been produced by a vulnerable application could potentially retrieve the plaintext password. It should be noted that the `BCryptPasswordEncoder` class must have been configured to use the maximum work factor (31) in order for the vulnerability to manifest. This is a non-default value."},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","direct_dependency","patch_available","external/cwe/cwe-190"]},"defaultConfiguration":{"level":"warning"}},{"id":"CVE-2018-1199 spring-security-test 4.1.3.RELEASE: org.springframework.security","shortDescription":{"text":"Direct Dependency: spring-security-test 4.1.3.RELEASE (CVE-2018-1199)"},"fullDescription":{"text":"Spring Security is vulnerable to a remote attacker supplying path name components with different character encodings that bypass the security restraints of Spring MVC static resource URLs."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| spring-security-test 4.1.3.RELEASE  | 4.2.20  | 6.2.1 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/4b85e797-3439-4801-be45-d2df651f2298?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=d80c013b-7862-4ea8-83e5-eb7b91623e0c)\n\n\n## Description\nSpring Security is vulnerable to a remote attacker supplying path name components with different character encodings that bypass the security restraints of Spring MVC static resource URLs.\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [CVE-2018-1199](https://openhub.net/vulnerabilities/bdsa/CVE-2018-1199) - Improper Neutralization of Substitution Characters\n\n\n\n## Solution\n* Fixed in Spring Security [**5.0.1**](https://projects.spring.io/spring-security/) by [this](https://github.com/spring-projects/spring-security/commit/0eef5b4b425ab42b9fa0fde1a3f36a37b92558f2) commit..\n* Fixed in Spring Security [**4.2.4**](https://projects.spring.io/spring-security/) by [this](https://github.com/spring-projects/spring-security/commit/cb8041ba67635edafcc934498ef82707157fd22a) commit..\n* Fixed in Spring Security [**4.1.5**](https://projects.spring.io/spring-security/) by [this](https://github.com/spring-projects/spring-security/commit/65da28e4bf62f58fb130ba727cbbd621b44a36d1) commit..  \n\n* Fixed in Spring Framework [**5.0.3**](https://projects.spring.io/spring-framework/).\n* Fixed in Spring Framework [**4.3.14**](https://projects.spring.io/spring-framework/).\n\n\n\n\n\n## References\n* Common Weakness Enumeration: [CWE-153](https://cwe.mitre.org/data/definitions/153.html)\n\n","text":"Spring Security is vulnerable to a remote attacker supplying path name components with different character encodings that bypass the security restraints of Spring MVC static resource URLs."},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","direct_dependency","patch_available","external/cwe/cwe-153"]},"defaultConfiguration":{"level":"warning"}},{"id":"CVE-2020-5408 spring-security-test 4.1.3.RELEASE: org.springframework.security","shortDescription":{"text":"Direct Dependency: spring-security-test 4.1.3.RELEASE (CVE-2020-5408)"},"fullDescription":{"text":"Spring Security versions 5.3.x prior to 5.3.2, 5.2.x prior to 5.2.4, 5.1.x prior to 5.1.10, 5.0.x prior to 5.0.16 and 4.2.x prior to 4.2.16 use a fixed null initialization vector with CBC Mode in the implementation of the queryable text encryptor. A malicious user with access to the data that has been encrypted using such an encryptor may be able to derive the unencrypted values using a dictionary attack."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| spring-security-test 4.1.3.RELEASE  | 4.2.20  | 6.2.1 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/4b85e797-3439-4801-be45-d2df651f2298?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=d80c013b-7862-4ea8-83e5-eb7b91623e0c)\n\n\n## Description\nSpring Security versions 5.3.x prior to 5.3.2, 5.2.x prior to 5.2.4, 5.1.x prior to 5.1.10, 5.0.x prior to 5.0.16 and 4.2.x prior to 4.2.16 use a fixed null initialization vector with CBC Mode in the implementation of the queryable text encryptor. A malicious user with access to the data that has been encrypted using such an encryptor may be able to derive the unencrypted values using a dictionary attack.\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [CVE-2020-5408](https://openhub.net/vulnerabilities/bdsa/CVE-2020-5408) - Use of Insufficiently Random Values\n\n\n\n\n\n\n\n\n\n## References\n* Common Weakness Enumeration: [CWE-330](https://cwe.mitre.org/data/definitions/330.html)\n\n","text":"Spring Security versions 5.3.x prior to 5.3.2, 5.2.x prior to 5.2.4, 5.1.x prior to 5.1.10, 5.0.x prior to 5.0.16 and 4.2.x prior to 4.2.16 use a fixed null initialization vector with CBC Mode in the implementation of the queryable text encryptor. A malicious user with access to the data that has been encrypted using such an encryptor may be able to derive the unencrypted values using a dictionary attack."},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","direct_dependency","patch_available","external/cwe/cwe-330"]},"defaultConfiguration":{"level":"warning"}},{"id":"BDSA-2021-3401 logback-core 1.2.3: spring-boot-starter-test 2.2.2.RELEASE: ch.qos.logback","shortDescription":{"text":"Transitive Dependency: logback-core 1.2.3 from spring-boot-starter-test 2.2.2.RELEASE (BDSA-2021-3401)"},"fullDescription":{"text":"logback does not verify the SSL hostname as part of the certificate verification process. A remote attacker could leverage this to perform man-in-the-middle (MitM) attacks against applications using logback."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| logback-core 1.2.3  | 1.4.11  | 1.4.11 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/7e1ae58f-8e7c-4250-8b78-a19fee025d36?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=6ca9663c-41d4-44c0-8d1e-b1b12745bdc5)\n\n\n## Description\nlogback does not verify the SSL hostname as part of the certificate verification process. A remote attacker could leverage this to perform man-in-the-middle (MitM) attacks against applications using logback.\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [BDSA-2021-3401](https://openhub.net/vulnerabilities/bdsa/BDSA-2021-3401) - Improper Validation of Certificate with Host Mismatch\n\n\n\n## Solution\nFixed in [**1.2.7**](https://github.com/qos-ch/logback/releases/tag/v_1.2.7) by [this](https://github.com/qos-ch/logback/commit/626c7733c188) commit.\n\nThe latest releases can be found [here](https://github.com/qos-ch/logback/tags).\n\n\n\n## Dependency tree\n- org.owasp.webgoat.lesson:http-basics:v8.1.0:-maven\n    - org.springframework.boot:spring-boot-starter-test:2.2.2.RELEASE\n        - org.springframework.boot:spring-boot-starter:2.2.2.RELEASE\n            - org.springframework.boot:spring-boot-starter-logging:2.2.2.RELEASE\n                - ch.qos.logback:logback-classic:1.2.3\n                    - ch.qos.logback:logback-core:1.2.3\n\n\n## References\n* Common Weakness Enumeration: [CWE-297](https://cwe.mitre.org/data/definitions/297.html)\n\n","text":"logback does not verify the SSL hostname as part of the certificate verification process. A remote attacker could leverage this to perform man-in-the-middle (MitM) attacks against applications using logback."},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-297"]},"defaultConfiguration":{"level":"warning"}},{"id":"CVE-2021-42550 logback-core 1.2.3: spring-boot-starter-test 2.2.2.RELEASE: ch.qos.logback","shortDescription":{"text":"Transitive Dependency: logback-core 1.2.3 from spring-boot-starter-test 2.2.2.RELEASE (CVE-2021-42550)"},"fullDescription":{"text":"Logback is vulnerable to remote code execution (RCE) due to missing restrictions on JNDI locations provided in the configuration file. An attacker with an access to `logback.xml` configuration file could provide a JNDI location that would load and execute malicious code from an LDAP server.\n\n**Note:** In addition to high privileges required to access `logback.xml`, successful exploitation requires reloading poisoned configuration data. This can be achieved by an application restart or `scan=\"true\"` set prior to the attack."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| logback-core 1.2.3  | 1.4.11  | 1.4.11 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/7e1ae58f-8e7c-4250-8b78-a19fee025d36?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=6ca9663c-41d4-44c0-8d1e-b1b12745bdc5)\n\n\n## Description\nLogback is vulnerable to remote code execution (RCE) due to missing restrictions on JNDI locations provided in the configuration file. An attacker with an access to `logback.xml` configuration file could provide a JNDI location that would load and execute malicious code from an LDAP server.\n\n**Note:** In addition to high privileges required to access `logback.xml`, successful exploitation requires reloading poisoned configuration data. This can be achieved by an application restart or `scan=\"true\"` set prior to the attack.\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [CVE-2021-42550](https://openhub.net/vulnerabilities/bdsa/CVE-2021-42550) - Insecure Object Deserialization\n\n\n\n## Solution\nFixed in [**1.2.9**](https://github.com/qos-ch/logback/releases/tag/v_1.2.9) by the following commits:\n* [Commit 1](https://github.com/qos-ch/logback/commit/21d772f2bc2ed780b01b4fe108df7e29707763f1)\n* [Commit 2](https://github.com/qos-ch/logback/commit/54e81d74a9304a188c62a8110d4d393ccad5cbc5)\n* [Commit 3](https://github.com/qos-ch/logback/commit/3b9cd0efe0b3390026a04a6092aa03e433ddd330)\n\nFixed in [**1.3.0-alpha11**](https://github.com/qos-ch/logback/releases/tag/v_1.3.0-alpha11) by the following commits:\n* [Commit 1](https://github.com/qos-ch/logback/commit/ef4fc4186b74b45ce80d86833820106ff27edd42)\n* [Commit 2](https://github.com/qos-ch/logback/commit/87291079a1de9369ac67e20dc70a8fdc7cc4359c)\n* [Commit 3](https://github.com/qos-ch/logback/commit/8fb44ca67e6ab8d89bb15ec6cb75075921106f38)\n* [Commit 4](https://github.com/qos-ch/logback/commit/c43bd30e1092b89bb91f5fb6a28310956b3bac61)\n\n**Note**: As an extra precaution, in addition to upgrading to logback version **1.2.9**, the vendor also recommends users to set their logback configuration files as read-only.\n\nThe latest stable releases can be found [here](https://github.com/qos-ch/logback/tags).\n\n\n\n## Dependency tree\n- org.owasp.webgoat.lesson:http-basics:v8.1.0:-maven\n    - org.springframework.boot:spring-boot-starter-test:2.2.2.RELEASE\n        - org.springframework.boot:spring-boot-starter:2.2.2.RELEASE\n            - org.springframework.boot:spring-boot-starter-logging:2.2.2.RELEASE\n                - ch.qos.logback:logback-classic:1.2.3\n                    - ch.qos.logback:logback-core:1.2.3\n\n\n## References\n* Common Weakness Enumeration: [CWE-502](https://cwe.mitre.org/data/definitions/502.html)\n* Common Weakness Enumeration: [CWE-829](https://cwe.mitre.org/data/definitions/829.html)\n\n","text":"Logback is vulnerable to remote code execution (RCE) due to missing restrictions on JNDI locations provided in the configuration file. An attacker with an access to `logback.xml` configuration file could provide a JNDI location that would load and execute malicious code from an LDAP server.\n\n**Note:** In addition to high privileges required to access `logback.xml`, successful exploitation requires reloading poisoned configuration data. This can be achieved by an application restart or `scan=\"true\"` set prior to the attack."},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-502","external/cwe/cwe-829"]},"defaultConfiguration":{"level":"warning"}},{"id":"CVE-2023-6378 logback-core 1.2.3: spring-boot-starter-test 2.2.2.RELEASE: ch.qos.logback","shortDescription":{"text":"Transitive Dependency: logback-core 1.2.3 from spring-boot-starter-test 2.2.2.RELEASE (CVE-2023-6378)"},"fullDescription":{"text":"Logback contains a denial-of-service (DoS) vulnerability. An attacker could exploit this issue by connecting to a receiver and sending maliciously crafted data, which could in turn allow them to slow the logging of events or crash the application.\n\nSuccessful exploitation of this vulnerability requires that logback-receiver component is enabled and also reachable by the attacker."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| logback-core 1.2.3  | 1.4.11  | 1.4.11 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/7e1ae58f-8e7c-4250-8b78-a19fee025d36?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=6ca9663c-41d4-44c0-8d1e-b1b12745bdc5)\n\n\n## Description\nLogback contains a denial-of-service (DoS) vulnerability. An attacker could exploit this issue by connecting to a receiver and sending maliciously crafted data, which could in turn allow them to slow the logging of events or crash the application.\n\nSuccessful exploitation of this vulnerability requires that logback-receiver component is enabled and also reachable by the attacker.\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [CVE-2023-6378](https://openhub.net/vulnerabilities/bdsa/CVE-2023-6378) - Uncontrolled Resource Consumption\n\n\n\n## Solution\nFixed in versions:\n* [**1.2.13**](https://github.com/qos-ch/logback/releases/tag/v_1.2.13) by [this](https://github.com/qos-ch/logback/commit/bb095154be011267b64e37a1d401546e7cc2b7c3) commit.\n* [**1.3.14**](https://github.com/qos-ch/logback/releases/tag/v_1.3.14) by [this](https://github.com/qos-ch/logback/commit/b8eac23a9de9e05fb6d51160b3f46acd91af9731) commit and [this](https://github.com/qos-ch/logback/commit/7018a3609c7bcc9dc7bf5903509901a986e5f578) commit.\n* [**1.4.14**](https://github.com/qos-ch/logback/releases/tag/v_1.4.14) by [this](https://github.com/qos-ch/logback/commit/9c782b45be4abdafb7e17481e24e7354c2acd1eb) commit and [this](https://github.com/qos-ch/logback/commit/7018a3609c7bcc9dc7bf5903509901a986e5f578) commit.\n\nThe latest stable releases can be found [here](https://github.com/qos-ch/logback/tags).\n\n\n\n## Dependency tree\n- org.owasp.webgoat.lesson:http-basics:v8.1.0:-maven\n    - org.springframework.boot:spring-boot-starter-test:2.2.2.RELEASE\n        - org.springframework.boot:spring-boot-starter:2.2.2.RELEASE\n            - org.springframework.boot:spring-boot-starter-logging:2.2.2.RELEASE\n                - ch.qos.logback:logback-classic:1.2.3\n                    - ch.qos.logback:logback-core:1.2.3\n\n\n## References\n* Common Weakness Enumeration: [CWE-400](https://cwe.mitre.org/data/definitions/400.html)\n\n","text":"Logback contains a denial-of-service (DoS) vulnerability. An attacker could exploit this issue by connecting to a receiver and sending maliciously crafted data, which could in turn allow them to slow the logging of events or crash the application.\n\nSuccessful exploitation of this vulnerability requires that logback-receiver component is enabled and also reachable by the attacker."},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-400"]},"defaultConfiguration":{"level":"warning"}},{"id":"BDSA-2023-3341 logback-core 1.2.3: spring-boot-starter-test 2.2.2.RELEASE: ch.qos.logback","shortDescription":{"text":"Transitive Dependency: logback-core 1.2.3 from spring-boot-starter-test 2.2.2.RELEASE (BDSA-2023-3341)"},"fullDescription":{"text":"Logback contains a denial-of-service (DoS) vulnerability. An attacker could exploit this issue by connecting to a receiver and sending maliciously crafted data, which could in turn allow them to slow the logging of events or crash the application.\n\nSuccessful exploitation of this vulnerability requires that logback-receiver component is enabled and also reachable by the attacker."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| logback-core 1.2.3  | 1.4.11  | 1.4.11 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/7e1ae58f-8e7c-4250-8b78-a19fee025d36?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=6ca9663c-41d4-44c0-8d1e-b1b12745bdc5)\n\n\n## Description\nLogback contains a denial-of-service (DoS) vulnerability. An attacker could exploit this issue by connecting to a receiver and sending maliciously crafted data, which could in turn allow them to slow the logging of events or crash the application.\n\nSuccessful exploitation of this vulnerability requires that logback-receiver component is enabled and also reachable by the attacker.\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [BDSA-2023-3341](https://openhub.net/vulnerabilities/bdsa/BDSA-2023-3341) - Uncontrolled Resource Consumption\n\n\n\n## Solution\nFixed in versions:\n* [**1.2.13**](https://github.com/qos-ch/logback/releases/tag/v_1.2.13) by [this](https://github.com/qos-ch/logback/commit/bb095154be011267b64e37a1d401546e7cc2b7c3) commit.\n* [**1.3.14**](https://github.com/qos-ch/logback/releases/tag/v_1.3.14) by [this](https://github.com/qos-ch/logback/commit/b8eac23a9de9e05fb6d51160b3f46acd91af9731) commit and [this](https://github.com/qos-ch/logback/commit/7018a3609c7bcc9dc7bf5903509901a986e5f578) commit.\n* [**1.4.14**](https://github.com/qos-ch/logback/releases/tag/v_1.4.14) by [this](https://github.com/qos-ch/logback/commit/9c782b45be4abdafb7e17481e24e7354c2acd1eb) commit and [this](https://github.com/qos-ch/logback/commit/7018a3609c7bcc9dc7bf5903509901a986e5f578) commit.\n\nThe latest stable releases can be found [here](https://github.com/qos-ch/logback/tags).\n\n\n\n## Dependency tree\n- org.owasp.webgoat.lesson:http-basics:v8.1.0:-maven\n    - org.springframework.boot:spring-boot-starter-test:2.2.2.RELEASE\n        - org.springframework.boot:spring-boot-starter:2.2.2.RELEASE\n            - org.springframework.boot:spring-boot-starter-logging:2.2.2.RELEASE\n                - ch.qos.logback:logback-classic:1.2.3\n                    - ch.qos.logback:logback-core:1.2.3\n\n\n## References\n* Common Weakness Enumeration: [CWE-400](https://cwe.mitre.org/data/definitions/400.html)\n\n","text":"Logback contains a denial-of-service (DoS) vulnerability. An attacker could exploit this issue by connecting to a receiver and sending maliciously crafted data, which could in turn allow them to slow the logging of events or crash the application.\n\nSuccessful exploitation of this vulnerability requires that logback-receiver component is enabled and also reachable by the attacker."},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-400"]},"defaultConfiguration":{"level":"warning"}},{"id":"BDSA-2021-3731 spring-boot-starter-json 2.2.2.RELEASE: spring-boot-starter-web 2.2.2.RELEASE: org.springframework.boot","shortDescription":{"text":"Transitive Dependency: spring-boot-starter-json 2.2.2.RELEASE from spring-boot-starter-web 2.2.2.RELEASE (BDSA-2021-3731)"},"fullDescription":{"text":"Apache Log4j, as used in many popular services, is vulnerable to improperly allowing lightweight directory access protocol (LDAP) access via Java naming and directory interface (JNDI). A remote attacker able to supply the end application with specially crafted input that is then processed by the Log4j subcomponent could cause the execution of arbitrary Java code.\n\n**Note** \n\n- log4j-api packages by themselves do not contain the vulnerable functionality and are therefore unaffected. log4j-core packages and the upstream overarching source repository are affected.\n\n- A previously suggested mitigation of setting environment variable `LOG4J_FORMAT_MSG_NO_LOOKUPS=true` is not recommended. This mitigation has been proven inadequate against this vulnerability. \n\n- This vulnerability is partially fixed in [**2.15.0-rc2**](https://github.com/apache/logging-log4j2/releases/tag/log4j-2.15.0-rc2) by [this](https://github.com/apache/logging-log4j2/commit/001aaada7dab82c3c09cde5f8e14245dc9d8b454) commit and [this](https://github.com/apache/logging-log4j2/commit/bac0d8a35c7e354a0d3f706569116dff6c6bd658) commit. These fixes were deemed incomplete. See BDSA-2021-3779 (CVE-2021-45046) for more details.\n\nThis vulnerability is listed as exploitable by the Cybersecurity \u0026 Infrastructure Security Agency in their [Known Exploited Vulnerabilities Catalog](https://www.cisa.gov/known-exploited-vulnerabilities-catalog)."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| spring-boot-starter-json 2.2.2.RELEASE  | 2.7.18  | 3.2.1 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/48431389-4a2f-44ed-8597-55184ffc0e88?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=ee1b331d-05e0-4bd1-b6ef-727c3b98e324)\n\n\n## Description\nApache Log4j, as used in many popular services, is vulnerable to improperly allowing lightweight directory access protocol (LDAP) access via Java naming and directory interface (JNDI). A remote attacker able to supply the end application with specially crafted input that is then processed by the Log4j subcomponent could cause the execution of arbitrary Java code.\n\n**Note** \n\n- log4j-api packages by themselves do not contain the vulnerable functionality and are therefore unaffected. log4j-core packages and the upstream overarching source repository are affected.\n\n- A previously suggested mitigation of setting environment variable `LOG4J_FORMAT_MSG_NO_LOOKUPS=true` is not recommended. This mitigation has been proven inadequate against this vulnerability. \n\n- This vulnerability is partially fixed in [**2.15.0-rc2**](https://github.com/apache/logging-log4j2/releases/tag/log4j-2.15.0-rc2) by [this](https://github.com/apache/logging-log4j2/commit/001aaada7dab82c3c09cde5f8e14245dc9d8b454) commit and [this](https://github.com/apache/logging-log4j2/commit/bac0d8a35c7e354a0d3f706569116dff6c6bd658) commit. These fixes were deemed incomplete. See BDSA-2021-3779 (CVE-2021-45046) for more details.\n\nThis vulnerability is listed as exploitable by the Cybersecurity \u0026 Infrastructure Security Agency in their [Known Exploited Vulnerabilities Catalog](https://www.cisa.gov/known-exploited-vulnerabilities-catalog).\n\n## Vulnerabilities(BDSA,CVE)\n:red_circle: [BDSA-2021-3731](https://openhub.net/vulnerabilities/bdsa/BDSA-2021-3731) - Insecure Object Deserialization\n\n\n\n## Solution\nFixed in versions:\n*  [**2.16.0-rc1**](https://github.com/apache/logging-log4j2/releases/tag/log4j-2.16.0-rc1) by [this](https://github.com/apache/logging-log4j2/commit/27972043b76c9645476f561c5adc483dec6d3f5d) commit.\n*  [**2.12.2-rc1**](https://github.com/apache/logging-log4j2/releases/tag/log4j-2.12.2-rc1) by [this](https://github.com/apache/logging-log4j2/commit/f819c83804152cb6ed94cb408302e36b21b65053) commit and [this](https://github.com/apache/logging-log4j2/commit/70edc233343815d5efa043b54294a6fb065aa1c5) commit.\n*   [**2.3.1-rc1**](https://github.com/apache/logging-log4j2/releases/tag/log4j-2.3.1-rc1) by [this](https://github.com/apache/logging-log4j2/commit/be848dacbac6df30c4f32b2852e24446033ecf79) commit and [this](https://github.com/apache/logging-log4j2/commit/f6564bb993d547d0a371b75d869042c334bf57f0) commit.\n\nThe latest releases can be found [here](https://github.com/apache/logging-log4j2/tags).\n\nNOTE: It is recommended to upgrade to version  [**2.17.0**](https://downloads.apache.org/logging/log4j/2.17.0/). This recommendation is due to related vulnerabilities (BDSA-2021-3779, CVE-2021-45046) affecting the version that this vulnerability is fixed in.\n\n## Workaround\nThe vendor states that:\n\n\u003e This issue can be mitigated in prior releases (\u003c**2.16.0**) by removing the JndiLookup class from the classpath (example: `zip -q -d log4j-core-*.jar org/apache/logging/log4j/core/lookup/JndiLookup.class`).\n\n## Dependency tree\n- org.owasp.webgoat:webgoat-container:v8.1.0:-maven\n    - org.springframework.boot:spring-boot-starter-web:2.2.2.RELEASE\n        - org.springframework.boot:spring-boot-starter-json:2.2.2.RELEASE\n\n\n## References\n* Common Weakness Enumeration: [CWE-502](https://cwe.mitre.org/data/definitions/502.html)\n\n","text":"Apache Log4j, as used in many popular services, is vulnerable to improperly allowing lightweight directory access protocol (LDAP) access via Java naming and directory interface (JNDI). A remote attacker able to supply the end application with specially crafted input that is then processed by the Log4j subcomponent could cause the execution of arbitrary Java code.\n\n**Note** \n\n- log4j-api packages by themselves do not contain the vulnerable functionality and are therefore unaffected. log4j-core packages and the upstream overarching source repository are affected.\n\n- A previously suggested mitigation of setting environment variable `LOG4J_FORMAT_MSG_NO_LOOKUPS=true` is not recommended. This mitigation has been proven inadequate against this vulnerability. \n\n- This vulnerability is partially fixed in [**2.15.0-rc2**](https://github.com/apache/logging-log4j2/releases/tag/log4j-2.15.0-rc2) by [this](https://github.com/apache/logging-log4j2/commit/001aaada7dab82c3c09cde5f8e14245dc9d8b454) commit and [this](https://github.com/apache/logging-log4j2/commit/bac0d8a35c7e354a0d3f706569116dff6c6bd658) commit. These fixes were deemed incomplete. See BDSA-2021-3779 (CVE-2021-45046) for more details.\n\nThis vulnerability is listed as exploitable by the Cybersecurity \u0026 Infrastructure Security Agency in their [Known Exploited Vulnerabilities Catalog](https://www.cisa.gov/known-exploited-vulnerabilities-catalog)."},"properties":{"security-severity":"9.1","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-502"]},"defaultConfiguration":{"level":"error"}},{"id":"CVE-2022-22965 spring-boot-starter-json 2.2.2.RELEASE: spring-boot-starter-web 2.2.2.RELEASE: org.springframework.boot","shortDescription":{"text":"Transitive Dependency: spring-boot-starter-json 2.2.2.RELEASE from spring-boot-starter-web 2.2.2.RELEASE (CVE-2022-22965)"},"fullDescription":{"text":"Spring Framework is vulnerable to a flaw in the access restrictions to the security sensitive `ClassLoader` property. The restrictions can be bypassed through alternative paths available with Java9 and later. An attacker can leverage this vulnerability to cause remote code execution (RCE).\n\n**Note** this issue exists because the restrictions that were introduced to prevent exploitation of BDSA-2010-0001 (CVE-2010-1622) can be bypassed on platforms where Java9 and later are in use.\n\nThis vulnerability is listed as exploitable by the Cybersecurity \u0026 Infrastructure Security Agency in their [Known Exploited Vulnerabilities Catalog](https://www.cisa.gov/known-exploited-vulnerabilities-catalog)."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| spring-boot-starter-json 2.2.2.RELEASE  | 2.7.18  | 3.2.1 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/48431389-4a2f-44ed-8597-55184ffc0e88?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=ee1b331d-05e0-4bd1-b6ef-727c3b98e324)\n\n\n## Description\nSpring Framework is vulnerable to a flaw in the access restrictions to the security sensitive `ClassLoader` property. The restrictions can be bypassed through alternative paths available with Java9 and later. An attacker can leverage this vulnerability to cause remote code execution (RCE).\n\n**Note** this issue exists because the restrictions that were introduced to prevent exploitation of BDSA-2010-0001 (CVE-2010-1622) can be bypassed on platforms where Java9 and later are in use.\n\nThis vulnerability is listed as exploitable by the Cybersecurity \u0026 Infrastructure Security Agency in their [Known Exploited Vulnerabilities Catalog](https://www.cisa.gov/known-exploited-vulnerabilities-catalog).\n\n## Vulnerabilities(BDSA,CVE)\n:red_circle: [CVE-2022-22965](https://openhub.net/vulnerabilities/bdsa/CVE-2022-22965) - Incomplete List of Disallowed Inputs\n\n\n\n## Solution\nFixed in [**5.3.18**](https://github.com/spring-projects/spring-framework/releases/tag/v5.3.18) by [this](https://github.com/spring-projects/spring-framework/commit/002546b3e4b8d791ea6acccb81eb3168f51abb15) commit and  [**5.2.20**](https://github.com/spring-projects/spring-framework/releases/tag/v5.2.20.RELEASE) by [this](https://github.com/spring-projects/spring-framework/commit/996f701a1916d10202c1d0d281f06ab1f2e1117e) commit .\n\nThe latest releases can be found [here](https://github.com/spring-projects/spring-framework/tags).\n\n## Workaround\nAn official workaround for the issue has been outlined [here](https://spring.io/blog/2022/03/31/spring-framework-rce-early-announcement).\n\n## Dependency tree\n- org.owasp.webgoat:webgoat-container:v8.1.0:-maven\n    - org.springframework.boot:spring-boot-starter-web:2.2.2.RELEASE\n        - org.springframework.boot:spring-boot-starter-json:2.2.2.RELEASE\n\n\n## References\n* Common Weakness Enumeration: [CWE-184](https://cwe.mitre.org/data/definitions/184.html)\n* Common Weakness Enumeration: [CWE-749](https://cwe.mitre.org/data/definitions/749.html)\n\n","text":"Spring Framework is vulnerable to a flaw in the access restrictions to the security sensitive `ClassLoader` property. The restrictions can be bypassed through alternative paths available with Java9 and later. An attacker can leverage this vulnerability to cause remote code execution (RCE).\n\n**Note** this issue exists because the restrictions that were introduced to prevent exploitation of BDSA-2010-0001 (CVE-2010-1622) can be bypassed on platforms where Java9 and later are in use.\n\nThis vulnerability is listed as exploitable by the Cybersecurity \u0026 Infrastructure Security Agency in their [Known Exploited Vulnerabilities Catalog](https://www.cisa.gov/known-exploited-vulnerabilities-catalog)."},"properties":{"security-severity":"9.1","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-184","external/cwe/cwe-749"]},"defaultConfiguration":{"level":"error"}},{"id":"CVE-2023-20873 spring-boot-starter-json 2.2.2.RELEASE: spring-boot-starter-web 2.2.2.RELEASE: org.springframework.boot","shortDescription":{"text":"Transitive Dependency: spring-boot-starter-json 2.2.2.RELEASE from spring-boot-starter-web 2.2.2.RELEASE (CVE-2023-20873)"},"fullDescription":{"text":"Spring framework contains a security bypass vulnerability when `/**` is used as a pattern in Spring Security configuration with the `/cloudfoundryapplication/**` component. The potential for security bypass exists due to the mismatch in pattern matching between Spring Security and Cloud Foundry.\n\n**Note**: The vendor has stated in their [advisory](https://spring.io/security/cve-2023-20873) that this application is not vulnerable if any of the following is true:\n* The application is not deployed to Cloud Foundry.\n* You have disabled Cloud Foundry actuator endpoints with `management.cloudfoundry.enabled` set to `false`.\n* Your application does not have handler mappings that can handle requests to `/cloudfoundryapplication/**`."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| spring-boot-starter-json 2.2.2.RELEASE  | 2.7.18  | 3.2.1 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/48431389-4a2f-44ed-8597-55184ffc0e88?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=ee1b331d-05e0-4bd1-b6ef-727c3b98e324)\n\n\n## Description\nSpring framework contains a security bypass vulnerability when `/**` is used as a pattern in Spring Security configuration with the `/cloudfoundryapplication/**` component. The potential for security bypass exists due to the mismatch in pattern matching between Spring Security and Cloud Foundry.\n\n**Note**: The vendor has stated in their [advisory](https://spring.io/security/cve-2023-20873) that this application is not vulnerable if any of the following is true:\n* The application is not deployed to Cloud Foundry.\n* You have disabled Cloud Foundry actuator endpoints with `management.cloudfoundry.enabled` set to `false`.\n* Your application does not have handler mappings that can handle requests to `/cloudfoundryapplication/**`.\n\n## Vulnerabilities(BDSA,CVE)\n:orange_circle: [CVE-2023-20873](https://openhub.net/vulnerabilities/bdsa/CVE-2023-20873) - Improper Access Control\n\n\n\n## Solution\nFixed in [**3.1.0-RC1**](https://github.com/spring-projects/spring-boot/releases/tag/v3.1.0-RC1), [**3.0.6**](https://github.com/spring-projects/spring-boot/releases/tag/v3.0.6) and [**2.7.11**](https://github.com/spring-projects/spring-boot/releases/tag/v2.7.11)  by [this](https://github.com/spring-projects/spring-boot/commit/3522714c13b47af03bf42e7f2d5994af568cb1a7) commit.\n\nFixed in [**2.6.15**](https://github.com/spring-projects/spring-boot/releases/tag/v2.6.15) and [**2.5.15**](https://github.com/spring-projects/spring-boot/releases/tag/v2.5.15) by [this](https://github.com/spring-projects/spring-boot/commit/307f3c339912466e78fcdac648fff95a4edea573) commit.\n\nThe latest stable releases can be found [here](https://github.com/spring-projects/spring-boot/releases).\n\n## Workaround\nThe vendor has advised the following as a workaround:\n\u003eDisable Cloud Foundry actuator endpoints by setting `management.cloudfoundry.enabled` to `false`.\n\n## Dependency tree\n- org.owasp.webgoat:webgoat-container:v8.1.0:-maven\n    - org.springframework.boot:spring-boot-starter-web:2.2.2.RELEASE\n        - org.springframework.boot:spring-boot-starter-json:2.2.2.RELEASE\n\n\n## References\n* Common Weakness Enumeration: [CWE-284](https://cwe.mitre.org/data/definitions/284.html)\n* Common Weakness Enumeration: [CWE-923](https://cwe.mitre.org/data/definitions/923.html)\n\n","text":"Spring framework contains a security bypass vulnerability when `/**` is used as a pattern in Spring Security configuration with the `/cloudfoundryapplication/**` component. The potential for security bypass exists due to the mismatch in pattern matching between Spring Security and Cloud Foundry.\n\n**Note**: The vendor has stated in their [advisory](https://spring.io/security/cve-2023-20873) that this application is not vulnerable if any of the following is true:\n* The application is not deployed to Cloud Foundry.\n* You have disabled Cloud Foundry actuator endpoints with `management.cloudfoundry.enabled` set to `false`.\n* Your application does not have handler mappings that can handle requests to `/cloudfoundryapplication/**`."},"properties":{"security-severity":"8.9","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-284","external/cwe/cwe-923"]},"defaultConfiguration":{"level":"error"}},{"id":"BDSA-2021-3817 spring-boot-starter-json 2.2.2.RELEASE: spring-boot-starter-web 2.2.2.RELEASE: org.springframework.boot","shortDescription":{"text":"Transitive Dependency: spring-boot-starter-json 2.2.2.RELEASE from spring-boot-starter-web 2.2.2.RELEASE (BDSA-2021-3817)"},"fullDescription":{"text":"Apache log4j is vulnerable to a denial-of-service (DoS) when uncontrolled recursion occurs through a self-referencing lookup.  An attacker can trigger a DoS with malicious input data that generates a recursive lookup  and consequent application crash.\n\nSuccessful attacks require the attacker to have access to Thread Context Map (MDC) input, and for log4j configured with non-default pattern layout with a Context Lookup.\n\nOnly the log4j-core JAR file is impacted by this vulnerability. Applications using only the log4j-api JAR file without the log4j-core JAR file are not impacted.\n\nApache Log4j is the only Logging Services subproject affected by this vulnerability. Other projects like Log4net  are not impacted."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| spring-boot-starter-json 2.2.2.RELEASE  | 2.7.18  | 3.2.1 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/48431389-4a2f-44ed-8597-55184ffc0e88?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=ee1b331d-05e0-4bd1-b6ef-727c3b98e324)\n\n\n## Description\nApache log4j is vulnerable to a denial-of-service (DoS) when uncontrolled recursion occurs through a self-referencing lookup.  An attacker can trigger a DoS with malicious input data that generates a recursive lookup  and consequent application crash.\n\nSuccessful attacks require the attacker to have access to Thread Context Map (MDC) input, and for log4j configured with non-default pattern layout with a Context Lookup.\n\nOnly the log4j-core JAR file is impacted by this vulnerability. Applications using only the log4j-api JAR file without the log4j-core JAR file are not impacted.\n\nApache Log4j is the only Logging Services subproject affected by this vulnerability. Other projects like Log4net  are not impacted.\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [BDSA-2021-3817](https://openhub.net/vulnerabilities/bdsa/BDSA-2021-3817) - Loop with Unreachable Exit Condition ('Infinite Loop')\n\n\n\n## Solution\nFixed in version [**2.17.0**](https://downloads.apache.org/logging/log4j/2.17.0/)  by [this](https://github.com/apache/logging-log4j2/commit/806023265f8c905b2dd1d81fd2458f64b2ea0b5e) commit.\n\nFixed in [**2.12.3-rc1**](https://github.com/apache/logging-log4j2/releases/tag/log4j-2.12.3-rc1) by [this](https://github.com/apache/logging-log4j2/commit/bf7e916df6335713fe2219c7b3b523fb509deabc) commit.\n\nFixed in [**2.3.1-rc1**](https://github.com/apache/logging-log4j2/releases/tag/log4j-2.3.1-rc1) by [this](https://github.com/apache/logging-log4j2/commit/ce6b78d082aae89089cb3ad25cdd46e9ec70a70b) commit.\n\n\nThe latest stable releases can be found [here](https://github.com/apache/logging-log4j2/releases).\n\n## Workaround\nThe vendor advises that  this vulnerability can can be mitigated through one of the following:\n\n* In PatternLayout in the logging configuration, replace Context Lookups like `${ctx:loginId}` or `$${ctx:loginId}` with Thread Context Map patterns `(%X, %mdc, or %MDC)`.\n\n* Alternatively,  remove references in the configuration to Context Lookups like `${ctx:loginId}` or `$${ctx:loginId}` where they originate from sources external to the application such as HTTP headers or user input.\n\n## Dependency tree\n- org.owasp.webgoat:webgoat-container:v8.1.0:-maven\n    - org.springframework.boot:spring-boot-starter-web:2.2.2.RELEASE\n        - org.springframework.boot:spring-boot-starter-json:2.2.2.RELEASE\n\n\n## References\n* Common Weakness Enumeration: [CWE-835](https://cwe.mitre.org/data/definitions/835.html)\n\n","text":"Apache log4j is vulnerable to a denial-of-service (DoS) when uncontrolled recursion occurs through a self-referencing lookup.  An attacker can trigger a DoS with malicious input data that generates a recursive lookup  and consequent application crash.\n\nSuccessful attacks require the attacker to have access to Thread Context Map (MDC) input, and for log4j configured with non-default pattern layout with a Context Lookup.\n\nOnly the log4j-core JAR file is impacted by this vulnerability. Applications using only the log4j-api JAR file without the log4j-core JAR file are not impacted.\n\nApache Log4j is the only Logging Services subproject affected by this vulnerability. Other projects like Log4net  are not impacted."},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-835"]},"defaultConfiguration":{"level":"warning"}},{"id":"BDSA-2021-3887 spring-boot-starter-json 2.2.2.RELEASE: spring-boot-starter-web 2.2.2.RELEASE: org.springframework.boot","shortDescription":{"text":"Transitive Dependency: spring-boot-starter-json 2.2.2.RELEASE from spring-boot-starter-web 2.2.2.RELEASE (BDSA-2021-3887)"},"fullDescription":{"text":"Apache Log4j contains a remote code execution (RCE) vulnerability. This allows an attacker that has permissions to modify the logging configuration files to input a malicious JDBC Appender with a data source referencing a JDNI URI. This can then lead to RCE.\n\n**Note:** This vulnerability impacts log4j-core."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| spring-boot-starter-json 2.2.2.RELEASE  | 2.7.18  | 3.2.1 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/48431389-4a2f-44ed-8597-55184ffc0e88?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=ee1b331d-05e0-4bd1-b6ef-727c3b98e324)\n\n\n## Description\nApache Log4j contains a remote code execution (RCE) vulnerability. This allows an attacker that has permissions to modify the logging configuration files to input a malicious JDBC Appender with a data source referencing a JDNI URI. This can then lead to RCE.\n\n**Note:** This vulnerability impacts log4j-core.\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [BDSA-2021-3887](https://openhub.net/vulnerabilities/bdsa/BDSA-2021-3887) - Weak Input Validation\n\n\n\n## Solution\nFixed in versions:\n\n* [**2.3.2-rc1**](https://github.com/apache/logging-log4j2/releases/tag/log4j-2.3.2-rc1) by [this](https://github.com/apache/logging-log4j2/commit/ae4dc0c1a6389ae895f60451cd87e97e7b9d85c1) commit.\n* [**2.12.4-rc1**](https://github.com/apache/logging-log4j2/releases/tag/log4j-2.12.4-rc1) by [this](https://github.com/apache/logging-log4j2/commit/b3879958cb3b75eb16bf27e970538b6e4e130f1c) commit.\n* [**2.17.1-rc1**](https://github.com/apache/logging-log4j2/releases/tag/log4j-2.17.1-rc1) by [this](https://github.com/apache/logging-log4j2/commit/05db5f9527254632b59aed2a1d78a32c5ab74f16) commit.\n\nThe latest stable releases can be found [here](https://logging.apache.org/log4j/2.x/download.html).\n\n\n\n## Dependency tree\n- org.owasp.webgoat:webgoat-container:v8.1.0:-maven\n    - org.springframework.boot:spring-boot-starter-web:2.2.2.RELEASE\n        - org.springframework.boot:spring-boot-starter-json:2.2.2.RELEASE\n\n\n## References\n* Common Weakness Enumeration: [CWE-20](https://cwe.mitre.org/data/definitions/20.html)\n\n","text":"Apache Log4j contains a remote code execution (RCE) vulnerability. This allows an attacker that has permissions to modify the logging configuration files to input a malicious JDBC Appender with a data source referencing a JDNI URI. This can then lead to RCE.\n\n**Note:** This vulnerability impacts log4j-core."},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-20"]},"defaultConfiguration":{"level":"warning"}},{"id":"CVE-2022-27772 spring-boot-starter-json 2.2.2.RELEASE: spring-boot-starter-web 2.2.2.RELEASE: org.springframework.boot","shortDescription":{"text":"Transitive Dependency: spring-boot-starter-json 2.2.2.RELEASE from spring-boot-starter-web 2.2.2.RELEASE (CVE-2022-27772)"},"fullDescription":{"text":"Spring Boot is vulnerable to privilege escalation due to a race condition which occurs during the creation of a temporary directory. A local attacker could create their own temporary directory by racing against Spring Boot and supply their own configuration files which would allow for the full takeover of the application."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| spring-boot-starter-json 2.2.2.RELEASE  | 2.7.18  | 3.2.1 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/48431389-4a2f-44ed-8597-55184ffc0e88?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=ee1b331d-05e0-4bd1-b6ef-727c3b98e324)\n\n\n## Description\nSpring Boot is vulnerable to privilege escalation due to a race condition which occurs during the creation of a temporary directory. A local attacker could create their own temporary directory by racing against Spring Boot and supply their own configuration files which would allow for the full takeover of the application.\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [CVE-2022-27772](https://openhub.net/vulnerabilities/bdsa/CVE-2022-27772) - Race Condition due to Improper Synchronization\n\n\n\n## Solution\nFixed in [**2.2.11**](https://github.com/spring-projects/spring-boot/releases/tag/v2.2.11.RELEASE) by [this](https://github.com/spring-projects/spring-boot/commit/667ccdae84822072f9ea1a27ed5c77964c71002d) commit.\n\nThe latest stable releases can be found [here](https://github.com/spring-projects/spring-boot/releases).\n\n## Workaround\nAccording to the [Github Security Advisory](https://github.com/JLLeitschuh/security-research/security/advisories/GHSA-cm59-pr5q-cw85), setting the `java.io.tmpdir` system environment variable to a directory that is exclusively owned by the executing user will fix this vulnerability for all operating systems.\n\n## Dependency tree\n- org.owasp.webgoat:webgoat-container:v8.1.0:-maven\n    - org.springframework.boot:spring-boot-starter-web:2.2.2.RELEASE\n        - org.springframework.boot:spring-boot-starter-json:2.2.2.RELEASE\n\n\n## References\n* Common Weakness Enumeration: [CWE-362](https://cwe.mitre.org/data/definitions/362.html)\n* Common Weakness Enumeration: [CWE-379](https://cwe.mitre.org/data/definitions/379.html)\n\n","text":"Spring Boot is vulnerable to privilege escalation due to a race condition which occurs during the creation of a temporary directory. A local attacker could create their own temporary directory by racing against Spring Boot and supply their own configuration files which would allow for the full takeover of the application."},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-362","external/cwe/cwe-379"]},"defaultConfiguration":{"level":"warning"}},{"id":"CVE-2023-20883 spring-boot-starter-json 2.2.2.RELEASE: spring-boot-starter-web 2.2.2.RELEASE: org.springframework.boot","shortDescription":{"text":"Transitive Dependency: spring-boot-starter-json 2.2.2.RELEASE from spring-boot-starter-web 2.2.2.RELEASE (CVE-2023-20883)"},"fullDescription":{"text":"Spring Boot is vulnerable to denial-of-service (DoS) via the welcome page when used to serve an application behind a reverse proxy cache. This will cause users to continuously be served a 404 response, preventing standard application use.\n\n\n**Note:** Spring have provided the following guidance for vulnerable criteria. \nAn application is vulnerable if all of the following are true:\n\n- \"The application has Spring MVC auto-configuration enabled. This is the case by default if Spring MVC is on the classpath.\"\n- \"The application makes use of Spring Boot's welcome page support, either static or templated.\"\n- \"Your application is deployed behind a proxy which caches 404 responses.\"\n\nThe application is not vulnerable if any of the following are true:\n\n- \"Spring MVC auto-configuration is disabled. This is true if `WebMvcAutoConfiguration` is explicitly excluded, if Spring MVC is not on the classpath, or if `spring.main.web-application-type` is set to a value other than `SERVLET`.\"\n- \"The application does not use Spring Boot's welcome page support.\"\n- \"You do not have a proxy which caches 404 responses.\""},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| spring-boot-starter-json 2.2.2.RELEASE  | 2.7.18  | 3.2.1 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/48431389-4a2f-44ed-8597-55184ffc0e88?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=ee1b331d-05e0-4bd1-b6ef-727c3b98e324)\n\n\n## Description\nSpring Boot is vulnerable to denial-of-service (DoS) via the welcome page when used to serve an application behind a reverse proxy cache. This will cause users to continuously be served a 404 response, preventing standard application use.\n\n\n**Note:** Spring have provided the following guidance for vulnerable criteria. \nAn application is vulnerable if all of the following are true:\n\n- \"The application has Spring MVC auto-configuration enabled. This is the case by default if Spring MVC is on the classpath.\"\n- \"The application makes use of Spring Boot's welcome page support, either static or templated.\"\n- \"Your application is deployed behind a proxy which caches 404 responses.\"\n\nThe application is not vulnerable if any of the following are true:\n\n- \"Spring MVC auto-configuration is disabled. This is true if `WebMvcAutoConfiguration` is explicitly excluded, if Spring MVC is not on the classpath, or if `spring.main.web-application-type` is set to a value other than `SERVLET`.\"\n- \"The application does not use Spring Boot's welcome page support.\"\n- \"You do not have a proxy which caches 404 responses.\"\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [CVE-2023-20883](https://openhub.net/vulnerabilities/bdsa/CVE-2023-20883) - Insufficient Verification of Data Authenticity\n\n\n\n## Solution\nFixed in versions\n- [**2.5.15**](https://github.com/spring-projects/spring-boot/releases/tag/v2.5.15) by [this](https://github.com/spring-projects/spring-boot/commit/d7ff379fb8bb2c33319afeb45a343116b59e0ee2) commit,\n- [**2.6.15**](https://github.com/spring-projects/spring-boot/releases/tag/v2.6.15) by [this](https://github.com/spring-projects/spring-boot/commit/d7ff379fb8bb2c33319afeb45a343116b59e0ee2) commit,\n- [**2.7.12**](https://github.com/spring-projects/spring-boot/releases/tag/v2.7.12) by [this](https://github.com/spring-projects/spring-boot/commit/418dd1ba5bdad79b55a043000164bfcbda2acd78) commit,\n- [**3.0.7**](https://github.com/spring-projects/spring-boot/releases/tag/v3.0.7) by [this](https://github.com/spring-projects/spring-boot/commit/418dd1ba5bdad79b55a043000164bfcbda2acd78) commit,\n- [**3.1.0**](https://github.com/spring-projects/spring-boot/releases/tag/v3.1.0) by [this](https://github.com/spring-projects/spring-boot/commit/418dd1ba5bdad79b55a043000164bfcbda2acd78) commit.\n\nThe latest stable releases can be found [here](https://github.com/spring-projects/spring-boot/releases).\n\n## Workaround\nThe vendor has supplied the following workaround:\n\u003e \"configure the reverse proxy not to cache 404 responses and/or not to cache responses to requests to the root (`/`) of the application.\"\n\n## Dependency tree\n- org.owasp.webgoat:webgoat-container:v8.1.0:-maven\n    - org.springframework.boot:spring-boot-starter-web:2.2.2.RELEASE\n        - org.springframework.boot:spring-boot-starter-json:2.2.2.RELEASE\n\n\n## References\n* Common Weakness Enumeration: [CWE-345](https://cwe.mitre.org/data/definitions/345.html)\n\n","text":"Spring Boot is vulnerable to denial-of-service (DoS) via the welcome page when used to serve an application behind a reverse proxy cache. This will cause users to continuously be served a 404 response, preventing standard application use.\n\n\n**Note:** Spring have provided the following guidance for vulnerable criteria. \nAn application is vulnerable if all of the following are true:\n\n- \"The application has Spring MVC auto-configuration enabled. This is the case by default if Spring MVC is on the classpath.\"\n- \"The application makes use of Spring Boot's welcome page support, either static or templated.\"\n- \"Your application is deployed behind a proxy which caches 404 responses.\"\n\nThe application is not vulnerable if any of the following are true:\n\n- \"Spring MVC auto-configuration is disabled. This is true if `WebMvcAutoConfiguration` is explicitly excluded, if Spring MVC is not on the classpath, or if `spring.main.web-application-type` is set to a value other than `SERVLET`.\"\n- \"The application does not use Spring Boot's welcome page support.\"\n- \"You do not have a proxy which caches 404 responses.\""},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-345"]},"defaultConfiguration":{"level":"warning"}},{"id":"CVE-2023-34055 spring-boot-starter-json 2.2.2.RELEASE: spring-boot-starter-web 2.2.2.RELEASE: org.springframework.boot","shortDescription":{"text":"Transitive Dependency: spring-boot-starter-json 2.2.2.RELEASE from spring-boot-starter-web 2.2.2.RELEASE (CVE-2023-34055)"},"fullDescription":{"text":"Spring Boot is vulnerable to denial-of-service (DoS). An unauthenticated user could trigger the vulnerability by providing specially crafted HTTP requests to a web metrics endpoint."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| spring-boot-starter-json 2.2.2.RELEASE  | 2.7.18  | 3.2.1 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/48431389-4a2f-44ed-8597-55184ffc0e88?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=ee1b331d-05e0-4bd1-b6ef-727c3b98e324)\n\n\n## Description\nSpring Boot is vulnerable to denial-of-service (DoS). An unauthenticated user could trigger the vulnerability by providing specially crafted HTTP requests to a web metrics endpoint.\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [CVE-2023-34055](https://openhub.net/vulnerabilities/bdsa/CVE-2023-34055) - Third-party component usage\n\n\n\n## Solution\nFixed in:\n* [**3.1.6**](https://github.com/spring-projects/spring-boot/releases/tag/v3.1.6)\n* [**3.0.13**](https://github.com/spring-projects/spring-boot/releases/tag/v3.0.13)\n* [**2.7.18**](https://github.com/spring-projects/spring-boot/releases/tag/v2.7.18)\n\nThe latest stable releases can be found [here](https://github.com/spring-projects/spring-boot/releases).\n\n## Workaround\nThe vendor notes the following:\n\u003e As a temporary workaround, Spring Boot users can choose to disable web metrics with the following property: `management.metrics.enable.http.server.requests=false`\n\n## Dependency tree\n- org.owasp.webgoat:webgoat-container:v8.1.0:-maven\n    - org.springframework.boot:spring-boot-starter-web:2.2.2.RELEASE\n        - org.springframework.boot:spring-boot-starter-json:2.2.2.RELEASE\n\n\n\n","text":"Spring Boot is vulnerable to denial-of-service (DoS). An unauthenticated user could trigger the vulnerability by providing specially crafted HTTP requests to a web metrics endpoint."},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","transitive_dependency","patch_available"]},"defaultConfiguration":{"level":"warning"}},{"id":"CVE-2020-25649 jackson-databind 2.10.1: wiremock 2.8.0: com.fasterxml.jackson.core","shortDescription":{"text":"Transitive Dependency: jackson-databind 2.10.1 from wiremock 2.8.0 (CVE-2020-25649)"},"fullDescription":{"text":"Jackson Databind is vulnerable to XML external entities (XXE) due to insecure entity expansion in the `DOMDeserializer` component.  An attacker could exploit this vulnerability via a crafted request in order to execute an XML external entities (XXE) attack against the application."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| jackson-databind 2.10.1  | 2.16.1  | 2.16.1 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/17c088b5-5621-41a8-9b16-1928a884f430?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=ce7ad18a-6e02-4565-a51c-4fc2c5bc7c47)\n\n\n## Description\nJackson Databind is vulnerable to XML external entities (XXE) due to insecure entity expansion in the `DOMDeserializer` component.  An attacker could exploit this vulnerability via a crafted request in order to execute an XML external entities (XXE) attack against the application.\n\n## Vulnerabilities(BDSA,CVE)\n:orange_circle: [CVE-2020-25649](https://openhub.net/vulnerabilities/bdsa/CVE-2020-25649) - XML External Entity (XXE) Injection\n\n\n\n## Solution\nFixed in: \n* [**2.11.0.rc1**](https://github.com/FasterXML/jackson-databind/releases/tag/jackson-databind-2.11.0.rc1) by [this](https://github.com/FasterXML/jackson-databind/commit/612f971b78c60202e9cd75a299050c8f2d724a59) commit.\n* [**2.10.5.1**](https://github.com/FasterXML/jackson-databind/releases/tag/jackson-databind-2.10.5.1) and [**2.9.10.7**](https://github.com/FasterXML/jackson-databind/releases/tag/jackson-databind-2.9.10.7) by [this](https://github.com/FasterXML/jackson-databind/commit/3d932709abd0b5390efe67451653fc9efa9db677) commit.\n* [**2.6.7.4**](https://github.com/FasterXML/jackson-databind/releases/tag/jackson-databind-2.6.7.4) by [this](https://github.com/FasterXML/jackson-databind/commit/b59b611f82c546c13753421f79103c6f6e584606) commit.\n\nThe latest stable releases are available [here](https://github.com/FasterXML/jackson-databind/releases).\n\n\n\n## Dependency tree\n- org.owasp.webgoat.lesson:xxe:v8.1.0:-maven\n    - com.github.tomakehurst:wiremock:2.8.0\n        - com.fasterxml.jackson.core:jackson-databind:2.10.1\n\n\n## References\n* Common Weakness Enumeration: [CWE-611](https://cwe.mitre.org/data/definitions/611.html)\n\n","text":"Jackson Databind is vulnerable to XML external entities (XXE) due to insecure entity expansion in the `DOMDeserializer` component.  An attacker could exploit this vulnerability via a crafted request in order to execute an XML external entities (XXE) attack against the application."},"properties":{"security-severity":"8.9","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-611"]},"defaultConfiguration":{"level":"error"}},{"id":"CVE-2020-36518 jackson-databind 2.10.1: wiremock 2.8.0: com.fasterxml.jackson.core","shortDescription":{"text":"Transitive Dependency: jackson-databind 2.10.1 from wiremock 2.8.0 (CVE-2020-36518)"},"fullDescription":{"text":"jackson-databind is vulnerable to a Java `StackOverflow` exception within its implementation of `UntypedObjectDeserializer` due to how deeply nested objects are handled. An attacker could exploit this in order to cause a denial-of-service (DoS) condition."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| jackson-databind 2.10.1  | 2.16.1  | 2.16.1 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/17c088b5-5621-41a8-9b16-1928a884f430?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=ce7ad18a-6e02-4565-a51c-4fc2c5bc7c47)\n\n\n## Description\njackson-databind is vulnerable to a Java `StackOverflow` exception within its implementation of `UntypedObjectDeserializer` due to how deeply nested objects are handled. An attacker could exploit this in order to cause a denial-of-service (DoS) condition.\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [CVE-2020-36518](https://openhub.net/vulnerabilities/bdsa/CVE-2020-36518) - Uncontrolled Resource Consumption\n\n\n\n## Solution\nFixed in [**2.13.2.2**](https://github.com/FasterXML/jackson-databind/releases/tag/jackson-databind-2.13.2.2) by [this](https://github.com/FasterXML/jackson-databind/commit/fcfc4998ec23f0b1f7f8a9521c2b317b6c25892b) commit, and in [**2.12.6.1**](https://github.com/FasterXML/jackson-databind/releases/tag/jackson-databind-2.12.6.1) by [this](https://github.com/FasterXML/jackson-databind/commit/83b928dab9ba6ef81cf48987fcd12071e1ddb0c9) commit.\n\n**Note**: This was also fixed in [**2.13.2.1**](https://github.com/FasterXML/jackson-databind/releases/tag/jackson-databind-2.13.2.1), however, the vendor has stated [here](https://github.com/FasterXML/jackson-databind/issues/2816#issue-678075273) that there is a problem in Gradle Module Metadata declaration. This lead to the release of **2.13.2.2**. If you are not using GMM you can use either update. \n\nThe latest stable releases are available [here](https://github.com/FasterXML/jackson-databind/tags).\n\n\n\n## Dependency tree\n- org.owasp.webgoat.lesson:xxe:v8.1.0:-maven\n    - com.github.tomakehurst:wiremock:2.8.0\n        - com.fasterxml.jackson.core:jackson-databind:2.10.1\n\n\n## References\n* Common Weakness Enumeration: [CWE-400](https://cwe.mitre.org/data/definitions/400.html)\n* Common Weakness Enumeration: [CWE-674](https://cwe.mitre.org/data/definitions/674.html)\n\n","text":"jackson-databind is vulnerable to a Java `StackOverflow` exception within its implementation of `UntypedObjectDeserializer` due to how deeply nested objects are handled. An attacker could exploit this in order to cause a denial-of-service (DoS) condition."},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-400","external/cwe/cwe-674"]},"defaultConfiguration":{"level":"warning"}},{"id":"CVE-2021-46877 jackson-databind 2.10.1: wiremock 2.8.0: com.fasterxml.jackson.core","shortDescription":{"text":"Transitive Dependency: jackson-databind 2.10.1 from wiremock 2.8.0 (CVE-2021-46877)"},"fullDescription":{"text":"jackson-databind contains a flaw in it's handling of JsonNode JDK Serialization where excessive heap memory can be consumed. An attacker that is able to supply specially crafted data for JDK deserialization may be able to exhaust the application of available memory, resulting in a denial-of-service (DoS) of the application."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| jackson-databind 2.10.1  | 2.16.1  | 2.16.1 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/17c088b5-5621-41a8-9b16-1928a884f430?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=ce7ad18a-6e02-4565-a51c-4fc2c5bc7c47)\n\n\n## Description\njackson-databind contains a flaw in it's handling of JsonNode JDK Serialization where excessive heap memory can be consumed. An attacker that is able to supply specially crafted data for JDK deserialization may be able to exhaust the application of available memory, resulting in a denial-of-service (DoS) of the application.\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [CVE-2021-46877](https://openhub.net/vulnerabilities/bdsa/CVE-2021-46877) - Allocation of Resources Without Limits or Throttling\n\n\n\n## Solution\nFixed in [**2.12.6**](https://github.com/FasterXML/jackson-databind/releases/tag/jackson-databind-2.12.6) and [**2.13.1**](https://github.com/FasterXML/jackson-databind/releases/tag/jackson-databind-2.13.1) by [this](https://github.com/FasterXML/jackson-databind/commit/3ccde7d938fea547e598fdefe9a82cff37fed5cb) commit \n\nThe latest stable releases can be found [here](https://github.com/FasterXML/jackson-databind/tags).\n\n\n\n## Dependency tree\n- org.owasp.webgoat.lesson:xxe:v8.1.0:-maven\n    - com.github.tomakehurst:wiremock:2.8.0\n        - com.fasterxml.jackson.core:jackson-databind:2.10.1\n\n\n## References\n* Common Weakness Enumeration: [CWE-770](https://cwe.mitre.org/data/definitions/770.html)\n\n","text":"jackson-databind contains a flaw in it's handling of JsonNode JDK Serialization where excessive heap memory can be consumed. An attacker that is able to supply specially crafted data for JDK deserialization may be able to exhaust the application of available memory, resulting in a denial-of-service (DoS) of the application."},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-770"]},"defaultConfiguration":{"level":"warning"}},{"id":"CVE-2022-42003 jackson-databind 2.10.1: wiremock 2.8.0: com.fasterxml.jackson.core","shortDescription":{"text":"Transitive Dependency: jackson-databind 2.10.1 from wiremock 2.8.0 (CVE-2022-42003)"},"fullDescription":{"text":"Jackson Databind is vulnerable to denial-of-service (DoS) due to the improper management of system resources within its primitive value deserialization functionality. A remote attacker could leverage this issue in order to cause a vulnerable system to crash."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| jackson-databind 2.10.1  | 2.16.1  | 2.16.1 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/17c088b5-5621-41a8-9b16-1928a884f430?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=ce7ad18a-6e02-4565-a51c-4fc2c5bc7c47)\n\n\n## Description\nJackson Databind is vulnerable to denial-of-service (DoS) due to the improper management of system resources within its primitive value deserialization functionality. A remote attacker could leverage this issue in order to cause a vulnerable system to crash.\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [CVE-2022-42003](https://openhub.net/vulnerabilities/bdsa/CVE-2022-42003) - Uncontrolled Resource Consumption\n\n\n\n## Solution\nFixed in versions:\n*  [**2.14.0-rc1**](https://github.com/FasterXML/jackson-databind/releases/tag/jackson-databind-2.14.0-rc1) by [this](https://github.com/FasterXML/jackson-databind/commit/d78d00ee7b5245b93103fef3187f70543d67ca33) commit,\n*  [**2.13.4.1**](https://github.com/FasterXML/jackson-databind/releases/tag/jackson-databind-2.13.4.1) by [this](https://github.com/FasterXML/jackson-databind/commit/2c4a601c626f7790cad9d3c322d244e182838288) commit,\n*  [**2.12.7.1**](https://github.com/FasterXML/jackson-databind/releases/tag/jackson-databind-2.12.7.1) by [this](https://github.com/FasterXML/jackson-databind/commit/cd090979b7ea78c75e4de8a4aed04f7e9fa8deea) commit.\n\nThe latest stable releases can be found [here](https://github.com/FasterXML/jackson-databind/tags).\n\n\n\n## Dependency tree\n- org.owasp.webgoat.lesson:xxe:v8.1.0:-maven\n    - com.github.tomakehurst:wiremock:2.8.0\n        - com.fasterxml.jackson.core:jackson-databind:2.10.1\n\n\n## References\n* Common Weakness Enumeration: [CWE-400](https://cwe.mitre.org/data/definitions/400.html)\n\n","text":"Jackson Databind is vulnerable to denial-of-service (DoS) due to the improper management of system resources within its primitive value deserialization functionality. A remote attacker could leverage this issue in order to cause a vulnerable system to crash."},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-400"]},"defaultConfiguration":{"level":"warning"}},{"id":"CVE-2022-42004 jackson-databind 2.10.1: wiremock 2.8.0: com.fasterxml.jackson.core","shortDescription":{"text":"Transitive Dependency: jackson-databind 2.10.1 from wiremock 2.8.0 (CVE-2022-42004)"},"fullDescription":{"text":"Jackson Databind is vulnerable to denial-of-service (DoS) due to the improper management of system resources within its `BeanDeserializer` component. A remote attacker could cause a vulnerable server to crash by causing that server to process a maliciously crafted serialized object.\n\n**Note:** As per discussion [here](https://github.com/FasterXML/jackson-databind/issues/3582#issuecomment-1242153562), this vulnerability is not applicable in the default setting of `ObjectMapper`, only in specific `DeserializationFeature` configurations."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| jackson-databind 2.10.1  | 2.16.1  | 2.16.1 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/17c088b5-5621-41a8-9b16-1928a884f430?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=ce7ad18a-6e02-4565-a51c-4fc2c5bc7c47)\n\n\n## Description\nJackson Databind is vulnerable to denial-of-service (DoS) due to the improper management of system resources within its `BeanDeserializer` component. A remote attacker could cause a vulnerable server to crash by causing that server to process a maliciously crafted serialized object.\n\n**Note:** As per discussion [here](https://github.com/FasterXML/jackson-databind/issues/3582#issuecomment-1242153562), this vulnerability is not applicable in the default setting of `ObjectMapper`, only in specific `DeserializationFeature` configurations.\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [CVE-2022-42004](https://openhub.net/vulnerabilities/bdsa/CVE-2022-42004) - Uncontrolled Resource Consumption\n\n\n\n## Solution\nFixed in version [**2.13.4**](https://github.com/FasterXML/jackson-databind/releases/tag/jackson-databind-2.13.4) by [this](https://github.com/FasterXML/jackson-databind/commit/063183589218fec19a9293ed2f17ec53ea80ba88) commit and in version [**2.12.7.1**](https://github.com/FasterXML/jackson-databind/releases/tag/jackson-databind-2.12.7.1) by [this](https://github.com/FasterXML/jackson-databind/commit/cd090979b7ea78c75e4de8a4aed04f7e9fa8deea) commit.\n\nThe latest stable releases can be found [here](https://github.com/FasterXML/jackson-databind/tags).\n\n\n\n## Dependency tree\n- org.owasp.webgoat.lesson:xxe:v8.1.0:-maven\n    - com.github.tomakehurst:wiremock:2.8.0\n        - com.fasterxml.jackson.core:jackson-databind:2.10.1\n\n\n## References\n* Common Weakness Enumeration: [CWE-400](https://cwe.mitre.org/data/definitions/400.html)\n\n","text":"Jackson Databind is vulnerable to denial-of-service (DoS) due to the improper management of system resources within its `BeanDeserializer` component. A remote attacker could cause a vulnerable server to crash by causing that server to process a maliciously crafted serialized object.\n\n**Note:** As per discussion [here](https://github.com/FasterXML/jackson-databind/issues/3582#issuecomment-1242153562), this vulnerability is not applicable in the default setting of `ObjectMapper`, only in specific `DeserializationFeature` configurations."},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-400"]},"defaultConfiguration":{"level":"warning"}},{"id":"CVE-2023-35116 jackson-databind 2.10.1: wiremock 2.8.0: com.fasterxml.jackson.core","shortDescription":{"text":"Transitive Dependency: jackson-databind 2.10.1 from wiremock 2.8.0 (CVE-2023-35116)"},"fullDescription":{"text":"jackson-databind through 2.15.2 allows attackers to cause a denial of service or other unspecified impact via a crafted object that uses cyclic dependencies. NOTE: the vendor's perspective is that this is not a valid vulnerability report, because the steps of constructing a cyclic data structure and trying to serialize it cannot be achieved by an external attacker."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| jackson-databind 2.10.1  | 2.16.1  | 2.16.1 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/17c088b5-5621-41a8-9b16-1928a884f430?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=ce7ad18a-6e02-4565-a51c-4fc2c5bc7c47)\n\n\n## Description\njackson-databind through 2.15.2 allows attackers to cause a denial of service or other unspecified impact via a crafted object that uses cyclic dependencies. NOTE: the vendor's perspective is that this is not a valid vulnerability report, because the steps of constructing a cyclic data structure and trying to serialize it cannot be achieved by an external attacker.\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [CVE-2023-35116](https://openhub.net/vulnerabilities/bdsa/CVE-2023-35116) - Allocation of Resources Without Limits or Throttling\n\n\n\n\n\n\n\n## Dependency tree\n- org.owasp.webgoat.lesson:xxe:v8.1.0:-maven\n    - com.github.tomakehurst:wiremock:2.8.0\n        - com.fasterxml.jackson.core:jackson-databind:2.10.1\n\n\n## References\n* Common Weakness Enumeration: [CWE-770](https://cwe.mitre.org/data/definitions/770.html)\n\n","text":"jackson-databind through 2.15.2 allows attackers to cause a denial of service or other unspecified impact via a crafted object that uses cyclic dependencies. NOTE: the vendor's perspective is that this is not a valid vulnerability report, because the steps of constructing a cyclic data structure and trying to serialize it cannot be achieved by an external attacker."},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-770"]},"defaultConfiguration":{"level":"warning"}},{"id":"CVE-2021-43466 thymeleaf-spring5 3.0.11.RELEASE: spring-boot-starter-thymeleaf 2.2.2.RELEASE: org.thymeleaf","shortDescription":{"text":"Transitive Dependency: thymeleaf-spring5 3.0.11.RELEASE from spring-boot-starter-thymeleaf 2.2.2.RELEASE (CVE-2021-43466)"},"fullDescription":{"text":"thymeleaf-spring is vulnerable to template injection. This can lead to remote code execution (RCE) through double evaluation of certain parameters.\n\n**Note** the vendor states:\n\u003e Just in order to reduce anxiety around this issue, I'd like to explain that CVE-2021-43466 only affects those applications that contain controllers or controller configurations that take a request parameter and directly use it, without previous filtering, as the name of the view to be rendered — which is something IMHO no one should be doing, as it is a bit like voluntarily providing a way for code injection."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| thymeleaf-spring5 3.0.11.RELEASE  | 3.1.2.RELEASE  | 3.1.2.RELEASE |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/a8bf42bb-8368-4cfd-9b08-9ab69c3b235b?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=eea752f1-7110-4a5b-aec7-befd4185e4a7)\n\n\n## Description\nthymeleaf-spring is vulnerable to template injection. This can lead to remote code execution (RCE) through double evaluation of certain parameters.\n\n**Note** the vendor states:\n\u003e Just in order to reduce anxiety around this issue, I'd like to explain that CVE-2021-43466 only affects those applications that contain controllers or controller configurations that take a request parameter and directly use it, without previous filtering, as the name of the view to be rendered — which is something IMHO no one should be doing, as it is a bit like voluntarily providing a way for code injection.\n\n## Vulnerabilities(BDSA,CVE)\n:orange_circle: [CVE-2021-43466](https://openhub.net/vulnerabilities/bdsa/CVE-2021-43466) - Eval Injection\n\n\n\n## Solution\nFixed in version [ **thymeleaf-spring3-3.0.14.RELEASE**](https://mvnrepository.com/artifact/org.thymeleaf/thymeleaf-spring3), [**thymeleaf-spring4-3.0.14.RELEASE**](https://mvnrepository.com/artifact/org.thymeleaf/thymeleaf-spring4), and [**thymeleaf-spring5-3.0.14.RELEASE**](https://github.com/thymeleaf/thymeleaf-spring/releases/tag/thymeleaf-spring5-3.0.14.RELEASE) by [this](https://github.com/thymeleaf/thymeleaf-spring/commit/d75834ca34f4a8dca3ee626c9ce22060e90427bc) commit.\n\nThe latest stable releases can be found [here](https://mvnrepository.com/artifact/org.thymeleaf/thymeleaf-spring5).\n\n\n\n## Dependency tree\n- org.owasp.webgoat:webgoat-container:v8.1.0:-maven\n    - org.springframework.boot:spring-boot-starter-thymeleaf:2.2.2.RELEASE\n        - org.thymeleaf:thymeleaf-spring5:3.0.11.RELEASE\n\n\n## References\n* Common Weakness Enumeration: [CWE-95](https://cwe.mitre.org/data/definitions/95.html)\n\n","text":"thymeleaf-spring is vulnerable to template injection. This can lead to remote code execution (RCE) through double evaluation of certain parameters.\n\n**Note** the vendor states:\n\u003e Just in order to reduce anxiety around this issue, I'd like to explain that CVE-2021-43466 only affects those applications that contain controllers or controller configurations that take a request parameter and directly use it, without previous filtering, as the name of the view to be rendered — which is something IMHO no one should be doing, as it is a bit like voluntarily providing a way for code injection."},"properties":{"security-severity":"8.9","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-95"]},"defaultConfiguration":{"level":"error"}},{"id":"CVE-2016-1000027 spring-test 5.2.2.RELEASE: spring-boot-starter-test 2.2.2.RELEASE: org.springframework","shortDescription":{"text":"Transitive Dependency: spring-test 5.2.2.RELEASE from spring-boot-starter-test 2.2.2.RELEASE (CVE-2016-1000027)"},"fullDescription":{"text":"Pivotal Spring Framework through 5.3.16 suffers from a potential remote code execution (RCE) issue if used for Java deserialization of untrusted data. Depending on how the library is implemented within a product, this issue may or not occur, and authentication may be required. NOTE: the vendor's position is that untrusted data is not an intended use case. The product's behavior will not be changed because some users rely on deserialization of trusted data."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| spring-test 5.2.2.RELEASE  | 5.3.31  | 6.1.2 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/ba6e9d03-9fbd-4086-9631-99d1ad5e520c?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=09f17d81-b282-43ec-9f2b-36c8021d3ca7)\n\n\n## Description\nPivotal Spring Framework through 5.3.16 suffers from a potential remote code execution (RCE) issue if used for Java deserialization of untrusted data. Depending on how the library is implemented within a product, this issue may or not occur, and authentication may be required. NOTE: the vendor's position is that untrusted data is not an intended use case. The product's behavior will not be changed because some users rely on deserialization of trusted data.\n\n## Vulnerabilities(BDSA,CVE)\n:red_circle: [CVE-2016-1000027](https://openhub.net/vulnerabilities/bdsa/CVE-2016-1000027) - Insecure Object Deserialization\n\n\n\n\n\n\n\n## Dependency tree\n- org.owasp.webgoat.lesson:http-basics:v8.1.0:-maven\n    - org.springframework.boot:spring-boot-starter-test:2.2.2.RELEASE\n        - org.springframework:spring-test:5.2.2.RELEASE\n\n\n## References\n* Common Weakness Enumeration: [CWE-502](https://cwe.mitre.org/data/definitions/502.html)\n\n","text":"Pivotal Spring Framework through 5.3.16 suffers from a potential remote code execution (RCE) issue if used for Java deserialization of untrusted data. Depending on how the library is implemented within a product, this issue may or not occur, and authentication may be required. NOTE: the vendor's position is that untrusted data is not an intended use case. The product's behavior will not be changed because some users rely on deserialization of trusted data."},"properties":{"security-severity":"9.1","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-502"]},"defaultConfiguration":{"level":"error"}},{"id":"CVE-2022-22965 spring-test 5.2.2.RELEASE: spring-boot-starter-test 2.2.2.RELEASE: org.springframework","shortDescription":{"text":"Transitive Dependency: spring-test 5.2.2.RELEASE from spring-boot-starter-test 2.2.2.RELEASE (CVE-2022-22965)"},"fullDescription":{"text":"Spring Framework is vulnerable to a flaw in the access restrictions to the security sensitive `ClassLoader` property. The restrictions can be bypassed through alternative paths available with Java9 and later. An attacker can leverage this vulnerability to cause remote code execution (RCE).\n\n**Note** this issue exists because the restrictions that were introduced to prevent exploitation of BDSA-2010-0001 (CVE-2010-1622) can be bypassed on platforms where Java9 and later are in use.\n\nThis vulnerability is listed as exploitable by the Cybersecurity \u0026 Infrastructure Security Agency in their [Known Exploited Vulnerabilities Catalog](https://www.cisa.gov/known-exploited-vulnerabilities-catalog)."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| spring-test 5.2.2.RELEASE  | 5.3.31  | 6.1.2 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/ba6e9d03-9fbd-4086-9631-99d1ad5e520c?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=09f17d81-b282-43ec-9f2b-36c8021d3ca7)\n\n\n## Description\nSpring Framework is vulnerable to a flaw in the access restrictions to the security sensitive `ClassLoader` property. The restrictions can be bypassed through alternative paths available with Java9 and later. An attacker can leverage this vulnerability to cause remote code execution (RCE).\n\n**Note** this issue exists because the restrictions that were introduced to prevent exploitation of BDSA-2010-0001 (CVE-2010-1622) can be bypassed on platforms where Java9 and later are in use.\n\nThis vulnerability is listed as exploitable by the Cybersecurity \u0026 Infrastructure Security Agency in their [Known Exploited Vulnerabilities Catalog](https://www.cisa.gov/known-exploited-vulnerabilities-catalog).\n\n## Vulnerabilities(BDSA,CVE)\n:red_circle: [CVE-2022-22965](https://openhub.net/vulnerabilities/bdsa/CVE-2022-22965) - Incomplete List of Disallowed Inputs\n\n\n\n## Solution\nFixed in [**5.3.18**](https://github.com/spring-projects/spring-framework/releases/tag/v5.3.18) by [this](https://github.com/spring-projects/spring-framework/commit/002546b3e4b8d791ea6acccb81eb3168f51abb15) commit and  [**5.2.20**](https://github.com/spring-projects/spring-framework/releases/tag/v5.2.20.RELEASE) by [this](https://github.com/spring-projects/spring-framework/commit/996f701a1916d10202c1d0d281f06ab1f2e1117e) commit .\n\nThe latest releases can be found [here](https://github.com/spring-projects/spring-framework/tags).\n\n## Workaround\nAn official workaround for the issue has been outlined [here](https://spring.io/blog/2022/03/31/spring-framework-rce-early-announcement).\n\n## Dependency tree\n- org.owasp.webgoat.lesson:http-basics:v8.1.0:-maven\n    - org.springframework.boot:spring-boot-starter-test:2.2.2.RELEASE\n        - org.springframework:spring-test:5.2.2.RELEASE\n\n\n## References\n* Common Weakness Enumeration: [CWE-184](https://cwe.mitre.org/data/definitions/184.html)\n* Common Weakness Enumeration: [CWE-749](https://cwe.mitre.org/data/definitions/749.html)\n\n","text":"Spring Framework is vulnerable to a flaw in the access restrictions to the security sensitive `ClassLoader` property. The restrictions can be bypassed through alternative paths available with Java9 and later. An attacker can leverage this vulnerability to cause remote code execution (RCE).\n\n**Note** this issue exists because the restrictions that were introduced to prevent exploitation of BDSA-2010-0001 (CVE-2010-1622) can be bypassed on platforms where Java9 and later are in use.\n\nThis vulnerability is listed as exploitable by the Cybersecurity \u0026 Infrastructure Security Agency in their [Known Exploited Vulnerabilities Catalog](https://www.cisa.gov/known-exploited-vulnerabilities-catalog)."},"properties":{"security-severity":"9.1","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-184","external/cwe/cwe-749"]},"defaultConfiguration":{"level":"error"}},{"id":"CVE-2020-5397 spring-test 5.2.2.RELEASE: spring-boot-starter-test 2.2.2.RELEASE: org.springframework","shortDescription":{"text":"Transitive Dependency: spring-test 5.2.2.RELEASE from spring-boot-starter-test 2.2.2.RELEASE (CVE-2020-5397)"},"fullDescription":{"text":"Spring Framework is vulnerable to cross-site request forgery (CSRF) attacks via CORS preflight requests which target Spring MVC or Spring WebFlux endpoints."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| spring-test 5.2.2.RELEASE  | 5.3.31  | 6.1.2 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/ba6e9d03-9fbd-4086-9631-99d1ad5e520c?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=09f17d81-b282-43ec-9f2b-36c8021d3ca7)\n\n\n## Description\nSpring Framework is vulnerable to cross-site request forgery (CSRF) attacks via CORS preflight requests which target Spring MVC or Spring WebFlux endpoints.\n\n## Vulnerabilities(BDSA,CVE)\n:orange_circle: [CVE-2020-5397](https://openhub.net/vulnerabilities/bdsa/CVE-2020-5397) - Cross-Site Request Forgery (CSRF)\n\n\n\n## Solution\nFixed in [**5.2.3**](https://github.com/spring-projects/spring-framework/releases/tag/v5.2.3.RELEASE).\n\n\n\n## Dependency tree\n- org.owasp.webgoat.lesson:http-basics:v8.1.0:-maven\n    - org.springframework.boot:spring-boot-starter-test:2.2.2.RELEASE\n        - org.springframework:spring-test:5.2.2.RELEASE\n\n\n## References\n* Common Weakness Enumeration: [CWE-352](https://cwe.mitre.org/data/definitions/352.html)\n\n","text":"Spring Framework is vulnerable to cross-site request forgery (CSRF) attacks via CORS preflight requests which target Spring MVC or Spring WebFlux endpoints."},"properties":{"security-severity":"8.9","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-352"]},"defaultConfiguration":{"level":"error"}},{"id":"BDSA-2022-0847 spring-test 5.2.2.RELEASE: spring-boot-starter-test 2.2.2.RELEASE: org.springframework","shortDescription":{"text":"Transitive Dependency: spring-test 5.2.2.RELEASE from spring-boot-starter-test 2.2.2.RELEASE (BDSA-2022-0847)"},"fullDescription":{"text":"Software systems using Spring Framework may be vulnerable to unsafe deserialization if they employ unsafe use of certain provided deserialization functionality. A remote attacker could potentially execute arbitrary code on a vulnerable endpoint by passing a maliciously crafted serialized object to that endpoint.\n\n**Note**: This issue only affects software that has been written to leverage specific deserialization functionality provided by the Spring Framework without sanitization."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| spring-test 5.2.2.RELEASE  | 5.3.31  | 6.1.2 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/ba6e9d03-9fbd-4086-9631-99d1ad5e520c?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=09f17d81-b282-43ec-9f2b-36c8021d3ca7)\n\n\n## Description\nSoftware systems using Spring Framework may be vulnerable to unsafe deserialization if they employ unsafe use of certain provided deserialization functionality. A remote attacker could potentially execute arbitrary code on a vulnerable endpoint by passing a maliciously crafted serialized object to that endpoint.\n\n**Note**: This issue only affects software that has been written to leverage specific deserialization functionality provided by the Spring Framework without sanitization.\n\n## Vulnerabilities(BDSA,CVE)\n:orange_circle: [BDSA-2022-0847](https://openhub.net/vulnerabilities/bdsa/BDSA-2022-0847) - Insecure Object Deserialization\n\n\n\n## Solution\nFixed in **[6.0.0-M4](https://github.com/spring-projects/spring-framework/releases/tag/v6.0.0-M4)** by [this](https://github.com/spring-projects/spring-framework/commit/7f7fb58dd0dae86d22268a4b59ac7c72a6c22529) commit.\n\nFixed in **[5.3.18](https://github.com/spring-projects/spring-framework/releases/tag/v5.3.18)** and **[5.2.20](https://github.com/spring-projects/spring-framework/releases/tag/v5.2.20.RELEASE)** by [this](https://github.com/spring-projects/spring-framework/commit/3811cd4c0a0be3aac6e842cf1890610ce986449d) commit.\n\n**Note**: These patches simply annotate the dangerous method as deprecated or documents the dangers. It is the responsibility of developers who call this method to ensure that it is not used with unsanitized untrusted input.\n\n\n\n## Dependency tree\n- org.owasp.webgoat.lesson:http-basics:v8.1.0:-maven\n    - org.springframework.boot:spring-boot-starter-test:2.2.2.RELEASE\n        - org.springframework:spring-test:5.2.2.RELEASE\n\n\n## References\n* Common Weakness Enumeration: [CWE-502](https://cwe.mitre.org/data/definitions/502.html)\n\n","text":"Software systems using Spring Framework may be vulnerable to unsafe deserialization if they employ unsafe use of certain provided deserialization functionality. A remote attacker could potentially execute arbitrary code on a vulnerable endpoint by passing a maliciously crafted serialized object to that endpoint.\n\n**Note**: This issue only affects software that has been written to leverage specific deserialization functionality provided by the Spring Framework without sanitization."},"properties":{"security-severity":"8.9","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-502"]},"defaultConfiguration":{"level":"error"}},{"id":"CVE-2020-5398 spring-test 5.2.2.RELEASE: spring-boot-starter-test 2.2.2.RELEASE: org.springframework","shortDescription":{"text":"Transitive Dependency: spring-test 5.2.2.RELEASE from spring-boot-starter-test 2.2.2.RELEASE (CVE-2020-5398)"},"fullDescription":{"text":"Spring Framework is vulnerable to a reflected file download (RFD) attack via improper input validation on filenames in a `Content-Disposition` header."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| spring-test 5.2.2.RELEASE  | 5.3.31  | 6.1.2 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/ba6e9d03-9fbd-4086-9631-99d1ad5e520c?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=09f17d81-b282-43ec-9f2b-36c8021d3ca7)\n\n\n## Description\nSpring Framework is vulnerable to a reflected file download (RFD) attack via improper input validation on filenames in a `Content-Disposition` header.\n\n## Vulnerabilities(BDSA,CVE)\n:orange_circle: [CVE-2020-5398](https://openhub.net/vulnerabilities/bdsa/CVE-2020-5398) - Weak Input Validation\n\n\n\n## Solution\nFixed by [this](https://github.com/spring-projects/spring-framework/commit/956ffe68587c8d5f21135b5ce4650af0c2dea933) commit in:\n* [**5.2.3**](https://github.com/spring-projects/spring-framework/releases/tag/v5.2.3.RELEASE)\n* [**5.1.13**](https://github.com/spring-projects/spring-framework/releases/tag/v5.1.13.RELEASE) \n* [**5.0.16**](https://github.com/spring-projects/spring-framework/releases/tag/v5.0.16.RELEASE)\n\n\n\n## Dependency tree\n- org.owasp.webgoat.lesson:http-basics:v8.1.0:-maven\n    - org.springframework.boot:spring-boot-starter-test:2.2.2.RELEASE\n        - org.springframework:spring-test:5.2.2.RELEASE\n\n\n## References\n* Common Weakness Enumeration: [CWE-20](https://cwe.mitre.org/data/definitions/20.html)\n\n","text":"Spring Framework is vulnerable to a reflected file download (RFD) attack via improper input validation on filenames in a `Content-Disposition` header."},"properties":{"security-severity":"8.9","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-20"]},"defaultConfiguration":{"level":"error"}},{"id":"CVE-2021-22096 spring-test 5.2.2.RELEASE: spring-boot-starter-test 2.2.2.RELEASE: org.springframework","shortDescription":{"text":"Transitive Dependency: spring-test 5.2.2.RELEASE from spring-boot-starter-test 2.2.2.RELEASE (CVE-2021-22096)"},"fullDescription":{"text":"Spring Framework is vulnerable to log file injection due to the insufficient validation of user input in an undisclosed component. An attacker could leverage this issue in order to add arbitrary entries to a log file which could impact both the integrity issues and performance issues.\n\n**Note**: a follow-up to this issue was disclosed as **CVE-2021-22060** (**BDSA-2021-3236**), with further fixed releases that protect against additional types of input and in more places of the Spring Framework codebase."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| spring-test 5.2.2.RELEASE  | 5.3.31  | 6.1.2 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/ba6e9d03-9fbd-4086-9631-99d1ad5e520c?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=09f17d81-b282-43ec-9f2b-36c8021d3ca7)\n\n\n## Description\nSpring Framework is vulnerable to log file injection due to the insufficient validation of user input in an undisclosed component. An attacker could leverage this issue in order to add arbitrary entries to a log file which could impact both the integrity issues and performance issues.\n\n**Note**: a follow-up to this issue was disclosed as **CVE-2021-22060** (**BDSA-2021-3236**), with further fixed releases that protect against additional types of input and in more places of the Spring Framework codebase.\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [CVE-2021-22096](https://openhub.net/vulnerabilities/bdsa/CVE-2021-22096) - Injection in Downstream Component\n\n\n\n## Solution\nFixed in versions [**5.3.14**](https://github.com/spring-projects/spring-framework/releases/tag/v5.3.14) and [**5.2.19**](https://github.com/spring-projects/spring-framework/releases/tag/v5.2.19.RELEASE).\n\nThe latest stable releases can be found [here](https://github.com/spring-projects/spring-framework/releases).\n\n\n\n## Dependency tree\n- org.owasp.webgoat.lesson:http-basics:v8.1.0:-maven\n    - org.springframework.boot:spring-boot-starter-test:2.2.2.RELEASE\n        - org.springframework:spring-test:5.2.2.RELEASE\n\n\n## References\n* Common Weakness Enumeration: [CWE-74](https://cwe.mitre.org/data/definitions/74.html)\n\n","text":"Spring Framework is vulnerable to log file injection due to the insufficient validation of user input in an undisclosed component. An attacker could leverage this issue in order to add arbitrary entries to a log file which could impact both the integrity issues and performance issues.\n\n**Note**: a follow-up to this issue was disclosed as **CVE-2021-22060** (**BDSA-2021-3236**), with further fixed releases that protect against additional types of input and in more places of the Spring Framework codebase."},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-74"]},"defaultConfiguration":{"level":"warning"}},{"id":"CVE-2021-22060 spring-test 5.2.2.RELEASE: spring-boot-starter-test 2.2.2.RELEASE: org.springframework","shortDescription":{"text":"Transitive Dependency: spring-test 5.2.2.RELEASE from spring-boot-starter-test 2.2.2.RELEASE (CVE-2021-22060)"},"fullDescription":{"text":"Spring Framework is vulnerable to log file injection due to the insufficient validation of user input in an undisclosed component. An attacker could leverage this issue in order to add arbitrary entries to a log file which could impact both the integrity issues and performance issues.\n\n**Note**: the vendor states this issue exists as a follow up to CVE-2021-22096 (BDSA-2022-0011) that protects against additional types of input and in more places of the Spring Framework codebase."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| spring-test 5.2.2.RELEASE  | 5.3.31  | 6.1.2 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/ba6e9d03-9fbd-4086-9631-99d1ad5e520c?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=09f17d81-b282-43ec-9f2b-36c8021d3ca7)\n\n\n## Description\nSpring Framework is vulnerable to log file injection due to the insufficient validation of user input in an undisclosed component. An attacker could leverage this issue in order to add arbitrary entries to a log file which could impact both the integrity issues and performance issues.\n\n**Note**: the vendor states this issue exists as a follow up to CVE-2021-22096 (BDSA-2022-0011) that protects against additional types of input and in more places of the Spring Framework codebase.\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [CVE-2021-22060](https://openhub.net/vulnerabilities/bdsa/CVE-2021-22060) - Injection in Downstream Component\n\n\n\n## Solution\nFixed in versions [**5.3.14**](https://github.com/spring-projects/spring-framework/releases/tag/v5.3.14) and [**5.2.19**](https://github.com/spring-projects/spring-framework/releases/tag/v5.2.19.RELEASE).\n\nThe latest stable releases can be found [here](https://github.com/spring-projects/spring-framework/releases).\n\n\n\n## Dependency tree\n- org.owasp.webgoat.lesson:http-basics:v8.1.0:-maven\n    - org.springframework.boot:spring-boot-starter-test:2.2.2.RELEASE\n        - org.springframework:spring-test:5.2.2.RELEASE\n\n\n## References\n* Common Weakness Enumeration: [CWE-74](https://cwe.mitre.org/data/definitions/74.html)\n\n","text":"Spring Framework is vulnerable to log file injection due to the insufficient validation of user input in an undisclosed component. An attacker could leverage this issue in order to add arbitrary entries to a log file which could impact both the integrity issues and performance issues.\n\n**Note**: the vendor states this issue exists as a follow up to CVE-2021-22096 (BDSA-2022-0011) that protects against additional types of input and in more places of the Spring Framework codebase."},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-74"]},"defaultConfiguration":{"level":"warning"}},{"id":"CVE-2022-22950 spring-test 5.2.2.RELEASE: spring-boot-starter-test 2.2.2.RELEASE: org.springframework","shortDescription":{"text":"Transitive Dependency: spring-test 5.2.2.RELEASE from spring-boot-starter-test 2.2.2.RELEASE (CVE-2022-22950)"},"fullDescription":{"text":"Spring-Framework's spring-expression is vulnerable to a denial-of-service (DoS) condition. This allows an attacker to use crafted input to cause the spring-expression process to crash due to an exception."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| spring-test 5.2.2.RELEASE  | 5.3.31  | 6.1.2 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/ba6e9d03-9fbd-4086-9631-99d1ad5e520c?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=09f17d81-b282-43ec-9f2b-36c8021d3ca7)\n\n\n## Description\nSpring-Framework's spring-expression is vulnerable to a denial-of-service (DoS) condition. This allows an attacker to use crafted input to cause the spring-expression process to crash due to an exception.\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [CVE-2022-22950](https://openhub.net/vulnerabilities/bdsa/CVE-2022-22950) - Allocation of Resources Without Limits or Throttling\n\n\n\n## Solution\nFixed in version [**5.3.17**](https://github.com/spring-projects/spring-framework/releases/tag/v5.3.17) by [this](https://github.com/spring-projects/spring-framework/commit/94af2ca06bf711de03286999b1c64a703d6de552) commit.\n\nThe latest stable releases can be found [here](https://github.com/spring-projects/spring-framework/tags).\n\n\n\n## Dependency tree\n- org.owasp.webgoat.lesson:http-basics:v8.1.0:-maven\n    - org.springframework.boot:spring-boot-starter-test:2.2.2.RELEASE\n        - org.springframework:spring-test:5.2.2.RELEASE\n\n\n## References\n* Common Weakness Enumeration: [CWE-770](https://cwe.mitre.org/data/definitions/770.html)\n\n","text":"Spring-Framework's spring-expression is vulnerable to a denial-of-service (DoS) condition. This allows an attacker to use crafted input to cause the spring-expression process to crash due to an exception."},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-770"]},"defaultConfiguration":{"level":"warning"}},{"id":"CVE-2021-22118 spring-test 5.2.2.RELEASE: spring-boot-starter-test 2.2.2.RELEASE: org.springframework","shortDescription":{"text":"Transitive Dependency: spring-test 5.2.2.RELEASE from spring-boot-starter-test 2.2.2.RELEASE (CVE-2021-22118)"},"fullDescription":{"text":"Spring Framework is vulnerable to privilege escalation due to the creation of unsafe temporary directories by the WebFlux component. A local authenticated attacker could modify arbitrary files via maliciously crafted `multipart` requests. \n\nThis vulnerability does not affect Spring MVC applications, or applications that do not handle `multipart` file requests."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| spring-test 5.2.2.RELEASE  | 5.3.31  | 6.1.2 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/ba6e9d03-9fbd-4086-9631-99d1ad5e520c?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=09f17d81-b282-43ec-9f2b-36c8021d3ca7)\n\n\n## Description\nSpring Framework is vulnerable to privilege escalation due to the creation of unsafe temporary directories by the WebFlux component. A local authenticated attacker could modify arbitrary files via maliciously crafted `multipart` requests. \n\nThis vulnerability does not affect Spring MVC applications, or applications that do not handle `multipart` file requests.\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [CVE-2021-22118](https://openhub.net/vulnerabilities/bdsa/CVE-2021-22118) - Third-party component usage\n\n\n\n## Solution\nFixed in [**5.3.7**](https://github.com/spring-projects/spring-framework/releases/tag/v5.3.7)  by [this](https://github.com/spring-projects/spring-framework/commit/cce60c479c22101f24b2b4abebb6d79440b120d1) commit and [this](https://github.com/spring-projects/spring-framework/commit/0d0d75e25322d8161002d861fff3ec04ba8be5ac) commit, and in [**5.2.15**](https://github.com/spring-projects/spring-framework/releases/tag/v5.2.15.RELEASE) by [this](https://github.com/spring-projects/spring-framework/commit/85ad63bd35f6f10fa5549ba9a11869144338bd8a) commit.\n\nThe latest stable releases are available [here](https://github.com/spring-projects/spring-framework/releases/).\n\n\n\n## Dependency tree\n- org.owasp.webgoat.lesson:http-basics:v8.1.0:-maven\n    - org.springframework.boot:spring-boot-starter-test:2.2.2.RELEASE\n        - org.springframework:spring-test:5.2.2.RELEASE\n\n\n## References\n* Common Weakness Enumeration: [CWE-264](https://cwe.mitre.org/data/definitions/264.html)\n* Common Weakness Enumeration: [CWE-376](https://cwe.mitre.org/data/definitions/376.html)\n\n","text":"Spring Framework is vulnerable to privilege escalation due to the creation of unsafe temporary directories by the WebFlux component. A local authenticated attacker could modify arbitrary files via maliciously crafted `multipart` requests. \n\nThis vulnerability does not affect Spring MVC applications, or applications that do not handle `multipart` file requests."},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-264","external/cwe/cwe-376"]},"defaultConfiguration":{"level":"warning"}},{"id":"CVE-2022-22970 spring-test 5.2.2.RELEASE: spring-boot-starter-test 2.2.2.RELEASE: org.springframework","shortDescription":{"text":"Transitive Dependency: spring-test 5.2.2.RELEASE from spring-boot-starter-test 2.2.2.RELEASE (CVE-2022-22970)"},"fullDescription":{"text":"Spring Framework is vulnerable to denial-of-service (DoS) due to the improper implementation of data binding functionality. A remote attacker could cause a vulnerable server to crash if that server provides file upload functionality."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| spring-test 5.2.2.RELEASE  | 5.3.31  | 6.1.2 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/ba6e9d03-9fbd-4086-9631-99d1ad5e520c?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=09f17d81-b282-43ec-9f2b-36c8021d3ca7)\n\n\n## Description\nSpring Framework is vulnerable to denial-of-service (DoS) due to the improper implementation of data binding functionality. A remote attacker could cause a vulnerable server to crash if that server provides file upload functionality.\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [CVE-2022-22970](https://openhub.net/vulnerabilities/bdsa/CVE-2022-22970) - Incorrect Provision of Specified Functionality\n\n\n\n## Solution\nFixed in version [**5.3.20**](https://github.com/spring-projects/spring-framework/releases/tag/v5.3.20) and in version [**5.2.22**](https://github.com/spring-projects/spring-framework/releases/tag/v5.2.22.RELEASE).\n\nThe latest stable releases can be found [here](https://github.com/spring-projects/spring-framework/releases).\n\n\n\n## Dependency tree\n- org.owasp.webgoat.lesson:http-basics:v8.1.0:-maven\n    - org.springframework.boot:spring-boot-starter-test:2.2.2.RELEASE\n        - org.springframework:spring-test:5.2.2.RELEASE\n\n\n## References\n* Common Weakness Enumeration: [CWE-684](https://cwe.mitre.org/data/definitions/684.html)\n\n","text":"Spring Framework is vulnerable to denial-of-service (DoS) due to the improper implementation of data binding functionality. A remote attacker could cause a vulnerable server to crash if that server provides file upload functionality."},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-684"]},"defaultConfiguration":{"level":"warning"}},{"id":"CVE-2022-22971 spring-test 5.2.2.RELEASE: spring-boot-starter-test 2.2.2.RELEASE: org.springframework","shortDescription":{"text":"Transitive Dependency: spring-test 5.2.2.RELEASE from spring-boot-starter-test 2.2.2.RELEASE (CVE-2022-22971)"},"fullDescription":{"text":"Spring Framework is vulnerable to denial-of-service (DoS) due to the improper handling of the STOMP protocol for websockets. A remote authenticated attacker could leverage this issue in order to cause a server to crash."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| spring-test 5.2.2.RELEASE  | 5.3.31  | 6.1.2 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/ba6e9d03-9fbd-4086-9631-99d1ad5e520c?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=09f17d81-b282-43ec-9f2b-36c8021d3ca7)\n\n\n## Description\nSpring Framework is vulnerable to denial-of-service (DoS) due to the improper handling of the STOMP protocol for websockets. A remote authenticated attacker could leverage this issue in order to cause a server to crash.\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [CVE-2022-22971](https://openhub.net/vulnerabilities/bdsa/CVE-2022-22971) - Incorrect Provision of Specified Functionality\n\n\n\n## Solution\nFixed in version [**5.3.20**](https://github.com/spring-projects/spring-framework/releases/tag/v5.3.20) and in version [**5.2.22**](https://github.com/spring-projects/spring-framework/releases/tag/v5.2.22.RELEASE).\n\nThe latest stable releases can be found [here](https://github.com/spring-projects/spring-framework/releases).\n\n\n\n## Dependency tree\n- org.owasp.webgoat.lesson:http-basics:v8.1.0:-maven\n    - org.springframework.boot:spring-boot-starter-test:2.2.2.RELEASE\n        - org.springframework:spring-test:5.2.2.RELEASE\n\n\n## References\n* Common Weakness Enumeration: [CWE-684](https://cwe.mitre.org/data/definitions/684.html)\n\n","text":"Spring Framework is vulnerable to denial-of-service (DoS) due to the improper handling of the STOMP protocol for websockets. A remote authenticated attacker could leverage this issue in order to cause a server to crash."},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-684"]},"defaultConfiguration":{"level":"warning"}},{"id":"CVE-2023-20861 spring-test 5.2.2.RELEASE: spring-boot-starter-test 2.2.2.RELEASE: org.springframework","shortDescription":{"text":"Transitive Dependency: spring-test 5.2.2.RELEASE from spring-boot-starter-test 2.2.2.RELEASE (CVE-2023-20861)"},"fullDescription":{"text":"Spring Framework is vulnerable to denial-of-service (DoS) via specially crafted SpEL expressions. An attacker could exploit this issue by passing a crafted SpEL expression to the application which may result in a crash."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| spring-test 5.2.2.RELEASE  | 5.3.31  | 6.1.2 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/ba6e9d03-9fbd-4086-9631-99d1ad5e520c?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=09f17d81-b282-43ec-9f2b-36c8021d3ca7)\n\n\n## Description\nSpring Framework is vulnerable to denial-of-service (DoS) via specially crafted SpEL expressions. An attacker could exploit this issue by passing a crafted SpEL expression to the application which may result in a crash.\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [CVE-2023-20861](https://openhub.net/vulnerabilities/bdsa/CVE-2023-20861) - Weak Input Validation\n\n\n\n## Solution\nFixed in:\n* [**5.2.23**](https://github.com/spring-projects/spring-framework/releases/tag/v5.2.23.RELEASE) by [this](https://github.com/spring-projects/spring-framework/commit/52c93b1c4b24d70de233a958e60e7c5822bd274f) commit,\n* [**5.3.26**](https://github.com/spring-projects/spring-framework/releases/tag/v5.3.26) by [this](https://github.com/spring-projects/spring-framework/commit/430fc25acad2e85cbdddcd52b64481691f03ebd1) commit,\n* [**6.0.7**](https://github.com/spring-projects/spring-framework/releases/tag/v6.0.7) by [this](https://github.com/spring-projects/spring-framework/commit/935c29e3ddba5b19951e54f6685c70ed45d9cbe5) commit.\n\nThe latest stable releases are available [here](https://github.com/spring-projects/spring-framework/releases).\n\n\n\n## Dependency tree\n- org.owasp.webgoat.lesson:http-basics:v8.1.0:-maven\n    - org.springframework.boot:spring-boot-starter-test:2.2.2.RELEASE\n        - org.springframework:spring-test:5.2.2.RELEASE\n\n\n## References\n* Common Weakness Enumeration: [CWE-20](https://cwe.mitre.org/data/definitions/20.html)\n\n","text":"Spring Framework is vulnerable to denial-of-service (DoS) via specially crafted SpEL expressions. An attacker could exploit this issue by passing a crafted SpEL expression to the application which may result in a crash."},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-20"]},"defaultConfiguration":{"level":"warning"}},{"id":"CVE-2023-20863 spring-test 5.2.2.RELEASE: spring-boot-starter-test 2.2.2.RELEASE: org.springframework","shortDescription":{"text":"Transitive Dependency: spring-test 5.2.2.RELEASE from spring-boot-starter-test 2.2.2.RELEASE (CVE-2023-20863)"},"fullDescription":{"text":"Spring Framework is vulnerable to denial-of-service (DoS) via specially crafted SpEL expressions."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| spring-test 5.2.2.RELEASE  | 5.3.31  | 6.1.2 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/ba6e9d03-9fbd-4086-9631-99d1ad5e520c?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=09f17d81-b282-43ec-9f2b-36c8021d3ca7)\n\n\n## Description\nSpring Framework is vulnerable to denial-of-service (DoS) via specially crafted SpEL expressions.\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [CVE-2023-20863](https://openhub.net/vulnerabilities/bdsa/CVE-2023-20863) - Weak Input Validation\n\n\n\n## Solution\nFixed in:\n* [**5.2.24**](https://github.com/spring-projects/spring-framework/releases/tag/v5.2.24.RELEASE)\n* [**5.3.27**](https://github.com/spring-projects/spring-framework/releases/tag/v5.3.27)\n* [**6.0.8**](https://github.com/spring-projects/spring-framework/releases/tag/v6.0.8)\n\nThe latest stable releases are available [here](https://github.com/spring-projects/spring-framework/releases).\n\n\n\n## Dependency tree\n- org.owasp.webgoat.lesson:http-basics:v8.1.0:-maven\n    - org.springframework.boot:spring-boot-starter-test:2.2.2.RELEASE\n        - org.springframework:spring-test:5.2.2.RELEASE\n\n\n## References\n* Common Weakness Enumeration: [CWE-20](https://cwe.mitre.org/data/definitions/20.html)\n\n","text":"Spring Framework is vulnerable to denial-of-service (DoS) via specially crafted SpEL expressions."},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-20"]},"defaultConfiguration":{"level":"warning"}},{"id":"CVE-2020-5421 spring-test 5.2.2.RELEASE: spring-boot-starter-test 2.2.2.RELEASE: org.springframework","shortDescription":{"text":"Transitive Dependency: spring-test 5.2.2.RELEASE from spring-boot-starter-test 2.2.2.RELEASE (CVE-2020-5421)"},"fullDescription":{"text":"It was discovered that Spring Framework was vulnerable to RFD protection bypass. In some instances, depending on the browser used, an attacker could bypass the RFD attack protections via the use of a `jsessionid` path parameter."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| spring-test 5.2.2.RELEASE  | 5.3.31  | 6.1.2 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/ba6e9d03-9fbd-4086-9631-99d1ad5e520c?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=09f17d81-b282-43ec-9f2b-36c8021d3ca7)\n\n\n## Description\nIt was discovered that Spring Framework was vulnerable to RFD protection bypass. In some instances, depending on the browser used, an attacker could bypass the RFD attack protections via the use of a `jsessionid` path parameter.\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [CVE-2020-5421](https://openhub.net/vulnerabilities/bdsa/CVE-2020-5421) - Weak Input Validation\n\n\n\n## Solution\nFixed in:\n* [**5.2.9**](https://github.com/spring-projects/spring-framework/releases/tag/v5.2.9.RELEASE) by [this](https://github.com/spring-projects/spring-framework/commit/899761f0a8890353dc01f10d2af96ae192f3e655) commit,\n* [**5.1.18**](https://github.com/spring-projects/spring-framework/releases/tag/v5.1.18.RELEASE) by [this](https://github.com/spring-projects/spring-framework/commit/a63c8886c00f30fea5b25f50ddf6f56c6eb957bd) commit,\n* [**5.0.19**](https://github.com/spring-projects/spring-framework/releases/tag/v5.0.19.RELEASE) by [this](https://github.com/spring-projects/spring-framework/commit/aec3a4c69e02d87f87258b0ab5c1d6c83f4cb44f) commit,\n* [**4.3.29**](https://github.com/spring-projects/spring-framework/releases/tag/v4.3.29.RELEASE) by [this](https://github.com/spring-projects/spring-framework/commit/2f75212eb667a30fe2fa9b5aca8f22d5e255821f) commit.\n\n\n\n## Dependency tree\n- org.owasp.webgoat.lesson:http-basics:v8.1.0:-maven\n    - org.springframework.boot:spring-boot-starter-test:2.2.2.RELEASE\n        - org.springframework:spring-test:5.2.2.RELEASE\n\n\n## References\n* Common Weakness Enumeration: [CWE-20](https://cwe.mitre.org/data/definitions/20.html)\n\n","text":"It was discovered that Spring Framework was vulnerable to RFD protection bypass. In some instances, depending on the browser used, an attacker could bypass the RFD attack protections via the use of a `jsessionid` path parameter."},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-20"]},"defaultConfiguration":{"level":"warning"}},{"id":"CVE-2022-22968 spring-test 5.2.2.RELEASE: spring-boot-starter-test 2.2.2.RELEASE: org.springframework","shortDescription":{"text":"Transitive Dependency: spring-test 5.2.2.RELEASE from spring-boot-starter-test 2.2.2.RELEASE (CVE-2022-22968)"},"fullDescription":{"text":"Spring Framework is vulnerable to data binding protection bypass due to improper validation of specified disallowed fields in `DataBinders`. This could be leveraged by an attacker to bypass the suggested workaround to **CVE-2022-22965** (**BDSA-2022-0858**) if it is improperly implemented."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| spring-test 5.2.2.RELEASE  | 5.3.31  | 6.1.2 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/ba6e9d03-9fbd-4086-9631-99d1ad5e520c?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=09f17d81-b282-43ec-9f2b-36c8021d3ca7)\n\n\n## Description\nSpring Framework is vulnerable to data binding protection bypass due to improper validation of specified disallowed fields in `DataBinders`. This could be leveraged by an attacker to bypass the suggested workaround to **CVE-2022-22965** (**BDSA-2022-0858**) if it is improperly implemented.\n\n## Vulnerabilities(BDSA,CVE)\n:large_blue_circle: [CVE-2022-22968](https://openhub.net/vulnerabilities/bdsa/CVE-2022-22968) - Weak Input Validation\n\n\n\n## Solution\nFixed  in [**5.3.19**](https://github.com/spring-projects/spring-framework/releases/tag/v5.3.19) by [this](https://github.com/spring-projects/spring-framework/commit/a7cf19cec5ebd270f97a194d749e2d5701ad2ab7) commit and [**5.2.21**](https://github.com/spring-projects/spring-framework/releases/tag/v5.2.21.RELEASE) by [this](https://github.com/spring-projects/spring-framework/commit/833e750175349ab4fd502109a8b41af77e25cdea) commit.\n\n\n\n## Dependency tree\n- org.owasp.webgoat.lesson:http-basics:v8.1.0:-maven\n    - org.springframework.boot:spring-boot-starter-test:2.2.2.RELEASE\n        - org.springframework:spring-test:5.2.2.RELEASE\n\n\n## References\n* Common Weakness Enumeration: [CWE-20](https://cwe.mitre.org/data/definitions/20.html)\n\n","text":"Spring Framework is vulnerable to data binding protection bypass due to improper validation of specified disallowed fields in `DataBinders`. This could be leveraged by an attacker to bypass the suggested workaround to **CVE-2022-22965** (**BDSA-2022-0858**) if it is improperly implemented."},"properties":{"security-severity":"3.8","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-20"]},"defaultConfiguration":{"level":"note"}},{"id":"CVE-2020-27216 jetty-continuation 9.4.24.v20191120: wiremock 2.8.0: org.eclipse.jetty","shortDescription":{"text":"Transitive Dependency: jetty-continuation 9.4.24.v20191120 from wiremock 2.8.0 (CVE-2020-27216)"},"fullDescription":{"text":"Jetty is vulnerable to temporary directory Hijacking via a race condition. If code is executed from this temporary directory it can lead to local privilege escalation."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| jetty-continuation 9.4.24.v20191120  | 9.4.53.20231009  | 9.4.53.20231009 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/ee93672f-853c-4083-a5e8-0d5ab21e8bf9?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=d8221aaa-7d55-4b5a-b3e0-2b5cba26ce60)\n\n\n## Description\nJetty is vulnerable to temporary directory Hijacking via a race condition. If code is executed from this temporary directory it can lead to local privilege escalation.\n\n## Vulnerabilities(BDSA,CVE)\n:orange_circle: [CVE-2020-27216](https://openhub.net/vulnerabilities/bdsa/CVE-2020-27216) - Race Condition due to Improper Synchronization\n\n\n\n## Solution\nFixed in:\n* [**11.0.0.beta3**](https://github.com/eclipse/jetty.project/releases/tag/jetty-11.0.0.beta3)\n* [**10.0.0.beta3**](https://github.com/eclipse/jetty.project/releases/tag/jetty-10.0.0.beta3) \n* [**9.4.33.v20201020**](https://github.com/eclipse/jetty.project/releases/tag/jetty-9.4.33.v20201020) by [this](https://github.com/eclipse/jetty.project/commit/53e0e0e9b25a6309bf24ee3b10984f4145701edb) commit and [this](https://github.com/eclipse/jetty.project/commit/9ad6beb80543b392c91653f6bfce233fc75b9d5f) commit.\n\n## Workaround\nSet a temporary directory, either for the server or the context, to one outside the shared temporary file system. For recent releases, a temporary directory by created by making a directory called work in the `${jetty.base}` directory (the parent directory of the webapps directory). Alternately the java temporary directory can be set with the System Property `java.io.tmpdir`. A more detailed description of how jetty selects a temporary directory is below.\n\nTo mitigate this vulnerability the directory must be set to one that is not writable by an attacker. To avoid information leakage, the directory should also not be readable by an attacker.\n\n## Dependency tree\n- org.owasp.webgoat.lesson:xxe:v8.1.0:-maven\n    - com.github.tomakehurst:wiremock:2.8.0\n        - org.eclipse.jetty:jetty-servlets:9.4.24.v20191120\n            - org.eclipse.jetty:jetty-continuation:9.4.24.v20191120\n\n\n## References\n* Common Weakness Enumeration: [CWE-362](https://cwe.mitre.org/data/definitions/362.html)\n\n","text":"Jetty is vulnerable to temporary directory Hijacking via a race condition. If code is executed from this temporary directory it can lead to local privilege escalation."},"properties":{"security-severity":"8.9","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-362"]},"defaultConfiguration":{"level":"error"}},{"id":"CVE-2023-44487 jetty-continuation 9.4.24.v20191120: wiremock 2.8.0: org.eclipse.jetty","shortDescription":{"text":"Transitive Dependency: jetty-continuation 9.4.24.v20191120 from wiremock 2.8.0 (CVE-2023-44487)"},"fullDescription":{"text":"The HTTP/2 protocol contains a flaw related to the stream multiplexing feature that can allow for excessive resource consumption on servers operating implementations of the HTTP/2 protocol. \n\nThe HTTP/2 protocol allows clients to signal to a server to cancel a previously opened stream by sending an `RST_STREAM` frame. Attackers can abuse this stream canceling ability by opening a large number of streams at once immediately followed by `RST_STREAM` frames. In most HTTP/2 implementations this bypasses concurrent open stream limits and causes servers to spend processing time first handling request frames and then performing stream tear downs. For the server, these operations can pile up whereas the attacker client paid minuscule bandwidth and processing costs.\n\n[Amazon](https://aws.amazon.com/security/security-bulletins/AWS-2023-011/), [Cloudflare](https://blog.cloudflare.com/technical-breakdown-http2-rapid-reset-ddos-attack/) and [Google](https://cloud.google.com/blog/products/identity-security/google-cloud-mitigated-largest-ddos-attack-peaking-above-398-million-rps/) have reported that this vulnerability has been exploited in the wild from August to October 2023.\n\nThis vulnerability is listed as exploitable by the Cybersecurity \u0026 Infrastructure Security Agency in their [Known Exploited Vulnerabilities Catalog](https://www.cisa.gov/known-exploited-vulnerabilities-catalog)."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| jetty-continuation 9.4.24.v20191120  | 9.4.53.20231009  | 9.4.53.20231009 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/ee93672f-853c-4083-a5e8-0d5ab21e8bf9?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=d8221aaa-7d55-4b5a-b3e0-2b5cba26ce60)\n\n\n## Description\nThe HTTP/2 protocol contains a flaw related to the stream multiplexing feature that can allow for excessive resource consumption on servers operating implementations of the HTTP/2 protocol. \n\nThe HTTP/2 protocol allows clients to signal to a server to cancel a previously opened stream by sending an `RST_STREAM` frame. Attackers can abuse this stream canceling ability by opening a large number of streams at once immediately followed by `RST_STREAM` frames. In most HTTP/2 implementations this bypasses concurrent open stream limits and causes servers to spend processing time first handling request frames and then performing stream tear downs. For the server, these operations can pile up whereas the attacker client paid minuscule bandwidth and processing costs.\n\n[Amazon](https://aws.amazon.com/security/security-bulletins/AWS-2023-011/), [Cloudflare](https://blog.cloudflare.com/technical-breakdown-http2-rapid-reset-ddos-attack/) and [Google](https://cloud.google.com/blog/products/identity-security/google-cloud-mitigated-largest-ddos-attack-peaking-above-398-million-rps/) have reported that this vulnerability has been exploited in the wild from August to October 2023.\n\nThis vulnerability is listed as exploitable by the Cybersecurity \u0026 Infrastructure Security Agency in their [Known Exploited Vulnerabilities Catalog](https://www.cisa.gov/known-exploited-vulnerabilities-catalog).\n\n## Vulnerabilities(BDSA,CVE)\n:orange_circle: [CVE-2023-44487](https://openhub.net/vulnerabilities/bdsa/CVE-2023-44487) - Uncontrolled Resource Consumption\n\n\n\n## Solution\nFixed in:\n* nghttp2 [**1.57.0**](https://github.com/nghttp2/nghttp2/releases/tag/v1.57.0) by [this](https://github.com/nghttp2/nghttp2/commit/72b4af6143681f528f1d237b21a9a7aee1738832) commit,\n* NGINX [**1.25.3**](https://hg.nginx.org/nginx/rev/release-1.25.3) by [this](https://hg.nginx.org/nginx/rev/cdda286c0f1b) revision,\n* Apache Tomcat \n\t* [**8.5.94**](https://github.com/apache/tomcat/releases/tag/8.5.94) by [this](https://github.com/apache/tomcat/commit/944332bb15bd2f3bf76ec2caeb1ff0a58a3bc628) commit,\n\t* [**9.0.81**](https://github.com/apache/tomcat/releases/tag/9.0.81) by [this](https://github.com/apache/tomcat/commit/6d1a9fd6642387969e4410b9989c85856b74917a) commit,\n\t* [**10.1.14**](https://github.com/apache/tomcat/releases/tag/10.1.14) by [this](https://github.com/apache/tomcat/commit/76bb4bfbfeae827dce896f650655bbf6e251ed49) commit,\n\t* [**11.0.0-M12**](https://github.com/apache/tomcat/releases/tag/11.0.0-M12) by [this](https://github.com/apache/tomcat/commit/9cdfe25bad707f34b3e5da2994f3f1952a163c3e) commit,\n* Apache Traffic Server\n\t* [**9.2.3-rc0**](https://github.com/apache/trafficserver/releases/tag/9.2.3-rc0) by [this](https://github.com/apache/trafficserver/commit/b28ad74f117307e8de206f1de70c3fa716f90682) commit,\n\t* [**8.1.9-rc0**](https://github.com/apache/trafficserver/releases/tag/8.1.9-rc0) by [this](https://github.com/apache/trafficserver/commit/d742d74039aaa548dda0148ab4ba207906abc620) commit,\n* Netty/Codec/HTTP2 [**4.1.100.Final**](https://mvnrepository.com/artifact/io.netty/netty-codec-http2/4.1.100.Final) by [this](https://github.com/netty/netty/commit/58f75f665aa81a8cbcf6ffa74820042a285c5e61) commit,\n* Eclipse Jetty\n\t* [**12.0.2**](https://github.com/jetty/jetty.project/releases/tag/jetty-12.0.2), [**11.0.17**](https://github.com/jetty/jetty.project/releases/tag/jetty-11.0.17), [**10.0.17**](https://github.com/jetty/jetty.project/releases/tag/jetty-10.0.17) by [this](https://github.com/jetty/jetty.project/commit/dbb94514dc9d3fb21fe92080f57c314e7e06a148) commit,\n\t* [**9.4.53.v20231009**](https://github.com/jetty/jetty.project/releases/tag/jetty-9.4.53.v20231009) by [this](https://github.com/jetty/jetty.project/commit/0f246d12090fb15b7b21dee8429f459fd792de53) commit.\n* lighttpd [**1.4.73**](https://github.com/lighttpd/lighttpd1.4/releases/tag/lighttpd-1.4.73) by [this](https://github.com/lighttpd/lighttpd1.4/commit/7b48f3c843e1113b27f5d278f4d10861cc499a06) commit.\n* grpc-go \n  * [**1.56.3**](https://github.com/grpc/grpc-go/releases/tag/v1.56.3) by [this](https://github.com/grpc/grpc-go/commit/5efd7bd7) commit,\n  * [**1.57.1**](https://github.com/grpc/grpc-go/releases/tag/v1.57.1) by [this](https://github.com/grpc/grpc-go/commit/6a1400d5) commit,\n  * [**1.58.3**](https://github.com/grpc/grpc-go/releases/tag/v1.58.3) by [this](https://github.com/grpc/grpc-go/commit/c40c9ba3) commit,\n * h2o fixed in the **master** branch by [this](https://github.com/h2o/h2o/commit/28fe15117b909588bf14269a0e1c6ec4548579fe) commit which is not yet included in any release.\n\n## Workaround\nDepending on technologies use and their configuration, different mitigation strategies may be available.\n\nIn some cases, it may be possible to limit the amount of `RST_STREAM` frame frames that are processed within a given time by configuring the particular HTTP/2 implementation manually. Please refer to your software vendor's advisories for more information.\n\n## Dependency tree\n- org.owasp.webgoat.lesson:xxe:v8.1.0:-maven\n    - com.github.tomakehurst:wiremock:2.8.0\n        - org.eclipse.jetty:jetty-servlets:9.4.24.v20191120\n            - org.eclipse.jetty:jetty-continuation:9.4.24.v20191120\n\n\n## References\n* Common Weakness Enumeration: [CWE-400](https://cwe.mitre.org/data/definitions/400.html)\n\n","text":"The HTTP/2 protocol contains a flaw related to the stream multiplexing feature that can allow for excessive resource consumption on servers operating implementations of the HTTP/2 protocol. \n\nThe HTTP/2 protocol allows clients to signal to a server to cancel a previously opened stream by sending an `RST_STREAM` frame. Attackers can abuse this stream canceling ability by opening a large number of streams at once immediately followed by `RST_STREAM` frames. In most HTTP/2 implementations this bypasses concurrent open stream limits and causes servers to spend processing time first handling request frames and then performing stream tear downs. For the server, these operations can pile up whereas the attacker client paid minuscule bandwidth and processing costs.\n\n[Amazon](https://aws.amazon.com/security/security-bulletins/AWS-2023-011/), [Cloudflare](https://blog.cloudflare.com/technical-breakdown-http2-rapid-reset-ddos-attack/) and [Google](https://cloud.google.com/blog/products/identity-security/google-cloud-mitigated-largest-ddos-attack-peaking-above-398-million-rps/) have reported that this vulnerability has been exploited in the wild from August to October 2023.\n\nThis vulnerability is listed as exploitable by the Cybersecurity \u0026 Infrastructure Security Agency in their [Known Exploited Vulnerabilities Catalog](https://www.cisa.gov/known-exploited-vulnerabilities-catalog)."},"properties":{"security-severity":"8.9","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-400"]},"defaultConfiguration":{"level":"error"}},{"id":"CVE-2020-27223 jetty-continuation 9.4.24.v20191120: wiremock 2.8.0: org.eclipse.jetty","shortDescription":{"text":"Transitive Dependency: jetty-continuation 9.4.24.v20191120 from wiremock 2.8.0 (CVE-2020-27223)"},"fullDescription":{"text":"Jetty is vulnerable to denial-of-service (DoS) due to the use of an exponential algorithm that can have excessive resource requirements. A remote attacker could cause a vulnerable server to become unresponsive by sending maliciously crafted HTTP requests to that server."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| jetty-continuation 9.4.24.v20191120  | 9.4.53.20231009  | 9.4.53.20231009 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/ee93672f-853c-4083-a5e8-0d5ab21e8bf9?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=d8221aaa-7d55-4b5a-b3e0-2b5cba26ce60)\n\n\n## Description\nJetty is vulnerable to denial-of-service (DoS) due to the use of an exponential algorithm that can have excessive resource requirements. A remote attacker could cause a vulnerable server to become unresponsive by sending maliciously crafted HTTP requests to that server.\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [CVE-2020-27223](https://openhub.net/vulnerabilities/bdsa/CVE-2020-27223) - Inefficient Algorithmic Complexity\n\n\n\n## Solution\nFixed by [this](https://github.com/eclipse/jetty.project/commit/10e531756b972162eed402c44d0244f7f6b85131) commit in:\n* [**11.0.1**](https://github.com/eclipse/jetty.project/releases/tag/jetty-11.0.1)\n* [**10.0.1**](https://github.com/eclipse/jetty.project/releases/tag/jetty-10.0.1)\n* [**9.4.37.v20210219**](https://github.com/eclipse/jetty.project/releases/tag/jetty-9.4.37.v20210219)\n\nThe latest stable releases are available [here](https://github.com/eclipse/jetty.project/releases).\n\n## Workaround\nThe vendor has stated that the following workarounds are effective:\n\n* Don't use the default error page or handler.\n* Don't deploy an instance of `StatisticsServlet` that is exposed to the network.\n* Don't call the `getLocale` API.\n* Don't enable precompressed static content in instances of `DefaultServlet`.\n* Deploy a rule that limits the number and size of `Accept-*` header fields.\n\n## Dependency tree\n- org.owasp.webgoat.lesson:xxe:v8.1.0:-maven\n    - com.github.tomakehurst:wiremock:2.8.0\n        - org.eclipse.jetty:jetty-servlets:9.4.24.v20191120\n            - org.eclipse.jetty:jetty-continuation:9.4.24.v20191120\n\n\n## References\n* Common Weakness Enumeration: [CWE-407](https://cwe.mitre.org/data/definitions/407.html)\n\n","text":"Jetty is vulnerable to denial-of-service (DoS) due to the use of an exponential algorithm that can have excessive resource requirements. A remote attacker could cause a vulnerable server to become unresponsive by sending maliciously crafted HTTP requests to that server."},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-407"]},"defaultConfiguration":{"level":"warning"}},{"id":"CVE-2021-28165 jetty-continuation 9.4.24.v20191120: wiremock 2.8.0: org.eclipse.jetty","shortDescription":{"text":"Transitive Dependency: jetty-continuation 9.4.24.v20191120 from wiremock 2.8.0 (CVE-2021-28165)"},"fullDescription":{"text":"Eclipse Jetty is vulnerable to Denial-of-Service (DoS) via invalid TLS frames. An attacker could exploit this by sending a TLS frame with a size in excess of 17408 resulting in excessive resource consumption leading to a DoS condition."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| jetty-continuation 9.4.24.v20191120  | 9.4.53.20231009  | 9.4.53.20231009 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/ee93672f-853c-4083-a5e8-0d5ab21e8bf9?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=d8221aaa-7d55-4b5a-b3e0-2b5cba26ce60)\n\n\n## Description\nEclipse Jetty is vulnerable to Denial-of-Service (DoS) via invalid TLS frames. An attacker could exploit this by sending a TLS frame with a size in excess of 17408 resulting in excessive resource consumption leading to a DoS condition.\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [CVE-2021-28165](https://openhub.net/vulnerabilities/bdsa/CVE-2021-28165) - Uncontrolled Resource Consumption\n\n\n\n## Solution\nFixed in [**10.0.2**](https://github.com/eclipse/jetty.project/releases/tag/jetty-10.0.2) and [**11.0.2**](https://github.com/eclipse/jetty.project/releases/tag/jetty-11.0.2) by [this](https://github.com/eclipse/jetty.project/commit/be22761a20a1685365c8e0356bf09b47e574cfd9) and [this](https://github.com/eclipse/jetty.project/commit/039c7386d0f3087d7c8aa19ea6001b24c95b9f16) commit.\nFixed in [**9.4.39.v20210325**](https://github.com/eclipse/jetty.project/releases/tag/jetty-9.4.39.v20210325) by [this](https://github.com/eclipse/jetty.project/commit/00d379c94ba865dced2025c2d1bc3e2e0e41e880) and [this](https://github.com/eclipse/jetty.project/commit/294b2ba02b667548617a94cd99592110ac230add) commit. \n\nThe latest stable releases are available [here](https://github.com/eclipse/jetty.project/releases).\n\n## Workaround\nThe problem can be worked around by compiling the following class:\n```\npackage org.eclipse.jetty.server.ssl.fix6072;\n\nimport java.nio.ByteBuffer;\nimport javax.net.ssl.SSLEngine;\nimport javax.net.ssl.SSLEngineResult;\nimport javax.net.ssl.SSLException;\nimport javax.net.ssl.SSLHandshakeException;\n\nimport org.eclipse.jetty.io.EndPoint;\nimport org.eclipse.jetty.io.ssl.SslConnection;\nimport org.eclipse.jetty.server.Connector;\nimport org.eclipse.jetty.server.SslConnectionFactory;\nimport org.eclipse.jetty.util.BufferUtil;\nimport org.eclipse.jetty.util.annotation.Name;\nimport org.eclipse.jetty.util.ssl.SslContextFactory;\n\npublic class SpaceCheckingSslConnectionFactory extends SslConnectionFactory\n{\n    public SpaceCheckingSslConnectionFactory(@Name(\"sslContextFactory\") SslContextFactory factory, @Name(\"next\") String nextProtocol)\n    {\n        super(factory, nextProtocol);\n    }\n\n    @Override\n    protected SslConnection newSslConnection(Connector connector, EndPoint endPoint, SSLEngine engine)\n    {\n        return new SslConnection(connector.getByteBufferPool(), connector.getExecutor(), endPoint, engine, isDirectBuffersForEncryption(), isDirectBuffersForDecryption())\n        {\n            @Override\n            protected SSLEngineResult unwrap(SSLEngine sslEngine, ByteBuffer input, ByteBuffer output) throws SSLException\n            {\n                SSLEngineResult results = super.unwrap(sslEngine, input, output);\n\n                if ((results.getStatus() == SSLEngineResult.Status.BUFFER_UNDERFLOW ||\n                    results.getStatus() == SSLEngineResult.Status.OK \u0026\u0026 results.bytesConsumed() == 0 \u0026\u0026 results.bytesProduced() == 0) \u0026\u0026\n                    BufferUtil.space(input) == 0)\n                {\n                    BufferUtil.clear(input);\n                    throw new SSLHandshakeException(\"Encrypted buffer max length exceeded\");\n                }\n                return results;\n            }\n        };\n    }\n}\n```\n\nThis class can be deployed by:\n* The resulting class file should be put into a jar file (eg `sslfix6072.jar`)\n* The jar file should be made available to the server. For a normal distribution this can be done by putting the file into `${jetty.base}/lib`\n* Copy the file `${jetty.home}/modules/ssl.mod` to `${jetty.base}/modules`\n* Edit the `${jetty.base}/modules/ssl.mod` file to have the following section:\n```\n[lib]\nlib/sslfix6072.jar\n```\n\n* Copy the file `${jetty.home}/etc/jetty-https.xml` and `${jetty.home}/etc/jetty-http2.xml` to `${jetty.base}/etc`\n* Edit files `${jetty.base}/etc/jetty-https.xml` and `${jetty.base}/etc/jetty-http2.xml`, changing any reference of `org.eclipse.jetty.server.SslConnectionFactory` to `org.eclipse.jetty.server.ssl.fix6072.SpaceCheckingSslConnectionFactory`. \n\nFor example:\n```\n  \u003cCall name=\"addIfAbsentConnectionFactory\"\u003e\n    \u003cArg\u003e\n      \u003cNew class=\"org.eclipse.jetty.server.ssl.fix6072.SpaceCheckingSslConnectionFactory\"\u003e\n        \u003cArg name=\"next\"\u003ehttp/1.1\u003c/Arg\u003e\n        \u003cArg name=\"sslContextFactory\"\u003e\u003cRef refid=\"sslContextFactory\"/\u003e\u003c/Arg\u003e\n      \u003c/New\u003e\n    \u003c/Arg\u003e\n  \u003c/Call\u003e\n```\nRestart Jetty\n\n## Dependency tree\n- org.owasp.webgoat.lesson:xxe:v8.1.0:-maven\n    - com.github.tomakehurst:wiremock:2.8.0\n        - org.eclipse.jetty:jetty-servlets:9.4.24.v20191120\n            - org.eclipse.jetty:jetty-continuation:9.4.24.v20191120\n\n\n## References\n* Common Weakness Enumeration: [CWE-400](https://cwe.mitre.org/data/definitions/400.html)\n\n","text":"Eclipse Jetty is vulnerable to Denial-of-Service (DoS) via invalid TLS frames. An attacker could exploit this by sending a TLS frame with a size in excess of 17408 resulting in excessive resource consumption leading to a DoS condition."},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-400"]},"defaultConfiguration":{"level":"warning"}},{"id":"CVE-2021-28169 jetty-continuation 9.4.24.v20191120: wiremock 2.8.0: org.eclipse.jetty","shortDescription":{"text":"Transitive Dependency: jetty-continuation 9.4.24.v20191120 from wiremock 2.8.0 (CVE-2021-28169)"},"fullDescription":{"text":"Jetty is vulnerable to information disclosure due to improper requested path verification. This allows crafted requests to access protected resources of the web application which, depending on the implementation, might reveal sensitive information."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| jetty-continuation 9.4.24.v20191120  | 9.4.53.20231009  | 9.4.53.20231009 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/ee93672f-853c-4083-a5e8-0d5ab21e8bf9?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=d8221aaa-7d55-4b5a-b3e0-2b5cba26ce60)\n\n\n## Description\nJetty is vulnerable to information disclosure due to improper requested path verification. This allows crafted requests to access protected resources of the web application which, depending on the implementation, might reveal sensitive information.\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [CVE-2021-28169](https://openhub.net/vulnerabilities/bdsa/CVE-2021-28169) - Directory Traversal\n\n\n\n## Solution\nFixed in [**9.4.41**](https://github.com/eclipse/jetty.project/releases/tag/jetty-9.4.41.v20210512) by [this](https://github.com/eclipse/jetty.project/commit/1c05b0bcb1) commit.\n\nFixed in [**10.0.3**](https://github.com/eclipse/jetty.project/releases/tag/jetty-10.0.3) and [**11.0.3**](https://github.com/eclipse/jetty.project/releases/tag/jetty-11.0.3) by [this](https://github.com/eclipse/jetty.project/commit/f58dbedcd0) commit.\n\nThe latest stable releases are available [here](https://www.eclipse.org/jetty/download.php).\n\n## Workaround\nThe vendor provides the following workaround:\n\nIf you cannot update to the latest version of Jetty, you can instead deploy your own version of the `ConcatServlet` and/or the `WelcomeFilter` by using the code from the latest version of Jetty.\n\n## Dependency tree\n- org.owasp.webgoat.lesson:xxe:v8.1.0:-maven\n    - com.github.tomakehurst:wiremock:2.8.0\n        - org.eclipse.jetty:jetty-servlets:9.4.24.v20191120\n            - org.eclipse.jetty:jetty-continuation:9.4.24.v20191120\n\n\n## References\n* Common Weakness Enumeration: [CWE-22](https://cwe.mitre.org/data/definitions/22.html)\n\n","text":"Jetty is vulnerable to information disclosure due to improper requested path verification. This allows crafted requests to access protected resources of the web application which, depending on the implementation, might reveal sensitive information."},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-22"]},"defaultConfiguration":{"level":"warning"}},{"id":"CVE-2023-36478 jetty-continuation 9.4.24.v20191120: wiremock 2.8.0: org.eclipse.jetty","shortDescription":{"text":"Transitive Dependency: jetty-continuation 9.4.24.v20191120 from wiremock 2.8.0 (CVE-2023-36478)"},"fullDescription":{"text":"Eclipse Jetty is vulnerable to a denial-of-service (DoS) issue due to presence of a user input validation flaw in the HTTP/2 HPACK functionality that can lead to an integer overflow and allow HPACK headers to exceed their expected size limits.\n\nAn attacker could submit crafted HTTP messages that trigger the integer overflow flaw and cause large buffers to be allocated on the server, consuming memory resources in a manner that could cause the server to run out of memory."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| jetty-continuation 9.4.24.v20191120  | 9.4.53.20231009  | 9.4.53.20231009 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/ee93672f-853c-4083-a5e8-0d5ab21e8bf9?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=d8221aaa-7d55-4b5a-b3e0-2b5cba26ce60)\n\n\n## Description\nEclipse Jetty is vulnerable to a denial-of-service (DoS) issue due to presence of a user input validation flaw in the HTTP/2 HPACK functionality that can lead to an integer overflow and allow HPACK headers to exceed their expected size limits.\n\nAn attacker could submit crafted HTTP messages that trigger the integer overflow flaw and cause large buffers to be allocated on the server, consuming memory resources in a manner that could cause the server to run out of memory.\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [CVE-2023-36478](https://openhub.net/vulnerabilities/bdsa/CVE-2023-36478) - Integer Overflow / Underflow\n\n\n\n## Solution\nFixed in:\n* [**9.4.53.v20231009**](https://github.com/jetty/jetty.project/releases/tag/jetty-9.4.53.v20231009) by [this](https://github.com/jetty/jetty.project/commit/c7a4b05fc735e73e7522cb617c079045b709957b) commit and [this](https://github.com/jetty/jetty.project/commit/a4d61e9eb026ec98c79107e840cabdf520482c56) commit,\n* [**10.0.16**](https://github.com/jetty/jetty.project/releases/tag/jetty-10.0.16), [**11.0.16**](https://github.com/jetty/jetty.project/releases/tag/jetty-11.0.16) and [**12.0.0.beta2x**](https://github.com/jetty/jetty.project/releases/tag/jetty-12.0.0.beta2x) by [this](https://github.com/jetty/jetty.project/commit/a8c9eea75bffcb2b2557acefb75856707654a56f) commit and [this](https://github.com/jetty/jetty.project/commit/420ec7cc1db65b42693dc002aca0faa567f62f7e) commit.\n\nThe latest stable releases can be found [here](https://eclipse.dev/jetty/download.php).\n\n\n\n## Dependency tree\n- org.owasp.webgoat.lesson:xxe:v8.1.0:-maven\n    - com.github.tomakehurst:wiremock:2.8.0\n        - org.eclipse.jetty:jetty-servlets:9.4.24.v20191120\n            - org.eclipse.jetty:jetty-continuation:9.4.24.v20191120\n\n\n## References\n* Common Weakness Enumeration: [CWE-190](https://cwe.mitre.org/data/definitions/190.html)\n* Common Weakness Enumeration: [CWE-400](https://cwe.mitre.org/data/definitions/400.html)\n\n","text":"Eclipse Jetty is vulnerable to a denial-of-service (DoS) issue due to presence of a user input validation flaw in the HTTP/2 HPACK functionality that can lead to an integer overflow and allow HPACK headers to exceed their expected size limits.\n\nAn attacker could submit crafted HTTP messages that trigger the integer overflow flaw and cause large buffers to be allocated on the server, consuming memory resources in a manner that could cause the server to run out of memory."},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-190","external/cwe/cwe-400"]},"defaultConfiguration":{"level":"warning"}},{"id":"CVE-2022-2048 jetty-continuation 9.4.24.v20191120: wiremock 2.8.0: org.eclipse.jetty","shortDescription":{"text":"Transitive Dependency: jetty-continuation 9.4.24.v20191120 from wiremock 2.8.0 (CVE-2022-2048)"},"fullDescription":{"text":"Eclipse Jetty does not correctly handle invalid HTTP/2 requests. An attacker could exploit this flaw to exhaust the HTTP/2 flow control window or TCP congest the connection. This will cause the relevant selector threads to be blocked and it will lead to a denial-of-service (DoS)."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| jetty-continuation 9.4.24.v20191120  | 9.4.53.20231009  | 9.4.53.20231009 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/ee93672f-853c-4083-a5e8-0d5ab21e8bf9?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=d8221aaa-7d55-4b5a-b3e0-2b5cba26ce60)\n\n\n## Description\nEclipse Jetty does not correctly handle invalid HTTP/2 requests. An attacker could exploit this flaw to exhaust the HTTP/2 flow control window or TCP congest the connection. This will cause the relevant selector threads to be blocked and it will lead to a denial-of-service (DoS).\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [CVE-2022-2048](https://openhub.net/vulnerabilities/bdsa/CVE-2022-2048) - Insufficient Resource Pool\n\n\n\n## Solution\nFixed in:\n* **[9.4.47](https://github.com/eclipse/jetty.project/releases/tag/jetty-9.4.47.v20220610)** by [this](https://github.com/eclipse/jetty.project/commit/be912d4315839405a8ae601f2e4ee0306867266e) commit,\n* **[10.0.10](https://github.com/eclipse/jetty.project/releases/tag/jetty-10.0.10)** and **[11.0.10](https://github.com/eclipse/jetty.project/releases/tag/jetty-11.0.10)** by [this](https://github.com/eclipse/jetty.project/commit/b705091afb9158b39590fa36b9b84795524a8f0b) commit.\n\n\nThe latest stable releases can be found [here](https://github.com/eclipse/jetty.project/releases).\n\n## Workaround\nThe vendor recommends users to filter the requests before they are sent to Jetty. One way to filter them would be to use a proxy.\n\n## Dependency tree\n- org.owasp.webgoat.lesson:xxe:v8.1.0:-maven\n    - com.github.tomakehurst:wiremock:2.8.0\n        - org.eclipse.jetty:jetty-servlets:9.4.24.v20191120\n            - org.eclipse.jetty:jetty-continuation:9.4.24.v20191120\n\n\n## References\n* Common Weakness Enumeration: [CWE-410](https://cwe.mitre.org/data/definitions/410.html)\n* Common Weakness Enumeration: [CWE-664](https://cwe.mitre.org/data/definitions/664.html)\n\n","text":"Eclipse Jetty does not correctly handle invalid HTTP/2 requests. An attacker could exploit this flaw to exhaust the HTTP/2 flow control window or TCP congest the connection. This will cause the relevant selector threads to be blocked and it will lead to a denial-of-service (DoS)."},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-410","external/cwe/cwe-664"]},"defaultConfiguration":{"level":"warning"}},{"id":"CVE-2020-27218 jetty-continuation 9.4.24.v20191120: wiremock 2.8.0: org.eclipse.jetty","shortDescription":{"text":"Transitive Dependency: jetty-continuation 9.4.24.v20191120 from wiremock 2.8.0 (CVE-2020-27218)"},"fullDescription":{"text":"Eclipse Jetty contains a vulnerability that allows a remote attacker to inject data into other client's requests. This vulnerability only exists when GZIP request body inflation is enabled, and requests from different clients are multiplexed onto a single connection."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| jetty-continuation 9.4.24.v20191120  | 9.4.53.20231009  | 9.4.53.20231009 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/ee93672f-853c-4083-a5e8-0d5ab21e8bf9?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=d8221aaa-7d55-4b5a-b3e0-2b5cba26ce60)\n\n\n## Description\nEclipse Jetty contains a vulnerability that allows a remote attacker to inject data into other client's requests. This vulnerability only exists when GZIP request body inflation is enabled, and requests from different clients are multiplexed onto a single connection.\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [CVE-2020-27218](https://openhub.net/vulnerabilities/bdsa/CVE-2020-27218) - Sensitive Information in Resource Not Removed Before Reuse\n\n\n\n## Solution\nFixed in **[9.4.35.v20201120](https://github.com/eclipse/jetty.project/releases/tag/jetty-9.4.35.v20201120)** by [this](https://github.com/eclipse/jetty.project/commit/850a0330ff25da42b1b1cbdbdca0fcc0c40e47e9) commit.\n\nFixed in **[10.0.0.beta3](https://github.com/eclipse/jetty.project/releases/tag/jetty-10.0.0.beta3)** and in **[11.0.0.beta3](https://github.com/eclipse/jetty.project/releases/tag/jetty-11.0.0.beta3)** by [this](https://github.com/eclipse/jetty.project/commit/34d27e85483c119b7dd1aa9beda735844d14b605) commit.\n\n## Workaround\nThe vendor states that any of the following will mitigate this vulnerability:\n\n\n\u003e * Disabling compressed request body inflation by GzipHandler.\n\u003e * By always fully consuming the request content before sending a response.\n\u003e * By adding a Connection: close to any response where the servlet does not fully consume request content.\n\n## Dependency tree\n- org.owasp.webgoat.lesson:xxe:v8.1.0:-maven\n    - com.github.tomakehurst:wiremock:2.8.0\n        - org.eclipse.jetty:jetty-servlets:9.4.24.v20191120\n            - org.eclipse.jetty:jetty-continuation:9.4.24.v20191120\n\n\n## References\n* Common Weakness Enumeration: [CWE-226](https://cwe.mitre.org/data/definitions/226.html)\n\n","text":"Eclipse Jetty contains a vulnerability that allows a remote attacker to inject data into other client's requests. This vulnerability only exists when GZIP request body inflation is enabled, and requests from different clients are multiplexed onto a single connection."},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-226"]},"defaultConfiguration":{"level":"warning"}},{"id":"CVE-2023-26048 jetty-continuation 9.4.24.v20191120: wiremock 2.8.0: org.eclipse.jetty","shortDescription":{"text":"Transitive Dependency: jetty-continuation 9.4.24.v20191120 from wiremock 2.8.0 (CVE-2023-26048)"},"fullDescription":{"text":"Eclipse Jetty contains a vulnerability in its multipart request parsing mechanism that can lead to an out-of-memory error due to insufficient limiting measures. An attacker can exploit this flaw by supplying a request containing a large multipart without a filename in order to cause a denial-of-service (DoS)."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| jetty-continuation 9.4.24.v20191120  | 9.4.53.20231009  | 9.4.53.20231009 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/ee93672f-853c-4083-a5e8-0d5ab21e8bf9?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=d8221aaa-7d55-4b5a-b3e0-2b5cba26ce60)\n\n\n## Description\nEclipse Jetty contains a vulnerability in its multipart request parsing mechanism that can lead to an out-of-memory error due to insufficient limiting measures. An attacker can exploit this flaw by supplying a request containing a large multipart without a filename in order to cause a denial-of-service (DoS).\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [CVE-2023-26048](https://openhub.net/vulnerabilities/bdsa/CVE-2023-26048) - Uncontrolled Resource Consumption\n\n\n\n## Solution\nFixed in [**jetty-9.4.51.v20230217**](https://github.com/eclipse/jetty.project/releases/tag/jetty-9.4.51.v20230217) by [this](https://github.com/eclipse/jetty.project/commit/c3021592218da289563987e6f7fbe05f8704b285) commit.\n\nFixed by [this](https://github.com/eclipse/jetty.project/commit/622befbd0d52f61c1acd41b4ef12458311494f1a) commit in:\n* **[jetty-10.0.14](https://github.com/eclipse/jetty.project/releases/tag/jetty-10.0.14)**\n* **[jetty-11.0.14](https://github.com/eclipse/jetty.project/releases/tag/jetty-11.0.14)**\n* **[jetty-12.0.0.beta0](https://github.com/eclipse/jetty.project/releases/tag/jetty-12.0.0.beta0)**\n\nThe latest stable releases can be found [here](https://github.com/eclipse/jetty.project/releases).\n\n## Workaround\nIt is recommended to set the multipart parameter `maxRequestSize` to a non-negative value in order to limit the whole multipart content. It has also been stated that limiting the multipart parameter `maxFileSize` will not be enough since the attacker can supply a large number of parts that, when summed up, will cause memory issues.\n\n## Dependency tree\n- org.owasp.webgoat.lesson:xxe:v8.1.0:-maven\n    - com.github.tomakehurst:wiremock:2.8.0\n        - org.eclipse.jetty:jetty-servlets:9.4.24.v20191120\n            - org.eclipse.jetty:jetty-continuation:9.4.24.v20191120\n\n\n## References\n* Common Weakness Enumeration: [CWE-400](https://cwe.mitre.org/data/definitions/400.html)\n* Common Weakness Enumeration: [CWE-770](https://cwe.mitre.org/data/definitions/770.html)\n\n","text":"Eclipse Jetty contains a vulnerability in its multipart request parsing mechanism that can lead to an out-of-memory error due to insufficient limiting measures. An attacker can exploit this flaw by supplying a request containing a large multipart without a filename in order to cause a denial-of-service (DoS)."},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-400","external/cwe/cwe-770"]},"defaultConfiguration":{"level":"warning"}},{"id":"CVE-2023-26049 jetty-continuation 9.4.24.v20191120: wiremock 2.8.0: org.eclipse.jetty","shortDescription":{"text":"Transitive Dependency: jetty-continuation 9.4.24.v20191120 from wiremock 2.8.0 (CVE-2023-26049)"},"fullDescription":{"text":"Eclipse Jetty does not properly parse quoted values in cookies. This could allow an attacker to smuggle cookies within other cookies into the application. The attacker can also tamper with the cookie parsing mechanism and cause other unintended behavior."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| jetty-continuation 9.4.24.v20191120  | 9.4.53.20231009  | 9.4.53.20231009 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/ee93672f-853c-4083-a5e8-0d5ab21e8bf9?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=d8221aaa-7d55-4b5a-b3e0-2b5cba26ce60)\n\n\n## Description\nEclipse Jetty does not properly parse quoted values in cookies. This could allow an attacker to smuggle cookies within other cookies into the application. The attacker can also tamper with the cookie parsing mechanism and cause other unintended behavior.\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [CVE-2023-26049](https://openhub.net/vulnerabilities/bdsa/CVE-2023-26049) - Weak Input Validation\n\n\n\n## Solution\nFixed in version [**jetty-9.4.51.v20230217**](https://github.com/eclipse/jetty.project/releases/tag/jetty-9.4.51.v20230217) by [this](https://github.com/eclipse/jetty.project/commit/1be1401bafb4c46fae3c234c8e93743a661dcf21) commit.\n\nFixed by [this](https://github.com/eclipse/jetty.project/commit/7b8c2c1bf081c7f408e5da3371c8c3c9802f09fd) commit in:\n* [**jetty-10.0.14**](https://github.com/eclipse/jetty.project/releases/tag/jetty-10.0.14)\n* [**jetty-11.0.14**](https://github.com/eclipse/jetty.project/releases/tag/jetty-11.0.14)\n* [**jetty-12.0.0.beta0**](https://github.com/eclipse/jetty.project/releases/tag/jetty-12.0.0.beta0)\n\nThe latest stable releases can be found [here](https://github.com/eclipse/jetty.project/releases).\n\n\n\n## Dependency tree\n- org.owasp.webgoat.lesson:xxe:v8.1.0:-maven\n    - com.github.tomakehurst:wiremock:2.8.0\n        - org.eclipse.jetty:jetty-servlets:9.4.24.v20191120\n            - org.eclipse.jetty:jetty-continuation:9.4.24.v20191120\n\n\n## References\n* Common Weakness Enumeration: [CWE-20](https://cwe.mitre.org/data/definitions/20.html)\n\n","text":"Eclipse Jetty does not properly parse quoted values in cookies. This could allow an attacker to smuggle cookies within other cookies into the application. The attacker can also tamper with the cookie parsing mechanism and cause other unintended behavior."},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-20"]},"defaultConfiguration":{"level":"warning"}},{"id":"CVE-2023-40167 jetty-continuation 9.4.24.v20191120: wiremock 2.8.0: org.eclipse.jetty","shortDescription":{"text":"Transitive Dependency: jetty-continuation 9.4.24.v20191120 from wiremock 2.8.0 (CVE-2023-40167)"},"fullDescription":{"text":"Eclipse Jetty is vulnerable to HTTP request smuggling due to the improper parsing of HTTP requests. An attacker could exploit this vulnerability by sending maliciously crafted HTTP requests to a vulnerable endpoint with multiple requests included inside the body by manipulating the `Content-Length` of the request. The smuggling of HTTP requests may allow for the bypass of security tools such as web application firewalls (WAFs) and intrusion detection systems (IDSs)."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| jetty-continuation 9.4.24.v20191120  | 9.4.53.20231009  | 9.4.53.20231009 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/ee93672f-853c-4083-a5e8-0d5ab21e8bf9?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=d8221aaa-7d55-4b5a-b3e0-2b5cba26ce60)\n\n\n## Description\nEclipse Jetty is vulnerable to HTTP request smuggling due to the improper parsing of HTTP requests. An attacker could exploit this vulnerability by sending maliciously crafted HTTP requests to a vulnerable endpoint with multiple requests included inside the body by manipulating the `Content-Length` of the request. The smuggling of HTTP requests may allow for the bypass of security tools such as web application firewalls (WAFs) and intrusion detection systems (IDSs).\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [CVE-2023-40167](https://openhub.net/vulnerabilities/bdsa/CVE-2023-40167) - Improper Handling of Length Parameter Inconsistency\n\n\n\n## Solution\nFixed in versions:\n* [**12.0.1**](https://github.com/eclipse/jetty.project/releases/tag/jetty-12.0.1) by [this](https://github.com/eclipse/jetty.project/commit/13cf2dade746e5d3bb123fd7ecd9fdc28fc43082) commit.\n* [**11.0.16**](https://github.com/eclipse/jetty.project/releases/tag/jetty-11.0.16) and [**10.0.16**](https://github.com/eclipse/jetty.project/releases/tag/jetty-10.0.16) by [this](https://github.com/eclipse/jetty.project/commit/003e46cae4d71e147d51fb8ea378e8989d381cc3) commit.\n* [**9.4.52.v20230823**](https://github.com/eclipse/jetty.project/releases/tag/jetty-9.4.52.v20230823) by [this](https://github.com/eclipse/jetty.project/commit/e4d596eafc887bcd813ae6e28295b5ce327def47) commit.\n\nThe latest stable releases can be found [here](https://eclipse.dev/jetty/download.php).\n\n\n\n## Dependency tree\n- org.owasp.webgoat.lesson:xxe:v8.1.0:-maven\n    - com.github.tomakehurst:wiremock:2.8.0\n        - org.eclipse.jetty:jetty-servlets:9.4.24.v20191120\n            - org.eclipse.jetty:jetty-continuation:9.4.24.v20191120\n\n\n## References\n* Common Weakness Enumeration: [CWE-130](https://cwe.mitre.org/data/definitions/130.html)\n\n","text":"Eclipse Jetty is vulnerable to HTTP request smuggling due to the improper parsing of HTTP requests. An attacker could exploit this vulnerability by sending maliciously crafted HTTP requests to a vulnerable endpoint with multiple requests included inside the body by manipulating the `Content-Length` of the request. The smuggling of HTTP requests may allow for the bypass of security tools such as web application firewalls (WAFs) and intrusion detection systems (IDSs)."},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-130"]},"defaultConfiguration":{"level":"warning"}},{"id":"CVE-2023-36479 jetty-continuation 9.4.24.v20191120: wiremock 2.8.0: org.eclipse.jetty","shortDescription":{"text":"Transitive Dependency: jetty-continuation 9.4.24.v20191120 from wiremock 2.8.0 (CVE-2023-36479)"},"fullDescription":{"text":"Eclipse Jetty contains an improper neutralization of quoting syntax issue within the CGI servlet. This could allow an authenticated attacker to send a request to the CGI Servlet for a binary with a space in its name in order to manipulate the command structure and execute incorrect commands."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| jetty-continuation 9.4.24.v20191120  | 9.4.53.20231009  | 9.4.53.20231009 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/ee93672f-853c-4083-a5e8-0d5ab21e8bf9?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=d8221aaa-7d55-4b5a-b3e0-2b5cba26ce60)\n\n\n## Description\nEclipse Jetty contains an improper neutralization of quoting syntax issue within the CGI servlet. This could allow an authenticated attacker to send a request to the CGI Servlet for a binary with a space in its name in order to manipulate the command structure and execute incorrect commands.\n\n## Vulnerabilities(BDSA,CVE)\n:large_blue_circle: [CVE-2023-36479](https://openhub.net/vulnerabilities/bdsa/CVE-2023-36479) - Improper Neutralization of Quoting Syntax\n\n\n\n## Solution\nFixed in versions:\n* [**12.0.0.beta1**](https://github.com/eclipse/jetty.project/releases/tag/jetty-12.0.0.beta1) by [this](https://github.com/eclipse/jetty.project/commit/6ce5a0fbcdf06ae647dfd304dd81a1f9b0691a5c) commit.\n* [**11.0.16**](https://github.com/eclipse/jetty.project/releases/tag/jetty-11.0.16) and [**10.0.16**](https://github.com/eclipse/jetty.project/releases/tag/jetty-10.0.16) by [this](https://github.com/eclipse/jetty.project/commit/c29491e5ac70c98e4d7d7dff2a6465ddecc45c0c) commit.\n* [**9.4.52.v20230823**](https://github.com/eclipse/jetty.project/releases/tag/jetty-9.4.52.v20230823) by [this](https://github.com/eclipse/jetty.project/commit/ec7e1fd173481e526db4092f558aa2b5aab57580) commit.\n\nThe latest stable releases can be found [here](https://eclipse.dev/jetty/download.php).\n\n## Workaround\nThe vendor has issued the following workaround:\n\n\u003e The` org.eclipse.jetty.servlets.CGI` Servlet should not be used. Fast CGI support is available instead.\n\n## Dependency tree\n- org.owasp.webgoat.lesson:xxe:v8.1.0:-maven\n    - com.github.tomakehurst:wiremock:2.8.0\n        - org.eclipse.jetty:jetty-servlets:9.4.24.v20191120\n            - org.eclipse.jetty:jetty-continuation:9.4.24.v20191120\n\n\n## References\n* Common Weakness Enumeration: [CWE-149](https://cwe.mitre.org/data/definitions/149.html)\n\n","text":"Eclipse Jetty contains an improper neutralization of quoting syntax issue within the CGI servlet. This could allow an authenticated attacker to send a request to the CGI Servlet for a binary with a space in its name in order to manipulate the command structure and execute incorrect commands."},"properties":{"security-severity":"3.8","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-149"]},"defaultConfiguration":{"level":"note"}},{"id":"CVE-2023-41900 jetty-continuation 9.4.24.v20191120: wiremock 2.8.0: org.eclipse.jetty","shortDescription":{"text":"Transitive Dependency: jetty-continuation 9.4.24.v20191120 from wiremock 2.8.0 (CVE-2023-41900)"},"fullDescription":{"text":"Eclipse Jetty contains an improper authentication vulnerability. This could allow an authenticated attacker to bypass authentication after it has been rejected or revoked by the `LoginService` and make a request as if authenticated.\n\n**Note:** The vendor has stated that this issue impacts usages of the `jetty-openid` which have configured a nested `LoginService` and where that `LoginService` is capable of rejecting previously authenticated users."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| jetty-continuation 9.4.24.v20191120  | 9.4.53.20231009  | 9.4.53.20231009 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/ee93672f-853c-4083-a5e8-0d5ab21e8bf9?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=d8221aaa-7d55-4b5a-b3e0-2b5cba26ce60)\n\n\n## Description\nEclipse Jetty contains an improper authentication vulnerability. This could allow an authenticated attacker to bypass authentication after it has been rejected or revoked by the `LoginService` and make a request as if authenticated.\n\n**Note:** The vendor has stated that this issue impacts usages of the `jetty-openid` which have configured a nested `LoginService` and where that `LoginService` is capable of rejecting previously authenticated users.\n\n## Vulnerabilities(BDSA,CVE)\n:large_blue_circle: [CVE-2023-41900](https://openhub.net/vulnerabilities/bdsa/CVE-2023-41900) - Improper Authentication\n\n\n\n## Solution\nFixed in version [**11.0.15**](https://github.com/eclipse/jetty.project/releases/tag/jetty-11.0.15) and [**10.0.15**](https://github.com/eclipse/jetty.project/releases/tag/jetty-10.0.15) by [this](https://github.com/eclipse/jetty.project/commit/24b7d06fd5ce5468caa3eaa93688879fb2900fda) commit and in [**9.4.52.v20230823**](https://github.com/eclipse/jetty.project/releases/tag/jetty-9.4.52.v20230823) by [this](https://github.com/eclipse/jetty.project/commit/5f48b4170f36b275e1576548b44bd5009feba669) commit.\n\nThe latest stable releases can be found [here](https://eclipse.dev/jetty/download.php).\n\n\n\n## Dependency tree\n- org.owasp.webgoat.lesson:xxe:v8.1.0:-maven\n    - com.github.tomakehurst:wiremock:2.8.0\n        - org.eclipse.jetty:jetty-servlets:9.4.24.v20191120\n            - org.eclipse.jetty:jetty-continuation:9.4.24.v20191120\n\n\n## References\n* Common Weakness Enumeration: [CWE-287](https://cwe.mitre.org/data/definitions/287.html)\n\n","text":"Eclipse Jetty contains an improper authentication vulnerability. This could allow an authenticated attacker to bypass authentication after it has been rejected or revoked by the `LoginService` and make a request as if authenticated.\n\n**Note:** The vendor has stated that this issue impacts usages of the `jetty-openid` which have configured a nested `LoginService` and where that `LoginService` is capable of rejecting previously authenticated users."},"properties":{"security-severity":"3.8","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-287"]},"defaultConfiguration":{"level":"note"}},{"id":"CVE-2021-34428 jetty-continuation 9.4.24.v20191120: wiremock 2.8.0: org.eclipse.jetty","shortDescription":{"text":"Transitive Dependency: jetty-continuation 9.4.24.v20191120 from wiremock 2.8.0 (CVE-2021-34428)"},"fullDescription":{"text":"Eclipse Jetty is vulnerable to insufficient session expiry. This may result in sessions used on a shared computer persisting for longer than intended."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| jetty-continuation 9.4.24.v20191120  | 9.4.53.20231009  | 9.4.53.20231009 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/ee93672f-853c-4083-a5e8-0d5ab21e8bf9?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=d8221aaa-7d55-4b5a-b3e0-2b5cba26ce60)\n\n\n## Description\nEclipse Jetty is vulnerable to insufficient session expiry. This may result in sessions used on a shared computer persisting for longer than intended.\n\n## Vulnerabilities(BDSA,CVE)\n:large_blue_circle: [CVE-2021-34428](https://openhub.net/vulnerabilities/bdsa/CVE-2021-34428) - Insufficient Session Expiration\n\n\n\n## Solution\nFixed in:\n* [**9.4.41.v20210516**](https://github.com/eclipse/jetty.project/releases/tag/jetty-9.4.41.v20210516) by [this](https://github.com/eclipse/jetty.project/commit/087f486b4461746b4ded45833887b3ccb136ee85) commit, \n* [**10.0.3**](https://github.com/eclipse/jetty.project/releases/tag/jetty-10.0.3) by [this](https://github.com/eclipse/jetty.project/commit/cd6462a6252d083b3c9ea2684aab0b4c9669ed19) commit, \n* [**11.0.3**](https://github.com/eclipse/jetty.project/releases/tag/jetty-11.0.3) by [this](https://github.com/eclipse/jetty.project/commit/cd6462a6252d083b3c9ea2684aab0b4c9669ed19) commit.\n\nThe latest stable releases are available [here](https://github.com/eclipse/jetty.project/releases).\n\n## Workaround\nThe vendor has [stated](https://github.com/eclipse/jetty.project/security/advisories/GHSA-m6cp-vxjx-65j6) that a workaround is to ensure that the application catches all Throwables within their `SessionListener#sessionDestroyed()` implementations.\n\n## Dependency tree\n- org.owasp.webgoat.lesson:xxe:v8.1.0:-maven\n    - com.github.tomakehurst:wiremock:2.8.0\n        - org.eclipse.jetty:jetty-servlets:9.4.24.v20191120\n            - org.eclipse.jetty:jetty-continuation:9.4.24.v20191120\n\n\n## References\n* Common Weakness Enumeration: [CWE-613](https://cwe.mitre.org/data/definitions/613.html)\n\n","text":"Eclipse Jetty is vulnerable to insufficient session expiry. This may result in sessions used on a shared computer persisting for longer than intended."},"properties":{"security-severity":"3.8","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-613"]},"defaultConfiguration":{"level":"note"}},{"id":"CVE-2022-2047 jetty-continuation 9.4.24.v20191120: wiremock 2.8.0: org.eclipse.jetty","shortDescription":{"text":"Transitive Dependency: jetty-continuation 9.4.24.v20191120 from wiremock 2.8.0 (CVE-2022-2047)"},"fullDescription":{"text":"Eclipse Jetty does not correctly handle invalid authority segments of HTTP URIs. An authenticated attacker could exploit this flaw by passing an invalid URI that contains an improper authority with no host so that it is interpreted as one with a host."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| jetty-continuation 9.4.24.v20191120  | 9.4.53.20231009  | 9.4.53.20231009 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/ee93672f-853c-4083-a5e8-0d5ab21e8bf9?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=d8221aaa-7d55-4b5a-b3e0-2b5cba26ce60)\n\n\n## Description\nEclipse Jetty does not correctly handle invalid authority segments of HTTP URIs. An authenticated attacker could exploit this flaw by passing an invalid URI that contains an improper authority with no host so that it is interpreted as one with a host.\n\n## Vulnerabilities(BDSA,CVE)\n:large_blue_circle: [CVE-2022-2047](https://openhub.net/vulnerabilities/bdsa/CVE-2022-2047) - Weak Input Validation\n\n\n\n## Solution\nFixed in versions:\n* [**9.4.47**](https://github.com/eclipse/jetty.project/releases/tag/jetty-9.4.47.v20220610) by [this](https://github.com/eclipse/jetty.project/commit/4ca8afbbd667c19a084d5ff14a4f08eb7049d1c7) commit.\n* [**10.0.10**](https://github.com/eclipse/jetty.project/releases/tag/jetty-10.0.10) and [**11.0.10**](https://github.com/eclipse/jetty.project/releases/tag/jetty-11.0.10) by [this](https://github.com/eclipse/jetty.project/commit/d1e64f469362bb9371d530cccded5ecb13fa1cb5) commit.\n\nThe latest stable releases can be found [here](https://github.com/eclipse/jetty.project/releases).\n\n\n\n## Dependency tree\n- org.owasp.webgoat.lesson:xxe:v8.1.0:-maven\n    - com.github.tomakehurst:wiremock:2.8.0\n        - org.eclipse.jetty:jetty-servlets:9.4.24.v20191120\n            - org.eclipse.jetty:jetty-continuation:9.4.24.v20191120\n\n\n## References\n* Common Weakness Enumeration: [CWE-20](https://cwe.mitre.org/data/definitions/20.html)\n\n","text":"Eclipse Jetty does not correctly handle invalid authority segments of HTTP URIs. An authenticated attacker could exploit this flaw by passing an invalid URI that contains an improper authority with no host so that it is interpreted as one with a host."},"properties":{"security-severity":"3.8","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-20"]},"defaultConfiguration":{"level":"note"}},{"id":"CVE-2016-1000027 spring-context 5.2.2.RELEASE: spring-security-test 4.1.3.RELEASE: org.springframework","shortDescription":{"text":"Transitive Dependency: spring-context 5.2.2.RELEASE from spring-security-test 4.1.3.RELEASE (CVE-2016-1000027)"},"fullDescription":{"text":"Pivotal Spring Framework through 5.3.16 suffers from a potential remote code execution (RCE) issue if used for Java deserialization of untrusted data. Depending on how the library is implemented within a product, this issue may or not occur, and authentication may be required. NOTE: the vendor's position is that untrusted data is not an intended use case. The product's behavior will not be changed because some users rely on deserialization of trusted data."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| spring-context 5.2.2.RELEASE  | 5.3.31  | 6.1.2 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/ba6e9d03-9fbd-4086-9631-99d1ad5e520c?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=09f17d81-b282-43ec-9f2b-36c8021d3ca7)\n\n\n## Description\nPivotal Spring Framework through 5.3.16 suffers from a potential remote code execution (RCE) issue if used for Java deserialization of untrusted data. Depending on how the library is implemented within a product, this issue may or not occur, and authentication may be required. NOTE: the vendor's position is that untrusted data is not an intended use case. The product's behavior will not be changed because some users rely on deserialization of trusted data.\n\n## Vulnerabilities(BDSA,CVE)\n:red_circle: [CVE-2016-1000027](https://openhub.net/vulnerabilities/bdsa/CVE-2016-1000027) - Insecure Object Deserialization\n\n\n\n\n\n\n\n## Dependency tree\n- org.owasp.webgoat.lesson:http-basics:v8.1.0:-maven\n    - org.springframework.security:spring-security-test:4.1.3.RELEASE\n        - org.springframework.security:spring-security-core:5.2.1.RELEASE\n            - org.springframework:spring-context:5.2.2.RELEASE\n\n\n## References\n* Common Weakness Enumeration: [CWE-502](https://cwe.mitre.org/data/definitions/502.html)\n\n","text":"Pivotal Spring Framework through 5.3.16 suffers from a potential remote code execution (RCE) issue if used for Java deserialization of untrusted data. Depending on how the library is implemented within a product, this issue may or not occur, and authentication may be required. NOTE: the vendor's position is that untrusted data is not an intended use case. The product's behavior will not be changed because some users rely on deserialization of trusted data."},"properties":{"security-severity":"9.1","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-502"]},"defaultConfiguration":{"level":"error"}},{"id":"CVE-2022-22965 spring-context 5.2.2.RELEASE: spring-security-test 4.1.3.RELEASE: org.springframework","shortDescription":{"text":"Transitive Dependency: spring-context 5.2.2.RELEASE from spring-security-test 4.1.3.RELEASE (CVE-2022-22965)"},"fullDescription":{"text":"Spring Framework is vulnerable to a flaw in the access restrictions to the security sensitive `ClassLoader` property. The restrictions can be bypassed through alternative paths available with Java9 and later. An attacker can leverage this vulnerability to cause remote code execution (RCE).\n\n**Note** this issue exists because the restrictions that were introduced to prevent exploitation of BDSA-2010-0001 (CVE-2010-1622) can be bypassed on platforms where Java9 and later are in use.\n\nThis vulnerability is listed as exploitable by the Cybersecurity \u0026 Infrastructure Security Agency in their [Known Exploited Vulnerabilities Catalog](https://www.cisa.gov/known-exploited-vulnerabilities-catalog)."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| spring-context 5.2.2.RELEASE  | 5.3.31  | 6.1.2 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/ba6e9d03-9fbd-4086-9631-99d1ad5e520c?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=09f17d81-b282-43ec-9f2b-36c8021d3ca7)\n\n\n## Description\nSpring Framework is vulnerable to a flaw in the access restrictions to the security sensitive `ClassLoader` property. The restrictions can be bypassed through alternative paths available with Java9 and later. An attacker can leverage this vulnerability to cause remote code execution (RCE).\n\n**Note** this issue exists because the restrictions that were introduced to prevent exploitation of BDSA-2010-0001 (CVE-2010-1622) can be bypassed on platforms where Java9 and later are in use.\n\nThis vulnerability is listed as exploitable by the Cybersecurity \u0026 Infrastructure Security Agency in their [Known Exploited Vulnerabilities Catalog](https://www.cisa.gov/known-exploited-vulnerabilities-catalog).\n\n## Vulnerabilities(BDSA,CVE)\n:red_circle: [CVE-2022-22965](https://openhub.net/vulnerabilities/bdsa/CVE-2022-22965) - Incomplete List of Disallowed Inputs\n\n\n\n## Solution\nFixed in [**5.3.18**](https://github.com/spring-projects/spring-framework/releases/tag/v5.3.18) by [this](https://github.com/spring-projects/spring-framework/commit/002546b3e4b8d791ea6acccb81eb3168f51abb15) commit and  [**5.2.20**](https://github.com/spring-projects/spring-framework/releases/tag/v5.2.20.RELEASE) by [this](https://github.com/spring-projects/spring-framework/commit/996f701a1916d10202c1d0d281f06ab1f2e1117e) commit .\n\nThe latest releases can be found [here](https://github.com/spring-projects/spring-framework/tags).\n\n## Workaround\nAn official workaround for the issue has been outlined [here](https://spring.io/blog/2022/03/31/spring-framework-rce-early-announcement).\n\n## Dependency tree\n- org.owasp.webgoat.lesson:http-basics:v8.1.0:-maven\n    - org.springframework.security:spring-security-test:4.1.3.RELEASE\n        - org.springframework.security:spring-security-core:5.2.1.RELEASE\n            - org.springframework:spring-context:5.2.2.RELEASE\n\n\n## References\n* Common Weakness Enumeration: [CWE-184](https://cwe.mitre.org/data/definitions/184.html)\n* Common Weakness Enumeration: [CWE-749](https://cwe.mitre.org/data/definitions/749.html)\n\n","text":"Spring Framework is vulnerable to a flaw in the access restrictions to the security sensitive `ClassLoader` property. The restrictions can be bypassed through alternative paths available with Java9 and later. An attacker can leverage this vulnerability to cause remote code execution (RCE).\n\n**Note** this issue exists because the restrictions that were introduced to prevent exploitation of BDSA-2010-0001 (CVE-2010-1622) can be bypassed on platforms where Java9 and later are in use.\n\nThis vulnerability is listed as exploitable by the Cybersecurity \u0026 Infrastructure Security Agency in their [Known Exploited Vulnerabilities Catalog](https://www.cisa.gov/known-exploited-vulnerabilities-catalog)."},"properties":{"security-severity":"9.1","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-184","external/cwe/cwe-749"]},"defaultConfiguration":{"level":"error"}},{"id":"CVE-2020-5397 spring-context 5.2.2.RELEASE: spring-security-test 4.1.3.RELEASE: org.springframework","shortDescription":{"text":"Transitive Dependency: spring-context 5.2.2.RELEASE from spring-security-test 4.1.3.RELEASE (CVE-2020-5397)"},"fullDescription":{"text":"Spring Framework is vulnerable to cross-site request forgery (CSRF) attacks via CORS preflight requests which target Spring MVC or Spring WebFlux endpoints."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| spring-context 5.2.2.RELEASE  | 5.3.31  | 6.1.2 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/ba6e9d03-9fbd-4086-9631-99d1ad5e520c?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=09f17d81-b282-43ec-9f2b-36c8021d3ca7)\n\n\n## Description\nSpring Framework is vulnerable to cross-site request forgery (CSRF) attacks via CORS preflight requests which target Spring MVC or Spring WebFlux endpoints.\n\n## Vulnerabilities(BDSA,CVE)\n:orange_circle: [CVE-2020-5397](https://openhub.net/vulnerabilities/bdsa/CVE-2020-5397) - Cross-Site Request Forgery (CSRF)\n\n\n\n## Solution\nFixed in [**5.2.3**](https://github.com/spring-projects/spring-framework/releases/tag/v5.2.3.RELEASE).\n\n\n\n## Dependency tree\n- org.owasp.webgoat.lesson:http-basics:v8.1.0:-maven\n    - org.springframework.security:spring-security-test:4.1.3.RELEASE\n        - org.springframework.security:spring-security-core:5.2.1.RELEASE\n            - org.springframework:spring-context:5.2.2.RELEASE\n\n\n## References\n* Common Weakness Enumeration: [CWE-352](https://cwe.mitre.org/data/definitions/352.html)\n\n","text":"Spring Framework is vulnerable to cross-site request forgery (CSRF) attacks via CORS preflight requests which target Spring MVC or Spring WebFlux endpoints."},"properties":{"security-severity":"8.9","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-352"]},"defaultConfiguration":{"level":"error"}},{"id":"BDSA-2022-0847 spring-context 5.2.2.RELEASE: spring-security-test 4.1.3.RELEASE: org.springframework","shortDescription":{"text":"Transitive Dependency: spring-context 5.2.2.RELEASE from spring-security-test 4.1.3.RELEASE (BDSA-2022-0847)"},"fullDescription":{"text":"Software systems using Spring Framework may be vulnerable to unsafe deserialization if they employ unsafe use of certain provided deserialization functionality. A remote attacker could potentially execute arbitrary code on a vulnerable endpoint by passing a maliciously crafted serialized object to that endpoint.\n\n**Note**: This issue only affects software that has been written to leverage specific deserialization functionality provided by the Spring Framework without sanitization."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| spring-context 5.2.2.RELEASE  | 5.3.31  | 6.1.2 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/ba6e9d03-9fbd-4086-9631-99d1ad5e520c?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=09f17d81-b282-43ec-9f2b-36c8021d3ca7)\n\n\n## Description\nSoftware systems using Spring Framework may be vulnerable to unsafe deserialization if they employ unsafe use of certain provided deserialization functionality. A remote attacker could potentially execute arbitrary code on a vulnerable endpoint by passing a maliciously crafted serialized object to that endpoint.\n\n**Note**: This issue only affects software that has been written to leverage specific deserialization functionality provided by the Spring Framework without sanitization.\n\n## Vulnerabilities(BDSA,CVE)\n:orange_circle: [BDSA-2022-0847](https://openhub.net/vulnerabilities/bdsa/BDSA-2022-0847) - Insecure Object Deserialization\n\n\n\n## Solution\nFixed in **[6.0.0-M4](https://github.com/spring-projects/spring-framework/releases/tag/v6.0.0-M4)** by [this](https://github.com/spring-projects/spring-framework/commit/7f7fb58dd0dae86d22268a4b59ac7c72a6c22529) commit.\n\nFixed in **[5.3.18](https://github.com/spring-projects/spring-framework/releases/tag/v5.3.18)** and **[5.2.20](https://github.com/spring-projects/spring-framework/releases/tag/v5.2.20.RELEASE)** by [this](https://github.com/spring-projects/spring-framework/commit/3811cd4c0a0be3aac6e842cf1890610ce986449d) commit.\n\n**Note**: These patches simply annotate the dangerous method as deprecated or documents the dangers. It is the responsibility of developers who call this method to ensure that it is not used with unsanitized untrusted input.\n\n\n\n## Dependency tree\n- org.owasp.webgoat.lesson:http-basics:v8.1.0:-maven\n    - org.springframework.security:spring-security-test:4.1.3.RELEASE\n        - org.springframework.security:spring-security-core:5.2.1.RELEASE\n            - org.springframework:spring-context:5.2.2.RELEASE\n\n\n## References\n* Common Weakness Enumeration: [CWE-502](https://cwe.mitre.org/data/definitions/502.html)\n\n","text":"Software systems using Spring Framework may be vulnerable to unsafe deserialization if they employ unsafe use of certain provided deserialization functionality. A remote attacker could potentially execute arbitrary code on a vulnerable endpoint by passing a maliciously crafted serialized object to that endpoint.\n\n**Note**: This issue only affects software that has been written to leverage specific deserialization functionality provided by the Spring Framework without sanitization."},"properties":{"security-severity":"8.9","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-502"]},"defaultConfiguration":{"level":"error"}},{"id":"CVE-2020-5398 spring-context 5.2.2.RELEASE: spring-security-test 4.1.3.RELEASE: org.springframework","shortDescription":{"text":"Transitive Dependency: spring-context 5.2.2.RELEASE from spring-security-test 4.1.3.RELEASE (CVE-2020-5398)"},"fullDescription":{"text":"Spring Framework is vulnerable to a reflected file download (RFD) attack via improper input validation on filenames in a `Content-Disposition` header."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| spring-context 5.2.2.RELEASE  | 5.3.31  | 6.1.2 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/ba6e9d03-9fbd-4086-9631-99d1ad5e520c?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=09f17d81-b282-43ec-9f2b-36c8021d3ca7)\n\n\n## Description\nSpring Framework is vulnerable to a reflected file download (RFD) attack via improper input validation on filenames in a `Content-Disposition` header.\n\n## Vulnerabilities(BDSA,CVE)\n:orange_circle: [CVE-2020-5398](https://openhub.net/vulnerabilities/bdsa/CVE-2020-5398) - Weak Input Validation\n\n\n\n## Solution\nFixed by [this](https://github.com/spring-projects/spring-framework/commit/956ffe68587c8d5f21135b5ce4650af0c2dea933) commit in:\n* [**5.2.3**](https://github.com/spring-projects/spring-framework/releases/tag/v5.2.3.RELEASE)\n* [**5.1.13**](https://github.com/spring-projects/spring-framework/releases/tag/v5.1.13.RELEASE) \n* [**5.0.16**](https://github.com/spring-projects/spring-framework/releases/tag/v5.0.16.RELEASE)\n\n\n\n## Dependency tree\n- org.owasp.webgoat.lesson:http-basics:v8.1.0:-maven\n    - org.springframework.security:spring-security-test:4.1.3.RELEASE\n        - org.springframework.security:spring-security-core:5.2.1.RELEASE\n            - org.springframework:spring-context:5.2.2.RELEASE\n\n\n## References\n* Common Weakness Enumeration: [CWE-20](https://cwe.mitre.org/data/definitions/20.html)\n\n","text":"Spring Framework is vulnerable to a reflected file download (RFD) attack via improper input validation on filenames in a `Content-Disposition` header."},"properties":{"security-severity":"8.9","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-20"]},"defaultConfiguration":{"level":"error"}},{"id":"CVE-2021-22096 spring-context 5.2.2.RELEASE: spring-security-test 4.1.3.RELEASE: org.springframework","shortDescription":{"text":"Transitive Dependency: spring-context 5.2.2.RELEASE from spring-security-test 4.1.3.RELEASE (CVE-2021-22096)"},"fullDescription":{"text":"Spring Framework is vulnerable to log file injection due to the insufficient validation of user input in an undisclosed component. An attacker could leverage this issue in order to add arbitrary entries to a log file which could impact both the integrity issues and performance issues.\n\n**Note**: a follow-up to this issue was disclosed as **CVE-2021-22060** (**BDSA-2021-3236**), with further fixed releases that protect against additional types of input and in more places of the Spring Framework codebase."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| spring-context 5.2.2.RELEASE  | 5.3.31  | 6.1.2 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/ba6e9d03-9fbd-4086-9631-99d1ad5e520c?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=09f17d81-b282-43ec-9f2b-36c8021d3ca7)\n\n\n## Description\nSpring Framework is vulnerable to log file injection due to the insufficient validation of user input in an undisclosed component. An attacker could leverage this issue in order to add arbitrary entries to a log file which could impact both the integrity issues and performance issues.\n\n**Note**: a follow-up to this issue was disclosed as **CVE-2021-22060** (**BDSA-2021-3236**), with further fixed releases that protect against additional types of input and in more places of the Spring Framework codebase.\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [CVE-2021-22096](https://openhub.net/vulnerabilities/bdsa/CVE-2021-22096) - Injection in Downstream Component\n\n\n\n## Solution\nFixed in versions [**5.3.14**](https://github.com/spring-projects/spring-framework/releases/tag/v5.3.14) and [**5.2.19**](https://github.com/spring-projects/spring-framework/releases/tag/v5.2.19.RELEASE).\n\nThe latest stable releases can be found [here](https://github.com/spring-projects/spring-framework/releases).\n\n\n\n## Dependency tree\n- org.owasp.webgoat.lesson:http-basics:v8.1.0:-maven\n    - org.springframework.security:spring-security-test:4.1.3.RELEASE\n        - org.springframework.security:spring-security-core:5.2.1.RELEASE\n            - org.springframework:spring-context:5.2.2.RELEASE\n\n\n## References\n* Common Weakness Enumeration: [CWE-74](https://cwe.mitre.org/data/definitions/74.html)\n\n","text":"Spring Framework is vulnerable to log file injection due to the insufficient validation of user input in an undisclosed component. An attacker could leverage this issue in order to add arbitrary entries to a log file which could impact both the integrity issues and performance issues.\n\n**Note**: a follow-up to this issue was disclosed as **CVE-2021-22060** (**BDSA-2021-3236**), with further fixed releases that protect against additional types of input and in more places of the Spring Framework codebase."},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-74"]},"defaultConfiguration":{"level":"warning"}},{"id":"CVE-2021-22060 spring-context 5.2.2.RELEASE: spring-security-test 4.1.3.RELEASE: org.springframework","shortDescription":{"text":"Transitive Dependency: spring-context 5.2.2.RELEASE from spring-security-test 4.1.3.RELEASE (CVE-2021-22060)"},"fullDescription":{"text":"Spring Framework is vulnerable to log file injection due to the insufficient validation of user input in an undisclosed component. An attacker could leverage this issue in order to add arbitrary entries to a log file which could impact both the integrity issues and performance issues.\n\n**Note**: the vendor states this issue exists as a follow up to CVE-2021-22096 (BDSA-2022-0011) that protects against additional types of input and in more places of the Spring Framework codebase."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| spring-context 5.2.2.RELEASE  | 5.3.31  | 6.1.2 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/ba6e9d03-9fbd-4086-9631-99d1ad5e520c?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=09f17d81-b282-43ec-9f2b-36c8021d3ca7)\n\n\n## Description\nSpring Framework is vulnerable to log file injection due to the insufficient validation of user input in an undisclosed component. An attacker could leverage this issue in order to add arbitrary entries to a log file which could impact both the integrity issues and performance issues.\n\n**Note**: the vendor states this issue exists as a follow up to CVE-2021-22096 (BDSA-2022-0011) that protects against additional types of input and in more places of the Spring Framework codebase.\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [CVE-2021-22060](https://openhub.net/vulnerabilities/bdsa/CVE-2021-22060) - Injection in Downstream Component\n\n\n\n## Solution\nFixed in versions [**5.3.14**](https://github.com/spring-projects/spring-framework/releases/tag/v5.3.14) and [**5.2.19**](https://github.com/spring-projects/spring-framework/releases/tag/v5.2.19.RELEASE).\n\nThe latest stable releases can be found [here](https://github.com/spring-projects/spring-framework/releases).\n\n\n\n## Dependency tree\n- org.owasp.webgoat.lesson:http-basics:v8.1.0:-maven\n    - org.springframework.security:spring-security-test:4.1.3.RELEASE\n        - org.springframework.security:spring-security-core:5.2.1.RELEASE\n            - org.springframework:spring-context:5.2.2.RELEASE\n\n\n## References\n* Common Weakness Enumeration: [CWE-74](https://cwe.mitre.org/data/definitions/74.html)\n\n","text":"Spring Framework is vulnerable to log file injection due to the insufficient validation of user input in an undisclosed component. An attacker could leverage this issue in order to add arbitrary entries to a log file which could impact both the integrity issues and performance issues.\n\n**Note**: the vendor states this issue exists as a follow up to CVE-2021-22096 (BDSA-2022-0011) that protects against additional types of input and in more places of the Spring Framework codebase."},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-74"]},"defaultConfiguration":{"level":"warning"}},{"id":"CVE-2022-22950 spring-context 5.2.2.RELEASE: spring-security-test 4.1.3.RELEASE: org.springframework","shortDescription":{"text":"Transitive Dependency: spring-context 5.2.2.RELEASE from spring-security-test 4.1.3.RELEASE (CVE-2022-22950)"},"fullDescription":{"text":"Spring-Framework's spring-expression is vulnerable to a denial-of-service (DoS) condition. This allows an attacker to use crafted input to cause the spring-expression process to crash due to an exception."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| spring-context 5.2.2.RELEASE  | 5.3.31  | 6.1.2 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/ba6e9d03-9fbd-4086-9631-99d1ad5e520c?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=09f17d81-b282-43ec-9f2b-36c8021d3ca7)\n\n\n## Description\nSpring-Framework's spring-expression is vulnerable to a denial-of-service (DoS) condition. This allows an attacker to use crafted input to cause the spring-expression process to crash due to an exception.\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [CVE-2022-22950](https://openhub.net/vulnerabilities/bdsa/CVE-2022-22950) - Allocation of Resources Without Limits or Throttling\n\n\n\n## Solution\nFixed in version [**5.3.17**](https://github.com/spring-projects/spring-framework/releases/tag/v5.3.17) by [this](https://github.com/spring-projects/spring-framework/commit/94af2ca06bf711de03286999b1c64a703d6de552) commit.\n\nThe latest stable releases can be found [here](https://github.com/spring-projects/spring-framework/tags).\n\n\n\n## Dependency tree\n- org.owasp.webgoat.lesson:http-basics:v8.1.0:-maven\n    - org.springframework.security:spring-security-test:4.1.3.RELEASE\n        - org.springframework.security:spring-security-core:5.2.1.RELEASE\n            - org.springframework:spring-context:5.2.2.RELEASE\n\n\n## References\n* Common Weakness Enumeration: [CWE-770](https://cwe.mitre.org/data/definitions/770.html)\n\n","text":"Spring-Framework's spring-expression is vulnerable to a denial-of-service (DoS) condition. This allows an attacker to use crafted input to cause the spring-expression process to crash due to an exception."},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-770"]},"defaultConfiguration":{"level":"warning"}},{"id":"CVE-2021-22118 spring-context 5.2.2.RELEASE: spring-security-test 4.1.3.RELEASE: org.springframework","shortDescription":{"text":"Transitive Dependency: spring-context 5.2.2.RELEASE from spring-security-test 4.1.3.RELEASE (CVE-2021-22118)"},"fullDescription":{"text":"Spring Framework is vulnerable to privilege escalation due to the creation of unsafe temporary directories by the WebFlux component. A local authenticated attacker could modify arbitrary files via maliciously crafted `multipart` requests. \n\nThis vulnerability does not affect Spring MVC applications, or applications that do not handle `multipart` file requests."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| spring-context 5.2.2.RELEASE  | 5.3.31  | 6.1.2 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/ba6e9d03-9fbd-4086-9631-99d1ad5e520c?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=09f17d81-b282-43ec-9f2b-36c8021d3ca7)\n\n\n## Description\nSpring Framework is vulnerable to privilege escalation due to the creation of unsafe temporary directories by the WebFlux component. A local authenticated attacker could modify arbitrary files via maliciously crafted `multipart` requests. \n\nThis vulnerability does not affect Spring MVC applications, or applications that do not handle `multipart` file requests.\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [CVE-2021-22118](https://openhub.net/vulnerabilities/bdsa/CVE-2021-22118) - Third-party component usage\n\n\n\n## Solution\nFixed in [**5.3.7**](https://github.com/spring-projects/spring-framework/releases/tag/v5.3.7)  by [this](https://github.com/spring-projects/spring-framework/commit/cce60c479c22101f24b2b4abebb6d79440b120d1) commit and [this](https://github.com/spring-projects/spring-framework/commit/0d0d75e25322d8161002d861fff3ec04ba8be5ac) commit, and in [**5.2.15**](https://github.com/spring-projects/spring-framework/releases/tag/v5.2.15.RELEASE) by [this](https://github.com/spring-projects/spring-framework/commit/85ad63bd35f6f10fa5549ba9a11869144338bd8a) commit.\n\nThe latest stable releases are available [here](https://github.com/spring-projects/spring-framework/releases/).\n\n\n\n## Dependency tree\n- org.owasp.webgoat.lesson:http-basics:v8.1.0:-maven\n    - org.springframework.security:spring-security-test:4.1.3.RELEASE\n        - org.springframework.security:spring-security-core:5.2.1.RELEASE\n            - org.springframework:spring-context:5.2.2.RELEASE\n\n\n## References\n* Common Weakness Enumeration: [CWE-264](https://cwe.mitre.org/data/definitions/264.html)\n* Common Weakness Enumeration: [CWE-376](https://cwe.mitre.org/data/definitions/376.html)\n\n","text":"Spring Framework is vulnerable to privilege escalation due to the creation of unsafe temporary directories by the WebFlux component. A local authenticated attacker could modify arbitrary files via maliciously crafted `multipart` requests. \n\nThis vulnerability does not affect Spring MVC applications, or applications that do not handle `multipart` file requests."},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-264","external/cwe/cwe-376"]},"defaultConfiguration":{"level":"warning"}},{"id":"CVE-2022-22970 spring-context 5.2.2.RELEASE: spring-security-test 4.1.3.RELEASE: org.springframework","shortDescription":{"text":"Transitive Dependency: spring-context 5.2.2.RELEASE from spring-security-test 4.1.3.RELEASE (CVE-2022-22970)"},"fullDescription":{"text":"Spring Framework is vulnerable to denial-of-service (DoS) due to the improper implementation of data binding functionality. A remote attacker could cause a vulnerable server to crash if that server provides file upload functionality."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| spring-context 5.2.2.RELEASE  | 5.3.31  | 6.1.2 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/ba6e9d03-9fbd-4086-9631-99d1ad5e520c?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=09f17d81-b282-43ec-9f2b-36c8021d3ca7)\n\n\n## Description\nSpring Framework is vulnerable to denial-of-service (DoS) due to the improper implementation of data binding functionality. A remote attacker could cause a vulnerable server to crash if that server provides file upload functionality.\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [CVE-2022-22970](https://openhub.net/vulnerabilities/bdsa/CVE-2022-22970) - Incorrect Provision of Specified Functionality\n\n\n\n## Solution\nFixed in version [**5.3.20**](https://github.com/spring-projects/spring-framework/releases/tag/v5.3.20) and in version [**5.2.22**](https://github.com/spring-projects/spring-framework/releases/tag/v5.2.22.RELEASE).\n\nThe latest stable releases can be found [here](https://github.com/spring-projects/spring-framework/releases).\n\n\n\n## Dependency tree\n- org.owasp.webgoat.lesson:http-basics:v8.1.0:-maven\n    - org.springframework.security:spring-security-test:4.1.3.RELEASE\n        - org.springframework.security:spring-security-core:5.2.1.RELEASE\n            - org.springframework:spring-context:5.2.2.RELEASE\n\n\n## References\n* Common Weakness Enumeration: [CWE-684](https://cwe.mitre.org/data/definitions/684.html)\n\n","text":"Spring Framework is vulnerable to denial-of-service (DoS) due to the improper implementation of data binding functionality. A remote attacker could cause a vulnerable server to crash if that server provides file upload functionality."},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-684"]},"defaultConfiguration":{"level":"warning"}},{"id":"CVE-2022-22971 spring-context 5.2.2.RELEASE: spring-security-test 4.1.3.RELEASE: org.springframework","shortDescription":{"text":"Transitive Dependency: spring-context 5.2.2.RELEASE from spring-security-test 4.1.3.RELEASE (CVE-2022-22971)"},"fullDescription":{"text":"Spring Framework is vulnerable to denial-of-service (DoS) due to the improper handling of the STOMP protocol for websockets. A remote authenticated attacker could leverage this issue in order to cause a server to crash."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| spring-context 5.2.2.RELEASE  | 5.3.31  | 6.1.2 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/ba6e9d03-9fbd-4086-9631-99d1ad5e520c?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=09f17d81-b282-43ec-9f2b-36c8021d3ca7)\n\n\n## Description\nSpring Framework is vulnerable to denial-of-service (DoS) due to the improper handling of the STOMP protocol for websockets. A remote authenticated attacker could leverage this issue in order to cause a server to crash.\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [CVE-2022-22971](https://openhub.net/vulnerabilities/bdsa/CVE-2022-22971) - Incorrect Provision of Specified Functionality\n\n\n\n## Solution\nFixed in version [**5.3.20**](https://github.com/spring-projects/spring-framework/releases/tag/v5.3.20) and in version [**5.2.22**](https://github.com/spring-projects/spring-framework/releases/tag/v5.2.22.RELEASE).\n\nThe latest stable releases can be found [here](https://github.com/spring-projects/spring-framework/releases).\n\n\n\n## Dependency tree\n- org.owasp.webgoat.lesson:http-basics:v8.1.0:-maven\n    - org.springframework.security:spring-security-test:4.1.3.RELEASE\n        - org.springframework.security:spring-security-core:5.2.1.RELEASE\n            - org.springframework:spring-context:5.2.2.RELEASE\n\n\n## References\n* Common Weakness Enumeration: [CWE-684](https://cwe.mitre.org/data/definitions/684.html)\n\n","text":"Spring Framework is vulnerable to denial-of-service (DoS) due to the improper handling of the STOMP protocol for websockets. A remote authenticated attacker could leverage this issue in order to cause a server to crash."},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-684"]},"defaultConfiguration":{"level":"warning"}},{"id":"CVE-2023-20861 spring-context 5.2.2.RELEASE: spring-security-test 4.1.3.RELEASE: org.springframework","shortDescription":{"text":"Transitive Dependency: spring-context 5.2.2.RELEASE from spring-security-test 4.1.3.RELEASE (CVE-2023-20861)"},"fullDescription":{"text":"Spring Framework is vulnerable to denial-of-service (DoS) via specially crafted SpEL expressions. An attacker could exploit this issue by passing a crafted SpEL expression to the application which may result in a crash."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| spring-context 5.2.2.RELEASE  | 5.3.31  | 6.1.2 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/ba6e9d03-9fbd-4086-9631-99d1ad5e520c?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=09f17d81-b282-43ec-9f2b-36c8021d3ca7)\n\n\n## Description\nSpring Framework is vulnerable to denial-of-service (DoS) via specially crafted SpEL expressions. An attacker could exploit this issue by passing a crafted SpEL expression to the application which may result in a crash.\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [CVE-2023-20861](https://openhub.net/vulnerabilities/bdsa/CVE-2023-20861) - Weak Input Validation\n\n\n\n## Solution\nFixed in:\n* [**5.2.23**](https://github.com/spring-projects/spring-framework/releases/tag/v5.2.23.RELEASE) by [this](https://github.com/spring-projects/spring-framework/commit/52c93b1c4b24d70de233a958e60e7c5822bd274f) commit,\n* [**5.3.26**](https://github.com/spring-projects/spring-framework/releases/tag/v5.3.26) by [this](https://github.com/spring-projects/spring-framework/commit/430fc25acad2e85cbdddcd52b64481691f03ebd1) commit,\n* [**6.0.7**](https://github.com/spring-projects/spring-framework/releases/tag/v6.0.7) by [this](https://github.com/spring-projects/spring-framework/commit/935c29e3ddba5b19951e54f6685c70ed45d9cbe5) commit.\n\nThe latest stable releases are available [here](https://github.com/spring-projects/spring-framework/releases).\n\n\n\n## Dependency tree\n- org.owasp.webgoat.lesson:http-basics:v8.1.0:-maven\n    - org.springframework.security:spring-security-test:4.1.3.RELEASE\n        - org.springframework.security:spring-security-core:5.2.1.RELEASE\n            - org.springframework:spring-context:5.2.2.RELEASE\n\n\n## References\n* Common Weakness Enumeration: [CWE-20](https://cwe.mitre.org/data/definitions/20.html)\n\n","text":"Spring Framework is vulnerable to denial-of-service (DoS) via specially crafted SpEL expressions. An attacker could exploit this issue by passing a crafted SpEL expression to the application which may result in a crash."},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-20"]},"defaultConfiguration":{"level":"warning"}},{"id":"CVE-2023-20863 spring-context 5.2.2.RELEASE: spring-security-test 4.1.3.RELEASE: org.springframework","shortDescription":{"text":"Transitive Dependency: spring-context 5.2.2.RELEASE from spring-security-test 4.1.3.RELEASE (CVE-2023-20863)"},"fullDescription":{"text":"Spring Framework is vulnerable to denial-of-service (DoS) via specially crafted SpEL expressions."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| spring-context 5.2.2.RELEASE  | 5.3.31  | 6.1.2 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/ba6e9d03-9fbd-4086-9631-99d1ad5e520c?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=09f17d81-b282-43ec-9f2b-36c8021d3ca7)\n\n\n## Description\nSpring Framework is vulnerable to denial-of-service (DoS) via specially crafted SpEL expressions.\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [CVE-2023-20863](https://openhub.net/vulnerabilities/bdsa/CVE-2023-20863) - Weak Input Validation\n\n\n\n## Solution\nFixed in:\n* [**5.2.24**](https://github.com/spring-projects/spring-framework/releases/tag/v5.2.24.RELEASE)\n* [**5.3.27**](https://github.com/spring-projects/spring-framework/releases/tag/v5.3.27)\n* [**6.0.8**](https://github.com/spring-projects/spring-framework/releases/tag/v6.0.8)\n\nThe latest stable releases are available [here](https://github.com/spring-projects/spring-framework/releases).\n\n\n\n## Dependency tree\n- org.owasp.webgoat.lesson:http-basics:v8.1.0:-maven\n    - org.springframework.security:spring-security-test:4.1.3.RELEASE\n        - org.springframework.security:spring-security-core:5.2.1.RELEASE\n            - org.springframework:spring-context:5.2.2.RELEASE\n\n\n## References\n* Common Weakness Enumeration: [CWE-20](https://cwe.mitre.org/data/definitions/20.html)\n\n","text":"Spring Framework is vulnerable to denial-of-service (DoS) via specially crafted SpEL expressions."},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-20"]},"defaultConfiguration":{"level":"warning"}},{"id":"CVE-2020-5421 spring-context 5.2.2.RELEASE: spring-security-test 4.1.3.RELEASE: org.springframework","shortDescription":{"text":"Transitive Dependency: spring-context 5.2.2.RELEASE from spring-security-test 4.1.3.RELEASE (CVE-2020-5421)"},"fullDescription":{"text":"It was discovered that Spring Framework was vulnerable to RFD protection bypass. In some instances, depending on the browser used, an attacker could bypass the RFD attack protections via the use of a `jsessionid` path parameter."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| spring-context 5.2.2.RELEASE  | 5.3.31  | 6.1.2 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/ba6e9d03-9fbd-4086-9631-99d1ad5e520c?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=09f17d81-b282-43ec-9f2b-36c8021d3ca7)\n\n\n## Description\nIt was discovered that Spring Framework was vulnerable to RFD protection bypass. In some instances, depending on the browser used, an attacker could bypass the RFD attack protections via the use of a `jsessionid` path parameter.\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [CVE-2020-5421](https://openhub.net/vulnerabilities/bdsa/CVE-2020-5421) - Weak Input Validation\n\n\n\n## Solution\nFixed in:\n* [**5.2.9**](https://github.com/spring-projects/spring-framework/releases/tag/v5.2.9.RELEASE) by [this](https://github.com/spring-projects/spring-framework/commit/899761f0a8890353dc01f10d2af96ae192f3e655) commit,\n* [**5.1.18**](https://github.com/spring-projects/spring-framework/releases/tag/v5.1.18.RELEASE) by [this](https://github.com/spring-projects/spring-framework/commit/a63c8886c00f30fea5b25f50ddf6f56c6eb957bd) commit,\n* [**5.0.19**](https://github.com/spring-projects/spring-framework/releases/tag/v5.0.19.RELEASE) by [this](https://github.com/spring-projects/spring-framework/commit/aec3a4c69e02d87f87258b0ab5c1d6c83f4cb44f) commit,\n* [**4.3.29**](https://github.com/spring-projects/spring-framework/releases/tag/v4.3.29.RELEASE) by [this](https://github.com/spring-projects/spring-framework/commit/2f75212eb667a30fe2fa9b5aca8f22d5e255821f) commit.\n\n\n\n## Dependency tree\n- org.owasp.webgoat.lesson:http-basics:v8.1.0:-maven\n    - org.springframework.security:spring-security-test:4.1.3.RELEASE\n        - org.springframework.security:spring-security-core:5.2.1.RELEASE\n            - org.springframework:spring-context:5.2.2.RELEASE\n\n\n## References\n* Common Weakness Enumeration: [CWE-20](https://cwe.mitre.org/data/definitions/20.html)\n\n","text":"It was discovered that Spring Framework was vulnerable to RFD protection bypass. In some instances, depending on the browser used, an attacker could bypass the RFD attack protections via the use of a `jsessionid` path parameter."},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-20"]},"defaultConfiguration":{"level":"warning"}},{"id":"CVE-2022-22968 spring-context 5.2.2.RELEASE: spring-security-test 4.1.3.RELEASE: org.springframework","shortDescription":{"text":"Transitive Dependency: spring-context 5.2.2.RELEASE from spring-security-test 4.1.3.RELEASE (CVE-2022-22968)"},"fullDescription":{"text":"Spring Framework is vulnerable to data binding protection bypass due to improper validation of specified disallowed fields in `DataBinders`. This could be leveraged by an attacker to bypass the suggested workaround to **CVE-2022-22965** (**BDSA-2022-0858**) if it is improperly implemented."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| spring-context 5.2.2.RELEASE  | 5.3.31  | 6.1.2 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/ba6e9d03-9fbd-4086-9631-99d1ad5e520c?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=09f17d81-b282-43ec-9f2b-36c8021d3ca7)\n\n\n## Description\nSpring Framework is vulnerable to data binding protection bypass due to improper validation of specified disallowed fields in `DataBinders`. This could be leveraged by an attacker to bypass the suggested workaround to **CVE-2022-22965** (**BDSA-2022-0858**) if it is improperly implemented.\n\n## Vulnerabilities(BDSA,CVE)\n:large_blue_circle: [CVE-2022-22968](https://openhub.net/vulnerabilities/bdsa/CVE-2022-22968) - Weak Input Validation\n\n\n\n## Solution\nFixed  in [**5.3.19**](https://github.com/spring-projects/spring-framework/releases/tag/v5.3.19) by [this](https://github.com/spring-projects/spring-framework/commit/a7cf19cec5ebd270f97a194d749e2d5701ad2ab7) commit and [**5.2.21**](https://github.com/spring-projects/spring-framework/releases/tag/v5.2.21.RELEASE) by [this](https://github.com/spring-projects/spring-framework/commit/833e750175349ab4fd502109a8b41af77e25cdea) commit.\n\n\n\n## Dependency tree\n- org.owasp.webgoat.lesson:http-basics:v8.1.0:-maven\n    - org.springframework.security:spring-security-test:4.1.3.RELEASE\n        - org.springframework.security:spring-security-core:5.2.1.RELEASE\n            - org.springframework:spring-context:5.2.2.RELEASE\n\n\n## References\n* Common Weakness Enumeration: [CWE-20](https://cwe.mitre.org/data/definitions/20.html)\n\n","text":"Spring Framework is vulnerable to data binding protection bypass due to improper validation of specified disallowed fields in `DataBinders`. This could be leveraged by an attacker to bypass the suggested workaround to **CVE-2022-22965** (**BDSA-2022-0858**) if it is improperly implemented."},"properties":{"security-severity":"3.8","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-20"]},"defaultConfiguration":{"level":"note"}},{"id":"CVE-2020-27216 jetty-servlet 9.4.24.v20191120: wiremock 2.8.0: org.eclipse.jetty","shortDescription":{"text":"Transitive Dependency: jetty-servlet 9.4.24.v20191120 from wiremock 2.8.0 (CVE-2020-27216)"},"fullDescription":{"text":"Jetty is vulnerable to temporary directory Hijacking via a race condition. If code is executed from this temporary directory it can lead to local privilege escalation."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| jetty-servlet 9.4.24.v20191120  | 9.4.53.20231009  | 11.0.19 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/ee93672f-853c-4083-a5e8-0d5ab21e8bf9?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=d8221aaa-7d55-4b5a-b3e0-2b5cba26ce60)\n\n\n## Description\nJetty is vulnerable to temporary directory Hijacking via a race condition. If code is executed from this temporary directory it can lead to local privilege escalation.\n\n## Vulnerabilities(BDSA,CVE)\n:orange_circle: [CVE-2020-27216](https://openhub.net/vulnerabilities/bdsa/CVE-2020-27216) - Race Condition due to Improper Synchronization\n\n\n\n## Solution\nFixed in:\n* [**11.0.0.beta3**](https://github.com/eclipse/jetty.project/releases/tag/jetty-11.0.0.beta3)\n* [**10.0.0.beta3**](https://github.com/eclipse/jetty.project/releases/tag/jetty-10.0.0.beta3) \n* [**9.4.33.v20201020**](https://github.com/eclipse/jetty.project/releases/tag/jetty-9.4.33.v20201020) by [this](https://github.com/eclipse/jetty.project/commit/53e0e0e9b25a6309bf24ee3b10984f4145701edb) commit and [this](https://github.com/eclipse/jetty.project/commit/9ad6beb80543b392c91653f6bfce233fc75b9d5f) commit.\n\n## Workaround\nSet a temporary directory, either for the server or the context, to one outside the shared temporary file system. For recent releases, a temporary directory by created by making a directory called work in the `${jetty.base}` directory (the parent directory of the webapps directory). Alternately the java temporary directory can be set with the System Property `java.io.tmpdir`. A more detailed description of how jetty selects a temporary directory is below.\n\nTo mitigate this vulnerability the directory must be set to one that is not writable by an attacker. To avoid information leakage, the directory should also not be readable by an attacker.\n\n## Dependency tree\n- org.owasp.webgoat.lesson:xxe:v8.1.0:-maven\n    - com.github.tomakehurst:wiremock:2.8.0\n        - org.eclipse.jetty:jetty-servlet:9.4.24.v20191120\n\n\n## References\n* Common Weakness Enumeration: [CWE-362](https://cwe.mitre.org/data/definitions/362.html)\n\n","text":"Jetty is vulnerable to temporary directory Hijacking via a race condition. If code is executed from this temporary directory it can lead to local privilege escalation."},"properties":{"security-severity":"8.9","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-362"]},"defaultConfiguration":{"level":"error"}},{"id":"CVE-2023-44487 jetty-servlet 9.4.24.v20191120: wiremock 2.8.0: org.eclipse.jetty","shortDescription":{"text":"Transitive Dependency: jetty-servlet 9.4.24.v20191120 from wiremock 2.8.0 (CVE-2023-44487)"},"fullDescription":{"text":"The HTTP/2 protocol contains a flaw related to the stream multiplexing feature that can allow for excessive resource consumption on servers operating implementations of the HTTP/2 protocol. \n\nThe HTTP/2 protocol allows clients to signal to a server to cancel a previously opened stream by sending an `RST_STREAM` frame. Attackers can abuse this stream canceling ability by opening a large number of streams at once immediately followed by `RST_STREAM` frames. In most HTTP/2 implementations this bypasses concurrent open stream limits and causes servers to spend processing time first handling request frames and then performing stream tear downs. For the server, these operations can pile up whereas the attacker client paid minuscule bandwidth and processing costs.\n\n[Amazon](https://aws.amazon.com/security/security-bulletins/AWS-2023-011/), [Cloudflare](https://blog.cloudflare.com/technical-breakdown-http2-rapid-reset-ddos-attack/) and [Google](https://cloud.google.com/blog/products/identity-security/google-cloud-mitigated-largest-ddos-attack-peaking-above-398-million-rps/) have reported that this vulnerability has been exploited in the wild from August to October 2023.\n\nThis vulnerability is listed as exploitable by the Cybersecurity \u0026 Infrastructure Security Agency in their [Known Exploited Vulnerabilities Catalog](https://www.cisa.gov/known-exploited-vulnerabilities-catalog)."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| jetty-servlet 9.4.24.v20191120  | 9.4.53.20231009  | 11.0.19 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/ee93672f-853c-4083-a5e8-0d5ab21e8bf9?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=d8221aaa-7d55-4b5a-b3e0-2b5cba26ce60)\n\n\n## Description\nThe HTTP/2 protocol contains a flaw related to the stream multiplexing feature that can allow for excessive resource consumption on servers operating implementations of the HTTP/2 protocol. \n\nThe HTTP/2 protocol allows clients to signal to a server to cancel a previously opened stream by sending an `RST_STREAM` frame. Attackers can abuse this stream canceling ability by opening a large number of streams at once immediately followed by `RST_STREAM` frames. In most HTTP/2 implementations this bypasses concurrent open stream limits and causes servers to spend processing time first handling request frames and then performing stream tear downs. For the server, these operations can pile up whereas the attacker client paid minuscule bandwidth and processing costs.\n\n[Amazon](https://aws.amazon.com/security/security-bulletins/AWS-2023-011/), [Cloudflare](https://blog.cloudflare.com/technical-breakdown-http2-rapid-reset-ddos-attack/) and [Google](https://cloud.google.com/blog/products/identity-security/google-cloud-mitigated-largest-ddos-attack-peaking-above-398-million-rps/) have reported that this vulnerability has been exploited in the wild from August to October 2023.\n\nThis vulnerability is listed as exploitable by the Cybersecurity \u0026 Infrastructure Security Agency in their [Known Exploited Vulnerabilities Catalog](https://www.cisa.gov/known-exploited-vulnerabilities-catalog).\n\n## Vulnerabilities(BDSA,CVE)\n:orange_circle: [CVE-2023-44487](https://openhub.net/vulnerabilities/bdsa/CVE-2023-44487) - Uncontrolled Resource Consumption\n\n\n\n## Solution\nFixed in:\n* nghttp2 [**1.57.0**](https://github.com/nghttp2/nghttp2/releases/tag/v1.57.0) by [this](https://github.com/nghttp2/nghttp2/commit/72b4af6143681f528f1d237b21a9a7aee1738832) commit,\n* NGINX [**1.25.3**](https://hg.nginx.org/nginx/rev/release-1.25.3) by [this](https://hg.nginx.org/nginx/rev/cdda286c0f1b) revision,\n* Apache Tomcat \n\t* [**8.5.94**](https://github.com/apache/tomcat/releases/tag/8.5.94) by [this](https://github.com/apache/tomcat/commit/944332bb15bd2f3bf76ec2caeb1ff0a58a3bc628) commit,\n\t* [**9.0.81**](https://github.com/apache/tomcat/releases/tag/9.0.81) by [this](https://github.com/apache/tomcat/commit/6d1a9fd6642387969e4410b9989c85856b74917a) commit,\n\t* [**10.1.14**](https://github.com/apache/tomcat/releases/tag/10.1.14) by [this](https://github.com/apache/tomcat/commit/76bb4bfbfeae827dce896f650655bbf6e251ed49) commit,\n\t* [**11.0.0-M12**](https://github.com/apache/tomcat/releases/tag/11.0.0-M12) by [this](https://github.com/apache/tomcat/commit/9cdfe25bad707f34b3e5da2994f3f1952a163c3e) commit,\n* Apache Traffic Server\n\t* [**9.2.3-rc0**](https://github.com/apache/trafficserver/releases/tag/9.2.3-rc0) by [this](https://github.com/apache/trafficserver/commit/b28ad74f117307e8de206f1de70c3fa716f90682) commit,\n\t* [**8.1.9-rc0**](https://github.com/apache/trafficserver/releases/tag/8.1.9-rc0) by [this](https://github.com/apache/trafficserver/commit/d742d74039aaa548dda0148ab4ba207906abc620) commit,\n* Netty/Codec/HTTP2 [**4.1.100.Final**](https://mvnrepository.com/artifact/io.netty/netty-codec-http2/4.1.100.Final) by [this](https://github.com/netty/netty/commit/58f75f665aa81a8cbcf6ffa74820042a285c5e61) commit,\n* Eclipse Jetty\n\t* [**12.0.2**](https://github.com/jetty/jetty.project/releases/tag/jetty-12.0.2), [**11.0.17**](https://github.com/jetty/jetty.project/releases/tag/jetty-11.0.17), [**10.0.17**](https://github.com/jetty/jetty.project/releases/tag/jetty-10.0.17) by [this](https://github.com/jetty/jetty.project/commit/dbb94514dc9d3fb21fe92080f57c314e7e06a148) commit,\n\t* [**9.4.53.v20231009**](https://github.com/jetty/jetty.project/releases/tag/jetty-9.4.53.v20231009) by [this](https://github.com/jetty/jetty.project/commit/0f246d12090fb15b7b21dee8429f459fd792de53) commit.\n* lighttpd [**1.4.73**](https://github.com/lighttpd/lighttpd1.4/releases/tag/lighttpd-1.4.73) by [this](https://github.com/lighttpd/lighttpd1.4/commit/7b48f3c843e1113b27f5d278f4d10861cc499a06) commit.\n* grpc-go \n  * [**1.56.3**](https://github.com/grpc/grpc-go/releases/tag/v1.56.3) by [this](https://github.com/grpc/grpc-go/commit/5efd7bd7) commit,\n  * [**1.57.1**](https://github.com/grpc/grpc-go/releases/tag/v1.57.1) by [this](https://github.com/grpc/grpc-go/commit/6a1400d5) commit,\n  * [**1.58.3**](https://github.com/grpc/grpc-go/releases/tag/v1.58.3) by [this](https://github.com/grpc/grpc-go/commit/c40c9ba3) commit,\n * h2o fixed in the **master** branch by [this](https://github.com/h2o/h2o/commit/28fe15117b909588bf14269a0e1c6ec4548579fe) commit which is not yet included in any release.\n\n## Workaround\nDepending on technologies use and their configuration, different mitigation strategies may be available.\n\nIn some cases, it may be possible to limit the amount of `RST_STREAM` frame frames that are processed within a given time by configuring the particular HTTP/2 implementation manually. Please refer to your software vendor's advisories for more information.\n\n## Dependency tree\n- org.owasp.webgoat.lesson:xxe:v8.1.0:-maven\n    - com.github.tomakehurst:wiremock:2.8.0\n        - org.eclipse.jetty:jetty-servlet:9.4.24.v20191120\n\n\n## References\n* Common Weakness Enumeration: [CWE-400](https://cwe.mitre.org/data/definitions/400.html)\n\n","text":"The HTTP/2 protocol contains a flaw related to the stream multiplexing feature that can allow for excessive resource consumption on servers operating implementations of the HTTP/2 protocol. \n\nThe HTTP/2 protocol allows clients to signal to a server to cancel a previously opened stream by sending an `RST_STREAM` frame. Attackers can abuse this stream canceling ability by opening a large number of streams at once immediately followed by `RST_STREAM` frames. In most HTTP/2 implementations this bypasses concurrent open stream limits and causes servers to spend processing time first handling request frames and then performing stream tear downs. For the server, these operations can pile up whereas the attacker client paid minuscule bandwidth and processing costs.\n\n[Amazon](https://aws.amazon.com/security/security-bulletins/AWS-2023-011/), [Cloudflare](https://blog.cloudflare.com/technical-breakdown-http2-rapid-reset-ddos-attack/) and [Google](https://cloud.google.com/blog/products/identity-security/google-cloud-mitigated-largest-ddos-attack-peaking-above-398-million-rps/) have reported that this vulnerability has been exploited in the wild from August to October 2023.\n\nThis vulnerability is listed as exploitable by the Cybersecurity \u0026 Infrastructure Security Agency in their [Known Exploited Vulnerabilities Catalog](https://www.cisa.gov/known-exploited-vulnerabilities-catalog)."},"properties":{"security-severity":"8.9","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-400"]},"defaultConfiguration":{"level":"error"}},{"id":"CVE-2020-27223 jetty-servlet 9.4.24.v20191120: wiremock 2.8.0: org.eclipse.jetty","shortDescription":{"text":"Transitive Dependency: jetty-servlet 9.4.24.v20191120 from wiremock 2.8.0 (CVE-2020-27223)"},"fullDescription":{"text":"Jetty is vulnerable to denial-of-service (DoS) due to the use of an exponential algorithm that can have excessive resource requirements. A remote attacker could cause a vulnerable server to become unresponsive by sending maliciously crafted HTTP requests to that server."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| jetty-servlet 9.4.24.v20191120  | 9.4.53.20231009  | 11.0.19 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/ee93672f-853c-4083-a5e8-0d5ab21e8bf9?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=d8221aaa-7d55-4b5a-b3e0-2b5cba26ce60)\n\n\n## Description\nJetty is vulnerable to denial-of-service (DoS) due to the use of an exponential algorithm that can have excessive resource requirements. A remote attacker could cause a vulnerable server to become unresponsive by sending maliciously crafted HTTP requests to that server.\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [CVE-2020-27223](https://openhub.net/vulnerabilities/bdsa/CVE-2020-27223) - Inefficient Algorithmic Complexity\n\n\n\n## Solution\nFixed by [this](https://github.com/eclipse/jetty.project/commit/10e531756b972162eed402c44d0244f7f6b85131) commit in:\n* [**11.0.1**](https://github.com/eclipse/jetty.project/releases/tag/jetty-11.0.1)\n* [**10.0.1**](https://github.com/eclipse/jetty.project/releases/tag/jetty-10.0.1)\n* [**9.4.37.v20210219**](https://github.com/eclipse/jetty.project/releases/tag/jetty-9.4.37.v20210219)\n\nThe latest stable releases are available [here](https://github.com/eclipse/jetty.project/releases).\n\n## Workaround\nThe vendor has stated that the following workarounds are effective:\n\n* Don't use the default error page or handler.\n* Don't deploy an instance of `StatisticsServlet` that is exposed to the network.\n* Don't call the `getLocale` API.\n* Don't enable precompressed static content in instances of `DefaultServlet`.\n* Deploy a rule that limits the number and size of `Accept-*` header fields.\n\n## Dependency tree\n- org.owasp.webgoat.lesson:xxe:v8.1.0:-maven\n    - com.github.tomakehurst:wiremock:2.8.0\n        - org.eclipse.jetty:jetty-servlet:9.4.24.v20191120\n\n\n## References\n* Common Weakness Enumeration: [CWE-407](https://cwe.mitre.org/data/definitions/407.html)\n\n","text":"Jetty is vulnerable to denial-of-service (DoS) due to the use of an exponential algorithm that can have excessive resource requirements. A remote attacker could cause a vulnerable server to become unresponsive by sending maliciously crafted HTTP requests to that server."},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-407"]},"defaultConfiguration":{"level":"warning"}},{"id":"CVE-2021-28165 jetty-servlet 9.4.24.v20191120: wiremock 2.8.0: org.eclipse.jetty","shortDescription":{"text":"Transitive Dependency: jetty-servlet 9.4.24.v20191120 from wiremock 2.8.0 (CVE-2021-28165)"},"fullDescription":{"text":"Eclipse Jetty is vulnerable to Denial-of-Service (DoS) via invalid TLS frames. An attacker could exploit this by sending a TLS frame with a size in excess of 17408 resulting in excessive resource consumption leading to a DoS condition."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| jetty-servlet 9.4.24.v20191120  | 9.4.53.20231009  | 11.0.19 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/ee93672f-853c-4083-a5e8-0d5ab21e8bf9?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=d8221aaa-7d55-4b5a-b3e0-2b5cba26ce60)\n\n\n## Description\nEclipse Jetty is vulnerable to Denial-of-Service (DoS) via invalid TLS frames. An attacker could exploit this by sending a TLS frame with a size in excess of 17408 resulting in excessive resource consumption leading to a DoS condition.\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [CVE-2021-28165](https://openhub.net/vulnerabilities/bdsa/CVE-2021-28165) - Uncontrolled Resource Consumption\n\n\n\n## Solution\nFixed in [**10.0.2**](https://github.com/eclipse/jetty.project/releases/tag/jetty-10.0.2) and [**11.0.2**](https://github.com/eclipse/jetty.project/releases/tag/jetty-11.0.2) by [this](https://github.com/eclipse/jetty.project/commit/be22761a20a1685365c8e0356bf09b47e574cfd9) and [this](https://github.com/eclipse/jetty.project/commit/039c7386d0f3087d7c8aa19ea6001b24c95b9f16) commit.\nFixed in [**9.4.39.v20210325**](https://github.com/eclipse/jetty.project/releases/tag/jetty-9.4.39.v20210325) by [this](https://github.com/eclipse/jetty.project/commit/00d379c94ba865dced2025c2d1bc3e2e0e41e880) and [this](https://github.com/eclipse/jetty.project/commit/294b2ba02b667548617a94cd99592110ac230add) commit. \n\nThe latest stable releases are available [here](https://github.com/eclipse/jetty.project/releases).\n\n## Workaround\nThe problem can be worked around by compiling the following class:\n```\npackage org.eclipse.jetty.server.ssl.fix6072;\n\nimport java.nio.ByteBuffer;\nimport javax.net.ssl.SSLEngine;\nimport javax.net.ssl.SSLEngineResult;\nimport javax.net.ssl.SSLException;\nimport javax.net.ssl.SSLHandshakeException;\n\nimport org.eclipse.jetty.io.EndPoint;\nimport org.eclipse.jetty.io.ssl.SslConnection;\nimport org.eclipse.jetty.server.Connector;\nimport org.eclipse.jetty.server.SslConnectionFactory;\nimport org.eclipse.jetty.util.BufferUtil;\nimport org.eclipse.jetty.util.annotation.Name;\nimport org.eclipse.jetty.util.ssl.SslContextFactory;\n\npublic class SpaceCheckingSslConnectionFactory extends SslConnectionFactory\n{\n    public SpaceCheckingSslConnectionFactory(@Name(\"sslContextFactory\") SslContextFactory factory, @Name(\"next\") String nextProtocol)\n    {\n        super(factory, nextProtocol);\n    }\n\n    @Override\n    protected SslConnection newSslConnection(Connector connector, EndPoint endPoint, SSLEngine engine)\n    {\n        return new SslConnection(connector.getByteBufferPool(), connector.getExecutor(), endPoint, engine, isDirectBuffersForEncryption(), isDirectBuffersForDecryption())\n        {\n            @Override\n            protected SSLEngineResult unwrap(SSLEngine sslEngine, ByteBuffer input, ByteBuffer output) throws SSLException\n            {\n                SSLEngineResult results = super.unwrap(sslEngine, input, output);\n\n                if ((results.getStatus() == SSLEngineResult.Status.BUFFER_UNDERFLOW ||\n                    results.getStatus() == SSLEngineResult.Status.OK \u0026\u0026 results.bytesConsumed() == 0 \u0026\u0026 results.bytesProduced() == 0) \u0026\u0026\n                    BufferUtil.space(input) == 0)\n                {\n                    BufferUtil.clear(input);\n                    throw new SSLHandshakeException(\"Encrypted buffer max length exceeded\");\n                }\n                return results;\n            }\n        };\n    }\n}\n```\n\nThis class can be deployed by:\n* The resulting class file should be put into a jar file (eg `sslfix6072.jar`)\n* The jar file should be made available to the server. For a normal distribution this can be done by putting the file into `${jetty.base}/lib`\n* Copy the file `${jetty.home}/modules/ssl.mod` to `${jetty.base}/modules`\n* Edit the `${jetty.base}/modules/ssl.mod` file to have the following section:\n```\n[lib]\nlib/sslfix6072.jar\n```\n\n* Copy the file `${jetty.home}/etc/jetty-https.xml` and `${jetty.home}/etc/jetty-http2.xml` to `${jetty.base}/etc`\n* Edit files `${jetty.base}/etc/jetty-https.xml` and `${jetty.base}/etc/jetty-http2.xml`, changing any reference of `org.eclipse.jetty.server.SslConnectionFactory` to `org.eclipse.jetty.server.ssl.fix6072.SpaceCheckingSslConnectionFactory`. \n\nFor example:\n```\n  \u003cCall name=\"addIfAbsentConnectionFactory\"\u003e\n    \u003cArg\u003e\n      \u003cNew class=\"org.eclipse.jetty.server.ssl.fix6072.SpaceCheckingSslConnectionFactory\"\u003e\n        \u003cArg name=\"next\"\u003ehttp/1.1\u003c/Arg\u003e\n        \u003cArg name=\"sslContextFactory\"\u003e\u003cRef refid=\"sslContextFactory\"/\u003e\u003c/Arg\u003e\n      \u003c/New\u003e\n    \u003c/Arg\u003e\n  \u003c/Call\u003e\n```\nRestart Jetty\n\n## Dependency tree\n- org.owasp.webgoat.lesson:xxe:v8.1.0:-maven\n    - com.github.tomakehurst:wiremock:2.8.0\n        - org.eclipse.jetty:jetty-servlet:9.4.24.v20191120\n\n\n## References\n* Common Weakness Enumeration: [CWE-400](https://cwe.mitre.org/data/definitions/400.html)\n\n","text":"Eclipse Jetty is vulnerable to Denial-of-Service (DoS) via invalid TLS frames. An attacker could exploit this by sending a TLS frame with a size in excess of 17408 resulting in excessive resource consumption leading to a DoS condition."},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-400"]},"defaultConfiguration":{"level":"warning"}},{"id":"CVE-2021-28169 jetty-servlet 9.4.24.v20191120: wiremock 2.8.0: org.eclipse.jetty","shortDescription":{"text":"Transitive Dependency: jetty-servlet 9.4.24.v20191120 from wiremock 2.8.0 (CVE-2021-28169)"},"fullDescription":{"text":"Jetty is vulnerable to information disclosure due to improper requested path verification. This allows crafted requests to access protected resources of the web application which, depending on the implementation, might reveal sensitive information."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| jetty-servlet 9.4.24.v20191120  | 9.4.53.20231009  | 11.0.19 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/ee93672f-853c-4083-a5e8-0d5ab21e8bf9?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=d8221aaa-7d55-4b5a-b3e0-2b5cba26ce60)\n\n\n## Description\nJetty is vulnerable to information disclosure due to improper requested path verification. This allows crafted requests to access protected resources of the web application which, depending on the implementation, might reveal sensitive information.\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [CVE-2021-28169](https://openhub.net/vulnerabilities/bdsa/CVE-2021-28169) - Directory Traversal\n\n\n\n## Solution\nFixed in [**9.4.41**](https://github.com/eclipse/jetty.project/releases/tag/jetty-9.4.41.v20210512) by [this](https://github.com/eclipse/jetty.project/commit/1c05b0bcb1) commit.\n\nFixed in [**10.0.3**](https://github.com/eclipse/jetty.project/releases/tag/jetty-10.0.3) and [**11.0.3**](https://github.com/eclipse/jetty.project/releases/tag/jetty-11.0.3) by [this](https://github.com/eclipse/jetty.project/commit/f58dbedcd0) commit.\n\nThe latest stable releases are available [here](https://www.eclipse.org/jetty/download.php).\n\n## Workaround\nThe vendor provides the following workaround:\n\nIf you cannot update to the latest version of Jetty, you can instead deploy your own version of the `ConcatServlet` and/or the `WelcomeFilter` by using the code from the latest version of Jetty.\n\n## Dependency tree\n- org.owasp.webgoat.lesson:xxe:v8.1.0:-maven\n    - com.github.tomakehurst:wiremock:2.8.0\n        - org.eclipse.jetty:jetty-servlet:9.4.24.v20191120\n\n\n## References\n* Common Weakness Enumeration: [CWE-22](https://cwe.mitre.org/data/definitions/22.html)\n\n","text":"Jetty is vulnerable to information disclosure due to improper requested path verification. This allows crafted requests to access protected resources of the web application which, depending on the implementation, might reveal sensitive information."},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-22"]},"defaultConfiguration":{"level":"warning"}},{"id":"CVE-2023-36478 jetty-servlet 9.4.24.v20191120: wiremock 2.8.0: org.eclipse.jetty","shortDescription":{"text":"Transitive Dependency: jetty-servlet 9.4.24.v20191120 from wiremock 2.8.0 (CVE-2023-36478)"},"fullDescription":{"text":"Eclipse Jetty is vulnerable to a denial-of-service (DoS) issue due to presence of a user input validation flaw in the HTTP/2 HPACK functionality that can lead to an integer overflow and allow HPACK headers to exceed their expected size limits.\n\nAn attacker could submit crafted HTTP messages that trigger the integer overflow flaw and cause large buffers to be allocated on the server, consuming memory resources in a manner that could cause the server to run out of memory."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| jetty-servlet 9.4.24.v20191120  | 9.4.53.20231009  | 11.0.19 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/ee93672f-853c-4083-a5e8-0d5ab21e8bf9?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=d8221aaa-7d55-4b5a-b3e0-2b5cba26ce60)\n\n\n## Description\nEclipse Jetty is vulnerable to a denial-of-service (DoS) issue due to presence of a user input validation flaw in the HTTP/2 HPACK functionality that can lead to an integer overflow and allow HPACK headers to exceed their expected size limits.\n\nAn attacker could submit crafted HTTP messages that trigger the integer overflow flaw and cause large buffers to be allocated on the server, consuming memory resources in a manner that could cause the server to run out of memory.\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [CVE-2023-36478](https://openhub.net/vulnerabilities/bdsa/CVE-2023-36478) - Integer Overflow / Underflow\n\n\n\n## Solution\nFixed in:\n* [**9.4.53.v20231009**](https://github.com/jetty/jetty.project/releases/tag/jetty-9.4.53.v20231009) by [this](https://github.com/jetty/jetty.project/commit/c7a4b05fc735e73e7522cb617c079045b709957b) commit and [this](https://github.com/jetty/jetty.project/commit/a4d61e9eb026ec98c79107e840cabdf520482c56) commit,\n* [**10.0.16**](https://github.com/jetty/jetty.project/releases/tag/jetty-10.0.16), [**11.0.16**](https://github.com/jetty/jetty.project/releases/tag/jetty-11.0.16) and [**12.0.0.beta2x**](https://github.com/jetty/jetty.project/releases/tag/jetty-12.0.0.beta2x) by [this](https://github.com/jetty/jetty.project/commit/a8c9eea75bffcb2b2557acefb75856707654a56f) commit and [this](https://github.com/jetty/jetty.project/commit/420ec7cc1db65b42693dc002aca0faa567f62f7e) commit.\n\nThe latest stable releases can be found [here](https://eclipse.dev/jetty/download.php).\n\n\n\n## Dependency tree\n- org.owasp.webgoat.lesson:xxe:v8.1.0:-maven\n    - com.github.tomakehurst:wiremock:2.8.0\n        - org.eclipse.jetty:jetty-servlet:9.4.24.v20191120\n\n\n## References\n* Common Weakness Enumeration: [CWE-190](https://cwe.mitre.org/data/definitions/190.html)\n* Common Weakness Enumeration: [CWE-400](https://cwe.mitre.org/data/definitions/400.html)\n\n","text":"Eclipse Jetty is vulnerable to a denial-of-service (DoS) issue due to presence of a user input validation flaw in the HTTP/2 HPACK functionality that can lead to an integer overflow and allow HPACK headers to exceed their expected size limits.\n\nAn attacker could submit crafted HTTP messages that trigger the integer overflow flaw and cause large buffers to be allocated on the server, consuming memory resources in a manner that could cause the server to run out of memory."},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-190","external/cwe/cwe-400"]},"defaultConfiguration":{"level":"warning"}},{"id":"CVE-2022-2048 jetty-servlet 9.4.24.v20191120: wiremock 2.8.0: org.eclipse.jetty","shortDescription":{"text":"Transitive Dependency: jetty-servlet 9.4.24.v20191120 from wiremock 2.8.0 (CVE-2022-2048)"},"fullDescription":{"text":"Eclipse Jetty does not correctly handle invalid HTTP/2 requests. An attacker could exploit this flaw to exhaust the HTTP/2 flow control window or TCP congest the connection. This will cause the relevant selector threads to be blocked and it will lead to a denial-of-service (DoS)."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| jetty-servlet 9.4.24.v20191120  | 9.4.53.20231009  | 11.0.19 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/ee93672f-853c-4083-a5e8-0d5ab21e8bf9?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=d8221aaa-7d55-4b5a-b3e0-2b5cba26ce60)\n\n\n## Description\nEclipse Jetty does not correctly handle invalid HTTP/2 requests. An attacker could exploit this flaw to exhaust the HTTP/2 flow control window or TCP congest the connection. This will cause the relevant selector threads to be blocked and it will lead to a denial-of-service (DoS).\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [CVE-2022-2048](https://openhub.net/vulnerabilities/bdsa/CVE-2022-2048) - Insufficient Resource Pool\n\n\n\n## Solution\nFixed in:\n* **[9.4.47](https://github.com/eclipse/jetty.project/releases/tag/jetty-9.4.47.v20220610)** by [this](https://github.com/eclipse/jetty.project/commit/be912d4315839405a8ae601f2e4ee0306867266e) commit,\n* **[10.0.10](https://github.com/eclipse/jetty.project/releases/tag/jetty-10.0.10)** and **[11.0.10](https://github.com/eclipse/jetty.project/releases/tag/jetty-11.0.10)** by [this](https://github.com/eclipse/jetty.project/commit/b705091afb9158b39590fa36b9b84795524a8f0b) commit.\n\n\nThe latest stable releases can be found [here](https://github.com/eclipse/jetty.project/releases).\n\n## Workaround\nThe vendor recommends users to filter the requests before they are sent to Jetty. One way to filter them would be to use a proxy.\n\n## Dependency tree\n- org.owasp.webgoat.lesson:xxe:v8.1.0:-maven\n    - com.github.tomakehurst:wiremock:2.8.0\n        - org.eclipse.jetty:jetty-servlet:9.4.24.v20191120\n\n\n## References\n* Common Weakness Enumeration: [CWE-410](https://cwe.mitre.org/data/definitions/410.html)\n* Common Weakness Enumeration: [CWE-664](https://cwe.mitre.org/data/definitions/664.html)\n\n","text":"Eclipse Jetty does not correctly handle invalid HTTP/2 requests. An attacker could exploit this flaw to exhaust the HTTP/2 flow control window or TCP congest the connection. This will cause the relevant selector threads to be blocked and it will lead to a denial-of-service (DoS)."},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-410","external/cwe/cwe-664"]},"defaultConfiguration":{"level":"warning"}},{"id":"CVE-2020-27218 jetty-servlet 9.4.24.v20191120: wiremock 2.8.0: org.eclipse.jetty","shortDescription":{"text":"Transitive Dependency: jetty-servlet 9.4.24.v20191120 from wiremock 2.8.0 (CVE-2020-27218)"},"fullDescription":{"text":"Eclipse Jetty contains a vulnerability that allows a remote attacker to inject data into other client's requests. This vulnerability only exists when GZIP request body inflation is enabled, and requests from different clients are multiplexed onto a single connection."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| jetty-servlet 9.4.24.v20191120  | 9.4.53.20231009  | 11.0.19 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/ee93672f-853c-4083-a5e8-0d5ab21e8bf9?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=d8221aaa-7d55-4b5a-b3e0-2b5cba26ce60)\n\n\n## Description\nEclipse Jetty contains a vulnerability that allows a remote attacker to inject data into other client's requests. This vulnerability only exists when GZIP request body inflation is enabled, and requests from different clients are multiplexed onto a single connection.\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [CVE-2020-27218](https://openhub.net/vulnerabilities/bdsa/CVE-2020-27218) - Sensitive Information in Resource Not Removed Before Reuse\n\n\n\n## Solution\nFixed in **[9.4.35.v20201120](https://github.com/eclipse/jetty.project/releases/tag/jetty-9.4.35.v20201120)** by [this](https://github.com/eclipse/jetty.project/commit/850a0330ff25da42b1b1cbdbdca0fcc0c40e47e9) commit.\n\nFixed in **[10.0.0.beta3](https://github.com/eclipse/jetty.project/releases/tag/jetty-10.0.0.beta3)** and in **[11.0.0.beta3](https://github.com/eclipse/jetty.project/releases/tag/jetty-11.0.0.beta3)** by [this](https://github.com/eclipse/jetty.project/commit/34d27e85483c119b7dd1aa9beda735844d14b605) commit.\n\n## Workaround\nThe vendor states that any of the following will mitigate this vulnerability:\n\n\n\u003e * Disabling compressed request body inflation by GzipHandler.\n\u003e * By always fully consuming the request content before sending a response.\n\u003e * By adding a Connection: close to any response where the servlet does not fully consume request content.\n\n## Dependency tree\n- org.owasp.webgoat.lesson:xxe:v8.1.0:-maven\n    - com.github.tomakehurst:wiremock:2.8.0\n        - org.eclipse.jetty:jetty-servlet:9.4.24.v20191120\n\n\n## References\n* Common Weakness Enumeration: [CWE-226](https://cwe.mitre.org/data/definitions/226.html)\n\n","text":"Eclipse Jetty contains a vulnerability that allows a remote attacker to inject data into other client's requests. This vulnerability only exists when GZIP request body inflation is enabled, and requests from different clients are multiplexed onto a single connection."},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-226"]},"defaultConfiguration":{"level":"warning"}},{"id":"CVE-2023-26048 jetty-servlet 9.4.24.v20191120: wiremock 2.8.0: org.eclipse.jetty","shortDescription":{"text":"Transitive Dependency: jetty-servlet 9.4.24.v20191120 from wiremock 2.8.0 (CVE-2023-26048)"},"fullDescription":{"text":"Eclipse Jetty contains a vulnerability in its multipart request parsing mechanism that can lead to an out-of-memory error due to insufficient limiting measures. An attacker can exploit this flaw by supplying a request containing a large multipart without a filename in order to cause a denial-of-service (DoS)."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| jetty-servlet 9.4.24.v20191120  | 9.4.53.20231009  | 11.0.19 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/ee93672f-853c-4083-a5e8-0d5ab21e8bf9?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=d8221aaa-7d55-4b5a-b3e0-2b5cba26ce60)\n\n\n## Description\nEclipse Jetty contains a vulnerability in its multipart request parsing mechanism that can lead to an out-of-memory error due to insufficient limiting measures. An attacker can exploit this flaw by supplying a request containing a large multipart without a filename in order to cause a denial-of-service (DoS).\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [CVE-2023-26048](https://openhub.net/vulnerabilities/bdsa/CVE-2023-26048) - Uncontrolled Resource Consumption\n\n\n\n## Solution\nFixed in [**jetty-9.4.51.v20230217**](https://github.com/eclipse/jetty.project/releases/tag/jetty-9.4.51.v20230217) by [this](https://github.com/eclipse/jetty.project/commit/c3021592218da289563987e6f7fbe05f8704b285) commit.\n\nFixed by [this](https://github.com/eclipse/jetty.project/commit/622befbd0d52f61c1acd41b4ef12458311494f1a) commit in:\n* **[jetty-10.0.14](https://github.com/eclipse/jetty.project/releases/tag/jetty-10.0.14)**\n* **[jetty-11.0.14](https://github.com/eclipse/jetty.project/releases/tag/jetty-11.0.14)**\n* **[jetty-12.0.0.beta0](https://github.com/eclipse/jetty.project/releases/tag/jetty-12.0.0.beta0)**\n\nThe latest stable releases can be found [here](https://github.com/eclipse/jetty.project/releases).\n\n## Workaround\nIt is recommended to set the multipart parameter `maxRequestSize` to a non-negative value in order to limit the whole multipart content. It has also been stated that limiting the multipart parameter `maxFileSize` will not be enough since the attacker can supply a large number of parts that, when summed up, will cause memory issues.\n\n## Dependency tree\n- org.owasp.webgoat.lesson:xxe:v8.1.0:-maven\n    - com.github.tomakehurst:wiremock:2.8.0\n        - org.eclipse.jetty:jetty-servlet:9.4.24.v20191120\n\n\n## References\n* Common Weakness Enumeration: [CWE-400](https://cwe.mitre.org/data/definitions/400.html)\n* Common Weakness Enumeration: [CWE-770](https://cwe.mitre.org/data/definitions/770.html)\n\n","text":"Eclipse Jetty contains a vulnerability in its multipart request parsing mechanism that can lead to an out-of-memory error due to insufficient limiting measures. An attacker can exploit this flaw by supplying a request containing a large multipart without a filename in order to cause a denial-of-service (DoS)."},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-400","external/cwe/cwe-770"]},"defaultConfiguration":{"level":"warning"}},{"id":"CVE-2023-26049 jetty-servlet 9.4.24.v20191120: wiremock 2.8.0: org.eclipse.jetty","shortDescription":{"text":"Transitive Dependency: jetty-servlet 9.4.24.v20191120 from wiremock 2.8.0 (CVE-2023-26049)"},"fullDescription":{"text":"Eclipse Jetty does not properly parse quoted values in cookies. This could allow an attacker to smuggle cookies within other cookies into the application. The attacker can also tamper with the cookie parsing mechanism and cause other unintended behavior."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| jetty-servlet 9.4.24.v20191120  | 9.4.53.20231009  | 11.0.19 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/ee93672f-853c-4083-a5e8-0d5ab21e8bf9?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=d8221aaa-7d55-4b5a-b3e0-2b5cba26ce60)\n\n\n## Description\nEclipse Jetty does not properly parse quoted values in cookies. This could allow an attacker to smuggle cookies within other cookies into the application. The attacker can also tamper with the cookie parsing mechanism and cause other unintended behavior.\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [CVE-2023-26049](https://openhub.net/vulnerabilities/bdsa/CVE-2023-26049) - Weak Input Validation\n\n\n\n## Solution\nFixed in version [**jetty-9.4.51.v20230217**](https://github.com/eclipse/jetty.project/releases/tag/jetty-9.4.51.v20230217) by [this](https://github.com/eclipse/jetty.project/commit/1be1401bafb4c46fae3c234c8e93743a661dcf21) commit.\n\nFixed by [this](https://github.com/eclipse/jetty.project/commit/7b8c2c1bf081c7f408e5da3371c8c3c9802f09fd) commit in:\n* [**jetty-10.0.14**](https://github.com/eclipse/jetty.project/releases/tag/jetty-10.0.14)\n* [**jetty-11.0.14**](https://github.com/eclipse/jetty.project/releases/tag/jetty-11.0.14)\n* [**jetty-12.0.0.beta0**](https://github.com/eclipse/jetty.project/releases/tag/jetty-12.0.0.beta0)\n\nThe latest stable releases can be found [here](https://github.com/eclipse/jetty.project/releases).\n\n\n\n## Dependency tree\n- org.owasp.webgoat.lesson:xxe:v8.1.0:-maven\n    - com.github.tomakehurst:wiremock:2.8.0\n        - org.eclipse.jetty:jetty-servlet:9.4.24.v20191120\n\n\n## References\n* Common Weakness Enumeration: [CWE-20](https://cwe.mitre.org/data/definitions/20.html)\n\n","text":"Eclipse Jetty does not properly parse quoted values in cookies. This could allow an attacker to smuggle cookies within other cookies into the application. The attacker can also tamper with the cookie parsing mechanism and cause other unintended behavior."},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-20"]},"defaultConfiguration":{"level":"warning"}},{"id":"CVE-2023-40167 jetty-servlet 9.4.24.v20191120: wiremock 2.8.0: org.eclipse.jetty","shortDescription":{"text":"Transitive Dependency: jetty-servlet 9.4.24.v20191120 from wiremock 2.8.0 (CVE-2023-40167)"},"fullDescription":{"text":"Eclipse Jetty is vulnerable to HTTP request smuggling due to the improper parsing of HTTP requests. An attacker could exploit this vulnerability by sending maliciously crafted HTTP requests to a vulnerable endpoint with multiple requests included inside the body by manipulating the `Content-Length` of the request. The smuggling of HTTP requests may allow for the bypass of security tools such as web application firewalls (WAFs) and intrusion detection systems (IDSs)."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| jetty-servlet 9.4.24.v20191120  | 9.4.53.20231009  | 11.0.19 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/ee93672f-853c-4083-a5e8-0d5ab21e8bf9?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=d8221aaa-7d55-4b5a-b3e0-2b5cba26ce60)\n\n\n## Description\nEclipse Jetty is vulnerable to HTTP request smuggling due to the improper parsing of HTTP requests. An attacker could exploit this vulnerability by sending maliciously crafted HTTP requests to a vulnerable endpoint with multiple requests included inside the body by manipulating the `Content-Length` of the request. The smuggling of HTTP requests may allow for the bypass of security tools such as web application firewalls (WAFs) and intrusion detection systems (IDSs).\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [CVE-2023-40167](https://openhub.net/vulnerabilities/bdsa/CVE-2023-40167) - Improper Handling of Length Parameter Inconsistency\n\n\n\n## Solution\nFixed in versions:\n* [**12.0.1**](https://github.com/eclipse/jetty.project/releases/tag/jetty-12.0.1) by [this](https://github.com/eclipse/jetty.project/commit/13cf2dade746e5d3bb123fd7ecd9fdc28fc43082) commit.\n* [**11.0.16**](https://github.com/eclipse/jetty.project/releases/tag/jetty-11.0.16) and [**10.0.16**](https://github.com/eclipse/jetty.project/releases/tag/jetty-10.0.16) by [this](https://github.com/eclipse/jetty.project/commit/003e46cae4d71e147d51fb8ea378e8989d381cc3) commit.\n* [**9.4.52.v20230823**](https://github.com/eclipse/jetty.project/releases/tag/jetty-9.4.52.v20230823) by [this](https://github.com/eclipse/jetty.project/commit/e4d596eafc887bcd813ae6e28295b5ce327def47) commit.\n\nThe latest stable releases can be found [here](https://eclipse.dev/jetty/download.php).\n\n\n\n## Dependency tree\n- org.owasp.webgoat.lesson:xxe:v8.1.0:-maven\n    - com.github.tomakehurst:wiremock:2.8.0\n        - org.eclipse.jetty:jetty-servlet:9.4.24.v20191120\n\n\n## References\n* Common Weakness Enumeration: [CWE-130](https://cwe.mitre.org/data/definitions/130.html)\n\n","text":"Eclipse Jetty is vulnerable to HTTP request smuggling due to the improper parsing of HTTP requests. An attacker could exploit this vulnerability by sending maliciously crafted HTTP requests to a vulnerable endpoint with multiple requests included inside the body by manipulating the `Content-Length` of the request. The smuggling of HTTP requests may allow for the bypass of security tools such as web application firewalls (WAFs) and intrusion detection systems (IDSs)."},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-130"]},"defaultConfiguration":{"level":"warning"}},{"id":"CVE-2023-36479 jetty-servlet 9.4.24.v20191120: wiremock 2.8.0: org.eclipse.jetty","shortDescription":{"text":"Transitive Dependency: jetty-servlet 9.4.24.v20191120 from wiremock 2.8.0 (CVE-2023-36479)"},"fullDescription":{"text":"Eclipse Jetty contains an improper neutralization of quoting syntax issue within the CGI servlet. This could allow an authenticated attacker to send a request to the CGI Servlet for a binary with a space in its name in order to manipulate the command structure and execute incorrect commands."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| jetty-servlet 9.4.24.v20191120  | 9.4.53.20231009  | 11.0.19 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/ee93672f-853c-4083-a5e8-0d5ab21e8bf9?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=d8221aaa-7d55-4b5a-b3e0-2b5cba26ce60)\n\n\n## Description\nEclipse Jetty contains an improper neutralization of quoting syntax issue within the CGI servlet. This could allow an authenticated attacker to send a request to the CGI Servlet for a binary with a space in its name in order to manipulate the command structure and execute incorrect commands.\n\n## Vulnerabilities(BDSA,CVE)\n:large_blue_circle: [CVE-2023-36479](https://openhub.net/vulnerabilities/bdsa/CVE-2023-36479) - Improper Neutralization of Quoting Syntax\n\n\n\n## Solution\nFixed in versions:\n* [**12.0.0.beta1**](https://github.com/eclipse/jetty.project/releases/tag/jetty-12.0.0.beta1) by [this](https://github.com/eclipse/jetty.project/commit/6ce5a0fbcdf06ae647dfd304dd81a1f9b0691a5c) commit.\n* [**11.0.16**](https://github.com/eclipse/jetty.project/releases/tag/jetty-11.0.16) and [**10.0.16**](https://github.com/eclipse/jetty.project/releases/tag/jetty-10.0.16) by [this](https://github.com/eclipse/jetty.project/commit/c29491e5ac70c98e4d7d7dff2a6465ddecc45c0c) commit.\n* [**9.4.52.v20230823**](https://github.com/eclipse/jetty.project/releases/tag/jetty-9.4.52.v20230823) by [this](https://github.com/eclipse/jetty.project/commit/ec7e1fd173481e526db4092f558aa2b5aab57580) commit.\n\nThe latest stable releases can be found [here](https://eclipse.dev/jetty/download.php).\n\n## Workaround\nThe vendor has issued the following workaround:\n\n\u003e The` org.eclipse.jetty.servlets.CGI` Servlet should not be used. Fast CGI support is available instead.\n\n## Dependency tree\n- org.owasp.webgoat.lesson:xxe:v8.1.0:-maven\n    - com.github.tomakehurst:wiremock:2.8.0\n        - org.eclipse.jetty:jetty-servlet:9.4.24.v20191120\n\n\n## References\n* Common Weakness Enumeration: [CWE-149](https://cwe.mitre.org/data/definitions/149.html)\n\n","text":"Eclipse Jetty contains an improper neutralization of quoting syntax issue within the CGI servlet. This could allow an authenticated attacker to send a request to the CGI Servlet for a binary with a space in its name in order to manipulate the command structure and execute incorrect commands."},"properties":{"security-severity":"3.8","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-149"]},"defaultConfiguration":{"level":"note"}},{"id":"CVE-2023-41900 jetty-servlet 9.4.24.v20191120: wiremock 2.8.0: org.eclipse.jetty","shortDescription":{"text":"Transitive Dependency: jetty-servlet 9.4.24.v20191120 from wiremock 2.8.0 (CVE-2023-41900)"},"fullDescription":{"text":"Eclipse Jetty contains an improper authentication vulnerability. This could allow an authenticated attacker to bypass authentication after it has been rejected or revoked by the `LoginService` and make a request as if authenticated.\n\n**Note:** The vendor has stated that this issue impacts usages of the `jetty-openid` which have configured a nested `LoginService` and where that `LoginService` is capable of rejecting previously authenticated users."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| jetty-servlet 9.4.24.v20191120  | 9.4.53.20231009  | 11.0.19 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/ee93672f-853c-4083-a5e8-0d5ab21e8bf9?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=d8221aaa-7d55-4b5a-b3e0-2b5cba26ce60)\n\n\n## Description\nEclipse Jetty contains an improper authentication vulnerability. This could allow an authenticated attacker to bypass authentication after it has been rejected or revoked by the `LoginService` and make a request as if authenticated.\n\n**Note:** The vendor has stated that this issue impacts usages of the `jetty-openid` which have configured a nested `LoginService` and where that `LoginService` is capable of rejecting previously authenticated users.\n\n## Vulnerabilities(BDSA,CVE)\n:large_blue_circle: [CVE-2023-41900](https://openhub.net/vulnerabilities/bdsa/CVE-2023-41900) - Improper Authentication\n\n\n\n## Solution\nFixed in version [**11.0.15**](https://github.com/eclipse/jetty.project/releases/tag/jetty-11.0.15) and [**10.0.15**](https://github.com/eclipse/jetty.project/releases/tag/jetty-10.0.15) by [this](https://github.com/eclipse/jetty.project/commit/24b7d06fd5ce5468caa3eaa93688879fb2900fda) commit and in [**9.4.52.v20230823**](https://github.com/eclipse/jetty.project/releases/tag/jetty-9.4.52.v20230823) by [this](https://github.com/eclipse/jetty.project/commit/5f48b4170f36b275e1576548b44bd5009feba669) commit.\n\nThe latest stable releases can be found [here](https://eclipse.dev/jetty/download.php).\n\n\n\n## Dependency tree\n- org.owasp.webgoat.lesson:xxe:v8.1.0:-maven\n    - com.github.tomakehurst:wiremock:2.8.0\n        - org.eclipse.jetty:jetty-servlet:9.4.24.v20191120\n\n\n## References\n* Common Weakness Enumeration: [CWE-287](https://cwe.mitre.org/data/definitions/287.html)\n\n","text":"Eclipse Jetty contains an improper authentication vulnerability. This could allow an authenticated attacker to bypass authentication after it has been rejected or revoked by the `LoginService` and make a request as if authenticated.\n\n**Note:** The vendor has stated that this issue impacts usages of the `jetty-openid` which have configured a nested `LoginService` and where that `LoginService` is capable of rejecting previously authenticated users."},"properties":{"security-severity":"3.8","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-287"]},"defaultConfiguration":{"level":"note"}},{"id":"CVE-2021-34428 jetty-servlet 9.4.24.v20191120: wiremock 2.8.0: org.eclipse.jetty","shortDescription":{"text":"Transitive Dependency: jetty-servlet 9.4.24.v20191120 from wiremock 2.8.0 (CVE-2021-34428)"},"fullDescription":{"text":"Eclipse Jetty is vulnerable to insufficient session expiry. This may result in sessions used on a shared computer persisting for longer than intended."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| jetty-servlet 9.4.24.v20191120  | 9.4.53.20231009  | 11.0.19 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/ee93672f-853c-4083-a5e8-0d5ab21e8bf9?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=d8221aaa-7d55-4b5a-b3e0-2b5cba26ce60)\n\n\n## Description\nEclipse Jetty is vulnerable to insufficient session expiry. This may result in sessions used on a shared computer persisting for longer than intended.\n\n## Vulnerabilities(BDSA,CVE)\n:large_blue_circle: [CVE-2021-34428](https://openhub.net/vulnerabilities/bdsa/CVE-2021-34428) - Insufficient Session Expiration\n\n\n\n## Solution\nFixed in:\n* [**9.4.41.v20210516**](https://github.com/eclipse/jetty.project/releases/tag/jetty-9.4.41.v20210516) by [this](https://github.com/eclipse/jetty.project/commit/087f486b4461746b4ded45833887b3ccb136ee85) commit, \n* [**10.0.3**](https://github.com/eclipse/jetty.project/releases/tag/jetty-10.0.3) by [this](https://github.com/eclipse/jetty.project/commit/cd6462a6252d083b3c9ea2684aab0b4c9669ed19) commit, \n* [**11.0.3**](https://github.com/eclipse/jetty.project/releases/tag/jetty-11.0.3) by [this](https://github.com/eclipse/jetty.project/commit/cd6462a6252d083b3c9ea2684aab0b4c9669ed19) commit.\n\nThe latest stable releases are available [here](https://github.com/eclipse/jetty.project/releases).\n\n## Workaround\nThe vendor has [stated](https://github.com/eclipse/jetty.project/security/advisories/GHSA-m6cp-vxjx-65j6) that a workaround is to ensure that the application catches all Throwables within their `SessionListener#sessionDestroyed()` implementations.\n\n## Dependency tree\n- org.owasp.webgoat.lesson:xxe:v8.1.0:-maven\n    - com.github.tomakehurst:wiremock:2.8.0\n        - org.eclipse.jetty:jetty-servlet:9.4.24.v20191120\n\n\n## References\n* Common Weakness Enumeration: [CWE-613](https://cwe.mitre.org/data/definitions/613.html)\n\n","text":"Eclipse Jetty is vulnerable to insufficient session expiry. This may result in sessions used on a shared computer persisting for longer than intended."},"properties":{"security-severity":"3.8","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-613"]},"defaultConfiguration":{"level":"note"}},{"id":"CVE-2022-2047 jetty-servlet 9.4.24.v20191120: wiremock 2.8.0: org.eclipse.jetty","shortDescription":{"text":"Transitive Dependency: jetty-servlet 9.4.24.v20191120 from wiremock 2.8.0 (CVE-2022-2047)"},"fullDescription":{"text":"Eclipse Jetty does not correctly handle invalid authority segments of HTTP URIs. An authenticated attacker could exploit this flaw by passing an invalid URI that contains an improper authority with no host so that it is interpreted as one with a host."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| jetty-servlet 9.4.24.v20191120  | 9.4.53.20231009  | 11.0.19 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/ee93672f-853c-4083-a5e8-0d5ab21e8bf9?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=d8221aaa-7d55-4b5a-b3e0-2b5cba26ce60)\n\n\n## Description\nEclipse Jetty does not correctly handle invalid authority segments of HTTP URIs. An authenticated attacker could exploit this flaw by passing an invalid URI that contains an improper authority with no host so that it is interpreted as one with a host.\n\n## Vulnerabilities(BDSA,CVE)\n:large_blue_circle: [CVE-2022-2047](https://openhub.net/vulnerabilities/bdsa/CVE-2022-2047) - Weak Input Validation\n\n\n\n## Solution\nFixed in versions:\n* [**9.4.47**](https://github.com/eclipse/jetty.project/releases/tag/jetty-9.4.47.v20220610) by [this](https://github.com/eclipse/jetty.project/commit/4ca8afbbd667c19a084d5ff14a4f08eb7049d1c7) commit.\n* [**10.0.10**](https://github.com/eclipse/jetty.project/releases/tag/jetty-10.0.10) and [**11.0.10**](https://github.com/eclipse/jetty.project/releases/tag/jetty-11.0.10) by [this](https://github.com/eclipse/jetty.project/commit/d1e64f469362bb9371d530cccded5ecb13fa1cb5) commit.\n\nThe latest stable releases can be found [here](https://github.com/eclipse/jetty.project/releases).\n\n\n\n## Dependency tree\n- org.owasp.webgoat.lesson:xxe:v8.1.0:-maven\n    - com.github.tomakehurst:wiremock:2.8.0\n        - org.eclipse.jetty:jetty-servlet:9.4.24.v20191120\n\n\n## References\n* Common Weakness Enumeration: [CWE-20](https://cwe.mitre.org/data/definitions/20.html)\n\n","text":"Eclipse Jetty does not correctly handle invalid authority segments of HTTP URIs. An authenticated attacker could exploit this flaw by passing an invalid URI that contains an improper authority with no host so that it is interpreted as one with a host."},"properties":{"security-severity":"3.8","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-20"]},"defaultConfiguration":{"level":"note"}},{"id":"CVE-2016-10735 bootstrap 3.3.7: org.webjars","shortDescription":{"text":"Direct Dependency: bootstrap 3.3.7 (CVE-2016-10735)"},"fullDescription":{"text":"Bootstrap is vulnerable to cross-site scripting (XSS) due to the insufficient sanitization of user-provided input. An attacker could execute malicious scripts within a victim's browser by tricking them into clicking on a crafted link. This could allow the attacker to obtain sensitive information such as browser cookies."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| bootstrap 3.3.7  | 3.4.1  | 5.3.2 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/cc1ae8f5-d183-4581-ad92-44f7ce2235ad?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=677efaf5-5bad-4f93-904b-dc4b69af9199)\n\n\n## Description\nBootstrap is vulnerable to cross-site scripting (XSS) due to the insufficient sanitization of user-provided input. An attacker could execute malicious scripts within a victim's browser by tricking them into clicking on a crafted link. This could allow the attacker to obtain sensitive information such as browser cookies.\n\n## Vulnerabilities(BDSA,CVE)\n:orange_circle: [CVE-2016-10735](https://openhub.net/vulnerabilities/bdsa/CVE-2016-10735) - Cross-site Scripting\n\n\n\n## Solution\nFixed in version [**4.0.0-beta.2**](https://github.com/twbs/bootstrap/releases/tag/v4.0.0-beta.2) by [this](https://github.com/twbs/bootstrap/commit/bcad4bcb5f5a9ef079b2883a48a698b35261e083) commit.\n\nFixed in version [**3.4.0**](https://github.com/twbs/bootstrap/releases/tag/v3.4.0) by [this](https://github.com/twbs/bootstrap/commit/29f9237f735b90dbc89e003db0c62dec2db0b308) commit and [this](https://github.com/twbs/bootstrap/commit/13bf8aeae3db71e28af69782328c22215795c169) commit.\n\n\n\n\n\n## References\n* Common Weakness Enumeration: [CWE-79](https://cwe.mitre.org/data/definitions/79.html)\n\n","text":"Bootstrap is vulnerable to cross-site scripting (XSS) due to the insufficient sanitization of user-provided input. An attacker could execute malicious scripts within a victim's browser by tricking them into clicking on a crafted link. This could allow the attacker to obtain sensitive information such as browser cookies."},"properties":{"security-severity":"8.9","tags":["security","open_source_analysis","direct_dependency","patch_available","external/cwe/cwe-79"]},"defaultConfiguration":{"level":"error"}},{"id":"CVE-2018-20677 bootstrap 3.3.7: org.webjars","shortDescription":{"text":"Direct Dependency: bootstrap 3.3.7 (CVE-2018-20677)"},"fullDescription":{"text":"A stored cross-site scripting (XSS) vulnerability has been discovered in Bootstrap. An attacker could exploit this vulnerability by distributing  a crafted link that executes malicious scripts in the victims browser."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| bootstrap 3.3.7  | 3.4.1  | 5.3.2 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/cc1ae8f5-d183-4581-ad92-44f7ce2235ad?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=677efaf5-5bad-4f93-904b-dc4b69af9199)\n\n\n## Description\nA stored cross-site scripting (XSS) vulnerability has been discovered in Bootstrap. An attacker could exploit this vulnerability by distributing  a crafted link that executes malicious scripts in the victims browser.\n\n## Vulnerabilities(BDSA,CVE)\n:orange_circle: [CVE-2018-20677](https://openhub.net/vulnerabilities/bdsa/CVE-2018-20677) - Cross-site Scripting\n\n\n\n## Solution\nFixed in versions:\n\n* [**3.4.0**](https://github.com/twbs/bootstrap/releases/tag/v3.4.0) by [this](https://github.com/twbs/bootstrap/commit/2a5ba23ce8f041f3548317acc992ed8a736b609d) commit\n* [**4.0.0 alpha**](https://github.com/twbs/bootstrap/releases/tag/v4.0.0-alpha) by [this](https://github.com/twbs/bootstrap/commit/1e9e3316b6718af09bfe473f5eb364e4f9475731) commit.\n\n\n\n\n\n## References\n* Common Weakness Enumeration: [CWE-79](https://cwe.mitre.org/data/definitions/79.html)\n\n","text":"A stored cross-site scripting (XSS) vulnerability has been discovered in Bootstrap. An attacker could exploit this vulnerability by distributing  a crafted link that executes malicious scripts in the victims browser."},"properties":{"security-severity":"8.9","tags":["security","open_source_analysis","direct_dependency","patch_available","external/cwe/cwe-79"]},"defaultConfiguration":{"level":"error"}},{"id":"CVE-2018-20676 bootstrap 3.3.7: org.webjars","shortDescription":{"text":"Direct Dependency: bootstrap 3.3.7 (CVE-2018-20676)"},"fullDescription":{"text":"A reflected cross-site scripting (XSS) vulnerability has been discovered in Bootstrap. An attacker could exploit this vulnerability by distributing  a crafted link that executes malicious scripts on the victims browser."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| bootstrap 3.3.7  | 3.4.1  | 5.3.2 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/cc1ae8f5-d183-4581-ad92-44f7ce2235ad?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=677efaf5-5bad-4f93-904b-dc4b69af9199)\n\n\n## Description\nA reflected cross-site scripting (XSS) vulnerability has been discovered in Bootstrap. An attacker could exploit this vulnerability by distributing  a crafted link that executes malicious scripts on the victims browser.\n\n## Vulnerabilities(BDSA,CVE)\n:orange_circle: [CVE-2018-20676](https://openhub.net/vulnerabilities/bdsa/CVE-2018-20676) - Cross-site Scripting\n\n\n\n## Solution\nFixed in version [**3.4.0**](https://github.com/twbs/bootstrap/releases/tag/v3.4.0) by [this](https://github.com/twbs/bootstrap/commit/2a5ba23ce8f041f3548317acc992ed8a736b609d) commit.\nFixed in [**4.0.0-alpha**](https://github.com/twbs/bootstrap/releases/tag/v4.0.0-alpha) by [this](https://github.com/twbs/bootstrap/commit/3452e8dc8336c7a4151bcccdb9d3d4202f06f294) commit.\n\n\n\n\n\n## References\n* Common Weakness Enumeration: [CWE-79](https://cwe.mitre.org/data/definitions/79.html)\n\n","text":"A reflected cross-site scripting (XSS) vulnerability has been discovered in Bootstrap. An attacker could exploit this vulnerability by distributing  a crafted link that executes malicious scripts on the victims browser."},"properties":{"security-severity":"8.9","tags":["security","open_source_analysis","direct_dependency","patch_available","external/cwe/cwe-79"]},"defaultConfiguration":{"level":"error"}},{"id":"CVE-2019-8331 bootstrap 3.3.7: org.webjars","shortDescription":{"text":"Direct Dependency: bootstrap 3.3.7 (CVE-2019-8331)"},"fullDescription":{"text":"bootstrap is vulnerable to cross-site scripting (XSS) due to an absence of sanitation in the `data-template`, `data-content` and `data-title` properties for tooltips and popovers plugin content."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| bootstrap 3.3.7  | 3.4.1  | 5.3.2 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/cc1ae8f5-d183-4581-ad92-44f7ce2235ad?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=677efaf5-5bad-4f93-904b-dc4b69af9199)\n\n\n## Description\nbootstrap is vulnerable to cross-site scripting (XSS) due to an absence of sanitation in the `data-template`, `data-content` and `data-title` properties for tooltips and popovers plugin content.\n\n## Vulnerabilities(BDSA,CVE)\n:orange_circle: [CVE-2019-8331](https://openhub.net/vulnerabilities/bdsa/CVE-2019-8331) - Cross-site Scripting\n\n\n\n## Solution\nFixed in [**4.3.1**](https://github.com/twbs/bootstrap/releases/tag/v4.3.1) by [this](https://github.com/twbs/bootstrap/commit/7bc4d2e0bc65151b6f60dccad50c9c8f50252bd6) commit and [this](https://github.com/twbs/bootstrap/commit/10b97f6ed94168c749caa7b5f6a6e1504f4e0629) commit.\nFixed in [**3.4.1**](https://github.com/twbs/bootstrap/releases/tag/v3.4.1) by [this](https://github.com/twbs/bootstrap/commit/d821de271297a74a8d6a309de1d4cd9113dd77ed) commit and [this](https://github.com/twbs/bootstrap/commit/2c8abb9a4393addc5ffb39e649e09391c2fee701) commit.\n\n\n\n\n\n## References\n* Common Weakness Enumeration: [CWE-79](https://cwe.mitre.org/data/definitions/79.html)\n\n","text":"bootstrap is vulnerable to cross-site scripting (XSS) due to an absence of sanitation in the `data-template`, `data-content` and `data-title` properties for tooltips and popovers plugin content."},"properties":{"security-severity":"8.9","tags":["security","open_source_analysis","direct_dependency","patch_available","external/cwe/cwe-79"]},"defaultConfiguration":{"level":"error"}},{"id":"CVE-2018-14040 bootstrap 3.3.7: org.webjars","shortDescription":{"text":"Direct Dependency: bootstrap 3.3.7 (CVE-2018-14040)"},"fullDescription":{"text":"In Bootstrap before 4.1.2, XSS is possible in the collapse data-parent attribute."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| bootstrap 3.3.7  | 3.4.1  | 5.3.2 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/cc1ae8f5-d183-4581-ad92-44f7ce2235ad?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=677efaf5-5bad-4f93-904b-dc4b69af9199)\n\n\n## Description\nIn Bootstrap before 4.1.2, XSS is possible in the collapse data-parent attribute.\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [CVE-2018-14040](https://openhub.net/vulnerabilities/bdsa/CVE-2018-14040) - Cross-site Scripting\n\n\n\n\n\n\n\n\n\n## References\n* Common Weakness Enumeration: [CWE-79](https://cwe.mitre.org/data/definitions/79.html)\n\n","text":"In Bootstrap before 4.1.2, XSS is possible in the collapse data-parent attribute."},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","direct_dependency","patch_available","external/cwe/cwe-79"]},"defaultConfiguration":{"level":"warning"}},{"id":"CVE-2018-14042 bootstrap 3.3.7: org.webjars","shortDescription":{"text":"Direct Dependency: bootstrap 3.3.7 (CVE-2018-14042)"},"fullDescription":{"text":"In Bootstrap before 4.1.2, XSS is possible in the data-container property of tooltip."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| bootstrap 3.3.7  | 3.4.1  | 5.3.2 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/cc1ae8f5-d183-4581-ad92-44f7ce2235ad?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=677efaf5-5bad-4f93-904b-dc4b69af9199)\n\n\n## Description\nIn Bootstrap before 4.1.2, XSS is possible in the data-container property of tooltip.\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [CVE-2018-14042](https://openhub.net/vulnerabilities/bdsa/CVE-2018-14042) - Cross-site Scripting\n\n\n\n\n\n\n\n\n\n## References\n* Common Weakness Enumeration: [CWE-79](https://cwe.mitre.org/data/definitions/79.html)\n\n","text":"In Bootstrap before 4.1.2, XSS is possible in the data-container property of tooltip."},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","direct_dependency","patch_available","external/cwe/cwe-79"]},"defaultConfiguration":{"level":"warning"}},{"id":"CVE-2022-41853 hsqldb 2.5.0: org.hsqldb","shortDescription":{"text":"Direct Dependency: hsqldb 2.5.0 (CVE-2022-41853)"},"fullDescription":{"text":"HyperSQL DataBase is vulnerable to remote code execution (RCE) due to improper input validation thus allowing unsafe reflection. An authenticated attacker could exploit this by supplying a crafted input to potentially execute code on the application."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| hsqldb 2.5.0  | 2.7.2  | 2.7.2 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/4feaa48d-a20d-48ee-a2c0-69a42ada59ae?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=ca06b3e3-eceb-4d4a-bcc5-aa1c16196667)\n\n\n## Description\nHyperSQL DataBase is vulnerable to remote code execution (RCE) due to improper input validation thus allowing unsafe reflection. An authenticated attacker could exploit this by supplying a crafted input to potentially execute code on the application.\n\n## Vulnerabilities(BDSA,CVE)\n:orange_circle: [CVE-2022-41853](https://openhub.net/vulnerabilities/bdsa/CVE-2022-41853) - Unsafe Reflection\n\n\n\n## Solution\nFixed in version [**2.7.1**](https://github.com/ryenus/hsqldb/releases/tag/2.7.1) by [this](https://github.com/ryenus/hsqldb/commit/b6719c67b41eb9298c2451ad2829bf03b262a941) commit.\n\nThe latest stable releases can be found [here](https://github.com/ryenus/hsqldb/tags).\n\n## Workaround\nThe following workaround has been advised:\n\nSet the system property `hsqldb.method_class_names` to classes which are allowed to be called.\n\n\n\n## References\n* Common Weakness Enumeration: [CWE-470](https://cwe.mitre.org/data/definitions/470.html)\n\n","text":"HyperSQL DataBase is vulnerable to remote code execution (RCE) due to improper input validation thus allowing unsafe reflection. An authenticated attacker could exploit this by supplying a crafted input to potentially execute code on the application."},"properties":{"security-severity":"8.9","tags":["security","open_source_analysis","direct_dependency","patch_available","external/cwe/cwe-470"]},"defaultConfiguration":{"level":"error"}},{"id":"BDSA-2021-3731 spring-boot 2.2.2.RELEASE: spring-boot-devtools 2.2.2.RELEASE: org.springframework.boot","shortDescription":{"text":"Transitive Dependency: spring-boot 2.2.2.RELEASE from spring-boot-devtools 2.2.2.RELEASE (BDSA-2021-3731)"},"fullDescription":{"text":"Apache Log4j, as used in many popular services, is vulnerable to improperly allowing lightweight directory access protocol (LDAP) access via Java naming and directory interface (JNDI). A remote attacker able to supply the end application with specially crafted input that is then processed by the Log4j subcomponent could cause the execution of arbitrary Java code.\n\n**Note** \n\n- log4j-api packages by themselves do not contain the vulnerable functionality and are therefore unaffected. log4j-core packages and the upstream overarching source repository are affected.\n\n- A previously suggested mitigation of setting environment variable `LOG4J_FORMAT_MSG_NO_LOOKUPS=true` is not recommended. This mitigation has been proven inadequate against this vulnerability. \n\n- This vulnerability is partially fixed in [**2.15.0-rc2**](https://github.com/apache/logging-log4j2/releases/tag/log4j-2.15.0-rc2) by [this](https://github.com/apache/logging-log4j2/commit/001aaada7dab82c3c09cde5f8e14245dc9d8b454) commit and [this](https://github.com/apache/logging-log4j2/commit/bac0d8a35c7e354a0d3f706569116dff6c6bd658) commit. These fixes were deemed incomplete. See BDSA-2021-3779 (CVE-2021-45046) for more details.\n\nThis vulnerability is listed as exploitable by the Cybersecurity \u0026 Infrastructure Security Agency in their [Known Exploited Vulnerabilities Catalog](https://www.cisa.gov/known-exploited-vulnerabilities-catalog)."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| spring-boot 2.2.2.RELEASE  | 2.7.18  | 3.2.1 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/48431389-4a2f-44ed-8597-55184ffc0e88?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=ee1b331d-05e0-4bd1-b6ef-727c3b98e324)\n\n\n## Description\nApache Log4j, as used in many popular services, is vulnerable to improperly allowing lightweight directory access protocol (LDAP) access via Java naming and directory interface (JNDI). A remote attacker able to supply the end application with specially crafted input that is then processed by the Log4j subcomponent could cause the execution of arbitrary Java code.\n\n**Note** \n\n- log4j-api packages by themselves do not contain the vulnerable functionality and are therefore unaffected. log4j-core packages and the upstream overarching source repository are affected.\n\n- A previously suggested mitigation of setting environment variable `LOG4J_FORMAT_MSG_NO_LOOKUPS=true` is not recommended. This mitigation has been proven inadequate against this vulnerability. \n\n- This vulnerability is partially fixed in [**2.15.0-rc2**](https://github.com/apache/logging-log4j2/releases/tag/log4j-2.15.0-rc2) by [this](https://github.com/apache/logging-log4j2/commit/001aaada7dab82c3c09cde5f8e14245dc9d8b454) commit and [this](https://github.com/apache/logging-log4j2/commit/bac0d8a35c7e354a0d3f706569116dff6c6bd658) commit. These fixes were deemed incomplete. See BDSA-2021-3779 (CVE-2021-45046) for more details.\n\nThis vulnerability is listed as exploitable by the Cybersecurity \u0026 Infrastructure Security Agency in their [Known Exploited Vulnerabilities Catalog](https://www.cisa.gov/known-exploited-vulnerabilities-catalog).\n\n## Vulnerabilities(BDSA,CVE)\n:red_circle: [BDSA-2021-3731](https://openhub.net/vulnerabilities/bdsa/BDSA-2021-3731) - Insecure Object Deserialization\n\n\n\n## Solution\nFixed in versions:\n*  [**2.16.0-rc1**](https://github.com/apache/logging-log4j2/releases/tag/log4j-2.16.0-rc1) by [this](https://github.com/apache/logging-log4j2/commit/27972043b76c9645476f561c5adc483dec6d3f5d) commit.\n*  [**2.12.2-rc1**](https://github.com/apache/logging-log4j2/releases/tag/log4j-2.12.2-rc1) by [this](https://github.com/apache/logging-log4j2/commit/f819c83804152cb6ed94cb408302e36b21b65053) commit and [this](https://github.com/apache/logging-log4j2/commit/70edc233343815d5efa043b54294a6fb065aa1c5) commit.\n*   [**2.3.1-rc1**](https://github.com/apache/logging-log4j2/releases/tag/log4j-2.3.1-rc1) by [this](https://github.com/apache/logging-log4j2/commit/be848dacbac6df30c4f32b2852e24446033ecf79) commit and [this](https://github.com/apache/logging-log4j2/commit/f6564bb993d547d0a371b75d869042c334bf57f0) commit.\n\nThe latest releases can be found [here](https://github.com/apache/logging-log4j2/tags).\n\nNOTE: It is recommended to upgrade to version  [**2.17.0**](https://downloads.apache.org/logging/log4j/2.17.0/). This recommendation is due to related vulnerabilities (BDSA-2021-3779, CVE-2021-45046) affecting the version that this vulnerability is fixed in.\n\n## Workaround\nThe vendor states that:\n\n\u003e This issue can be mitigated in prior releases (\u003c**2.16.0**) by removing the JndiLookup class from the classpath (example: `zip -q -d log4j-core-*.jar org/apache/logging/log4j/core/lookup/JndiLookup.class`).\n\n## Dependency tree\n- org.owasp.webgoat:webgoat-server:v8.1.0:-maven\n    - org.springframework.boot:spring-boot-devtools:2.2.2.RELEASE\n        - org.springframework.boot:spring-boot:2.2.2.RELEASE\n\n\n## References\n* Common Weakness Enumeration: [CWE-502](https://cwe.mitre.org/data/definitions/502.html)\n\n","text":"Apache Log4j, as used in many popular services, is vulnerable to improperly allowing lightweight directory access protocol (LDAP) access via Java naming and directory interface (JNDI). A remote attacker able to supply the end application with specially crafted input that is then processed by the Log4j subcomponent could cause the execution of arbitrary Java code.\n\n**Note** \n\n- log4j-api packages by themselves do not contain the vulnerable functionality and are therefore unaffected. log4j-core packages and the upstream overarching source repository are affected.\n\n- A previously suggested mitigation of setting environment variable `LOG4J_FORMAT_MSG_NO_LOOKUPS=true` is not recommended. This mitigation has been proven inadequate against this vulnerability. \n\n- This vulnerability is partially fixed in [**2.15.0-rc2**](https://github.com/apache/logging-log4j2/releases/tag/log4j-2.15.0-rc2) by [this](https://github.com/apache/logging-log4j2/commit/001aaada7dab82c3c09cde5f8e14245dc9d8b454) commit and [this](https://github.com/apache/logging-log4j2/commit/bac0d8a35c7e354a0d3f706569116dff6c6bd658) commit. These fixes were deemed incomplete. See BDSA-2021-3779 (CVE-2021-45046) for more details.\n\nThis vulnerability is listed as exploitable by the Cybersecurity \u0026 Infrastructure Security Agency in their [Known Exploited Vulnerabilities Catalog](https://www.cisa.gov/known-exploited-vulnerabilities-catalog)."},"properties":{"security-severity":"9.1","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-502"]},"defaultConfiguration":{"level":"error"}},{"id":"CVE-2022-22965 spring-boot 2.2.2.RELEASE: spring-boot-devtools 2.2.2.RELEASE: org.springframework.boot","shortDescription":{"text":"Transitive Dependency: spring-boot 2.2.2.RELEASE from spring-boot-devtools 2.2.2.RELEASE (CVE-2022-22965)"},"fullDescription":{"text":"Spring Framework is vulnerable to a flaw in the access restrictions to the security sensitive `ClassLoader` property. The restrictions can be bypassed through alternative paths available with Java9 and later. An attacker can leverage this vulnerability to cause remote code execution (RCE).\n\n**Note** this issue exists because the restrictions that were introduced to prevent exploitation of BDSA-2010-0001 (CVE-2010-1622) can be bypassed on platforms where Java9 and later are in use.\n\nThis vulnerability is listed as exploitable by the Cybersecurity \u0026 Infrastructure Security Agency in their [Known Exploited Vulnerabilities Catalog](https://www.cisa.gov/known-exploited-vulnerabilities-catalog)."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| spring-boot 2.2.2.RELEASE  | 2.7.18  | 3.2.1 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/48431389-4a2f-44ed-8597-55184ffc0e88?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=ee1b331d-05e0-4bd1-b6ef-727c3b98e324)\n\n\n## Description\nSpring Framework is vulnerable to a flaw in the access restrictions to the security sensitive `ClassLoader` property. The restrictions can be bypassed through alternative paths available with Java9 and later. An attacker can leverage this vulnerability to cause remote code execution (RCE).\n\n**Note** this issue exists because the restrictions that were introduced to prevent exploitation of BDSA-2010-0001 (CVE-2010-1622) can be bypassed on platforms where Java9 and later are in use.\n\nThis vulnerability is listed as exploitable by the Cybersecurity \u0026 Infrastructure Security Agency in their [Known Exploited Vulnerabilities Catalog](https://www.cisa.gov/known-exploited-vulnerabilities-catalog).\n\n## Vulnerabilities(BDSA,CVE)\n:red_circle: [CVE-2022-22965](https://openhub.net/vulnerabilities/bdsa/CVE-2022-22965) - Incomplete List of Disallowed Inputs\n\n\n\n## Solution\nFixed in [**5.3.18**](https://github.com/spring-projects/spring-framework/releases/tag/v5.3.18) by [this](https://github.com/spring-projects/spring-framework/commit/002546b3e4b8d791ea6acccb81eb3168f51abb15) commit and  [**5.2.20**](https://github.com/spring-projects/spring-framework/releases/tag/v5.2.20.RELEASE) by [this](https://github.com/spring-projects/spring-framework/commit/996f701a1916d10202c1d0d281f06ab1f2e1117e) commit .\n\nThe latest releases can be found [here](https://github.com/spring-projects/spring-framework/tags).\n\n## Workaround\nAn official workaround for the issue has been outlined [here](https://spring.io/blog/2022/03/31/spring-framework-rce-early-announcement).\n\n## Dependency tree\n- org.owasp.webgoat:webgoat-server:v8.1.0:-maven\n    - org.springframework.boot:spring-boot-devtools:2.2.2.RELEASE\n        - org.springframework.boot:spring-boot:2.2.2.RELEASE\n\n\n## References\n* Common Weakness Enumeration: [CWE-184](https://cwe.mitre.org/data/definitions/184.html)\n* Common Weakness Enumeration: [CWE-749](https://cwe.mitre.org/data/definitions/749.html)\n\n","text":"Spring Framework is vulnerable to a flaw in the access restrictions to the security sensitive `ClassLoader` property. The restrictions can be bypassed through alternative paths available with Java9 and later. An attacker can leverage this vulnerability to cause remote code execution (RCE).\n\n**Note** this issue exists because the restrictions that were introduced to prevent exploitation of BDSA-2010-0001 (CVE-2010-1622) can be bypassed on platforms where Java9 and later are in use.\n\nThis vulnerability is listed as exploitable by the Cybersecurity \u0026 Infrastructure Security Agency in their [Known Exploited Vulnerabilities Catalog](https://www.cisa.gov/known-exploited-vulnerabilities-catalog)."},"properties":{"security-severity":"9.1","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-184","external/cwe/cwe-749"]},"defaultConfiguration":{"level":"error"}},{"id":"CVE-2023-20873 spring-boot 2.2.2.RELEASE: spring-boot-devtools 2.2.2.RELEASE: org.springframework.boot","shortDescription":{"text":"Transitive Dependency: spring-boot 2.2.2.RELEASE from spring-boot-devtools 2.2.2.RELEASE (CVE-2023-20873)"},"fullDescription":{"text":"Spring framework contains a security bypass vulnerability when `/**` is used as a pattern in Spring Security configuration with the `/cloudfoundryapplication/**` component. The potential for security bypass exists due to the mismatch in pattern matching between Spring Security and Cloud Foundry.\n\n**Note**: The vendor has stated in their [advisory](https://spring.io/security/cve-2023-20873) that this application is not vulnerable if any of the following is true:\n* The application is not deployed to Cloud Foundry.\n* You have disabled Cloud Foundry actuator endpoints with `management.cloudfoundry.enabled` set to `false`.\n* Your application does not have handler mappings that can handle requests to `/cloudfoundryapplication/**`."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| spring-boot 2.2.2.RELEASE  | 2.7.18  | 3.2.1 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/48431389-4a2f-44ed-8597-55184ffc0e88?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=ee1b331d-05e0-4bd1-b6ef-727c3b98e324)\n\n\n## Description\nSpring framework contains a security bypass vulnerability when `/**` is used as a pattern in Spring Security configuration with the `/cloudfoundryapplication/**` component. The potential for security bypass exists due to the mismatch in pattern matching between Spring Security and Cloud Foundry.\n\n**Note**: The vendor has stated in their [advisory](https://spring.io/security/cve-2023-20873) that this application is not vulnerable if any of the following is true:\n* The application is not deployed to Cloud Foundry.\n* You have disabled Cloud Foundry actuator endpoints with `management.cloudfoundry.enabled` set to `false`.\n* Your application does not have handler mappings that can handle requests to `/cloudfoundryapplication/**`.\n\n## Vulnerabilities(BDSA,CVE)\n:orange_circle: [CVE-2023-20873](https://openhub.net/vulnerabilities/bdsa/CVE-2023-20873) - Improper Access Control\n\n\n\n## Solution\nFixed in [**3.1.0-RC1**](https://github.com/spring-projects/spring-boot/releases/tag/v3.1.0-RC1), [**3.0.6**](https://github.com/spring-projects/spring-boot/releases/tag/v3.0.6) and [**2.7.11**](https://github.com/spring-projects/spring-boot/releases/tag/v2.7.11)  by [this](https://github.com/spring-projects/spring-boot/commit/3522714c13b47af03bf42e7f2d5994af568cb1a7) commit.\n\nFixed in [**2.6.15**](https://github.com/spring-projects/spring-boot/releases/tag/v2.6.15) and [**2.5.15**](https://github.com/spring-projects/spring-boot/releases/tag/v2.5.15) by [this](https://github.com/spring-projects/spring-boot/commit/307f3c339912466e78fcdac648fff95a4edea573) commit.\n\nThe latest stable releases can be found [here](https://github.com/spring-projects/spring-boot/releases).\n\n## Workaround\nThe vendor has advised the following as a workaround:\n\u003eDisable Cloud Foundry actuator endpoints by setting `management.cloudfoundry.enabled` to `false`.\n\n## Dependency tree\n- org.owasp.webgoat:webgoat-server:v8.1.0:-maven\n    - org.springframework.boot:spring-boot-devtools:2.2.2.RELEASE\n        - org.springframework.boot:spring-boot:2.2.2.RELEASE\n\n\n## References\n* Common Weakness Enumeration: [CWE-284](https://cwe.mitre.org/data/definitions/284.html)\n* Common Weakness Enumeration: [CWE-923](https://cwe.mitre.org/data/definitions/923.html)\n\n","text":"Spring framework contains a security bypass vulnerability when `/**` is used as a pattern in Spring Security configuration with the `/cloudfoundryapplication/**` component. The potential for security bypass exists due to the mismatch in pattern matching between Spring Security and Cloud Foundry.\n\n**Note**: The vendor has stated in their [advisory](https://spring.io/security/cve-2023-20873) that this application is not vulnerable if any of the following is true:\n* The application is not deployed to Cloud Foundry.\n* You have disabled Cloud Foundry actuator endpoints with `management.cloudfoundry.enabled` set to `false`.\n* Your application does not have handler mappings that can handle requests to `/cloudfoundryapplication/**`."},"properties":{"security-severity":"8.9","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-284","external/cwe/cwe-923"]},"defaultConfiguration":{"level":"error"}},{"id":"BDSA-2021-3817 spring-boot 2.2.2.RELEASE: spring-boot-devtools 2.2.2.RELEASE: org.springframework.boot","shortDescription":{"text":"Transitive Dependency: spring-boot 2.2.2.RELEASE from spring-boot-devtools 2.2.2.RELEASE (BDSA-2021-3817)"},"fullDescription":{"text":"Apache log4j is vulnerable to a denial-of-service (DoS) when uncontrolled recursion occurs through a self-referencing lookup.  An attacker can trigger a DoS with malicious input data that generates a recursive lookup  and consequent application crash.\n\nSuccessful attacks require the attacker to have access to Thread Context Map (MDC) input, and for log4j configured with non-default pattern layout with a Context Lookup.\n\nOnly the log4j-core JAR file is impacted by this vulnerability. Applications using only the log4j-api JAR file without the log4j-core JAR file are not impacted.\n\nApache Log4j is the only Logging Services subproject affected by this vulnerability. Other projects like Log4net  are not impacted."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| spring-boot 2.2.2.RELEASE  | 2.7.18  | 3.2.1 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/48431389-4a2f-44ed-8597-55184ffc0e88?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=ee1b331d-05e0-4bd1-b6ef-727c3b98e324)\n\n\n## Description\nApache log4j is vulnerable to a denial-of-service (DoS) when uncontrolled recursion occurs through a self-referencing lookup.  An attacker can trigger a DoS with malicious input data that generates a recursive lookup  and consequent application crash.\n\nSuccessful attacks require the attacker to have access to Thread Context Map (MDC) input, and for log4j configured with non-default pattern layout with a Context Lookup.\n\nOnly the log4j-core JAR file is impacted by this vulnerability. Applications using only the log4j-api JAR file without the log4j-core JAR file are not impacted.\n\nApache Log4j is the only Logging Services subproject affected by this vulnerability. Other projects like Log4net  are not impacted.\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [BDSA-2021-3817](https://openhub.net/vulnerabilities/bdsa/BDSA-2021-3817) - Loop with Unreachable Exit Condition ('Infinite Loop')\n\n\n\n## Solution\nFixed in version [**2.17.0**](https://downloads.apache.org/logging/log4j/2.17.0/)  by [this](https://github.com/apache/logging-log4j2/commit/806023265f8c905b2dd1d81fd2458f64b2ea0b5e) commit.\n\nFixed in [**2.12.3-rc1**](https://github.com/apache/logging-log4j2/releases/tag/log4j-2.12.3-rc1) by [this](https://github.com/apache/logging-log4j2/commit/bf7e916df6335713fe2219c7b3b523fb509deabc) commit.\n\nFixed in [**2.3.1-rc1**](https://github.com/apache/logging-log4j2/releases/tag/log4j-2.3.1-rc1) by [this](https://github.com/apache/logging-log4j2/commit/ce6b78d082aae89089cb3ad25cdd46e9ec70a70b) commit.\n\n\nThe latest stable releases can be found [here](https://github.com/apache/logging-log4j2/releases).\n\n## Workaround\nThe vendor advises that  this vulnerability can can be mitigated through one of the following:\n\n* In PatternLayout in the logging configuration, replace Context Lookups like `${ctx:loginId}` or `$${ctx:loginId}` with Thread Context Map patterns `(%X, %mdc, or %MDC)`.\n\n* Alternatively,  remove references in the configuration to Context Lookups like `${ctx:loginId}` or `$${ctx:loginId}` where they originate from sources external to the application such as HTTP headers or user input.\n\n## Dependency tree\n- org.owasp.webgoat:webgoat-server:v8.1.0:-maven\n    - org.springframework.boot:spring-boot-devtools:2.2.2.RELEASE\n        - org.springframework.boot:spring-boot:2.2.2.RELEASE\n\n\n## References\n* Common Weakness Enumeration: [CWE-835](https://cwe.mitre.org/data/definitions/835.html)\n\n","text":"Apache log4j is vulnerable to a denial-of-service (DoS) when uncontrolled recursion occurs through a self-referencing lookup.  An attacker can trigger a DoS with malicious input data that generates a recursive lookup  and consequent application crash.\n\nSuccessful attacks require the attacker to have access to Thread Context Map (MDC) input, and for log4j configured with non-default pattern layout with a Context Lookup.\n\nOnly the log4j-core JAR file is impacted by this vulnerability. Applications using only the log4j-api JAR file without the log4j-core JAR file are not impacted.\n\nApache Log4j is the only Logging Services subproject affected by this vulnerability. Other projects like Log4net  are not impacted."},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-835"]},"defaultConfiguration":{"level":"warning"}},{"id":"BDSA-2021-3887 spring-boot 2.2.2.RELEASE: spring-boot-devtools 2.2.2.RELEASE: org.springframework.boot","shortDescription":{"text":"Transitive Dependency: spring-boot 2.2.2.RELEASE from spring-boot-devtools 2.2.2.RELEASE (BDSA-2021-3887)"},"fullDescription":{"text":"Apache Log4j contains a remote code execution (RCE) vulnerability. This allows an attacker that has permissions to modify the logging configuration files to input a malicious JDBC Appender with a data source referencing a JDNI URI. This can then lead to RCE.\n\n**Note:** This vulnerability impacts log4j-core."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| spring-boot 2.2.2.RELEASE  | 2.7.18  | 3.2.1 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/48431389-4a2f-44ed-8597-55184ffc0e88?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=ee1b331d-05e0-4bd1-b6ef-727c3b98e324)\n\n\n## Description\nApache Log4j contains a remote code execution (RCE) vulnerability. This allows an attacker that has permissions to modify the logging configuration files to input a malicious JDBC Appender with a data source referencing a JDNI URI. This can then lead to RCE.\n\n**Note:** This vulnerability impacts log4j-core.\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [BDSA-2021-3887](https://openhub.net/vulnerabilities/bdsa/BDSA-2021-3887) - Weak Input Validation\n\n\n\n## Solution\nFixed in versions:\n\n* [**2.3.2-rc1**](https://github.com/apache/logging-log4j2/releases/tag/log4j-2.3.2-rc1) by [this](https://github.com/apache/logging-log4j2/commit/ae4dc0c1a6389ae895f60451cd87e97e7b9d85c1) commit.\n* [**2.12.4-rc1**](https://github.com/apache/logging-log4j2/releases/tag/log4j-2.12.4-rc1) by [this](https://github.com/apache/logging-log4j2/commit/b3879958cb3b75eb16bf27e970538b6e4e130f1c) commit.\n* [**2.17.1-rc1**](https://github.com/apache/logging-log4j2/releases/tag/log4j-2.17.1-rc1) by [this](https://github.com/apache/logging-log4j2/commit/05db5f9527254632b59aed2a1d78a32c5ab74f16) commit.\n\nThe latest stable releases can be found [here](https://logging.apache.org/log4j/2.x/download.html).\n\n\n\n## Dependency tree\n- org.owasp.webgoat:webgoat-server:v8.1.0:-maven\n    - org.springframework.boot:spring-boot-devtools:2.2.2.RELEASE\n        - org.springframework.boot:spring-boot:2.2.2.RELEASE\n\n\n## References\n* Common Weakness Enumeration: [CWE-20](https://cwe.mitre.org/data/definitions/20.html)\n\n","text":"Apache Log4j contains a remote code execution (RCE) vulnerability. This allows an attacker that has permissions to modify the logging configuration files to input a malicious JDBC Appender with a data source referencing a JDNI URI. This can then lead to RCE.\n\n**Note:** This vulnerability impacts log4j-core."},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-20"]},"defaultConfiguration":{"level":"warning"}},{"id":"CVE-2022-27772 spring-boot 2.2.2.RELEASE: spring-boot-devtools 2.2.2.RELEASE: org.springframework.boot","shortDescription":{"text":"Transitive Dependency: spring-boot 2.2.2.RELEASE from spring-boot-devtools 2.2.2.RELEASE (CVE-2022-27772)"},"fullDescription":{"text":"Spring Boot is vulnerable to privilege escalation due to a race condition which occurs during the creation of a temporary directory. A local attacker could create their own temporary directory by racing against Spring Boot and supply their own configuration files which would allow for the full takeover of the application."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| spring-boot 2.2.2.RELEASE  | 2.7.18  | 3.2.1 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/48431389-4a2f-44ed-8597-55184ffc0e88?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=ee1b331d-05e0-4bd1-b6ef-727c3b98e324)\n\n\n## Description\nSpring Boot is vulnerable to privilege escalation due to a race condition which occurs during the creation of a temporary directory. A local attacker could create their own temporary directory by racing against Spring Boot and supply their own configuration files which would allow for the full takeover of the application.\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [CVE-2022-27772](https://openhub.net/vulnerabilities/bdsa/CVE-2022-27772) - Race Condition due to Improper Synchronization\n\n\n\n## Solution\nFixed in [**2.2.11**](https://github.com/spring-projects/spring-boot/releases/tag/v2.2.11.RELEASE) by [this](https://github.com/spring-projects/spring-boot/commit/667ccdae84822072f9ea1a27ed5c77964c71002d) commit.\n\nThe latest stable releases can be found [here](https://github.com/spring-projects/spring-boot/releases).\n\n## Workaround\nAccording to the [Github Security Advisory](https://github.com/JLLeitschuh/security-research/security/advisories/GHSA-cm59-pr5q-cw85), setting the `java.io.tmpdir` system environment variable to a directory that is exclusively owned by the executing user will fix this vulnerability for all operating systems.\n\n## Dependency tree\n- org.owasp.webgoat:webgoat-server:v8.1.0:-maven\n    - org.springframework.boot:spring-boot-devtools:2.2.2.RELEASE\n        - org.springframework.boot:spring-boot:2.2.2.RELEASE\n\n\n## References\n* Common Weakness Enumeration: [CWE-362](https://cwe.mitre.org/data/definitions/362.html)\n* Common Weakness Enumeration: [CWE-379](https://cwe.mitre.org/data/definitions/379.html)\n\n","text":"Spring Boot is vulnerable to privilege escalation due to a race condition which occurs during the creation of a temporary directory. A local attacker could create their own temporary directory by racing against Spring Boot and supply their own configuration files which would allow for the full takeover of the application."},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-362","external/cwe/cwe-379"]},"defaultConfiguration":{"level":"warning"}},{"id":"CVE-2023-20883 spring-boot 2.2.2.RELEASE: spring-boot-devtools 2.2.2.RELEASE: org.springframework.boot","shortDescription":{"text":"Transitive Dependency: spring-boot 2.2.2.RELEASE from spring-boot-devtools 2.2.2.RELEASE (CVE-2023-20883)"},"fullDescription":{"text":"Spring Boot is vulnerable to denial-of-service (DoS) via the welcome page when used to serve an application behind a reverse proxy cache. This will cause users to continuously be served a 404 response, preventing standard application use.\n\n\n**Note:** Spring have provided the following guidance for vulnerable criteria. \nAn application is vulnerable if all of the following are true:\n\n- \"The application has Spring MVC auto-configuration enabled. This is the case by default if Spring MVC is on the classpath.\"\n- \"The application makes use of Spring Boot's welcome page support, either static or templated.\"\n- \"Your application is deployed behind a proxy which caches 404 responses.\"\n\nThe application is not vulnerable if any of the following are true:\n\n- \"Spring MVC auto-configuration is disabled. This is true if `WebMvcAutoConfiguration` is explicitly excluded, if Spring MVC is not on the classpath, or if `spring.main.web-application-type` is set to a value other than `SERVLET`.\"\n- \"The application does not use Spring Boot's welcome page support.\"\n- \"You do not have a proxy which caches 404 responses.\""},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| spring-boot 2.2.2.RELEASE  | 2.7.18  | 3.2.1 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/48431389-4a2f-44ed-8597-55184ffc0e88?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=ee1b331d-05e0-4bd1-b6ef-727c3b98e324)\n\n\n## Description\nSpring Boot is vulnerable to denial-of-service (DoS) via the welcome page when used to serve an application behind a reverse proxy cache. This will cause users to continuously be served a 404 response, preventing standard application use.\n\n\n**Note:** Spring have provided the following guidance for vulnerable criteria. \nAn application is vulnerable if all of the following are true:\n\n- \"The application has Spring MVC auto-configuration enabled. This is the case by default if Spring MVC is on the classpath.\"\n- \"The application makes use of Spring Boot's welcome page support, either static or templated.\"\n- \"Your application is deployed behind a proxy which caches 404 responses.\"\n\nThe application is not vulnerable if any of the following are true:\n\n- \"Spring MVC auto-configuration is disabled. This is true if `WebMvcAutoConfiguration` is explicitly excluded, if Spring MVC is not on the classpath, or if `spring.main.web-application-type` is set to a value other than `SERVLET`.\"\n- \"The application does not use Spring Boot's welcome page support.\"\n- \"You do not have a proxy which caches 404 responses.\"\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [CVE-2023-20883](https://openhub.net/vulnerabilities/bdsa/CVE-2023-20883) - Insufficient Verification of Data Authenticity\n\n\n\n## Solution\nFixed in versions\n- [**2.5.15**](https://github.com/spring-projects/spring-boot/releases/tag/v2.5.15) by [this](https://github.com/spring-projects/spring-boot/commit/d7ff379fb8bb2c33319afeb45a343116b59e0ee2) commit,\n- [**2.6.15**](https://github.com/spring-projects/spring-boot/releases/tag/v2.6.15) by [this](https://github.com/spring-projects/spring-boot/commit/d7ff379fb8bb2c33319afeb45a343116b59e0ee2) commit,\n- [**2.7.12**](https://github.com/spring-projects/spring-boot/releases/tag/v2.7.12) by [this](https://github.com/spring-projects/spring-boot/commit/418dd1ba5bdad79b55a043000164bfcbda2acd78) commit,\n- [**3.0.7**](https://github.com/spring-projects/spring-boot/releases/tag/v3.0.7) by [this](https://github.com/spring-projects/spring-boot/commit/418dd1ba5bdad79b55a043000164bfcbda2acd78) commit,\n- [**3.1.0**](https://github.com/spring-projects/spring-boot/releases/tag/v3.1.0) by [this](https://github.com/spring-projects/spring-boot/commit/418dd1ba5bdad79b55a043000164bfcbda2acd78) commit.\n\nThe latest stable releases can be found [here](https://github.com/spring-projects/spring-boot/releases).\n\n## Workaround\nThe vendor has supplied the following workaround:\n\u003e \"configure the reverse proxy not to cache 404 responses and/or not to cache responses to requests to the root (`/`) of the application.\"\n\n## Dependency tree\n- org.owasp.webgoat:webgoat-server:v8.1.0:-maven\n    - org.springframework.boot:spring-boot-devtools:2.2.2.RELEASE\n        - org.springframework.boot:spring-boot:2.2.2.RELEASE\n\n\n## References\n* Common Weakness Enumeration: [CWE-345](https://cwe.mitre.org/data/definitions/345.html)\n\n","text":"Spring Boot is vulnerable to denial-of-service (DoS) via the welcome page when used to serve an application behind a reverse proxy cache. This will cause users to continuously be served a 404 response, preventing standard application use.\n\n\n**Note:** Spring have provided the following guidance for vulnerable criteria. \nAn application is vulnerable if all of the following are true:\n\n- \"The application has Spring MVC auto-configuration enabled. This is the case by default if Spring MVC is on the classpath.\"\n- \"The application makes use of Spring Boot's welcome page support, either static or templated.\"\n- \"Your application is deployed behind a proxy which caches 404 responses.\"\n\nThe application is not vulnerable if any of the following are true:\n\n- \"Spring MVC auto-configuration is disabled. This is true if `WebMvcAutoConfiguration` is explicitly excluded, if Spring MVC is not on the classpath, or if `spring.main.web-application-type` is set to a value other than `SERVLET`.\"\n- \"The application does not use Spring Boot's welcome page support.\"\n- \"You do not have a proxy which caches 404 responses.\""},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-345"]},"defaultConfiguration":{"level":"warning"}},{"id":"CVE-2023-34055 spring-boot 2.2.2.RELEASE: spring-boot-devtools 2.2.2.RELEASE: org.springframework.boot","shortDescription":{"text":"Transitive Dependency: spring-boot 2.2.2.RELEASE from spring-boot-devtools 2.2.2.RELEASE (CVE-2023-34055)"},"fullDescription":{"text":"Spring Boot is vulnerable to denial-of-service (DoS). An unauthenticated user could trigger the vulnerability by providing specially crafted HTTP requests to a web metrics endpoint."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| spring-boot 2.2.2.RELEASE  | 2.7.18  | 3.2.1 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/48431389-4a2f-44ed-8597-55184ffc0e88?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=ee1b331d-05e0-4bd1-b6ef-727c3b98e324)\n\n\n## Description\nSpring Boot is vulnerable to denial-of-service (DoS). An unauthenticated user could trigger the vulnerability by providing specially crafted HTTP requests to a web metrics endpoint.\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [CVE-2023-34055](https://openhub.net/vulnerabilities/bdsa/CVE-2023-34055) - Third-party component usage\n\n\n\n## Solution\nFixed in:\n* [**3.1.6**](https://github.com/spring-projects/spring-boot/releases/tag/v3.1.6)\n* [**3.0.13**](https://github.com/spring-projects/spring-boot/releases/tag/v3.0.13)\n* [**2.7.18**](https://github.com/spring-projects/spring-boot/releases/tag/v2.7.18)\n\nThe latest stable releases can be found [here](https://github.com/spring-projects/spring-boot/releases).\n\n## Workaround\nThe vendor notes the following:\n\u003e As a temporary workaround, Spring Boot users can choose to disable web metrics with the following property: `management.metrics.enable.http.server.requests=false`\n\n## Dependency tree\n- org.owasp.webgoat:webgoat-server:v8.1.0:-maven\n    - org.springframework.boot:spring-boot-devtools:2.2.2.RELEASE\n        - org.springframework.boot:spring-boot:2.2.2.RELEASE\n\n\n\n","text":"Spring Boot is vulnerable to denial-of-service (DoS). An unauthenticated user could trigger the vulnerability by providing specially crafted HTTP requests to a web metrics endpoint."},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","transitive_dependency","patch_available"]},"defaultConfiguration":{"level":"warning"}},{"id":"BDSA-2021-3731 spring-boot-starter-aop 2.2.2.RELEASE: spring-boot-starter-data-jpa 2.2.2.RELEASE: org.springframework.boot","shortDescription":{"text":"Transitive Dependency: spring-boot-starter-aop 2.2.2.RELEASE from spring-boot-starter-data-jpa 2.2.2.RELEASE (BDSA-2021-3731)"},"fullDescription":{"text":"Apache Log4j, as used in many popular services, is vulnerable to improperly allowing lightweight directory access protocol (LDAP) access via Java naming and directory interface (JNDI). A remote attacker able to supply the end application with specially crafted input that is then processed by the Log4j subcomponent could cause the execution of arbitrary Java code.\n\n**Note** \n\n- log4j-api packages by themselves do not contain the vulnerable functionality and are therefore unaffected. log4j-core packages and the upstream overarching source repository are affected.\n\n- A previously suggested mitigation of setting environment variable `LOG4J_FORMAT_MSG_NO_LOOKUPS=true` is not recommended. This mitigation has been proven inadequate against this vulnerability. \n\n- This vulnerability is partially fixed in [**2.15.0-rc2**](https://github.com/apache/logging-log4j2/releases/tag/log4j-2.15.0-rc2) by [this](https://github.com/apache/logging-log4j2/commit/001aaada7dab82c3c09cde5f8e14245dc9d8b454) commit and [this](https://github.com/apache/logging-log4j2/commit/bac0d8a35c7e354a0d3f706569116dff6c6bd658) commit. These fixes were deemed incomplete. See BDSA-2021-3779 (CVE-2021-45046) for more details.\n\nThis vulnerability is listed as exploitable by the Cybersecurity \u0026 Infrastructure Security Agency in their [Known Exploited Vulnerabilities Catalog](https://www.cisa.gov/known-exploited-vulnerabilities-catalog)."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| spring-boot-starter-aop 2.2.2.RELEASE  | 2.7.18  | 3.2.1 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/48431389-4a2f-44ed-8597-55184ffc0e88?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=ee1b331d-05e0-4bd1-b6ef-727c3b98e324)\n\n\n## Description\nApache Log4j, as used in many popular services, is vulnerable to improperly allowing lightweight directory access protocol (LDAP) access via Java naming and directory interface (JNDI). A remote attacker able to supply the end application with specially crafted input that is then processed by the Log4j subcomponent could cause the execution of arbitrary Java code.\n\n**Note** \n\n- log4j-api packages by themselves do not contain the vulnerable functionality and are therefore unaffected. log4j-core packages and the upstream overarching source repository are affected.\n\n- A previously suggested mitigation of setting environment variable `LOG4J_FORMAT_MSG_NO_LOOKUPS=true` is not recommended. This mitigation has been proven inadequate against this vulnerability. \n\n- This vulnerability is partially fixed in [**2.15.0-rc2**](https://github.com/apache/logging-log4j2/releases/tag/log4j-2.15.0-rc2) by [this](https://github.com/apache/logging-log4j2/commit/001aaada7dab82c3c09cde5f8e14245dc9d8b454) commit and [this](https://github.com/apache/logging-log4j2/commit/bac0d8a35c7e354a0d3f706569116dff6c6bd658) commit. These fixes were deemed incomplete. See BDSA-2021-3779 (CVE-2021-45046) for more details.\n\nThis vulnerability is listed as exploitable by the Cybersecurity \u0026 Infrastructure Security Agency in their [Known Exploited Vulnerabilities Catalog](https://www.cisa.gov/known-exploited-vulnerabilities-catalog).\n\n## Vulnerabilities(BDSA,CVE)\n:red_circle: [BDSA-2021-3731](https://openhub.net/vulnerabilities/bdsa/BDSA-2021-3731) - Insecure Object Deserialization\n\n\n\n## Solution\nFixed in versions:\n*  [**2.16.0-rc1**](https://github.com/apache/logging-log4j2/releases/tag/log4j-2.16.0-rc1) by [this](https://github.com/apache/logging-log4j2/commit/27972043b76c9645476f561c5adc483dec6d3f5d) commit.\n*  [**2.12.2-rc1**](https://github.com/apache/logging-log4j2/releases/tag/log4j-2.12.2-rc1) by [this](https://github.com/apache/logging-log4j2/commit/f819c83804152cb6ed94cb408302e36b21b65053) commit and [this](https://github.com/apache/logging-log4j2/commit/70edc233343815d5efa043b54294a6fb065aa1c5) commit.\n*   [**2.3.1-rc1**](https://github.com/apache/logging-log4j2/releases/tag/log4j-2.3.1-rc1) by [this](https://github.com/apache/logging-log4j2/commit/be848dacbac6df30c4f32b2852e24446033ecf79) commit and [this](https://github.com/apache/logging-log4j2/commit/f6564bb993d547d0a371b75d869042c334bf57f0) commit.\n\nThe latest releases can be found [here](https://github.com/apache/logging-log4j2/tags).\n\nNOTE: It is recommended to upgrade to version  [**2.17.0**](https://downloads.apache.org/logging/log4j/2.17.0/). This recommendation is due to related vulnerabilities (BDSA-2021-3779, CVE-2021-45046) affecting the version that this vulnerability is fixed in.\n\n## Workaround\nThe vendor states that:\n\n\u003e This issue can be mitigated in prior releases (\u003c**2.16.0**) by removing the JndiLookup class from the classpath (example: `zip -q -d log4j-core-*.jar org/apache/logging/log4j/core/lookup/JndiLookup.class`).\n\n## Dependency tree\n- org.owasp.webgoat:webgoat-container:v8.1.0:-maven\n    - org.springframework.boot:spring-boot-starter-data-jpa:2.2.2.RELEASE\n        - org.springframework.boot:spring-boot-starter-aop:2.2.2.RELEASE\n\n\n## References\n* Common Weakness Enumeration: [CWE-502](https://cwe.mitre.org/data/definitions/502.html)\n\n","text":"Apache Log4j, as used in many popular services, is vulnerable to improperly allowing lightweight directory access protocol (LDAP) access via Java naming and directory interface (JNDI). A remote attacker able to supply the end application with specially crafted input that is then processed by the Log4j subcomponent could cause the execution of arbitrary Java code.\n\n**Note** \n\n- log4j-api packages by themselves do not contain the vulnerable functionality and are therefore unaffected. log4j-core packages and the upstream overarching source repository are affected.\n\n- A previously suggested mitigation of setting environment variable `LOG4J_FORMAT_MSG_NO_LOOKUPS=true` is not recommended. This mitigation has been proven inadequate against this vulnerability. \n\n- This vulnerability is partially fixed in [**2.15.0-rc2**](https://github.com/apache/logging-log4j2/releases/tag/log4j-2.15.0-rc2) by [this](https://github.com/apache/logging-log4j2/commit/001aaada7dab82c3c09cde5f8e14245dc9d8b454) commit and [this](https://github.com/apache/logging-log4j2/commit/bac0d8a35c7e354a0d3f706569116dff6c6bd658) commit. These fixes were deemed incomplete. See BDSA-2021-3779 (CVE-2021-45046) for more details.\n\nThis vulnerability is listed as exploitable by the Cybersecurity \u0026 Infrastructure Security Agency in their [Known Exploited Vulnerabilities Catalog](https://www.cisa.gov/known-exploited-vulnerabilities-catalog)."},"properties":{"security-severity":"9.1","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-502"]},"defaultConfiguration":{"level":"error"}},{"id":"CVE-2022-22965 spring-boot-starter-aop 2.2.2.RELEASE: spring-boot-starter-data-jpa 2.2.2.RELEASE: org.springframework.boot","shortDescription":{"text":"Transitive Dependency: spring-boot-starter-aop 2.2.2.RELEASE from spring-boot-starter-data-jpa 2.2.2.RELEASE (CVE-2022-22965)"},"fullDescription":{"text":"Spring Framework is vulnerable to a flaw in the access restrictions to the security sensitive `ClassLoader` property. The restrictions can be bypassed through alternative paths available with Java9 and later. An attacker can leverage this vulnerability to cause remote code execution (RCE).\n\n**Note** this issue exists because the restrictions that were introduced to prevent exploitation of BDSA-2010-0001 (CVE-2010-1622) can be bypassed on platforms where Java9 and later are in use.\n\nThis vulnerability is listed as exploitable by the Cybersecurity \u0026 Infrastructure Security Agency in their [Known Exploited Vulnerabilities Catalog](https://www.cisa.gov/known-exploited-vulnerabilities-catalog)."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| spring-boot-starter-aop 2.2.2.RELEASE  | 2.7.18  | 3.2.1 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/48431389-4a2f-44ed-8597-55184ffc0e88?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=ee1b331d-05e0-4bd1-b6ef-727c3b98e324)\n\n\n## Description\nSpring Framework is vulnerable to a flaw in the access restrictions to the security sensitive `ClassLoader` property. The restrictions can be bypassed through alternative paths available with Java9 and later. An attacker can leverage this vulnerability to cause remote code execution (RCE).\n\n**Note** this issue exists because the restrictions that were introduced to prevent exploitation of BDSA-2010-0001 (CVE-2010-1622) can be bypassed on platforms where Java9 and later are in use.\n\nThis vulnerability is listed as exploitable by the Cybersecurity \u0026 Infrastructure Security Agency in their [Known Exploited Vulnerabilities Catalog](https://www.cisa.gov/known-exploited-vulnerabilities-catalog).\n\n## Vulnerabilities(BDSA,CVE)\n:red_circle: [CVE-2022-22965](https://openhub.net/vulnerabilities/bdsa/CVE-2022-22965) - Incomplete List of Disallowed Inputs\n\n\n\n## Solution\nFixed in [**5.3.18**](https://github.com/spring-projects/spring-framework/releases/tag/v5.3.18) by [this](https://github.com/spring-projects/spring-framework/commit/002546b3e4b8d791ea6acccb81eb3168f51abb15) commit and  [**5.2.20**](https://github.com/spring-projects/spring-framework/releases/tag/v5.2.20.RELEASE) by [this](https://github.com/spring-projects/spring-framework/commit/996f701a1916d10202c1d0d281f06ab1f2e1117e) commit .\n\nThe latest releases can be found [here](https://github.com/spring-projects/spring-framework/tags).\n\n## Workaround\nAn official workaround for the issue has been outlined [here](https://spring.io/blog/2022/03/31/spring-framework-rce-early-announcement).\n\n## Dependency tree\n- org.owasp.webgoat:webgoat-container:v8.1.0:-maven\n    - org.springframework.boot:spring-boot-starter-data-jpa:2.2.2.RELEASE\n        - org.springframework.boot:spring-boot-starter-aop:2.2.2.RELEASE\n\n\n## References\n* Common Weakness Enumeration: [CWE-184](https://cwe.mitre.org/data/definitions/184.html)\n* Common Weakness Enumeration: [CWE-749](https://cwe.mitre.org/data/definitions/749.html)\n\n","text":"Spring Framework is vulnerable to a flaw in the access restrictions to the security sensitive `ClassLoader` property. The restrictions can be bypassed through alternative paths available with Java9 and later. An attacker can leverage this vulnerability to cause remote code execution (RCE).\n\n**Note** this issue exists because the restrictions that were introduced to prevent exploitation of BDSA-2010-0001 (CVE-2010-1622) can be bypassed on platforms where Java9 and later are in use.\n\nThis vulnerability is listed as exploitable by the Cybersecurity \u0026 Infrastructure Security Agency in their [Known Exploited Vulnerabilities Catalog](https://www.cisa.gov/known-exploited-vulnerabilities-catalog)."},"properties":{"security-severity":"9.1","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-184","external/cwe/cwe-749"]},"defaultConfiguration":{"level":"error"}},{"id":"CVE-2023-20873 spring-boot-starter-aop 2.2.2.RELEASE: spring-boot-starter-data-jpa 2.2.2.RELEASE: org.springframework.boot","shortDescription":{"text":"Transitive Dependency: spring-boot-starter-aop 2.2.2.RELEASE from spring-boot-starter-data-jpa 2.2.2.RELEASE (CVE-2023-20873)"},"fullDescription":{"text":"Spring framework contains a security bypass vulnerability when `/**` is used as a pattern in Spring Security configuration with the `/cloudfoundryapplication/**` component. The potential for security bypass exists due to the mismatch in pattern matching between Spring Security and Cloud Foundry.\n\n**Note**: The vendor has stated in their [advisory](https://spring.io/security/cve-2023-20873) that this application is not vulnerable if any of the following is true:\n* The application is not deployed to Cloud Foundry.\n* You have disabled Cloud Foundry actuator endpoints with `management.cloudfoundry.enabled` set to `false`.\n* Your application does not have handler mappings that can handle requests to `/cloudfoundryapplication/**`."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| spring-boot-starter-aop 2.2.2.RELEASE  | 2.7.18  | 3.2.1 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/48431389-4a2f-44ed-8597-55184ffc0e88?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=ee1b331d-05e0-4bd1-b6ef-727c3b98e324)\n\n\n## Description\nSpring framework contains a security bypass vulnerability when `/**` is used as a pattern in Spring Security configuration with the `/cloudfoundryapplication/**` component. The potential for security bypass exists due to the mismatch in pattern matching between Spring Security and Cloud Foundry.\n\n**Note**: The vendor has stated in their [advisory](https://spring.io/security/cve-2023-20873) that this application is not vulnerable if any of the following is true:\n* The application is not deployed to Cloud Foundry.\n* You have disabled Cloud Foundry actuator endpoints with `management.cloudfoundry.enabled` set to `false`.\n* Your application does not have handler mappings that can handle requests to `/cloudfoundryapplication/**`.\n\n## Vulnerabilities(BDSA,CVE)\n:orange_circle: [CVE-2023-20873](https://openhub.net/vulnerabilities/bdsa/CVE-2023-20873) - Improper Access Control\n\n\n\n## Solution\nFixed in [**3.1.0-RC1**](https://github.com/spring-projects/spring-boot/releases/tag/v3.1.0-RC1), [**3.0.6**](https://github.com/spring-projects/spring-boot/releases/tag/v3.0.6) and [**2.7.11**](https://github.com/spring-projects/spring-boot/releases/tag/v2.7.11)  by [this](https://github.com/spring-projects/spring-boot/commit/3522714c13b47af03bf42e7f2d5994af568cb1a7) commit.\n\nFixed in [**2.6.15**](https://github.com/spring-projects/spring-boot/releases/tag/v2.6.15) and [**2.5.15**](https://github.com/spring-projects/spring-boot/releases/tag/v2.5.15) by [this](https://github.com/spring-projects/spring-boot/commit/307f3c339912466e78fcdac648fff95a4edea573) commit.\n\nThe latest stable releases can be found [here](https://github.com/spring-projects/spring-boot/releases).\n\n## Workaround\nThe vendor has advised the following as a workaround:\n\u003eDisable Cloud Foundry actuator endpoints by setting `management.cloudfoundry.enabled` to `false`.\n\n## Dependency tree\n- org.owasp.webgoat:webgoat-container:v8.1.0:-maven\n    - org.springframework.boot:spring-boot-starter-data-jpa:2.2.2.RELEASE\n        - org.springframework.boot:spring-boot-starter-aop:2.2.2.RELEASE\n\n\n## References\n* Common Weakness Enumeration: [CWE-284](https://cwe.mitre.org/data/definitions/284.html)\n* Common Weakness Enumeration: [CWE-923](https://cwe.mitre.org/data/definitions/923.html)\n\n","text":"Spring framework contains a security bypass vulnerability when `/**` is used as a pattern in Spring Security configuration with the `/cloudfoundryapplication/**` component. The potential for security bypass exists due to the mismatch in pattern matching between Spring Security and Cloud Foundry.\n\n**Note**: The vendor has stated in their [advisory](https://spring.io/security/cve-2023-20873) that this application is not vulnerable if any of the following is true:\n* The application is not deployed to Cloud Foundry.\n* You have disabled Cloud Foundry actuator endpoints with `management.cloudfoundry.enabled` set to `false`.\n* Your application does not have handler mappings that can handle requests to `/cloudfoundryapplication/**`."},"properties":{"security-severity":"8.9","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-284","external/cwe/cwe-923"]},"defaultConfiguration":{"level":"error"}},{"id":"BDSA-2021-3817 spring-boot-starter-aop 2.2.2.RELEASE: spring-boot-starter-data-jpa 2.2.2.RELEASE: org.springframework.boot","shortDescription":{"text":"Transitive Dependency: spring-boot-starter-aop 2.2.2.RELEASE from spring-boot-starter-data-jpa 2.2.2.RELEASE (BDSA-2021-3817)"},"fullDescription":{"text":"Apache log4j is vulnerable to a denial-of-service (DoS) when uncontrolled recursion occurs through a self-referencing lookup.  An attacker can trigger a DoS with malicious input data that generates a recursive lookup  and consequent application crash.\n\nSuccessful attacks require the attacker to have access to Thread Context Map (MDC) input, and for log4j configured with non-default pattern layout with a Context Lookup.\n\nOnly the log4j-core JAR file is impacted by this vulnerability. Applications using only the log4j-api JAR file without the log4j-core JAR file are not impacted.\n\nApache Log4j is the only Logging Services subproject affected by this vulnerability. Other projects like Log4net  are not impacted."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| spring-boot-starter-aop 2.2.2.RELEASE  | 2.7.18  | 3.2.1 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/48431389-4a2f-44ed-8597-55184ffc0e88?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=ee1b331d-05e0-4bd1-b6ef-727c3b98e324)\n\n\n## Description\nApache log4j is vulnerable to a denial-of-service (DoS) when uncontrolled recursion occurs through a self-referencing lookup.  An attacker can trigger a DoS with malicious input data that generates a recursive lookup  and consequent application crash.\n\nSuccessful attacks require the attacker to have access to Thread Context Map (MDC) input, and for log4j configured with non-default pattern layout with a Context Lookup.\n\nOnly the log4j-core JAR file is impacted by this vulnerability. Applications using only the log4j-api JAR file without the log4j-core JAR file are not impacted.\n\nApache Log4j is the only Logging Services subproject affected by this vulnerability. Other projects like Log4net  are not impacted.\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [BDSA-2021-3817](https://openhub.net/vulnerabilities/bdsa/BDSA-2021-3817) - Loop with Unreachable Exit Condition ('Infinite Loop')\n\n\n\n## Solution\nFixed in version [**2.17.0**](https://downloads.apache.org/logging/log4j/2.17.0/)  by [this](https://github.com/apache/logging-log4j2/commit/806023265f8c905b2dd1d81fd2458f64b2ea0b5e) commit.\n\nFixed in [**2.12.3-rc1**](https://github.com/apache/logging-log4j2/releases/tag/log4j-2.12.3-rc1) by [this](https://github.com/apache/logging-log4j2/commit/bf7e916df6335713fe2219c7b3b523fb509deabc) commit.\n\nFixed in [**2.3.1-rc1**](https://github.com/apache/logging-log4j2/releases/tag/log4j-2.3.1-rc1) by [this](https://github.com/apache/logging-log4j2/commit/ce6b78d082aae89089cb3ad25cdd46e9ec70a70b) commit.\n\n\nThe latest stable releases can be found [here](https://github.com/apache/logging-log4j2/releases).\n\n## Workaround\nThe vendor advises that  this vulnerability can can be mitigated through one of the following:\n\n* In PatternLayout in the logging configuration, replace Context Lookups like `${ctx:loginId}` or `$${ctx:loginId}` with Thread Context Map patterns `(%X, %mdc, or %MDC)`.\n\n* Alternatively,  remove references in the configuration to Context Lookups like `${ctx:loginId}` or `$${ctx:loginId}` where they originate from sources external to the application such as HTTP headers or user input.\n\n## Dependency tree\n- org.owasp.webgoat:webgoat-container:v8.1.0:-maven\n    - org.springframework.boot:spring-boot-starter-data-jpa:2.2.2.RELEASE\n        - org.springframework.boot:spring-boot-starter-aop:2.2.2.RELEASE\n\n\n## References\n* Common Weakness Enumeration: [CWE-835](https://cwe.mitre.org/data/definitions/835.html)\n\n","text":"Apache log4j is vulnerable to a denial-of-service (DoS) when uncontrolled recursion occurs through a self-referencing lookup.  An attacker can trigger a DoS with malicious input data that generates a recursive lookup  and consequent application crash.\n\nSuccessful attacks require the attacker to have access to Thread Context Map (MDC) input, and for log4j configured with non-default pattern layout with a Context Lookup.\n\nOnly the log4j-core JAR file is impacted by this vulnerability. Applications using only the log4j-api JAR file without the log4j-core JAR file are not impacted.\n\nApache Log4j is the only Logging Services subproject affected by this vulnerability. Other projects like Log4net  are not impacted."},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-835"]},"defaultConfiguration":{"level":"warning"}},{"id":"BDSA-2021-3887 spring-boot-starter-aop 2.2.2.RELEASE: spring-boot-starter-data-jpa 2.2.2.RELEASE: org.springframework.boot","shortDescription":{"text":"Transitive Dependency: spring-boot-starter-aop 2.2.2.RELEASE from spring-boot-starter-data-jpa 2.2.2.RELEASE (BDSA-2021-3887)"},"fullDescription":{"text":"Apache Log4j contains a remote code execution (RCE) vulnerability. This allows an attacker that has permissions to modify the logging configuration files to input a malicious JDBC Appender with a data source referencing a JDNI URI. This can then lead to RCE.\n\n**Note:** This vulnerability impacts log4j-core."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| spring-boot-starter-aop 2.2.2.RELEASE  | 2.7.18  | 3.2.1 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/48431389-4a2f-44ed-8597-55184ffc0e88?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=ee1b331d-05e0-4bd1-b6ef-727c3b98e324)\n\n\n## Description\nApache Log4j contains a remote code execution (RCE) vulnerability. This allows an attacker that has permissions to modify the logging configuration files to input a malicious JDBC Appender with a data source referencing a JDNI URI. This can then lead to RCE.\n\n**Note:** This vulnerability impacts log4j-core.\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [BDSA-2021-3887](https://openhub.net/vulnerabilities/bdsa/BDSA-2021-3887) - Weak Input Validation\n\n\n\n## Solution\nFixed in versions:\n\n* [**2.3.2-rc1**](https://github.com/apache/logging-log4j2/releases/tag/log4j-2.3.2-rc1) by [this](https://github.com/apache/logging-log4j2/commit/ae4dc0c1a6389ae895f60451cd87e97e7b9d85c1) commit.\n* [**2.12.4-rc1**](https://github.com/apache/logging-log4j2/releases/tag/log4j-2.12.4-rc1) by [this](https://github.com/apache/logging-log4j2/commit/b3879958cb3b75eb16bf27e970538b6e4e130f1c) commit.\n* [**2.17.1-rc1**](https://github.com/apache/logging-log4j2/releases/tag/log4j-2.17.1-rc1) by [this](https://github.com/apache/logging-log4j2/commit/05db5f9527254632b59aed2a1d78a32c5ab74f16) commit.\n\nThe latest stable releases can be found [here](https://logging.apache.org/log4j/2.x/download.html).\n\n\n\n## Dependency tree\n- org.owasp.webgoat:webgoat-container:v8.1.0:-maven\n    - org.springframework.boot:spring-boot-starter-data-jpa:2.2.2.RELEASE\n        - org.springframework.boot:spring-boot-starter-aop:2.2.2.RELEASE\n\n\n## References\n* Common Weakness Enumeration: [CWE-20](https://cwe.mitre.org/data/definitions/20.html)\n\n","text":"Apache Log4j contains a remote code execution (RCE) vulnerability. This allows an attacker that has permissions to modify the logging configuration files to input a malicious JDBC Appender with a data source referencing a JDNI URI. This can then lead to RCE.\n\n**Note:** This vulnerability impacts log4j-core."},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-20"]},"defaultConfiguration":{"level":"warning"}},{"id":"CVE-2022-27772 spring-boot-starter-aop 2.2.2.RELEASE: spring-boot-starter-data-jpa 2.2.2.RELEASE: org.springframework.boot","shortDescription":{"text":"Transitive Dependency: spring-boot-starter-aop 2.2.2.RELEASE from spring-boot-starter-data-jpa 2.2.2.RELEASE (CVE-2022-27772)"},"fullDescription":{"text":"Spring Boot is vulnerable to privilege escalation due to a race condition which occurs during the creation of a temporary directory. A local attacker could create their own temporary directory by racing against Spring Boot and supply their own configuration files which would allow for the full takeover of the application."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| spring-boot-starter-aop 2.2.2.RELEASE  | 2.7.18  | 3.2.1 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/48431389-4a2f-44ed-8597-55184ffc0e88?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=ee1b331d-05e0-4bd1-b6ef-727c3b98e324)\n\n\n## Description\nSpring Boot is vulnerable to privilege escalation due to a race condition which occurs during the creation of a temporary directory. A local attacker could create their own temporary directory by racing against Spring Boot and supply their own configuration files which would allow for the full takeover of the application.\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [CVE-2022-27772](https://openhub.net/vulnerabilities/bdsa/CVE-2022-27772) - Race Condition due to Improper Synchronization\n\n\n\n## Solution\nFixed in [**2.2.11**](https://github.com/spring-projects/spring-boot/releases/tag/v2.2.11.RELEASE) by [this](https://github.com/spring-projects/spring-boot/commit/667ccdae84822072f9ea1a27ed5c77964c71002d) commit.\n\nThe latest stable releases can be found [here](https://github.com/spring-projects/spring-boot/releases).\n\n## Workaround\nAccording to the [Github Security Advisory](https://github.com/JLLeitschuh/security-research/security/advisories/GHSA-cm59-pr5q-cw85), setting the `java.io.tmpdir` system environment variable to a directory that is exclusively owned by the executing user will fix this vulnerability for all operating systems.\n\n## Dependency tree\n- org.owasp.webgoat:webgoat-container:v8.1.0:-maven\n    - org.springframework.boot:spring-boot-starter-data-jpa:2.2.2.RELEASE\n        - org.springframework.boot:spring-boot-starter-aop:2.2.2.RELEASE\n\n\n## References\n* Common Weakness Enumeration: [CWE-362](https://cwe.mitre.org/data/definitions/362.html)\n* Common Weakness Enumeration: [CWE-379](https://cwe.mitre.org/data/definitions/379.html)\n\n","text":"Spring Boot is vulnerable to privilege escalation due to a race condition which occurs during the creation of a temporary directory. A local attacker could create their own temporary directory by racing against Spring Boot and supply their own configuration files which would allow for the full takeover of the application."},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-362","external/cwe/cwe-379"]},"defaultConfiguration":{"level":"warning"}},{"id":"CVE-2023-20883 spring-boot-starter-aop 2.2.2.RELEASE: spring-boot-starter-data-jpa 2.2.2.RELEASE: org.springframework.boot","shortDescription":{"text":"Transitive Dependency: spring-boot-starter-aop 2.2.2.RELEASE from spring-boot-starter-data-jpa 2.2.2.RELEASE (CVE-2023-20883)"},"fullDescription":{"text":"Spring Boot is vulnerable to denial-of-service (DoS) via the welcome page when used to serve an application behind a reverse proxy cache. This will cause users to continuously be served a 404 response, preventing standard application use.\n\n\n**Note:** Spring have provided the following guidance for vulnerable criteria. \nAn application is vulnerable if all of the following are true:\n\n- \"The application has Spring MVC auto-configuration enabled. This is the case by default if Spring MVC is on the classpath.\"\n- \"The application makes use of Spring Boot's welcome page support, either static or templated.\"\n- \"Your application is deployed behind a proxy which caches 404 responses.\"\n\nThe application is not vulnerable if any of the following are true:\n\n- \"Spring MVC auto-configuration is disabled. This is true if `WebMvcAutoConfiguration` is explicitly excluded, if Spring MVC is not on the classpath, or if `spring.main.web-application-type` is set to a value other than `SERVLET`.\"\n- \"The application does not use Spring Boot's welcome page support.\"\n- \"You do not have a proxy which caches 404 responses.\""},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| spring-boot-starter-aop 2.2.2.RELEASE  | 2.7.18  | 3.2.1 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/48431389-4a2f-44ed-8597-55184ffc0e88?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=ee1b331d-05e0-4bd1-b6ef-727c3b98e324)\n\n\n## Description\nSpring Boot is vulnerable to denial-of-service (DoS) via the welcome page when used to serve an application behind a reverse proxy cache. This will cause users to continuously be served a 404 response, preventing standard application use.\n\n\n**Note:** Spring have provided the following guidance for vulnerable criteria. \nAn application is vulnerable if all of the following are true:\n\n- \"The application has Spring MVC auto-configuration enabled. This is the case by default if Spring MVC is on the classpath.\"\n- \"The application makes use of Spring Boot's welcome page support, either static or templated.\"\n- \"Your application is deployed behind a proxy which caches 404 responses.\"\n\nThe application is not vulnerable if any of the following are true:\n\n- \"Spring MVC auto-configuration is disabled. This is true if `WebMvcAutoConfiguration` is explicitly excluded, if Spring MVC is not on the classpath, or if `spring.main.web-application-type` is set to a value other than `SERVLET`.\"\n- \"The application does not use Spring Boot's welcome page support.\"\n- \"You do not have a proxy which caches 404 responses.\"\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [CVE-2023-20883](https://openhub.net/vulnerabilities/bdsa/CVE-2023-20883) - Insufficient Verification of Data Authenticity\n\n\n\n## Solution\nFixed in versions\n- [**2.5.15**](https://github.com/spring-projects/spring-boot/releases/tag/v2.5.15) by [this](https://github.com/spring-projects/spring-boot/commit/d7ff379fb8bb2c33319afeb45a343116b59e0ee2) commit,\n- [**2.6.15**](https://github.com/spring-projects/spring-boot/releases/tag/v2.6.15) by [this](https://github.com/spring-projects/spring-boot/commit/d7ff379fb8bb2c33319afeb45a343116b59e0ee2) commit,\n- [**2.7.12**](https://github.com/spring-projects/spring-boot/releases/tag/v2.7.12) by [this](https://github.com/spring-projects/spring-boot/commit/418dd1ba5bdad79b55a043000164bfcbda2acd78) commit,\n- [**3.0.7**](https://github.com/spring-projects/spring-boot/releases/tag/v3.0.7) by [this](https://github.com/spring-projects/spring-boot/commit/418dd1ba5bdad79b55a043000164bfcbda2acd78) commit,\n- [**3.1.0**](https://github.com/spring-projects/spring-boot/releases/tag/v3.1.0) by [this](https://github.com/spring-projects/spring-boot/commit/418dd1ba5bdad79b55a043000164bfcbda2acd78) commit.\n\nThe latest stable releases can be found [here](https://github.com/spring-projects/spring-boot/releases).\n\n## Workaround\nThe vendor has supplied the following workaround:\n\u003e \"configure the reverse proxy not to cache 404 responses and/or not to cache responses to requests to the root (`/`) of the application.\"\n\n## Dependency tree\n- org.owasp.webgoat:webgoat-container:v8.1.0:-maven\n    - org.springframework.boot:spring-boot-starter-data-jpa:2.2.2.RELEASE\n        - org.springframework.boot:spring-boot-starter-aop:2.2.2.RELEASE\n\n\n## References\n* Common Weakness Enumeration: [CWE-345](https://cwe.mitre.org/data/definitions/345.html)\n\n","text":"Spring Boot is vulnerable to denial-of-service (DoS) via the welcome page when used to serve an application behind a reverse proxy cache. This will cause users to continuously be served a 404 response, preventing standard application use.\n\n\n**Note:** Spring have provided the following guidance for vulnerable criteria. \nAn application is vulnerable if all of the following are true:\n\n- \"The application has Spring MVC auto-configuration enabled. This is the case by default if Spring MVC is on the classpath.\"\n- \"The application makes use of Spring Boot's welcome page support, either static or templated.\"\n- \"Your application is deployed behind a proxy which caches 404 responses.\"\n\nThe application is not vulnerable if any of the following are true:\n\n- \"Spring MVC auto-configuration is disabled. This is true if `WebMvcAutoConfiguration` is explicitly excluded, if Spring MVC is not on the classpath, or if `spring.main.web-application-type` is set to a value other than `SERVLET`.\"\n- \"The application does not use Spring Boot's welcome page support.\"\n- \"You do not have a proxy which caches 404 responses.\""},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-345"]},"defaultConfiguration":{"level":"warning"}},{"id":"CVE-2023-34055 spring-boot-starter-aop 2.2.2.RELEASE: spring-boot-starter-data-jpa 2.2.2.RELEASE: org.springframework.boot","shortDescription":{"text":"Transitive Dependency: spring-boot-starter-aop 2.2.2.RELEASE from spring-boot-starter-data-jpa 2.2.2.RELEASE (CVE-2023-34055)"},"fullDescription":{"text":"Spring Boot is vulnerable to denial-of-service (DoS). An unauthenticated user could trigger the vulnerability by providing specially crafted HTTP requests to a web metrics endpoint."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| spring-boot-starter-aop 2.2.2.RELEASE  | 2.7.18  | 3.2.1 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/48431389-4a2f-44ed-8597-55184ffc0e88?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=ee1b331d-05e0-4bd1-b6ef-727c3b98e324)\n\n\n## Description\nSpring Boot is vulnerable to denial-of-service (DoS). An unauthenticated user could trigger the vulnerability by providing specially crafted HTTP requests to a web metrics endpoint.\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [CVE-2023-34055](https://openhub.net/vulnerabilities/bdsa/CVE-2023-34055) - Third-party component usage\n\n\n\n## Solution\nFixed in:\n* [**3.1.6**](https://github.com/spring-projects/spring-boot/releases/tag/v3.1.6)\n* [**3.0.13**](https://github.com/spring-projects/spring-boot/releases/tag/v3.0.13)\n* [**2.7.18**](https://github.com/spring-projects/spring-boot/releases/tag/v2.7.18)\n\nThe latest stable releases can be found [here](https://github.com/spring-projects/spring-boot/releases).\n\n## Workaround\nThe vendor notes the following:\n\u003e As a temporary workaround, Spring Boot users can choose to disable web metrics with the following property: `management.metrics.enable.http.server.requests=false`\n\n## Dependency tree\n- org.owasp.webgoat:webgoat-container:v8.1.0:-maven\n    - org.springframework.boot:spring-boot-starter-data-jpa:2.2.2.RELEASE\n        - org.springframework.boot:spring-boot-starter-aop:2.2.2.RELEASE\n\n\n\n","text":"Spring Boot is vulnerable to denial-of-service (DoS). An unauthenticated user could trigger the vulnerability by providing specially crafted HTTP requests to a web metrics endpoint."},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","transitive_dependency","patch_available"]},"defaultConfiguration":{"level":"warning"}},{"id":"CVE-2016-1000027 spring-orm 5.2.2.RELEASE: spring-boot-starter-data-jpa 2.2.2.RELEASE: org.springframework","shortDescription":{"text":"Transitive Dependency: spring-orm 5.2.2.RELEASE from spring-boot-starter-data-jpa 2.2.2.RELEASE (CVE-2016-1000027)"},"fullDescription":{"text":"Pivotal Spring Framework through 5.3.16 suffers from a potential remote code execution (RCE) issue if used for Java deserialization of untrusted data. Depending on how the library is implemented within a product, this issue may or not occur, and authentication may be required. NOTE: the vendor's position is that untrusted data is not an intended use case. The product's behavior will not be changed because some users rely on deserialization of trusted data."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| spring-orm 5.2.2.RELEASE  | 5.3.31  | 6.1.2 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/ba6e9d03-9fbd-4086-9631-99d1ad5e520c?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=09f17d81-b282-43ec-9f2b-36c8021d3ca7)\n\n\n## Description\nPivotal Spring Framework through 5.3.16 suffers from a potential remote code execution (RCE) issue if used for Java deserialization of untrusted data. Depending on how the library is implemented within a product, this issue may or not occur, and authentication may be required. NOTE: the vendor's position is that untrusted data is not an intended use case. The product's behavior will not be changed because some users rely on deserialization of trusted data.\n\n## Vulnerabilities(BDSA,CVE)\n:red_circle: [CVE-2016-1000027](https://openhub.net/vulnerabilities/bdsa/CVE-2016-1000027) - Insecure Object Deserialization\n\n\n\n\n\n\n\n## Dependency tree\n- org.owasp.webgoat:webgoat-container:v8.1.0:-maven\n    - org.springframework.boot:spring-boot-starter-data-jpa:2.2.2.RELEASE\n        - org.springframework.data:spring-data-jpa:2.2.3.RELEASE\n            - org.springframework:spring-orm:5.2.2.RELEASE\n\n\n## References\n* Common Weakness Enumeration: [CWE-502](https://cwe.mitre.org/data/definitions/502.html)\n\n","text":"Pivotal Spring Framework through 5.3.16 suffers from a potential remote code execution (RCE) issue if used for Java deserialization of untrusted data. Depending on how the library is implemented within a product, this issue may or not occur, and authentication may be required. NOTE: the vendor's position is that untrusted data is not an intended use case. The product's behavior will not be changed because some users rely on deserialization of trusted data."},"properties":{"security-severity":"9.1","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-502"]},"defaultConfiguration":{"level":"error"}},{"id":"CVE-2022-22965 spring-orm 5.2.2.RELEASE: spring-boot-starter-data-jpa 2.2.2.RELEASE: org.springframework","shortDescription":{"text":"Transitive Dependency: spring-orm 5.2.2.RELEASE from spring-boot-starter-data-jpa 2.2.2.RELEASE (CVE-2022-22965)"},"fullDescription":{"text":"Spring Framework is vulnerable to a flaw in the access restrictions to the security sensitive `ClassLoader` property. The restrictions can be bypassed through alternative paths available with Java9 and later. An attacker can leverage this vulnerability to cause remote code execution (RCE).\n\n**Note** this issue exists because the restrictions that were introduced to prevent exploitation of BDSA-2010-0001 (CVE-2010-1622) can be bypassed on platforms where Java9 and later are in use.\n\nThis vulnerability is listed as exploitable by the Cybersecurity \u0026 Infrastructure Security Agency in their [Known Exploited Vulnerabilities Catalog](https://www.cisa.gov/known-exploited-vulnerabilities-catalog)."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| spring-orm 5.2.2.RELEASE  | 5.3.31  | 6.1.2 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/ba6e9d03-9fbd-4086-9631-99d1ad5e520c?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=09f17d81-b282-43ec-9f2b-36c8021d3ca7)\n\n\n## Description\nSpring Framework is vulnerable to a flaw in the access restrictions to the security sensitive `ClassLoader` property. The restrictions can be bypassed through alternative paths available with Java9 and later. An attacker can leverage this vulnerability to cause remote code execution (RCE).\n\n**Note** this issue exists because the restrictions that were introduced to prevent exploitation of BDSA-2010-0001 (CVE-2010-1622) can be bypassed on platforms where Java9 and later are in use.\n\nThis vulnerability is listed as exploitable by the Cybersecurity \u0026 Infrastructure Security Agency in their [Known Exploited Vulnerabilities Catalog](https://www.cisa.gov/known-exploited-vulnerabilities-catalog).\n\n## Vulnerabilities(BDSA,CVE)\n:red_circle: [CVE-2022-22965](https://openhub.net/vulnerabilities/bdsa/CVE-2022-22965) - Incomplete List of Disallowed Inputs\n\n\n\n## Solution\nFixed in [**5.3.18**](https://github.com/spring-projects/spring-framework/releases/tag/v5.3.18) by [this](https://github.com/spring-projects/spring-framework/commit/002546b3e4b8d791ea6acccb81eb3168f51abb15) commit and  [**5.2.20**](https://github.com/spring-projects/spring-framework/releases/tag/v5.2.20.RELEASE) by [this](https://github.com/spring-projects/spring-framework/commit/996f701a1916d10202c1d0d281f06ab1f2e1117e) commit .\n\nThe latest releases can be found [here](https://github.com/spring-projects/spring-framework/tags).\n\n## Workaround\nAn official workaround for the issue has been outlined [here](https://spring.io/blog/2022/03/31/spring-framework-rce-early-announcement).\n\n## Dependency tree\n- org.owasp.webgoat:webgoat-container:v8.1.0:-maven\n    - org.springframework.boot:spring-boot-starter-data-jpa:2.2.2.RELEASE\n        - org.springframework.data:spring-data-jpa:2.2.3.RELEASE\n            - org.springframework:spring-orm:5.2.2.RELEASE\n\n\n## References\n* Common Weakness Enumeration: [CWE-184](https://cwe.mitre.org/data/definitions/184.html)\n* Common Weakness Enumeration: [CWE-749](https://cwe.mitre.org/data/definitions/749.html)\n\n","text":"Spring Framework is vulnerable to a flaw in the access restrictions to the security sensitive `ClassLoader` property. The restrictions can be bypassed through alternative paths available with Java9 and later. An attacker can leverage this vulnerability to cause remote code execution (RCE).\n\n**Note** this issue exists because the restrictions that were introduced to prevent exploitation of BDSA-2010-0001 (CVE-2010-1622) can be bypassed on platforms where Java9 and later are in use.\n\nThis vulnerability is listed as exploitable by the Cybersecurity \u0026 Infrastructure Security Agency in their [Known Exploited Vulnerabilities Catalog](https://www.cisa.gov/known-exploited-vulnerabilities-catalog)."},"properties":{"security-severity":"9.1","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-184","external/cwe/cwe-749"]},"defaultConfiguration":{"level":"error"}},{"id":"CVE-2020-5397 spring-orm 5.2.2.RELEASE: spring-boot-starter-data-jpa 2.2.2.RELEASE: org.springframework","shortDescription":{"text":"Transitive Dependency: spring-orm 5.2.2.RELEASE from spring-boot-starter-data-jpa 2.2.2.RELEASE (CVE-2020-5397)"},"fullDescription":{"text":"Spring Framework is vulnerable to cross-site request forgery (CSRF) attacks via CORS preflight requests which target Spring MVC or Spring WebFlux endpoints."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| spring-orm 5.2.2.RELEASE  | 5.3.31  | 6.1.2 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/ba6e9d03-9fbd-4086-9631-99d1ad5e520c?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=09f17d81-b282-43ec-9f2b-36c8021d3ca7)\n\n\n## Description\nSpring Framework is vulnerable to cross-site request forgery (CSRF) attacks via CORS preflight requests which target Spring MVC or Spring WebFlux endpoints.\n\n## Vulnerabilities(BDSA,CVE)\n:orange_circle: [CVE-2020-5397](https://openhub.net/vulnerabilities/bdsa/CVE-2020-5397) - Cross-Site Request Forgery (CSRF)\n\n\n\n## Solution\nFixed in [**5.2.3**](https://github.com/spring-projects/spring-framework/releases/tag/v5.2.3.RELEASE).\n\n\n\n## Dependency tree\n- org.owasp.webgoat:webgoat-container:v8.1.0:-maven\n    - org.springframework.boot:spring-boot-starter-data-jpa:2.2.2.RELEASE\n        - org.springframework.data:spring-data-jpa:2.2.3.RELEASE\n            - org.springframework:spring-orm:5.2.2.RELEASE\n\n\n## References\n* Common Weakness Enumeration: [CWE-352](https://cwe.mitre.org/data/definitions/352.html)\n\n","text":"Spring Framework is vulnerable to cross-site request forgery (CSRF) attacks via CORS preflight requests which target Spring MVC or Spring WebFlux endpoints."},"properties":{"security-severity":"8.9","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-352"]},"defaultConfiguration":{"level":"error"}},{"id":"BDSA-2022-0847 spring-orm 5.2.2.RELEASE: spring-boot-starter-data-jpa 2.2.2.RELEASE: org.springframework","shortDescription":{"text":"Transitive Dependency: spring-orm 5.2.2.RELEASE from spring-boot-starter-data-jpa 2.2.2.RELEASE (BDSA-2022-0847)"},"fullDescription":{"text":"Software systems using Spring Framework may be vulnerable to unsafe deserialization if they employ unsafe use of certain provided deserialization functionality. A remote attacker could potentially execute arbitrary code on a vulnerable endpoint by passing a maliciously crafted serialized object to that endpoint.\n\n**Note**: This issue only affects software that has been written to leverage specific deserialization functionality provided by the Spring Framework without sanitization."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| spring-orm 5.2.2.RELEASE  | 5.3.31  | 6.1.2 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/ba6e9d03-9fbd-4086-9631-99d1ad5e520c?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=09f17d81-b282-43ec-9f2b-36c8021d3ca7)\n\n\n## Description\nSoftware systems using Spring Framework may be vulnerable to unsafe deserialization if they employ unsafe use of certain provided deserialization functionality. A remote attacker could potentially execute arbitrary code on a vulnerable endpoint by passing a maliciously crafted serialized object to that endpoint.\n\n**Note**: This issue only affects software that has been written to leverage specific deserialization functionality provided by the Spring Framework without sanitization.\n\n## Vulnerabilities(BDSA,CVE)\n:orange_circle: [BDSA-2022-0847](https://openhub.net/vulnerabilities/bdsa/BDSA-2022-0847) - Insecure Object Deserialization\n\n\n\n## Solution\nFixed in **[6.0.0-M4](https://github.com/spring-projects/spring-framework/releases/tag/v6.0.0-M4)** by [this](https://github.com/spring-projects/spring-framework/commit/7f7fb58dd0dae86d22268a4b59ac7c72a6c22529) commit.\n\nFixed in **[5.3.18](https://github.com/spring-projects/spring-framework/releases/tag/v5.3.18)** and **[5.2.20](https://github.com/spring-projects/spring-framework/releases/tag/v5.2.20.RELEASE)** by [this](https://github.com/spring-projects/spring-framework/commit/3811cd4c0a0be3aac6e842cf1890610ce986449d) commit.\n\n**Note**: These patches simply annotate the dangerous method as deprecated or documents the dangers. It is the responsibility of developers who call this method to ensure that it is not used with unsanitized untrusted input.\n\n\n\n## Dependency tree\n- org.owasp.webgoat:webgoat-container:v8.1.0:-maven\n    - org.springframework.boot:spring-boot-starter-data-jpa:2.2.2.RELEASE\n        - org.springframework.data:spring-data-jpa:2.2.3.RELEASE\n            - org.springframework:spring-orm:5.2.2.RELEASE\n\n\n## References\n* Common Weakness Enumeration: [CWE-502](https://cwe.mitre.org/data/definitions/502.html)\n\n","text":"Software systems using Spring Framework may be vulnerable to unsafe deserialization if they employ unsafe use of certain provided deserialization functionality. A remote attacker could potentially execute arbitrary code on a vulnerable endpoint by passing a maliciously crafted serialized object to that endpoint.\n\n**Note**: This issue only affects software that has been written to leverage specific deserialization functionality provided by the Spring Framework without sanitization."},"properties":{"security-severity":"8.9","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-502"]},"defaultConfiguration":{"level":"error"}},{"id":"CVE-2020-5398 spring-orm 5.2.2.RELEASE: spring-boot-starter-data-jpa 2.2.2.RELEASE: org.springframework","shortDescription":{"text":"Transitive Dependency: spring-orm 5.2.2.RELEASE from spring-boot-starter-data-jpa 2.2.2.RELEASE (CVE-2020-5398)"},"fullDescription":{"text":"Spring Framework is vulnerable to a reflected file download (RFD) attack via improper input validation on filenames in a `Content-Disposition` header."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| spring-orm 5.2.2.RELEASE  | 5.3.31  | 6.1.2 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/ba6e9d03-9fbd-4086-9631-99d1ad5e520c?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=09f17d81-b282-43ec-9f2b-36c8021d3ca7)\n\n\n## Description\nSpring Framework is vulnerable to a reflected file download (RFD) attack via improper input validation on filenames in a `Content-Disposition` header.\n\n## Vulnerabilities(BDSA,CVE)\n:orange_circle: [CVE-2020-5398](https://openhub.net/vulnerabilities/bdsa/CVE-2020-5398) - Weak Input Validation\n\n\n\n## Solution\nFixed by [this](https://github.com/spring-projects/spring-framework/commit/956ffe68587c8d5f21135b5ce4650af0c2dea933) commit in:\n* [**5.2.3**](https://github.com/spring-projects/spring-framework/releases/tag/v5.2.3.RELEASE)\n* [**5.1.13**](https://github.com/spring-projects/spring-framework/releases/tag/v5.1.13.RELEASE) \n* [**5.0.16**](https://github.com/spring-projects/spring-framework/releases/tag/v5.0.16.RELEASE)\n\n\n\n## Dependency tree\n- org.owasp.webgoat:webgoat-container:v8.1.0:-maven\n    - org.springframework.boot:spring-boot-starter-data-jpa:2.2.2.RELEASE\n        - org.springframework.data:spring-data-jpa:2.2.3.RELEASE\n            - org.springframework:spring-orm:5.2.2.RELEASE\n\n\n## References\n* Common Weakness Enumeration: [CWE-20](https://cwe.mitre.org/data/definitions/20.html)\n\n","text":"Spring Framework is vulnerable to a reflected file download (RFD) attack via improper input validation on filenames in a `Content-Disposition` header."},"properties":{"security-severity":"8.9","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-20"]},"defaultConfiguration":{"level":"error"}},{"id":"CVE-2021-22096 spring-orm 5.2.2.RELEASE: spring-boot-starter-data-jpa 2.2.2.RELEASE: org.springframework","shortDescription":{"text":"Transitive Dependency: spring-orm 5.2.2.RELEASE from spring-boot-starter-data-jpa 2.2.2.RELEASE (CVE-2021-22096)"},"fullDescription":{"text":"Spring Framework is vulnerable to log file injection due to the insufficient validation of user input in an undisclosed component. An attacker could leverage this issue in order to add arbitrary entries to a log file which could impact both the integrity issues and performance issues.\n\n**Note**: a follow-up to this issue was disclosed as **CVE-2021-22060** (**BDSA-2021-3236**), with further fixed releases that protect against additional types of input and in more places of the Spring Framework codebase."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| spring-orm 5.2.2.RELEASE  | 5.3.31  | 6.1.2 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/ba6e9d03-9fbd-4086-9631-99d1ad5e520c?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=09f17d81-b282-43ec-9f2b-36c8021d3ca7)\n\n\n## Description\nSpring Framework is vulnerable to log file injection due to the insufficient validation of user input in an undisclosed component. An attacker could leverage this issue in order to add arbitrary entries to a log file which could impact both the integrity issues and performance issues.\n\n**Note**: a follow-up to this issue was disclosed as **CVE-2021-22060** (**BDSA-2021-3236**), with further fixed releases that protect against additional types of input and in more places of the Spring Framework codebase.\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [CVE-2021-22096](https://openhub.net/vulnerabilities/bdsa/CVE-2021-22096) - Injection in Downstream Component\n\n\n\n## Solution\nFixed in versions [**5.3.14**](https://github.com/spring-projects/spring-framework/releases/tag/v5.3.14) and [**5.2.19**](https://github.com/spring-projects/spring-framework/releases/tag/v5.2.19.RELEASE).\n\nThe latest stable releases can be found [here](https://github.com/spring-projects/spring-framework/releases).\n\n\n\n## Dependency tree\n- org.owasp.webgoat:webgoat-container:v8.1.0:-maven\n    - org.springframework.boot:spring-boot-starter-data-jpa:2.2.2.RELEASE\n        - org.springframework.data:spring-data-jpa:2.2.3.RELEASE\n            - org.springframework:spring-orm:5.2.2.RELEASE\n\n\n## References\n* Common Weakness Enumeration: [CWE-74](https://cwe.mitre.org/data/definitions/74.html)\n\n","text":"Spring Framework is vulnerable to log file injection due to the insufficient validation of user input in an undisclosed component. An attacker could leverage this issue in order to add arbitrary entries to a log file which could impact both the integrity issues and performance issues.\n\n**Note**: a follow-up to this issue was disclosed as **CVE-2021-22060** (**BDSA-2021-3236**), with further fixed releases that protect against additional types of input and in more places of the Spring Framework codebase."},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-74"]},"defaultConfiguration":{"level":"warning"}},{"id":"CVE-2021-22060 spring-orm 5.2.2.RELEASE: spring-boot-starter-data-jpa 2.2.2.RELEASE: org.springframework","shortDescription":{"text":"Transitive Dependency: spring-orm 5.2.2.RELEASE from spring-boot-starter-data-jpa 2.2.2.RELEASE (CVE-2021-22060)"},"fullDescription":{"text":"Spring Framework is vulnerable to log file injection due to the insufficient validation of user input in an undisclosed component. An attacker could leverage this issue in order to add arbitrary entries to a log file which could impact both the integrity issues and performance issues.\n\n**Note**: the vendor states this issue exists as a follow up to CVE-2021-22096 (BDSA-2022-0011) that protects against additional types of input and in more places of the Spring Framework codebase."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| spring-orm 5.2.2.RELEASE  | 5.3.31  | 6.1.2 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/ba6e9d03-9fbd-4086-9631-99d1ad5e520c?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=09f17d81-b282-43ec-9f2b-36c8021d3ca7)\n\n\n## Description\nSpring Framework is vulnerable to log file injection due to the insufficient validation of user input in an undisclosed component. An attacker could leverage this issue in order to add arbitrary entries to a log file which could impact both the integrity issues and performance issues.\n\n**Note**: the vendor states this issue exists as a follow up to CVE-2021-22096 (BDSA-2022-0011) that protects against additional types of input and in more places of the Spring Framework codebase.\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [CVE-2021-22060](https://openhub.net/vulnerabilities/bdsa/CVE-2021-22060) - Injection in Downstream Component\n\n\n\n## Solution\nFixed in versions [**5.3.14**](https://github.com/spring-projects/spring-framework/releases/tag/v5.3.14) and [**5.2.19**](https://github.com/spring-projects/spring-framework/releases/tag/v5.2.19.RELEASE).\n\nThe latest stable releases can be found [here](https://github.com/spring-projects/spring-framework/releases).\n\n\n\n## Dependency tree\n- org.owasp.webgoat:webgoat-container:v8.1.0:-maven\n    - org.springframework.boot:spring-boot-starter-data-jpa:2.2.2.RELEASE\n        - org.springframework.data:spring-data-jpa:2.2.3.RELEASE\n            - org.springframework:spring-orm:5.2.2.RELEASE\n\n\n## References\n* Common Weakness Enumeration: [CWE-74](https://cwe.mitre.org/data/definitions/74.html)\n\n","text":"Spring Framework is vulnerable to log file injection due to the insufficient validation of user input in an undisclosed component. An attacker could leverage this issue in order to add arbitrary entries to a log file which could impact both the integrity issues and performance issues.\n\n**Note**: the vendor states this issue exists as a follow up to CVE-2021-22096 (BDSA-2022-0011) that protects against additional types of input and in more places of the Spring Framework codebase."},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-74"]},"defaultConfiguration":{"level":"warning"}},{"id":"CVE-2022-22950 spring-orm 5.2.2.RELEASE: spring-boot-starter-data-jpa 2.2.2.RELEASE: org.springframework","shortDescription":{"text":"Transitive Dependency: spring-orm 5.2.2.RELEASE from spring-boot-starter-data-jpa 2.2.2.RELEASE (CVE-2022-22950)"},"fullDescription":{"text":"Spring-Framework's spring-expression is vulnerable to a denial-of-service (DoS) condition. This allows an attacker to use crafted input to cause the spring-expression process to crash due to an exception."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| spring-orm 5.2.2.RELEASE  | 5.3.31  | 6.1.2 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/ba6e9d03-9fbd-4086-9631-99d1ad5e520c?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=09f17d81-b282-43ec-9f2b-36c8021d3ca7)\n\n\n## Description\nSpring-Framework's spring-expression is vulnerable to a denial-of-service (DoS) condition. This allows an attacker to use crafted input to cause the spring-expression process to crash due to an exception.\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [CVE-2022-22950](https://openhub.net/vulnerabilities/bdsa/CVE-2022-22950) - Allocation of Resources Without Limits or Throttling\n\n\n\n## Solution\nFixed in version [**5.3.17**](https://github.com/spring-projects/spring-framework/releases/tag/v5.3.17) by [this](https://github.com/spring-projects/spring-framework/commit/94af2ca06bf711de03286999b1c64a703d6de552) commit.\n\nThe latest stable releases can be found [here](https://github.com/spring-projects/spring-framework/tags).\n\n\n\n## Dependency tree\n- org.owasp.webgoat:webgoat-container:v8.1.0:-maven\n    - org.springframework.boot:spring-boot-starter-data-jpa:2.2.2.RELEASE\n        - org.springframework.data:spring-data-jpa:2.2.3.RELEASE\n            - org.springframework:spring-orm:5.2.2.RELEASE\n\n\n## References\n* Common Weakness Enumeration: [CWE-770](https://cwe.mitre.org/data/definitions/770.html)\n\n","text":"Spring-Framework's spring-expression is vulnerable to a denial-of-service (DoS) condition. This allows an attacker to use crafted input to cause the spring-expression process to crash due to an exception."},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-770"]},"defaultConfiguration":{"level":"warning"}},{"id":"CVE-2021-22118 spring-orm 5.2.2.RELEASE: spring-boot-starter-data-jpa 2.2.2.RELEASE: org.springframework","shortDescription":{"text":"Transitive Dependency: spring-orm 5.2.2.RELEASE from spring-boot-starter-data-jpa 2.2.2.RELEASE (CVE-2021-22118)"},"fullDescription":{"text":"Spring Framework is vulnerable to privilege escalation due to the creation of unsafe temporary directories by the WebFlux component. A local authenticated attacker could modify arbitrary files via maliciously crafted `multipart` requests. \n\nThis vulnerability does not affect Spring MVC applications, or applications that do not handle `multipart` file requests."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| spring-orm 5.2.2.RELEASE  | 5.3.31  | 6.1.2 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/ba6e9d03-9fbd-4086-9631-99d1ad5e520c?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=09f17d81-b282-43ec-9f2b-36c8021d3ca7)\n\n\n## Description\nSpring Framework is vulnerable to privilege escalation due to the creation of unsafe temporary directories by the WebFlux component. A local authenticated attacker could modify arbitrary files via maliciously crafted `multipart` requests. \n\nThis vulnerability does not affect Spring MVC applications, or applications that do not handle `multipart` file requests.\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [CVE-2021-22118](https://openhub.net/vulnerabilities/bdsa/CVE-2021-22118) - Third-party component usage\n\n\n\n## Solution\nFixed in [**5.3.7**](https://github.com/spring-projects/spring-framework/releases/tag/v5.3.7)  by [this](https://github.com/spring-projects/spring-framework/commit/cce60c479c22101f24b2b4abebb6d79440b120d1) commit and [this](https://github.com/spring-projects/spring-framework/commit/0d0d75e25322d8161002d861fff3ec04ba8be5ac) commit, and in [**5.2.15**](https://github.com/spring-projects/spring-framework/releases/tag/v5.2.15.RELEASE) by [this](https://github.com/spring-projects/spring-framework/commit/85ad63bd35f6f10fa5549ba9a11869144338bd8a) commit.\n\nThe latest stable releases are available [here](https://github.com/spring-projects/spring-framework/releases/).\n\n\n\n## Dependency tree\n- org.owasp.webgoat:webgoat-container:v8.1.0:-maven\n    - org.springframework.boot:spring-boot-starter-data-jpa:2.2.2.RELEASE\n        - org.springframework.data:spring-data-jpa:2.2.3.RELEASE\n            - org.springframework:spring-orm:5.2.2.RELEASE\n\n\n## References\n* Common Weakness Enumeration: [CWE-264](https://cwe.mitre.org/data/definitions/264.html)\n* Common Weakness Enumeration: [CWE-376](https://cwe.mitre.org/data/definitions/376.html)\n\n","text":"Spring Framework is vulnerable to privilege escalation due to the creation of unsafe temporary directories by the WebFlux component. A local authenticated attacker could modify arbitrary files via maliciously crafted `multipart` requests. \n\nThis vulnerability does not affect Spring MVC applications, or applications that do not handle `multipart` file requests."},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-264","external/cwe/cwe-376"]},"defaultConfiguration":{"level":"warning"}},{"id":"CVE-2022-22970 spring-orm 5.2.2.RELEASE: spring-boot-starter-data-jpa 2.2.2.RELEASE: org.springframework","shortDescription":{"text":"Transitive Dependency: spring-orm 5.2.2.RELEASE from spring-boot-starter-data-jpa 2.2.2.RELEASE (CVE-2022-22970)"},"fullDescription":{"text":"Spring Framework is vulnerable to denial-of-service (DoS) due to the improper implementation of data binding functionality. A remote attacker could cause a vulnerable server to crash if that server provides file upload functionality."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| spring-orm 5.2.2.RELEASE  | 5.3.31  | 6.1.2 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/ba6e9d03-9fbd-4086-9631-99d1ad5e520c?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=09f17d81-b282-43ec-9f2b-36c8021d3ca7)\n\n\n## Description\nSpring Framework is vulnerable to denial-of-service (DoS) due to the improper implementation of data binding functionality. A remote attacker could cause a vulnerable server to crash if that server provides file upload functionality.\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [CVE-2022-22970](https://openhub.net/vulnerabilities/bdsa/CVE-2022-22970) - Incorrect Provision of Specified Functionality\n\n\n\n## Solution\nFixed in version [**5.3.20**](https://github.com/spring-projects/spring-framework/releases/tag/v5.3.20) and in version [**5.2.22**](https://github.com/spring-projects/spring-framework/releases/tag/v5.2.22.RELEASE).\n\nThe latest stable releases can be found [here](https://github.com/spring-projects/spring-framework/releases).\n\n\n\n## Dependency tree\n- org.owasp.webgoat:webgoat-container:v8.1.0:-maven\n    - org.springframework.boot:spring-boot-starter-data-jpa:2.2.2.RELEASE\n        - org.springframework.data:spring-data-jpa:2.2.3.RELEASE\n            - org.springframework:spring-orm:5.2.2.RELEASE\n\n\n## References\n* Common Weakness Enumeration: [CWE-684](https://cwe.mitre.org/data/definitions/684.html)\n\n","text":"Spring Framework is vulnerable to denial-of-service (DoS) due to the improper implementation of data binding functionality. A remote attacker could cause a vulnerable server to crash if that server provides file upload functionality."},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-684"]},"defaultConfiguration":{"level":"warning"}},{"id":"CVE-2022-22971 spring-orm 5.2.2.RELEASE: spring-boot-starter-data-jpa 2.2.2.RELEASE: org.springframework","shortDescription":{"text":"Transitive Dependency: spring-orm 5.2.2.RELEASE from spring-boot-starter-data-jpa 2.2.2.RELEASE (CVE-2022-22971)"},"fullDescription":{"text":"Spring Framework is vulnerable to denial-of-service (DoS) due to the improper handling of the STOMP protocol for websockets. A remote authenticated attacker could leverage this issue in order to cause a server to crash."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| spring-orm 5.2.2.RELEASE  | 5.3.31  | 6.1.2 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/ba6e9d03-9fbd-4086-9631-99d1ad5e520c?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=09f17d81-b282-43ec-9f2b-36c8021d3ca7)\n\n\n## Description\nSpring Framework is vulnerable to denial-of-service (DoS) due to the improper handling of the STOMP protocol for websockets. A remote authenticated attacker could leverage this issue in order to cause a server to crash.\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [CVE-2022-22971](https://openhub.net/vulnerabilities/bdsa/CVE-2022-22971) - Incorrect Provision of Specified Functionality\n\n\n\n## Solution\nFixed in version [**5.3.20**](https://github.com/spring-projects/spring-framework/releases/tag/v5.3.20) and in version [**5.2.22**](https://github.com/spring-projects/spring-framework/releases/tag/v5.2.22.RELEASE).\n\nThe latest stable releases can be found [here](https://github.com/spring-projects/spring-framework/releases).\n\n\n\n## Dependency tree\n- org.owasp.webgoat:webgoat-container:v8.1.0:-maven\n    - org.springframework.boot:spring-boot-starter-data-jpa:2.2.2.RELEASE\n        - org.springframework.data:spring-data-jpa:2.2.3.RELEASE\n            - org.springframework:spring-orm:5.2.2.RELEASE\n\n\n## References\n* Common Weakness Enumeration: [CWE-684](https://cwe.mitre.org/data/definitions/684.html)\n\n","text":"Spring Framework is vulnerable to denial-of-service (DoS) due to the improper handling of the STOMP protocol for websockets. A remote authenticated attacker could leverage this issue in order to cause a server to crash."},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-684"]},"defaultConfiguration":{"level":"warning"}},{"id":"CVE-2023-20861 spring-orm 5.2.2.RELEASE: spring-boot-starter-data-jpa 2.2.2.RELEASE: org.springframework","shortDescription":{"text":"Transitive Dependency: spring-orm 5.2.2.RELEASE from spring-boot-starter-data-jpa 2.2.2.RELEASE (CVE-2023-20861)"},"fullDescription":{"text":"Spring Framework is vulnerable to denial-of-service (DoS) via specially crafted SpEL expressions. An attacker could exploit this issue by passing a crafted SpEL expression to the application which may result in a crash."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| spring-orm 5.2.2.RELEASE  | 5.3.31  | 6.1.2 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/ba6e9d03-9fbd-4086-9631-99d1ad5e520c?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=09f17d81-b282-43ec-9f2b-36c8021d3ca7)\n\n\n## Description\nSpring Framework is vulnerable to denial-of-service (DoS) via specially crafted SpEL expressions. An attacker could exploit this issue by passing a crafted SpEL expression to the application which may result in a crash.\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [CVE-2023-20861](https://openhub.net/vulnerabilities/bdsa/CVE-2023-20861) - Weak Input Validation\n\n\n\n## Solution\nFixed in:\n* [**5.2.23**](https://github.com/spring-projects/spring-framework/releases/tag/v5.2.23.RELEASE) by [this](https://github.com/spring-projects/spring-framework/commit/52c93b1c4b24d70de233a958e60e7c5822bd274f) commit,\n* [**5.3.26**](https://github.com/spring-projects/spring-framework/releases/tag/v5.3.26) by [this](https://github.com/spring-projects/spring-framework/commit/430fc25acad2e85cbdddcd52b64481691f03ebd1) commit,\n* [**6.0.7**](https://github.com/spring-projects/spring-framework/releases/tag/v6.0.7) by [this](https://github.com/spring-projects/spring-framework/commit/935c29e3ddba5b19951e54f6685c70ed45d9cbe5) commit.\n\nThe latest stable releases are available [here](https://github.com/spring-projects/spring-framework/releases).\n\n\n\n## Dependency tree\n- org.owasp.webgoat:webgoat-container:v8.1.0:-maven\n    - org.springframework.boot:spring-boot-starter-data-jpa:2.2.2.RELEASE\n        - org.springframework.data:spring-data-jpa:2.2.3.RELEASE\n            - org.springframework:spring-orm:5.2.2.RELEASE\n\n\n## References\n* Common Weakness Enumeration: [CWE-20](https://cwe.mitre.org/data/definitions/20.html)\n\n","text":"Spring Framework is vulnerable to denial-of-service (DoS) via specially crafted SpEL expressions. An attacker could exploit this issue by passing a crafted SpEL expression to the application which may result in a crash."},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-20"]},"defaultConfiguration":{"level":"warning"}},{"id":"CVE-2023-20863 spring-orm 5.2.2.RELEASE: spring-boot-starter-data-jpa 2.2.2.RELEASE: org.springframework","shortDescription":{"text":"Transitive Dependency: spring-orm 5.2.2.RELEASE from spring-boot-starter-data-jpa 2.2.2.RELEASE (CVE-2023-20863)"},"fullDescription":{"text":"Spring Framework is vulnerable to denial-of-service (DoS) via specially crafted SpEL expressions."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| spring-orm 5.2.2.RELEASE  | 5.3.31  | 6.1.2 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/ba6e9d03-9fbd-4086-9631-99d1ad5e520c?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=09f17d81-b282-43ec-9f2b-36c8021d3ca7)\n\n\n## Description\nSpring Framework is vulnerable to denial-of-service (DoS) via specially crafted SpEL expressions.\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [CVE-2023-20863](https://openhub.net/vulnerabilities/bdsa/CVE-2023-20863) - Weak Input Validation\n\n\n\n## Solution\nFixed in:\n* [**5.2.24**](https://github.com/spring-projects/spring-framework/releases/tag/v5.2.24.RELEASE)\n* [**5.3.27**](https://github.com/spring-projects/spring-framework/releases/tag/v5.3.27)\n* [**6.0.8**](https://github.com/spring-projects/spring-framework/releases/tag/v6.0.8)\n\nThe latest stable releases are available [here](https://github.com/spring-projects/spring-framework/releases).\n\n\n\n## Dependency tree\n- org.owasp.webgoat:webgoat-container:v8.1.0:-maven\n    - org.springframework.boot:spring-boot-starter-data-jpa:2.2.2.RELEASE\n        - org.springframework.data:spring-data-jpa:2.2.3.RELEASE\n            - org.springframework:spring-orm:5.2.2.RELEASE\n\n\n## References\n* Common Weakness Enumeration: [CWE-20](https://cwe.mitre.org/data/definitions/20.html)\n\n","text":"Spring Framework is vulnerable to denial-of-service (DoS) via specially crafted SpEL expressions."},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-20"]},"defaultConfiguration":{"level":"warning"}},{"id":"CVE-2020-5421 spring-orm 5.2.2.RELEASE: spring-boot-starter-data-jpa 2.2.2.RELEASE: org.springframework","shortDescription":{"text":"Transitive Dependency: spring-orm 5.2.2.RELEASE from spring-boot-starter-data-jpa 2.2.2.RELEASE (CVE-2020-5421)"},"fullDescription":{"text":"It was discovered that Spring Framework was vulnerable to RFD protection bypass. In some instances, depending on the browser used, an attacker could bypass the RFD attack protections via the use of a `jsessionid` path parameter."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| spring-orm 5.2.2.RELEASE  | 5.3.31  | 6.1.2 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/ba6e9d03-9fbd-4086-9631-99d1ad5e520c?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=09f17d81-b282-43ec-9f2b-36c8021d3ca7)\n\n\n## Description\nIt was discovered that Spring Framework was vulnerable to RFD protection bypass. In some instances, depending on the browser used, an attacker could bypass the RFD attack protections via the use of a `jsessionid` path parameter.\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [CVE-2020-5421](https://openhub.net/vulnerabilities/bdsa/CVE-2020-5421) - Weak Input Validation\n\n\n\n## Solution\nFixed in:\n* [**5.2.9**](https://github.com/spring-projects/spring-framework/releases/tag/v5.2.9.RELEASE) by [this](https://github.com/spring-projects/spring-framework/commit/899761f0a8890353dc01f10d2af96ae192f3e655) commit,\n* [**5.1.18**](https://github.com/spring-projects/spring-framework/releases/tag/v5.1.18.RELEASE) by [this](https://github.com/spring-projects/spring-framework/commit/a63c8886c00f30fea5b25f50ddf6f56c6eb957bd) commit,\n* [**5.0.19**](https://github.com/spring-projects/spring-framework/releases/tag/v5.0.19.RELEASE) by [this](https://github.com/spring-projects/spring-framework/commit/aec3a4c69e02d87f87258b0ab5c1d6c83f4cb44f) commit,\n* [**4.3.29**](https://github.com/spring-projects/spring-framework/releases/tag/v4.3.29.RELEASE) by [this](https://github.com/spring-projects/spring-framework/commit/2f75212eb667a30fe2fa9b5aca8f22d5e255821f) commit.\n\n\n\n## Dependency tree\n- org.owasp.webgoat:webgoat-container:v8.1.0:-maven\n    - org.springframework.boot:spring-boot-starter-data-jpa:2.2.2.RELEASE\n        - org.springframework.data:spring-data-jpa:2.2.3.RELEASE\n            - org.springframework:spring-orm:5.2.2.RELEASE\n\n\n## References\n* Common Weakness Enumeration: [CWE-20](https://cwe.mitre.org/data/definitions/20.html)\n\n","text":"It was discovered that Spring Framework was vulnerable to RFD protection bypass. In some instances, depending on the browser used, an attacker could bypass the RFD attack protections via the use of a `jsessionid` path parameter."},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-20"]},"defaultConfiguration":{"level":"warning"}},{"id":"CVE-2022-22968 spring-orm 5.2.2.RELEASE: spring-boot-starter-data-jpa 2.2.2.RELEASE: org.springframework","shortDescription":{"text":"Transitive Dependency: spring-orm 5.2.2.RELEASE from spring-boot-starter-data-jpa 2.2.2.RELEASE (CVE-2022-22968)"},"fullDescription":{"text":"Spring Framework is vulnerable to data binding protection bypass due to improper validation of specified disallowed fields in `DataBinders`. This could be leveraged by an attacker to bypass the suggested workaround to **CVE-2022-22965** (**BDSA-2022-0858**) if it is improperly implemented."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| spring-orm 5.2.2.RELEASE  | 5.3.31  | 6.1.2 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/ba6e9d03-9fbd-4086-9631-99d1ad5e520c?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=09f17d81-b282-43ec-9f2b-36c8021d3ca7)\n\n\n## Description\nSpring Framework is vulnerable to data binding protection bypass due to improper validation of specified disallowed fields in `DataBinders`. This could be leveraged by an attacker to bypass the suggested workaround to **CVE-2022-22965** (**BDSA-2022-0858**) if it is improperly implemented.\n\n## Vulnerabilities(BDSA,CVE)\n:large_blue_circle: [CVE-2022-22968](https://openhub.net/vulnerabilities/bdsa/CVE-2022-22968) - Weak Input Validation\n\n\n\n## Solution\nFixed  in [**5.3.19**](https://github.com/spring-projects/spring-framework/releases/tag/v5.3.19) by [this](https://github.com/spring-projects/spring-framework/commit/a7cf19cec5ebd270f97a194d749e2d5701ad2ab7) commit and [**5.2.21**](https://github.com/spring-projects/spring-framework/releases/tag/v5.2.21.RELEASE) by [this](https://github.com/spring-projects/spring-framework/commit/833e750175349ab4fd502109a8b41af77e25cdea) commit.\n\n\n\n## Dependency tree\n- org.owasp.webgoat:webgoat-container:v8.1.0:-maven\n    - org.springframework.boot:spring-boot-starter-data-jpa:2.2.2.RELEASE\n        - org.springframework.data:spring-data-jpa:2.2.3.RELEASE\n            - org.springframework:spring-orm:5.2.2.RELEASE\n\n\n## References\n* Common Weakness Enumeration: [CWE-20](https://cwe.mitre.org/data/definitions/20.html)\n\n","text":"Spring Framework is vulnerable to data binding protection bypass due to improper validation of specified disallowed fields in `DataBinders`. This could be leveraged by an attacker to bypass the suggested workaround to **CVE-2022-22965** (**BDSA-2022-0858**) if it is improperly implemented."},"properties":{"security-severity":"3.8","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-20"]},"defaultConfiguration":{"level":"note"}},{"id":"BDSA-2021-3731 spring-boot-starter-data-jpa 2.2.2.RELEASE: org.springframework.boot","shortDescription":{"text":"Direct Dependency: spring-boot-starter-data-jpa 2.2.2.RELEASE (BDSA-2021-3731)"},"fullDescription":{"text":"Apache Log4j, as used in many popular services, is vulnerable to improperly allowing lightweight directory access protocol (LDAP) access via Java naming and directory interface (JNDI). A remote attacker able to supply the end application with specially crafted input that is then processed by the Log4j subcomponent could cause the execution of arbitrary Java code.\n\n**Note** \n\n- log4j-api packages by themselves do not contain the vulnerable functionality and are therefore unaffected. log4j-core packages and the upstream overarching source repository are affected.\n\n- A previously suggested mitigation of setting environment variable `LOG4J_FORMAT_MSG_NO_LOOKUPS=true` is not recommended. This mitigation has been proven inadequate against this vulnerability. \n\n- This vulnerability is partially fixed in [**2.15.0-rc2**](https://github.com/apache/logging-log4j2/releases/tag/log4j-2.15.0-rc2) by [this](https://github.com/apache/logging-log4j2/commit/001aaada7dab82c3c09cde5f8e14245dc9d8b454) commit and [this](https://github.com/apache/logging-log4j2/commit/bac0d8a35c7e354a0d3f706569116dff6c6bd658) commit. These fixes were deemed incomplete. See BDSA-2021-3779 (CVE-2021-45046) for more details.\n\nThis vulnerability is listed as exploitable by the Cybersecurity \u0026 Infrastructure Security Agency in their [Known Exploited Vulnerabilities Catalog](https://www.cisa.gov/known-exploited-vulnerabilities-catalog)."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| spring-boot-starter-data-jpa 2.2.2.RELEASE  | 2.7.18  | 3.2.1 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/48431389-4a2f-44ed-8597-55184ffc0e88?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=ee1b331d-05e0-4bd1-b6ef-727c3b98e324)\n\n\n## Description\nApache Log4j, as used in many popular services, is vulnerable to improperly allowing lightweight directory access protocol (LDAP) access via Java naming and directory interface (JNDI). A remote attacker able to supply the end application with specially crafted input that is then processed by the Log4j subcomponent could cause the execution of arbitrary Java code.\n\n**Note** \n\n- log4j-api packages by themselves do not contain the vulnerable functionality and are therefore unaffected. log4j-core packages and the upstream overarching source repository are affected.\n\n- A previously suggested mitigation of setting environment variable `LOG4J_FORMAT_MSG_NO_LOOKUPS=true` is not recommended. This mitigation has been proven inadequate against this vulnerability. \n\n- This vulnerability is partially fixed in [**2.15.0-rc2**](https://github.com/apache/logging-log4j2/releases/tag/log4j-2.15.0-rc2) by [this](https://github.com/apache/logging-log4j2/commit/001aaada7dab82c3c09cde5f8e14245dc9d8b454) commit and [this](https://github.com/apache/logging-log4j2/commit/bac0d8a35c7e354a0d3f706569116dff6c6bd658) commit. These fixes were deemed incomplete. See BDSA-2021-3779 (CVE-2021-45046) for more details.\n\nThis vulnerability is listed as exploitable by the Cybersecurity \u0026 Infrastructure Security Agency in their [Known Exploited Vulnerabilities Catalog](https://www.cisa.gov/known-exploited-vulnerabilities-catalog).\n\n## Vulnerabilities(BDSA,CVE)\n:red_circle: [BDSA-2021-3731](https://openhub.net/vulnerabilities/bdsa/BDSA-2021-3731) - Insecure Object Deserialization\n\n\n\n## Solution\nFixed in versions:\n*  [**2.16.0-rc1**](https://github.com/apache/logging-log4j2/releases/tag/log4j-2.16.0-rc1) by [this](https://github.com/apache/logging-log4j2/commit/27972043b76c9645476f561c5adc483dec6d3f5d) commit.\n*  [**2.12.2-rc1**](https://github.com/apache/logging-log4j2/releases/tag/log4j-2.12.2-rc1) by [this](https://github.com/apache/logging-log4j2/commit/f819c83804152cb6ed94cb408302e36b21b65053) commit and [this](https://github.com/apache/logging-log4j2/commit/70edc233343815d5efa043b54294a6fb065aa1c5) commit.\n*   [**2.3.1-rc1**](https://github.com/apache/logging-log4j2/releases/tag/log4j-2.3.1-rc1) by [this](https://github.com/apache/logging-log4j2/commit/be848dacbac6df30c4f32b2852e24446033ecf79) commit and [this](https://github.com/apache/logging-log4j2/commit/f6564bb993d547d0a371b75d869042c334bf57f0) commit.\n\nThe latest releases can be found [here](https://github.com/apache/logging-log4j2/tags).\n\nNOTE: It is recommended to upgrade to version  [**2.17.0**](https://downloads.apache.org/logging/log4j/2.17.0/). This recommendation is due to related vulnerabilities (BDSA-2021-3779, CVE-2021-45046) affecting the version that this vulnerability is fixed in.\n\n## Workaround\nThe vendor states that:\n\n\u003e This issue can be mitigated in prior releases (\u003c**2.16.0**) by removing the JndiLookup class from the classpath (example: `zip -q -d log4j-core-*.jar org/apache/logging/log4j/core/lookup/JndiLookup.class`).\n\n\n\n## References\n* Common Weakness Enumeration: [CWE-502](https://cwe.mitre.org/data/definitions/502.html)\n\n","text":"Apache Log4j, as used in many popular services, is vulnerable to improperly allowing lightweight directory access protocol (LDAP) access via Java naming and directory interface (JNDI). A remote attacker able to supply the end application with specially crafted input that is then processed by the Log4j subcomponent could cause the execution of arbitrary Java code.\n\n**Note** \n\n- log4j-api packages by themselves do not contain the vulnerable functionality and are therefore unaffected. log4j-core packages and the upstream overarching source repository are affected.\n\n- A previously suggested mitigation of setting environment variable `LOG4J_FORMAT_MSG_NO_LOOKUPS=true` is not recommended. This mitigation has been proven inadequate against this vulnerability. \n\n- This vulnerability is partially fixed in [**2.15.0-rc2**](https://github.com/apache/logging-log4j2/releases/tag/log4j-2.15.0-rc2) by [this](https://github.com/apache/logging-log4j2/commit/001aaada7dab82c3c09cde5f8e14245dc9d8b454) commit and [this](https://github.com/apache/logging-log4j2/commit/bac0d8a35c7e354a0d3f706569116dff6c6bd658) commit. These fixes were deemed incomplete. See BDSA-2021-3779 (CVE-2021-45046) for more details.\n\nThis vulnerability is listed as exploitable by the Cybersecurity \u0026 Infrastructure Security Agency in their [Known Exploited Vulnerabilities Catalog](https://www.cisa.gov/known-exploited-vulnerabilities-catalog)."},"properties":{"security-severity":"9.1","tags":["security","open_source_analysis","direct_dependency","patch_available","external/cwe/cwe-502"]},"defaultConfiguration":{"level":"error"}},{"id":"CVE-2022-22965 spring-boot-starter-data-jpa 2.2.2.RELEASE: org.springframework.boot","shortDescription":{"text":"Direct Dependency: spring-boot-starter-data-jpa 2.2.2.RELEASE (CVE-2022-22965)"},"fullDescription":{"text":"Spring Framework is vulnerable to a flaw in the access restrictions to the security sensitive `ClassLoader` property. The restrictions can be bypassed through alternative paths available with Java9 and later. An attacker can leverage this vulnerability to cause remote code execution (RCE).\n\n**Note** this issue exists because the restrictions that were introduced to prevent exploitation of BDSA-2010-0001 (CVE-2010-1622) can be bypassed on platforms where Java9 and later are in use.\n\nThis vulnerability is listed as exploitable by the Cybersecurity \u0026 Infrastructure Security Agency in their [Known Exploited Vulnerabilities Catalog](https://www.cisa.gov/known-exploited-vulnerabilities-catalog)."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| spring-boot-starter-data-jpa 2.2.2.RELEASE  | 2.7.18  | 3.2.1 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/48431389-4a2f-44ed-8597-55184ffc0e88?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=ee1b331d-05e0-4bd1-b6ef-727c3b98e324)\n\n\n## Description\nSpring Framework is vulnerable to a flaw in the access restrictions to the security sensitive `ClassLoader` property. The restrictions can be bypassed through alternative paths available with Java9 and later. An attacker can leverage this vulnerability to cause remote code execution (RCE).\n\n**Note** this issue exists because the restrictions that were introduced to prevent exploitation of BDSA-2010-0001 (CVE-2010-1622) can be bypassed on platforms where Java9 and later are in use.\n\nThis vulnerability is listed as exploitable by the Cybersecurity \u0026 Infrastructure Security Agency in their [Known Exploited Vulnerabilities Catalog](https://www.cisa.gov/known-exploited-vulnerabilities-catalog).\n\n## Vulnerabilities(BDSA,CVE)\n:red_circle: [CVE-2022-22965](https://openhub.net/vulnerabilities/bdsa/CVE-2022-22965) - Incomplete List of Disallowed Inputs\n\n\n\n## Solution\nFixed in [**5.3.18**](https://github.com/spring-projects/spring-framework/releases/tag/v5.3.18) by [this](https://github.com/spring-projects/spring-framework/commit/002546b3e4b8d791ea6acccb81eb3168f51abb15) commit and  [**5.2.20**](https://github.com/spring-projects/spring-framework/releases/tag/v5.2.20.RELEASE) by [this](https://github.com/spring-projects/spring-framework/commit/996f701a1916d10202c1d0d281f06ab1f2e1117e) commit .\n\nThe latest releases can be found [here](https://github.com/spring-projects/spring-framework/tags).\n\n## Workaround\nAn official workaround for the issue has been outlined [here](https://spring.io/blog/2022/03/31/spring-framework-rce-early-announcement).\n\n\n\n## References\n* Common Weakness Enumeration: [CWE-184](https://cwe.mitre.org/data/definitions/184.html)\n* Common Weakness Enumeration: [CWE-749](https://cwe.mitre.org/data/definitions/749.html)\n\n","text":"Spring Framework is vulnerable to a flaw in the access restrictions to the security sensitive `ClassLoader` property. The restrictions can be bypassed through alternative paths available with Java9 and later. An attacker can leverage this vulnerability to cause remote code execution (RCE).\n\n**Note** this issue exists because the restrictions that were introduced to prevent exploitation of BDSA-2010-0001 (CVE-2010-1622) can be bypassed on platforms where Java9 and later are in use.\n\nThis vulnerability is listed as exploitable by the Cybersecurity \u0026 Infrastructure Security Agency in their [Known Exploited Vulnerabilities Catalog](https://www.cisa.gov/known-exploited-vulnerabilities-catalog)."},"properties":{"security-severity":"9.1","tags":["security","open_source_analysis","direct_dependency","patch_available","external/cwe/cwe-184","external/cwe/cwe-749"]},"defaultConfiguration":{"level":"error"}},{"id":"CVE-2023-20873 spring-boot-starter-data-jpa 2.2.2.RELEASE: org.springframework.boot","shortDescription":{"text":"Direct Dependency: spring-boot-starter-data-jpa 2.2.2.RELEASE (CVE-2023-20873)"},"fullDescription":{"text":"Spring framework contains a security bypass vulnerability when `/**` is used as a pattern in Spring Security configuration with the `/cloudfoundryapplication/**` component. The potential for security bypass exists due to the mismatch in pattern matching between Spring Security and Cloud Foundry.\n\n**Note**: The vendor has stated in their [advisory](https://spring.io/security/cve-2023-20873) that this application is not vulnerable if any of the following is true:\n* The application is not deployed to Cloud Foundry.\n* You have disabled Cloud Foundry actuator endpoints with `management.cloudfoundry.enabled` set to `false`.\n* Your application does not have handler mappings that can handle requests to `/cloudfoundryapplication/**`."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| spring-boot-starter-data-jpa 2.2.2.RELEASE  | 2.7.18  | 3.2.1 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/48431389-4a2f-44ed-8597-55184ffc0e88?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=ee1b331d-05e0-4bd1-b6ef-727c3b98e324)\n\n\n## Description\nSpring framework contains a security bypass vulnerability when `/**` is used as a pattern in Spring Security configuration with the `/cloudfoundryapplication/**` component. The potential for security bypass exists due to the mismatch in pattern matching between Spring Security and Cloud Foundry.\n\n**Note**: The vendor has stated in their [advisory](https://spring.io/security/cve-2023-20873) that this application is not vulnerable if any of the following is true:\n* The application is not deployed to Cloud Foundry.\n* You have disabled Cloud Foundry actuator endpoints with `management.cloudfoundry.enabled` set to `false`.\n* Your application does not have handler mappings that can handle requests to `/cloudfoundryapplication/**`.\n\n## Vulnerabilities(BDSA,CVE)\n:orange_circle: [CVE-2023-20873](https://openhub.net/vulnerabilities/bdsa/CVE-2023-20873) - Improper Access Control\n\n\n\n## Solution\nFixed in [**3.1.0-RC1**](https://github.com/spring-projects/spring-boot/releases/tag/v3.1.0-RC1), [**3.0.6**](https://github.com/spring-projects/spring-boot/releases/tag/v3.0.6) and [**2.7.11**](https://github.com/spring-projects/spring-boot/releases/tag/v2.7.11)  by [this](https://github.com/spring-projects/spring-boot/commit/3522714c13b47af03bf42e7f2d5994af568cb1a7) commit.\n\nFixed in [**2.6.15**](https://github.com/spring-projects/spring-boot/releases/tag/v2.6.15) and [**2.5.15**](https://github.com/spring-projects/spring-boot/releases/tag/v2.5.15) by [this](https://github.com/spring-projects/spring-boot/commit/307f3c339912466e78fcdac648fff95a4edea573) commit.\n\nThe latest stable releases can be found [here](https://github.com/spring-projects/spring-boot/releases).\n\n## Workaround\nThe vendor has advised the following as a workaround:\n\u003eDisable Cloud Foundry actuator endpoints by setting `management.cloudfoundry.enabled` to `false`.\n\n\n\n## References\n* Common Weakness Enumeration: [CWE-284](https://cwe.mitre.org/data/definitions/284.html)\n* Common Weakness Enumeration: [CWE-923](https://cwe.mitre.org/data/definitions/923.html)\n\n","text":"Spring framework contains a security bypass vulnerability when `/**` is used as a pattern in Spring Security configuration with the `/cloudfoundryapplication/**` component. The potential for security bypass exists due to the mismatch in pattern matching between Spring Security and Cloud Foundry.\n\n**Note**: The vendor has stated in their [advisory](https://spring.io/security/cve-2023-20873) that this application is not vulnerable if any of the following is true:\n* The application is not deployed to Cloud Foundry.\n* You have disabled Cloud Foundry actuator endpoints with `management.cloudfoundry.enabled` set to `false`.\n* Your application does not have handler mappings that can handle requests to `/cloudfoundryapplication/**`."},"properties":{"security-severity":"8.9","tags":["security","open_source_analysis","direct_dependency","patch_available","external/cwe/cwe-284","external/cwe/cwe-923"]},"defaultConfiguration":{"level":"error"}},{"id":"BDSA-2021-3817 spring-boot-starter-data-jpa 2.2.2.RELEASE: org.springframework.boot","shortDescription":{"text":"Direct Dependency: spring-boot-starter-data-jpa 2.2.2.RELEASE (BDSA-2021-3817)"},"fullDescription":{"text":"Apache log4j is vulnerable to a denial-of-service (DoS) when uncontrolled recursion occurs through a self-referencing lookup.  An attacker can trigger a DoS with malicious input data that generates a recursive lookup  and consequent application crash.\n\nSuccessful attacks require the attacker to have access to Thread Context Map (MDC) input, and for log4j configured with non-default pattern layout with a Context Lookup.\n\nOnly the log4j-core JAR file is impacted by this vulnerability. Applications using only the log4j-api JAR file without the log4j-core JAR file are not impacted.\n\nApache Log4j is the only Logging Services subproject affected by this vulnerability. Other projects like Log4net  are not impacted."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| spring-boot-starter-data-jpa 2.2.2.RELEASE  | 2.7.18  | 3.2.1 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/48431389-4a2f-44ed-8597-55184ffc0e88?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=ee1b331d-05e0-4bd1-b6ef-727c3b98e324)\n\n\n## Description\nApache log4j is vulnerable to a denial-of-service (DoS) when uncontrolled recursion occurs through a self-referencing lookup.  An attacker can trigger a DoS with malicious input data that generates a recursive lookup  and consequent application crash.\n\nSuccessful attacks require the attacker to have access to Thread Context Map (MDC) input, and for log4j configured with non-default pattern layout with a Context Lookup.\n\nOnly the log4j-core JAR file is impacted by this vulnerability. Applications using only the log4j-api JAR file without the log4j-core JAR file are not impacted.\n\nApache Log4j is the only Logging Services subproject affected by this vulnerability. Other projects like Log4net  are not impacted.\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [BDSA-2021-3817](https://openhub.net/vulnerabilities/bdsa/BDSA-2021-3817) - Loop with Unreachable Exit Condition ('Infinite Loop')\n\n\n\n## Solution\nFixed in version [**2.17.0**](https://downloads.apache.org/logging/log4j/2.17.0/)  by [this](https://github.com/apache/logging-log4j2/commit/806023265f8c905b2dd1d81fd2458f64b2ea0b5e) commit.\n\nFixed in [**2.12.3-rc1**](https://github.com/apache/logging-log4j2/releases/tag/log4j-2.12.3-rc1) by [this](https://github.com/apache/logging-log4j2/commit/bf7e916df6335713fe2219c7b3b523fb509deabc) commit.\n\nFixed in [**2.3.1-rc1**](https://github.com/apache/logging-log4j2/releases/tag/log4j-2.3.1-rc1) by [this](https://github.com/apache/logging-log4j2/commit/ce6b78d082aae89089cb3ad25cdd46e9ec70a70b) commit.\n\n\nThe latest stable releases can be found [here](https://github.com/apache/logging-log4j2/releases).\n\n## Workaround\nThe vendor advises that  this vulnerability can can be mitigated through one of the following:\n\n* In PatternLayout in the logging configuration, replace Context Lookups like `${ctx:loginId}` or `$${ctx:loginId}` with Thread Context Map patterns `(%X, %mdc, or %MDC)`.\n\n* Alternatively,  remove references in the configuration to Context Lookups like `${ctx:loginId}` or `$${ctx:loginId}` where they originate from sources external to the application such as HTTP headers or user input.\n\n\n\n## References\n* Common Weakness Enumeration: [CWE-835](https://cwe.mitre.org/data/definitions/835.html)\n\n","text":"Apache log4j is vulnerable to a denial-of-service (DoS) when uncontrolled recursion occurs through a self-referencing lookup.  An attacker can trigger a DoS with malicious input data that generates a recursive lookup  and consequent application crash.\n\nSuccessful attacks require the attacker to have access to Thread Context Map (MDC) input, and for log4j configured with non-default pattern layout with a Context Lookup.\n\nOnly the log4j-core JAR file is impacted by this vulnerability. Applications using only the log4j-api JAR file without the log4j-core JAR file are not impacted.\n\nApache Log4j is the only Logging Services subproject affected by this vulnerability. Other projects like Log4net  are not impacted."},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","direct_dependency","patch_available","external/cwe/cwe-835"]},"defaultConfiguration":{"level":"warning"}},{"id":"BDSA-2021-3887 spring-boot-starter-data-jpa 2.2.2.RELEASE: org.springframework.boot","shortDescription":{"text":"Direct Dependency: spring-boot-starter-data-jpa 2.2.2.RELEASE (BDSA-2021-3887)"},"fullDescription":{"text":"Apache Log4j contains a remote code execution (RCE) vulnerability. This allows an attacker that has permissions to modify the logging configuration files to input a malicious JDBC Appender with a data source referencing a JDNI URI. This can then lead to RCE.\n\n**Note:** This vulnerability impacts log4j-core."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| spring-boot-starter-data-jpa 2.2.2.RELEASE  | 2.7.18  | 3.2.1 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/48431389-4a2f-44ed-8597-55184ffc0e88?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=ee1b331d-05e0-4bd1-b6ef-727c3b98e324)\n\n\n## Description\nApache Log4j contains a remote code execution (RCE) vulnerability. This allows an attacker that has permissions to modify the logging configuration files to input a malicious JDBC Appender with a data source referencing a JDNI URI. This can then lead to RCE.\n\n**Note:** This vulnerability impacts log4j-core.\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [BDSA-2021-3887](https://openhub.net/vulnerabilities/bdsa/BDSA-2021-3887) - Weak Input Validation\n\n\n\n## Solution\nFixed in versions:\n\n* [**2.3.2-rc1**](https://github.com/apache/logging-log4j2/releases/tag/log4j-2.3.2-rc1) by [this](https://github.com/apache/logging-log4j2/commit/ae4dc0c1a6389ae895f60451cd87e97e7b9d85c1) commit.\n* [**2.12.4-rc1**](https://github.com/apache/logging-log4j2/releases/tag/log4j-2.12.4-rc1) by [this](https://github.com/apache/logging-log4j2/commit/b3879958cb3b75eb16bf27e970538b6e4e130f1c) commit.\n* [**2.17.1-rc1**](https://github.com/apache/logging-log4j2/releases/tag/log4j-2.17.1-rc1) by [this](https://github.com/apache/logging-log4j2/commit/05db5f9527254632b59aed2a1d78a32c5ab74f16) commit.\n\nThe latest stable releases can be found [here](https://logging.apache.org/log4j/2.x/download.html).\n\n\n\n\n\n## References\n* Common Weakness Enumeration: [CWE-20](https://cwe.mitre.org/data/definitions/20.html)\n\n","text":"Apache Log4j contains a remote code execution (RCE) vulnerability. This allows an attacker that has permissions to modify the logging configuration files to input a malicious JDBC Appender with a data source referencing a JDNI URI. This can then lead to RCE.\n\n**Note:** This vulnerability impacts log4j-core."},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","direct_dependency","patch_available","external/cwe/cwe-20"]},"defaultConfiguration":{"level":"warning"}},{"id":"CVE-2022-27772 spring-boot-starter-data-jpa 2.2.2.RELEASE: org.springframework.boot","shortDescription":{"text":"Direct Dependency: spring-boot-starter-data-jpa 2.2.2.RELEASE (CVE-2022-27772)"},"fullDescription":{"text":"Spring Boot is vulnerable to privilege escalation due to a race condition which occurs during the creation of a temporary directory. A local attacker could create their own temporary directory by racing against Spring Boot and supply their own configuration files which would allow for the full takeover of the application."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| spring-boot-starter-data-jpa 2.2.2.RELEASE  | 2.7.18  | 3.2.1 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/48431389-4a2f-44ed-8597-55184ffc0e88?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=ee1b331d-05e0-4bd1-b6ef-727c3b98e324)\n\n\n## Description\nSpring Boot is vulnerable to privilege escalation due to a race condition which occurs during the creation of a temporary directory. A local attacker could create their own temporary directory by racing against Spring Boot and supply their own configuration files which would allow for the full takeover of the application.\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [CVE-2022-27772](https://openhub.net/vulnerabilities/bdsa/CVE-2022-27772) - Race Condition due to Improper Synchronization\n\n\n\n## Solution\nFixed in [**2.2.11**](https://github.com/spring-projects/spring-boot/releases/tag/v2.2.11.RELEASE) by [this](https://github.com/spring-projects/spring-boot/commit/667ccdae84822072f9ea1a27ed5c77964c71002d) commit.\n\nThe latest stable releases can be found [here](https://github.com/spring-projects/spring-boot/releases).\n\n## Workaround\nAccording to the [Github Security Advisory](https://github.com/JLLeitschuh/security-research/security/advisories/GHSA-cm59-pr5q-cw85), setting the `java.io.tmpdir` system environment variable to a directory that is exclusively owned by the executing user will fix this vulnerability for all operating systems.\n\n\n\n## References\n* Common Weakness Enumeration: [CWE-362](https://cwe.mitre.org/data/definitions/362.html)\n* Common Weakness Enumeration: [CWE-379](https://cwe.mitre.org/data/definitions/379.html)\n\n","text":"Spring Boot is vulnerable to privilege escalation due to a race condition which occurs during the creation of a temporary directory. A local attacker could create their own temporary directory by racing against Spring Boot and supply their own configuration files which would allow for the full takeover of the application."},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","direct_dependency","patch_available","external/cwe/cwe-362","external/cwe/cwe-379"]},"defaultConfiguration":{"level":"warning"}},{"id":"CVE-2023-20883 spring-boot-starter-data-jpa 2.2.2.RELEASE: org.springframework.boot","shortDescription":{"text":"Direct Dependency: spring-boot-starter-data-jpa 2.2.2.RELEASE (CVE-2023-20883)"},"fullDescription":{"text":"Spring Boot is vulnerable to denial-of-service (DoS) via the welcome page when used to serve an application behind a reverse proxy cache. This will cause users to continuously be served a 404 response, preventing standard application use.\n\n\n**Note:** Spring have provided the following guidance for vulnerable criteria. \nAn application is vulnerable if all of the following are true:\n\n- \"The application has Spring MVC auto-configuration enabled. This is the case by default if Spring MVC is on the classpath.\"\n- \"The application makes use of Spring Boot's welcome page support, either static or templated.\"\n- \"Your application is deployed behind a proxy which caches 404 responses.\"\n\nThe application is not vulnerable if any of the following are true:\n\n- \"Spring MVC auto-configuration is disabled. This is true if `WebMvcAutoConfiguration` is explicitly excluded, if Spring MVC is not on the classpath, or if `spring.main.web-application-type` is set to a value other than `SERVLET`.\"\n- \"The application does not use Spring Boot's welcome page support.\"\n- \"You do not have a proxy which caches 404 responses.\""},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| spring-boot-starter-data-jpa 2.2.2.RELEASE  | 2.7.18  | 3.2.1 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/48431389-4a2f-44ed-8597-55184ffc0e88?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=ee1b331d-05e0-4bd1-b6ef-727c3b98e324)\n\n\n## Description\nSpring Boot is vulnerable to denial-of-service (DoS) via the welcome page when used to serve an application behind a reverse proxy cache. This will cause users to continuously be served a 404 response, preventing standard application use.\n\n\n**Note:** Spring have provided the following guidance for vulnerable criteria. \nAn application is vulnerable if all of the following are true:\n\n- \"The application has Spring MVC auto-configuration enabled. This is the case by default if Spring MVC is on the classpath.\"\n- \"The application makes use of Spring Boot's welcome page support, either static or templated.\"\n- \"Your application is deployed behind a proxy which caches 404 responses.\"\n\nThe application is not vulnerable if any of the following are true:\n\n- \"Spring MVC auto-configuration is disabled. This is true if `WebMvcAutoConfiguration` is explicitly excluded, if Spring MVC is not on the classpath, or if `spring.main.web-application-type` is set to a value other than `SERVLET`.\"\n- \"The application does not use Spring Boot's welcome page support.\"\n- \"You do not have a proxy which caches 404 responses.\"\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [CVE-2023-20883](https://openhub.net/vulnerabilities/bdsa/CVE-2023-20883) - Insufficient Verification of Data Authenticity\n\n\n\n## Solution\nFixed in versions\n- [**2.5.15**](https://github.com/spring-projects/spring-boot/releases/tag/v2.5.15) by [this](https://github.com/spring-projects/spring-boot/commit/d7ff379fb8bb2c33319afeb45a343116b59e0ee2) commit,\n- [**2.6.15**](https://github.com/spring-projects/spring-boot/releases/tag/v2.6.15) by [this](https://github.com/spring-projects/spring-boot/commit/d7ff379fb8bb2c33319afeb45a343116b59e0ee2) commit,\n- [**2.7.12**](https://github.com/spring-projects/spring-boot/releases/tag/v2.7.12) by [this](https://github.com/spring-projects/spring-boot/commit/418dd1ba5bdad79b55a043000164bfcbda2acd78) commit,\n- [**3.0.7**](https://github.com/spring-projects/spring-boot/releases/tag/v3.0.7) by [this](https://github.com/spring-projects/spring-boot/commit/418dd1ba5bdad79b55a043000164bfcbda2acd78) commit,\n- [**3.1.0**](https://github.com/spring-projects/spring-boot/releases/tag/v3.1.0) by [this](https://github.com/spring-projects/spring-boot/commit/418dd1ba5bdad79b55a043000164bfcbda2acd78) commit.\n\nThe latest stable releases can be found [here](https://github.com/spring-projects/spring-boot/releases).\n\n## Workaround\nThe vendor has supplied the following workaround:\n\u003e \"configure the reverse proxy not to cache 404 responses and/or not to cache responses to requests to the root (`/`) of the application.\"\n\n\n\n## References\n* Common Weakness Enumeration: [CWE-345](https://cwe.mitre.org/data/definitions/345.html)\n\n","text":"Spring Boot is vulnerable to denial-of-service (DoS) via the welcome page when used to serve an application behind a reverse proxy cache. This will cause users to continuously be served a 404 response, preventing standard application use.\n\n\n**Note:** Spring have provided the following guidance for vulnerable criteria. \nAn application is vulnerable if all of the following are true:\n\n- \"The application has Spring MVC auto-configuration enabled. This is the case by default if Spring MVC is on the classpath.\"\n- \"The application makes use of Spring Boot's welcome page support, either static or templated.\"\n- \"Your application is deployed behind a proxy which caches 404 responses.\"\n\nThe application is not vulnerable if any of the following are true:\n\n- \"Spring MVC auto-configuration is disabled. This is true if `WebMvcAutoConfiguration` is explicitly excluded, if Spring MVC is not on the classpath, or if `spring.main.web-application-type` is set to a value other than `SERVLET`.\"\n- \"The application does not use Spring Boot's welcome page support.\"\n- \"You do not have a proxy which caches 404 responses.\""},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","direct_dependency","patch_available","external/cwe/cwe-345"]},"defaultConfiguration":{"level":"warning"}},{"id":"CVE-2023-34055 spring-boot-starter-data-jpa 2.2.2.RELEASE: org.springframework.boot","shortDescription":{"text":"Direct Dependency: spring-boot-starter-data-jpa 2.2.2.RELEASE (CVE-2023-34055)"},"fullDescription":{"text":"Spring Boot is vulnerable to denial-of-service (DoS). An unauthenticated user could trigger the vulnerability by providing specially crafted HTTP requests to a web metrics endpoint."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| spring-boot-starter-data-jpa 2.2.2.RELEASE  | 2.7.18  | 3.2.1 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/48431389-4a2f-44ed-8597-55184ffc0e88?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=ee1b331d-05e0-4bd1-b6ef-727c3b98e324)\n\n\n## Description\nSpring Boot is vulnerable to denial-of-service (DoS). An unauthenticated user could trigger the vulnerability by providing specially crafted HTTP requests to a web metrics endpoint.\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [CVE-2023-34055](https://openhub.net/vulnerabilities/bdsa/CVE-2023-34055) - Third-party component usage\n\n\n\n## Solution\nFixed in:\n* [**3.1.6**](https://github.com/spring-projects/spring-boot/releases/tag/v3.1.6)\n* [**3.0.13**](https://github.com/spring-projects/spring-boot/releases/tag/v3.0.13)\n* [**2.7.18**](https://github.com/spring-projects/spring-boot/releases/tag/v2.7.18)\n\nThe latest stable releases can be found [here](https://github.com/spring-projects/spring-boot/releases).\n\n## Workaround\nThe vendor notes the following:\n\u003e As a temporary workaround, Spring Boot users can choose to disable web metrics with the following property: `management.metrics.enable.http.server.requests=false`\n\n\n\n\n","text":"Spring Boot is vulnerable to denial-of-service (DoS). An unauthenticated user could trigger the vulnerability by providing specially crafted HTTP requests to a web metrics endpoint."},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","direct_dependency","patch_available"]},"defaultConfiguration":{"level":"warning"}},{"id":"BDSA-2021-3731 spring-boot-starter-test 2.2.2.RELEASE: org.springframework.boot","shortDescription":{"text":"Direct Dependency: spring-boot-starter-test 2.2.2.RELEASE (BDSA-2021-3731)"},"fullDescription":{"text":"Apache Log4j, as used in many popular services, is vulnerable to improperly allowing lightweight directory access protocol (LDAP) access via Java naming and directory interface (JNDI). A remote attacker able to supply the end application with specially crafted input that is then processed by the Log4j subcomponent could cause the execution of arbitrary Java code.\n\n**Note** \n\n- log4j-api packages by themselves do not contain the vulnerable functionality and are therefore unaffected. log4j-core packages and the upstream overarching source repository are affected.\n\n- A previously suggested mitigation of setting environment variable `LOG4J_FORMAT_MSG_NO_LOOKUPS=true` is not recommended. This mitigation has been proven inadequate against this vulnerability. \n\n- This vulnerability is partially fixed in [**2.15.0-rc2**](https://github.com/apache/logging-log4j2/releases/tag/log4j-2.15.0-rc2) by [this](https://github.com/apache/logging-log4j2/commit/001aaada7dab82c3c09cde5f8e14245dc9d8b454) commit and [this](https://github.com/apache/logging-log4j2/commit/bac0d8a35c7e354a0d3f706569116dff6c6bd658) commit. These fixes were deemed incomplete. See BDSA-2021-3779 (CVE-2021-45046) for more details.\n\nThis vulnerability is listed as exploitable by the Cybersecurity \u0026 Infrastructure Security Agency in their [Known Exploited Vulnerabilities Catalog](https://www.cisa.gov/known-exploited-vulnerabilities-catalog)."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| spring-boot-starter-test 2.2.2.RELEASE  | 2.7.18  | 3.2.1 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/48431389-4a2f-44ed-8597-55184ffc0e88?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=ee1b331d-05e0-4bd1-b6ef-727c3b98e324)\n\n\n## Description\nApache Log4j, as used in many popular services, is vulnerable to improperly allowing lightweight directory access protocol (LDAP) access via Java naming and directory interface (JNDI). A remote attacker able to supply the end application with specially crafted input that is then processed by the Log4j subcomponent could cause the execution of arbitrary Java code.\n\n**Note** \n\n- log4j-api packages by themselves do not contain the vulnerable functionality and are therefore unaffected. log4j-core packages and the upstream overarching source repository are affected.\n\n- A previously suggested mitigation of setting environment variable `LOG4J_FORMAT_MSG_NO_LOOKUPS=true` is not recommended. This mitigation has been proven inadequate against this vulnerability. \n\n- This vulnerability is partially fixed in [**2.15.0-rc2**](https://github.com/apache/logging-log4j2/releases/tag/log4j-2.15.0-rc2) by [this](https://github.com/apache/logging-log4j2/commit/001aaada7dab82c3c09cde5f8e14245dc9d8b454) commit and [this](https://github.com/apache/logging-log4j2/commit/bac0d8a35c7e354a0d3f706569116dff6c6bd658) commit. These fixes were deemed incomplete. See BDSA-2021-3779 (CVE-2021-45046) for more details.\n\nThis vulnerability is listed as exploitable by the Cybersecurity \u0026 Infrastructure Security Agency in their [Known Exploited Vulnerabilities Catalog](https://www.cisa.gov/known-exploited-vulnerabilities-catalog).\n\n## Vulnerabilities(BDSA,CVE)\n:red_circle: [BDSA-2021-3731](https://openhub.net/vulnerabilities/bdsa/BDSA-2021-3731) - Insecure Object Deserialization\n\n\n\n## Solution\nFixed in versions:\n*  [**2.16.0-rc1**](https://github.com/apache/logging-log4j2/releases/tag/log4j-2.16.0-rc1) by [this](https://github.com/apache/logging-log4j2/commit/27972043b76c9645476f561c5adc483dec6d3f5d) commit.\n*  [**2.12.2-rc1**](https://github.com/apache/logging-log4j2/releases/tag/log4j-2.12.2-rc1) by [this](https://github.com/apache/logging-log4j2/commit/f819c83804152cb6ed94cb408302e36b21b65053) commit and [this](https://github.com/apache/logging-log4j2/commit/70edc233343815d5efa043b54294a6fb065aa1c5) commit.\n*   [**2.3.1-rc1**](https://github.com/apache/logging-log4j2/releases/tag/log4j-2.3.1-rc1) by [this](https://github.com/apache/logging-log4j2/commit/be848dacbac6df30c4f32b2852e24446033ecf79) commit and [this](https://github.com/apache/logging-log4j2/commit/f6564bb993d547d0a371b75d869042c334bf57f0) commit.\n\nThe latest releases can be found [here](https://github.com/apache/logging-log4j2/tags).\n\nNOTE: It is recommended to upgrade to version  [**2.17.0**](https://downloads.apache.org/logging/log4j/2.17.0/). This recommendation is due to related vulnerabilities (BDSA-2021-3779, CVE-2021-45046) affecting the version that this vulnerability is fixed in.\n\n## Workaround\nThe vendor states that:\n\n\u003e This issue can be mitigated in prior releases (\u003c**2.16.0**) by removing the JndiLookup class from the classpath (example: `zip -q -d log4j-core-*.jar org/apache/logging/log4j/core/lookup/JndiLookup.class`).\n\n\n\n## References\n* Common Weakness Enumeration: [CWE-502](https://cwe.mitre.org/data/definitions/502.html)\n\n","text":"Apache Log4j, as used in many popular services, is vulnerable to improperly allowing lightweight directory access protocol (LDAP) access via Java naming and directory interface (JNDI). A remote attacker able to supply the end application with specially crafted input that is then processed by the Log4j subcomponent could cause the execution of arbitrary Java code.\n\n**Note** \n\n- log4j-api packages by themselves do not contain the vulnerable functionality and are therefore unaffected. log4j-core packages and the upstream overarching source repository are affected.\n\n- A previously suggested mitigation of setting environment variable `LOG4J_FORMAT_MSG_NO_LOOKUPS=true` is not recommended. This mitigation has been proven inadequate against this vulnerability. \n\n- This vulnerability is partially fixed in [**2.15.0-rc2**](https://github.com/apache/logging-log4j2/releases/tag/log4j-2.15.0-rc2) by [this](https://github.com/apache/logging-log4j2/commit/001aaada7dab82c3c09cde5f8e14245dc9d8b454) commit and [this](https://github.com/apache/logging-log4j2/commit/bac0d8a35c7e354a0d3f706569116dff6c6bd658) commit. These fixes were deemed incomplete. See BDSA-2021-3779 (CVE-2021-45046) for more details.\n\nThis vulnerability is listed as exploitable by the Cybersecurity \u0026 Infrastructure Security Agency in their [Known Exploited Vulnerabilities Catalog](https://www.cisa.gov/known-exploited-vulnerabilities-catalog)."},"properties":{"security-severity":"9.1","tags":["security","open_source_analysis","direct_dependency","patch_available","external/cwe/cwe-502"]},"defaultConfiguration":{"level":"error"}},{"id":"CVE-2022-22965 spring-boot-starter-test 2.2.2.RELEASE: org.springframework.boot","shortDescription":{"text":"Direct Dependency: spring-boot-starter-test 2.2.2.RELEASE (CVE-2022-22965)"},"fullDescription":{"text":"Spring Framework is vulnerable to a flaw in the access restrictions to the security sensitive `ClassLoader` property. The restrictions can be bypassed through alternative paths available with Java9 and later. An attacker can leverage this vulnerability to cause remote code execution (RCE).\n\n**Note** this issue exists because the restrictions that were introduced to prevent exploitation of BDSA-2010-0001 (CVE-2010-1622) can be bypassed on platforms where Java9 and later are in use.\n\nThis vulnerability is listed as exploitable by the Cybersecurity \u0026 Infrastructure Security Agency in their [Known Exploited Vulnerabilities Catalog](https://www.cisa.gov/known-exploited-vulnerabilities-catalog)."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| spring-boot-starter-test 2.2.2.RELEASE  | 2.7.18  | 3.2.1 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/48431389-4a2f-44ed-8597-55184ffc0e88?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=ee1b331d-05e0-4bd1-b6ef-727c3b98e324)\n\n\n## Description\nSpring Framework is vulnerable to a flaw in the access restrictions to the security sensitive `ClassLoader` property. The restrictions can be bypassed through alternative paths available with Java9 and later. An attacker can leverage this vulnerability to cause remote code execution (RCE).\n\n**Note** this issue exists because the restrictions that were introduced to prevent exploitation of BDSA-2010-0001 (CVE-2010-1622) can be bypassed on platforms where Java9 and later are in use.\n\nThis vulnerability is listed as exploitable by the Cybersecurity \u0026 Infrastructure Security Agency in their [Known Exploited Vulnerabilities Catalog](https://www.cisa.gov/known-exploited-vulnerabilities-catalog).\n\n## Vulnerabilities(BDSA,CVE)\n:red_circle: [CVE-2022-22965](https://openhub.net/vulnerabilities/bdsa/CVE-2022-22965) - Incomplete List of Disallowed Inputs\n\n\n\n## Solution\nFixed in [**5.3.18**](https://github.com/spring-projects/spring-framework/releases/tag/v5.3.18) by [this](https://github.com/spring-projects/spring-framework/commit/002546b3e4b8d791ea6acccb81eb3168f51abb15) commit and  [**5.2.20**](https://github.com/spring-projects/spring-framework/releases/tag/v5.2.20.RELEASE) by [this](https://github.com/spring-projects/spring-framework/commit/996f701a1916d10202c1d0d281f06ab1f2e1117e) commit .\n\nThe latest releases can be found [here](https://github.com/spring-projects/spring-framework/tags).\n\n## Workaround\nAn official workaround for the issue has been outlined [here](https://spring.io/blog/2022/03/31/spring-framework-rce-early-announcement).\n\n\n\n## References\n* Common Weakness Enumeration: [CWE-184](https://cwe.mitre.org/data/definitions/184.html)\n* Common Weakness Enumeration: [CWE-749](https://cwe.mitre.org/data/definitions/749.html)\n\n","text":"Spring Framework is vulnerable to a flaw in the access restrictions to the security sensitive `ClassLoader` property. The restrictions can be bypassed through alternative paths available with Java9 and later. An attacker can leverage this vulnerability to cause remote code execution (RCE).\n\n**Note** this issue exists because the restrictions that were introduced to prevent exploitation of BDSA-2010-0001 (CVE-2010-1622) can be bypassed on platforms where Java9 and later are in use.\n\nThis vulnerability is listed as exploitable by the Cybersecurity \u0026 Infrastructure Security Agency in their [Known Exploited Vulnerabilities Catalog](https://www.cisa.gov/known-exploited-vulnerabilities-catalog)."},"properties":{"security-severity":"9.1","tags":["security","open_source_analysis","direct_dependency","patch_available","external/cwe/cwe-184","external/cwe/cwe-749"]},"defaultConfiguration":{"level":"error"}},{"id":"CVE-2023-20873 spring-boot-starter-test 2.2.2.RELEASE: org.springframework.boot","shortDescription":{"text":"Direct Dependency: spring-boot-starter-test 2.2.2.RELEASE (CVE-2023-20873)"},"fullDescription":{"text":"Spring framework contains a security bypass vulnerability when `/**` is used as a pattern in Spring Security configuration with the `/cloudfoundryapplication/**` component. The potential for security bypass exists due to the mismatch in pattern matching between Spring Security and Cloud Foundry.\n\n**Note**: The vendor has stated in their [advisory](https://spring.io/security/cve-2023-20873) that this application is not vulnerable if any of the following is true:\n* The application is not deployed to Cloud Foundry.\n* You have disabled Cloud Foundry actuator endpoints with `management.cloudfoundry.enabled` set to `false`.\n* Your application does not have handler mappings that can handle requests to `/cloudfoundryapplication/**`."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| spring-boot-starter-test 2.2.2.RELEASE  | 2.7.18  | 3.2.1 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/48431389-4a2f-44ed-8597-55184ffc0e88?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=ee1b331d-05e0-4bd1-b6ef-727c3b98e324)\n\n\n## Description\nSpring framework contains a security bypass vulnerability when `/**` is used as a pattern in Spring Security configuration with the `/cloudfoundryapplication/**` component. The potential for security bypass exists due to the mismatch in pattern matching between Spring Security and Cloud Foundry.\n\n**Note**: The vendor has stated in their [advisory](https://spring.io/security/cve-2023-20873) that this application is not vulnerable if any of the following is true:\n* The application is not deployed to Cloud Foundry.\n* You have disabled Cloud Foundry actuator endpoints with `management.cloudfoundry.enabled` set to `false`.\n* Your application does not have handler mappings that can handle requests to `/cloudfoundryapplication/**`.\n\n## Vulnerabilities(BDSA,CVE)\n:orange_circle: [CVE-2023-20873](https://openhub.net/vulnerabilities/bdsa/CVE-2023-20873) - Improper Access Control\n\n\n\n## Solution\nFixed in [**3.1.0-RC1**](https://github.com/spring-projects/spring-boot/releases/tag/v3.1.0-RC1), [**3.0.6**](https://github.com/spring-projects/spring-boot/releases/tag/v3.0.6) and [**2.7.11**](https://github.com/spring-projects/spring-boot/releases/tag/v2.7.11)  by [this](https://github.com/spring-projects/spring-boot/commit/3522714c13b47af03bf42e7f2d5994af568cb1a7) commit.\n\nFixed in [**2.6.15**](https://github.com/spring-projects/spring-boot/releases/tag/v2.6.15) and [**2.5.15**](https://github.com/spring-projects/spring-boot/releases/tag/v2.5.15) by [this](https://github.com/spring-projects/spring-boot/commit/307f3c339912466e78fcdac648fff95a4edea573) commit.\n\nThe latest stable releases can be found [here](https://github.com/spring-projects/spring-boot/releases).\n\n## Workaround\nThe vendor has advised the following as a workaround:\n\u003eDisable Cloud Foundry actuator endpoints by setting `management.cloudfoundry.enabled` to `false`.\n\n\n\n## References\n* Common Weakness Enumeration: [CWE-284](https://cwe.mitre.org/data/definitions/284.html)\n* Common Weakness Enumeration: [CWE-923](https://cwe.mitre.org/data/definitions/923.html)\n\n","text":"Spring framework contains a security bypass vulnerability when `/**` is used as a pattern in Spring Security configuration with the `/cloudfoundryapplication/**` component. The potential for security bypass exists due to the mismatch in pattern matching between Spring Security and Cloud Foundry.\n\n**Note**: The vendor has stated in their [advisory](https://spring.io/security/cve-2023-20873) that this application is not vulnerable if any of the following is true:\n* The application is not deployed to Cloud Foundry.\n* You have disabled Cloud Foundry actuator endpoints with `management.cloudfoundry.enabled` set to `false`.\n* Your application does not have handler mappings that can handle requests to `/cloudfoundryapplication/**`."},"properties":{"security-severity":"8.9","tags":["security","open_source_analysis","direct_dependency","patch_available","external/cwe/cwe-284","external/cwe/cwe-923"]},"defaultConfiguration":{"level":"error"}},{"id":"BDSA-2021-3817 spring-boot-starter-test 2.2.2.RELEASE: org.springframework.boot","shortDescription":{"text":"Direct Dependency: spring-boot-starter-test 2.2.2.RELEASE (BDSA-2021-3817)"},"fullDescription":{"text":"Apache log4j is vulnerable to a denial-of-service (DoS) when uncontrolled recursion occurs through a self-referencing lookup.  An attacker can trigger a DoS with malicious input data that generates a recursive lookup  and consequent application crash.\n\nSuccessful attacks require the attacker to have access to Thread Context Map (MDC) input, and for log4j configured with non-default pattern layout with a Context Lookup.\n\nOnly the log4j-core JAR file is impacted by this vulnerability. Applications using only the log4j-api JAR file without the log4j-core JAR file are not impacted.\n\nApache Log4j is the only Logging Services subproject affected by this vulnerability. Other projects like Log4net  are not impacted."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| spring-boot-starter-test 2.2.2.RELEASE  | 2.7.18  | 3.2.1 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/48431389-4a2f-44ed-8597-55184ffc0e88?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=ee1b331d-05e0-4bd1-b6ef-727c3b98e324)\n\n\n## Description\nApache log4j is vulnerable to a denial-of-service (DoS) when uncontrolled recursion occurs through a self-referencing lookup.  An attacker can trigger a DoS with malicious input data that generates a recursive lookup  and consequent application crash.\n\nSuccessful attacks require the attacker to have access to Thread Context Map (MDC) input, and for log4j configured with non-default pattern layout with a Context Lookup.\n\nOnly the log4j-core JAR file is impacted by this vulnerability. Applications using only the log4j-api JAR file without the log4j-core JAR file are not impacted.\n\nApache Log4j is the only Logging Services subproject affected by this vulnerability. Other projects like Log4net  are not impacted.\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [BDSA-2021-3817](https://openhub.net/vulnerabilities/bdsa/BDSA-2021-3817) - Loop with Unreachable Exit Condition ('Infinite Loop')\n\n\n\n## Solution\nFixed in version [**2.17.0**](https://downloads.apache.org/logging/log4j/2.17.0/)  by [this](https://github.com/apache/logging-log4j2/commit/806023265f8c905b2dd1d81fd2458f64b2ea0b5e) commit.\n\nFixed in [**2.12.3-rc1**](https://github.com/apache/logging-log4j2/releases/tag/log4j-2.12.3-rc1) by [this](https://github.com/apache/logging-log4j2/commit/bf7e916df6335713fe2219c7b3b523fb509deabc) commit.\n\nFixed in [**2.3.1-rc1**](https://github.com/apache/logging-log4j2/releases/tag/log4j-2.3.1-rc1) by [this](https://github.com/apache/logging-log4j2/commit/ce6b78d082aae89089cb3ad25cdd46e9ec70a70b) commit.\n\n\nThe latest stable releases can be found [here](https://github.com/apache/logging-log4j2/releases).\n\n## Workaround\nThe vendor advises that  this vulnerability can can be mitigated through one of the following:\n\n* In PatternLayout in the logging configuration, replace Context Lookups like `${ctx:loginId}` or `$${ctx:loginId}` with Thread Context Map patterns `(%X, %mdc, or %MDC)`.\n\n* Alternatively,  remove references in the configuration to Context Lookups like `${ctx:loginId}` or `$${ctx:loginId}` where they originate from sources external to the application such as HTTP headers or user input.\n\n\n\n## References\n* Common Weakness Enumeration: [CWE-835](https://cwe.mitre.org/data/definitions/835.html)\n\n","text":"Apache log4j is vulnerable to a denial-of-service (DoS) when uncontrolled recursion occurs through a self-referencing lookup.  An attacker can trigger a DoS with malicious input data that generates a recursive lookup  and consequent application crash.\n\nSuccessful attacks require the attacker to have access to Thread Context Map (MDC) input, and for log4j configured with non-default pattern layout with a Context Lookup.\n\nOnly the log4j-core JAR file is impacted by this vulnerability. Applications using only the log4j-api JAR file without the log4j-core JAR file are not impacted.\n\nApache Log4j is the only Logging Services subproject affected by this vulnerability. Other projects like Log4net  are not impacted."},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","direct_dependency","patch_available","external/cwe/cwe-835"]},"defaultConfiguration":{"level":"warning"}},{"id":"BDSA-2021-3887 spring-boot-starter-test 2.2.2.RELEASE: org.springframework.boot","shortDescription":{"text":"Direct Dependency: spring-boot-starter-test 2.2.2.RELEASE (BDSA-2021-3887)"},"fullDescription":{"text":"Apache Log4j contains a remote code execution (RCE) vulnerability. This allows an attacker that has permissions to modify the logging configuration files to input a malicious JDBC Appender with a data source referencing a JDNI URI. This can then lead to RCE.\n\n**Note:** This vulnerability impacts log4j-core."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| spring-boot-starter-test 2.2.2.RELEASE  | 2.7.18  | 3.2.1 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/48431389-4a2f-44ed-8597-55184ffc0e88?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=ee1b331d-05e0-4bd1-b6ef-727c3b98e324)\n\n\n## Description\nApache Log4j contains a remote code execution (RCE) vulnerability. This allows an attacker that has permissions to modify the logging configuration files to input a malicious JDBC Appender with a data source referencing a JDNI URI. This can then lead to RCE.\n\n**Note:** This vulnerability impacts log4j-core.\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [BDSA-2021-3887](https://openhub.net/vulnerabilities/bdsa/BDSA-2021-3887) - Weak Input Validation\n\n\n\n## Solution\nFixed in versions:\n\n* [**2.3.2-rc1**](https://github.com/apache/logging-log4j2/releases/tag/log4j-2.3.2-rc1) by [this](https://github.com/apache/logging-log4j2/commit/ae4dc0c1a6389ae895f60451cd87e97e7b9d85c1) commit.\n* [**2.12.4-rc1**](https://github.com/apache/logging-log4j2/releases/tag/log4j-2.12.4-rc1) by [this](https://github.com/apache/logging-log4j2/commit/b3879958cb3b75eb16bf27e970538b6e4e130f1c) commit.\n* [**2.17.1-rc1**](https://github.com/apache/logging-log4j2/releases/tag/log4j-2.17.1-rc1) by [this](https://github.com/apache/logging-log4j2/commit/05db5f9527254632b59aed2a1d78a32c5ab74f16) commit.\n\nThe latest stable releases can be found [here](https://logging.apache.org/log4j/2.x/download.html).\n\n\n\n\n\n## References\n* Common Weakness Enumeration: [CWE-20](https://cwe.mitre.org/data/definitions/20.html)\n\n","text":"Apache Log4j contains a remote code execution (RCE) vulnerability. This allows an attacker that has permissions to modify the logging configuration files to input a malicious JDBC Appender with a data source referencing a JDNI URI. This can then lead to RCE.\n\n**Note:** This vulnerability impacts log4j-core."},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","direct_dependency","patch_available","external/cwe/cwe-20"]},"defaultConfiguration":{"level":"warning"}},{"id":"CVE-2022-27772 spring-boot-starter-test 2.2.2.RELEASE: org.springframework.boot","shortDescription":{"text":"Direct Dependency: spring-boot-starter-test 2.2.2.RELEASE (CVE-2022-27772)"},"fullDescription":{"text":"Spring Boot is vulnerable to privilege escalation due to a race condition which occurs during the creation of a temporary directory. A local attacker could create their own temporary directory by racing against Spring Boot and supply their own configuration files which would allow for the full takeover of the application."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| spring-boot-starter-test 2.2.2.RELEASE  | 2.7.18  | 3.2.1 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/48431389-4a2f-44ed-8597-55184ffc0e88?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=ee1b331d-05e0-4bd1-b6ef-727c3b98e324)\n\n\n## Description\nSpring Boot is vulnerable to privilege escalation due to a race condition which occurs during the creation of a temporary directory. A local attacker could create their own temporary directory by racing against Spring Boot and supply their own configuration files which would allow for the full takeover of the application.\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [CVE-2022-27772](https://openhub.net/vulnerabilities/bdsa/CVE-2022-27772) - Race Condition due to Improper Synchronization\n\n\n\n## Solution\nFixed in [**2.2.11**](https://github.com/spring-projects/spring-boot/releases/tag/v2.2.11.RELEASE) by [this](https://github.com/spring-projects/spring-boot/commit/667ccdae84822072f9ea1a27ed5c77964c71002d) commit.\n\nThe latest stable releases can be found [here](https://github.com/spring-projects/spring-boot/releases).\n\n## Workaround\nAccording to the [Github Security Advisory](https://github.com/JLLeitschuh/security-research/security/advisories/GHSA-cm59-pr5q-cw85), setting the `java.io.tmpdir` system environment variable to a directory that is exclusively owned by the executing user will fix this vulnerability for all operating systems.\n\n\n\n## References\n* Common Weakness Enumeration: [CWE-362](https://cwe.mitre.org/data/definitions/362.html)\n* Common Weakness Enumeration: [CWE-379](https://cwe.mitre.org/data/definitions/379.html)\n\n","text":"Spring Boot is vulnerable to privilege escalation due to a race condition which occurs during the creation of a temporary directory. A local attacker could create their own temporary directory by racing against Spring Boot and supply their own configuration files which would allow for the full takeover of the application."},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","direct_dependency","patch_available","external/cwe/cwe-362","external/cwe/cwe-379"]},"defaultConfiguration":{"level":"warning"}},{"id":"CVE-2023-20883 spring-boot-starter-test 2.2.2.RELEASE: org.springframework.boot","shortDescription":{"text":"Direct Dependency: spring-boot-starter-test 2.2.2.RELEASE (CVE-2023-20883)"},"fullDescription":{"text":"Spring Boot is vulnerable to denial-of-service (DoS) via the welcome page when used to serve an application behind a reverse proxy cache. This will cause users to continuously be served a 404 response, preventing standard application use.\n\n\n**Note:** Spring have provided the following guidance for vulnerable criteria. \nAn application is vulnerable if all of the following are true:\n\n- \"The application has Spring MVC auto-configuration enabled. This is the case by default if Spring MVC is on the classpath.\"\n- \"The application makes use of Spring Boot's welcome page support, either static or templated.\"\n- \"Your application is deployed behind a proxy which caches 404 responses.\"\n\nThe application is not vulnerable if any of the following are true:\n\n- \"Spring MVC auto-configuration is disabled. This is true if `WebMvcAutoConfiguration` is explicitly excluded, if Spring MVC is not on the classpath, or if `spring.main.web-application-type` is set to a value other than `SERVLET`.\"\n- \"The application does not use Spring Boot's welcome page support.\"\n- \"You do not have a proxy which caches 404 responses.\""},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| spring-boot-starter-test 2.2.2.RELEASE  | 2.7.18  | 3.2.1 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/48431389-4a2f-44ed-8597-55184ffc0e88?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=ee1b331d-05e0-4bd1-b6ef-727c3b98e324)\n\n\n## Description\nSpring Boot is vulnerable to denial-of-service (DoS) via the welcome page when used to serve an application behind a reverse proxy cache. This will cause users to continuously be served a 404 response, preventing standard application use.\n\n\n**Note:** Spring have provided the following guidance for vulnerable criteria. \nAn application is vulnerable if all of the following are true:\n\n- \"The application has Spring MVC auto-configuration enabled. This is the case by default if Spring MVC is on the classpath.\"\n- \"The application makes use of Spring Boot's welcome page support, either static or templated.\"\n- \"Your application is deployed behind a proxy which caches 404 responses.\"\n\nThe application is not vulnerable if any of the following are true:\n\n- \"Spring MVC auto-configuration is disabled. This is true if `WebMvcAutoConfiguration` is explicitly excluded, if Spring MVC is not on the classpath, or if `spring.main.web-application-type` is set to a value other than `SERVLET`.\"\n- \"The application does not use Spring Boot's welcome page support.\"\n- \"You do not have a proxy which caches 404 responses.\"\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [CVE-2023-20883](https://openhub.net/vulnerabilities/bdsa/CVE-2023-20883) - Insufficient Verification of Data Authenticity\n\n\n\n## Solution\nFixed in versions\n- [**2.5.15**](https://github.com/spring-projects/spring-boot/releases/tag/v2.5.15) by [this](https://github.com/spring-projects/spring-boot/commit/d7ff379fb8bb2c33319afeb45a343116b59e0ee2) commit,\n- [**2.6.15**](https://github.com/spring-projects/spring-boot/releases/tag/v2.6.15) by [this](https://github.com/spring-projects/spring-boot/commit/d7ff379fb8bb2c33319afeb45a343116b59e0ee2) commit,\n- [**2.7.12**](https://github.com/spring-projects/spring-boot/releases/tag/v2.7.12) by [this](https://github.com/spring-projects/spring-boot/commit/418dd1ba5bdad79b55a043000164bfcbda2acd78) commit,\n- [**3.0.7**](https://github.com/spring-projects/spring-boot/releases/tag/v3.0.7) by [this](https://github.com/spring-projects/spring-boot/commit/418dd1ba5bdad79b55a043000164bfcbda2acd78) commit,\n- [**3.1.0**](https://github.com/spring-projects/spring-boot/releases/tag/v3.1.0) by [this](https://github.com/spring-projects/spring-boot/commit/418dd1ba5bdad79b55a043000164bfcbda2acd78) commit.\n\nThe latest stable releases can be found [here](https://github.com/spring-projects/spring-boot/releases).\n\n## Workaround\nThe vendor has supplied the following workaround:\n\u003e \"configure the reverse proxy not to cache 404 responses and/or not to cache responses to requests to the root (`/`) of the application.\"\n\n\n\n## References\n* Common Weakness Enumeration: [CWE-345](https://cwe.mitre.org/data/definitions/345.html)\n\n","text":"Spring Boot is vulnerable to denial-of-service (DoS) via the welcome page when used to serve an application behind a reverse proxy cache. This will cause users to continuously be served a 404 response, preventing standard application use.\n\n\n**Note:** Spring have provided the following guidance for vulnerable criteria. \nAn application is vulnerable if all of the following are true:\n\n- \"The application has Spring MVC auto-configuration enabled. This is the case by default if Spring MVC is on the classpath.\"\n- \"The application makes use of Spring Boot's welcome page support, either static or templated.\"\n- \"Your application is deployed behind a proxy which caches 404 responses.\"\n\nThe application is not vulnerable if any of the following are true:\n\n- \"Spring MVC auto-configuration is disabled. This is true if `WebMvcAutoConfiguration` is explicitly excluded, if Spring MVC is not on the classpath, or if `spring.main.web-application-type` is set to a value other than `SERVLET`.\"\n- \"The application does not use Spring Boot's welcome page support.\"\n- \"You do not have a proxy which caches 404 responses.\""},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","direct_dependency","patch_available","external/cwe/cwe-345"]},"defaultConfiguration":{"level":"warning"}},{"id":"CVE-2023-34055 spring-boot-starter-test 2.2.2.RELEASE: org.springframework.boot","shortDescription":{"text":"Direct Dependency: spring-boot-starter-test 2.2.2.RELEASE (CVE-2023-34055)"},"fullDescription":{"text":"Spring Boot is vulnerable to denial-of-service (DoS). An unauthenticated user could trigger the vulnerability by providing specially crafted HTTP requests to a web metrics endpoint."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| spring-boot-starter-test 2.2.2.RELEASE  | 2.7.18  | 3.2.1 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/48431389-4a2f-44ed-8597-55184ffc0e88?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=ee1b331d-05e0-4bd1-b6ef-727c3b98e324)\n\n\n## Description\nSpring Boot is vulnerable to denial-of-service (DoS). An unauthenticated user could trigger the vulnerability by providing specially crafted HTTP requests to a web metrics endpoint.\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [CVE-2023-34055](https://openhub.net/vulnerabilities/bdsa/CVE-2023-34055) - Third-party component usage\n\n\n\n## Solution\nFixed in:\n* [**3.1.6**](https://github.com/spring-projects/spring-boot/releases/tag/v3.1.6)\n* [**3.0.13**](https://github.com/spring-projects/spring-boot/releases/tag/v3.0.13)\n* [**2.7.18**](https://github.com/spring-projects/spring-boot/releases/tag/v2.7.18)\n\nThe latest stable releases can be found [here](https://github.com/spring-projects/spring-boot/releases).\n\n## Workaround\nThe vendor notes the following:\n\u003e As a temporary workaround, Spring Boot users can choose to disable web metrics with the following property: `management.metrics.enable.http.server.requests=false`\n\n\n\n\n","text":"Spring Boot is vulnerable to denial-of-service (DoS). An unauthenticated user could trigger the vulnerability by providing specially crafted HTTP requests to a web metrics endpoint."},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","direct_dependency","patch_available"]},"defaultConfiguration":{"level":"warning"}},{"id":"CVE-2020-10693 hibernate-validator 6.0.18.Final: spring-boot-starter-web 2.2.2.RELEASE: org.hibernate.validator","shortDescription":{"text":"Transitive Dependency: hibernate-validator 6.0.18.Final from spring-boot-starter-web 2.2.2.RELEASE (CVE-2020-10693)"},"fullDescription":{"text":"Hibernate Validator is vulnerable to incorrectly validating certain expression language (EL) expressions. A remote attacker could leverage this to bypass input sanitization"},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| hibernate-validator 6.0.18.Final  | 6.2.5.Final-redhat-00001  | 8.0.1.Final-redhat-00001 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/9961ef19-cd39-4c11-8283-d68a10d34e23?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=ef516556-fd17-4551-b1ec-330abe1166a6)\n\n\n## Description\nHibernate Validator is vulnerable to incorrectly validating certain expression language (EL) expressions. A remote attacker could leverage this to bypass input sanitization\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [CVE-2020-10693](https://openhub.net/vulnerabilities/bdsa/CVE-2020-10693) - Weak Input Validation\n\n\n\n## Solution\nFixed in **[6.0.20.Final](https://github.com/hibernate/hibernate-validator/releases/tag/6.0.20.Final)** by these commits:\n* [Commit 1](https://github.com/hibernate/hibernate-validator/commit/4b9f2a1a3e1c67fbd29a7fc710c611d7aca6eab9)\n* [Commit 2](https://github.com/hibernate/hibernate-validator/commit/16b77f08c2e9983f33538688107d6570986e31c1)\n* [Commit 3](https://github.com/hibernate/hibernate-validator/commit/29bd0f42bf63e28d9a71adef02af67b319144576)\n* [Commit 4](https://github.com/hibernate/hibernate-validator/commit/df2fe2c1e42bad5b12ab967d5d0db3cf49ac7af9)\n\nFixed in **[6.1.5.Final ](https://github.com/hibernate/hibernate-validator/releases/tag/6.1.5.Final)** by these commits:\n* [Commit 1](https://github.com/hibernate/hibernate-validator/commit/5415140b2aea35fa4eb5e0a07323a9f23c04aeda)\n* [Commit 2](https://github.com/hibernate/hibernate-validator/commit/d3b39a74bdc18ea6b112b1e9e6a8f77550066381)\n* [Commit 3](https://github.com/hibernate/hibernate-validator/commit/6ae28a1bc8f7ccb208fa004bdb7c6da569be8a59)\n* [Commit 4](https://github.com/hibernate/hibernate-validator/commit/438a0fc9bd7e30b4de2b5ba5a96e7f070e3d88e9)\n\n\n\n## Dependency tree\n- org.owasp.webgoat:webgoat-container:v8.1.0:-maven\n    - org.springframework.boot:spring-boot-starter-web:2.2.2.RELEASE\n        - org.springframework.boot:spring-boot-starter-validation:2.2.2.RELEASE\n            - org.hibernate.validator:hibernate-validator:6.0.18.Final\n\n\n## References\n* Common Weakness Enumeration: [CWE-20](https://cwe.mitre.org/data/definitions/20.html)\n\n","text":"Hibernate Validator is vulnerable to incorrectly validating certain expression language (EL) expressions. A remote attacker could leverage this to bypass input sanitization"},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-20"]},"defaultConfiguration":{"level":"warning"}},{"id":"BDSA-2022-3109 spring-security-config 5.2.1.RELEASE: spring-boot-starter-security 2.2.2.RELEASE: org.springframework.security","shortDescription":{"text":"Transitive Dependency: spring-security-config 5.2.1.RELEASE from spring-boot-starter-security 2.2.2.RELEASE (BDSA-2022-3109)"},"fullDescription":{"text":"Spring Security contains a flaw when dealing with OAuth2 access token empty scope list  responses. A remote attacker could leverage this to escalate their privileges under **all** the following conditions being met:\n\n* They act as the role of a Login Client (e.g. uses `http.oauth2Login()`).\n* They use one or more authorization rules with authorities mapped from authorized scopes (e.g. `anyRequest().hasAuthority(\"SCOPE_message.write\")`) in the client application.\n* An authorization server that responds with empty scopes list is registered (RFC 6749, Section 5.1).\n\n**Note:** The role of Resource Servers (`http.oauth2ResourceServer()`) and applications that do not map authorization rules from authorized scopes (eg. `anyRequest().hasAuthority(\"ROLE_USER\")`) cannot be exploited by this vulnerability."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| spring-security-config 5.2.1.RELEASE  | 5.8.9  | 6.2.1 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/bfe44ed0-0640-4faa-92fc-2c894ff23018?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=d80c013b-7862-4ea8-83e5-eb7b91623e0c)\n\n\n## Description\nSpring Security contains a flaw when dealing with OAuth2 access token empty scope list  responses. A remote attacker could leverage this to escalate their privileges under **all** the following conditions being met:\n\n* They act as the role of a Login Client (e.g. uses `http.oauth2Login()`).\n* They use one or more authorization rules with authorities mapped from authorized scopes (e.g. `anyRequest().hasAuthority(\"SCOPE_message.write\")`) in the client application.\n* An authorization server that responds with empty scopes list is registered (RFC 6749, Section 5.1).\n\n**Note:** The role of Resource Servers (`http.oauth2ResourceServer()`) and applications that do not map authorization rules from authorized scopes (eg. `anyRequest().hasAuthority(\"ROLE_USER\")`) cannot be exploited by this vulnerability.\n\n## Vulnerabilities(BDSA,CVE)\n:orange_circle: [BDSA-2022-3109](https://openhub.net/vulnerabilities/bdsa/BDSA-2022-3109) - Missing or Broken Authorization Mechanism\n\n\n\n## Solution\nFixed in versions [**5.7.5**](https://github.com/spring-projects/spring-security/releases/tag/5.7.5) and [**5.6.9**](https://github.com/spring-projects/spring-security/releases/tag/5.6.9) by [this](https://github.com/spring-projects/spring-security/commit/75004587a419a96d18909030b20c6b16b226ecbe) commit..\n\nThe latest releases can be found [here](https://github.com/spring-projects/spring-security/tags).\n\n\n\n## Dependency tree\n- org.owasp.webgoat:webgoat-container:v8.1.0:-maven\n    - org.springframework.boot:spring-boot-starter-security:2.2.2.RELEASE\n        - org.springframework.security:spring-security-config:5.2.1.RELEASE\n\n\n## References\n* Common Weakness Enumeration: [CWE-285](https://cwe.mitre.org/data/definitions/285.html)\n\n","text":"Spring Security contains a flaw when dealing with OAuth2 access token empty scope list  responses. A remote attacker could leverage this to escalate their privileges under **all** the following conditions being met:\n\n* They act as the role of a Login Client (e.g. uses `http.oauth2Login()`).\n* They use one or more authorization rules with authorities mapped from authorized scopes (e.g. `anyRequest().hasAuthority(\"SCOPE_message.write\")`) in the client application.\n* An authorization server that responds with empty scopes list is registered (RFC 6749, Section 5.1).\n\n**Note:** The role of Resource Servers (`http.oauth2ResourceServer()`) and applications that do not map authorization rules from authorized scopes (eg. `anyRequest().hasAuthority(\"ROLE_USER\")`) cannot be exploited by this vulnerability."},"properties":{"security-severity":"8.9","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-285"]},"defaultConfiguration":{"level":"error"}},{"id":"BDSA-2023-1825 spring-security-config 5.2.1.RELEASE: spring-boot-starter-security 2.2.2.RELEASE: org.springframework.security","shortDescription":{"text":"Transitive Dependency: spring-security-config 5.2.1.RELEASE from spring-boot-starter-security 2.2.2.RELEASE (BDSA-2023-1825)"},"fullDescription":{"text":"Spring Security used with Spring WebFlux performs incorrect parsing when using `**` as a pattern in Spring Security configuration due to inconsistent pattern matching between the two components. This could lead to bypassing of security mechanisms configured by Spring Security."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| spring-security-config 5.2.1.RELEASE  | 5.8.9  | 6.2.1 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/bfe44ed0-0640-4faa-92fc-2c894ff23018?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=d80c013b-7862-4ea8-83e5-eb7b91623e0c)\n\n\n## Description\nSpring Security used with Spring WebFlux performs incorrect parsing when using `**` as a pattern in Spring Security configuration due to inconsistent pattern matching between the two components. This could lead to bypassing of security mechanisms configured by Spring Security.\n\n## Vulnerabilities(BDSA,CVE)\n:orange_circle: [BDSA-2023-1825](https://openhub.net/vulnerabilities/bdsa/BDSA-2023-1825) - Missing or Broken Authorization Mechanism\n\n\n\n## Solution\nFixed in versions:\n- [**5.6.12**](https://github.com/spring-projects/spring-security/releases/tag/5.6.12) by [this](https://github.com/spring-projects/spring-security/commit/7813a9ba26e53fe54e4d2ec6eb076126e8550780) commit,\n- [**5.7.10**](https://github.com/spring-projects/spring-security/releases/tag/5.7.10) by [this](https://github.com/spring-projects/spring-security/commit/fe9bc26bdcfea2a40c93e3db98e649bfb0edaab2) commit,\n- [**5.8.5**](https://github.com/spring-projects/spring-security/releases/tag/5.8.5) by [this](https://github.com/spring-projects/spring-security/commit/a939f17890a9415604ecf81bc236d3e969e2d9b4) commit,\n- [**6.0.5**](https://github.com/spring-projects/spring-security/releases/tag/6.0.5) by [this](https://github.com/spring-projects/spring-security/commit/cbef118026e38005109158dd35e79038af2bb913) commit,\n- [**6.1.2**](https://github.com/spring-projects/spring-security/releases/tag/6.1.2) by [this](https://github.com/spring-projects/spring-security/commit/aaa31312bd74c637ce9549ed68cab33214008bf5) commit.\n\nThe above fixed versions require Spring Framework versions:\n- [**5.2.25**](https://github.com/spring-projects/spring-framework/releases/tag/5.2.25),\n- [**5.3.29**](https://github.com/spring-projects/spring-framework/releases/tag/5.3.29),\n- [**6.0.11**](https://github.com/spring-projects/spring-framework/releases/tag/6.0.11).\n\nThe latest stable releases can be found [here](https://github.com/spring-projects/spring-security/releases).\n\n\n\n## Dependency tree\n- org.owasp.webgoat:webgoat-container:v8.1.0:-maven\n    - org.springframework.boot:spring-boot-starter-security:2.2.2.RELEASE\n        - org.springframework.security:spring-security-config:5.2.1.RELEASE\n\n\n## References\n* Common Weakness Enumeration: [CWE-285](https://cwe.mitre.org/data/definitions/285.html)\n* Common Weakness Enumeration: [CWE-287](https://cwe.mitre.org/data/definitions/287.html)\n\n","text":"Spring Security used with Spring WebFlux performs incorrect parsing when using `**` as a pattern in Spring Security configuration due to inconsistent pattern matching between the two components. This could lead to bypassing of security mechanisms configured by Spring Security."},"properties":{"security-severity":"8.9","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-285","external/cwe/cwe-287"]},"defaultConfiguration":{"level":"error"}},{"id":"CVE-2022-22978 spring-security-config 5.2.1.RELEASE: spring-boot-starter-security 2.2.2.RELEASE: org.springframework.security","shortDescription":{"text":"Transitive Dependency: spring-security-config 5.2.1.RELEASE from spring-boot-starter-security 2.2.2.RELEASE (CVE-2022-22978)"},"fullDescription":{"text":"Spring Security is vulnerable to the bypassing of an authorization mechanism due to improperly implemented regular expression matching. A remote attacker could perform unauthorized actions on a vulnerable server by sending maliciously crafted requests to that server."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| spring-security-config 5.2.1.RELEASE  | 5.8.9  | 6.2.1 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/bfe44ed0-0640-4faa-92fc-2c894ff23018?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=d80c013b-7862-4ea8-83e5-eb7b91623e0c)\n\n\n## Description\nSpring Security is vulnerable to the bypassing of an authorization mechanism due to improperly implemented regular expression matching. A remote attacker could perform unauthorized actions on a vulnerable server by sending maliciously crafted requests to that server.\n\n## Vulnerabilities(BDSA,CVE)\n:orange_circle: [CVE-2022-22978](https://openhub.net/vulnerabilities/bdsa/CVE-2022-22978) - Incorrect Regular Expression\n\n\n\n## Solution\nFixed in versions:\n* [**5.7.0**](https://github.com/spring-projects/spring-security/releases/tag/5.7.0)\n* [**5.6.4**](https://github.com/spring-projects/spring-security/releases/tag/5.6.4)\n* [**5.5.7**](https://github.com/spring-projects/spring-security/releases/tag/5.5.7)\n\nThe latest stable releases can be found [here](https://github.com/spring-projects/spring-security/releases).\n\n\n\n## Dependency tree\n- org.owasp.webgoat:webgoat-container:v8.1.0:-maven\n    - org.springframework.boot:spring-boot-starter-security:2.2.2.RELEASE\n        - org.springframework.security:spring-security-config:5.2.1.RELEASE\n\n\n## References\n* Common Weakness Enumeration: [CWE-185](https://cwe.mitre.org/data/definitions/185.html)\n\n","text":"Spring Security is vulnerable to the bypassing of an authorization mechanism due to improperly implemented regular expression matching. A remote attacker could perform unauthorized actions on a vulnerable server by sending maliciously crafted requests to that server."},"properties":{"security-severity":"8.9","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-185"]},"defaultConfiguration":{"level":"error"}},{"id":"CVE-2021-22112 spring-security-config 5.2.1.RELEASE: spring-boot-starter-security 2.2.2.RELEASE: org.springframework.security","shortDescription":{"text":"Transitive Dependency: spring-security-config 5.2.1.RELEASE from spring-boot-starter-security 2.2.2.RELEASE (CVE-2021-22112)"},"fullDescription":{"text":"Spring Security is vulnerable to privilege escalation due to a failure to correctly save security context information. An attacker who is allowed to use elevated privileges in a small portion of a program could extend those privileges to the entire program by sending maliciously crafted requests to the application.\n\nIt should be noted that the vulnerability is not present by default, and must be programmed in by an application developer."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| spring-security-config 5.2.1.RELEASE  | 5.8.9  | 6.2.1 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/bfe44ed0-0640-4faa-92fc-2c894ff23018?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=d80c013b-7862-4ea8-83e5-eb7b91623e0c)\n\n\n## Description\nSpring Security is vulnerable to privilege escalation due to a failure to correctly save security context information. An attacker who is allowed to use elevated privileges in a small portion of a program could extend those privileges to the entire program by sending maliciously crafted requests to the application.\n\nIt should be noted that the vulnerability is not present by default, and must be programmed in by an application developer.\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [CVE-2021-22112](https://openhub.net/vulnerabilities/bdsa/CVE-2021-22112) - Third-party component usage\n\n\n\n## Solution\nFixed in:\n* [**5.4.4**](https://github.com/spring-projects/spring-security/releases/tag/5.4.4) by [this](https://github.com/spring-projects/spring-security/commit/c72a6fac04853912a4b7caad5f0500f2aace5a79) commit.\n* [**5.3.8**](https://github.com/spring-projects/spring-security/releases/tag/5.3.8.RELEASE) by [this](https://github.com/spring-projects/spring-security/commit/38e9e8ca52ddc4bdd272083563a657d5e37ea1e8) commit.\n* [**5.2.9**](https://github.com/spring-projects/spring-security/releases/tag/5.2.9.RELEASE) by [this](https://github.com/spring-projects/spring-security/commit/7cab7b06c51ea885dd0d07ff26b135dd3afce1d1) commit.\n\nThe latest stable releases are available [here](https://github.com/spring-projects/spring-security/releases).\n\n\n\n## Dependency tree\n- org.owasp.webgoat:webgoat-container:v8.1.0:-maven\n    - org.springframework.boot:spring-boot-starter-security:2.2.2.RELEASE\n        - org.springframework.security:spring-security-config:5.2.1.RELEASE\n\n\n## References\n* Common Weakness Enumeration: [CWE-265](https://cwe.mitre.org/data/definitions/265.html)\n\n","text":"Spring Security is vulnerable to privilege escalation due to a failure to correctly save security context information. An attacker who is allowed to use elevated privileges in a small portion of a program could extend those privileges to the entire program by sending maliciously crafted requests to the application.\n\nIt should be noted that the vulnerability is not present by default, and must be programmed in by an application developer."},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-265"]},"defaultConfiguration":{"level":"warning"}},{"id":"CVE-2021-22119 spring-security-config 5.2.1.RELEASE: spring-boot-starter-security 2.2.2.RELEASE: org.springframework.security","shortDescription":{"text":"Transitive Dependency: spring-security-config 5.2.1.RELEASE from spring-boot-starter-security 2.2.2.RELEASE (CVE-2021-22119)"},"fullDescription":{"text":"Spring Security contains an uncontrolled resource consumption vulnerability. Attackers could exploit this to create an `OutOfMemory` error and exhaust  system resources, triggering a denial-of-service (DoS) condition."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| spring-security-config 5.2.1.RELEASE  | 5.8.9  | 6.2.1 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/bfe44ed0-0640-4faa-92fc-2c894ff23018?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=d80c013b-7862-4ea8-83e5-eb7b91623e0c)\n\n\n## Description\nSpring Security contains an uncontrolled resource consumption vulnerability. Attackers could exploit this to create an `OutOfMemory` error and exhaust  system resources, triggering a denial-of-service (DoS) condition.\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [CVE-2021-22119](https://openhub.net/vulnerabilities/bdsa/CVE-2021-22119) - Uncontrolled Resource Consumption\n\n\n\n## Solution\nFixed in:\n* **[5.5.1](https://github.com/spring-projects/spring-security/releases/tag/5.5.1)**\n* **[5.4.7](https://github.com/spring-projects/spring-security/releases/tag/5.4.7)**\n* **[5.3.10](https://github.com/spring-projects/spring-security/releases/tag/5.3.10.RELEASE)**\n* **[5.2.11](https://github.com/spring-projects/spring-security/releases/tag/5.2.11.RELEASE)**\n\nThe latest stable releases are also available [here](https://github.com/spring-projects/spring-security/releases).\n\n\n\n## Dependency tree\n- org.owasp.webgoat:webgoat-container:v8.1.0:-maven\n    - org.springframework.boot:spring-boot-starter-security:2.2.2.RELEASE\n        - org.springframework.security:spring-security-config:5.2.1.RELEASE\n\n\n## References\n* Common Weakness Enumeration: [CWE-400](https://cwe.mitre.org/data/definitions/400.html)\n\n","text":"Spring Security contains an uncontrolled resource consumption vulnerability. Attackers could exploit this to create an `OutOfMemory` error and exhaust  system resources, triggering a denial-of-service (DoS) condition."},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-400"]},"defaultConfiguration":{"level":"warning"}},{"id":"CVE-2022-22976 spring-security-config 5.2.1.RELEASE: spring-boot-starter-security 2.2.2.RELEASE: org.springframework.security","shortDescription":{"text":"Transitive Dependency: spring-security-config 5.2.1.RELEASE from spring-boot-starter-security 2.2.2.RELEASE (CVE-2022-22976)"},"fullDescription":{"text":"Spring Security is vulnerable to the weakening of bcrypt-generated password hashes due to an integer overflow. An attacker that is able to obtain weak password hashes that have been produced by a vulnerable application could potentially retrieve the plaintext password. It should be noted that the `BCryptPasswordEncoder` class must have been configured to use the maximum work factor (31) in order for the vulnerability to manifest. This is a non-default value."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| spring-security-config 5.2.1.RELEASE  | 5.8.9  | 6.2.1 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/bfe44ed0-0640-4faa-92fc-2c894ff23018?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=d80c013b-7862-4ea8-83e5-eb7b91623e0c)\n\n\n## Description\nSpring Security is vulnerable to the weakening of bcrypt-generated password hashes due to an integer overflow. An attacker that is able to obtain weak password hashes that have been produced by a vulnerable application could potentially retrieve the plaintext password. It should be noted that the `BCryptPasswordEncoder` class must have been configured to use the maximum work factor (31) in order for the vulnerability to manifest. This is a non-default value.\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [CVE-2022-22976](https://openhub.net/vulnerabilities/bdsa/CVE-2022-22976) - Integer Overflow / Underflow\n\n\n\n## Solution\nFixed in versions:\n* [**5.7.0**](https://github.com/spring-projects/spring-security/releases/tag/5.7.0)\n* [**5.6.4**](https://github.com/spring-projects/spring-security/releases/tag/5.6.4)\n* [**5.5.7**](https://github.com/spring-projects/spring-security/releases/tag/5.5.7)\n\nThe latest stable releases can be found [here](https://github.com/spring-projects/spring-security/releases).\n\n## Workaround\nThe vendor has stated [here](https://tanzu.vmware.com/security/cve-2022-22976) that the following workaround can be implemented:\n\n\u003e Update your BCryptPasswordEncoder to use a lower number of rounds.\n\n## Dependency tree\n- org.owasp.webgoat:webgoat-container:v8.1.0:-maven\n    - org.springframework.boot:spring-boot-starter-security:2.2.2.RELEASE\n        - org.springframework.security:spring-security-config:5.2.1.RELEASE\n\n\n## References\n* Common Weakness Enumeration: [CWE-190](https://cwe.mitre.org/data/definitions/190.html)\n\n","text":"Spring Security is vulnerable to the weakening of bcrypt-generated password hashes due to an integer overflow. An attacker that is able to obtain weak password hashes that have been produced by a vulnerable application could potentially retrieve the plaintext password. It should be noted that the `BCryptPasswordEncoder` class must have been configured to use the maximum work factor (31) in order for the vulnerability to manifest. This is a non-default value."},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-190"]},"defaultConfiguration":{"level":"warning"}},{"id":"CVE-2020-5407 spring-security-config 5.2.1.RELEASE: spring-boot-starter-security 2.2.2.RELEASE: org.springframework.security","shortDescription":{"text":"Transitive Dependency: spring-security-config 5.2.1.RELEASE from spring-boot-starter-security 2.2.2.RELEASE (CVE-2020-5407)"},"fullDescription":{"text":"Spring Security is vulnerable to authentication abuse due to the improper handling of SAML response validation. This could allow an attacker to inject arbitrary assertions into SAML responses."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| spring-security-config 5.2.1.RELEASE  | 5.8.9  | 6.2.1 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/bfe44ed0-0640-4faa-92fc-2c894ff23018?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=d80c013b-7862-4ea8-83e5-eb7b91623e0c)\n\n\n## Description\nSpring Security is vulnerable to authentication abuse due to the improper handling of SAML response validation. This could allow an attacker to inject arbitrary assertions into SAML responses.\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [CVE-2020-5407](https://openhub.net/vulnerabilities/bdsa/CVE-2020-5407) - Improper Authentication\n\n\n\n## Solution\nFixed in **[5.3.2](https://github.com/spring-projects/spring-security/releases/tag/5.3.2.RELEASE)** by [this](https://github.com/spring-projects/spring-security/commit/0db9cd075d621118cdff303f402d25425ec81bbc) commit and **[5.2.4](https://github.com/spring-projects/spring-security/releases/tag/5.2.4.RELEASE)** by [this](https://github.com/spring-projects/spring-security/commit/69b1bc62ffe7c1e1bbf508951efa1e0235954198) commit.\n\n\n\n## Dependency tree\n- org.owasp.webgoat:webgoat-container:v8.1.0:-maven\n    - org.springframework.boot:spring-boot-starter-security:2.2.2.RELEASE\n        - org.springframework.security:spring-security-config:5.2.1.RELEASE\n\n\n## References\n* Common Weakness Enumeration: [CWE-287](https://cwe.mitre.org/data/definitions/287.html)\n\n","text":"Spring Security is vulnerable to authentication abuse due to the improper handling of SAML response validation. This could allow an attacker to inject arbitrary assertions into SAML responses."},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-287"]},"defaultConfiguration":{"level":"warning"}},{"id":"CVE-2020-5408 spring-security-config 5.2.1.RELEASE: spring-boot-starter-security 2.2.2.RELEASE: org.springframework.security","shortDescription":{"text":"Transitive Dependency: spring-security-config 5.2.1.RELEASE from spring-boot-starter-security 2.2.2.RELEASE (CVE-2020-5408)"},"fullDescription":{"text":"Spring Security is vulnerable to information exposure due to an insecure cryptographic mechanism in the queryable text encryptor. This could be leveraged by an attacker to derive sensitive information from encrypted text using dictionary attacks."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| spring-security-config 5.2.1.RELEASE  | 5.8.9  | 6.2.1 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/bfe44ed0-0640-4faa-92fc-2c894ff23018?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=d80c013b-7862-4ea8-83e5-eb7b91623e0c)\n\n\n## Description\nSpring Security is vulnerable to information exposure due to an insecure cryptographic mechanism in the queryable text encryptor. This could be leveraged by an attacker to derive sensitive information from encrypted text using dictionary attacks.\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [CVE-2020-5408](https://openhub.net/vulnerabilities/bdsa/CVE-2020-5408) - Generation of Predictable IV with CBC Mode\n\n\n\n## Solution\nFixed by [this](https://github.com/spring-projects/spring-security/commit/db155b30941536e6c33408a20f62e790b2c78a97) commit in:\n* **[5.3.2](https://github.com/spring-projects/spring-security/releases/tag/5.3.2.RELEASE)**\n* **[5.2.4](https://github.com/spring-projects/spring-security/releases/tag/5.2.4.RELEASE)**\n* **[5.1.10](https://github.com/spring-projects/spring-security/releases/tag/5.1.10.RELEASE)**\n* **[5.0.16](https://github.com/spring-projects/spring-security/releases/tag/5.0.16.RELEASE)**\n* **[4.2.16](https://github.com/spring-projects/spring-security/releases/tag/4.2.16.RELEASE)**\n\n## Workaround\nIf upgrading to a fixed version cannot be performed immediately, users should discontinue use of the function `Encryptors#queryableText(CharSequence, CharSequence)` and look to their data store for a secure mechanism to query encrypted data.\n\n## Dependency tree\n- org.owasp.webgoat:webgoat-container:v8.1.0:-maven\n    - org.springframework.boot:spring-boot-starter-security:2.2.2.RELEASE\n        - org.springframework.security:spring-security-config:5.2.1.RELEASE\n\n\n## References\n* Common Weakness Enumeration: [CWE-329](https://cwe.mitre.org/data/definitions/329.html)\n\n","text":"Spring Security is vulnerable to information exposure due to an insecure cryptographic mechanism in the queryable text encryptor. This could be leveraged by an attacker to derive sensitive information from encrypted text using dictionary attacks."},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-329"]},"defaultConfiguration":{"level":"warning"}},{"id":"CVE-2021-37714 jsoup 1.11.3: org.jsoup","shortDescription":{"text":"Direct Dependency: jsoup 1.11.3 (CVE-2021-37714)"},"fullDescription":{"text":"jsoup is vulnerable to denial-of-service (DoS) due to flaws in its parsing component. A remote attacker could impact the performance of the application, or cause it to crash, by sending maliciously crafted HTML or XML documents to a vulnerable endpoint."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| jsoup 1.11.3  | 1.17.2  | 1.17.2 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/b8336dca-4bd0-4bb4-a082-dc2f1752c6e6?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=8dff5ca6-c887-4865-b1f0-8f0115ba8d05)\n\n\n## Description\njsoup is vulnerable to denial-of-service (DoS) due to flaws in its parsing component. A remote attacker could impact the performance of the application, or cause it to crash, by sending maliciously crafted HTML or XML documents to a vulnerable endpoint.\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [CVE-2021-37714](https://openhub.net/vulnerabilities/bdsa/CVE-2021-37714) - Improper Handling of Values\n\n\n\n## Solution\nFixed in version [**1.14.2**](https://github.com/jhy/jsoup/releases/tag/jsoup-1.14.2).\n\nThe latest stable releases can be found [here](https://github.com/jhy/jsoup/releases).\n\n## Workaround\nThe vendor has provided the following workaround:\n\n\u003e Users may rate limit input parsing. Users should limit the size of inputs based on system resources. Users should implement thread watchdogs to cap and timeout parse runtimes.\n\n\n\n## References\n* Common Weakness Enumeration: [CWE-229](https://cwe.mitre.org/data/definitions/229.html)\n* Common Weakness Enumeration: [CWE-248](https://cwe.mitre.org/data/definitions/248.html)\n\n","text":"jsoup is vulnerable to denial-of-service (DoS) due to flaws in its parsing component. A remote attacker could impact the performance of the application, or cause it to crash, by sending maliciously crafted HTML or XML documents to a vulnerable endpoint."},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","direct_dependency","patch_available","external/cwe/cwe-229","external/cwe/cwe-248"]},"defaultConfiguration":{"level":"warning"}},{"id":"CVE-2022-36033 jsoup 1.11.3: org.jsoup","shortDescription":{"text":"Direct Dependency: jsoup 1.11.3 (CVE-2022-36033)"},"fullDescription":{"text":"Jsoup has a cross-site scripting (XSS) vulnerability due to an absence of correct parameter input validation. A remote attacker could insert JavaScript code into dynamically generated content in order to steal a victim's session tokens, cookies, or other sensitive information.\n\n**Note** This vulnerability applies to installations where the non-default `SafeList.preserveRelativeLinks` option is enabled and the HTML site does not have a Content Security Policy is in place."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| jsoup 1.11.3  | 1.17.2  | 1.17.2 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/b8336dca-4bd0-4bb4-a082-dc2f1752c6e6?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=8dff5ca6-c887-4865-b1f0-8f0115ba8d05)\n\n\n## Description\nJsoup has a cross-site scripting (XSS) vulnerability due to an absence of correct parameter input validation. A remote attacker could insert JavaScript code into dynamically generated content in order to steal a victim's session tokens, cookies, or other sensitive information.\n\n**Note** This vulnerability applies to installations where the non-default `SafeList.preserveRelativeLinks` option is enabled and the HTML site does not have a Content Security Policy is in place.\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [CVE-2022-36033](https://openhub.net/vulnerabilities/bdsa/CVE-2022-36033) - Cross-site Scripting\n\n\n\n## Solution\nFixed in version [**1.15.3**](https://github.com/jhy/jsoup/releases/tag/jsoup-1.15.3) by [this](https://github.com/jhy/jsoup/commit/4ea768d96b3d232e63edef9594766d44597b3882) commit.\n\nThe latest stable releases can be found [here](https://github.com/jhy/jsoup/releases).\n\n## Workaround\nThe vendor recommends users to:\n* Disable `SafeList.preserveRelativeLinks` option, which will rewrite input URLs as absolute URLs.\n* Ensure an appropriate Content Security Policy is defined.\n\n\n\n## References\n* Common Weakness Enumeration: [CWE-79](https://cwe.mitre.org/data/definitions/79.html)\n\n","text":"Jsoup has a cross-site scripting (XSS) vulnerability due to an absence of correct parameter input validation. A remote attacker could insert JavaScript code into dynamically generated content in order to steal a victim's session tokens, cookies, or other sensitive information.\n\n**Note** This vulnerability applies to installations where the non-default `SafeList.preserveRelativeLinks` option is enabled and the HTML site does not have a Content Security Policy is in place."},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","direct_dependency","patch_available","external/cwe/cwe-79"]},"defaultConfiguration":{"level":"warning"}},{"id":"CVE-2016-1000027 spring-aop 5.2.2.RELEASE: spring-boot-starter-security 2.2.2.RELEASE: org.springframework","shortDescription":{"text":"Transitive Dependency: spring-aop 5.2.2.RELEASE from spring-boot-starter-security 2.2.2.RELEASE (CVE-2016-1000027)"},"fullDescription":{"text":"Pivotal Spring Framework through 5.3.16 suffers from a potential remote code execution (RCE) issue if used for Java deserialization of untrusted data. Depending on how the library is implemented within a product, this issue may or not occur, and authentication may be required. NOTE: the vendor's position is that untrusted data is not an intended use case. The product's behavior will not be changed because some users rely on deserialization of trusted data."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| spring-aop 5.2.2.RELEASE  | 5.3.31  | 6.1.2 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/ba6e9d03-9fbd-4086-9631-99d1ad5e520c?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=09f17d81-b282-43ec-9f2b-36c8021d3ca7)\n\n\n## Description\nPivotal Spring Framework through 5.3.16 suffers from a potential remote code execution (RCE) issue if used for Java deserialization of untrusted data. Depending on how the library is implemented within a product, this issue may or not occur, and authentication may be required. NOTE: the vendor's position is that untrusted data is not an intended use case. The product's behavior will not be changed because some users rely on deserialization of trusted data.\n\n## Vulnerabilities(BDSA,CVE)\n:red_circle: [CVE-2016-1000027](https://openhub.net/vulnerabilities/bdsa/CVE-2016-1000027) - Insecure Object Deserialization\n\n\n\n\n\n\n\n## Dependency tree\n- org.owasp.webgoat:webgoat-container:v8.1.0:-maven\n    - org.springframework.boot:spring-boot-starter-security:2.2.2.RELEASE\n        - org.springframework:spring-aop:5.2.2.RELEASE\n\n\n## References\n* Common Weakness Enumeration: [CWE-502](https://cwe.mitre.org/data/definitions/502.html)\n\n","text":"Pivotal Spring Framework through 5.3.16 suffers from a potential remote code execution (RCE) issue if used for Java deserialization of untrusted data. Depending on how the library is implemented within a product, this issue may or not occur, and authentication may be required. NOTE: the vendor's position is that untrusted data is not an intended use case. The product's behavior will not be changed because some users rely on deserialization of trusted data."},"properties":{"security-severity":"9.1","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-502"]},"defaultConfiguration":{"level":"error"}},{"id":"CVE-2022-22965 spring-aop 5.2.2.RELEASE: spring-boot-starter-security 2.2.2.RELEASE: org.springframework","shortDescription":{"text":"Transitive Dependency: spring-aop 5.2.2.RELEASE from spring-boot-starter-security 2.2.2.RELEASE (CVE-2022-22965)"},"fullDescription":{"text":"Spring Framework is vulnerable to a flaw in the access restrictions to the security sensitive `ClassLoader` property. The restrictions can be bypassed through alternative paths available with Java9 and later. An attacker can leverage this vulnerability to cause remote code execution (RCE).\n\n**Note** this issue exists because the restrictions that were introduced to prevent exploitation of BDSA-2010-0001 (CVE-2010-1622) can be bypassed on platforms where Java9 and later are in use.\n\nThis vulnerability is listed as exploitable by the Cybersecurity \u0026 Infrastructure Security Agency in their [Known Exploited Vulnerabilities Catalog](https://www.cisa.gov/known-exploited-vulnerabilities-catalog)."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| spring-aop 5.2.2.RELEASE  | 5.3.31  | 6.1.2 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/ba6e9d03-9fbd-4086-9631-99d1ad5e520c?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=09f17d81-b282-43ec-9f2b-36c8021d3ca7)\n\n\n## Description\nSpring Framework is vulnerable to a flaw in the access restrictions to the security sensitive `ClassLoader` property. The restrictions can be bypassed through alternative paths available with Java9 and later. An attacker can leverage this vulnerability to cause remote code execution (RCE).\n\n**Note** this issue exists because the restrictions that were introduced to prevent exploitation of BDSA-2010-0001 (CVE-2010-1622) can be bypassed on platforms where Java9 and later are in use.\n\nThis vulnerability is listed as exploitable by the Cybersecurity \u0026 Infrastructure Security Agency in their [Known Exploited Vulnerabilities Catalog](https://www.cisa.gov/known-exploited-vulnerabilities-catalog).\n\n## Vulnerabilities(BDSA,CVE)\n:red_circle: [CVE-2022-22965](https://openhub.net/vulnerabilities/bdsa/CVE-2022-22965) - Incomplete List of Disallowed Inputs\n\n\n\n## Solution\nFixed in [**5.3.18**](https://github.com/spring-projects/spring-framework/releases/tag/v5.3.18) by [this](https://github.com/spring-projects/spring-framework/commit/002546b3e4b8d791ea6acccb81eb3168f51abb15) commit and  [**5.2.20**](https://github.com/spring-projects/spring-framework/releases/tag/v5.2.20.RELEASE) by [this](https://github.com/spring-projects/spring-framework/commit/996f701a1916d10202c1d0d281f06ab1f2e1117e) commit .\n\nThe latest releases can be found [here](https://github.com/spring-projects/spring-framework/tags).\n\n## Workaround\nAn official workaround for the issue has been outlined [here](https://spring.io/blog/2022/03/31/spring-framework-rce-early-announcement).\n\n## Dependency tree\n- org.owasp.webgoat:webgoat-container:v8.1.0:-maven\n    - org.springframework.boot:spring-boot-starter-security:2.2.2.RELEASE\n        - org.springframework:spring-aop:5.2.2.RELEASE\n\n\n## References\n* Common Weakness Enumeration: [CWE-184](https://cwe.mitre.org/data/definitions/184.html)\n* Common Weakness Enumeration: [CWE-749](https://cwe.mitre.org/data/definitions/749.html)\n\n","text":"Spring Framework is vulnerable to a flaw in the access restrictions to the security sensitive `ClassLoader` property. The restrictions can be bypassed through alternative paths available with Java9 and later. An attacker can leverage this vulnerability to cause remote code execution (RCE).\n\n**Note** this issue exists because the restrictions that were introduced to prevent exploitation of BDSA-2010-0001 (CVE-2010-1622) can be bypassed on platforms where Java9 and later are in use.\n\nThis vulnerability is listed as exploitable by the Cybersecurity \u0026 Infrastructure Security Agency in their [Known Exploited Vulnerabilities Catalog](https://www.cisa.gov/known-exploited-vulnerabilities-catalog)."},"properties":{"security-severity":"9.1","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-184","external/cwe/cwe-749"]},"defaultConfiguration":{"level":"error"}},{"id":"CVE-2020-5397 spring-aop 5.2.2.RELEASE: spring-boot-starter-security 2.2.2.RELEASE: org.springframework","shortDescription":{"text":"Transitive Dependency: spring-aop 5.2.2.RELEASE from spring-boot-starter-security 2.2.2.RELEASE (CVE-2020-5397)"},"fullDescription":{"text":"Spring Framework is vulnerable to cross-site request forgery (CSRF) attacks via CORS preflight requests which target Spring MVC or Spring WebFlux endpoints."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| spring-aop 5.2.2.RELEASE  | 5.3.31  | 6.1.2 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/ba6e9d03-9fbd-4086-9631-99d1ad5e520c?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=09f17d81-b282-43ec-9f2b-36c8021d3ca7)\n\n\n## Description\nSpring Framework is vulnerable to cross-site request forgery (CSRF) attacks via CORS preflight requests which target Spring MVC or Spring WebFlux endpoints.\n\n## Vulnerabilities(BDSA,CVE)\n:orange_circle: [CVE-2020-5397](https://openhub.net/vulnerabilities/bdsa/CVE-2020-5397) - Cross-Site Request Forgery (CSRF)\n\n\n\n## Solution\nFixed in [**5.2.3**](https://github.com/spring-projects/spring-framework/releases/tag/v5.2.3.RELEASE).\n\n\n\n## Dependency tree\n- org.owasp.webgoat:webgoat-container:v8.1.0:-maven\n    - org.springframework.boot:spring-boot-starter-security:2.2.2.RELEASE\n        - org.springframework:spring-aop:5.2.2.RELEASE\n\n\n## References\n* Common Weakness Enumeration: [CWE-352](https://cwe.mitre.org/data/definitions/352.html)\n\n","text":"Spring Framework is vulnerable to cross-site request forgery (CSRF) attacks via CORS preflight requests which target Spring MVC or Spring WebFlux endpoints."},"properties":{"security-severity":"8.9","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-352"]},"defaultConfiguration":{"level":"error"}},{"id":"BDSA-2022-0847 spring-aop 5.2.2.RELEASE: spring-boot-starter-security 2.2.2.RELEASE: org.springframework","shortDescription":{"text":"Transitive Dependency: spring-aop 5.2.2.RELEASE from spring-boot-starter-security 2.2.2.RELEASE (BDSA-2022-0847)"},"fullDescription":{"text":"Software systems using Spring Framework may be vulnerable to unsafe deserialization if they employ unsafe use of certain provided deserialization functionality. A remote attacker could potentially execute arbitrary code on a vulnerable endpoint by passing a maliciously crafted serialized object to that endpoint.\n\n**Note**: This issue only affects software that has been written to leverage specific deserialization functionality provided by the Spring Framework without sanitization."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| spring-aop 5.2.2.RELEASE  | 5.3.31  | 6.1.2 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/ba6e9d03-9fbd-4086-9631-99d1ad5e520c?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=09f17d81-b282-43ec-9f2b-36c8021d3ca7)\n\n\n## Description\nSoftware systems using Spring Framework may be vulnerable to unsafe deserialization if they employ unsafe use of certain provided deserialization functionality. A remote attacker could potentially execute arbitrary code on a vulnerable endpoint by passing a maliciously crafted serialized object to that endpoint.\n\n**Note**: This issue only affects software that has been written to leverage specific deserialization functionality provided by the Spring Framework without sanitization.\n\n## Vulnerabilities(BDSA,CVE)\n:orange_circle: [BDSA-2022-0847](https://openhub.net/vulnerabilities/bdsa/BDSA-2022-0847) - Insecure Object Deserialization\n\n\n\n## Solution\nFixed in **[6.0.0-M4](https://github.com/spring-projects/spring-framework/releases/tag/v6.0.0-M4)** by [this](https://github.com/spring-projects/spring-framework/commit/7f7fb58dd0dae86d22268a4b59ac7c72a6c22529) commit.\n\nFixed in **[5.3.18](https://github.com/spring-projects/spring-framework/releases/tag/v5.3.18)** and **[5.2.20](https://github.com/spring-projects/spring-framework/releases/tag/v5.2.20.RELEASE)** by [this](https://github.com/spring-projects/spring-framework/commit/3811cd4c0a0be3aac6e842cf1890610ce986449d) commit.\n\n**Note**: These patches simply annotate the dangerous method as deprecated or documents the dangers. It is the responsibility of developers who call this method to ensure that it is not used with unsanitized untrusted input.\n\n\n\n## Dependency tree\n- org.owasp.webgoat:webgoat-container:v8.1.0:-maven\n    - org.springframework.boot:spring-boot-starter-security:2.2.2.RELEASE\n        - org.springframework:spring-aop:5.2.2.RELEASE\n\n\n## References\n* Common Weakness Enumeration: [CWE-502](https://cwe.mitre.org/data/definitions/502.html)\n\n","text":"Software systems using Spring Framework may be vulnerable to unsafe deserialization if they employ unsafe use of certain provided deserialization functionality. A remote attacker could potentially execute arbitrary code on a vulnerable endpoint by passing a maliciously crafted serialized object to that endpoint.\n\n**Note**: This issue only affects software that has been written to leverage specific deserialization functionality provided by the Spring Framework without sanitization."},"properties":{"security-severity":"8.9","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-502"]},"defaultConfiguration":{"level":"error"}},{"id":"CVE-2020-5398 spring-aop 5.2.2.RELEASE: spring-boot-starter-security 2.2.2.RELEASE: org.springframework","shortDescription":{"text":"Transitive Dependency: spring-aop 5.2.2.RELEASE from spring-boot-starter-security 2.2.2.RELEASE (CVE-2020-5398)"},"fullDescription":{"text":"Spring Framework is vulnerable to a reflected file download (RFD) attack via improper input validation on filenames in a `Content-Disposition` header."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| spring-aop 5.2.2.RELEASE  | 5.3.31  | 6.1.2 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/ba6e9d03-9fbd-4086-9631-99d1ad5e520c?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=09f17d81-b282-43ec-9f2b-36c8021d3ca7)\n\n\n## Description\nSpring Framework is vulnerable to a reflected file download (RFD) attack via improper input validation on filenames in a `Content-Disposition` header.\n\n## Vulnerabilities(BDSA,CVE)\n:orange_circle: [CVE-2020-5398](https://openhub.net/vulnerabilities/bdsa/CVE-2020-5398) - Weak Input Validation\n\n\n\n## Solution\nFixed by [this](https://github.com/spring-projects/spring-framework/commit/956ffe68587c8d5f21135b5ce4650af0c2dea933) commit in:\n* [**5.2.3**](https://github.com/spring-projects/spring-framework/releases/tag/v5.2.3.RELEASE)\n* [**5.1.13**](https://github.com/spring-projects/spring-framework/releases/tag/v5.1.13.RELEASE) \n* [**5.0.16**](https://github.com/spring-projects/spring-framework/releases/tag/v5.0.16.RELEASE)\n\n\n\n## Dependency tree\n- org.owasp.webgoat:webgoat-container:v8.1.0:-maven\n    - org.springframework.boot:spring-boot-starter-security:2.2.2.RELEASE\n        - org.springframework:spring-aop:5.2.2.RELEASE\n\n\n## References\n* Common Weakness Enumeration: [CWE-20](https://cwe.mitre.org/data/definitions/20.html)\n\n","text":"Spring Framework is vulnerable to a reflected file download (RFD) attack via improper input validation on filenames in a `Content-Disposition` header."},"properties":{"security-severity":"8.9","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-20"]},"defaultConfiguration":{"level":"error"}},{"id":"CVE-2021-22096 spring-aop 5.2.2.RELEASE: spring-boot-starter-security 2.2.2.RELEASE: org.springframework","shortDescription":{"text":"Transitive Dependency: spring-aop 5.2.2.RELEASE from spring-boot-starter-security 2.2.2.RELEASE (CVE-2021-22096)"},"fullDescription":{"text":"Spring Framework is vulnerable to log file injection due to the insufficient validation of user input in an undisclosed component. An attacker could leverage this issue in order to add arbitrary entries to a log file which could impact both the integrity issues and performance issues.\n\n**Note**: a follow-up to this issue was disclosed as **CVE-2021-22060** (**BDSA-2021-3236**), with further fixed releases that protect against additional types of input and in more places of the Spring Framework codebase."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| spring-aop 5.2.2.RELEASE  | 5.3.31  | 6.1.2 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/ba6e9d03-9fbd-4086-9631-99d1ad5e520c?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=09f17d81-b282-43ec-9f2b-36c8021d3ca7)\n\n\n## Description\nSpring Framework is vulnerable to log file injection due to the insufficient validation of user input in an undisclosed component. An attacker could leverage this issue in order to add arbitrary entries to a log file which could impact both the integrity issues and performance issues.\n\n**Note**: a follow-up to this issue was disclosed as **CVE-2021-22060** (**BDSA-2021-3236**), with further fixed releases that protect against additional types of input and in more places of the Spring Framework codebase.\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [CVE-2021-22096](https://openhub.net/vulnerabilities/bdsa/CVE-2021-22096) - Injection in Downstream Component\n\n\n\n## Solution\nFixed in versions [**5.3.14**](https://github.com/spring-projects/spring-framework/releases/tag/v5.3.14) and [**5.2.19**](https://github.com/spring-projects/spring-framework/releases/tag/v5.2.19.RELEASE).\n\nThe latest stable releases can be found [here](https://github.com/spring-projects/spring-framework/releases).\n\n\n\n## Dependency tree\n- org.owasp.webgoat:webgoat-container:v8.1.0:-maven\n    - org.springframework.boot:spring-boot-starter-security:2.2.2.RELEASE\n        - org.springframework:spring-aop:5.2.2.RELEASE\n\n\n## References\n* Common Weakness Enumeration: [CWE-74](https://cwe.mitre.org/data/definitions/74.html)\n\n","text":"Spring Framework is vulnerable to log file injection due to the insufficient validation of user input in an undisclosed component. An attacker could leverage this issue in order to add arbitrary entries to a log file which could impact both the integrity issues and performance issues.\n\n**Note**: a follow-up to this issue was disclosed as **CVE-2021-22060** (**BDSA-2021-3236**), with further fixed releases that protect against additional types of input and in more places of the Spring Framework codebase."},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-74"]},"defaultConfiguration":{"level":"warning"}},{"id":"CVE-2021-22060 spring-aop 5.2.2.RELEASE: spring-boot-starter-security 2.2.2.RELEASE: org.springframework","shortDescription":{"text":"Transitive Dependency: spring-aop 5.2.2.RELEASE from spring-boot-starter-security 2.2.2.RELEASE (CVE-2021-22060)"},"fullDescription":{"text":"Spring Framework is vulnerable to log file injection due to the insufficient validation of user input in an undisclosed component. An attacker could leverage this issue in order to add arbitrary entries to a log file which could impact both the integrity issues and performance issues.\n\n**Note**: the vendor states this issue exists as a follow up to CVE-2021-22096 (BDSA-2022-0011) that protects against additional types of input and in more places of the Spring Framework codebase."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| spring-aop 5.2.2.RELEASE  | 5.3.31  | 6.1.2 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/ba6e9d03-9fbd-4086-9631-99d1ad5e520c?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=09f17d81-b282-43ec-9f2b-36c8021d3ca7)\n\n\n## Description\nSpring Framework is vulnerable to log file injection due to the insufficient validation of user input in an undisclosed component. An attacker could leverage this issue in order to add arbitrary entries to a log file which could impact both the integrity issues and performance issues.\n\n**Note**: the vendor states this issue exists as a follow up to CVE-2021-22096 (BDSA-2022-0011) that protects against additional types of input and in more places of the Spring Framework codebase.\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [CVE-2021-22060](https://openhub.net/vulnerabilities/bdsa/CVE-2021-22060) - Injection in Downstream Component\n\n\n\n## Solution\nFixed in versions [**5.3.14**](https://github.com/spring-projects/spring-framework/releases/tag/v5.3.14) and [**5.2.19**](https://github.com/spring-projects/spring-framework/releases/tag/v5.2.19.RELEASE).\n\nThe latest stable releases can be found [here](https://github.com/spring-projects/spring-framework/releases).\n\n\n\n## Dependency tree\n- org.owasp.webgoat:webgoat-container:v8.1.0:-maven\n    - org.springframework.boot:spring-boot-starter-security:2.2.2.RELEASE\n        - org.springframework:spring-aop:5.2.2.RELEASE\n\n\n## References\n* Common Weakness Enumeration: [CWE-74](https://cwe.mitre.org/data/definitions/74.html)\n\n","text":"Spring Framework is vulnerable to log file injection due to the insufficient validation of user input in an undisclosed component. An attacker could leverage this issue in order to add arbitrary entries to a log file which could impact both the integrity issues and performance issues.\n\n**Note**: the vendor states this issue exists as a follow up to CVE-2021-22096 (BDSA-2022-0011) that protects against additional types of input and in more places of the Spring Framework codebase."},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-74"]},"defaultConfiguration":{"level":"warning"}},{"id":"CVE-2022-22950 spring-aop 5.2.2.RELEASE: spring-boot-starter-security 2.2.2.RELEASE: org.springframework","shortDescription":{"text":"Transitive Dependency: spring-aop 5.2.2.RELEASE from spring-boot-starter-security 2.2.2.RELEASE (CVE-2022-22950)"},"fullDescription":{"text":"Spring-Framework's spring-expression is vulnerable to a denial-of-service (DoS) condition. This allows an attacker to use crafted input to cause the spring-expression process to crash due to an exception."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| spring-aop 5.2.2.RELEASE  | 5.3.31  | 6.1.2 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/ba6e9d03-9fbd-4086-9631-99d1ad5e520c?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=09f17d81-b282-43ec-9f2b-36c8021d3ca7)\n\n\n## Description\nSpring-Framework's spring-expression is vulnerable to a denial-of-service (DoS) condition. This allows an attacker to use crafted input to cause the spring-expression process to crash due to an exception.\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [CVE-2022-22950](https://openhub.net/vulnerabilities/bdsa/CVE-2022-22950) - Allocation of Resources Without Limits or Throttling\n\n\n\n## Solution\nFixed in version [**5.3.17**](https://github.com/spring-projects/spring-framework/releases/tag/v5.3.17) by [this](https://github.com/spring-projects/spring-framework/commit/94af2ca06bf711de03286999b1c64a703d6de552) commit.\n\nThe latest stable releases can be found [here](https://github.com/spring-projects/spring-framework/tags).\n\n\n\n## Dependency tree\n- org.owasp.webgoat:webgoat-container:v8.1.0:-maven\n    - org.springframework.boot:spring-boot-starter-security:2.2.2.RELEASE\n        - org.springframework:spring-aop:5.2.2.RELEASE\n\n\n## References\n* Common Weakness Enumeration: [CWE-770](https://cwe.mitre.org/data/definitions/770.html)\n\n","text":"Spring-Framework's spring-expression is vulnerable to a denial-of-service (DoS) condition. This allows an attacker to use crafted input to cause the spring-expression process to crash due to an exception."},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-770"]},"defaultConfiguration":{"level":"warning"}},{"id":"CVE-2021-22118 spring-aop 5.2.2.RELEASE: spring-boot-starter-security 2.2.2.RELEASE: org.springframework","shortDescription":{"text":"Transitive Dependency: spring-aop 5.2.2.RELEASE from spring-boot-starter-security 2.2.2.RELEASE (CVE-2021-22118)"},"fullDescription":{"text":"Spring Framework is vulnerable to privilege escalation due to the creation of unsafe temporary directories by the WebFlux component. A local authenticated attacker could modify arbitrary files via maliciously crafted `multipart` requests. \n\nThis vulnerability does not affect Spring MVC applications, or applications that do not handle `multipart` file requests."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| spring-aop 5.2.2.RELEASE  | 5.3.31  | 6.1.2 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/ba6e9d03-9fbd-4086-9631-99d1ad5e520c?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=09f17d81-b282-43ec-9f2b-36c8021d3ca7)\n\n\n## Description\nSpring Framework is vulnerable to privilege escalation due to the creation of unsafe temporary directories by the WebFlux component. A local authenticated attacker could modify arbitrary files via maliciously crafted `multipart` requests. \n\nThis vulnerability does not affect Spring MVC applications, or applications that do not handle `multipart` file requests.\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [CVE-2021-22118](https://openhub.net/vulnerabilities/bdsa/CVE-2021-22118) - Third-party component usage\n\n\n\n## Solution\nFixed in [**5.3.7**](https://github.com/spring-projects/spring-framework/releases/tag/v5.3.7)  by [this](https://github.com/spring-projects/spring-framework/commit/cce60c479c22101f24b2b4abebb6d79440b120d1) commit and [this](https://github.com/spring-projects/spring-framework/commit/0d0d75e25322d8161002d861fff3ec04ba8be5ac) commit, and in [**5.2.15**](https://github.com/spring-projects/spring-framework/releases/tag/v5.2.15.RELEASE) by [this](https://github.com/spring-projects/spring-framework/commit/85ad63bd35f6f10fa5549ba9a11869144338bd8a) commit.\n\nThe latest stable releases are available [here](https://github.com/spring-projects/spring-framework/releases/).\n\n\n\n## Dependency tree\n- org.owasp.webgoat:webgoat-container:v8.1.0:-maven\n    - org.springframework.boot:spring-boot-starter-security:2.2.2.RELEASE\n        - org.springframework:spring-aop:5.2.2.RELEASE\n\n\n## References\n* Common Weakness Enumeration: [CWE-264](https://cwe.mitre.org/data/definitions/264.html)\n* Common Weakness Enumeration: [CWE-376](https://cwe.mitre.org/data/definitions/376.html)\n\n","text":"Spring Framework is vulnerable to privilege escalation due to the creation of unsafe temporary directories by the WebFlux component. A local authenticated attacker could modify arbitrary files via maliciously crafted `multipart` requests. \n\nThis vulnerability does not affect Spring MVC applications, or applications that do not handle `multipart` file requests."},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-264","external/cwe/cwe-376"]},"defaultConfiguration":{"level":"warning"}},{"id":"CVE-2022-22970 spring-aop 5.2.2.RELEASE: spring-boot-starter-security 2.2.2.RELEASE: org.springframework","shortDescription":{"text":"Transitive Dependency: spring-aop 5.2.2.RELEASE from spring-boot-starter-security 2.2.2.RELEASE (CVE-2022-22970)"},"fullDescription":{"text":"Spring Framework is vulnerable to denial-of-service (DoS) due to the improper implementation of data binding functionality. A remote attacker could cause a vulnerable server to crash if that server provides file upload functionality."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| spring-aop 5.2.2.RELEASE  | 5.3.31  | 6.1.2 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/ba6e9d03-9fbd-4086-9631-99d1ad5e520c?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=09f17d81-b282-43ec-9f2b-36c8021d3ca7)\n\n\n## Description\nSpring Framework is vulnerable to denial-of-service (DoS) due to the improper implementation of data binding functionality. A remote attacker could cause a vulnerable server to crash if that server provides file upload functionality.\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [CVE-2022-22970](https://openhub.net/vulnerabilities/bdsa/CVE-2022-22970) - Incorrect Provision of Specified Functionality\n\n\n\n## Solution\nFixed in version [**5.3.20**](https://github.com/spring-projects/spring-framework/releases/tag/v5.3.20) and in version [**5.2.22**](https://github.com/spring-projects/spring-framework/releases/tag/v5.2.22.RELEASE).\n\nThe latest stable releases can be found [here](https://github.com/spring-projects/spring-framework/releases).\n\n\n\n## Dependency tree\n- org.owasp.webgoat:webgoat-container:v8.1.0:-maven\n    - org.springframework.boot:spring-boot-starter-security:2.2.2.RELEASE\n        - org.springframework:spring-aop:5.2.2.RELEASE\n\n\n## References\n* Common Weakness Enumeration: [CWE-684](https://cwe.mitre.org/data/definitions/684.html)\n\n","text":"Spring Framework is vulnerable to denial-of-service (DoS) due to the improper implementation of data binding functionality. A remote attacker could cause a vulnerable server to crash if that server provides file upload functionality."},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-684"]},"defaultConfiguration":{"level":"warning"}},{"id":"CVE-2022-22971 spring-aop 5.2.2.RELEASE: spring-boot-starter-security 2.2.2.RELEASE: org.springframework","shortDescription":{"text":"Transitive Dependency: spring-aop 5.2.2.RELEASE from spring-boot-starter-security 2.2.2.RELEASE (CVE-2022-22971)"},"fullDescription":{"text":"Spring Framework is vulnerable to denial-of-service (DoS) due to the improper handling of the STOMP protocol for websockets. A remote authenticated attacker could leverage this issue in order to cause a server to crash."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| spring-aop 5.2.2.RELEASE  | 5.3.31  | 6.1.2 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/ba6e9d03-9fbd-4086-9631-99d1ad5e520c?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=09f17d81-b282-43ec-9f2b-36c8021d3ca7)\n\n\n## Description\nSpring Framework is vulnerable to denial-of-service (DoS) due to the improper handling of the STOMP protocol for websockets. A remote authenticated attacker could leverage this issue in order to cause a server to crash.\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [CVE-2022-22971](https://openhub.net/vulnerabilities/bdsa/CVE-2022-22971) - Incorrect Provision of Specified Functionality\n\n\n\n## Solution\nFixed in version [**5.3.20**](https://github.com/spring-projects/spring-framework/releases/tag/v5.3.20) and in version [**5.2.22**](https://github.com/spring-projects/spring-framework/releases/tag/v5.2.22.RELEASE).\n\nThe latest stable releases can be found [here](https://github.com/spring-projects/spring-framework/releases).\n\n\n\n## Dependency tree\n- org.owasp.webgoat:webgoat-container:v8.1.0:-maven\n    - org.springframework.boot:spring-boot-starter-security:2.2.2.RELEASE\n        - org.springframework:spring-aop:5.2.2.RELEASE\n\n\n## References\n* Common Weakness Enumeration: [CWE-684](https://cwe.mitre.org/data/definitions/684.html)\n\n","text":"Spring Framework is vulnerable to denial-of-service (DoS) due to the improper handling of the STOMP protocol for websockets. A remote authenticated attacker could leverage this issue in order to cause a server to crash."},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-684"]},"defaultConfiguration":{"level":"warning"}},{"id":"CVE-2023-20861 spring-aop 5.2.2.RELEASE: spring-boot-starter-security 2.2.2.RELEASE: org.springframework","shortDescription":{"text":"Transitive Dependency: spring-aop 5.2.2.RELEASE from spring-boot-starter-security 2.2.2.RELEASE (CVE-2023-20861)"},"fullDescription":{"text":"Spring Framework is vulnerable to denial-of-service (DoS) via specially crafted SpEL expressions. An attacker could exploit this issue by passing a crafted SpEL expression to the application which may result in a crash."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| spring-aop 5.2.2.RELEASE  | 5.3.31  | 6.1.2 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/ba6e9d03-9fbd-4086-9631-99d1ad5e520c?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=09f17d81-b282-43ec-9f2b-36c8021d3ca7)\n\n\n## Description\nSpring Framework is vulnerable to denial-of-service (DoS) via specially crafted SpEL expressions. An attacker could exploit this issue by passing a crafted SpEL expression to the application which may result in a crash.\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [CVE-2023-20861](https://openhub.net/vulnerabilities/bdsa/CVE-2023-20861) - Weak Input Validation\n\n\n\n## Solution\nFixed in:\n* [**5.2.23**](https://github.com/spring-projects/spring-framework/releases/tag/v5.2.23.RELEASE) by [this](https://github.com/spring-projects/spring-framework/commit/52c93b1c4b24d70de233a958e60e7c5822bd274f) commit,\n* [**5.3.26**](https://github.com/spring-projects/spring-framework/releases/tag/v5.3.26) by [this](https://github.com/spring-projects/spring-framework/commit/430fc25acad2e85cbdddcd52b64481691f03ebd1) commit,\n* [**6.0.7**](https://github.com/spring-projects/spring-framework/releases/tag/v6.0.7) by [this](https://github.com/spring-projects/spring-framework/commit/935c29e3ddba5b19951e54f6685c70ed45d9cbe5) commit.\n\nThe latest stable releases are available [here](https://github.com/spring-projects/spring-framework/releases).\n\n\n\n## Dependency tree\n- org.owasp.webgoat:webgoat-container:v8.1.0:-maven\n    - org.springframework.boot:spring-boot-starter-security:2.2.2.RELEASE\n        - org.springframework:spring-aop:5.2.2.RELEASE\n\n\n## References\n* Common Weakness Enumeration: [CWE-20](https://cwe.mitre.org/data/definitions/20.html)\n\n","text":"Spring Framework is vulnerable to denial-of-service (DoS) via specially crafted SpEL expressions. An attacker could exploit this issue by passing a crafted SpEL expression to the application which may result in a crash."},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-20"]},"defaultConfiguration":{"level":"warning"}},{"id":"CVE-2023-20863 spring-aop 5.2.2.RELEASE: spring-boot-starter-security 2.2.2.RELEASE: org.springframework","shortDescription":{"text":"Transitive Dependency: spring-aop 5.2.2.RELEASE from spring-boot-starter-security 2.2.2.RELEASE (CVE-2023-20863)"},"fullDescription":{"text":"Spring Framework is vulnerable to denial-of-service (DoS) via specially crafted SpEL expressions."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| spring-aop 5.2.2.RELEASE  | 5.3.31  | 6.1.2 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/ba6e9d03-9fbd-4086-9631-99d1ad5e520c?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=09f17d81-b282-43ec-9f2b-36c8021d3ca7)\n\n\n## Description\nSpring Framework is vulnerable to denial-of-service (DoS) via specially crafted SpEL expressions.\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [CVE-2023-20863](https://openhub.net/vulnerabilities/bdsa/CVE-2023-20863) - Weak Input Validation\n\n\n\n## Solution\nFixed in:\n* [**5.2.24**](https://github.com/spring-projects/spring-framework/releases/tag/v5.2.24.RELEASE)\n* [**5.3.27**](https://github.com/spring-projects/spring-framework/releases/tag/v5.3.27)\n* [**6.0.8**](https://github.com/spring-projects/spring-framework/releases/tag/v6.0.8)\n\nThe latest stable releases are available [here](https://github.com/spring-projects/spring-framework/releases).\n\n\n\n## Dependency tree\n- org.owasp.webgoat:webgoat-container:v8.1.0:-maven\n    - org.springframework.boot:spring-boot-starter-security:2.2.2.RELEASE\n        - org.springframework:spring-aop:5.2.2.RELEASE\n\n\n## References\n* Common Weakness Enumeration: [CWE-20](https://cwe.mitre.org/data/definitions/20.html)\n\n","text":"Spring Framework is vulnerable to denial-of-service (DoS) via specially crafted SpEL expressions."},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-20"]},"defaultConfiguration":{"level":"warning"}},{"id":"CVE-2020-5421 spring-aop 5.2.2.RELEASE: spring-boot-starter-security 2.2.2.RELEASE: org.springframework","shortDescription":{"text":"Transitive Dependency: spring-aop 5.2.2.RELEASE from spring-boot-starter-security 2.2.2.RELEASE (CVE-2020-5421)"},"fullDescription":{"text":"It was discovered that Spring Framework was vulnerable to RFD protection bypass. In some instances, depending on the browser used, an attacker could bypass the RFD attack protections via the use of a `jsessionid` path parameter."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| spring-aop 5.2.2.RELEASE  | 5.3.31  | 6.1.2 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/ba6e9d03-9fbd-4086-9631-99d1ad5e520c?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=09f17d81-b282-43ec-9f2b-36c8021d3ca7)\n\n\n## Description\nIt was discovered that Spring Framework was vulnerable to RFD protection bypass. In some instances, depending on the browser used, an attacker could bypass the RFD attack protections via the use of a `jsessionid` path parameter.\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [CVE-2020-5421](https://openhub.net/vulnerabilities/bdsa/CVE-2020-5421) - Weak Input Validation\n\n\n\n## Solution\nFixed in:\n* [**5.2.9**](https://github.com/spring-projects/spring-framework/releases/tag/v5.2.9.RELEASE) by [this](https://github.com/spring-projects/spring-framework/commit/899761f0a8890353dc01f10d2af96ae192f3e655) commit,\n* [**5.1.18**](https://github.com/spring-projects/spring-framework/releases/tag/v5.1.18.RELEASE) by [this](https://github.com/spring-projects/spring-framework/commit/a63c8886c00f30fea5b25f50ddf6f56c6eb957bd) commit,\n* [**5.0.19**](https://github.com/spring-projects/spring-framework/releases/tag/v5.0.19.RELEASE) by [this](https://github.com/spring-projects/spring-framework/commit/aec3a4c69e02d87f87258b0ab5c1d6c83f4cb44f) commit,\n* [**4.3.29**](https://github.com/spring-projects/spring-framework/releases/tag/v4.3.29.RELEASE) by [this](https://github.com/spring-projects/spring-framework/commit/2f75212eb667a30fe2fa9b5aca8f22d5e255821f) commit.\n\n\n\n## Dependency tree\n- org.owasp.webgoat:webgoat-container:v8.1.0:-maven\n    - org.springframework.boot:spring-boot-starter-security:2.2.2.RELEASE\n        - org.springframework:spring-aop:5.2.2.RELEASE\n\n\n## References\n* Common Weakness Enumeration: [CWE-20](https://cwe.mitre.org/data/definitions/20.html)\n\n","text":"It was discovered that Spring Framework was vulnerable to RFD protection bypass. In some instances, depending on the browser used, an attacker could bypass the RFD attack protections via the use of a `jsessionid` path parameter."},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-20"]},"defaultConfiguration":{"level":"warning"}},{"id":"CVE-2022-22968 spring-aop 5.2.2.RELEASE: spring-boot-starter-security 2.2.2.RELEASE: org.springframework","shortDescription":{"text":"Transitive Dependency: spring-aop 5.2.2.RELEASE from spring-boot-starter-security 2.2.2.RELEASE (CVE-2022-22968)"},"fullDescription":{"text":"Spring Framework is vulnerable to data binding protection bypass due to improper validation of specified disallowed fields in `DataBinders`. This could be leveraged by an attacker to bypass the suggested workaround to **CVE-2022-22965** (**BDSA-2022-0858**) if it is improperly implemented."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| spring-aop 5.2.2.RELEASE  | 5.3.31  | 6.1.2 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/ba6e9d03-9fbd-4086-9631-99d1ad5e520c?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=09f17d81-b282-43ec-9f2b-36c8021d3ca7)\n\n\n## Description\nSpring Framework is vulnerable to data binding protection bypass due to improper validation of specified disallowed fields in `DataBinders`. This could be leveraged by an attacker to bypass the suggested workaround to **CVE-2022-22965** (**BDSA-2022-0858**) if it is improperly implemented.\n\n## Vulnerabilities(BDSA,CVE)\n:large_blue_circle: [CVE-2022-22968](https://openhub.net/vulnerabilities/bdsa/CVE-2022-22968) - Weak Input Validation\n\n\n\n## Solution\nFixed  in [**5.3.19**](https://github.com/spring-projects/spring-framework/releases/tag/v5.3.19) by [this](https://github.com/spring-projects/spring-framework/commit/a7cf19cec5ebd270f97a194d749e2d5701ad2ab7) commit and [**5.2.21**](https://github.com/spring-projects/spring-framework/releases/tag/v5.2.21.RELEASE) by [this](https://github.com/spring-projects/spring-framework/commit/833e750175349ab4fd502109a8b41af77e25cdea) commit.\n\n\n\n## Dependency tree\n- org.owasp.webgoat:webgoat-container:v8.1.0:-maven\n    - org.springframework.boot:spring-boot-starter-security:2.2.2.RELEASE\n        - org.springframework:spring-aop:5.2.2.RELEASE\n\n\n## References\n* Common Weakness Enumeration: [CWE-20](https://cwe.mitre.org/data/definitions/20.html)\n\n","text":"Spring Framework is vulnerable to data binding protection bypass due to improper validation of specified disallowed fields in `DataBinders`. This could be leveraged by an attacker to bypass the suggested workaround to **CVE-2022-22965** (**BDSA-2022-0858**) if it is improperly implemented."},"properties":{"security-severity":"3.8","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-20"]},"defaultConfiguration":{"level":"note"}},{"id":"BDSA-2021-3731 spring-boot-starter-thymeleaf 2.2.2.RELEASE: org.springframework.boot","shortDescription":{"text":"Direct Dependency: spring-boot-starter-thymeleaf 2.2.2.RELEASE (BDSA-2021-3731)"},"fullDescription":{"text":"Apache Log4j, as used in many popular services, is vulnerable to improperly allowing lightweight directory access protocol (LDAP) access via Java naming and directory interface (JNDI). A remote attacker able to supply the end application with specially crafted input that is then processed by the Log4j subcomponent could cause the execution of arbitrary Java code.\n\n**Note** \n\n- log4j-api packages by themselves do not contain the vulnerable functionality and are therefore unaffected. log4j-core packages and the upstream overarching source repository are affected.\n\n- A previously suggested mitigation of setting environment variable `LOG4J_FORMAT_MSG_NO_LOOKUPS=true` is not recommended. This mitigation has been proven inadequate against this vulnerability. \n\n- This vulnerability is partially fixed in [**2.15.0-rc2**](https://github.com/apache/logging-log4j2/releases/tag/log4j-2.15.0-rc2) by [this](https://github.com/apache/logging-log4j2/commit/001aaada7dab82c3c09cde5f8e14245dc9d8b454) commit and [this](https://github.com/apache/logging-log4j2/commit/bac0d8a35c7e354a0d3f706569116dff6c6bd658) commit. These fixes were deemed incomplete. See BDSA-2021-3779 (CVE-2021-45046) for more details.\n\nThis vulnerability is listed as exploitable by the Cybersecurity \u0026 Infrastructure Security Agency in their [Known Exploited Vulnerabilities Catalog](https://www.cisa.gov/known-exploited-vulnerabilities-catalog)."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| spring-boot-starter-thymeleaf 2.2.2.RELEASE  | 2.7.18  | 3.2.1 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/48431389-4a2f-44ed-8597-55184ffc0e88?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=ee1b331d-05e0-4bd1-b6ef-727c3b98e324)\n\n\n## Description\nApache Log4j, as used in many popular services, is vulnerable to improperly allowing lightweight directory access protocol (LDAP) access via Java naming and directory interface (JNDI). A remote attacker able to supply the end application with specially crafted input that is then processed by the Log4j subcomponent could cause the execution of arbitrary Java code.\n\n**Note** \n\n- log4j-api packages by themselves do not contain the vulnerable functionality and are therefore unaffected. log4j-core packages and the upstream overarching source repository are affected.\n\n- A previously suggested mitigation of setting environment variable `LOG4J_FORMAT_MSG_NO_LOOKUPS=true` is not recommended. This mitigation has been proven inadequate against this vulnerability. \n\n- This vulnerability is partially fixed in [**2.15.0-rc2**](https://github.com/apache/logging-log4j2/releases/tag/log4j-2.15.0-rc2) by [this](https://github.com/apache/logging-log4j2/commit/001aaada7dab82c3c09cde5f8e14245dc9d8b454) commit and [this](https://github.com/apache/logging-log4j2/commit/bac0d8a35c7e354a0d3f706569116dff6c6bd658) commit. These fixes were deemed incomplete. See BDSA-2021-3779 (CVE-2021-45046) for more details.\n\nThis vulnerability is listed as exploitable by the Cybersecurity \u0026 Infrastructure Security Agency in their [Known Exploited Vulnerabilities Catalog](https://www.cisa.gov/known-exploited-vulnerabilities-catalog).\n\n## Vulnerabilities(BDSA,CVE)\n:red_circle: [BDSA-2021-3731](https://openhub.net/vulnerabilities/bdsa/BDSA-2021-3731) - Insecure Object Deserialization\n\n\n\n## Solution\nFixed in versions:\n*  [**2.16.0-rc1**](https://github.com/apache/logging-log4j2/releases/tag/log4j-2.16.0-rc1) by [this](https://github.com/apache/logging-log4j2/commit/27972043b76c9645476f561c5adc483dec6d3f5d) commit.\n*  [**2.12.2-rc1**](https://github.com/apache/logging-log4j2/releases/tag/log4j-2.12.2-rc1) by [this](https://github.com/apache/logging-log4j2/commit/f819c83804152cb6ed94cb408302e36b21b65053) commit and [this](https://github.com/apache/logging-log4j2/commit/70edc233343815d5efa043b54294a6fb065aa1c5) commit.\n*   [**2.3.1-rc1**](https://github.com/apache/logging-log4j2/releases/tag/log4j-2.3.1-rc1) by [this](https://github.com/apache/logging-log4j2/commit/be848dacbac6df30c4f32b2852e24446033ecf79) commit and [this](https://github.com/apache/logging-log4j2/commit/f6564bb993d547d0a371b75d869042c334bf57f0) commit.\n\nThe latest releases can be found [here](https://github.com/apache/logging-log4j2/tags).\n\nNOTE: It is recommended to upgrade to version  [**2.17.0**](https://downloads.apache.org/logging/log4j/2.17.0/). This recommendation is due to related vulnerabilities (BDSA-2021-3779, CVE-2021-45046) affecting the version that this vulnerability is fixed in.\n\n## Workaround\nThe vendor states that:\n\n\u003e This issue can be mitigated in prior releases (\u003c**2.16.0**) by removing the JndiLookup class from the classpath (example: `zip -q -d log4j-core-*.jar org/apache/logging/log4j/core/lookup/JndiLookup.class`).\n\n\n\n## References\n* Common Weakness Enumeration: [CWE-502](https://cwe.mitre.org/data/definitions/502.html)\n\n","text":"Apache Log4j, as used in many popular services, is vulnerable to improperly allowing lightweight directory access protocol (LDAP) access via Java naming and directory interface (JNDI). A remote attacker able to supply the end application with specially crafted input that is then processed by the Log4j subcomponent could cause the execution of arbitrary Java code.\n\n**Note** \n\n- log4j-api packages by themselves do not contain the vulnerable functionality and are therefore unaffected. log4j-core packages and the upstream overarching source repository are affected.\n\n- A previously suggested mitigation of setting environment variable `LOG4J_FORMAT_MSG_NO_LOOKUPS=true` is not recommended. This mitigation has been proven inadequate against this vulnerability. \n\n- This vulnerability is partially fixed in [**2.15.0-rc2**](https://github.com/apache/logging-log4j2/releases/tag/log4j-2.15.0-rc2) by [this](https://github.com/apache/logging-log4j2/commit/001aaada7dab82c3c09cde5f8e14245dc9d8b454) commit and [this](https://github.com/apache/logging-log4j2/commit/bac0d8a35c7e354a0d3f706569116dff6c6bd658) commit. These fixes were deemed incomplete. See BDSA-2021-3779 (CVE-2021-45046) for more details.\n\nThis vulnerability is listed as exploitable by the Cybersecurity \u0026 Infrastructure Security Agency in their [Known Exploited Vulnerabilities Catalog](https://www.cisa.gov/known-exploited-vulnerabilities-catalog)."},"properties":{"security-severity":"9.1","tags":["security","open_source_analysis","direct_dependency","patch_available","external/cwe/cwe-502"]},"defaultConfiguration":{"level":"error"}},{"id":"CVE-2022-22965 spring-boot-starter-thymeleaf 2.2.2.RELEASE: org.springframework.boot","shortDescription":{"text":"Direct Dependency: spring-boot-starter-thymeleaf 2.2.2.RELEASE (CVE-2022-22965)"},"fullDescription":{"text":"Spring Framework is vulnerable to a flaw in the access restrictions to the security sensitive `ClassLoader` property. The restrictions can be bypassed through alternative paths available with Java9 and later. An attacker can leverage this vulnerability to cause remote code execution (RCE).\n\n**Note** this issue exists because the restrictions that were introduced to prevent exploitation of BDSA-2010-0001 (CVE-2010-1622) can be bypassed on platforms where Java9 and later are in use.\n\nThis vulnerability is listed as exploitable by the Cybersecurity \u0026 Infrastructure Security Agency in their [Known Exploited Vulnerabilities Catalog](https://www.cisa.gov/known-exploited-vulnerabilities-catalog)."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| spring-boot-starter-thymeleaf 2.2.2.RELEASE  | 2.7.18  | 3.2.1 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/48431389-4a2f-44ed-8597-55184ffc0e88?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=ee1b331d-05e0-4bd1-b6ef-727c3b98e324)\n\n\n## Description\nSpring Framework is vulnerable to a flaw in the access restrictions to the security sensitive `ClassLoader` property. The restrictions can be bypassed through alternative paths available with Java9 and later. An attacker can leverage this vulnerability to cause remote code execution (RCE).\n\n**Note** this issue exists because the restrictions that were introduced to prevent exploitation of BDSA-2010-0001 (CVE-2010-1622) can be bypassed on platforms where Java9 and later are in use.\n\nThis vulnerability is listed as exploitable by the Cybersecurity \u0026 Infrastructure Security Agency in their [Known Exploited Vulnerabilities Catalog](https://www.cisa.gov/known-exploited-vulnerabilities-catalog).\n\n## Vulnerabilities(BDSA,CVE)\n:red_circle: [CVE-2022-22965](https://openhub.net/vulnerabilities/bdsa/CVE-2022-22965) - Incomplete List of Disallowed Inputs\n\n\n\n## Solution\nFixed in [**5.3.18**](https://github.com/spring-projects/spring-framework/releases/tag/v5.3.18) by [this](https://github.com/spring-projects/spring-framework/commit/002546b3e4b8d791ea6acccb81eb3168f51abb15) commit and  [**5.2.20**](https://github.com/spring-projects/spring-framework/releases/tag/v5.2.20.RELEASE) by [this](https://github.com/spring-projects/spring-framework/commit/996f701a1916d10202c1d0d281f06ab1f2e1117e) commit .\n\nThe latest releases can be found [here](https://github.com/spring-projects/spring-framework/tags).\n\n## Workaround\nAn official workaround for the issue has been outlined [here](https://spring.io/blog/2022/03/31/spring-framework-rce-early-announcement).\n\n\n\n## References\n* Common Weakness Enumeration: [CWE-184](https://cwe.mitre.org/data/definitions/184.html)\n* Common Weakness Enumeration: [CWE-749](https://cwe.mitre.org/data/definitions/749.html)\n\n","text":"Spring Framework is vulnerable to a flaw in the access restrictions to the security sensitive `ClassLoader` property. The restrictions can be bypassed through alternative paths available with Java9 and later. An attacker can leverage this vulnerability to cause remote code execution (RCE).\n\n**Note** this issue exists because the restrictions that were introduced to prevent exploitation of BDSA-2010-0001 (CVE-2010-1622) can be bypassed on platforms where Java9 and later are in use.\n\nThis vulnerability is listed as exploitable by the Cybersecurity \u0026 Infrastructure Security Agency in their [Known Exploited Vulnerabilities Catalog](https://www.cisa.gov/known-exploited-vulnerabilities-catalog)."},"properties":{"security-severity":"9.1","tags":["security","open_source_analysis","direct_dependency","patch_available","external/cwe/cwe-184","external/cwe/cwe-749"]},"defaultConfiguration":{"level":"error"}},{"id":"CVE-2023-20873 spring-boot-starter-thymeleaf 2.2.2.RELEASE: org.springframework.boot","shortDescription":{"text":"Direct Dependency: spring-boot-starter-thymeleaf 2.2.2.RELEASE (CVE-2023-20873)"},"fullDescription":{"text":"Spring framework contains a security bypass vulnerability when `/**` is used as a pattern in Spring Security configuration with the `/cloudfoundryapplication/**` component. The potential for security bypass exists due to the mismatch in pattern matching between Spring Security and Cloud Foundry.\n\n**Note**: The vendor has stated in their [advisory](https://spring.io/security/cve-2023-20873) that this application is not vulnerable if any of the following is true:\n* The application is not deployed to Cloud Foundry.\n* You have disabled Cloud Foundry actuator endpoints with `management.cloudfoundry.enabled` set to `false`.\n* Your application does not have handler mappings that can handle requests to `/cloudfoundryapplication/**`."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| spring-boot-starter-thymeleaf 2.2.2.RELEASE  | 2.7.18  | 3.2.1 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/48431389-4a2f-44ed-8597-55184ffc0e88?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=ee1b331d-05e0-4bd1-b6ef-727c3b98e324)\n\n\n## Description\nSpring framework contains a security bypass vulnerability when `/**` is used as a pattern in Spring Security configuration with the `/cloudfoundryapplication/**` component. The potential for security bypass exists due to the mismatch in pattern matching between Spring Security and Cloud Foundry.\n\n**Note**: The vendor has stated in their [advisory](https://spring.io/security/cve-2023-20873) that this application is not vulnerable if any of the following is true:\n* The application is not deployed to Cloud Foundry.\n* You have disabled Cloud Foundry actuator endpoints with `management.cloudfoundry.enabled` set to `false`.\n* Your application does not have handler mappings that can handle requests to `/cloudfoundryapplication/**`.\n\n## Vulnerabilities(BDSA,CVE)\n:orange_circle: [CVE-2023-20873](https://openhub.net/vulnerabilities/bdsa/CVE-2023-20873) - Improper Access Control\n\n\n\n## Solution\nFixed in [**3.1.0-RC1**](https://github.com/spring-projects/spring-boot/releases/tag/v3.1.0-RC1), [**3.0.6**](https://github.com/spring-projects/spring-boot/releases/tag/v3.0.6) and [**2.7.11**](https://github.com/spring-projects/spring-boot/releases/tag/v2.7.11)  by [this](https://github.com/spring-projects/spring-boot/commit/3522714c13b47af03bf42e7f2d5994af568cb1a7) commit.\n\nFixed in [**2.6.15**](https://github.com/spring-projects/spring-boot/releases/tag/v2.6.15) and [**2.5.15**](https://github.com/spring-projects/spring-boot/releases/tag/v2.5.15) by [this](https://github.com/spring-projects/spring-boot/commit/307f3c339912466e78fcdac648fff95a4edea573) commit.\n\nThe latest stable releases can be found [here](https://github.com/spring-projects/spring-boot/releases).\n\n## Workaround\nThe vendor has advised the following as a workaround:\n\u003eDisable Cloud Foundry actuator endpoints by setting `management.cloudfoundry.enabled` to `false`.\n\n\n\n## References\n* Common Weakness Enumeration: [CWE-284](https://cwe.mitre.org/data/definitions/284.html)\n* Common Weakness Enumeration: [CWE-923](https://cwe.mitre.org/data/definitions/923.html)\n\n","text":"Spring framework contains a security bypass vulnerability when `/**` is used as a pattern in Spring Security configuration with the `/cloudfoundryapplication/**` component. The potential for security bypass exists due to the mismatch in pattern matching between Spring Security and Cloud Foundry.\n\n**Note**: The vendor has stated in their [advisory](https://spring.io/security/cve-2023-20873) that this application is not vulnerable if any of the following is true:\n* The application is not deployed to Cloud Foundry.\n* You have disabled Cloud Foundry actuator endpoints with `management.cloudfoundry.enabled` set to `false`.\n* Your application does not have handler mappings that can handle requests to `/cloudfoundryapplication/**`."},"properties":{"security-severity":"8.9","tags":["security","open_source_analysis","direct_dependency","patch_available","external/cwe/cwe-284","external/cwe/cwe-923"]},"defaultConfiguration":{"level":"error"}},{"id":"BDSA-2021-3817 spring-boot-starter-thymeleaf 2.2.2.RELEASE: org.springframework.boot","shortDescription":{"text":"Direct Dependency: spring-boot-starter-thymeleaf 2.2.2.RELEASE (BDSA-2021-3817)"},"fullDescription":{"text":"Apache log4j is vulnerable to a denial-of-service (DoS) when uncontrolled recursion occurs through a self-referencing lookup.  An attacker can trigger a DoS with malicious input data that generates a recursive lookup  and consequent application crash.\n\nSuccessful attacks require the attacker to have access to Thread Context Map (MDC) input, and for log4j configured with non-default pattern layout with a Context Lookup.\n\nOnly the log4j-core JAR file is impacted by this vulnerability. Applications using only the log4j-api JAR file without the log4j-core JAR file are not impacted.\n\nApache Log4j is the only Logging Services subproject affected by this vulnerability. Other projects like Log4net  are not impacted."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| spring-boot-starter-thymeleaf 2.2.2.RELEASE  | 2.7.18  | 3.2.1 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/48431389-4a2f-44ed-8597-55184ffc0e88?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=ee1b331d-05e0-4bd1-b6ef-727c3b98e324)\n\n\n## Description\nApache log4j is vulnerable to a denial-of-service (DoS) when uncontrolled recursion occurs through a self-referencing lookup.  An attacker can trigger a DoS with malicious input data that generates a recursive lookup  and consequent application crash.\n\nSuccessful attacks require the attacker to have access to Thread Context Map (MDC) input, and for log4j configured with non-default pattern layout with a Context Lookup.\n\nOnly the log4j-core JAR file is impacted by this vulnerability. Applications using only the log4j-api JAR file without the log4j-core JAR file are not impacted.\n\nApache Log4j is the only Logging Services subproject affected by this vulnerability. Other projects like Log4net  are not impacted.\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [BDSA-2021-3817](https://openhub.net/vulnerabilities/bdsa/BDSA-2021-3817) - Loop with Unreachable Exit Condition ('Infinite Loop')\n\n\n\n## Solution\nFixed in version [**2.17.0**](https://downloads.apache.org/logging/log4j/2.17.0/)  by [this](https://github.com/apache/logging-log4j2/commit/806023265f8c905b2dd1d81fd2458f64b2ea0b5e) commit.\n\nFixed in [**2.12.3-rc1**](https://github.com/apache/logging-log4j2/releases/tag/log4j-2.12.3-rc1) by [this](https://github.com/apache/logging-log4j2/commit/bf7e916df6335713fe2219c7b3b523fb509deabc) commit.\n\nFixed in [**2.3.1-rc1**](https://github.com/apache/logging-log4j2/releases/tag/log4j-2.3.1-rc1) by [this](https://github.com/apache/logging-log4j2/commit/ce6b78d082aae89089cb3ad25cdd46e9ec70a70b) commit.\n\n\nThe latest stable releases can be found [here](https://github.com/apache/logging-log4j2/releases).\n\n## Workaround\nThe vendor advises that  this vulnerability can can be mitigated through one of the following:\n\n* In PatternLayout in the logging configuration, replace Context Lookups like `${ctx:loginId}` or `$${ctx:loginId}` with Thread Context Map patterns `(%X, %mdc, or %MDC)`.\n\n* Alternatively,  remove references in the configuration to Context Lookups like `${ctx:loginId}` or `$${ctx:loginId}` where they originate from sources external to the application such as HTTP headers or user input.\n\n\n\n## References\n* Common Weakness Enumeration: [CWE-835](https://cwe.mitre.org/data/definitions/835.html)\n\n","text":"Apache log4j is vulnerable to a denial-of-service (DoS) when uncontrolled recursion occurs through a self-referencing lookup.  An attacker can trigger a DoS with malicious input data that generates a recursive lookup  and consequent application crash.\n\nSuccessful attacks require the attacker to have access to Thread Context Map (MDC) input, and for log4j configured with non-default pattern layout with a Context Lookup.\n\nOnly the log4j-core JAR file is impacted by this vulnerability. Applications using only the log4j-api JAR file without the log4j-core JAR file are not impacted.\n\nApache Log4j is the only Logging Services subproject affected by this vulnerability. Other projects like Log4net  are not impacted."},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","direct_dependency","patch_available","external/cwe/cwe-835"]},"defaultConfiguration":{"level":"warning"}},{"id":"BDSA-2021-3887 spring-boot-starter-thymeleaf 2.2.2.RELEASE: org.springframework.boot","shortDescription":{"text":"Direct Dependency: spring-boot-starter-thymeleaf 2.2.2.RELEASE (BDSA-2021-3887)"},"fullDescription":{"text":"Apache Log4j contains a remote code execution (RCE) vulnerability. This allows an attacker that has permissions to modify the logging configuration files to input a malicious JDBC Appender with a data source referencing a JDNI URI. This can then lead to RCE.\n\n**Note:** This vulnerability impacts log4j-core."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| spring-boot-starter-thymeleaf 2.2.2.RELEASE  | 2.7.18  | 3.2.1 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/48431389-4a2f-44ed-8597-55184ffc0e88?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=ee1b331d-05e0-4bd1-b6ef-727c3b98e324)\n\n\n## Description\nApache Log4j contains a remote code execution (RCE) vulnerability. This allows an attacker that has permissions to modify the logging configuration files to input a malicious JDBC Appender with a data source referencing a JDNI URI. This can then lead to RCE.\n\n**Note:** This vulnerability impacts log4j-core.\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [BDSA-2021-3887](https://openhub.net/vulnerabilities/bdsa/BDSA-2021-3887) - Weak Input Validation\n\n\n\n## Solution\nFixed in versions:\n\n* [**2.3.2-rc1**](https://github.com/apache/logging-log4j2/releases/tag/log4j-2.3.2-rc1) by [this](https://github.com/apache/logging-log4j2/commit/ae4dc0c1a6389ae895f60451cd87e97e7b9d85c1) commit.\n* [**2.12.4-rc1**](https://github.com/apache/logging-log4j2/releases/tag/log4j-2.12.4-rc1) by [this](https://github.com/apache/logging-log4j2/commit/b3879958cb3b75eb16bf27e970538b6e4e130f1c) commit.\n* [**2.17.1-rc1**](https://github.com/apache/logging-log4j2/releases/tag/log4j-2.17.1-rc1) by [this](https://github.com/apache/logging-log4j2/commit/05db5f9527254632b59aed2a1d78a32c5ab74f16) commit.\n\nThe latest stable releases can be found [here](https://logging.apache.org/log4j/2.x/download.html).\n\n\n\n\n\n## References\n* Common Weakness Enumeration: [CWE-20](https://cwe.mitre.org/data/definitions/20.html)\n\n","text":"Apache Log4j contains a remote code execution (RCE) vulnerability. This allows an attacker that has permissions to modify the logging configuration files to input a malicious JDBC Appender with a data source referencing a JDNI URI. This can then lead to RCE.\n\n**Note:** This vulnerability impacts log4j-core."},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","direct_dependency","patch_available","external/cwe/cwe-20"]},"defaultConfiguration":{"level":"warning"}},{"id":"CVE-2022-27772 spring-boot-starter-thymeleaf 2.2.2.RELEASE: org.springframework.boot","shortDescription":{"text":"Direct Dependency: spring-boot-starter-thymeleaf 2.2.2.RELEASE (CVE-2022-27772)"},"fullDescription":{"text":"Spring Boot is vulnerable to privilege escalation due to a race condition which occurs during the creation of a temporary directory. A local attacker could create their own temporary directory by racing against Spring Boot and supply their own configuration files which would allow for the full takeover of the application."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| spring-boot-starter-thymeleaf 2.2.2.RELEASE  | 2.7.18  | 3.2.1 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/48431389-4a2f-44ed-8597-55184ffc0e88?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=ee1b331d-05e0-4bd1-b6ef-727c3b98e324)\n\n\n## Description\nSpring Boot is vulnerable to privilege escalation due to a race condition which occurs during the creation of a temporary directory. A local attacker could create their own temporary directory by racing against Spring Boot and supply their own configuration files which would allow for the full takeover of the application.\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [CVE-2022-27772](https://openhub.net/vulnerabilities/bdsa/CVE-2022-27772) - Race Condition due to Improper Synchronization\n\n\n\n## Solution\nFixed in [**2.2.11**](https://github.com/spring-projects/spring-boot/releases/tag/v2.2.11.RELEASE) by [this](https://github.com/spring-projects/spring-boot/commit/667ccdae84822072f9ea1a27ed5c77964c71002d) commit.\n\nThe latest stable releases can be found [here](https://github.com/spring-projects/spring-boot/releases).\n\n## Workaround\nAccording to the [Github Security Advisory](https://github.com/JLLeitschuh/security-research/security/advisories/GHSA-cm59-pr5q-cw85), setting the `java.io.tmpdir` system environment variable to a directory that is exclusively owned by the executing user will fix this vulnerability for all operating systems.\n\n\n\n## References\n* Common Weakness Enumeration: [CWE-362](https://cwe.mitre.org/data/definitions/362.html)\n* Common Weakness Enumeration: [CWE-379](https://cwe.mitre.org/data/definitions/379.html)\n\n","text":"Spring Boot is vulnerable to privilege escalation due to a race condition which occurs during the creation of a temporary directory. A local attacker could create their own temporary directory by racing against Spring Boot and supply their own configuration files which would allow for the full takeover of the application."},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","direct_dependency","patch_available","external/cwe/cwe-362","external/cwe/cwe-379"]},"defaultConfiguration":{"level":"warning"}},{"id":"CVE-2023-20883 spring-boot-starter-thymeleaf 2.2.2.RELEASE: org.springframework.boot","shortDescription":{"text":"Direct Dependency: spring-boot-starter-thymeleaf 2.2.2.RELEASE (CVE-2023-20883)"},"fullDescription":{"text":"Spring Boot is vulnerable to denial-of-service (DoS) via the welcome page when used to serve an application behind a reverse proxy cache. This will cause users to continuously be served a 404 response, preventing standard application use.\n\n\n**Note:** Spring have provided the following guidance for vulnerable criteria. \nAn application is vulnerable if all of the following are true:\n\n- \"The application has Spring MVC auto-configuration enabled. This is the case by default if Spring MVC is on the classpath.\"\n- \"The application makes use of Spring Boot's welcome page support, either static or templated.\"\n- \"Your application is deployed behind a proxy which caches 404 responses.\"\n\nThe application is not vulnerable if any of the following are true:\n\n- \"Spring MVC auto-configuration is disabled. This is true if `WebMvcAutoConfiguration` is explicitly excluded, if Spring MVC is not on the classpath, or if `spring.main.web-application-type` is set to a value other than `SERVLET`.\"\n- \"The application does not use Spring Boot's welcome page support.\"\n- \"You do not have a proxy which caches 404 responses.\""},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| spring-boot-starter-thymeleaf 2.2.2.RELEASE  | 2.7.18  | 3.2.1 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/48431389-4a2f-44ed-8597-55184ffc0e88?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=ee1b331d-05e0-4bd1-b6ef-727c3b98e324)\n\n\n## Description\nSpring Boot is vulnerable to denial-of-service (DoS) via the welcome page when used to serve an application behind a reverse proxy cache. This will cause users to continuously be served a 404 response, preventing standard application use.\n\n\n**Note:** Spring have provided the following guidance for vulnerable criteria. \nAn application is vulnerable if all of the following are true:\n\n- \"The application has Spring MVC auto-configuration enabled. This is the case by default if Spring MVC is on the classpath.\"\n- \"The application makes use of Spring Boot's welcome page support, either static or templated.\"\n- \"Your application is deployed behind a proxy which caches 404 responses.\"\n\nThe application is not vulnerable if any of the following are true:\n\n- \"Spring MVC auto-configuration is disabled. This is true if `WebMvcAutoConfiguration` is explicitly excluded, if Spring MVC is not on the classpath, or if `spring.main.web-application-type` is set to a value other than `SERVLET`.\"\n- \"The application does not use Spring Boot's welcome page support.\"\n- \"You do not have a proxy which caches 404 responses.\"\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [CVE-2023-20883](https://openhub.net/vulnerabilities/bdsa/CVE-2023-20883) - Insufficient Verification of Data Authenticity\n\n\n\n## Solution\nFixed in versions\n- [**2.5.15**](https://github.com/spring-projects/spring-boot/releases/tag/v2.5.15) by [this](https://github.com/spring-projects/spring-boot/commit/d7ff379fb8bb2c33319afeb45a343116b59e0ee2) commit,\n- [**2.6.15**](https://github.com/spring-projects/spring-boot/releases/tag/v2.6.15) by [this](https://github.com/spring-projects/spring-boot/commit/d7ff379fb8bb2c33319afeb45a343116b59e0ee2) commit,\n- [**2.7.12**](https://github.com/spring-projects/spring-boot/releases/tag/v2.7.12) by [this](https://github.com/spring-projects/spring-boot/commit/418dd1ba5bdad79b55a043000164bfcbda2acd78) commit,\n- [**3.0.7**](https://github.com/spring-projects/spring-boot/releases/tag/v3.0.7) by [this](https://github.com/spring-projects/spring-boot/commit/418dd1ba5bdad79b55a043000164bfcbda2acd78) commit,\n- [**3.1.0**](https://github.com/spring-projects/spring-boot/releases/tag/v3.1.0) by [this](https://github.com/spring-projects/spring-boot/commit/418dd1ba5bdad79b55a043000164bfcbda2acd78) commit.\n\nThe latest stable releases can be found [here](https://github.com/spring-projects/spring-boot/releases).\n\n## Workaround\nThe vendor has supplied the following workaround:\n\u003e \"configure the reverse proxy not to cache 404 responses and/or not to cache responses to requests to the root (`/`) of the application.\"\n\n\n\n## References\n* Common Weakness Enumeration: [CWE-345](https://cwe.mitre.org/data/definitions/345.html)\n\n","text":"Spring Boot is vulnerable to denial-of-service (DoS) via the welcome page when used to serve an application behind a reverse proxy cache. This will cause users to continuously be served a 404 response, preventing standard application use.\n\n\n**Note:** Spring have provided the following guidance for vulnerable criteria. \nAn application is vulnerable if all of the following are true:\n\n- \"The application has Spring MVC auto-configuration enabled. This is the case by default if Spring MVC is on the classpath.\"\n- \"The application makes use of Spring Boot's welcome page support, either static or templated.\"\n- \"Your application is deployed behind a proxy which caches 404 responses.\"\n\nThe application is not vulnerable if any of the following are true:\n\n- \"Spring MVC auto-configuration is disabled. This is true if `WebMvcAutoConfiguration` is explicitly excluded, if Spring MVC is not on the classpath, or if `spring.main.web-application-type` is set to a value other than `SERVLET`.\"\n- \"The application does not use Spring Boot's welcome page support.\"\n- \"You do not have a proxy which caches 404 responses.\""},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","direct_dependency","patch_available","external/cwe/cwe-345"]},"defaultConfiguration":{"level":"warning"}},{"id":"CVE-2023-34055 spring-boot-starter-thymeleaf 2.2.2.RELEASE: org.springframework.boot","shortDescription":{"text":"Direct Dependency: spring-boot-starter-thymeleaf 2.2.2.RELEASE (CVE-2023-34055)"},"fullDescription":{"text":"Spring Boot is vulnerable to denial-of-service (DoS). An unauthenticated user could trigger the vulnerability by providing specially crafted HTTP requests to a web metrics endpoint."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| spring-boot-starter-thymeleaf 2.2.2.RELEASE  | 2.7.18  | 3.2.1 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/48431389-4a2f-44ed-8597-55184ffc0e88?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=ee1b331d-05e0-4bd1-b6ef-727c3b98e324)\n\n\n## Description\nSpring Boot is vulnerable to denial-of-service (DoS). An unauthenticated user could trigger the vulnerability by providing specially crafted HTTP requests to a web metrics endpoint.\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [CVE-2023-34055](https://openhub.net/vulnerabilities/bdsa/CVE-2023-34055) - Third-party component usage\n\n\n\n## Solution\nFixed in:\n* [**3.1.6**](https://github.com/spring-projects/spring-boot/releases/tag/v3.1.6)\n* [**3.0.13**](https://github.com/spring-projects/spring-boot/releases/tag/v3.0.13)\n* [**2.7.18**](https://github.com/spring-projects/spring-boot/releases/tag/v2.7.18)\n\nThe latest stable releases can be found [here](https://github.com/spring-projects/spring-boot/releases).\n\n## Workaround\nThe vendor notes the following:\n\u003e As a temporary workaround, Spring Boot users can choose to disable web metrics with the following property: `management.metrics.enable.http.server.requests=false`\n\n\n\n\n","text":"Spring Boot is vulnerable to denial-of-service (DoS). An unauthenticated user could trigger the vulnerability by providing specially crafted HTTP requests to a web metrics endpoint."},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","direct_dependency","patch_available"]},"defaultConfiguration":{"level":"warning"}},{"id":"CVE-2020-27216 jetty-security 9.4.24.v20191120: wiremock 2.8.0: org.eclipse.jetty","shortDescription":{"text":"Transitive Dependency: jetty-security 9.4.24.v20191120 from wiremock 2.8.0 (CVE-2020-27216)"},"fullDescription":{"text":"Jetty is vulnerable to temporary directory Hijacking via a race condition. If code is executed from this temporary directory it can lead to local privilege escalation."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| jetty-security 9.4.24.v20191120  | 9.4.53.20231009  | 12.0.5 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/ee93672f-853c-4083-a5e8-0d5ab21e8bf9?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=d8221aaa-7d55-4b5a-b3e0-2b5cba26ce60)\n\n\n## Description\nJetty is vulnerable to temporary directory Hijacking via a race condition. If code is executed from this temporary directory it can lead to local privilege escalation.\n\n## Vulnerabilities(BDSA,CVE)\n:orange_circle: [CVE-2020-27216](https://openhub.net/vulnerabilities/bdsa/CVE-2020-27216) - Race Condition due to Improper Synchronization\n\n\n\n## Solution\nFixed in:\n* [**11.0.0.beta3**](https://github.com/eclipse/jetty.project/releases/tag/jetty-11.0.0.beta3)\n* [**10.0.0.beta3**](https://github.com/eclipse/jetty.project/releases/tag/jetty-10.0.0.beta3) \n* [**9.4.33.v20201020**](https://github.com/eclipse/jetty.project/releases/tag/jetty-9.4.33.v20201020) by [this](https://github.com/eclipse/jetty.project/commit/53e0e0e9b25a6309bf24ee3b10984f4145701edb) commit and [this](https://github.com/eclipse/jetty.project/commit/9ad6beb80543b392c91653f6bfce233fc75b9d5f) commit.\n\n## Workaround\nSet a temporary directory, either for the server or the context, to one outside the shared temporary file system. For recent releases, a temporary directory by created by making a directory called work in the `${jetty.base}` directory (the parent directory of the webapps directory). Alternately the java temporary directory can be set with the System Property `java.io.tmpdir`. A more detailed description of how jetty selects a temporary directory is below.\n\nTo mitigate this vulnerability the directory must be set to one that is not writable by an attacker. To avoid information leakage, the directory should also not be readable by an attacker.\n\n## Dependency tree\n- org.owasp.webgoat.lesson:xxe:v8.1.0:-maven\n    - com.github.tomakehurst:wiremock:2.8.0\n        - org.eclipse.jetty:jetty-servlet:9.4.24.v20191120\n            - org.eclipse.jetty:jetty-security:9.4.24.v20191120\n\n\n## References\n* Common Weakness Enumeration: [CWE-362](https://cwe.mitre.org/data/definitions/362.html)\n\n","text":"Jetty is vulnerable to temporary directory Hijacking via a race condition. If code is executed from this temporary directory it can lead to local privilege escalation."},"properties":{"security-severity":"8.9","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-362"]},"defaultConfiguration":{"level":"error"}},{"id":"CVE-2023-44487 jetty-security 9.4.24.v20191120: wiremock 2.8.0: org.eclipse.jetty","shortDescription":{"text":"Transitive Dependency: jetty-security 9.4.24.v20191120 from wiremock 2.8.0 (CVE-2023-44487)"},"fullDescription":{"text":"The HTTP/2 protocol contains a flaw related to the stream multiplexing feature that can allow for excessive resource consumption on servers operating implementations of the HTTP/2 protocol. \n\nThe HTTP/2 protocol allows clients to signal to a server to cancel a previously opened stream by sending an `RST_STREAM` frame. Attackers can abuse this stream canceling ability by opening a large number of streams at once immediately followed by `RST_STREAM` frames. In most HTTP/2 implementations this bypasses concurrent open stream limits and causes servers to spend processing time first handling request frames and then performing stream tear downs. For the server, these operations can pile up whereas the attacker client paid minuscule bandwidth and processing costs.\n\n[Amazon](https://aws.amazon.com/security/security-bulletins/AWS-2023-011/), [Cloudflare](https://blog.cloudflare.com/technical-breakdown-http2-rapid-reset-ddos-attack/) and [Google](https://cloud.google.com/blog/products/identity-security/google-cloud-mitigated-largest-ddos-attack-peaking-above-398-million-rps/) have reported that this vulnerability has been exploited in the wild from August to October 2023.\n\nThis vulnerability is listed as exploitable by the Cybersecurity \u0026 Infrastructure Security Agency in their [Known Exploited Vulnerabilities Catalog](https://www.cisa.gov/known-exploited-vulnerabilities-catalog)."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| jetty-security 9.4.24.v20191120  | 9.4.53.20231009  | 12.0.5 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/ee93672f-853c-4083-a5e8-0d5ab21e8bf9?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=d8221aaa-7d55-4b5a-b3e0-2b5cba26ce60)\n\n\n## Description\nThe HTTP/2 protocol contains a flaw related to the stream multiplexing feature that can allow for excessive resource consumption on servers operating implementations of the HTTP/2 protocol. \n\nThe HTTP/2 protocol allows clients to signal to a server to cancel a previously opened stream by sending an `RST_STREAM` frame. Attackers can abuse this stream canceling ability by opening a large number of streams at once immediately followed by `RST_STREAM` frames. In most HTTP/2 implementations this bypasses concurrent open stream limits and causes servers to spend processing time first handling request frames and then performing stream tear downs. For the server, these operations can pile up whereas the attacker client paid minuscule bandwidth and processing costs.\n\n[Amazon](https://aws.amazon.com/security/security-bulletins/AWS-2023-011/), [Cloudflare](https://blog.cloudflare.com/technical-breakdown-http2-rapid-reset-ddos-attack/) and [Google](https://cloud.google.com/blog/products/identity-security/google-cloud-mitigated-largest-ddos-attack-peaking-above-398-million-rps/) have reported that this vulnerability has been exploited in the wild from August to October 2023.\n\nThis vulnerability is listed as exploitable by the Cybersecurity \u0026 Infrastructure Security Agency in their [Known Exploited Vulnerabilities Catalog](https://www.cisa.gov/known-exploited-vulnerabilities-catalog).\n\n## Vulnerabilities(BDSA,CVE)\n:orange_circle: [CVE-2023-44487](https://openhub.net/vulnerabilities/bdsa/CVE-2023-44487) - Uncontrolled Resource Consumption\n\n\n\n## Solution\nFixed in:\n* nghttp2 [**1.57.0**](https://github.com/nghttp2/nghttp2/releases/tag/v1.57.0) by [this](https://github.com/nghttp2/nghttp2/commit/72b4af6143681f528f1d237b21a9a7aee1738832) commit,\n* NGINX [**1.25.3**](https://hg.nginx.org/nginx/rev/release-1.25.3) by [this](https://hg.nginx.org/nginx/rev/cdda286c0f1b) revision,\n* Apache Tomcat \n\t* [**8.5.94**](https://github.com/apache/tomcat/releases/tag/8.5.94) by [this](https://github.com/apache/tomcat/commit/944332bb15bd2f3bf76ec2caeb1ff0a58a3bc628) commit,\n\t* [**9.0.81**](https://github.com/apache/tomcat/releases/tag/9.0.81) by [this](https://github.com/apache/tomcat/commit/6d1a9fd6642387969e4410b9989c85856b74917a) commit,\n\t* [**10.1.14**](https://github.com/apache/tomcat/releases/tag/10.1.14) by [this](https://github.com/apache/tomcat/commit/76bb4bfbfeae827dce896f650655bbf6e251ed49) commit,\n\t* [**11.0.0-M12**](https://github.com/apache/tomcat/releases/tag/11.0.0-M12) by [this](https://github.com/apache/tomcat/commit/9cdfe25bad707f34b3e5da2994f3f1952a163c3e) commit,\n* Apache Traffic Server\n\t* [**9.2.3-rc0**](https://github.com/apache/trafficserver/releases/tag/9.2.3-rc0) by [this](https://github.com/apache/trafficserver/commit/b28ad74f117307e8de206f1de70c3fa716f90682) commit,\n\t* [**8.1.9-rc0**](https://github.com/apache/trafficserver/releases/tag/8.1.9-rc0) by [this](https://github.com/apache/trafficserver/commit/d742d74039aaa548dda0148ab4ba207906abc620) commit,\n* Netty/Codec/HTTP2 [**4.1.100.Final**](https://mvnrepository.com/artifact/io.netty/netty-codec-http2/4.1.100.Final) by [this](https://github.com/netty/netty/commit/58f75f665aa81a8cbcf6ffa74820042a285c5e61) commit,\n* Eclipse Jetty\n\t* [**12.0.2**](https://github.com/jetty/jetty.project/releases/tag/jetty-12.0.2), [**11.0.17**](https://github.com/jetty/jetty.project/releases/tag/jetty-11.0.17), [**10.0.17**](https://github.com/jetty/jetty.project/releases/tag/jetty-10.0.17) by [this](https://github.com/jetty/jetty.project/commit/dbb94514dc9d3fb21fe92080f57c314e7e06a148) commit,\n\t* [**9.4.53.v20231009**](https://github.com/jetty/jetty.project/releases/tag/jetty-9.4.53.v20231009) by [this](https://github.com/jetty/jetty.project/commit/0f246d12090fb15b7b21dee8429f459fd792de53) commit.\n* lighttpd [**1.4.73**](https://github.com/lighttpd/lighttpd1.4/releases/tag/lighttpd-1.4.73) by [this](https://github.com/lighttpd/lighttpd1.4/commit/7b48f3c843e1113b27f5d278f4d10861cc499a06) commit.\n* grpc-go \n  * [**1.56.3**](https://github.com/grpc/grpc-go/releases/tag/v1.56.3) by [this](https://github.com/grpc/grpc-go/commit/5efd7bd7) commit,\n  * [**1.57.1**](https://github.com/grpc/grpc-go/releases/tag/v1.57.1) by [this](https://github.com/grpc/grpc-go/commit/6a1400d5) commit,\n  * [**1.58.3**](https://github.com/grpc/grpc-go/releases/tag/v1.58.3) by [this](https://github.com/grpc/grpc-go/commit/c40c9ba3) commit,\n * h2o fixed in the **master** branch by [this](https://github.com/h2o/h2o/commit/28fe15117b909588bf14269a0e1c6ec4548579fe) commit which is not yet included in any release.\n\n## Workaround\nDepending on technologies use and their configuration, different mitigation strategies may be available.\n\nIn some cases, it may be possible to limit the amount of `RST_STREAM` frame frames that are processed within a given time by configuring the particular HTTP/2 implementation manually. Please refer to your software vendor's advisories for more information.\n\n## Dependency tree\n- org.owasp.webgoat.lesson:xxe:v8.1.0:-maven\n    - com.github.tomakehurst:wiremock:2.8.0\n        - org.eclipse.jetty:jetty-servlet:9.4.24.v20191120\n            - org.eclipse.jetty:jetty-security:9.4.24.v20191120\n\n\n## References\n* Common Weakness Enumeration: [CWE-400](https://cwe.mitre.org/data/definitions/400.html)\n\n","text":"The HTTP/2 protocol contains a flaw related to the stream multiplexing feature that can allow for excessive resource consumption on servers operating implementations of the HTTP/2 protocol. \n\nThe HTTP/2 protocol allows clients to signal to a server to cancel a previously opened stream by sending an `RST_STREAM` frame. Attackers can abuse this stream canceling ability by opening a large number of streams at once immediately followed by `RST_STREAM` frames. In most HTTP/2 implementations this bypasses concurrent open stream limits and causes servers to spend processing time first handling request frames and then performing stream tear downs. For the server, these operations can pile up whereas the attacker client paid minuscule bandwidth and processing costs.\n\n[Amazon](https://aws.amazon.com/security/security-bulletins/AWS-2023-011/), [Cloudflare](https://blog.cloudflare.com/technical-breakdown-http2-rapid-reset-ddos-attack/) and [Google](https://cloud.google.com/blog/products/identity-security/google-cloud-mitigated-largest-ddos-attack-peaking-above-398-million-rps/) have reported that this vulnerability has been exploited in the wild from August to October 2023.\n\nThis vulnerability is listed as exploitable by the Cybersecurity \u0026 Infrastructure Security Agency in their [Known Exploited Vulnerabilities Catalog](https://www.cisa.gov/known-exploited-vulnerabilities-catalog)."},"properties":{"security-severity":"8.9","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-400"]},"defaultConfiguration":{"level":"error"}},{"id":"CVE-2020-27223 jetty-security 9.4.24.v20191120: wiremock 2.8.0: org.eclipse.jetty","shortDescription":{"text":"Transitive Dependency: jetty-security 9.4.24.v20191120 from wiremock 2.8.0 (CVE-2020-27223)"},"fullDescription":{"text":"Jetty is vulnerable to denial-of-service (DoS) due to the use of an exponential algorithm that can have excessive resource requirements. A remote attacker could cause a vulnerable server to become unresponsive by sending maliciously crafted HTTP requests to that server."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| jetty-security 9.4.24.v20191120  | 9.4.53.20231009  | 12.0.5 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/ee93672f-853c-4083-a5e8-0d5ab21e8bf9?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=d8221aaa-7d55-4b5a-b3e0-2b5cba26ce60)\n\n\n## Description\nJetty is vulnerable to denial-of-service (DoS) due to the use of an exponential algorithm that can have excessive resource requirements. A remote attacker could cause a vulnerable server to become unresponsive by sending maliciously crafted HTTP requests to that server.\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [CVE-2020-27223](https://openhub.net/vulnerabilities/bdsa/CVE-2020-27223) - Inefficient Algorithmic Complexity\n\n\n\n## Solution\nFixed by [this](https://github.com/eclipse/jetty.project/commit/10e531756b972162eed402c44d0244f7f6b85131) commit in:\n* [**11.0.1**](https://github.com/eclipse/jetty.project/releases/tag/jetty-11.0.1)\n* [**10.0.1**](https://github.com/eclipse/jetty.project/releases/tag/jetty-10.0.1)\n* [**9.4.37.v20210219**](https://github.com/eclipse/jetty.project/releases/tag/jetty-9.4.37.v20210219)\n\nThe latest stable releases are available [here](https://github.com/eclipse/jetty.project/releases).\n\n## Workaround\nThe vendor has stated that the following workarounds are effective:\n\n* Don't use the default error page or handler.\n* Don't deploy an instance of `StatisticsServlet` that is exposed to the network.\n* Don't call the `getLocale` API.\n* Don't enable precompressed static content in instances of `DefaultServlet`.\n* Deploy a rule that limits the number and size of `Accept-*` header fields.\n\n## Dependency tree\n- org.owasp.webgoat.lesson:xxe:v8.1.0:-maven\n    - com.github.tomakehurst:wiremock:2.8.0\n        - org.eclipse.jetty:jetty-servlet:9.4.24.v20191120\n            - org.eclipse.jetty:jetty-security:9.4.24.v20191120\n\n\n## References\n* Common Weakness Enumeration: [CWE-407](https://cwe.mitre.org/data/definitions/407.html)\n\n","text":"Jetty is vulnerable to denial-of-service (DoS) due to the use of an exponential algorithm that can have excessive resource requirements. A remote attacker could cause a vulnerable server to become unresponsive by sending maliciously crafted HTTP requests to that server."},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-407"]},"defaultConfiguration":{"level":"warning"}},{"id":"CVE-2021-28165 jetty-security 9.4.24.v20191120: wiremock 2.8.0: org.eclipse.jetty","shortDescription":{"text":"Transitive Dependency: jetty-security 9.4.24.v20191120 from wiremock 2.8.0 (CVE-2021-28165)"},"fullDescription":{"text":"Eclipse Jetty is vulnerable to Denial-of-Service (DoS) via invalid TLS frames. An attacker could exploit this by sending a TLS frame with a size in excess of 17408 resulting in excessive resource consumption leading to a DoS condition."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| jetty-security 9.4.24.v20191120  | 9.4.53.20231009  | 12.0.5 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/ee93672f-853c-4083-a5e8-0d5ab21e8bf9?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=d8221aaa-7d55-4b5a-b3e0-2b5cba26ce60)\n\n\n## Description\nEclipse Jetty is vulnerable to Denial-of-Service (DoS) via invalid TLS frames. An attacker could exploit this by sending a TLS frame with a size in excess of 17408 resulting in excessive resource consumption leading to a DoS condition.\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [CVE-2021-28165](https://openhub.net/vulnerabilities/bdsa/CVE-2021-28165) - Uncontrolled Resource Consumption\n\n\n\n## Solution\nFixed in [**10.0.2**](https://github.com/eclipse/jetty.project/releases/tag/jetty-10.0.2) and [**11.0.2**](https://github.com/eclipse/jetty.project/releases/tag/jetty-11.0.2) by [this](https://github.com/eclipse/jetty.project/commit/be22761a20a1685365c8e0356bf09b47e574cfd9) and [this](https://github.com/eclipse/jetty.project/commit/039c7386d0f3087d7c8aa19ea6001b24c95b9f16) commit.\nFixed in [**9.4.39.v20210325**](https://github.com/eclipse/jetty.project/releases/tag/jetty-9.4.39.v20210325) by [this](https://github.com/eclipse/jetty.project/commit/00d379c94ba865dced2025c2d1bc3e2e0e41e880) and [this](https://github.com/eclipse/jetty.project/commit/294b2ba02b667548617a94cd99592110ac230add) commit. \n\nThe latest stable releases are available [here](https://github.com/eclipse/jetty.project/releases).\n\n## Workaround\nThe problem can be worked around by compiling the following class:\n```\npackage org.eclipse.jetty.server.ssl.fix6072;\n\nimport java.nio.ByteBuffer;\nimport javax.net.ssl.SSLEngine;\nimport javax.net.ssl.SSLEngineResult;\nimport javax.net.ssl.SSLException;\nimport javax.net.ssl.SSLHandshakeException;\n\nimport org.eclipse.jetty.io.EndPoint;\nimport org.eclipse.jetty.io.ssl.SslConnection;\nimport org.eclipse.jetty.server.Connector;\nimport org.eclipse.jetty.server.SslConnectionFactory;\nimport org.eclipse.jetty.util.BufferUtil;\nimport org.eclipse.jetty.util.annotation.Name;\nimport org.eclipse.jetty.util.ssl.SslContextFactory;\n\npublic class SpaceCheckingSslConnectionFactory extends SslConnectionFactory\n{\n    public SpaceCheckingSslConnectionFactory(@Name(\"sslContextFactory\") SslContextFactory factory, @Name(\"next\") String nextProtocol)\n    {\n        super(factory, nextProtocol);\n    }\n\n    @Override\n    protected SslConnection newSslConnection(Connector connector, EndPoint endPoint, SSLEngine engine)\n    {\n        return new SslConnection(connector.getByteBufferPool(), connector.getExecutor(), endPoint, engine, isDirectBuffersForEncryption(), isDirectBuffersForDecryption())\n        {\n            @Override\n            protected SSLEngineResult unwrap(SSLEngine sslEngine, ByteBuffer input, ByteBuffer output) throws SSLException\n            {\n                SSLEngineResult results = super.unwrap(sslEngine, input, output);\n\n                if ((results.getStatus() == SSLEngineResult.Status.BUFFER_UNDERFLOW ||\n                    results.getStatus() == SSLEngineResult.Status.OK \u0026\u0026 results.bytesConsumed() == 0 \u0026\u0026 results.bytesProduced() == 0) \u0026\u0026\n                    BufferUtil.space(input) == 0)\n                {\n                    BufferUtil.clear(input);\n                    throw new SSLHandshakeException(\"Encrypted buffer max length exceeded\");\n                }\n                return results;\n            }\n        };\n    }\n}\n```\n\nThis class can be deployed by:\n* The resulting class file should be put into a jar file (eg `sslfix6072.jar`)\n* The jar file should be made available to the server. For a normal distribution this can be done by putting the file into `${jetty.base}/lib`\n* Copy the file `${jetty.home}/modules/ssl.mod` to `${jetty.base}/modules`\n* Edit the `${jetty.base}/modules/ssl.mod` file to have the following section:\n```\n[lib]\nlib/sslfix6072.jar\n```\n\n* Copy the file `${jetty.home}/etc/jetty-https.xml` and `${jetty.home}/etc/jetty-http2.xml` to `${jetty.base}/etc`\n* Edit files `${jetty.base}/etc/jetty-https.xml` and `${jetty.base}/etc/jetty-http2.xml`, changing any reference of `org.eclipse.jetty.server.SslConnectionFactory` to `org.eclipse.jetty.server.ssl.fix6072.SpaceCheckingSslConnectionFactory`. \n\nFor example:\n```\n  \u003cCall name=\"addIfAbsentConnectionFactory\"\u003e\n    \u003cArg\u003e\n      \u003cNew class=\"org.eclipse.jetty.server.ssl.fix6072.SpaceCheckingSslConnectionFactory\"\u003e\n        \u003cArg name=\"next\"\u003ehttp/1.1\u003c/Arg\u003e\n        \u003cArg name=\"sslContextFactory\"\u003e\u003cRef refid=\"sslContextFactory\"/\u003e\u003c/Arg\u003e\n      \u003c/New\u003e\n    \u003c/Arg\u003e\n  \u003c/Call\u003e\n```\nRestart Jetty\n\n## Dependency tree\n- org.owasp.webgoat.lesson:xxe:v8.1.0:-maven\n    - com.github.tomakehurst:wiremock:2.8.0\n        - org.eclipse.jetty:jetty-servlet:9.4.24.v20191120\n            - org.eclipse.jetty:jetty-security:9.4.24.v20191120\n\n\n## References\n* Common Weakness Enumeration: [CWE-400](https://cwe.mitre.org/data/definitions/400.html)\n\n","text":"Eclipse Jetty is vulnerable to Denial-of-Service (DoS) via invalid TLS frames. An attacker could exploit this by sending a TLS frame with a size in excess of 17408 resulting in excessive resource consumption leading to a DoS condition."},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-400"]},"defaultConfiguration":{"level":"warning"}},{"id":"CVE-2021-28169 jetty-security 9.4.24.v20191120: wiremock 2.8.0: org.eclipse.jetty","shortDescription":{"text":"Transitive Dependency: jetty-security 9.4.24.v20191120 from wiremock 2.8.0 (CVE-2021-28169)"},"fullDescription":{"text":"Jetty is vulnerable to information disclosure due to improper requested path verification. This allows crafted requests to access protected resources of the web application which, depending on the implementation, might reveal sensitive information."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| jetty-security 9.4.24.v20191120  | 9.4.53.20231009  | 12.0.5 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/ee93672f-853c-4083-a5e8-0d5ab21e8bf9?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=d8221aaa-7d55-4b5a-b3e0-2b5cba26ce60)\n\n\n## Description\nJetty is vulnerable to information disclosure due to improper requested path verification. This allows crafted requests to access protected resources of the web application which, depending on the implementation, might reveal sensitive information.\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [CVE-2021-28169](https://openhub.net/vulnerabilities/bdsa/CVE-2021-28169) - Directory Traversal\n\n\n\n## Solution\nFixed in [**9.4.41**](https://github.com/eclipse/jetty.project/releases/tag/jetty-9.4.41.v20210512) by [this](https://github.com/eclipse/jetty.project/commit/1c05b0bcb1) commit.\n\nFixed in [**10.0.3**](https://github.com/eclipse/jetty.project/releases/tag/jetty-10.0.3) and [**11.0.3**](https://github.com/eclipse/jetty.project/releases/tag/jetty-11.0.3) by [this](https://github.com/eclipse/jetty.project/commit/f58dbedcd0) commit.\n\nThe latest stable releases are available [here](https://www.eclipse.org/jetty/download.php).\n\n## Workaround\nThe vendor provides the following workaround:\n\nIf you cannot update to the latest version of Jetty, you can instead deploy your own version of the `ConcatServlet` and/or the `WelcomeFilter` by using the code from the latest version of Jetty.\n\n## Dependency tree\n- org.owasp.webgoat.lesson:xxe:v8.1.0:-maven\n    - com.github.tomakehurst:wiremock:2.8.0\n        - org.eclipse.jetty:jetty-servlet:9.4.24.v20191120\n            - org.eclipse.jetty:jetty-security:9.4.24.v20191120\n\n\n## References\n* Common Weakness Enumeration: [CWE-22](https://cwe.mitre.org/data/definitions/22.html)\n\n","text":"Jetty is vulnerable to information disclosure due to improper requested path verification. This allows crafted requests to access protected resources of the web application which, depending on the implementation, might reveal sensitive information."},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-22"]},"defaultConfiguration":{"level":"warning"}},{"id":"CVE-2023-36478 jetty-security 9.4.24.v20191120: wiremock 2.8.0: org.eclipse.jetty","shortDescription":{"text":"Transitive Dependency: jetty-security 9.4.24.v20191120 from wiremock 2.8.0 (CVE-2023-36478)"},"fullDescription":{"text":"Eclipse Jetty is vulnerable to a denial-of-service (DoS) issue due to presence of a user input validation flaw in the HTTP/2 HPACK functionality that can lead to an integer overflow and allow HPACK headers to exceed their expected size limits.\n\nAn attacker could submit crafted HTTP messages that trigger the integer overflow flaw and cause large buffers to be allocated on the server, consuming memory resources in a manner that could cause the server to run out of memory."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| jetty-security 9.4.24.v20191120  | 9.4.53.20231009  | 12.0.5 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/ee93672f-853c-4083-a5e8-0d5ab21e8bf9?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=d8221aaa-7d55-4b5a-b3e0-2b5cba26ce60)\n\n\n## Description\nEclipse Jetty is vulnerable to a denial-of-service (DoS) issue due to presence of a user input validation flaw in the HTTP/2 HPACK functionality that can lead to an integer overflow and allow HPACK headers to exceed their expected size limits.\n\nAn attacker could submit crafted HTTP messages that trigger the integer overflow flaw and cause large buffers to be allocated on the server, consuming memory resources in a manner that could cause the server to run out of memory.\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [CVE-2023-36478](https://openhub.net/vulnerabilities/bdsa/CVE-2023-36478) - Integer Overflow / Underflow\n\n\n\n## Solution\nFixed in:\n* [**9.4.53.v20231009**](https://github.com/jetty/jetty.project/releases/tag/jetty-9.4.53.v20231009) by [this](https://github.com/jetty/jetty.project/commit/c7a4b05fc735e73e7522cb617c079045b709957b) commit and [this](https://github.com/jetty/jetty.project/commit/a4d61e9eb026ec98c79107e840cabdf520482c56) commit,\n* [**10.0.16**](https://github.com/jetty/jetty.project/releases/tag/jetty-10.0.16), [**11.0.16**](https://github.com/jetty/jetty.project/releases/tag/jetty-11.0.16) and [**12.0.0.beta2x**](https://github.com/jetty/jetty.project/releases/tag/jetty-12.0.0.beta2x) by [this](https://github.com/jetty/jetty.project/commit/a8c9eea75bffcb2b2557acefb75856707654a56f) commit and [this](https://github.com/jetty/jetty.project/commit/420ec7cc1db65b42693dc002aca0faa567f62f7e) commit.\n\nThe latest stable releases can be found [here](https://eclipse.dev/jetty/download.php).\n\n\n\n## Dependency tree\n- org.owasp.webgoat.lesson:xxe:v8.1.0:-maven\n    - com.github.tomakehurst:wiremock:2.8.0\n        - org.eclipse.jetty:jetty-servlet:9.4.24.v20191120\n            - org.eclipse.jetty:jetty-security:9.4.24.v20191120\n\n\n## References\n* Common Weakness Enumeration: [CWE-190](https://cwe.mitre.org/data/definitions/190.html)\n* Common Weakness Enumeration: [CWE-400](https://cwe.mitre.org/data/definitions/400.html)\n\n","text":"Eclipse Jetty is vulnerable to a denial-of-service (DoS) issue due to presence of a user input validation flaw in the HTTP/2 HPACK functionality that can lead to an integer overflow and allow HPACK headers to exceed their expected size limits.\n\nAn attacker could submit crafted HTTP messages that trigger the integer overflow flaw and cause large buffers to be allocated on the server, consuming memory resources in a manner that could cause the server to run out of memory."},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-190","external/cwe/cwe-400"]},"defaultConfiguration":{"level":"warning"}},{"id":"CVE-2022-2048 jetty-security 9.4.24.v20191120: wiremock 2.8.0: org.eclipse.jetty","shortDescription":{"text":"Transitive Dependency: jetty-security 9.4.24.v20191120 from wiremock 2.8.0 (CVE-2022-2048)"},"fullDescription":{"text":"Eclipse Jetty does not correctly handle invalid HTTP/2 requests. An attacker could exploit this flaw to exhaust the HTTP/2 flow control window or TCP congest the connection. This will cause the relevant selector threads to be blocked and it will lead to a denial-of-service (DoS)."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| jetty-security 9.4.24.v20191120  | 9.4.53.20231009  | 12.0.5 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/ee93672f-853c-4083-a5e8-0d5ab21e8bf9?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=d8221aaa-7d55-4b5a-b3e0-2b5cba26ce60)\n\n\n## Description\nEclipse Jetty does not correctly handle invalid HTTP/2 requests. An attacker could exploit this flaw to exhaust the HTTP/2 flow control window or TCP congest the connection. This will cause the relevant selector threads to be blocked and it will lead to a denial-of-service (DoS).\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [CVE-2022-2048](https://openhub.net/vulnerabilities/bdsa/CVE-2022-2048) - Insufficient Resource Pool\n\n\n\n## Solution\nFixed in:\n* **[9.4.47](https://github.com/eclipse/jetty.project/releases/tag/jetty-9.4.47.v20220610)** by [this](https://github.com/eclipse/jetty.project/commit/be912d4315839405a8ae601f2e4ee0306867266e) commit,\n* **[10.0.10](https://github.com/eclipse/jetty.project/releases/tag/jetty-10.0.10)** and **[11.0.10](https://github.com/eclipse/jetty.project/releases/tag/jetty-11.0.10)** by [this](https://github.com/eclipse/jetty.project/commit/b705091afb9158b39590fa36b9b84795524a8f0b) commit.\n\n\nThe latest stable releases can be found [here](https://github.com/eclipse/jetty.project/releases).\n\n## Workaround\nThe vendor recommends users to filter the requests before they are sent to Jetty. One way to filter them would be to use a proxy.\n\n## Dependency tree\n- org.owasp.webgoat.lesson:xxe:v8.1.0:-maven\n    - com.github.tomakehurst:wiremock:2.8.0\n        - org.eclipse.jetty:jetty-servlet:9.4.24.v20191120\n            - org.eclipse.jetty:jetty-security:9.4.24.v20191120\n\n\n## References\n* Common Weakness Enumeration: [CWE-410](https://cwe.mitre.org/data/definitions/410.html)\n* Common Weakness Enumeration: [CWE-664](https://cwe.mitre.org/data/definitions/664.html)\n\n","text":"Eclipse Jetty does not correctly handle invalid HTTP/2 requests. An attacker could exploit this flaw to exhaust the HTTP/2 flow control window or TCP congest the connection. This will cause the relevant selector threads to be blocked and it will lead to a denial-of-service (DoS)."},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-410","external/cwe/cwe-664"]},"defaultConfiguration":{"level":"warning"}},{"id":"CVE-2020-27218 jetty-security 9.4.24.v20191120: wiremock 2.8.0: org.eclipse.jetty","shortDescription":{"text":"Transitive Dependency: jetty-security 9.4.24.v20191120 from wiremock 2.8.0 (CVE-2020-27218)"},"fullDescription":{"text":"Eclipse Jetty contains a vulnerability that allows a remote attacker to inject data into other client's requests. This vulnerability only exists when GZIP request body inflation is enabled, and requests from different clients are multiplexed onto a single connection."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| jetty-security 9.4.24.v20191120  | 9.4.53.20231009  | 12.0.5 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/ee93672f-853c-4083-a5e8-0d5ab21e8bf9?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=d8221aaa-7d55-4b5a-b3e0-2b5cba26ce60)\n\n\n## Description\nEclipse Jetty contains a vulnerability that allows a remote attacker to inject data into other client's requests. This vulnerability only exists when GZIP request body inflation is enabled, and requests from different clients are multiplexed onto a single connection.\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [CVE-2020-27218](https://openhub.net/vulnerabilities/bdsa/CVE-2020-27218) - Sensitive Information in Resource Not Removed Before Reuse\n\n\n\n## Solution\nFixed in **[9.4.35.v20201120](https://github.com/eclipse/jetty.project/releases/tag/jetty-9.4.35.v20201120)** by [this](https://github.com/eclipse/jetty.project/commit/850a0330ff25da42b1b1cbdbdca0fcc0c40e47e9) commit.\n\nFixed in **[10.0.0.beta3](https://github.com/eclipse/jetty.project/releases/tag/jetty-10.0.0.beta3)** and in **[11.0.0.beta3](https://github.com/eclipse/jetty.project/releases/tag/jetty-11.0.0.beta3)** by [this](https://github.com/eclipse/jetty.project/commit/34d27e85483c119b7dd1aa9beda735844d14b605) commit.\n\n## Workaround\nThe vendor states that any of the following will mitigate this vulnerability:\n\n\n\u003e * Disabling compressed request body inflation by GzipHandler.\n\u003e * By always fully consuming the request content before sending a response.\n\u003e * By adding a Connection: close to any response where the servlet does not fully consume request content.\n\n## Dependency tree\n- org.owasp.webgoat.lesson:xxe:v8.1.0:-maven\n    - com.github.tomakehurst:wiremock:2.8.0\n        - org.eclipse.jetty:jetty-servlet:9.4.24.v20191120\n            - org.eclipse.jetty:jetty-security:9.4.24.v20191120\n\n\n## References\n* Common Weakness Enumeration: [CWE-226](https://cwe.mitre.org/data/definitions/226.html)\n\n","text":"Eclipse Jetty contains a vulnerability that allows a remote attacker to inject data into other client's requests. This vulnerability only exists when GZIP request body inflation is enabled, and requests from different clients are multiplexed onto a single connection."},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-226"]},"defaultConfiguration":{"level":"warning"}},{"id":"CVE-2023-26048 jetty-security 9.4.24.v20191120: wiremock 2.8.0: org.eclipse.jetty","shortDescription":{"text":"Transitive Dependency: jetty-security 9.4.24.v20191120 from wiremock 2.8.0 (CVE-2023-26048)"},"fullDescription":{"text":"Eclipse Jetty contains a vulnerability in its multipart request parsing mechanism that can lead to an out-of-memory error due to insufficient limiting measures. An attacker can exploit this flaw by supplying a request containing a large multipart without a filename in order to cause a denial-of-service (DoS)."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| jetty-security 9.4.24.v20191120  | 9.4.53.20231009  | 12.0.5 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/ee93672f-853c-4083-a5e8-0d5ab21e8bf9?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=d8221aaa-7d55-4b5a-b3e0-2b5cba26ce60)\n\n\n## Description\nEclipse Jetty contains a vulnerability in its multipart request parsing mechanism that can lead to an out-of-memory error due to insufficient limiting measures. An attacker can exploit this flaw by supplying a request containing a large multipart without a filename in order to cause a denial-of-service (DoS).\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [CVE-2023-26048](https://openhub.net/vulnerabilities/bdsa/CVE-2023-26048) - Uncontrolled Resource Consumption\n\n\n\n## Solution\nFixed in [**jetty-9.4.51.v20230217**](https://github.com/eclipse/jetty.project/releases/tag/jetty-9.4.51.v20230217) by [this](https://github.com/eclipse/jetty.project/commit/c3021592218da289563987e6f7fbe05f8704b285) commit.\n\nFixed by [this](https://github.com/eclipse/jetty.project/commit/622befbd0d52f61c1acd41b4ef12458311494f1a) commit in:\n* **[jetty-10.0.14](https://github.com/eclipse/jetty.project/releases/tag/jetty-10.0.14)**\n* **[jetty-11.0.14](https://github.com/eclipse/jetty.project/releases/tag/jetty-11.0.14)**\n* **[jetty-12.0.0.beta0](https://github.com/eclipse/jetty.project/releases/tag/jetty-12.0.0.beta0)**\n\nThe latest stable releases can be found [here](https://github.com/eclipse/jetty.project/releases).\n\n## Workaround\nIt is recommended to set the multipart parameter `maxRequestSize` to a non-negative value in order to limit the whole multipart content. It has also been stated that limiting the multipart parameter `maxFileSize` will not be enough since the attacker can supply a large number of parts that, when summed up, will cause memory issues.\n\n## Dependency tree\n- org.owasp.webgoat.lesson:xxe:v8.1.0:-maven\n    - com.github.tomakehurst:wiremock:2.8.0\n        - org.eclipse.jetty:jetty-servlet:9.4.24.v20191120\n            - org.eclipse.jetty:jetty-security:9.4.24.v20191120\n\n\n## References\n* Common Weakness Enumeration: [CWE-400](https://cwe.mitre.org/data/definitions/400.html)\n* Common Weakness Enumeration: [CWE-770](https://cwe.mitre.org/data/definitions/770.html)\n\n","text":"Eclipse Jetty contains a vulnerability in its multipart request parsing mechanism that can lead to an out-of-memory error due to insufficient limiting measures. An attacker can exploit this flaw by supplying a request containing a large multipart without a filename in order to cause a denial-of-service (DoS)."},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-400","external/cwe/cwe-770"]},"defaultConfiguration":{"level":"warning"}},{"id":"CVE-2023-26049 jetty-security 9.4.24.v20191120: wiremock 2.8.0: org.eclipse.jetty","shortDescription":{"text":"Transitive Dependency: jetty-security 9.4.24.v20191120 from wiremock 2.8.0 (CVE-2023-26049)"},"fullDescription":{"text":"Eclipse Jetty does not properly parse quoted values in cookies. This could allow an attacker to smuggle cookies within other cookies into the application. The attacker can also tamper with the cookie parsing mechanism and cause other unintended behavior."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| jetty-security 9.4.24.v20191120  | 9.4.53.20231009  | 12.0.5 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/ee93672f-853c-4083-a5e8-0d5ab21e8bf9?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=d8221aaa-7d55-4b5a-b3e0-2b5cba26ce60)\n\n\n## Description\nEclipse Jetty does not properly parse quoted values in cookies. This could allow an attacker to smuggle cookies within other cookies into the application. The attacker can also tamper with the cookie parsing mechanism and cause other unintended behavior.\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [CVE-2023-26049](https://openhub.net/vulnerabilities/bdsa/CVE-2023-26049) - Weak Input Validation\n\n\n\n## Solution\nFixed in version [**jetty-9.4.51.v20230217**](https://github.com/eclipse/jetty.project/releases/tag/jetty-9.4.51.v20230217) by [this](https://github.com/eclipse/jetty.project/commit/1be1401bafb4c46fae3c234c8e93743a661dcf21) commit.\n\nFixed by [this](https://github.com/eclipse/jetty.project/commit/7b8c2c1bf081c7f408e5da3371c8c3c9802f09fd) commit in:\n* [**jetty-10.0.14**](https://github.com/eclipse/jetty.project/releases/tag/jetty-10.0.14)\n* [**jetty-11.0.14**](https://github.com/eclipse/jetty.project/releases/tag/jetty-11.0.14)\n* [**jetty-12.0.0.beta0**](https://github.com/eclipse/jetty.project/releases/tag/jetty-12.0.0.beta0)\n\nThe latest stable releases can be found [here](https://github.com/eclipse/jetty.project/releases).\n\n\n\n## Dependency tree\n- org.owasp.webgoat.lesson:xxe:v8.1.0:-maven\n    - com.github.tomakehurst:wiremock:2.8.0\n        - org.eclipse.jetty:jetty-servlet:9.4.24.v20191120\n            - org.eclipse.jetty:jetty-security:9.4.24.v20191120\n\n\n## References\n* Common Weakness Enumeration: [CWE-20](https://cwe.mitre.org/data/definitions/20.html)\n\n","text":"Eclipse Jetty does not properly parse quoted values in cookies. This could allow an attacker to smuggle cookies within other cookies into the application. The attacker can also tamper with the cookie parsing mechanism and cause other unintended behavior."},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-20"]},"defaultConfiguration":{"level":"warning"}},{"id":"CVE-2023-40167 jetty-security 9.4.24.v20191120: wiremock 2.8.0: org.eclipse.jetty","shortDescription":{"text":"Transitive Dependency: jetty-security 9.4.24.v20191120 from wiremock 2.8.0 (CVE-2023-40167)"},"fullDescription":{"text":"Eclipse Jetty is vulnerable to HTTP request smuggling due to the improper parsing of HTTP requests. An attacker could exploit this vulnerability by sending maliciously crafted HTTP requests to a vulnerable endpoint with multiple requests included inside the body by manipulating the `Content-Length` of the request. The smuggling of HTTP requests may allow for the bypass of security tools such as web application firewalls (WAFs) and intrusion detection systems (IDSs)."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| jetty-security 9.4.24.v20191120  | 9.4.53.20231009  | 12.0.5 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/ee93672f-853c-4083-a5e8-0d5ab21e8bf9?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=d8221aaa-7d55-4b5a-b3e0-2b5cba26ce60)\n\n\n## Description\nEclipse Jetty is vulnerable to HTTP request smuggling due to the improper parsing of HTTP requests. An attacker could exploit this vulnerability by sending maliciously crafted HTTP requests to a vulnerable endpoint with multiple requests included inside the body by manipulating the `Content-Length` of the request. The smuggling of HTTP requests may allow for the bypass of security tools such as web application firewalls (WAFs) and intrusion detection systems (IDSs).\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [CVE-2023-40167](https://openhub.net/vulnerabilities/bdsa/CVE-2023-40167) - Improper Handling of Length Parameter Inconsistency\n\n\n\n## Solution\nFixed in versions:\n* [**12.0.1**](https://github.com/eclipse/jetty.project/releases/tag/jetty-12.0.1) by [this](https://github.com/eclipse/jetty.project/commit/13cf2dade746e5d3bb123fd7ecd9fdc28fc43082) commit.\n* [**11.0.16**](https://github.com/eclipse/jetty.project/releases/tag/jetty-11.0.16) and [**10.0.16**](https://github.com/eclipse/jetty.project/releases/tag/jetty-10.0.16) by [this](https://github.com/eclipse/jetty.project/commit/003e46cae4d71e147d51fb8ea378e8989d381cc3) commit.\n* [**9.4.52.v20230823**](https://github.com/eclipse/jetty.project/releases/tag/jetty-9.4.52.v20230823) by [this](https://github.com/eclipse/jetty.project/commit/e4d596eafc887bcd813ae6e28295b5ce327def47) commit.\n\nThe latest stable releases can be found [here](https://eclipse.dev/jetty/download.php).\n\n\n\n## Dependency tree\n- org.owasp.webgoat.lesson:xxe:v8.1.0:-maven\n    - com.github.tomakehurst:wiremock:2.8.0\n        - org.eclipse.jetty:jetty-servlet:9.4.24.v20191120\n            - org.eclipse.jetty:jetty-security:9.4.24.v20191120\n\n\n## References\n* Common Weakness Enumeration: [CWE-130](https://cwe.mitre.org/data/definitions/130.html)\n\n","text":"Eclipse Jetty is vulnerable to HTTP request smuggling due to the improper parsing of HTTP requests. An attacker could exploit this vulnerability by sending maliciously crafted HTTP requests to a vulnerable endpoint with multiple requests included inside the body by manipulating the `Content-Length` of the request. The smuggling of HTTP requests may allow for the bypass of security tools such as web application firewalls (WAFs) and intrusion detection systems (IDSs)."},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-130"]},"defaultConfiguration":{"level":"warning"}},{"id":"CVE-2023-36479 jetty-security 9.4.24.v20191120: wiremock 2.8.0: org.eclipse.jetty","shortDescription":{"text":"Transitive Dependency: jetty-security 9.4.24.v20191120 from wiremock 2.8.0 (CVE-2023-36479)"},"fullDescription":{"text":"Eclipse Jetty contains an improper neutralization of quoting syntax issue within the CGI servlet. This could allow an authenticated attacker to send a request to the CGI Servlet for a binary with a space in its name in order to manipulate the command structure and execute incorrect commands."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| jetty-security 9.4.24.v20191120  | 9.4.53.20231009  | 12.0.5 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/ee93672f-853c-4083-a5e8-0d5ab21e8bf9?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=d8221aaa-7d55-4b5a-b3e0-2b5cba26ce60)\n\n\n## Description\nEclipse Jetty contains an improper neutralization of quoting syntax issue within the CGI servlet. This could allow an authenticated attacker to send a request to the CGI Servlet for a binary with a space in its name in order to manipulate the command structure and execute incorrect commands.\n\n## Vulnerabilities(BDSA,CVE)\n:large_blue_circle: [CVE-2023-36479](https://openhub.net/vulnerabilities/bdsa/CVE-2023-36479) - Improper Neutralization of Quoting Syntax\n\n\n\n## Solution\nFixed in versions:\n* [**12.0.0.beta1**](https://github.com/eclipse/jetty.project/releases/tag/jetty-12.0.0.beta1) by [this](https://github.com/eclipse/jetty.project/commit/6ce5a0fbcdf06ae647dfd304dd81a1f9b0691a5c) commit.\n* [**11.0.16**](https://github.com/eclipse/jetty.project/releases/tag/jetty-11.0.16) and [**10.0.16**](https://github.com/eclipse/jetty.project/releases/tag/jetty-10.0.16) by [this](https://github.com/eclipse/jetty.project/commit/c29491e5ac70c98e4d7d7dff2a6465ddecc45c0c) commit.\n* [**9.4.52.v20230823**](https://github.com/eclipse/jetty.project/releases/tag/jetty-9.4.52.v20230823) by [this](https://github.com/eclipse/jetty.project/commit/ec7e1fd173481e526db4092f558aa2b5aab57580) commit.\n\nThe latest stable releases can be found [here](https://eclipse.dev/jetty/download.php).\n\n## Workaround\nThe vendor has issued the following workaround:\n\n\u003e The` org.eclipse.jetty.servlets.CGI` Servlet should not be used. Fast CGI support is available instead.\n\n## Dependency tree\n- org.owasp.webgoat.lesson:xxe:v8.1.0:-maven\n    - com.github.tomakehurst:wiremock:2.8.0\n        - org.eclipse.jetty:jetty-servlet:9.4.24.v20191120\n            - org.eclipse.jetty:jetty-security:9.4.24.v20191120\n\n\n## References\n* Common Weakness Enumeration: [CWE-149](https://cwe.mitre.org/data/definitions/149.html)\n\n","text":"Eclipse Jetty contains an improper neutralization of quoting syntax issue within the CGI servlet. This could allow an authenticated attacker to send a request to the CGI Servlet for a binary with a space in its name in order to manipulate the command structure and execute incorrect commands."},"properties":{"security-severity":"3.8","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-149"]},"defaultConfiguration":{"level":"note"}},{"id":"CVE-2023-41900 jetty-security 9.4.24.v20191120: wiremock 2.8.0: org.eclipse.jetty","shortDescription":{"text":"Transitive Dependency: jetty-security 9.4.24.v20191120 from wiremock 2.8.0 (CVE-2023-41900)"},"fullDescription":{"text":"Eclipse Jetty contains an improper authentication vulnerability. This could allow an authenticated attacker to bypass authentication after it has been rejected or revoked by the `LoginService` and make a request as if authenticated.\n\n**Note:** The vendor has stated that this issue impacts usages of the `jetty-openid` which have configured a nested `LoginService` and where that `LoginService` is capable of rejecting previously authenticated users."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| jetty-security 9.4.24.v20191120  | 9.4.53.20231009  | 12.0.5 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/ee93672f-853c-4083-a5e8-0d5ab21e8bf9?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=d8221aaa-7d55-4b5a-b3e0-2b5cba26ce60)\n\n\n## Description\nEclipse Jetty contains an improper authentication vulnerability. This could allow an authenticated attacker to bypass authentication after it has been rejected or revoked by the `LoginService` and make a request as if authenticated.\n\n**Note:** The vendor has stated that this issue impacts usages of the `jetty-openid` which have configured a nested `LoginService` and where that `LoginService` is capable of rejecting previously authenticated users.\n\n## Vulnerabilities(BDSA,CVE)\n:large_blue_circle: [CVE-2023-41900](https://openhub.net/vulnerabilities/bdsa/CVE-2023-41900) - Improper Authentication\n\n\n\n## Solution\nFixed in version [**11.0.15**](https://github.com/eclipse/jetty.project/releases/tag/jetty-11.0.15) and [**10.0.15**](https://github.com/eclipse/jetty.project/releases/tag/jetty-10.0.15) by [this](https://github.com/eclipse/jetty.project/commit/24b7d06fd5ce5468caa3eaa93688879fb2900fda) commit and in [**9.4.52.v20230823**](https://github.com/eclipse/jetty.project/releases/tag/jetty-9.4.52.v20230823) by [this](https://github.com/eclipse/jetty.project/commit/5f48b4170f36b275e1576548b44bd5009feba669) commit.\n\nThe latest stable releases can be found [here](https://eclipse.dev/jetty/download.php).\n\n\n\n## Dependency tree\n- org.owasp.webgoat.lesson:xxe:v8.1.0:-maven\n    - com.github.tomakehurst:wiremock:2.8.0\n        - org.eclipse.jetty:jetty-servlet:9.4.24.v20191120\n            - org.eclipse.jetty:jetty-security:9.4.24.v20191120\n\n\n## References\n* Common Weakness Enumeration: [CWE-287](https://cwe.mitre.org/data/definitions/287.html)\n\n","text":"Eclipse Jetty contains an improper authentication vulnerability. This could allow an authenticated attacker to bypass authentication after it has been rejected or revoked by the `LoginService` and make a request as if authenticated.\n\n**Note:** The vendor has stated that this issue impacts usages of the `jetty-openid` which have configured a nested `LoginService` and where that `LoginService` is capable of rejecting previously authenticated users."},"properties":{"security-severity":"3.8","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-287"]},"defaultConfiguration":{"level":"note"}},{"id":"CVE-2021-34428 jetty-security 9.4.24.v20191120: wiremock 2.8.0: org.eclipse.jetty","shortDescription":{"text":"Transitive Dependency: jetty-security 9.4.24.v20191120 from wiremock 2.8.0 (CVE-2021-34428)"},"fullDescription":{"text":"Eclipse Jetty is vulnerable to insufficient session expiry. This may result in sessions used on a shared computer persisting for longer than intended."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| jetty-security 9.4.24.v20191120  | 9.4.53.20231009  | 12.0.5 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/ee93672f-853c-4083-a5e8-0d5ab21e8bf9?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=d8221aaa-7d55-4b5a-b3e0-2b5cba26ce60)\n\n\n## Description\nEclipse Jetty is vulnerable to insufficient session expiry. This may result in sessions used on a shared computer persisting for longer than intended.\n\n## Vulnerabilities(BDSA,CVE)\n:large_blue_circle: [CVE-2021-34428](https://openhub.net/vulnerabilities/bdsa/CVE-2021-34428) - Insufficient Session Expiration\n\n\n\n## Solution\nFixed in:\n* [**9.4.41.v20210516**](https://github.com/eclipse/jetty.project/releases/tag/jetty-9.4.41.v20210516) by [this](https://github.com/eclipse/jetty.project/commit/087f486b4461746b4ded45833887b3ccb136ee85) commit, \n* [**10.0.3**](https://github.com/eclipse/jetty.project/releases/tag/jetty-10.0.3) by [this](https://github.com/eclipse/jetty.project/commit/cd6462a6252d083b3c9ea2684aab0b4c9669ed19) commit, \n* [**11.0.3**](https://github.com/eclipse/jetty.project/releases/tag/jetty-11.0.3) by [this](https://github.com/eclipse/jetty.project/commit/cd6462a6252d083b3c9ea2684aab0b4c9669ed19) commit.\n\nThe latest stable releases are available [here](https://github.com/eclipse/jetty.project/releases).\n\n## Workaround\nThe vendor has [stated](https://github.com/eclipse/jetty.project/security/advisories/GHSA-m6cp-vxjx-65j6) that a workaround is to ensure that the application catches all Throwables within their `SessionListener#sessionDestroyed()` implementations.\n\n## Dependency tree\n- org.owasp.webgoat.lesson:xxe:v8.1.0:-maven\n    - com.github.tomakehurst:wiremock:2.8.0\n        - org.eclipse.jetty:jetty-servlet:9.4.24.v20191120\n            - org.eclipse.jetty:jetty-security:9.4.24.v20191120\n\n\n## References\n* Common Weakness Enumeration: [CWE-613](https://cwe.mitre.org/data/definitions/613.html)\n\n","text":"Eclipse Jetty is vulnerable to insufficient session expiry. This may result in sessions used on a shared computer persisting for longer than intended."},"properties":{"security-severity":"3.8","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-613"]},"defaultConfiguration":{"level":"note"}},{"id":"CVE-2022-2047 jetty-security 9.4.24.v20191120: wiremock 2.8.0: org.eclipse.jetty","shortDescription":{"text":"Transitive Dependency: jetty-security 9.4.24.v20191120 from wiremock 2.8.0 (CVE-2022-2047)"},"fullDescription":{"text":"Eclipse Jetty does not correctly handle invalid authority segments of HTTP URIs. An authenticated attacker could exploit this flaw by passing an invalid URI that contains an improper authority with no host so that it is interpreted as one with a host."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| jetty-security 9.4.24.v20191120  | 9.4.53.20231009  | 12.0.5 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/ee93672f-853c-4083-a5e8-0d5ab21e8bf9?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=d8221aaa-7d55-4b5a-b3e0-2b5cba26ce60)\n\n\n## Description\nEclipse Jetty does not correctly handle invalid authority segments of HTTP URIs. An authenticated attacker could exploit this flaw by passing an invalid URI that contains an improper authority with no host so that it is interpreted as one with a host.\n\n## Vulnerabilities(BDSA,CVE)\n:large_blue_circle: [CVE-2022-2047](https://openhub.net/vulnerabilities/bdsa/CVE-2022-2047) - Weak Input Validation\n\n\n\n## Solution\nFixed in versions:\n* [**9.4.47**](https://github.com/eclipse/jetty.project/releases/tag/jetty-9.4.47.v20220610) by [this](https://github.com/eclipse/jetty.project/commit/4ca8afbbd667c19a084d5ff14a4f08eb7049d1c7) commit.\n* [**10.0.10**](https://github.com/eclipse/jetty.project/releases/tag/jetty-10.0.10) and [**11.0.10**](https://github.com/eclipse/jetty.project/releases/tag/jetty-11.0.10) by [this](https://github.com/eclipse/jetty.project/commit/d1e64f469362bb9371d530cccded5ecb13fa1cb5) commit.\n\nThe latest stable releases can be found [here](https://github.com/eclipse/jetty.project/releases).\n\n\n\n## Dependency tree\n- org.owasp.webgoat.lesson:xxe:v8.1.0:-maven\n    - com.github.tomakehurst:wiremock:2.8.0\n        - org.eclipse.jetty:jetty-servlet:9.4.24.v20191120\n            - org.eclipse.jetty:jetty-security:9.4.24.v20191120\n\n\n## References\n* Common Weakness Enumeration: [CWE-20](https://cwe.mitre.org/data/definitions/20.html)\n\n","text":"Eclipse Jetty does not correctly handle invalid authority segments of HTTP URIs. An authenticated attacker could exploit this flaw by passing an invalid URI that contains an improper authority with no host so that it is interpreted as one with a host."},"properties":{"security-severity":"3.8","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-20"]},"defaultConfiguration":{"level":"note"}},{"id":"BDSA-2022-3109 spring-security-test 5.2.1.RELEASE: org.springframework.security","shortDescription":{"text":"Direct Dependency: spring-security-test 5.2.1.RELEASE (BDSA-2022-3109)"},"fullDescription":{"text":"Spring Security contains a flaw when dealing with OAuth2 access token empty scope list  responses. A remote attacker could leverage this to escalate their privileges under **all** the following conditions being met:\n\n* They act as the role of a Login Client (e.g. uses `http.oauth2Login()`).\n* They use one or more authorization rules with authorities mapped from authorized scopes (e.g. `anyRequest().hasAuthority(\"SCOPE_message.write\")`) in the client application.\n* An authorization server that responds with empty scopes list is registered (RFC 6749, Section 5.1).\n\n**Note:** The role of Resource Servers (`http.oauth2ResourceServer()`) and applications that do not map authorization rules from authorized scopes (eg. `anyRequest().hasAuthority(\"ROLE_USER\")`) cannot be exploited by this vulnerability."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| spring-security-test 5.2.1.RELEASE  | 5.8.9  | 6.2.1 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/bfe44ed0-0640-4faa-92fc-2c894ff23018?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=d80c013b-7862-4ea8-83e5-eb7b91623e0c)\n\n\n## Description\nSpring Security contains a flaw when dealing with OAuth2 access token empty scope list  responses. A remote attacker could leverage this to escalate their privileges under **all** the following conditions being met:\n\n* They act as the role of a Login Client (e.g. uses `http.oauth2Login()`).\n* They use one or more authorization rules with authorities mapped from authorized scopes (e.g. `anyRequest().hasAuthority(\"SCOPE_message.write\")`) in the client application.\n* An authorization server that responds with empty scopes list is registered (RFC 6749, Section 5.1).\n\n**Note:** The role of Resource Servers (`http.oauth2ResourceServer()`) and applications that do not map authorization rules from authorized scopes (eg. `anyRequest().hasAuthority(\"ROLE_USER\")`) cannot be exploited by this vulnerability.\n\n## Vulnerabilities(BDSA,CVE)\n:orange_circle: [BDSA-2022-3109](https://openhub.net/vulnerabilities/bdsa/BDSA-2022-3109) - Missing or Broken Authorization Mechanism\n\n\n\n## Solution\nFixed in versions [**5.7.5**](https://github.com/spring-projects/spring-security/releases/tag/5.7.5) and [**5.6.9**](https://github.com/spring-projects/spring-security/releases/tag/5.6.9) by [this](https://github.com/spring-projects/spring-security/commit/75004587a419a96d18909030b20c6b16b226ecbe) commit..\n\nThe latest releases can be found [here](https://github.com/spring-projects/spring-security/tags).\n\n\n\n\n\n## References\n* Common Weakness Enumeration: [CWE-285](https://cwe.mitre.org/data/definitions/285.html)\n\n","text":"Spring Security contains a flaw when dealing with OAuth2 access token empty scope list  responses. A remote attacker could leverage this to escalate their privileges under **all** the following conditions being met:\n\n* They act as the role of a Login Client (e.g. uses `http.oauth2Login()`).\n* They use one or more authorization rules with authorities mapped from authorized scopes (e.g. `anyRequest().hasAuthority(\"SCOPE_message.write\")`) in the client application.\n* An authorization server that responds with empty scopes list is registered (RFC 6749, Section 5.1).\n\n**Note:** The role of Resource Servers (`http.oauth2ResourceServer()`) and applications that do not map authorization rules from authorized scopes (eg. `anyRequest().hasAuthority(\"ROLE_USER\")`) cannot be exploited by this vulnerability."},"properties":{"security-severity":"8.9","tags":["security","open_source_analysis","direct_dependency","patch_available","external/cwe/cwe-285"]},"defaultConfiguration":{"level":"error"}},{"id":"BDSA-2023-1825 spring-security-test 5.2.1.RELEASE: org.springframework.security","shortDescription":{"text":"Direct Dependency: spring-security-test 5.2.1.RELEASE (BDSA-2023-1825)"},"fullDescription":{"text":"Spring Security used with Spring WebFlux performs incorrect parsing when using `**` as a pattern in Spring Security configuration due to inconsistent pattern matching between the two components. This could lead to bypassing of security mechanisms configured by Spring Security."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| spring-security-test 5.2.1.RELEASE  | 5.8.9  | 6.2.1 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/bfe44ed0-0640-4faa-92fc-2c894ff23018?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=d80c013b-7862-4ea8-83e5-eb7b91623e0c)\n\n\n## Description\nSpring Security used with Spring WebFlux performs incorrect parsing when using `**` as a pattern in Spring Security configuration due to inconsistent pattern matching between the two components. This could lead to bypassing of security mechanisms configured by Spring Security.\n\n## Vulnerabilities(BDSA,CVE)\n:orange_circle: [BDSA-2023-1825](https://openhub.net/vulnerabilities/bdsa/BDSA-2023-1825) - Missing or Broken Authorization Mechanism\n\n\n\n## Solution\nFixed in versions:\n- [**5.6.12**](https://github.com/spring-projects/spring-security/releases/tag/5.6.12) by [this](https://github.com/spring-projects/spring-security/commit/7813a9ba26e53fe54e4d2ec6eb076126e8550780) commit,\n- [**5.7.10**](https://github.com/spring-projects/spring-security/releases/tag/5.7.10) by [this](https://github.com/spring-projects/spring-security/commit/fe9bc26bdcfea2a40c93e3db98e649bfb0edaab2) commit,\n- [**5.8.5**](https://github.com/spring-projects/spring-security/releases/tag/5.8.5) by [this](https://github.com/spring-projects/spring-security/commit/a939f17890a9415604ecf81bc236d3e969e2d9b4) commit,\n- [**6.0.5**](https://github.com/spring-projects/spring-security/releases/tag/6.0.5) by [this](https://github.com/spring-projects/spring-security/commit/cbef118026e38005109158dd35e79038af2bb913) commit,\n- [**6.1.2**](https://github.com/spring-projects/spring-security/releases/tag/6.1.2) by [this](https://github.com/spring-projects/spring-security/commit/aaa31312bd74c637ce9549ed68cab33214008bf5) commit.\n\nThe above fixed versions require Spring Framework versions:\n- [**5.2.25**](https://github.com/spring-projects/spring-framework/releases/tag/5.2.25),\n- [**5.3.29**](https://github.com/spring-projects/spring-framework/releases/tag/5.3.29),\n- [**6.0.11**](https://github.com/spring-projects/spring-framework/releases/tag/6.0.11).\n\nThe latest stable releases can be found [here](https://github.com/spring-projects/spring-security/releases).\n\n\n\n\n\n## References\n* Common Weakness Enumeration: [CWE-285](https://cwe.mitre.org/data/definitions/285.html)\n* Common Weakness Enumeration: [CWE-287](https://cwe.mitre.org/data/definitions/287.html)\n\n","text":"Spring Security used with Spring WebFlux performs incorrect parsing when using `**` as a pattern in Spring Security configuration due to inconsistent pattern matching between the two components. This could lead to bypassing of security mechanisms configured by Spring Security."},"properties":{"security-severity":"8.9","tags":["security","open_source_analysis","direct_dependency","patch_available","external/cwe/cwe-285","external/cwe/cwe-287"]},"defaultConfiguration":{"level":"error"}},{"id":"CVE-2022-22978 spring-security-test 5.2.1.RELEASE: org.springframework.security","shortDescription":{"text":"Direct Dependency: spring-security-test 5.2.1.RELEASE (CVE-2022-22978)"},"fullDescription":{"text":"Spring Security is vulnerable to the bypassing of an authorization mechanism due to improperly implemented regular expression matching. A remote attacker could perform unauthorized actions on a vulnerable server by sending maliciously crafted requests to that server."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| spring-security-test 5.2.1.RELEASE  | 5.8.9  | 6.2.1 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/bfe44ed0-0640-4faa-92fc-2c894ff23018?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=d80c013b-7862-4ea8-83e5-eb7b91623e0c)\n\n\n## Description\nSpring Security is vulnerable to the bypassing of an authorization mechanism due to improperly implemented regular expression matching. A remote attacker could perform unauthorized actions on a vulnerable server by sending maliciously crafted requests to that server.\n\n## Vulnerabilities(BDSA,CVE)\n:orange_circle: [CVE-2022-22978](https://openhub.net/vulnerabilities/bdsa/CVE-2022-22978) - Incorrect Regular Expression\n\n\n\n## Solution\nFixed in versions:\n* [**5.7.0**](https://github.com/spring-projects/spring-security/releases/tag/5.7.0)\n* [**5.6.4**](https://github.com/spring-projects/spring-security/releases/tag/5.6.4)\n* [**5.5.7**](https://github.com/spring-projects/spring-security/releases/tag/5.5.7)\n\nThe latest stable releases can be found [here](https://github.com/spring-projects/spring-security/releases).\n\n\n\n\n\n## References\n* Common Weakness Enumeration: [CWE-185](https://cwe.mitre.org/data/definitions/185.html)\n\n","text":"Spring Security is vulnerable to the bypassing of an authorization mechanism due to improperly implemented regular expression matching. A remote attacker could perform unauthorized actions on a vulnerable server by sending maliciously crafted requests to that server."},"properties":{"security-severity":"8.9","tags":["security","open_source_analysis","direct_dependency","patch_available","external/cwe/cwe-185"]},"defaultConfiguration":{"level":"error"}},{"id":"CVE-2021-22112 spring-security-test 5.2.1.RELEASE: org.springframework.security","shortDescription":{"text":"Direct Dependency: spring-security-test 5.2.1.RELEASE (CVE-2021-22112)"},"fullDescription":{"text":"Spring Security is vulnerable to privilege escalation due to a failure to correctly save security context information. An attacker who is allowed to use elevated privileges in a small portion of a program could extend those privileges to the entire program by sending maliciously crafted requests to the application.\n\nIt should be noted that the vulnerability is not present by default, and must be programmed in by an application developer."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| spring-security-test 5.2.1.RELEASE  | 5.8.9  | 6.2.1 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/bfe44ed0-0640-4faa-92fc-2c894ff23018?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=d80c013b-7862-4ea8-83e5-eb7b91623e0c)\n\n\n## Description\nSpring Security is vulnerable to privilege escalation due to a failure to correctly save security context information. An attacker who is allowed to use elevated privileges in a small portion of a program could extend those privileges to the entire program by sending maliciously crafted requests to the application.\n\nIt should be noted that the vulnerability is not present by default, and must be programmed in by an application developer.\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [CVE-2021-22112](https://openhub.net/vulnerabilities/bdsa/CVE-2021-22112) - Third-party component usage\n\n\n\n## Solution\nFixed in:\n* [**5.4.4**](https://github.com/spring-projects/spring-security/releases/tag/5.4.4) by [this](https://github.com/spring-projects/spring-security/commit/c72a6fac04853912a4b7caad5f0500f2aace5a79) commit.\n* [**5.3.8**](https://github.com/spring-projects/spring-security/releases/tag/5.3.8.RELEASE) by [this](https://github.com/spring-projects/spring-security/commit/38e9e8ca52ddc4bdd272083563a657d5e37ea1e8) commit.\n* [**5.2.9**](https://github.com/spring-projects/spring-security/releases/tag/5.2.9.RELEASE) by [this](https://github.com/spring-projects/spring-security/commit/7cab7b06c51ea885dd0d07ff26b135dd3afce1d1) commit.\n\nThe latest stable releases are available [here](https://github.com/spring-projects/spring-security/releases).\n\n\n\n\n\n## References\n* Common Weakness Enumeration: [CWE-265](https://cwe.mitre.org/data/definitions/265.html)\n\n","text":"Spring Security is vulnerable to privilege escalation due to a failure to correctly save security context information. An attacker who is allowed to use elevated privileges in a small portion of a program could extend those privileges to the entire program by sending maliciously crafted requests to the application.\n\nIt should be noted that the vulnerability is not present by default, and must be programmed in by an application developer."},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","direct_dependency","patch_available","external/cwe/cwe-265"]},"defaultConfiguration":{"level":"warning"}},{"id":"CVE-2021-22119 spring-security-test 5.2.1.RELEASE: org.springframework.security","shortDescription":{"text":"Direct Dependency: spring-security-test 5.2.1.RELEASE (CVE-2021-22119)"},"fullDescription":{"text":"Spring Security contains an uncontrolled resource consumption vulnerability. Attackers could exploit this to create an `OutOfMemory` error and exhaust  system resources, triggering a denial-of-service (DoS) condition."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| spring-security-test 5.2.1.RELEASE  | 5.8.9  | 6.2.1 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/bfe44ed0-0640-4faa-92fc-2c894ff23018?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=d80c013b-7862-4ea8-83e5-eb7b91623e0c)\n\n\n## Description\nSpring Security contains an uncontrolled resource consumption vulnerability. Attackers could exploit this to create an `OutOfMemory` error and exhaust  system resources, triggering a denial-of-service (DoS) condition.\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [CVE-2021-22119](https://openhub.net/vulnerabilities/bdsa/CVE-2021-22119) - Uncontrolled Resource Consumption\n\n\n\n## Solution\nFixed in:\n* **[5.5.1](https://github.com/spring-projects/spring-security/releases/tag/5.5.1)**\n* **[5.4.7](https://github.com/spring-projects/spring-security/releases/tag/5.4.7)**\n* **[5.3.10](https://github.com/spring-projects/spring-security/releases/tag/5.3.10.RELEASE)**\n* **[5.2.11](https://github.com/spring-projects/spring-security/releases/tag/5.2.11.RELEASE)**\n\nThe latest stable releases are also available [here](https://github.com/spring-projects/spring-security/releases).\n\n\n\n\n\n## References\n* Common Weakness Enumeration: [CWE-400](https://cwe.mitre.org/data/definitions/400.html)\n\n","text":"Spring Security contains an uncontrolled resource consumption vulnerability. Attackers could exploit this to create an `OutOfMemory` error and exhaust  system resources, triggering a denial-of-service (DoS) condition."},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","direct_dependency","patch_available","external/cwe/cwe-400"]},"defaultConfiguration":{"level":"warning"}},{"id":"CVE-2022-22976 spring-security-test 5.2.1.RELEASE: org.springframework.security","shortDescription":{"text":"Direct Dependency: spring-security-test 5.2.1.RELEASE (CVE-2022-22976)"},"fullDescription":{"text":"Spring Security is vulnerable to the weakening of bcrypt-generated password hashes due to an integer overflow. An attacker that is able to obtain weak password hashes that have been produced by a vulnerable application could potentially retrieve the plaintext password. It should be noted that the `BCryptPasswordEncoder` class must have been configured to use the maximum work factor (31) in order for the vulnerability to manifest. This is a non-default value."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| spring-security-test 5.2.1.RELEASE  | 5.8.9  | 6.2.1 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/bfe44ed0-0640-4faa-92fc-2c894ff23018?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=d80c013b-7862-4ea8-83e5-eb7b91623e0c)\n\n\n## Description\nSpring Security is vulnerable to the weakening of bcrypt-generated password hashes due to an integer overflow. An attacker that is able to obtain weak password hashes that have been produced by a vulnerable application could potentially retrieve the plaintext password. It should be noted that the `BCryptPasswordEncoder` class must have been configured to use the maximum work factor (31) in order for the vulnerability to manifest. This is a non-default value.\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [CVE-2022-22976](https://openhub.net/vulnerabilities/bdsa/CVE-2022-22976) - Integer Overflow / Underflow\n\n\n\n## Solution\nFixed in versions:\n* [**5.7.0**](https://github.com/spring-projects/spring-security/releases/tag/5.7.0)\n* [**5.6.4**](https://github.com/spring-projects/spring-security/releases/tag/5.6.4)\n* [**5.5.7**](https://github.com/spring-projects/spring-security/releases/tag/5.5.7)\n\nThe latest stable releases can be found [here](https://github.com/spring-projects/spring-security/releases).\n\n## Workaround\nThe vendor has stated [here](https://tanzu.vmware.com/security/cve-2022-22976) that the following workaround can be implemented:\n\n\u003e Update your BCryptPasswordEncoder to use a lower number of rounds.\n\n\n\n## References\n* Common Weakness Enumeration: [CWE-190](https://cwe.mitre.org/data/definitions/190.html)\n\n","text":"Spring Security is vulnerable to the weakening of bcrypt-generated password hashes due to an integer overflow. An attacker that is able to obtain weak password hashes that have been produced by a vulnerable application could potentially retrieve the plaintext password. It should be noted that the `BCryptPasswordEncoder` class must have been configured to use the maximum work factor (31) in order for the vulnerability to manifest. This is a non-default value."},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","direct_dependency","patch_available","external/cwe/cwe-190"]},"defaultConfiguration":{"level":"warning"}},{"id":"CVE-2020-5407 spring-security-test 5.2.1.RELEASE: org.springframework.security","shortDescription":{"text":"Direct Dependency: spring-security-test 5.2.1.RELEASE (CVE-2020-5407)"},"fullDescription":{"text":"Spring Security is vulnerable to authentication abuse due to the improper handling of SAML response validation. This could allow an attacker to inject arbitrary assertions into SAML responses."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| spring-security-test 5.2.1.RELEASE  | 5.8.9  | 6.2.1 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/bfe44ed0-0640-4faa-92fc-2c894ff23018?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=d80c013b-7862-4ea8-83e5-eb7b91623e0c)\n\n\n## Description\nSpring Security is vulnerable to authentication abuse due to the improper handling of SAML response validation. This could allow an attacker to inject arbitrary assertions into SAML responses.\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [CVE-2020-5407](https://openhub.net/vulnerabilities/bdsa/CVE-2020-5407) - Improper Authentication\n\n\n\n## Solution\nFixed in **[5.3.2](https://github.com/spring-projects/spring-security/releases/tag/5.3.2.RELEASE)** by [this](https://github.com/spring-projects/spring-security/commit/0db9cd075d621118cdff303f402d25425ec81bbc) commit and **[5.2.4](https://github.com/spring-projects/spring-security/releases/tag/5.2.4.RELEASE)** by [this](https://github.com/spring-projects/spring-security/commit/69b1bc62ffe7c1e1bbf508951efa1e0235954198) commit.\n\n\n\n\n\n## References\n* Common Weakness Enumeration: [CWE-287](https://cwe.mitre.org/data/definitions/287.html)\n\n","text":"Spring Security is vulnerable to authentication abuse due to the improper handling of SAML response validation. This could allow an attacker to inject arbitrary assertions into SAML responses."},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","direct_dependency","patch_available","external/cwe/cwe-287"]},"defaultConfiguration":{"level":"warning"}},{"id":"CVE-2020-5408 spring-security-test 5.2.1.RELEASE: org.springframework.security","shortDescription":{"text":"Direct Dependency: spring-security-test 5.2.1.RELEASE (CVE-2020-5408)"},"fullDescription":{"text":"Spring Security is vulnerable to information exposure due to an insecure cryptographic mechanism in the queryable text encryptor. This could be leveraged by an attacker to derive sensitive information from encrypted text using dictionary attacks."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| spring-security-test 5.2.1.RELEASE  | 5.8.9  | 6.2.1 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/bfe44ed0-0640-4faa-92fc-2c894ff23018?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=d80c013b-7862-4ea8-83e5-eb7b91623e0c)\n\n\n## Description\nSpring Security is vulnerable to information exposure due to an insecure cryptographic mechanism in the queryable text encryptor. This could be leveraged by an attacker to derive sensitive information from encrypted text using dictionary attacks.\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [CVE-2020-5408](https://openhub.net/vulnerabilities/bdsa/CVE-2020-5408) - Generation of Predictable IV with CBC Mode\n\n\n\n## Solution\nFixed by [this](https://github.com/spring-projects/spring-security/commit/db155b30941536e6c33408a20f62e790b2c78a97) commit in:\n* **[5.3.2](https://github.com/spring-projects/spring-security/releases/tag/5.3.2.RELEASE)**\n* **[5.2.4](https://github.com/spring-projects/spring-security/releases/tag/5.2.4.RELEASE)**\n* **[5.1.10](https://github.com/spring-projects/spring-security/releases/tag/5.1.10.RELEASE)**\n* **[5.0.16](https://github.com/spring-projects/spring-security/releases/tag/5.0.16.RELEASE)**\n* **[4.2.16](https://github.com/spring-projects/spring-security/releases/tag/4.2.16.RELEASE)**\n\n## Workaround\nIf upgrading to a fixed version cannot be performed immediately, users should discontinue use of the function `Encryptors#queryableText(CharSequence, CharSequence)` and look to their data store for a secure mechanism to query encrypted data.\n\n\n\n## References\n* Common Weakness Enumeration: [CWE-329](https://cwe.mitre.org/data/definitions/329.html)\n\n","text":"Spring Security is vulnerable to information exposure due to an insecure cryptographic mechanism in the queryable text encryptor. This could be leveraged by an attacker to derive sensitive information from encrypted text using dictionary attacks."},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","direct_dependency","patch_available","external/cwe/cwe-329"]},"defaultConfiguration":{"level":"warning"}},{"id":"CVE-2018-9116 wiremock 2.8.0: com.github.tomakehurst","shortDescription":{"text":"Direct Dependency: wiremock 2.8.0 (CVE-2018-9116)"},"fullDescription":{"text":"Wiremock is vulnerable to XML external entity (XXE) attacks due to weak configuration of XML parsing. An attacker can retrieve files outside the web root, execute arbitrary code or cause a denial-of-service (DoS) condition."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| wiremock 2.8.0  | 2.27.2  | 3.0.1 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/a425e6bb-5b9c-46a4-8cfd-bc79af828519?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=a749997e-3ad6-4c09-8748-d44b61cfa47f)\n\n\n## Description\nWiremock is vulnerable to XML external entity (XXE) attacks due to weak configuration of XML parsing. An attacker can retrieve files outside the web root, execute arbitrary code or cause a denial-of-service (DoS) condition.\n\n## Vulnerabilities(BDSA,CVE)\n:orange_circle: [CVE-2018-9116](https://openhub.net/vulnerabilities/bdsa/CVE-2018-9116) - XML External Entity (XXE) Injection\n\n\n\n## Solution\nFixed in [**2.16.0**](https://github.com/tomakehurst/wiremock/releases/tag/2.16.0) by these commits:\n\n* [Commit 1](https://github.com/tomakehurst/wiremock/commit/4c6dfde82a5ee91c5f47bf353f5099d11692db39)\n* [Commit 2](https://github.com/tomakehurst/wiremock/commit/ea18dab0082b858d3efac005c7185e6f8d08d19c)\n* [Commit 3](https://github.com/tomakehurst/wiremock/commit/d36516bb76b3b7b8fb84fe2254fc2597b3fce11c)\n\nThe latest stable releases can be found [here](https://github.com/wiremock/wiremock/releases).\n\n\n\n\n\n## References\n* Common Weakness Enumeration: [CWE-611](https://cwe.mitre.org/data/definitions/611.html)\n\n","text":"Wiremock is vulnerable to XML external entity (XXE) attacks due to weak configuration of XML parsing. An attacker can retrieve files outside the web root, execute arbitrary code or cause a denial-of-service (DoS) condition."},"properties":{"security-severity":"8.9","tags":["security","open_source_analysis","direct_dependency","patch_available","external/cwe/cwe-611"]},"defaultConfiguration":{"level":"error"}},{"id":"CVE-2018-9117 wiremock 2.8.0: com.github.tomakehurst","shortDescription":{"text":"Direct Dependency: wiremock 2.8.0 (CVE-2018-9117)"},"fullDescription":{"text":"WireMock contains an absolute path traversal vulnerability where an attacker is able to access local files and potentially disclose sensitive information."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| wiremock 2.8.0  | 2.27.2  | 3.0.1 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/a425e6bb-5b9c-46a4-8cfd-bc79af828519?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=a749997e-3ad6-4c09-8748-d44b61cfa47f)\n\n\n## Description\nWireMock contains an absolute path traversal vulnerability where an attacker is able to access local files and potentially disclose sensitive information.\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [CVE-2018-9117](https://openhub.net/vulnerabilities/bdsa/CVE-2018-9117) - Third-party component usage\n\n\n\n## Solution\nFixed in version [**2.16.0**](https://github.com/tomakehurst/wiremock/releases/tag/2.16.0) by [this](https://github.com/tomakehurst/wiremock/commit/831aec84b553fa10927f6df6ddaf03701c35b13c) commit.\n\nThe latest stable releases can be found [here](https://github.com/wiremock/wiremock/releases).\n\n\n\n\n\n## References\n* Common Weakness Enumeration: [CWE-36](https://cwe.mitre.org/data/definitions/36.html)\n\n","text":"WireMock contains an absolute path traversal vulnerability where an attacker is able to access local files and potentially disclose sensitive information."},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","direct_dependency","patch_available","external/cwe/cwe-36"]},"defaultConfiguration":{"level":"warning"}},{"id":"CVE-2023-41327 wiremock 2.8.0: com.github.tomakehurst","shortDescription":{"text":"Direct Dependency: wiremock 2.8.0 (CVE-2023-41327)"},"fullDescription":{"text":"WireMock is vulnerable to a server-side request forgery (SSRF) due to improper restrictive configuration of the DNS resolver within the processing of webhooks. Successful exploitation of this issue could allow an unauthenticated attacker to trick a user into initiating a POST request via an arbitrary webhook to an outbound network, in order to obtain access to internal resources."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| wiremock 2.8.0  | 2.27.2  | 3.0.1 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/a425e6bb-5b9c-46a4-8cfd-bc79af828519?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=a749997e-3ad6-4c09-8748-d44b61cfa47f)\n\n\n## Description\nWireMock is vulnerable to a server-side request forgery (SSRF) due to improper restrictive configuration of the DNS resolver within the processing of webhooks. Successful exploitation of this issue could allow an unauthenticated attacker to trick a user into initiating a POST request via an arbitrary webhook to an outbound network, in order to obtain access to internal resources.\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [CVE-2023-41327](https://openhub.net/vulnerabilities/bdsa/CVE-2023-41327) - Server-Side Request Forgery\n\n\n\n## Solution\nFixed in [**2.35.1**](https://github.com/tomakehurst/wiremock/releases/tag/2.35.1) by [this](https://github.com/tomakehurst/wiremock/commit/90a37e10) commit and in [**3.0.3**](https://github.com/tomakehurst/wiremock/releases/tag/3.0.3) by [this](https://github.com/tomakehurst/wiremock/commit/92d77937) commit.\n\nThe latest stable releases can be found [here](https://github.com/wiremock/wiremock/releases).\n\n## Workaround\nThe vendor has stated the following as a workaround for this issue:\n \u003e Use external firewall rules to define the list of permitted destinations.\n\n\n\n## References\n* Common Weakness Enumeration: [CWE-918](https://cwe.mitre.org/data/definitions/918.html)\n\n","text":"WireMock is vulnerable to a server-side request forgery (SSRF) due to improper restrictive configuration of the DNS resolver within the processing of webhooks. Successful exploitation of this issue could allow an unauthenticated attacker to trick a user into initiating a POST request via an arbitrary webhook to an outbound network, in order to obtain access to internal resources."},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","direct_dependency","patch_available","external/cwe/cwe-918"]},"defaultConfiguration":{"level":"warning"}},{"id":"CVE-2023-41329 wiremock 2.8.0: com.github.tomakehurst","shortDescription":{"text":"Direct Dependency: wiremock 2.8.0 (CVE-2023-41329)"},"fullDescription":{"text":"WireMock contains a domain restriction bypass vulnerability due to insufficient validation of allowed address rules. Successful exploitation of this issue enables a highly privileged attacker that has control over a DNS service to bypass domain restriction and gain unauthorized access."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| wiremock 2.8.0  | 2.27.2  | 3.0.1 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/a425e6bb-5b9c-46a4-8cfd-bc79af828519?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=a749997e-3ad6-4c09-8748-d44b61cfa47f)\n\n\n## Description\nWireMock contains a domain restriction bypass vulnerability due to insufficient validation of allowed address rules. Successful exploitation of this issue enables a highly privileged attacker that has control over a DNS service to bypass domain restriction and gain unauthorized access.\n\n## Vulnerabilities(BDSA,CVE)\n:large_blue_circle: [CVE-2023-41329](https://openhub.net/vulnerabilities/bdsa/CVE-2023-41329) - Reliance on Reverse DNS Resolution for Security-Critical Action\n\n\n\n## Solution\nFixed in [**2.35.1**](https://github.com/wiremock/wiremock/releases/tag/2.35.1) by [this](https://github.com/wiremock/wiremock/commit/20adc25d) commit and in [**3.0.3**](https://github.com/tomakehurst/wiremock/releases/tag/3.0.3) by [this](https://github.com/tomakehurst/wiremock/commit/0f72091c) commit.\n\nThe latest stable releases can be found [here](https://github.com/wiremock/wiremock/releases).\n\n## Workaround\nThe vendor has supplied the following workaround for this issue:\n\u003e * **Option 1**: Configure WireMock to use IP addresses instead of the domain names in the outbound URLs subject to DNS rebinding.\n\u003e * **Option 2**: Use external firewall rules to define the list of permitted destinations.\n\n\n\n## References\n* Common Weakness Enumeration: [CWE-350](https://cwe.mitre.org/data/definitions/350.html)\n\n","text":"WireMock contains a domain restriction bypass vulnerability due to insufficient validation of allowed address rules. Successful exploitation of this issue enables a highly privileged attacker that has control over a DNS service to bypass domain restriction and gain unauthorized access."},"properties":{"security-severity":"3.8","tags":["security","open_source_analysis","direct_dependency","patch_available","external/cwe/cwe-350"]},"defaultConfiguration":{"level":"note"}},{"id":"CVE-2016-1000027 spring-jdbc 5.2.2.RELEASE: spring-boot-starter-data-jpa 2.2.2.RELEASE: org.springframework","shortDescription":{"text":"Transitive Dependency: spring-jdbc 5.2.2.RELEASE from spring-boot-starter-data-jpa 2.2.2.RELEASE (CVE-2016-1000027)"},"fullDescription":{"text":"Pivotal Spring Framework through 5.3.16 suffers from a potential remote code execution (RCE) issue if used for Java deserialization of untrusted data. Depending on how the library is implemented within a product, this issue may or not occur, and authentication may be required. NOTE: the vendor's position is that untrusted data is not an intended use case. The product's behavior will not be changed because some users rely on deserialization of trusted data."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| spring-jdbc 5.2.2.RELEASE  | 5.3.31  | 6.1.2 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/ba6e9d03-9fbd-4086-9631-99d1ad5e520c?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=09f17d81-b282-43ec-9f2b-36c8021d3ca7)\n\n\n## Description\nPivotal Spring Framework through 5.3.16 suffers from a potential remote code execution (RCE) issue if used for Java deserialization of untrusted data. Depending on how the library is implemented within a product, this issue may or not occur, and authentication may be required. NOTE: the vendor's position is that untrusted data is not an intended use case. The product's behavior will not be changed because some users rely on deserialization of trusted data.\n\n## Vulnerabilities(BDSA,CVE)\n:red_circle: [CVE-2016-1000027](https://openhub.net/vulnerabilities/bdsa/CVE-2016-1000027) - Insecure Object Deserialization\n\n\n\n\n\n\n\n## Dependency tree\n- org.owasp.webgoat:webgoat-container:v8.1.0:-maven\n    - org.springframework.boot:spring-boot-starter-data-jpa:2.2.2.RELEASE\n        - org.springframework.boot:spring-boot-starter-jdbc:2.2.2.RELEASE\n            - org.springframework:spring-jdbc:5.2.2.RELEASE\n\n\n## References\n* Common Weakness Enumeration: [CWE-502](https://cwe.mitre.org/data/definitions/502.html)\n\n","text":"Pivotal Spring Framework through 5.3.16 suffers from a potential remote code execution (RCE) issue if used for Java deserialization of untrusted data. Depending on how the library is implemented within a product, this issue may or not occur, and authentication may be required. NOTE: the vendor's position is that untrusted data is not an intended use case. The product's behavior will not be changed because some users rely on deserialization of trusted data."},"properties":{"security-severity":"9.1","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-502"]},"defaultConfiguration":{"level":"error"}},{"id":"CVE-2022-22965 spring-jdbc 5.2.2.RELEASE: spring-boot-starter-data-jpa 2.2.2.RELEASE: org.springframework","shortDescription":{"text":"Transitive Dependency: spring-jdbc 5.2.2.RELEASE from spring-boot-starter-data-jpa 2.2.2.RELEASE (CVE-2022-22965)"},"fullDescription":{"text":"Spring Framework is vulnerable to a flaw in the access restrictions to the security sensitive `ClassLoader` property. The restrictions can be bypassed through alternative paths available with Java9 and later. An attacker can leverage this vulnerability to cause remote code execution (RCE).\n\n**Note** this issue exists because the restrictions that were introduced to prevent exploitation of BDSA-2010-0001 (CVE-2010-1622) can be bypassed on platforms where Java9 and later are in use.\n\nThis vulnerability is listed as exploitable by the Cybersecurity \u0026 Infrastructure Security Agency in their [Known Exploited Vulnerabilities Catalog](https://www.cisa.gov/known-exploited-vulnerabilities-catalog)."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| spring-jdbc 5.2.2.RELEASE  | 5.3.31  | 6.1.2 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/ba6e9d03-9fbd-4086-9631-99d1ad5e520c?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=09f17d81-b282-43ec-9f2b-36c8021d3ca7)\n\n\n## Description\nSpring Framework is vulnerable to a flaw in the access restrictions to the security sensitive `ClassLoader` property. The restrictions can be bypassed through alternative paths available with Java9 and later. An attacker can leverage this vulnerability to cause remote code execution (RCE).\n\n**Note** this issue exists because the restrictions that were introduced to prevent exploitation of BDSA-2010-0001 (CVE-2010-1622) can be bypassed on platforms where Java9 and later are in use.\n\nThis vulnerability is listed as exploitable by the Cybersecurity \u0026 Infrastructure Security Agency in their [Known Exploited Vulnerabilities Catalog](https://www.cisa.gov/known-exploited-vulnerabilities-catalog).\n\n## Vulnerabilities(BDSA,CVE)\n:red_circle: [CVE-2022-22965](https://openhub.net/vulnerabilities/bdsa/CVE-2022-22965) - Incomplete List of Disallowed Inputs\n\n\n\n## Solution\nFixed in [**5.3.18**](https://github.com/spring-projects/spring-framework/releases/tag/v5.3.18) by [this](https://github.com/spring-projects/spring-framework/commit/002546b3e4b8d791ea6acccb81eb3168f51abb15) commit and  [**5.2.20**](https://github.com/spring-projects/spring-framework/releases/tag/v5.2.20.RELEASE) by [this](https://github.com/spring-projects/spring-framework/commit/996f701a1916d10202c1d0d281f06ab1f2e1117e) commit .\n\nThe latest releases can be found [here](https://github.com/spring-projects/spring-framework/tags).\n\n## Workaround\nAn official workaround for the issue has been outlined [here](https://spring.io/blog/2022/03/31/spring-framework-rce-early-announcement).\n\n## Dependency tree\n- org.owasp.webgoat:webgoat-container:v8.1.0:-maven\n    - org.springframework.boot:spring-boot-starter-data-jpa:2.2.2.RELEASE\n        - org.springframework.boot:spring-boot-starter-jdbc:2.2.2.RELEASE\n            - org.springframework:spring-jdbc:5.2.2.RELEASE\n\n\n## References\n* Common Weakness Enumeration: [CWE-184](https://cwe.mitre.org/data/definitions/184.html)\n* Common Weakness Enumeration: [CWE-749](https://cwe.mitre.org/data/definitions/749.html)\n\n","text":"Spring Framework is vulnerable to a flaw in the access restrictions to the security sensitive `ClassLoader` property. The restrictions can be bypassed through alternative paths available with Java9 and later. An attacker can leverage this vulnerability to cause remote code execution (RCE).\n\n**Note** this issue exists because the restrictions that were introduced to prevent exploitation of BDSA-2010-0001 (CVE-2010-1622) can be bypassed on platforms where Java9 and later are in use.\n\nThis vulnerability is listed as exploitable by the Cybersecurity \u0026 Infrastructure Security Agency in their [Known Exploited Vulnerabilities Catalog](https://www.cisa.gov/known-exploited-vulnerabilities-catalog)."},"properties":{"security-severity":"9.1","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-184","external/cwe/cwe-749"]},"defaultConfiguration":{"level":"error"}},{"id":"CVE-2020-5397 spring-jdbc 5.2.2.RELEASE: spring-boot-starter-data-jpa 2.2.2.RELEASE: org.springframework","shortDescription":{"text":"Transitive Dependency: spring-jdbc 5.2.2.RELEASE from spring-boot-starter-data-jpa 2.2.2.RELEASE (CVE-2020-5397)"},"fullDescription":{"text":"Spring Framework is vulnerable to cross-site request forgery (CSRF) attacks via CORS preflight requests which target Spring MVC or Spring WebFlux endpoints."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| spring-jdbc 5.2.2.RELEASE  | 5.3.31  | 6.1.2 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/ba6e9d03-9fbd-4086-9631-99d1ad5e520c?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=09f17d81-b282-43ec-9f2b-36c8021d3ca7)\n\n\n## Description\nSpring Framework is vulnerable to cross-site request forgery (CSRF) attacks via CORS preflight requests which target Spring MVC or Spring WebFlux endpoints.\n\n## Vulnerabilities(BDSA,CVE)\n:orange_circle: [CVE-2020-5397](https://openhub.net/vulnerabilities/bdsa/CVE-2020-5397) - Cross-Site Request Forgery (CSRF)\n\n\n\n## Solution\nFixed in [**5.2.3**](https://github.com/spring-projects/spring-framework/releases/tag/v5.2.3.RELEASE).\n\n\n\n## Dependency tree\n- org.owasp.webgoat:webgoat-container:v8.1.0:-maven\n    - org.springframework.boot:spring-boot-starter-data-jpa:2.2.2.RELEASE\n        - org.springframework.boot:spring-boot-starter-jdbc:2.2.2.RELEASE\n            - org.springframework:spring-jdbc:5.2.2.RELEASE\n\n\n## References\n* Common Weakness Enumeration: [CWE-352](https://cwe.mitre.org/data/definitions/352.html)\n\n","text":"Spring Framework is vulnerable to cross-site request forgery (CSRF) attacks via CORS preflight requests which target Spring MVC or Spring WebFlux endpoints."},"properties":{"security-severity":"8.9","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-352"]},"defaultConfiguration":{"level":"error"}},{"id":"BDSA-2022-0847 spring-jdbc 5.2.2.RELEASE: spring-boot-starter-data-jpa 2.2.2.RELEASE: org.springframework","shortDescription":{"text":"Transitive Dependency: spring-jdbc 5.2.2.RELEASE from spring-boot-starter-data-jpa 2.2.2.RELEASE (BDSA-2022-0847)"},"fullDescription":{"text":"Software systems using Spring Framework may be vulnerable to unsafe deserialization if they employ unsafe use of certain provided deserialization functionality. A remote attacker could potentially execute arbitrary code on a vulnerable endpoint by passing a maliciously crafted serialized object to that endpoint.\n\n**Note**: This issue only affects software that has been written to leverage specific deserialization functionality provided by the Spring Framework without sanitization."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| spring-jdbc 5.2.2.RELEASE  | 5.3.31  | 6.1.2 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/ba6e9d03-9fbd-4086-9631-99d1ad5e520c?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=09f17d81-b282-43ec-9f2b-36c8021d3ca7)\n\n\n## Description\nSoftware systems using Spring Framework may be vulnerable to unsafe deserialization if they employ unsafe use of certain provided deserialization functionality. A remote attacker could potentially execute arbitrary code on a vulnerable endpoint by passing a maliciously crafted serialized object to that endpoint.\n\n**Note**: This issue only affects software that has been written to leverage specific deserialization functionality provided by the Spring Framework without sanitization.\n\n## Vulnerabilities(BDSA,CVE)\n:orange_circle: [BDSA-2022-0847](https://openhub.net/vulnerabilities/bdsa/BDSA-2022-0847) - Insecure Object Deserialization\n\n\n\n## Solution\nFixed in **[6.0.0-M4](https://github.com/spring-projects/spring-framework/releases/tag/v6.0.0-M4)** by [this](https://github.com/spring-projects/spring-framework/commit/7f7fb58dd0dae86d22268a4b59ac7c72a6c22529) commit.\n\nFixed in **[5.3.18](https://github.com/spring-projects/spring-framework/releases/tag/v5.3.18)** and **[5.2.20](https://github.com/spring-projects/spring-framework/releases/tag/v5.2.20.RELEASE)** by [this](https://github.com/spring-projects/spring-framework/commit/3811cd4c0a0be3aac6e842cf1890610ce986449d) commit.\n\n**Note**: These patches simply annotate the dangerous method as deprecated or documents the dangers. It is the responsibility of developers who call this method to ensure that it is not used with unsanitized untrusted input.\n\n\n\n## Dependency tree\n- org.owasp.webgoat:webgoat-container:v8.1.0:-maven\n    - org.springframework.boot:spring-boot-starter-data-jpa:2.2.2.RELEASE\n        - org.springframework.boot:spring-boot-starter-jdbc:2.2.2.RELEASE\n            - org.springframework:spring-jdbc:5.2.2.RELEASE\n\n\n## References\n* Common Weakness Enumeration: [CWE-502](https://cwe.mitre.org/data/definitions/502.html)\n\n","text":"Software systems using Spring Framework may be vulnerable to unsafe deserialization if they employ unsafe use of certain provided deserialization functionality. A remote attacker could potentially execute arbitrary code on a vulnerable endpoint by passing a maliciously crafted serialized object to that endpoint.\n\n**Note**: This issue only affects software that has been written to leverage specific deserialization functionality provided by the Spring Framework without sanitization."},"properties":{"security-severity":"8.9","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-502"]},"defaultConfiguration":{"level":"error"}},{"id":"CVE-2020-5398 spring-jdbc 5.2.2.RELEASE: spring-boot-starter-data-jpa 2.2.2.RELEASE: org.springframework","shortDescription":{"text":"Transitive Dependency: spring-jdbc 5.2.2.RELEASE from spring-boot-starter-data-jpa 2.2.2.RELEASE (CVE-2020-5398)"},"fullDescription":{"text":"Spring Framework is vulnerable to a reflected file download (RFD) attack via improper input validation on filenames in a `Content-Disposition` header."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| spring-jdbc 5.2.2.RELEASE  | 5.3.31  | 6.1.2 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/ba6e9d03-9fbd-4086-9631-99d1ad5e520c?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=09f17d81-b282-43ec-9f2b-36c8021d3ca7)\n\n\n## Description\nSpring Framework is vulnerable to a reflected file download (RFD) attack via improper input validation on filenames in a `Content-Disposition` header.\n\n## Vulnerabilities(BDSA,CVE)\n:orange_circle: [CVE-2020-5398](https://openhub.net/vulnerabilities/bdsa/CVE-2020-5398) - Weak Input Validation\n\n\n\n## Solution\nFixed by [this](https://github.com/spring-projects/spring-framework/commit/956ffe68587c8d5f21135b5ce4650af0c2dea933) commit in:\n* [**5.2.3**](https://github.com/spring-projects/spring-framework/releases/tag/v5.2.3.RELEASE)\n* [**5.1.13**](https://github.com/spring-projects/spring-framework/releases/tag/v5.1.13.RELEASE) \n* [**5.0.16**](https://github.com/spring-projects/spring-framework/releases/tag/v5.0.16.RELEASE)\n\n\n\n## Dependency tree\n- org.owasp.webgoat:webgoat-container:v8.1.0:-maven\n    - org.springframework.boot:spring-boot-starter-data-jpa:2.2.2.RELEASE\n        - org.springframework.boot:spring-boot-starter-jdbc:2.2.2.RELEASE\n            - org.springframework:spring-jdbc:5.2.2.RELEASE\n\n\n## References\n* Common Weakness Enumeration: [CWE-20](https://cwe.mitre.org/data/definitions/20.html)\n\n","text":"Spring Framework is vulnerable to a reflected file download (RFD) attack via improper input validation on filenames in a `Content-Disposition` header."},"properties":{"security-severity":"8.9","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-20"]},"defaultConfiguration":{"level":"error"}},{"id":"CVE-2021-22096 spring-jdbc 5.2.2.RELEASE: spring-boot-starter-data-jpa 2.2.2.RELEASE: org.springframework","shortDescription":{"text":"Transitive Dependency: spring-jdbc 5.2.2.RELEASE from spring-boot-starter-data-jpa 2.2.2.RELEASE (CVE-2021-22096)"},"fullDescription":{"text":"Spring Framework is vulnerable to log file injection due to the insufficient validation of user input in an undisclosed component. An attacker could leverage this issue in order to add arbitrary entries to a log file which could impact both the integrity issues and performance issues.\n\n**Note**: a follow-up to this issue was disclosed as **CVE-2021-22060** (**BDSA-2021-3236**), with further fixed releases that protect against additional types of input and in more places of the Spring Framework codebase."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| spring-jdbc 5.2.2.RELEASE  | 5.3.31  | 6.1.2 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/ba6e9d03-9fbd-4086-9631-99d1ad5e520c?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=09f17d81-b282-43ec-9f2b-36c8021d3ca7)\n\n\n## Description\nSpring Framework is vulnerable to log file injection due to the insufficient validation of user input in an undisclosed component. An attacker could leverage this issue in order to add arbitrary entries to a log file which could impact both the integrity issues and performance issues.\n\n**Note**: a follow-up to this issue was disclosed as **CVE-2021-22060** (**BDSA-2021-3236**), with further fixed releases that protect against additional types of input and in more places of the Spring Framework codebase.\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [CVE-2021-22096](https://openhub.net/vulnerabilities/bdsa/CVE-2021-22096) - Injection in Downstream Component\n\n\n\n## Solution\nFixed in versions [**5.3.14**](https://github.com/spring-projects/spring-framework/releases/tag/v5.3.14) and [**5.2.19**](https://github.com/spring-projects/spring-framework/releases/tag/v5.2.19.RELEASE).\n\nThe latest stable releases can be found [here](https://github.com/spring-projects/spring-framework/releases).\n\n\n\n## Dependency tree\n- org.owasp.webgoat:webgoat-container:v8.1.0:-maven\n    - org.springframework.boot:spring-boot-starter-data-jpa:2.2.2.RELEASE\n        - org.springframework.boot:spring-boot-starter-jdbc:2.2.2.RELEASE\n            - org.springframework:spring-jdbc:5.2.2.RELEASE\n\n\n## References\n* Common Weakness Enumeration: [CWE-74](https://cwe.mitre.org/data/definitions/74.html)\n\n","text":"Spring Framework is vulnerable to log file injection due to the insufficient validation of user input in an undisclosed component. An attacker could leverage this issue in order to add arbitrary entries to a log file which could impact both the integrity issues and performance issues.\n\n**Note**: a follow-up to this issue was disclosed as **CVE-2021-22060** (**BDSA-2021-3236**), with further fixed releases that protect against additional types of input and in more places of the Spring Framework codebase."},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-74"]},"defaultConfiguration":{"level":"warning"}},{"id":"CVE-2021-22060 spring-jdbc 5.2.2.RELEASE: spring-boot-starter-data-jpa 2.2.2.RELEASE: org.springframework","shortDescription":{"text":"Transitive Dependency: spring-jdbc 5.2.2.RELEASE from spring-boot-starter-data-jpa 2.2.2.RELEASE (CVE-2021-22060)"},"fullDescription":{"text":"Spring Framework is vulnerable to log file injection due to the insufficient validation of user input in an undisclosed component. An attacker could leverage this issue in order to add arbitrary entries to a log file which could impact both the integrity issues and performance issues.\n\n**Note**: the vendor states this issue exists as a follow up to CVE-2021-22096 (BDSA-2022-0011) that protects against additional types of input and in more places of the Spring Framework codebase."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| spring-jdbc 5.2.2.RELEASE  | 5.3.31  | 6.1.2 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/ba6e9d03-9fbd-4086-9631-99d1ad5e520c?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=09f17d81-b282-43ec-9f2b-36c8021d3ca7)\n\n\n## Description\nSpring Framework is vulnerable to log file injection due to the insufficient validation of user input in an undisclosed component. An attacker could leverage this issue in order to add arbitrary entries to a log file which could impact both the integrity issues and performance issues.\n\n**Note**: the vendor states this issue exists as a follow up to CVE-2021-22096 (BDSA-2022-0011) that protects against additional types of input and in more places of the Spring Framework codebase.\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [CVE-2021-22060](https://openhub.net/vulnerabilities/bdsa/CVE-2021-22060) - Injection in Downstream Component\n\n\n\n## Solution\nFixed in versions [**5.3.14**](https://github.com/spring-projects/spring-framework/releases/tag/v5.3.14) and [**5.2.19**](https://github.com/spring-projects/spring-framework/releases/tag/v5.2.19.RELEASE).\n\nThe latest stable releases can be found [here](https://github.com/spring-projects/spring-framework/releases).\n\n\n\n## Dependency tree\n- org.owasp.webgoat:webgoat-container:v8.1.0:-maven\n    - org.springframework.boot:spring-boot-starter-data-jpa:2.2.2.RELEASE\n        - org.springframework.boot:spring-boot-starter-jdbc:2.2.2.RELEASE\n            - org.springframework:spring-jdbc:5.2.2.RELEASE\n\n\n## References\n* Common Weakness Enumeration: [CWE-74](https://cwe.mitre.org/data/definitions/74.html)\n\n","text":"Spring Framework is vulnerable to log file injection due to the insufficient validation of user input in an undisclosed component. An attacker could leverage this issue in order to add arbitrary entries to a log file which could impact both the integrity issues and performance issues.\n\n**Note**: the vendor states this issue exists as a follow up to CVE-2021-22096 (BDSA-2022-0011) that protects against additional types of input and in more places of the Spring Framework codebase."},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-74"]},"defaultConfiguration":{"level":"warning"}},{"id":"CVE-2022-22950 spring-jdbc 5.2.2.RELEASE: spring-boot-starter-data-jpa 2.2.2.RELEASE: org.springframework","shortDescription":{"text":"Transitive Dependency: spring-jdbc 5.2.2.RELEASE from spring-boot-starter-data-jpa 2.2.2.RELEASE (CVE-2022-22950)"},"fullDescription":{"text":"Spring-Framework's spring-expression is vulnerable to a denial-of-service (DoS) condition. This allows an attacker to use crafted input to cause the spring-expression process to crash due to an exception."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| spring-jdbc 5.2.2.RELEASE  | 5.3.31  | 6.1.2 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/ba6e9d03-9fbd-4086-9631-99d1ad5e520c?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=09f17d81-b282-43ec-9f2b-36c8021d3ca7)\n\n\n## Description\nSpring-Framework's spring-expression is vulnerable to a denial-of-service (DoS) condition. This allows an attacker to use crafted input to cause the spring-expression process to crash due to an exception.\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [CVE-2022-22950](https://openhub.net/vulnerabilities/bdsa/CVE-2022-22950) - Allocation of Resources Without Limits or Throttling\n\n\n\n## Solution\nFixed in version [**5.3.17**](https://github.com/spring-projects/spring-framework/releases/tag/v5.3.17) by [this](https://github.com/spring-projects/spring-framework/commit/94af2ca06bf711de03286999b1c64a703d6de552) commit.\n\nThe latest stable releases can be found [here](https://github.com/spring-projects/spring-framework/tags).\n\n\n\n## Dependency tree\n- org.owasp.webgoat:webgoat-container:v8.1.0:-maven\n    - org.springframework.boot:spring-boot-starter-data-jpa:2.2.2.RELEASE\n        - org.springframework.boot:spring-boot-starter-jdbc:2.2.2.RELEASE\n            - org.springframework:spring-jdbc:5.2.2.RELEASE\n\n\n## References\n* Common Weakness Enumeration: [CWE-770](https://cwe.mitre.org/data/definitions/770.html)\n\n","text":"Spring-Framework's spring-expression is vulnerable to a denial-of-service (DoS) condition. This allows an attacker to use crafted input to cause the spring-expression process to crash due to an exception."},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-770"]},"defaultConfiguration":{"level":"warning"}},{"id":"CVE-2021-22118 spring-jdbc 5.2.2.RELEASE: spring-boot-starter-data-jpa 2.2.2.RELEASE: org.springframework","shortDescription":{"text":"Transitive Dependency: spring-jdbc 5.2.2.RELEASE from spring-boot-starter-data-jpa 2.2.2.RELEASE (CVE-2021-22118)"},"fullDescription":{"text":"Spring Framework is vulnerable to privilege escalation due to the creation of unsafe temporary directories by the WebFlux component. A local authenticated attacker could modify arbitrary files via maliciously crafted `multipart` requests. \n\nThis vulnerability does not affect Spring MVC applications, or applications that do not handle `multipart` file requests."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| spring-jdbc 5.2.2.RELEASE  | 5.3.31  | 6.1.2 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/ba6e9d03-9fbd-4086-9631-99d1ad5e520c?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=09f17d81-b282-43ec-9f2b-36c8021d3ca7)\n\n\n## Description\nSpring Framework is vulnerable to privilege escalation due to the creation of unsafe temporary directories by the WebFlux component. A local authenticated attacker could modify arbitrary files via maliciously crafted `multipart` requests. \n\nThis vulnerability does not affect Spring MVC applications, or applications that do not handle `multipart` file requests.\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [CVE-2021-22118](https://openhub.net/vulnerabilities/bdsa/CVE-2021-22118) - Third-party component usage\n\n\n\n## Solution\nFixed in [**5.3.7**](https://github.com/spring-projects/spring-framework/releases/tag/v5.3.7)  by [this](https://github.com/spring-projects/spring-framework/commit/cce60c479c22101f24b2b4abebb6d79440b120d1) commit and [this](https://github.com/spring-projects/spring-framework/commit/0d0d75e25322d8161002d861fff3ec04ba8be5ac) commit, and in [**5.2.15**](https://github.com/spring-projects/spring-framework/releases/tag/v5.2.15.RELEASE) by [this](https://github.com/spring-projects/spring-framework/commit/85ad63bd35f6f10fa5549ba9a11869144338bd8a) commit.\n\nThe latest stable releases are available [here](https://github.com/spring-projects/spring-framework/releases/).\n\n\n\n## Dependency tree\n- org.owasp.webgoat:webgoat-container:v8.1.0:-maven\n    - org.springframework.boot:spring-boot-starter-data-jpa:2.2.2.RELEASE\n        - org.springframework.boot:spring-boot-starter-jdbc:2.2.2.RELEASE\n            - org.springframework:spring-jdbc:5.2.2.RELEASE\n\n\n## References\n* Common Weakness Enumeration: [CWE-264](https://cwe.mitre.org/data/definitions/264.html)\n* Common Weakness Enumeration: [CWE-376](https://cwe.mitre.org/data/definitions/376.html)\n\n","text":"Spring Framework is vulnerable to privilege escalation due to the creation of unsafe temporary directories by the WebFlux component. A local authenticated attacker could modify arbitrary files via maliciously crafted `multipart` requests. \n\nThis vulnerability does not affect Spring MVC applications, or applications that do not handle `multipart` file requests."},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-264","external/cwe/cwe-376"]},"defaultConfiguration":{"level":"warning"}},{"id":"CVE-2022-22970 spring-jdbc 5.2.2.RELEASE: spring-boot-starter-data-jpa 2.2.2.RELEASE: org.springframework","shortDescription":{"text":"Transitive Dependency: spring-jdbc 5.2.2.RELEASE from spring-boot-starter-data-jpa 2.2.2.RELEASE (CVE-2022-22970)"},"fullDescription":{"text":"Spring Framework is vulnerable to denial-of-service (DoS) due to the improper implementation of data binding functionality. A remote attacker could cause a vulnerable server to crash if that server provides file upload functionality."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| spring-jdbc 5.2.2.RELEASE  | 5.3.31  | 6.1.2 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/ba6e9d03-9fbd-4086-9631-99d1ad5e520c?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=09f17d81-b282-43ec-9f2b-36c8021d3ca7)\n\n\n## Description\nSpring Framework is vulnerable to denial-of-service (DoS) due to the improper implementation of data binding functionality. A remote attacker could cause a vulnerable server to crash if that server provides file upload functionality.\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [CVE-2022-22970](https://openhub.net/vulnerabilities/bdsa/CVE-2022-22970) - Incorrect Provision of Specified Functionality\n\n\n\n## Solution\nFixed in version [**5.3.20**](https://github.com/spring-projects/spring-framework/releases/tag/v5.3.20) and in version [**5.2.22**](https://github.com/spring-projects/spring-framework/releases/tag/v5.2.22.RELEASE).\n\nThe latest stable releases can be found [here](https://github.com/spring-projects/spring-framework/releases).\n\n\n\n## Dependency tree\n- org.owasp.webgoat:webgoat-container:v8.1.0:-maven\n    - org.springframework.boot:spring-boot-starter-data-jpa:2.2.2.RELEASE\n        - org.springframework.boot:spring-boot-starter-jdbc:2.2.2.RELEASE\n            - org.springframework:spring-jdbc:5.2.2.RELEASE\n\n\n## References\n* Common Weakness Enumeration: [CWE-684](https://cwe.mitre.org/data/definitions/684.html)\n\n","text":"Spring Framework is vulnerable to denial-of-service (DoS) due to the improper implementation of data binding functionality. A remote attacker could cause a vulnerable server to crash if that server provides file upload functionality."},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-684"]},"defaultConfiguration":{"level":"warning"}},{"id":"CVE-2022-22971 spring-jdbc 5.2.2.RELEASE: spring-boot-starter-data-jpa 2.2.2.RELEASE: org.springframework","shortDescription":{"text":"Transitive Dependency: spring-jdbc 5.2.2.RELEASE from spring-boot-starter-data-jpa 2.2.2.RELEASE (CVE-2022-22971)"},"fullDescription":{"text":"Spring Framework is vulnerable to denial-of-service (DoS) due to the improper handling of the STOMP protocol for websockets. A remote authenticated attacker could leverage this issue in order to cause a server to crash."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| spring-jdbc 5.2.2.RELEASE  | 5.3.31  | 6.1.2 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/ba6e9d03-9fbd-4086-9631-99d1ad5e520c?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=09f17d81-b282-43ec-9f2b-36c8021d3ca7)\n\n\n## Description\nSpring Framework is vulnerable to denial-of-service (DoS) due to the improper handling of the STOMP protocol for websockets. A remote authenticated attacker could leverage this issue in order to cause a server to crash.\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [CVE-2022-22971](https://openhub.net/vulnerabilities/bdsa/CVE-2022-22971) - Incorrect Provision of Specified Functionality\n\n\n\n## Solution\nFixed in version [**5.3.20**](https://github.com/spring-projects/spring-framework/releases/tag/v5.3.20) and in version [**5.2.22**](https://github.com/spring-projects/spring-framework/releases/tag/v5.2.22.RELEASE).\n\nThe latest stable releases can be found [here](https://github.com/spring-projects/spring-framework/releases).\n\n\n\n## Dependency tree\n- org.owasp.webgoat:webgoat-container:v8.1.0:-maven\n    - org.springframework.boot:spring-boot-starter-data-jpa:2.2.2.RELEASE\n        - org.springframework.boot:spring-boot-starter-jdbc:2.2.2.RELEASE\n            - org.springframework:spring-jdbc:5.2.2.RELEASE\n\n\n## References\n* Common Weakness Enumeration: [CWE-684](https://cwe.mitre.org/data/definitions/684.html)\n\n","text":"Spring Framework is vulnerable to denial-of-service (DoS) due to the improper handling of the STOMP protocol for websockets. A remote authenticated attacker could leverage this issue in order to cause a server to crash."},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-684"]},"defaultConfiguration":{"level":"warning"}},{"id":"CVE-2023-20861 spring-jdbc 5.2.2.RELEASE: spring-boot-starter-data-jpa 2.2.2.RELEASE: org.springframework","shortDescription":{"text":"Transitive Dependency: spring-jdbc 5.2.2.RELEASE from spring-boot-starter-data-jpa 2.2.2.RELEASE (CVE-2023-20861)"},"fullDescription":{"text":"Spring Framework is vulnerable to denial-of-service (DoS) via specially crafted SpEL expressions. An attacker could exploit this issue by passing a crafted SpEL expression to the application which may result in a crash."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| spring-jdbc 5.2.2.RELEASE  | 5.3.31  | 6.1.2 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/ba6e9d03-9fbd-4086-9631-99d1ad5e520c?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=09f17d81-b282-43ec-9f2b-36c8021d3ca7)\n\n\n## Description\nSpring Framework is vulnerable to denial-of-service (DoS) via specially crafted SpEL expressions. An attacker could exploit this issue by passing a crafted SpEL expression to the application which may result in a crash.\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [CVE-2023-20861](https://openhub.net/vulnerabilities/bdsa/CVE-2023-20861) - Weak Input Validation\n\n\n\n## Solution\nFixed in:\n* [**5.2.23**](https://github.com/spring-projects/spring-framework/releases/tag/v5.2.23.RELEASE) by [this](https://github.com/spring-projects/spring-framework/commit/52c93b1c4b24d70de233a958e60e7c5822bd274f) commit,\n* [**5.3.26**](https://github.com/spring-projects/spring-framework/releases/tag/v5.3.26) by [this](https://github.com/spring-projects/spring-framework/commit/430fc25acad2e85cbdddcd52b64481691f03ebd1) commit,\n* [**6.0.7**](https://github.com/spring-projects/spring-framework/releases/tag/v6.0.7) by [this](https://github.com/spring-projects/spring-framework/commit/935c29e3ddba5b19951e54f6685c70ed45d9cbe5) commit.\n\nThe latest stable releases are available [here](https://github.com/spring-projects/spring-framework/releases).\n\n\n\n## Dependency tree\n- org.owasp.webgoat:webgoat-container:v8.1.0:-maven\n    - org.springframework.boot:spring-boot-starter-data-jpa:2.2.2.RELEASE\n        - org.springframework.boot:spring-boot-starter-jdbc:2.2.2.RELEASE\n            - org.springframework:spring-jdbc:5.2.2.RELEASE\n\n\n## References\n* Common Weakness Enumeration: [CWE-20](https://cwe.mitre.org/data/definitions/20.html)\n\n","text":"Spring Framework is vulnerable to denial-of-service (DoS) via specially crafted SpEL expressions. An attacker could exploit this issue by passing a crafted SpEL expression to the application which may result in a crash."},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-20"]},"defaultConfiguration":{"level":"warning"}},{"id":"CVE-2023-20863 spring-jdbc 5.2.2.RELEASE: spring-boot-starter-data-jpa 2.2.2.RELEASE: org.springframework","shortDescription":{"text":"Transitive Dependency: spring-jdbc 5.2.2.RELEASE from spring-boot-starter-data-jpa 2.2.2.RELEASE (CVE-2023-20863)"},"fullDescription":{"text":"Spring Framework is vulnerable to denial-of-service (DoS) via specially crafted SpEL expressions."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| spring-jdbc 5.2.2.RELEASE  | 5.3.31  | 6.1.2 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/ba6e9d03-9fbd-4086-9631-99d1ad5e520c?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=09f17d81-b282-43ec-9f2b-36c8021d3ca7)\n\n\n## Description\nSpring Framework is vulnerable to denial-of-service (DoS) via specially crafted SpEL expressions.\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [CVE-2023-20863](https://openhub.net/vulnerabilities/bdsa/CVE-2023-20863) - Weak Input Validation\n\n\n\n## Solution\nFixed in:\n* [**5.2.24**](https://github.com/spring-projects/spring-framework/releases/tag/v5.2.24.RELEASE)\n* [**5.3.27**](https://github.com/spring-projects/spring-framework/releases/tag/v5.3.27)\n* [**6.0.8**](https://github.com/spring-projects/spring-framework/releases/tag/v6.0.8)\n\nThe latest stable releases are available [here](https://github.com/spring-projects/spring-framework/releases).\n\n\n\n## Dependency tree\n- org.owasp.webgoat:webgoat-container:v8.1.0:-maven\n    - org.springframework.boot:spring-boot-starter-data-jpa:2.2.2.RELEASE\n        - org.springframework.boot:spring-boot-starter-jdbc:2.2.2.RELEASE\n            - org.springframework:spring-jdbc:5.2.2.RELEASE\n\n\n## References\n* Common Weakness Enumeration: [CWE-20](https://cwe.mitre.org/data/definitions/20.html)\n\n","text":"Spring Framework is vulnerable to denial-of-service (DoS) via specially crafted SpEL expressions."},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-20"]},"defaultConfiguration":{"level":"warning"}},{"id":"CVE-2020-5421 spring-jdbc 5.2.2.RELEASE: spring-boot-starter-data-jpa 2.2.2.RELEASE: org.springframework","shortDescription":{"text":"Transitive Dependency: spring-jdbc 5.2.2.RELEASE from spring-boot-starter-data-jpa 2.2.2.RELEASE (CVE-2020-5421)"},"fullDescription":{"text":"It was discovered that Spring Framework was vulnerable to RFD protection bypass. In some instances, depending on the browser used, an attacker could bypass the RFD attack protections via the use of a `jsessionid` path parameter."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| spring-jdbc 5.2.2.RELEASE  | 5.3.31  | 6.1.2 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/ba6e9d03-9fbd-4086-9631-99d1ad5e520c?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=09f17d81-b282-43ec-9f2b-36c8021d3ca7)\n\n\n## Description\nIt was discovered that Spring Framework was vulnerable to RFD protection bypass. In some instances, depending on the browser used, an attacker could bypass the RFD attack protections via the use of a `jsessionid` path parameter.\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [CVE-2020-5421](https://openhub.net/vulnerabilities/bdsa/CVE-2020-5421) - Weak Input Validation\n\n\n\n## Solution\nFixed in:\n* [**5.2.9**](https://github.com/spring-projects/spring-framework/releases/tag/v5.2.9.RELEASE) by [this](https://github.com/spring-projects/spring-framework/commit/899761f0a8890353dc01f10d2af96ae192f3e655) commit,\n* [**5.1.18**](https://github.com/spring-projects/spring-framework/releases/tag/v5.1.18.RELEASE) by [this](https://github.com/spring-projects/spring-framework/commit/a63c8886c00f30fea5b25f50ddf6f56c6eb957bd) commit,\n* [**5.0.19**](https://github.com/spring-projects/spring-framework/releases/tag/v5.0.19.RELEASE) by [this](https://github.com/spring-projects/spring-framework/commit/aec3a4c69e02d87f87258b0ab5c1d6c83f4cb44f) commit,\n* [**4.3.29**](https://github.com/spring-projects/spring-framework/releases/tag/v4.3.29.RELEASE) by [this](https://github.com/spring-projects/spring-framework/commit/2f75212eb667a30fe2fa9b5aca8f22d5e255821f) commit.\n\n\n\n## Dependency tree\n- org.owasp.webgoat:webgoat-container:v8.1.0:-maven\n    - org.springframework.boot:spring-boot-starter-data-jpa:2.2.2.RELEASE\n        - org.springframework.boot:spring-boot-starter-jdbc:2.2.2.RELEASE\n            - org.springframework:spring-jdbc:5.2.2.RELEASE\n\n\n## References\n* Common Weakness Enumeration: [CWE-20](https://cwe.mitre.org/data/definitions/20.html)\n\n","text":"It was discovered that Spring Framework was vulnerable to RFD protection bypass. In some instances, depending on the browser used, an attacker could bypass the RFD attack protections via the use of a `jsessionid` path parameter."},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-20"]},"defaultConfiguration":{"level":"warning"}},{"id":"CVE-2022-22968 spring-jdbc 5.2.2.RELEASE: spring-boot-starter-data-jpa 2.2.2.RELEASE: org.springframework","shortDescription":{"text":"Transitive Dependency: spring-jdbc 5.2.2.RELEASE from spring-boot-starter-data-jpa 2.2.2.RELEASE (CVE-2022-22968)"},"fullDescription":{"text":"Spring Framework is vulnerable to data binding protection bypass due to improper validation of specified disallowed fields in `DataBinders`. This could be leveraged by an attacker to bypass the suggested workaround to **CVE-2022-22965** (**BDSA-2022-0858**) if it is improperly implemented."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| spring-jdbc 5.2.2.RELEASE  | 5.3.31  | 6.1.2 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/ba6e9d03-9fbd-4086-9631-99d1ad5e520c?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=09f17d81-b282-43ec-9f2b-36c8021d3ca7)\n\n\n## Description\nSpring Framework is vulnerable to data binding protection bypass due to improper validation of specified disallowed fields in `DataBinders`. This could be leveraged by an attacker to bypass the suggested workaround to **CVE-2022-22965** (**BDSA-2022-0858**) if it is improperly implemented.\n\n## Vulnerabilities(BDSA,CVE)\n:large_blue_circle: [CVE-2022-22968](https://openhub.net/vulnerabilities/bdsa/CVE-2022-22968) - Weak Input Validation\n\n\n\n## Solution\nFixed  in [**5.3.19**](https://github.com/spring-projects/spring-framework/releases/tag/v5.3.19) by [this](https://github.com/spring-projects/spring-framework/commit/a7cf19cec5ebd270f97a194d749e2d5701ad2ab7) commit and [**5.2.21**](https://github.com/spring-projects/spring-framework/releases/tag/v5.2.21.RELEASE) by [this](https://github.com/spring-projects/spring-framework/commit/833e750175349ab4fd502109a8b41af77e25cdea) commit.\n\n\n\n## Dependency tree\n- org.owasp.webgoat:webgoat-container:v8.1.0:-maven\n    - org.springframework.boot:spring-boot-starter-data-jpa:2.2.2.RELEASE\n        - org.springframework.boot:spring-boot-starter-jdbc:2.2.2.RELEASE\n            - org.springframework:spring-jdbc:5.2.2.RELEASE\n\n\n## References\n* Common Weakness Enumeration: [CWE-20](https://cwe.mitre.org/data/definitions/20.html)\n\n","text":"Spring Framework is vulnerable to data binding protection bypass due to improper validation of specified disallowed fields in `DataBinders`. This could be leveraged by an attacker to bypass the suggested workaround to **CVE-2022-22965** (**BDSA-2022-0858**) if it is improperly implemented."},"properties":{"security-severity":"3.8","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-20"]},"defaultConfiguration":{"level":"note"}},{"id":"CVE-2020-13692 postgresql 42.2.8: org.postgresql","shortDescription":{"text":"Direct Dependency: postgresql 42.2.8 (CVE-2020-13692)"},"fullDescription":{"text":"PgJDBC is vulnerable to XML external entity injection (XXE). A remote attacker could leverage this to cause a variety of impacts. These include:\n* Disclosure of confidential data\n* Denial-of-service (DoS)\n* Server Side Request Forgery (SSRF)\n* Port scanning"},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| postgresql 42.2.8  | 42.7.1  | 42.7.1 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/64d59ab2-74a3-4774-9bd1-06545379dfc1?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=c34847da-31e2-471d-b230-11ebd5e58dc4)\n\n\n## Description\nPgJDBC is vulnerable to XML external entity injection (XXE). A remote attacker could leverage this to cause a variety of impacts. These include:\n* Disclosure of confidential data\n* Denial-of-service (DoS)\n* Server Side Request Forgery (SSRF)\n* Port scanning\n\n## Vulnerabilities(BDSA,CVE)\n:orange_circle: [CVE-2020-13692](https://openhub.net/vulnerabilities/bdsa/CVE-2020-13692) - XML External Entity (XXE) Injection\n\n\n\n## Solution\nFixed in version [**42.2.13**](https://github.com/pgjdbc/pgjdbc/releases/tag/REL42.2.13) by [this](https://github.com/pgjdbc/pgjdbc/commit/14b62aca4764d496813f55a43d050b017e01eb65) commit.\n\n\n\n\n\n## References\n* Common Weakness Enumeration: [CWE-611](https://cwe.mitre.org/data/definitions/611.html)\n\n","text":"PgJDBC is vulnerable to XML external entity injection (XXE). A remote attacker could leverage this to cause a variety of impacts. These include:\n* Disclosure of confidential data\n* Denial-of-service (DoS)\n* Server Side Request Forgery (SSRF)\n* Port scanning"},"properties":{"security-severity":"8.9","tags":["security","open_source_analysis","direct_dependency","patch_available","external/cwe/cwe-611"]},"defaultConfiguration":{"level":"error"}},{"id":"CVE-2022-21724 postgresql 42.2.8: org.postgresql","shortDescription":{"text":"Direct Dependency: postgresql 42.2.8 (CVE-2022-21724)"},"fullDescription":{"text":"pgjdbc is vulnerable to remote code execution (RCE) due to the insufficient validation of classes that are to be instantiated. An attacker could potentially execute arbitrary code on a vulnerable server by causing that server to load a dangerous class."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| postgresql 42.2.8  | 42.7.1  | 42.7.1 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/64d59ab2-74a3-4774-9bd1-06545379dfc1?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=c34847da-31e2-471d-b230-11ebd5e58dc4)\n\n\n## Description\npgjdbc is vulnerable to remote code execution (RCE) due to the insufficient validation of classes that are to be instantiated. An attacker could potentially execute arbitrary code on a vulnerable server by causing that server to load a dangerous class.\n\n## Vulnerabilities(BDSA,CVE)\n:orange_circle: [CVE-2022-21724](https://openhub.net/vulnerabilities/bdsa/CVE-2022-21724) - Improper Initialization\n\n\n\n## Solution\nFixed in version [**42.3.2-rc2**](https://github.com/pgjdbc/pgjdbc/releases/tag/REL42.3.2-rc2) by [this](https://github.com/pgjdbc/pgjdbc/commit/f4d0ed69c0b3aae8531d83d6af4c57f22312c813) commit, and in [**42.2.25-rc1**](https://github.com/pgjdbc/pgjdbc/releases/tag/REL42.2.25-rc1) by [this](https://github.com/pgjdbc/pgjdbc/commit/8a363a7c0989ef8a8f45bb055b4003f758ceabd5) commit.\n\nThe latest stable releases can be found [here](https://github.com/pgjdbc/pgjdbc/tags).\n\n\n\n\n\n## References\n* Common Weakness Enumeration: [CWE-665](https://cwe.mitre.org/data/definitions/665.html)\n\n","text":"pgjdbc is vulnerable to remote code execution (RCE) due to the insufficient validation of classes that are to be instantiated. An attacker could potentially execute arbitrary code on a vulnerable server by causing that server to load a dangerous class."},"properties":{"security-severity":"8.9","tags":["security","open_source_analysis","direct_dependency","patch_available","external/cwe/cwe-665"]},"defaultConfiguration":{"level":"error"}},{"id":"CVE-2022-26520 postgresql 42.2.8: org.postgresql","shortDescription":{"text":"Direct Dependency: postgresql 42.2.8 (CVE-2022-26520)"},"fullDescription":{"text":"pgjdbc is vulnerable to remote code execution (RCE) due to an arbitrary file write issue in the Connection Properties settings. An attacker could potentially exploit this by creating an executable `.JSP` file under a Tomcat web root.\n\n**Note:** The vendor disputes that the issue lies within pgjdbc, instead suggesting that the issue lies with how the driver can be allowed to run with untrusted connection properties within an application."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| postgresql 42.2.8  | 42.7.1  | 42.7.1 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/64d59ab2-74a3-4774-9bd1-06545379dfc1?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=c34847da-31e2-471d-b230-11ebd5e58dc4)\n\n\n## Description\npgjdbc is vulnerable to remote code execution (RCE) due to an arbitrary file write issue in the Connection Properties settings. An attacker could potentially exploit this by creating an executable `.JSP` file under a Tomcat web root.\n\n**Note:** The vendor disputes that the issue lies within pgjdbc, instead suggesting that the issue lies with how the driver can be allowed to run with untrusted connection properties within an application.\n\n## Vulnerabilities(BDSA,CVE)\n:orange_circle: [CVE-2022-26520](https://openhub.net/vulnerabilities/bdsa/CVE-2022-26520) - Improper Control of Generation of Code ('Code Injection')\n\n\n\n## Solution\nFixed in [**42.3.3-rc1**](https://github.com/pgjdbc/pgjdbc/releases/tag/REL42.3.3-rc1) by [this](https://github.com/pgjdbc/pgjdbc/commit/12c7fb40f761d69d64ced158684af2ccef279b48) commit and [this](https://github.com/pgjdbc/pgjdbc/commit/f6d47034a4ce292e1a659fa00963f6f713117064) commit.\n\nThe latest stable releases can be found [here](https://github.com/pgjdbc/pgjdbc/releases).\n\n## Workaround\nThe vendor suggests sanitizing the inputs to the driver as a mitigation.\n\n\n\n## References\n* Common Weakness Enumeration: [CWE-94](https://cwe.mitre.org/data/definitions/94.html)\n\n","text":"pgjdbc is vulnerable to remote code execution (RCE) due to an arbitrary file write issue in the Connection Properties settings. An attacker could potentially exploit this by creating an executable `.JSP` file under a Tomcat web root.\n\n**Note:** The vendor disputes that the issue lies within pgjdbc, instead suggesting that the issue lies with how the driver can be allowed to run with untrusted connection properties within an application."},"properties":{"security-severity":"8.9","tags":["security","open_source_analysis","direct_dependency","patch_available","external/cwe/cwe-94"]},"defaultConfiguration":{"level":"error"}},{"id":"CVE-2022-31197 postgresql 42.2.8: org.postgresql","shortDescription":{"text":"Direct Dependency: postgresql 42.2.8 (CVE-2022-31197)"},"fullDescription":{"text":"The PostgreSQL JDBC driver is vulnerable to SQL injection due to missing sanitization of supplied column names in the `java.sql.ResultRow.refreshRow()` implementation. With applications that invoke this method, this could allow an attacker to execute malicious SQL statements within the privileges of the JDBC user. An attacker could exploit this by specifying a column name containing crafted SQL and tricking a victim into executing SQL against the table containing the target column."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| postgresql 42.2.8  | 42.7.1  | 42.7.1 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/64d59ab2-74a3-4774-9bd1-06545379dfc1?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=c34847da-31e2-471d-b230-11ebd5e58dc4)\n\n\n## Description\nThe PostgreSQL JDBC driver is vulnerable to SQL injection due to missing sanitization of supplied column names in the `java.sql.ResultRow.refreshRow()` implementation. With applications that invoke this method, this could allow an attacker to execute malicious SQL statements within the privileges of the JDBC user. An attacker could exploit this by specifying a column name containing crafted SQL and tricking a victim into executing SQL against the table containing the target column.\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [CVE-2022-31197](https://openhub.net/vulnerabilities/bdsa/CVE-2022-31197) - SQL Injection\n\n\n\n## Solution\nFixed in:\n* [**42.2.26-rc1**](https://github.com/pgjdbc/pgjdbc/releases/tag/REL42.2.26-rc1) by [this](https://github.com/pgjdbc/pgjdbc/commit/b5ee575b7d6e0918a58fe533f6c50b0c7e9f73c0) commit,\n* [**42.3.7-rc1**](https://github.com/pgjdbc/pgjdbc/releases/tag/REL42.3.7-rc1) by [this](https://github.com/pgjdbc/pgjdbc/commit/0afaa71d5254804f8bab7caab96735c5f7d11aa1) commit,\n* [**42.4.1-rc1**](https://github.com/pgjdbc/pgjdbc/releases/tag/REL42.4.1-rc1) by [this](https://github.com/pgjdbc/pgjdbc/commit/739e599d52ad80f8dcd6efedc6157859b1a9d637) commit.\n\n## Workaround\nIf upgrading to a fixed version cannot be performed immediately, the vendor recommends the following workaround [here](https://github.com/pgjdbc/pgjdbc/security/advisories/GHSA-r38f-c4h4-hqq2):\n\u003e Check that you are not using the `ResultSet.refreshRow()` method.\n\u003e \n\u003e If you are, ensure that the code that executes that method does not connect to a database that is controlled by an unauthenticated or malicious user. If your application only connects to its own database with a fixed schema with no DDL permissions, then you will not be affected by this vulnerability as it requires a maliciously crafted schema.\n\n\n\n## References\n* Common Weakness Enumeration: [CWE-89](https://cwe.mitre.org/data/definitions/89.html)\n\n","text":"The PostgreSQL JDBC driver is vulnerable to SQL injection due to missing sanitization of supplied column names in the `java.sql.ResultRow.refreshRow()` implementation. With applications that invoke this method, this could allow an attacker to execute malicious SQL statements within the privileges of the JDBC user. An attacker could exploit this by specifying a column name containing crafted SQL and tricking a victim into executing SQL against the table containing the target column."},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","direct_dependency","patch_available","external/cwe/cwe-89"]},"defaultConfiguration":{"level":"warning"}},{"id":"CVE-2022-41946 postgresql 42.2.8: org.postgresql","shortDescription":{"text":"Direct Dependency: postgresql 42.2.8 (CVE-2022-41946)"},"fullDescription":{"text":"PostgreSQL JDBC Driver is vulnerable to information disclosure within the file system. This could allow an authenticated but unauthorized local attacker to access sensitive data within files created in the TemporaryFolder.\n\n**Note:** \n* This vulnerability only affects Unix like systems.\n* For users running **Java 1.6 and lower**, there is no patch available, please follow the workaround provided. A patch is available for users running Java 1.7 and above."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| postgresql 42.2.8  | 42.7.1  | 42.7.1 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/64d59ab2-74a3-4774-9bd1-06545379dfc1?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=c34847da-31e2-471d-b230-11ebd5e58dc4)\n\n\n## Description\nPostgreSQL JDBC Driver is vulnerable to information disclosure within the file system. This could allow an authenticated but unauthorized local attacker to access sensitive data within files created in the TemporaryFolder.\n\n**Note:** \n* This vulnerability only affects Unix like systems.\n* For users running **Java 1.6 and lower**, there is no patch available, please follow the workaround provided. A patch is available for users running Java 1.7 and above.\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [CVE-2022-41946](https://openhub.net/vulnerabilities/bdsa/CVE-2022-41946) - Sensitive Data Exposure\n\n\n\n## Solution\nFixed in versions:\n* [**42.5.1-rc1**](https://github.com/pgjdbc/pgjdbc/releases/tag/REL42.5.1-rc1) by [this](https://github.com/pgjdbc/pgjdbc/commit/9008dc9aade6dbfe4efafcd6872ebc55f4699cf5) commit.\n* [**42.4.3-rc1**](https://github.com/pgjdbc/pgjdbc/releases/tag/REL42.4.3-rc1) by [this](https://github.com/pgjdbc/pgjdbc/commit/34855cffb9079edf95cf77930f3e3b73f6a1b139) commit.\n* [**42.3.8-rc1**](https://github.com/pgjdbc/pgjdbc/releases/tag/REL42.3.8-rc1) by [this](https://github.com/pgjdbc/pgjdbc/commit/e73c6b6b53ff11bc0bd06c44130a880d3bf77c55) commit.\n* [**42.2.27-rc1**](https://github.com/pgjdbc/pgjdbc/releases/tag/REL42.2.27-rc1) by [this](https://github.com/pgjdbc/pgjdbc/commit/91b8c2ca600f82d2ec47c3fb54ca2036b000e320) commit.\n\nThe latest stable releases can be found [here](https://github.com/pgjdbc/pgjdbc/releases).\n\n## Workaround\nThe vendor has issued the following workaround for users running Java 1.6 and lower:\n\n\"Specifying the `java.io.tmpdir` system environment variable to a directory that is exclusively owned by the executing user will fix this vulnerability\"\n\n\n\n## References\n* Common Weakness Enumeration: [CWE-200](https://cwe.mitre.org/data/definitions/200.html)\n* Common Weakness Enumeration: [CWE-377](https://cwe.mitre.org/data/definitions/377.html)\n\n","text":"PostgreSQL JDBC Driver is vulnerable to information disclosure within the file system. This could allow an authenticated but unauthorized local attacker to access sensitive data within files created in the TemporaryFolder.\n\n**Note:** \n* This vulnerability only affects Unix like systems.\n* For users running **Java 1.6 and lower**, there is no patch available, please follow the workaround provided. A patch is available for users running Java 1.7 and above."},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","direct_dependency","patch_available","external/cwe/cwe-200","external/cwe/cwe-377"]},"defaultConfiguration":{"level":"warning"}},{"id":"CVE-2016-1000027 spring-webmvc 5.2.2.RELEASE: spring-boot-starter-web 2.2.2.RELEASE: org.springframework","shortDescription":{"text":"Transitive Dependency: spring-webmvc 5.2.2.RELEASE from spring-boot-starter-web 2.2.2.RELEASE (CVE-2016-1000027)"},"fullDescription":{"text":"Pivotal Spring Framework through 5.3.16 suffers from a potential remote code execution (RCE) issue if used for Java deserialization of untrusted data. Depending on how the library is implemented within a product, this issue may or not occur, and authentication may be required. NOTE: the vendor's position is that untrusted data is not an intended use case. The product's behavior will not be changed because some users rely on deserialization of trusted data."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| spring-webmvc 5.2.2.RELEASE  | 5.3.31  | 6.1.2 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/ba6e9d03-9fbd-4086-9631-99d1ad5e520c?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=09f17d81-b282-43ec-9f2b-36c8021d3ca7)\n\n\n## Description\nPivotal Spring Framework through 5.3.16 suffers from a potential remote code execution (RCE) issue if used for Java deserialization of untrusted data. Depending on how the library is implemented within a product, this issue may or not occur, and authentication may be required. NOTE: the vendor's position is that untrusted data is not an intended use case. The product's behavior will not be changed because some users rely on deserialization of trusted data.\n\n## Vulnerabilities(BDSA,CVE)\n:red_circle: [CVE-2016-1000027](https://openhub.net/vulnerabilities/bdsa/CVE-2016-1000027) - Insecure Object Deserialization\n\n\n\n\n\n\n\n## Dependency tree\n- org.owasp.webgoat:webgoat-container:v8.1.0:-maven\n    - org.springframework.boot:spring-boot-starter-web:2.2.2.RELEASE\n        - org.springframework:spring-webmvc:5.2.2.RELEASE\n\n\n## References\n* Common Weakness Enumeration: [CWE-502](https://cwe.mitre.org/data/definitions/502.html)\n\n","text":"Pivotal Spring Framework through 5.3.16 suffers from a potential remote code execution (RCE) issue if used for Java deserialization of untrusted data. Depending on how the library is implemented within a product, this issue may or not occur, and authentication may be required. NOTE: the vendor's position is that untrusted data is not an intended use case. The product's behavior will not be changed because some users rely on deserialization of trusted data."},"properties":{"security-severity":"9.1","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-502"]},"defaultConfiguration":{"level":"error"}},{"id":"CVE-2022-22965 spring-webmvc 5.2.2.RELEASE: spring-boot-starter-web 2.2.2.RELEASE: org.springframework","shortDescription":{"text":"Transitive Dependency: spring-webmvc 5.2.2.RELEASE from spring-boot-starter-web 2.2.2.RELEASE (CVE-2022-22965)"},"fullDescription":{"text":"Spring Framework is vulnerable to a flaw in the access restrictions to the security sensitive `ClassLoader` property. The restrictions can be bypassed through alternative paths available with Java9 and later. An attacker can leverage this vulnerability to cause remote code execution (RCE).\n\n**Note** this issue exists because the restrictions that were introduced to prevent exploitation of BDSA-2010-0001 (CVE-2010-1622) can be bypassed on platforms where Java9 and later are in use.\n\nThis vulnerability is listed as exploitable by the Cybersecurity \u0026 Infrastructure Security Agency in their [Known Exploited Vulnerabilities Catalog](https://www.cisa.gov/known-exploited-vulnerabilities-catalog)."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| spring-webmvc 5.2.2.RELEASE  | 5.3.31  | 6.1.2 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/ba6e9d03-9fbd-4086-9631-99d1ad5e520c?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=09f17d81-b282-43ec-9f2b-36c8021d3ca7)\n\n\n## Description\nSpring Framework is vulnerable to a flaw in the access restrictions to the security sensitive `ClassLoader` property. The restrictions can be bypassed through alternative paths available with Java9 and later. An attacker can leverage this vulnerability to cause remote code execution (RCE).\n\n**Note** this issue exists because the restrictions that were introduced to prevent exploitation of BDSA-2010-0001 (CVE-2010-1622) can be bypassed on platforms where Java9 and later are in use.\n\nThis vulnerability is listed as exploitable by the Cybersecurity \u0026 Infrastructure Security Agency in their [Known Exploited Vulnerabilities Catalog](https://www.cisa.gov/known-exploited-vulnerabilities-catalog).\n\n## Vulnerabilities(BDSA,CVE)\n:red_circle: [CVE-2022-22965](https://openhub.net/vulnerabilities/bdsa/CVE-2022-22965) - Incomplete List of Disallowed Inputs\n\n\n\n## Solution\nFixed in [**5.3.18**](https://github.com/spring-projects/spring-framework/releases/tag/v5.3.18) by [this](https://github.com/spring-projects/spring-framework/commit/002546b3e4b8d791ea6acccb81eb3168f51abb15) commit and  [**5.2.20**](https://github.com/spring-projects/spring-framework/releases/tag/v5.2.20.RELEASE) by [this](https://github.com/spring-projects/spring-framework/commit/996f701a1916d10202c1d0d281f06ab1f2e1117e) commit .\n\nThe latest releases can be found [here](https://github.com/spring-projects/spring-framework/tags).\n\n## Workaround\nAn official workaround for the issue has been outlined [here](https://spring.io/blog/2022/03/31/spring-framework-rce-early-announcement).\n\n## Dependency tree\n- org.owasp.webgoat:webgoat-container:v8.1.0:-maven\n    - org.springframework.boot:spring-boot-starter-web:2.2.2.RELEASE\n        - org.springframework:spring-webmvc:5.2.2.RELEASE\n\n\n## References\n* Common Weakness Enumeration: [CWE-184](https://cwe.mitre.org/data/definitions/184.html)\n* Common Weakness Enumeration: [CWE-749](https://cwe.mitre.org/data/definitions/749.html)\n\n","text":"Spring Framework is vulnerable to a flaw in the access restrictions to the security sensitive `ClassLoader` property. The restrictions can be bypassed through alternative paths available with Java9 and later. An attacker can leverage this vulnerability to cause remote code execution (RCE).\n\n**Note** this issue exists because the restrictions that were introduced to prevent exploitation of BDSA-2010-0001 (CVE-2010-1622) can be bypassed on platforms where Java9 and later are in use.\n\nThis vulnerability is listed as exploitable by the Cybersecurity \u0026 Infrastructure Security Agency in their [Known Exploited Vulnerabilities Catalog](https://www.cisa.gov/known-exploited-vulnerabilities-catalog)."},"properties":{"security-severity":"9.1","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-184","external/cwe/cwe-749"]},"defaultConfiguration":{"level":"error"}},{"id":"CVE-2020-5397 spring-webmvc 5.2.2.RELEASE: spring-boot-starter-web 2.2.2.RELEASE: org.springframework","shortDescription":{"text":"Transitive Dependency: spring-webmvc 5.2.2.RELEASE from spring-boot-starter-web 2.2.2.RELEASE (CVE-2020-5397)"},"fullDescription":{"text":"Spring Framework is vulnerable to cross-site request forgery (CSRF) attacks via CORS preflight requests which target Spring MVC or Spring WebFlux endpoints."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| spring-webmvc 5.2.2.RELEASE  | 5.3.31  | 6.1.2 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/ba6e9d03-9fbd-4086-9631-99d1ad5e520c?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=09f17d81-b282-43ec-9f2b-36c8021d3ca7)\n\n\n## Description\nSpring Framework is vulnerable to cross-site request forgery (CSRF) attacks via CORS preflight requests which target Spring MVC or Spring WebFlux endpoints.\n\n## Vulnerabilities(BDSA,CVE)\n:orange_circle: [CVE-2020-5397](https://openhub.net/vulnerabilities/bdsa/CVE-2020-5397) - Cross-Site Request Forgery (CSRF)\n\n\n\n## Solution\nFixed in [**5.2.3**](https://github.com/spring-projects/spring-framework/releases/tag/v5.2.3.RELEASE).\n\n\n\n## Dependency tree\n- org.owasp.webgoat:webgoat-container:v8.1.0:-maven\n    - org.springframework.boot:spring-boot-starter-web:2.2.2.RELEASE\n        - org.springframework:spring-webmvc:5.2.2.RELEASE\n\n\n## References\n* Common Weakness Enumeration: [CWE-352](https://cwe.mitre.org/data/definitions/352.html)\n\n","text":"Spring Framework is vulnerable to cross-site request forgery (CSRF) attacks via CORS preflight requests which target Spring MVC or Spring WebFlux endpoints."},"properties":{"security-severity":"8.9","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-352"]},"defaultConfiguration":{"level":"error"}},{"id":"BDSA-2022-0847 spring-webmvc 5.2.2.RELEASE: spring-boot-starter-web 2.2.2.RELEASE: org.springframework","shortDescription":{"text":"Transitive Dependency: spring-webmvc 5.2.2.RELEASE from spring-boot-starter-web 2.2.2.RELEASE (BDSA-2022-0847)"},"fullDescription":{"text":"Software systems using Spring Framework may be vulnerable to unsafe deserialization if they employ unsafe use of certain provided deserialization functionality. A remote attacker could potentially execute arbitrary code on a vulnerable endpoint by passing a maliciously crafted serialized object to that endpoint.\n\n**Note**: This issue only affects software that has been written to leverage specific deserialization functionality provided by the Spring Framework without sanitization."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| spring-webmvc 5.2.2.RELEASE  | 5.3.31  | 6.1.2 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/ba6e9d03-9fbd-4086-9631-99d1ad5e520c?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=09f17d81-b282-43ec-9f2b-36c8021d3ca7)\n\n\n## Description\nSoftware systems using Spring Framework may be vulnerable to unsafe deserialization if they employ unsafe use of certain provided deserialization functionality. A remote attacker could potentially execute arbitrary code on a vulnerable endpoint by passing a maliciously crafted serialized object to that endpoint.\n\n**Note**: This issue only affects software that has been written to leverage specific deserialization functionality provided by the Spring Framework without sanitization.\n\n## Vulnerabilities(BDSA,CVE)\n:orange_circle: [BDSA-2022-0847](https://openhub.net/vulnerabilities/bdsa/BDSA-2022-0847) - Insecure Object Deserialization\n\n\n\n## Solution\nFixed in **[6.0.0-M4](https://github.com/spring-projects/spring-framework/releases/tag/v6.0.0-M4)** by [this](https://github.com/spring-projects/spring-framework/commit/7f7fb58dd0dae86d22268a4b59ac7c72a6c22529) commit.\n\nFixed in **[5.3.18](https://github.com/spring-projects/spring-framework/releases/tag/v5.3.18)** and **[5.2.20](https://github.com/spring-projects/spring-framework/releases/tag/v5.2.20.RELEASE)** by [this](https://github.com/spring-projects/spring-framework/commit/3811cd4c0a0be3aac6e842cf1890610ce986449d) commit.\n\n**Note**: These patches simply annotate the dangerous method as deprecated or documents the dangers. It is the responsibility of developers who call this method to ensure that it is not used with unsanitized untrusted input.\n\n\n\n## Dependency tree\n- org.owasp.webgoat:webgoat-container:v8.1.0:-maven\n    - org.springframework.boot:spring-boot-starter-web:2.2.2.RELEASE\n        - org.springframework:spring-webmvc:5.2.2.RELEASE\n\n\n## References\n* Common Weakness Enumeration: [CWE-502](https://cwe.mitre.org/data/definitions/502.html)\n\n","text":"Software systems using Spring Framework may be vulnerable to unsafe deserialization if they employ unsafe use of certain provided deserialization functionality. A remote attacker could potentially execute arbitrary code on a vulnerable endpoint by passing a maliciously crafted serialized object to that endpoint.\n\n**Note**: This issue only affects software that has been written to leverage specific deserialization functionality provided by the Spring Framework without sanitization."},"properties":{"security-severity":"8.9","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-502"]},"defaultConfiguration":{"level":"error"}},{"id":"CVE-2020-5398 spring-webmvc 5.2.2.RELEASE: spring-boot-starter-web 2.2.2.RELEASE: org.springframework","shortDescription":{"text":"Transitive Dependency: spring-webmvc 5.2.2.RELEASE from spring-boot-starter-web 2.2.2.RELEASE (CVE-2020-5398)"},"fullDescription":{"text":"Spring Framework is vulnerable to a reflected file download (RFD) attack via improper input validation on filenames in a `Content-Disposition` header."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| spring-webmvc 5.2.2.RELEASE  | 5.3.31  | 6.1.2 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/ba6e9d03-9fbd-4086-9631-99d1ad5e520c?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=09f17d81-b282-43ec-9f2b-36c8021d3ca7)\n\n\n## Description\nSpring Framework is vulnerable to a reflected file download (RFD) attack via improper input validation on filenames in a `Content-Disposition` header.\n\n## Vulnerabilities(BDSA,CVE)\n:orange_circle: [CVE-2020-5398](https://openhub.net/vulnerabilities/bdsa/CVE-2020-5398) - Weak Input Validation\n\n\n\n## Solution\nFixed by [this](https://github.com/spring-projects/spring-framework/commit/956ffe68587c8d5f21135b5ce4650af0c2dea933) commit in:\n* [**5.2.3**](https://github.com/spring-projects/spring-framework/releases/tag/v5.2.3.RELEASE)\n* [**5.1.13**](https://github.com/spring-projects/spring-framework/releases/tag/v5.1.13.RELEASE) \n* [**5.0.16**](https://github.com/spring-projects/spring-framework/releases/tag/v5.0.16.RELEASE)\n\n\n\n## Dependency tree\n- org.owasp.webgoat:webgoat-container:v8.1.0:-maven\n    - org.springframework.boot:spring-boot-starter-web:2.2.2.RELEASE\n        - org.springframework:spring-webmvc:5.2.2.RELEASE\n\n\n## References\n* Common Weakness Enumeration: [CWE-20](https://cwe.mitre.org/data/definitions/20.html)\n\n","text":"Spring Framework is vulnerable to a reflected file download (RFD) attack via improper input validation on filenames in a `Content-Disposition` header."},"properties":{"security-severity":"8.9","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-20"]},"defaultConfiguration":{"level":"error"}},{"id":"CVE-2021-22096 spring-webmvc 5.2.2.RELEASE: spring-boot-starter-web 2.2.2.RELEASE: org.springframework","shortDescription":{"text":"Transitive Dependency: spring-webmvc 5.2.2.RELEASE from spring-boot-starter-web 2.2.2.RELEASE (CVE-2021-22096)"},"fullDescription":{"text":"Spring Framework is vulnerable to log file injection due to the insufficient validation of user input in an undisclosed component. An attacker could leverage this issue in order to add arbitrary entries to a log file which could impact both the integrity issues and performance issues.\n\n**Note**: a follow-up to this issue was disclosed as **CVE-2021-22060** (**BDSA-2021-3236**), with further fixed releases that protect against additional types of input and in more places of the Spring Framework codebase."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| spring-webmvc 5.2.2.RELEASE  | 5.3.31  | 6.1.2 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/ba6e9d03-9fbd-4086-9631-99d1ad5e520c?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=09f17d81-b282-43ec-9f2b-36c8021d3ca7)\n\n\n## Description\nSpring Framework is vulnerable to log file injection due to the insufficient validation of user input in an undisclosed component. An attacker could leverage this issue in order to add arbitrary entries to a log file which could impact both the integrity issues and performance issues.\n\n**Note**: a follow-up to this issue was disclosed as **CVE-2021-22060** (**BDSA-2021-3236**), with further fixed releases that protect against additional types of input and in more places of the Spring Framework codebase.\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [CVE-2021-22096](https://openhub.net/vulnerabilities/bdsa/CVE-2021-22096) - Injection in Downstream Component\n\n\n\n## Solution\nFixed in versions [**5.3.14**](https://github.com/spring-projects/spring-framework/releases/tag/v5.3.14) and [**5.2.19**](https://github.com/spring-projects/spring-framework/releases/tag/v5.2.19.RELEASE).\n\nThe latest stable releases can be found [here](https://github.com/spring-projects/spring-framework/releases).\n\n\n\n## Dependency tree\n- org.owasp.webgoat:webgoat-container:v8.1.0:-maven\n    - org.springframework.boot:spring-boot-starter-web:2.2.2.RELEASE\n        - org.springframework:spring-webmvc:5.2.2.RELEASE\n\n\n## References\n* Common Weakness Enumeration: [CWE-74](https://cwe.mitre.org/data/definitions/74.html)\n\n","text":"Spring Framework is vulnerable to log file injection due to the insufficient validation of user input in an undisclosed component. An attacker could leverage this issue in order to add arbitrary entries to a log file which could impact both the integrity issues and performance issues.\n\n**Note**: a follow-up to this issue was disclosed as **CVE-2021-22060** (**BDSA-2021-3236**), with further fixed releases that protect against additional types of input and in more places of the Spring Framework codebase."},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-74"]},"defaultConfiguration":{"level":"warning"}},{"id":"CVE-2021-22060 spring-webmvc 5.2.2.RELEASE: spring-boot-starter-web 2.2.2.RELEASE: org.springframework","shortDescription":{"text":"Transitive Dependency: spring-webmvc 5.2.2.RELEASE from spring-boot-starter-web 2.2.2.RELEASE (CVE-2021-22060)"},"fullDescription":{"text":"Spring Framework is vulnerable to log file injection due to the insufficient validation of user input in an undisclosed component. An attacker could leverage this issue in order to add arbitrary entries to a log file which could impact both the integrity issues and performance issues.\n\n**Note**: the vendor states this issue exists as a follow up to CVE-2021-22096 (BDSA-2022-0011) that protects against additional types of input and in more places of the Spring Framework codebase."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| spring-webmvc 5.2.2.RELEASE  | 5.3.31  | 6.1.2 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/ba6e9d03-9fbd-4086-9631-99d1ad5e520c?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=09f17d81-b282-43ec-9f2b-36c8021d3ca7)\n\n\n## Description\nSpring Framework is vulnerable to log file injection due to the insufficient validation of user input in an undisclosed component. An attacker could leverage this issue in order to add arbitrary entries to a log file which could impact both the integrity issues and performance issues.\n\n**Note**: the vendor states this issue exists as a follow up to CVE-2021-22096 (BDSA-2022-0011) that protects against additional types of input and in more places of the Spring Framework codebase.\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [CVE-2021-22060](https://openhub.net/vulnerabilities/bdsa/CVE-2021-22060) - Injection in Downstream Component\n\n\n\n## Solution\nFixed in versions [**5.3.14**](https://github.com/spring-projects/spring-framework/releases/tag/v5.3.14) and [**5.2.19**](https://github.com/spring-projects/spring-framework/releases/tag/v5.2.19.RELEASE).\n\nThe latest stable releases can be found [here](https://github.com/spring-projects/spring-framework/releases).\n\n\n\n## Dependency tree\n- org.owasp.webgoat:webgoat-container:v8.1.0:-maven\n    - org.springframework.boot:spring-boot-starter-web:2.2.2.RELEASE\n        - org.springframework:spring-webmvc:5.2.2.RELEASE\n\n\n## References\n* Common Weakness Enumeration: [CWE-74](https://cwe.mitre.org/data/definitions/74.html)\n\n","text":"Spring Framework is vulnerable to log file injection due to the insufficient validation of user input in an undisclosed component. An attacker could leverage this issue in order to add arbitrary entries to a log file which could impact both the integrity issues and performance issues.\n\n**Note**: the vendor states this issue exists as a follow up to CVE-2021-22096 (BDSA-2022-0011) that protects against additional types of input and in more places of the Spring Framework codebase."},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-74"]},"defaultConfiguration":{"level":"warning"}},{"id":"CVE-2022-22950 spring-webmvc 5.2.2.RELEASE: spring-boot-starter-web 2.2.2.RELEASE: org.springframework","shortDescription":{"text":"Transitive Dependency: spring-webmvc 5.2.2.RELEASE from spring-boot-starter-web 2.2.2.RELEASE (CVE-2022-22950)"},"fullDescription":{"text":"Spring-Framework's spring-expression is vulnerable to a denial-of-service (DoS) condition. This allows an attacker to use crafted input to cause the spring-expression process to crash due to an exception."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| spring-webmvc 5.2.2.RELEASE  | 5.3.31  | 6.1.2 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/ba6e9d03-9fbd-4086-9631-99d1ad5e520c?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=09f17d81-b282-43ec-9f2b-36c8021d3ca7)\n\n\n## Description\nSpring-Framework's spring-expression is vulnerable to a denial-of-service (DoS) condition. This allows an attacker to use crafted input to cause the spring-expression process to crash due to an exception.\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [CVE-2022-22950](https://openhub.net/vulnerabilities/bdsa/CVE-2022-22950) - Allocation of Resources Without Limits or Throttling\n\n\n\n## Solution\nFixed in version [**5.3.17**](https://github.com/spring-projects/spring-framework/releases/tag/v5.3.17) by [this](https://github.com/spring-projects/spring-framework/commit/94af2ca06bf711de03286999b1c64a703d6de552) commit.\n\nThe latest stable releases can be found [here](https://github.com/spring-projects/spring-framework/tags).\n\n\n\n## Dependency tree\n- org.owasp.webgoat:webgoat-container:v8.1.0:-maven\n    - org.springframework.boot:spring-boot-starter-web:2.2.2.RELEASE\n        - org.springframework:spring-webmvc:5.2.2.RELEASE\n\n\n## References\n* Common Weakness Enumeration: [CWE-770](https://cwe.mitre.org/data/definitions/770.html)\n\n","text":"Spring-Framework's spring-expression is vulnerable to a denial-of-service (DoS) condition. This allows an attacker to use crafted input to cause the spring-expression process to crash due to an exception."},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-770"]},"defaultConfiguration":{"level":"warning"}},{"id":"CVE-2021-22118 spring-webmvc 5.2.2.RELEASE: spring-boot-starter-web 2.2.2.RELEASE: org.springframework","shortDescription":{"text":"Transitive Dependency: spring-webmvc 5.2.2.RELEASE from spring-boot-starter-web 2.2.2.RELEASE (CVE-2021-22118)"},"fullDescription":{"text":"Spring Framework is vulnerable to privilege escalation due to the creation of unsafe temporary directories by the WebFlux component. A local authenticated attacker could modify arbitrary files via maliciously crafted `multipart` requests. \n\nThis vulnerability does not affect Spring MVC applications, or applications that do not handle `multipart` file requests."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| spring-webmvc 5.2.2.RELEASE  | 5.3.31  | 6.1.2 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/ba6e9d03-9fbd-4086-9631-99d1ad5e520c?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=09f17d81-b282-43ec-9f2b-36c8021d3ca7)\n\n\n## Description\nSpring Framework is vulnerable to privilege escalation due to the creation of unsafe temporary directories by the WebFlux component. A local authenticated attacker could modify arbitrary files via maliciously crafted `multipart` requests. \n\nThis vulnerability does not affect Spring MVC applications, or applications that do not handle `multipart` file requests.\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [CVE-2021-22118](https://openhub.net/vulnerabilities/bdsa/CVE-2021-22118) - Third-party component usage\n\n\n\n## Solution\nFixed in [**5.3.7**](https://github.com/spring-projects/spring-framework/releases/tag/v5.3.7)  by [this](https://github.com/spring-projects/spring-framework/commit/cce60c479c22101f24b2b4abebb6d79440b120d1) commit and [this](https://github.com/spring-projects/spring-framework/commit/0d0d75e25322d8161002d861fff3ec04ba8be5ac) commit, and in [**5.2.15**](https://github.com/spring-projects/spring-framework/releases/tag/v5.2.15.RELEASE) by [this](https://github.com/spring-projects/spring-framework/commit/85ad63bd35f6f10fa5549ba9a11869144338bd8a) commit.\n\nThe latest stable releases are available [here](https://github.com/spring-projects/spring-framework/releases/).\n\n\n\n## Dependency tree\n- org.owasp.webgoat:webgoat-container:v8.1.0:-maven\n    - org.springframework.boot:spring-boot-starter-web:2.2.2.RELEASE\n        - org.springframework:spring-webmvc:5.2.2.RELEASE\n\n\n## References\n* Common Weakness Enumeration: [CWE-264](https://cwe.mitre.org/data/definitions/264.html)\n* Common Weakness Enumeration: [CWE-376](https://cwe.mitre.org/data/definitions/376.html)\n\n","text":"Spring Framework is vulnerable to privilege escalation due to the creation of unsafe temporary directories by the WebFlux component. A local authenticated attacker could modify arbitrary files via maliciously crafted `multipart` requests. \n\nThis vulnerability does not affect Spring MVC applications, or applications that do not handle `multipart` file requests."},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-264","external/cwe/cwe-376"]},"defaultConfiguration":{"level":"warning"}},{"id":"CVE-2022-22970 spring-webmvc 5.2.2.RELEASE: spring-boot-starter-web 2.2.2.RELEASE: org.springframework","shortDescription":{"text":"Transitive Dependency: spring-webmvc 5.2.2.RELEASE from spring-boot-starter-web 2.2.2.RELEASE (CVE-2022-22970)"},"fullDescription":{"text":"Spring Framework is vulnerable to denial-of-service (DoS) due to the improper implementation of data binding functionality. A remote attacker could cause a vulnerable server to crash if that server provides file upload functionality."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| spring-webmvc 5.2.2.RELEASE  | 5.3.31  | 6.1.2 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/ba6e9d03-9fbd-4086-9631-99d1ad5e520c?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=09f17d81-b282-43ec-9f2b-36c8021d3ca7)\n\n\n## Description\nSpring Framework is vulnerable to denial-of-service (DoS) due to the improper implementation of data binding functionality. A remote attacker could cause a vulnerable server to crash if that server provides file upload functionality.\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [CVE-2022-22970](https://openhub.net/vulnerabilities/bdsa/CVE-2022-22970) - Incorrect Provision of Specified Functionality\n\n\n\n## Solution\nFixed in version [**5.3.20**](https://github.com/spring-projects/spring-framework/releases/tag/v5.3.20) and in version [**5.2.22**](https://github.com/spring-projects/spring-framework/releases/tag/v5.2.22.RELEASE).\n\nThe latest stable releases can be found [here](https://github.com/spring-projects/spring-framework/releases).\n\n\n\n## Dependency tree\n- org.owasp.webgoat:webgoat-container:v8.1.0:-maven\n    - org.springframework.boot:spring-boot-starter-web:2.2.2.RELEASE\n        - org.springframework:spring-webmvc:5.2.2.RELEASE\n\n\n## References\n* Common Weakness Enumeration: [CWE-684](https://cwe.mitre.org/data/definitions/684.html)\n\n","text":"Spring Framework is vulnerable to denial-of-service (DoS) due to the improper implementation of data binding functionality. A remote attacker could cause a vulnerable server to crash if that server provides file upload functionality."},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-684"]},"defaultConfiguration":{"level":"warning"}},{"id":"CVE-2022-22971 spring-webmvc 5.2.2.RELEASE: spring-boot-starter-web 2.2.2.RELEASE: org.springframework","shortDescription":{"text":"Transitive Dependency: spring-webmvc 5.2.2.RELEASE from spring-boot-starter-web 2.2.2.RELEASE (CVE-2022-22971)"},"fullDescription":{"text":"Spring Framework is vulnerable to denial-of-service (DoS) due to the improper handling of the STOMP protocol for websockets. A remote authenticated attacker could leverage this issue in order to cause a server to crash."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| spring-webmvc 5.2.2.RELEASE  | 5.3.31  | 6.1.2 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/ba6e9d03-9fbd-4086-9631-99d1ad5e520c?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=09f17d81-b282-43ec-9f2b-36c8021d3ca7)\n\n\n## Description\nSpring Framework is vulnerable to denial-of-service (DoS) due to the improper handling of the STOMP protocol for websockets. A remote authenticated attacker could leverage this issue in order to cause a server to crash.\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [CVE-2022-22971](https://openhub.net/vulnerabilities/bdsa/CVE-2022-22971) - Incorrect Provision of Specified Functionality\n\n\n\n## Solution\nFixed in version [**5.3.20**](https://github.com/spring-projects/spring-framework/releases/tag/v5.3.20) and in version [**5.2.22**](https://github.com/spring-projects/spring-framework/releases/tag/v5.2.22.RELEASE).\n\nThe latest stable releases can be found [here](https://github.com/spring-projects/spring-framework/releases).\n\n\n\n## Dependency tree\n- org.owasp.webgoat:webgoat-container:v8.1.0:-maven\n    - org.springframework.boot:spring-boot-starter-web:2.2.2.RELEASE\n        - org.springframework:spring-webmvc:5.2.2.RELEASE\n\n\n## References\n* Common Weakness Enumeration: [CWE-684](https://cwe.mitre.org/data/definitions/684.html)\n\n","text":"Spring Framework is vulnerable to denial-of-service (DoS) due to the improper handling of the STOMP protocol for websockets. A remote authenticated attacker could leverage this issue in order to cause a server to crash."},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-684"]},"defaultConfiguration":{"level":"warning"}},{"id":"CVE-2023-20861 spring-webmvc 5.2.2.RELEASE: spring-boot-starter-web 2.2.2.RELEASE: org.springframework","shortDescription":{"text":"Transitive Dependency: spring-webmvc 5.2.2.RELEASE from spring-boot-starter-web 2.2.2.RELEASE (CVE-2023-20861)"},"fullDescription":{"text":"Spring Framework is vulnerable to denial-of-service (DoS) via specially crafted SpEL expressions. An attacker could exploit this issue by passing a crafted SpEL expression to the application which may result in a crash."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| spring-webmvc 5.2.2.RELEASE  | 5.3.31  | 6.1.2 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/ba6e9d03-9fbd-4086-9631-99d1ad5e520c?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=09f17d81-b282-43ec-9f2b-36c8021d3ca7)\n\n\n## Description\nSpring Framework is vulnerable to denial-of-service (DoS) via specially crafted SpEL expressions. An attacker could exploit this issue by passing a crafted SpEL expression to the application which may result in a crash.\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [CVE-2023-20861](https://openhub.net/vulnerabilities/bdsa/CVE-2023-20861) - Weak Input Validation\n\n\n\n## Solution\nFixed in:\n* [**5.2.23**](https://github.com/spring-projects/spring-framework/releases/tag/v5.2.23.RELEASE) by [this](https://github.com/spring-projects/spring-framework/commit/52c93b1c4b24d70de233a958e60e7c5822bd274f) commit,\n* [**5.3.26**](https://github.com/spring-projects/spring-framework/releases/tag/v5.3.26) by [this](https://github.com/spring-projects/spring-framework/commit/430fc25acad2e85cbdddcd52b64481691f03ebd1) commit,\n* [**6.0.7**](https://github.com/spring-projects/spring-framework/releases/tag/v6.0.7) by [this](https://github.com/spring-projects/spring-framework/commit/935c29e3ddba5b19951e54f6685c70ed45d9cbe5) commit.\n\nThe latest stable releases are available [here](https://github.com/spring-projects/spring-framework/releases).\n\n\n\n## Dependency tree\n- org.owasp.webgoat:webgoat-container:v8.1.0:-maven\n    - org.springframework.boot:spring-boot-starter-web:2.2.2.RELEASE\n        - org.springframework:spring-webmvc:5.2.2.RELEASE\n\n\n## References\n* Common Weakness Enumeration: [CWE-20](https://cwe.mitre.org/data/definitions/20.html)\n\n","text":"Spring Framework is vulnerable to denial-of-service (DoS) via specially crafted SpEL expressions. An attacker could exploit this issue by passing a crafted SpEL expression to the application which may result in a crash."},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-20"]},"defaultConfiguration":{"level":"warning"}},{"id":"CVE-2023-20863 spring-webmvc 5.2.2.RELEASE: spring-boot-starter-web 2.2.2.RELEASE: org.springframework","shortDescription":{"text":"Transitive Dependency: spring-webmvc 5.2.2.RELEASE from spring-boot-starter-web 2.2.2.RELEASE (CVE-2023-20863)"},"fullDescription":{"text":"Spring Framework is vulnerable to denial-of-service (DoS) via specially crafted SpEL expressions."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| spring-webmvc 5.2.2.RELEASE  | 5.3.31  | 6.1.2 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/ba6e9d03-9fbd-4086-9631-99d1ad5e520c?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=09f17d81-b282-43ec-9f2b-36c8021d3ca7)\n\n\n## Description\nSpring Framework is vulnerable to denial-of-service (DoS) via specially crafted SpEL expressions.\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [CVE-2023-20863](https://openhub.net/vulnerabilities/bdsa/CVE-2023-20863) - Weak Input Validation\n\n\n\n## Solution\nFixed in:\n* [**5.2.24**](https://github.com/spring-projects/spring-framework/releases/tag/v5.2.24.RELEASE)\n* [**5.3.27**](https://github.com/spring-projects/spring-framework/releases/tag/v5.3.27)\n* [**6.0.8**](https://github.com/spring-projects/spring-framework/releases/tag/v6.0.8)\n\nThe latest stable releases are available [here](https://github.com/spring-projects/spring-framework/releases).\n\n\n\n## Dependency tree\n- org.owasp.webgoat:webgoat-container:v8.1.0:-maven\n    - org.springframework.boot:spring-boot-starter-web:2.2.2.RELEASE\n        - org.springframework:spring-webmvc:5.2.2.RELEASE\n\n\n## References\n* Common Weakness Enumeration: [CWE-20](https://cwe.mitre.org/data/definitions/20.html)\n\n","text":"Spring Framework is vulnerable to denial-of-service (DoS) via specially crafted SpEL expressions."},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-20"]},"defaultConfiguration":{"level":"warning"}},{"id":"CVE-2020-5421 spring-webmvc 5.2.2.RELEASE: spring-boot-starter-web 2.2.2.RELEASE: org.springframework","shortDescription":{"text":"Transitive Dependency: spring-webmvc 5.2.2.RELEASE from spring-boot-starter-web 2.2.2.RELEASE (CVE-2020-5421)"},"fullDescription":{"text":"It was discovered that Spring Framework was vulnerable to RFD protection bypass. In some instances, depending on the browser used, an attacker could bypass the RFD attack protections via the use of a `jsessionid` path parameter."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| spring-webmvc 5.2.2.RELEASE  | 5.3.31  | 6.1.2 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/ba6e9d03-9fbd-4086-9631-99d1ad5e520c?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=09f17d81-b282-43ec-9f2b-36c8021d3ca7)\n\n\n## Description\nIt was discovered that Spring Framework was vulnerable to RFD protection bypass. In some instances, depending on the browser used, an attacker could bypass the RFD attack protections via the use of a `jsessionid` path parameter.\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [CVE-2020-5421](https://openhub.net/vulnerabilities/bdsa/CVE-2020-5421) - Weak Input Validation\n\n\n\n## Solution\nFixed in:\n* [**5.2.9**](https://github.com/spring-projects/spring-framework/releases/tag/v5.2.9.RELEASE) by [this](https://github.com/spring-projects/spring-framework/commit/899761f0a8890353dc01f10d2af96ae192f3e655) commit,\n* [**5.1.18**](https://github.com/spring-projects/spring-framework/releases/tag/v5.1.18.RELEASE) by [this](https://github.com/spring-projects/spring-framework/commit/a63c8886c00f30fea5b25f50ddf6f56c6eb957bd) commit,\n* [**5.0.19**](https://github.com/spring-projects/spring-framework/releases/tag/v5.0.19.RELEASE) by [this](https://github.com/spring-projects/spring-framework/commit/aec3a4c69e02d87f87258b0ab5c1d6c83f4cb44f) commit,\n* [**4.3.29**](https://github.com/spring-projects/spring-framework/releases/tag/v4.3.29.RELEASE) by [this](https://github.com/spring-projects/spring-framework/commit/2f75212eb667a30fe2fa9b5aca8f22d5e255821f) commit.\n\n\n\n## Dependency tree\n- org.owasp.webgoat:webgoat-container:v8.1.0:-maven\n    - org.springframework.boot:spring-boot-starter-web:2.2.2.RELEASE\n        - org.springframework:spring-webmvc:5.2.2.RELEASE\n\n\n## References\n* Common Weakness Enumeration: [CWE-20](https://cwe.mitre.org/data/definitions/20.html)\n\n","text":"It was discovered that Spring Framework was vulnerable to RFD protection bypass. In some instances, depending on the browser used, an attacker could bypass the RFD attack protections via the use of a `jsessionid` path parameter."},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-20"]},"defaultConfiguration":{"level":"warning"}},{"id":"CVE-2022-22968 spring-webmvc 5.2.2.RELEASE: spring-boot-starter-web 2.2.2.RELEASE: org.springframework","shortDescription":{"text":"Transitive Dependency: spring-webmvc 5.2.2.RELEASE from spring-boot-starter-web 2.2.2.RELEASE (CVE-2022-22968)"},"fullDescription":{"text":"Spring Framework is vulnerable to data binding protection bypass due to improper validation of specified disallowed fields in `DataBinders`. This could be leveraged by an attacker to bypass the suggested workaround to **CVE-2022-22965** (**BDSA-2022-0858**) if it is improperly implemented."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| spring-webmvc 5.2.2.RELEASE  | 5.3.31  | 6.1.2 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/ba6e9d03-9fbd-4086-9631-99d1ad5e520c?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=09f17d81-b282-43ec-9f2b-36c8021d3ca7)\n\n\n## Description\nSpring Framework is vulnerable to data binding protection bypass due to improper validation of specified disallowed fields in `DataBinders`. This could be leveraged by an attacker to bypass the suggested workaround to **CVE-2022-22965** (**BDSA-2022-0858**) if it is improperly implemented.\n\n## Vulnerabilities(BDSA,CVE)\n:large_blue_circle: [CVE-2022-22968](https://openhub.net/vulnerabilities/bdsa/CVE-2022-22968) - Weak Input Validation\n\n\n\n## Solution\nFixed  in [**5.3.19**](https://github.com/spring-projects/spring-framework/releases/tag/v5.3.19) by [this](https://github.com/spring-projects/spring-framework/commit/a7cf19cec5ebd270f97a194d749e2d5701ad2ab7) commit and [**5.2.21**](https://github.com/spring-projects/spring-framework/releases/tag/v5.2.21.RELEASE) by [this](https://github.com/spring-projects/spring-framework/commit/833e750175349ab4fd502109a8b41af77e25cdea) commit.\n\n\n\n## Dependency tree\n- org.owasp.webgoat:webgoat-container:v8.1.0:-maven\n    - org.springframework.boot:spring-boot-starter-web:2.2.2.RELEASE\n        - org.springframework:spring-webmvc:5.2.2.RELEASE\n\n\n## References\n* Common Weakness Enumeration: [CWE-20](https://cwe.mitre.org/data/definitions/20.html)\n\n","text":"Spring Framework is vulnerable to data binding protection bypass due to improper validation of specified disallowed fields in `DataBinders`. This could be leveraged by an attacker to bypass the suggested workaround to **CVE-2022-22965** (**BDSA-2022-0858**) if it is improperly implemented."},"properties":{"security-severity":"3.8","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-20"]},"defaultConfiguration":{"level":"note"}},{"id":"BDSA-2021-3731 spring-boot-starter 2.2.2.RELEASE: spring-boot-starter-test 2.2.2.RELEASE: org.springframework.boot","shortDescription":{"text":"Transitive Dependency: spring-boot-starter 2.2.2.RELEASE from spring-boot-starter-test 2.2.2.RELEASE (BDSA-2021-3731)"},"fullDescription":{"text":"Apache Log4j, as used in many popular services, is vulnerable to improperly allowing lightweight directory access protocol (LDAP) access via Java naming and directory interface (JNDI). A remote attacker able to supply the end application with specially crafted input that is then processed by the Log4j subcomponent could cause the execution of arbitrary Java code.\n\n**Note** \n\n- log4j-api packages by themselves do not contain the vulnerable functionality and are therefore unaffected. log4j-core packages and the upstream overarching source repository are affected.\n\n- A previously suggested mitigation of setting environment variable `LOG4J_FORMAT_MSG_NO_LOOKUPS=true` is not recommended. This mitigation has been proven inadequate against this vulnerability. \n\n- This vulnerability is partially fixed in [**2.15.0-rc2**](https://github.com/apache/logging-log4j2/releases/tag/log4j-2.15.0-rc2) by [this](https://github.com/apache/logging-log4j2/commit/001aaada7dab82c3c09cde5f8e14245dc9d8b454) commit and [this](https://github.com/apache/logging-log4j2/commit/bac0d8a35c7e354a0d3f706569116dff6c6bd658) commit. These fixes were deemed incomplete. See BDSA-2021-3779 (CVE-2021-45046) for more details.\n\nThis vulnerability is listed as exploitable by the Cybersecurity \u0026 Infrastructure Security Agency in their [Known Exploited Vulnerabilities Catalog](https://www.cisa.gov/known-exploited-vulnerabilities-catalog)."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| spring-boot-starter 2.2.2.RELEASE  | 2.7.18  | 3.2.1 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/48431389-4a2f-44ed-8597-55184ffc0e88?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=ee1b331d-05e0-4bd1-b6ef-727c3b98e324)\n\n\n## Description\nApache Log4j, as used in many popular services, is vulnerable to improperly allowing lightweight directory access protocol (LDAP) access via Java naming and directory interface (JNDI). A remote attacker able to supply the end application with specially crafted input that is then processed by the Log4j subcomponent could cause the execution of arbitrary Java code.\n\n**Note** \n\n- log4j-api packages by themselves do not contain the vulnerable functionality and are therefore unaffected. log4j-core packages and the upstream overarching source repository are affected.\n\n- A previously suggested mitigation of setting environment variable `LOG4J_FORMAT_MSG_NO_LOOKUPS=true` is not recommended. This mitigation has been proven inadequate against this vulnerability. \n\n- This vulnerability is partially fixed in [**2.15.0-rc2**](https://github.com/apache/logging-log4j2/releases/tag/log4j-2.15.0-rc2) by [this](https://github.com/apache/logging-log4j2/commit/001aaada7dab82c3c09cde5f8e14245dc9d8b454) commit and [this](https://github.com/apache/logging-log4j2/commit/bac0d8a35c7e354a0d3f706569116dff6c6bd658) commit. These fixes were deemed incomplete. See BDSA-2021-3779 (CVE-2021-45046) for more details.\n\nThis vulnerability is listed as exploitable by the Cybersecurity \u0026 Infrastructure Security Agency in their [Known Exploited Vulnerabilities Catalog](https://www.cisa.gov/known-exploited-vulnerabilities-catalog).\n\n## Vulnerabilities(BDSA,CVE)\n:red_circle: [BDSA-2021-3731](https://openhub.net/vulnerabilities/bdsa/BDSA-2021-3731) - Insecure Object Deserialization\n\n\n\n## Solution\nFixed in versions:\n*  [**2.16.0-rc1**](https://github.com/apache/logging-log4j2/releases/tag/log4j-2.16.0-rc1) by [this](https://github.com/apache/logging-log4j2/commit/27972043b76c9645476f561c5adc483dec6d3f5d) commit.\n*  [**2.12.2-rc1**](https://github.com/apache/logging-log4j2/releases/tag/log4j-2.12.2-rc1) by [this](https://github.com/apache/logging-log4j2/commit/f819c83804152cb6ed94cb408302e36b21b65053) commit and [this](https://github.com/apache/logging-log4j2/commit/70edc233343815d5efa043b54294a6fb065aa1c5) commit.\n*   [**2.3.1-rc1**](https://github.com/apache/logging-log4j2/releases/tag/log4j-2.3.1-rc1) by [this](https://github.com/apache/logging-log4j2/commit/be848dacbac6df30c4f32b2852e24446033ecf79) commit and [this](https://github.com/apache/logging-log4j2/commit/f6564bb993d547d0a371b75d869042c334bf57f0) commit.\n\nThe latest releases can be found [here](https://github.com/apache/logging-log4j2/tags).\n\nNOTE: It is recommended to upgrade to version  [**2.17.0**](https://downloads.apache.org/logging/log4j/2.17.0/). This recommendation is due to related vulnerabilities (BDSA-2021-3779, CVE-2021-45046) affecting the version that this vulnerability is fixed in.\n\n## Workaround\nThe vendor states that:\n\n\u003e This issue can be mitigated in prior releases (\u003c**2.16.0**) by removing the JndiLookup class from the classpath (example: `zip -q -d log4j-core-*.jar org/apache/logging/log4j/core/lookup/JndiLookup.class`).\n\n## Dependency tree\n- org.owasp.webgoat.lesson:http-basics:v8.1.0:-maven\n    - org.springframework.boot:spring-boot-starter-test:2.2.2.RELEASE\n        - org.springframework.boot:spring-boot-starter:2.2.2.RELEASE\n\n\n## References\n* Common Weakness Enumeration: [CWE-502](https://cwe.mitre.org/data/definitions/502.html)\n\n","text":"Apache Log4j, as used in many popular services, is vulnerable to improperly allowing lightweight directory access protocol (LDAP) access via Java naming and directory interface (JNDI). A remote attacker able to supply the end application with specially crafted input that is then processed by the Log4j subcomponent could cause the execution of arbitrary Java code.\n\n**Note** \n\n- log4j-api packages by themselves do not contain the vulnerable functionality and are therefore unaffected. log4j-core packages and the upstream overarching source repository are affected.\n\n- A previously suggested mitigation of setting environment variable `LOG4J_FORMAT_MSG_NO_LOOKUPS=true` is not recommended. This mitigation has been proven inadequate against this vulnerability. \n\n- This vulnerability is partially fixed in [**2.15.0-rc2**](https://github.com/apache/logging-log4j2/releases/tag/log4j-2.15.0-rc2) by [this](https://github.com/apache/logging-log4j2/commit/001aaada7dab82c3c09cde5f8e14245dc9d8b454) commit and [this](https://github.com/apache/logging-log4j2/commit/bac0d8a35c7e354a0d3f706569116dff6c6bd658) commit. These fixes were deemed incomplete. See BDSA-2021-3779 (CVE-2021-45046) for more details.\n\nThis vulnerability is listed as exploitable by the Cybersecurity \u0026 Infrastructure Security Agency in their [Known Exploited Vulnerabilities Catalog](https://www.cisa.gov/known-exploited-vulnerabilities-catalog)."},"properties":{"security-severity":"9.1","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-502"]},"defaultConfiguration":{"level":"error"}},{"id":"CVE-2022-22965 spring-boot-starter 2.2.2.RELEASE: spring-boot-starter-test 2.2.2.RELEASE: org.springframework.boot","shortDescription":{"text":"Transitive Dependency: spring-boot-starter 2.2.2.RELEASE from spring-boot-starter-test 2.2.2.RELEASE (CVE-2022-22965)"},"fullDescription":{"text":"Spring Framework is vulnerable to a flaw in the access restrictions to the security sensitive `ClassLoader` property. The restrictions can be bypassed through alternative paths available with Java9 and later. An attacker can leverage this vulnerability to cause remote code execution (RCE).\n\n**Note** this issue exists because the restrictions that were introduced to prevent exploitation of BDSA-2010-0001 (CVE-2010-1622) can be bypassed on platforms where Java9 and later are in use.\n\nThis vulnerability is listed as exploitable by the Cybersecurity \u0026 Infrastructure Security Agency in their [Known Exploited Vulnerabilities Catalog](https://www.cisa.gov/known-exploited-vulnerabilities-catalog)."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| spring-boot-starter 2.2.2.RELEASE  | 2.7.18  | 3.2.1 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/48431389-4a2f-44ed-8597-55184ffc0e88?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=ee1b331d-05e0-4bd1-b6ef-727c3b98e324)\n\n\n## Description\nSpring Framework is vulnerable to a flaw in the access restrictions to the security sensitive `ClassLoader` property. The restrictions can be bypassed through alternative paths available with Java9 and later. An attacker can leverage this vulnerability to cause remote code execution (RCE).\n\n**Note** this issue exists because the restrictions that were introduced to prevent exploitation of BDSA-2010-0001 (CVE-2010-1622) can be bypassed on platforms where Java9 and later are in use.\n\nThis vulnerability is listed as exploitable by the Cybersecurity \u0026 Infrastructure Security Agency in their [Known Exploited Vulnerabilities Catalog](https://www.cisa.gov/known-exploited-vulnerabilities-catalog).\n\n## Vulnerabilities(BDSA,CVE)\n:red_circle: [CVE-2022-22965](https://openhub.net/vulnerabilities/bdsa/CVE-2022-22965) - Incomplete List of Disallowed Inputs\n\n\n\n## Solution\nFixed in [**5.3.18**](https://github.com/spring-projects/spring-framework/releases/tag/v5.3.18) by [this](https://github.com/spring-projects/spring-framework/commit/002546b3e4b8d791ea6acccb81eb3168f51abb15) commit and  [**5.2.20**](https://github.com/spring-projects/spring-framework/releases/tag/v5.2.20.RELEASE) by [this](https://github.com/spring-projects/spring-framework/commit/996f701a1916d10202c1d0d281f06ab1f2e1117e) commit .\n\nThe latest releases can be found [here](https://github.com/spring-projects/spring-framework/tags).\n\n## Workaround\nAn official workaround for the issue has been outlined [here](https://spring.io/blog/2022/03/31/spring-framework-rce-early-announcement).\n\n## Dependency tree\n- org.owasp.webgoat.lesson:http-basics:v8.1.0:-maven\n    - org.springframework.boot:spring-boot-starter-test:2.2.2.RELEASE\n        - org.springframework.boot:spring-boot-starter:2.2.2.RELEASE\n\n\n## References\n* Common Weakness Enumeration: [CWE-184](https://cwe.mitre.org/data/definitions/184.html)\n* Common Weakness Enumeration: [CWE-749](https://cwe.mitre.org/data/definitions/749.html)\n\n","text":"Spring Framework is vulnerable to a flaw in the access restrictions to the security sensitive `ClassLoader` property. The restrictions can be bypassed through alternative paths available with Java9 and later. An attacker can leverage this vulnerability to cause remote code execution (RCE).\n\n**Note** this issue exists because the restrictions that were introduced to prevent exploitation of BDSA-2010-0001 (CVE-2010-1622) can be bypassed on platforms where Java9 and later are in use.\n\nThis vulnerability is listed as exploitable by the Cybersecurity \u0026 Infrastructure Security Agency in their [Known Exploited Vulnerabilities Catalog](https://www.cisa.gov/known-exploited-vulnerabilities-catalog)."},"properties":{"security-severity":"9.1","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-184","external/cwe/cwe-749"]},"defaultConfiguration":{"level":"error"}},{"id":"CVE-2023-20873 spring-boot-starter 2.2.2.RELEASE: spring-boot-starter-test 2.2.2.RELEASE: org.springframework.boot","shortDescription":{"text":"Transitive Dependency: spring-boot-starter 2.2.2.RELEASE from spring-boot-starter-test 2.2.2.RELEASE (CVE-2023-20873)"},"fullDescription":{"text":"Spring framework contains a security bypass vulnerability when `/**` is used as a pattern in Spring Security configuration with the `/cloudfoundryapplication/**` component. The potential for security bypass exists due to the mismatch in pattern matching between Spring Security and Cloud Foundry.\n\n**Note**: The vendor has stated in their [advisory](https://spring.io/security/cve-2023-20873) that this application is not vulnerable if any of the following is true:\n* The application is not deployed to Cloud Foundry.\n* You have disabled Cloud Foundry actuator endpoints with `management.cloudfoundry.enabled` set to `false`.\n* Your application does not have handler mappings that can handle requests to `/cloudfoundryapplication/**`."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| spring-boot-starter 2.2.2.RELEASE  | 2.7.18  | 3.2.1 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/48431389-4a2f-44ed-8597-55184ffc0e88?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=ee1b331d-05e0-4bd1-b6ef-727c3b98e324)\n\n\n## Description\nSpring framework contains a security bypass vulnerability when `/**` is used as a pattern in Spring Security configuration with the `/cloudfoundryapplication/**` component. The potential for security bypass exists due to the mismatch in pattern matching between Spring Security and Cloud Foundry.\n\n**Note**: The vendor has stated in their [advisory](https://spring.io/security/cve-2023-20873) that this application is not vulnerable if any of the following is true:\n* The application is not deployed to Cloud Foundry.\n* You have disabled Cloud Foundry actuator endpoints with `management.cloudfoundry.enabled` set to `false`.\n* Your application does not have handler mappings that can handle requests to `/cloudfoundryapplication/**`.\n\n## Vulnerabilities(BDSA,CVE)\n:orange_circle: [CVE-2023-20873](https://openhub.net/vulnerabilities/bdsa/CVE-2023-20873) - Improper Access Control\n\n\n\n## Solution\nFixed in [**3.1.0-RC1**](https://github.com/spring-projects/spring-boot/releases/tag/v3.1.0-RC1), [**3.0.6**](https://github.com/spring-projects/spring-boot/releases/tag/v3.0.6) and [**2.7.11**](https://github.com/spring-projects/spring-boot/releases/tag/v2.7.11)  by [this](https://github.com/spring-projects/spring-boot/commit/3522714c13b47af03bf42e7f2d5994af568cb1a7) commit.\n\nFixed in [**2.6.15**](https://github.com/spring-projects/spring-boot/releases/tag/v2.6.15) and [**2.5.15**](https://github.com/spring-projects/spring-boot/releases/tag/v2.5.15) by [this](https://github.com/spring-projects/spring-boot/commit/307f3c339912466e78fcdac648fff95a4edea573) commit.\n\nThe latest stable releases can be found [here](https://github.com/spring-projects/spring-boot/releases).\n\n## Workaround\nThe vendor has advised the following as a workaround:\n\u003eDisable Cloud Foundry actuator endpoints by setting `management.cloudfoundry.enabled` to `false`.\n\n## Dependency tree\n- org.owasp.webgoat.lesson:http-basics:v8.1.0:-maven\n    - org.springframework.boot:spring-boot-starter-test:2.2.2.RELEASE\n        - org.springframework.boot:spring-boot-starter:2.2.2.RELEASE\n\n\n## References\n* Common Weakness Enumeration: [CWE-284](https://cwe.mitre.org/data/definitions/284.html)\n* Common Weakness Enumeration: [CWE-923](https://cwe.mitre.org/data/definitions/923.html)\n\n","text":"Spring framework contains a security bypass vulnerability when `/**` is used as a pattern in Spring Security configuration with the `/cloudfoundryapplication/**` component. The potential for security bypass exists due to the mismatch in pattern matching between Spring Security and Cloud Foundry.\n\n**Note**: The vendor has stated in their [advisory](https://spring.io/security/cve-2023-20873) that this application is not vulnerable if any of the following is true:\n* The application is not deployed to Cloud Foundry.\n* You have disabled Cloud Foundry actuator endpoints with `management.cloudfoundry.enabled` set to `false`.\n* Your application does not have handler mappings that can handle requests to `/cloudfoundryapplication/**`."},"properties":{"security-severity":"8.9","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-284","external/cwe/cwe-923"]},"defaultConfiguration":{"level":"error"}},{"id":"BDSA-2021-3817 spring-boot-starter 2.2.2.RELEASE: spring-boot-starter-test 2.2.2.RELEASE: org.springframework.boot","shortDescription":{"text":"Transitive Dependency: spring-boot-starter 2.2.2.RELEASE from spring-boot-starter-test 2.2.2.RELEASE (BDSA-2021-3817)"},"fullDescription":{"text":"Apache log4j is vulnerable to a denial-of-service (DoS) when uncontrolled recursion occurs through a self-referencing lookup.  An attacker can trigger a DoS with malicious input data that generates a recursive lookup  and consequent application crash.\n\nSuccessful attacks require the attacker to have access to Thread Context Map (MDC) input, and for log4j configured with non-default pattern layout with a Context Lookup.\n\nOnly the log4j-core JAR file is impacted by this vulnerability. Applications using only the log4j-api JAR file without the log4j-core JAR file are not impacted.\n\nApache Log4j is the only Logging Services subproject affected by this vulnerability. Other projects like Log4net  are not impacted."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| spring-boot-starter 2.2.2.RELEASE  | 2.7.18  | 3.2.1 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/48431389-4a2f-44ed-8597-55184ffc0e88?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=ee1b331d-05e0-4bd1-b6ef-727c3b98e324)\n\n\n## Description\nApache log4j is vulnerable to a denial-of-service (DoS) when uncontrolled recursion occurs through a self-referencing lookup.  An attacker can trigger a DoS with malicious input data that generates a recursive lookup  and consequent application crash.\n\nSuccessful attacks require the attacker to have access to Thread Context Map (MDC) input, and for log4j configured with non-default pattern layout with a Context Lookup.\n\nOnly the log4j-core JAR file is impacted by this vulnerability. Applications using only the log4j-api JAR file without the log4j-core JAR file are not impacted.\n\nApache Log4j is the only Logging Services subproject affected by this vulnerability. Other projects like Log4net  are not impacted.\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [BDSA-2021-3817](https://openhub.net/vulnerabilities/bdsa/BDSA-2021-3817) - Loop with Unreachable Exit Condition ('Infinite Loop')\n\n\n\n## Solution\nFixed in version [**2.17.0**](https://downloads.apache.org/logging/log4j/2.17.0/)  by [this](https://github.com/apache/logging-log4j2/commit/806023265f8c905b2dd1d81fd2458f64b2ea0b5e) commit.\n\nFixed in [**2.12.3-rc1**](https://github.com/apache/logging-log4j2/releases/tag/log4j-2.12.3-rc1) by [this](https://github.com/apache/logging-log4j2/commit/bf7e916df6335713fe2219c7b3b523fb509deabc) commit.\n\nFixed in [**2.3.1-rc1**](https://github.com/apache/logging-log4j2/releases/tag/log4j-2.3.1-rc1) by [this](https://github.com/apache/logging-log4j2/commit/ce6b78d082aae89089cb3ad25cdd46e9ec70a70b) commit.\n\n\nThe latest stable releases can be found [here](https://github.com/apache/logging-log4j2/releases).\n\n## Workaround\nThe vendor advises that  this vulnerability can can be mitigated through one of the following:\n\n* In PatternLayout in the logging configuration, replace Context Lookups like `${ctx:loginId}` or `$${ctx:loginId}` with Thread Context Map patterns `(%X, %mdc, or %MDC)`.\n\n* Alternatively,  remove references in the configuration to Context Lookups like `${ctx:loginId}` or `$${ctx:loginId}` where they originate from sources external to the application such as HTTP headers or user input.\n\n## Dependency tree\n- org.owasp.webgoat.lesson:http-basics:v8.1.0:-maven\n    - org.springframework.boot:spring-boot-starter-test:2.2.2.RELEASE\n        - org.springframework.boot:spring-boot-starter:2.2.2.RELEASE\n\n\n## References\n* Common Weakness Enumeration: [CWE-835](https://cwe.mitre.org/data/definitions/835.html)\n\n","text":"Apache log4j is vulnerable to a denial-of-service (DoS) when uncontrolled recursion occurs through a self-referencing lookup.  An attacker can trigger a DoS with malicious input data that generates a recursive lookup  and consequent application crash.\n\nSuccessful attacks require the attacker to have access to Thread Context Map (MDC) input, and for log4j configured with non-default pattern layout with a Context Lookup.\n\nOnly the log4j-core JAR file is impacted by this vulnerability. Applications using only the log4j-api JAR file without the log4j-core JAR file are not impacted.\n\nApache Log4j is the only Logging Services subproject affected by this vulnerability. Other projects like Log4net  are not impacted."},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-835"]},"defaultConfiguration":{"level":"warning"}},{"id":"BDSA-2021-3887 spring-boot-starter 2.2.2.RELEASE: spring-boot-starter-test 2.2.2.RELEASE: org.springframework.boot","shortDescription":{"text":"Transitive Dependency: spring-boot-starter 2.2.2.RELEASE from spring-boot-starter-test 2.2.2.RELEASE (BDSA-2021-3887)"},"fullDescription":{"text":"Apache Log4j contains a remote code execution (RCE) vulnerability. This allows an attacker that has permissions to modify the logging configuration files to input a malicious JDBC Appender with a data source referencing a JDNI URI. This can then lead to RCE.\n\n**Note:** This vulnerability impacts log4j-core."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| spring-boot-starter 2.2.2.RELEASE  | 2.7.18  | 3.2.1 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/48431389-4a2f-44ed-8597-55184ffc0e88?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=ee1b331d-05e0-4bd1-b6ef-727c3b98e324)\n\n\n## Description\nApache Log4j contains a remote code execution (RCE) vulnerability. This allows an attacker that has permissions to modify the logging configuration files to input a malicious JDBC Appender with a data source referencing a JDNI URI. This can then lead to RCE.\n\n**Note:** This vulnerability impacts log4j-core.\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [BDSA-2021-3887](https://openhub.net/vulnerabilities/bdsa/BDSA-2021-3887) - Weak Input Validation\n\n\n\n## Solution\nFixed in versions:\n\n* [**2.3.2-rc1**](https://github.com/apache/logging-log4j2/releases/tag/log4j-2.3.2-rc1) by [this](https://github.com/apache/logging-log4j2/commit/ae4dc0c1a6389ae895f60451cd87e97e7b9d85c1) commit.\n* [**2.12.4-rc1**](https://github.com/apache/logging-log4j2/releases/tag/log4j-2.12.4-rc1) by [this](https://github.com/apache/logging-log4j2/commit/b3879958cb3b75eb16bf27e970538b6e4e130f1c) commit.\n* [**2.17.1-rc1**](https://github.com/apache/logging-log4j2/releases/tag/log4j-2.17.1-rc1) by [this](https://github.com/apache/logging-log4j2/commit/05db5f9527254632b59aed2a1d78a32c5ab74f16) commit.\n\nThe latest stable releases can be found [here](https://logging.apache.org/log4j/2.x/download.html).\n\n\n\n## Dependency tree\n- org.owasp.webgoat.lesson:http-basics:v8.1.0:-maven\n    - org.springframework.boot:spring-boot-starter-test:2.2.2.RELEASE\n        - org.springframework.boot:spring-boot-starter:2.2.2.RELEASE\n\n\n## References\n* Common Weakness Enumeration: [CWE-20](https://cwe.mitre.org/data/definitions/20.html)\n\n","text":"Apache Log4j contains a remote code execution (RCE) vulnerability. This allows an attacker that has permissions to modify the logging configuration files to input a malicious JDBC Appender with a data source referencing a JDNI URI. This can then lead to RCE.\n\n**Note:** This vulnerability impacts log4j-core."},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-20"]},"defaultConfiguration":{"level":"warning"}},{"id":"CVE-2022-27772 spring-boot-starter 2.2.2.RELEASE: spring-boot-starter-test 2.2.2.RELEASE: org.springframework.boot","shortDescription":{"text":"Transitive Dependency: spring-boot-starter 2.2.2.RELEASE from spring-boot-starter-test 2.2.2.RELEASE (CVE-2022-27772)"},"fullDescription":{"text":"Spring Boot is vulnerable to privilege escalation due to a race condition which occurs during the creation of a temporary directory. A local attacker could create their own temporary directory by racing against Spring Boot and supply their own configuration files which would allow for the full takeover of the application."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| spring-boot-starter 2.2.2.RELEASE  | 2.7.18  | 3.2.1 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/48431389-4a2f-44ed-8597-55184ffc0e88?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=ee1b331d-05e0-4bd1-b6ef-727c3b98e324)\n\n\n## Description\nSpring Boot is vulnerable to privilege escalation due to a race condition which occurs during the creation of a temporary directory. A local attacker could create their own temporary directory by racing against Spring Boot and supply their own configuration files which would allow for the full takeover of the application.\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [CVE-2022-27772](https://openhub.net/vulnerabilities/bdsa/CVE-2022-27772) - Race Condition due to Improper Synchronization\n\n\n\n## Solution\nFixed in [**2.2.11**](https://github.com/spring-projects/spring-boot/releases/tag/v2.2.11.RELEASE) by [this](https://github.com/spring-projects/spring-boot/commit/667ccdae84822072f9ea1a27ed5c77964c71002d) commit.\n\nThe latest stable releases can be found [here](https://github.com/spring-projects/spring-boot/releases).\n\n## Workaround\nAccording to the [Github Security Advisory](https://github.com/JLLeitschuh/security-research/security/advisories/GHSA-cm59-pr5q-cw85), setting the `java.io.tmpdir` system environment variable to a directory that is exclusively owned by the executing user will fix this vulnerability for all operating systems.\n\n## Dependency tree\n- org.owasp.webgoat.lesson:http-basics:v8.1.0:-maven\n    - org.springframework.boot:spring-boot-starter-test:2.2.2.RELEASE\n        - org.springframework.boot:spring-boot-starter:2.2.2.RELEASE\n\n\n## References\n* Common Weakness Enumeration: [CWE-362](https://cwe.mitre.org/data/definitions/362.html)\n* Common Weakness Enumeration: [CWE-379](https://cwe.mitre.org/data/definitions/379.html)\n\n","text":"Spring Boot is vulnerable to privilege escalation due to a race condition which occurs during the creation of a temporary directory. A local attacker could create their own temporary directory by racing against Spring Boot and supply their own configuration files which would allow for the full takeover of the application."},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-362","external/cwe/cwe-379"]},"defaultConfiguration":{"level":"warning"}},{"id":"CVE-2023-20883 spring-boot-starter 2.2.2.RELEASE: spring-boot-starter-test 2.2.2.RELEASE: org.springframework.boot","shortDescription":{"text":"Transitive Dependency: spring-boot-starter 2.2.2.RELEASE from spring-boot-starter-test 2.2.2.RELEASE (CVE-2023-20883)"},"fullDescription":{"text":"Spring Boot is vulnerable to denial-of-service (DoS) via the welcome page when used to serve an application behind a reverse proxy cache. This will cause users to continuously be served a 404 response, preventing standard application use.\n\n\n**Note:** Spring have provided the following guidance for vulnerable criteria. \nAn application is vulnerable if all of the following are true:\n\n- \"The application has Spring MVC auto-configuration enabled. This is the case by default if Spring MVC is on the classpath.\"\n- \"The application makes use of Spring Boot's welcome page support, either static or templated.\"\n- \"Your application is deployed behind a proxy which caches 404 responses.\"\n\nThe application is not vulnerable if any of the following are true:\n\n- \"Spring MVC auto-configuration is disabled. This is true if `WebMvcAutoConfiguration` is explicitly excluded, if Spring MVC is not on the classpath, or if `spring.main.web-application-type` is set to a value other than `SERVLET`.\"\n- \"The application does not use Spring Boot's welcome page support.\"\n- \"You do not have a proxy which caches 404 responses.\""},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| spring-boot-starter 2.2.2.RELEASE  | 2.7.18  | 3.2.1 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/48431389-4a2f-44ed-8597-55184ffc0e88?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=ee1b331d-05e0-4bd1-b6ef-727c3b98e324)\n\n\n## Description\nSpring Boot is vulnerable to denial-of-service (DoS) via the welcome page when used to serve an application behind a reverse proxy cache. This will cause users to continuously be served a 404 response, preventing standard application use.\n\n\n**Note:** Spring have provided the following guidance for vulnerable criteria. \nAn application is vulnerable if all of the following are true:\n\n- \"The application has Spring MVC auto-configuration enabled. This is the case by default if Spring MVC is on the classpath.\"\n- \"The application makes use of Spring Boot's welcome page support, either static or templated.\"\n- \"Your application is deployed behind a proxy which caches 404 responses.\"\n\nThe application is not vulnerable if any of the following are true:\n\n- \"Spring MVC auto-configuration is disabled. This is true if `WebMvcAutoConfiguration` is explicitly excluded, if Spring MVC is not on the classpath, or if `spring.main.web-application-type` is set to a value other than `SERVLET`.\"\n- \"The application does not use Spring Boot's welcome page support.\"\n- \"You do not have a proxy which caches 404 responses.\"\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [CVE-2023-20883](https://openhub.net/vulnerabilities/bdsa/CVE-2023-20883) - Insufficient Verification of Data Authenticity\n\n\n\n## Solution\nFixed in versions\n- [**2.5.15**](https://github.com/spring-projects/spring-boot/releases/tag/v2.5.15) by [this](https://github.com/spring-projects/spring-boot/commit/d7ff379fb8bb2c33319afeb45a343116b59e0ee2) commit,\n- [**2.6.15**](https://github.com/spring-projects/spring-boot/releases/tag/v2.6.15) by [this](https://github.com/spring-projects/spring-boot/commit/d7ff379fb8bb2c33319afeb45a343116b59e0ee2) commit,\n- [**2.7.12**](https://github.com/spring-projects/spring-boot/releases/tag/v2.7.12) by [this](https://github.com/spring-projects/spring-boot/commit/418dd1ba5bdad79b55a043000164bfcbda2acd78) commit,\n- [**3.0.7**](https://github.com/spring-projects/spring-boot/releases/tag/v3.0.7) by [this](https://github.com/spring-projects/spring-boot/commit/418dd1ba5bdad79b55a043000164bfcbda2acd78) commit,\n- [**3.1.0**](https://github.com/spring-projects/spring-boot/releases/tag/v3.1.0) by [this](https://github.com/spring-projects/spring-boot/commit/418dd1ba5bdad79b55a043000164bfcbda2acd78) commit.\n\nThe latest stable releases can be found [here](https://github.com/spring-projects/spring-boot/releases).\n\n## Workaround\nThe vendor has supplied the following workaround:\n\u003e \"configure the reverse proxy not to cache 404 responses and/or not to cache responses to requests to the root (`/`) of the application.\"\n\n## Dependency tree\n- org.owasp.webgoat.lesson:http-basics:v8.1.0:-maven\n    - org.springframework.boot:spring-boot-starter-test:2.2.2.RELEASE\n        - org.springframework.boot:spring-boot-starter:2.2.2.RELEASE\n\n\n## References\n* Common Weakness Enumeration: [CWE-345](https://cwe.mitre.org/data/definitions/345.html)\n\n","text":"Spring Boot is vulnerable to denial-of-service (DoS) via the welcome page when used to serve an application behind a reverse proxy cache. This will cause users to continuously be served a 404 response, preventing standard application use.\n\n\n**Note:** Spring have provided the following guidance for vulnerable criteria. \nAn application is vulnerable if all of the following are true:\n\n- \"The application has Spring MVC auto-configuration enabled. This is the case by default if Spring MVC is on the classpath.\"\n- \"The application makes use of Spring Boot's welcome page support, either static or templated.\"\n- \"Your application is deployed behind a proxy which caches 404 responses.\"\n\nThe application is not vulnerable if any of the following are true:\n\n- \"Spring MVC auto-configuration is disabled. This is true if `WebMvcAutoConfiguration` is explicitly excluded, if Spring MVC is not on the classpath, or if `spring.main.web-application-type` is set to a value other than `SERVLET`.\"\n- \"The application does not use Spring Boot's welcome page support.\"\n- \"You do not have a proxy which caches 404 responses.\""},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-345"]},"defaultConfiguration":{"level":"warning"}},{"id":"CVE-2023-34055 spring-boot-starter 2.2.2.RELEASE: spring-boot-starter-test 2.2.2.RELEASE: org.springframework.boot","shortDescription":{"text":"Transitive Dependency: spring-boot-starter 2.2.2.RELEASE from spring-boot-starter-test 2.2.2.RELEASE (CVE-2023-34055)"},"fullDescription":{"text":"Spring Boot is vulnerable to denial-of-service (DoS). An unauthenticated user could trigger the vulnerability by providing specially crafted HTTP requests to a web metrics endpoint."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| spring-boot-starter 2.2.2.RELEASE  | 2.7.18  | 3.2.1 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/48431389-4a2f-44ed-8597-55184ffc0e88?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=ee1b331d-05e0-4bd1-b6ef-727c3b98e324)\n\n\n## Description\nSpring Boot is vulnerable to denial-of-service (DoS). An unauthenticated user could trigger the vulnerability by providing specially crafted HTTP requests to a web metrics endpoint.\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [CVE-2023-34055](https://openhub.net/vulnerabilities/bdsa/CVE-2023-34055) - Third-party component usage\n\n\n\n## Solution\nFixed in:\n* [**3.1.6**](https://github.com/spring-projects/spring-boot/releases/tag/v3.1.6)\n* [**3.0.13**](https://github.com/spring-projects/spring-boot/releases/tag/v3.0.13)\n* [**2.7.18**](https://github.com/spring-projects/spring-boot/releases/tag/v2.7.18)\n\nThe latest stable releases can be found [here](https://github.com/spring-projects/spring-boot/releases).\n\n## Workaround\nThe vendor notes the following:\n\u003e As a temporary workaround, Spring Boot users can choose to disable web metrics with the following property: `management.metrics.enable.http.server.requests=false`\n\n## Dependency tree\n- org.owasp.webgoat.lesson:http-basics:v8.1.0:-maven\n    - org.springframework.boot:spring-boot-starter-test:2.2.2.RELEASE\n        - org.springframework.boot:spring-boot-starter:2.2.2.RELEASE\n\n\n\n","text":"Spring Boot is vulnerable to denial-of-service (DoS). An unauthenticated user could trigger the vulnerability by providing specially crafted HTTP requests to a web metrics endpoint."},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","transitive_dependency","patch_available"]},"defaultConfiguration":{"level":"warning"}},{"id":"CVE-2016-1000027 spring-core 5.2.2.RELEASE: spring-boot-starter-test 2.2.2.RELEASE: org.springframework","shortDescription":{"text":"Transitive Dependency: spring-core 5.2.2.RELEASE from spring-boot-starter-test 2.2.2.RELEASE (CVE-2016-1000027)"},"fullDescription":{"text":"Pivotal Spring Framework through 5.3.16 suffers from a potential remote code execution (RCE) issue if used for Java deserialization of untrusted data. Depending on how the library is implemented within a product, this issue may or not occur, and authentication may be required. NOTE: the vendor's position is that untrusted data is not an intended use case. The product's behavior will not be changed because some users rely on deserialization of trusted data."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| spring-core 5.2.2.RELEASE  | 5.3.31  | 6.1.2 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/ba6e9d03-9fbd-4086-9631-99d1ad5e520c?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=09f17d81-b282-43ec-9f2b-36c8021d3ca7)\n\n\n## Description\nPivotal Spring Framework through 5.3.16 suffers from a potential remote code execution (RCE) issue if used for Java deserialization of untrusted data. Depending on how the library is implemented within a product, this issue may or not occur, and authentication may be required. NOTE: the vendor's position is that untrusted data is not an intended use case. The product's behavior will not be changed because some users rely on deserialization of trusted data.\n\n## Vulnerabilities(BDSA,CVE)\n:red_circle: [CVE-2016-1000027](https://openhub.net/vulnerabilities/bdsa/CVE-2016-1000027) - Insecure Object Deserialization\n\n\n\n\n\n\n\n## Dependency tree\n- org.owasp.webgoat.lesson:http-basics:v8.1.0:-maven\n    - org.springframework.boot:spring-boot-starter-test:2.2.2.RELEASE\n        - org.springframework:spring-core:5.2.2.RELEASE\n\n\n## References\n* Common Weakness Enumeration: [CWE-502](https://cwe.mitre.org/data/definitions/502.html)\n\n","text":"Pivotal Spring Framework through 5.3.16 suffers from a potential remote code execution (RCE) issue if used for Java deserialization of untrusted data. Depending on how the library is implemented within a product, this issue may or not occur, and authentication may be required. NOTE: the vendor's position is that untrusted data is not an intended use case. The product's behavior will not be changed because some users rely on deserialization of trusted data."},"properties":{"security-severity":"9.1","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-502"]},"defaultConfiguration":{"level":"error"}},{"id":"CVE-2022-22965 spring-core 5.2.2.RELEASE: spring-boot-starter-test 2.2.2.RELEASE: org.springframework","shortDescription":{"text":"Transitive Dependency: spring-core 5.2.2.RELEASE from spring-boot-starter-test 2.2.2.RELEASE (CVE-2022-22965)"},"fullDescription":{"text":"Spring Framework is vulnerable to a flaw in the access restrictions to the security sensitive `ClassLoader` property. The restrictions can be bypassed through alternative paths available with Java9 and later. An attacker can leverage this vulnerability to cause remote code execution (RCE).\n\n**Note** this issue exists because the restrictions that were introduced to prevent exploitation of BDSA-2010-0001 (CVE-2010-1622) can be bypassed on platforms where Java9 and later are in use.\n\nThis vulnerability is listed as exploitable by the Cybersecurity \u0026 Infrastructure Security Agency in their [Known Exploited Vulnerabilities Catalog](https://www.cisa.gov/known-exploited-vulnerabilities-catalog)."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| spring-core 5.2.2.RELEASE  | 5.3.31  | 6.1.2 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/ba6e9d03-9fbd-4086-9631-99d1ad5e520c?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=09f17d81-b282-43ec-9f2b-36c8021d3ca7)\n\n\n## Description\nSpring Framework is vulnerable to a flaw in the access restrictions to the security sensitive `ClassLoader` property. The restrictions can be bypassed through alternative paths available with Java9 and later. An attacker can leverage this vulnerability to cause remote code execution (RCE).\n\n**Note** this issue exists because the restrictions that were introduced to prevent exploitation of BDSA-2010-0001 (CVE-2010-1622) can be bypassed on platforms where Java9 and later are in use.\n\nThis vulnerability is listed as exploitable by the Cybersecurity \u0026 Infrastructure Security Agency in their [Known Exploited Vulnerabilities Catalog](https://www.cisa.gov/known-exploited-vulnerabilities-catalog).\n\n## Vulnerabilities(BDSA,CVE)\n:red_circle: [CVE-2022-22965](https://openhub.net/vulnerabilities/bdsa/CVE-2022-22965) - Incomplete List of Disallowed Inputs\n\n\n\n## Solution\nFixed in [**5.3.18**](https://github.com/spring-projects/spring-framework/releases/tag/v5.3.18) by [this](https://github.com/spring-projects/spring-framework/commit/002546b3e4b8d791ea6acccb81eb3168f51abb15) commit and  [**5.2.20**](https://github.com/spring-projects/spring-framework/releases/tag/v5.2.20.RELEASE) by [this](https://github.com/spring-projects/spring-framework/commit/996f701a1916d10202c1d0d281f06ab1f2e1117e) commit .\n\nThe latest releases can be found [here](https://github.com/spring-projects/spring-framework/tags).\n\n## Workaround\nAn official workaround for the issue has been outlined [here](https://spring.io/blog/2022/03/31/spring-framework-rce-early-announcement).\n\n## Dependency tree\n- org.owasp.webgoat.lesson:http-basics:v8.1.0:-maven\n    - org.springframework.boot:spring-boot-starter-test:2.2.2.RELEASE\n        - org.springframework:spring-core:5.2.2.RELEASE\n\n\n## References\n* Common Weakness Enumeration: [CWE-184](https://cwe.mitre.org/data/definitions/184.html)\n* Common Weakness Enumeration: [CWE-749](https://cwe.mitre.org/data/definitions/749.html)\n\n","text":"Spring Framework is vulnerable to a flaw in the access restrictions to the security sensitive `ClassLoader` property. The restrictions can be bypassed through alternative paths available with Java9 and later. An attacker can leverage this vulnerability to cause remote code execution (RCE).\n\n**Note** this issue exists because the restrictions that were introduced to prevent exploitation of BDSA-2010-0001 (CVE-2010-1622) can be bypassed on platforms where Java9 and later are in use.\n\nThis vulnerability is listed as exploitable by the Cybersecurity \u0026 Infrastructure Security Agency in their [Known Exploited Vulnerabilities Catalog](https://www.cisa.gov/known-exploited-vulnerabilities-catalog)."},"properties":{"security-severity":"9.1","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-184","external/cwe/cwe-749"]},"defaultConfiguration":{"level":"error"}},{"id":"CVE-2020-5397 spring-core 5.2.2.RELEASE: spring-boot-starter-test 2.2.2.RELEASE: org.springframework","shortDescription":{"text":"Transitive Dependency: spring-core 5.2.2.RELEASE from spring-boot-starter-test 2.2.2.RELEASE (CVE-2020-5397)"},"fullDescription":{"text":"Spring Framework is vulnerable to cross-site request forgery (CSRF) attacks via CORS preflight requests which target Spring MVC or Spring WebFlux endpoints."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| spring-core 5.2.2.RELEASE  | 5.3.31  | 6.1.2 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/ba6e9d03-9fbd-4086-9631-99d1ad5e520c?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=09f17d81-b282-43ec-9f2b-36c8021d3ca7)\n\n\n## Description\nSpring Framework is vulnerable to cross-site request forgery (CSRF) attacks via CORS preflight requests which target Spring MVC or Spring WebFlux endpoints.\n\n## Vulnerabilities(BDSA,CVE)\n:orange_circle: [CVE-2020-5397](https://openhub.net/vulnerabilities/bdsa/CVE-2020-5397) - Cross-Site Request Forgery (CSRF)\n\n\n\n## Solution\nFixed in [**5.2.3**](https://github.com/spring-projects/spring-framework/releases/tag/v5.2.3.RELEASE).\n\n\n\n## Dependency tree\n- org.owasp.webgoat.lesson:http-basics:v8.1.0:-maven\n    - org.springframework.boot:spring-boot-starter-test:2.2.2.RELEASE\n        - org.springframework:spring-core:5.2.2.RELEASE\n\n\n## References\n* Common Weakness Enumeration: [CWE-352](https://cwe.mitre.org/data/definitions/352.html)\n\n","text":"Spring Framework is vulnerable to cross-site request forgery (CSRF) attacks via CORS preflight requests which target Spring MVC or Spring WebFlux endpoints."},"properties":{"security-severity":"8.9","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-352"]},"defaultConfiguration":{"level":"error"}},{"id":"BDSA-2022-0847 spring-core 5.2.2.RELEASE: spring-boot-starter-test 2.2.2.RELEASE: org.springframework","shortDescription":{"text":"Transitive Dependency: spring-core 5.2.2.RELEASE from spring-boot-starter-test 2.2.2.RELEASE (BDSA-2022-0847)"},"fullDescription":{"text":"Software systems using Spring Framework may be vulnerable to unsafe deserialization if they employ unsafe use of certain provided deserialization functionality. A remote attacker could potentially execute arbitrary code on a vulnerable endpoint by passing a maliciously crafted serialized object to that endpoint.\n\n**Note**: This issue only affects software that has been written to leverage specific deserialization functionality provided by the Spring Framework without sanitization."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| spring-core 5.2.2.RELEASE  | 5.3.31  | 6.1.2 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/ba6e9d03-9fbd-4086-9631-99d1ad5e520c?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=09f17d81-b282-43ec-9f2b-36c8021d3ca7)\n\n\n## Description\nSoftware systems using Spring Framework may be vulnerable to unsafe deserialization if they employ unsafe use of certain provided deserialization functionality. A remote attacker could potentially execute arbitrary code on a vulnerable endpoint by passing a maliciously crafted serialized object to that endpoint.\n\n**Note**: This issue only affects software that has been written to leverage specific deserialization functionality provided by the Spring Framework without sanitization.\n\n## Vulnerabilities(BDSA,CVE)\n:orange_circle: [BDSA-2022-0847](https://openhub.net/vulnerabilities/bdsa/BDSA-2022-0847) - Insecure Object Deserialization\n\n\n\n## Solution\nFixed in **[6.0.0-M4](https://github.com/spring-projects/spring-framework/releases/tag/v6.0.0-M4)** by [this](https://github.com/spring-projects/spring-framework/commit/7f7fb58dd0dae86d22268a4b59ac7c72a6c22529) commit.\n\nFixed in **[5.3.18](https://github.com/spring-projects/spring-framework/releases/tag/v5.3.18)** and **[5.2.20](https://github.com/spring-projects/spring-framework/releases/tag/v5.2.20.RELEASE)** by [this](https://github.com/spring-projects/spring-framework/commit/3811cd4c0a0be3aac6e842cf1890610ce986449d) commit.\n\n**Note**: These patches simply annotate the dangerous method as deprecated or documents the dangers. It is the responsibility of developers who call this method to ensure that it is not used with unsanitized untrusted input.\n\n\n\n## Dependency tree\n- org.owasp.webgoat.lesson:http-basics:v8.1.0:-maven\n    - org.springframework.boot:spring-boot-starter-test:2.2.2.RELEASE\n        - org.springframework:spring-core:5.2.2.RELEASE\n\n\n## References\n* Common Weakness Enumeration: [CWE-502](https://cwe.mitre.org/data/definitions/502.html)\n\n","text":"Software systems using Spring Framework may be vulnerable to unsafe deserialization if they employ unsafe use of certain provided deserialization functionality. A remote attacker could potentially execute arbitrary code on a vulnerable endpoint by passing a maliciously crafted serialized object to that endpoint.\n\n**Note**: This issue only affects software that has been written to leverage specific deserialization functionality provided by the Spring Framework without sanitization."},"properties":{"security-severity":"8.9","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-502"]},"defaultConfiguration":{"level":"error"}},{"id":"CVE-2020-5398 spring-core 5.2.2.RELEASE: spring-boot-starter-test 2.2.2.RELEASE: org.springframework","shortDescription":{"text":"Transitive Dependency: spring-core 5.2.2.RELEASE from spring-boot-starter-test 2.2.2.RELEASE (CVE-2020-5398)"},"fullDescription":{"text":"Spring Framework is vulnerable to a reflected file download (RFD) attack via improper input validation on filenames in a `Content-Disposition` header."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| spring-core 5.2.2.RELEASE  | 5.3.31  | 6.1.2 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/ba6e9d03-9fbd-4086-9631-99d1ad5e520c?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=09f17d81-b282-43ec-9f2b-36c8021d3ca7)\n\n\n## Description\nSpring Framework is vulnerable to a reflected file download (RFD) attack via improper input validation on filenames in a `Content-Disposition` header.\n\n## Vulnerabilities(BDSA,CVE)\n:orange_circle: [CVE-2020-5398](https://openhub.net/vulnerabilities/bdsa/CVE-2020-5398) - Weak Input Validation\n\n\n\n## Solution\nFixed by [this](https://github.com/spring-projects/spring-framework/commit/956ffe68587c8d5f21135b5ce4650af0c2dea933) commit in:\n* [**5.2.3**](https://github.com/spring-projects/spring-framework/releases/tag/v5.2.3.RELEASE)\n* [**5.1.13**](https://github.com/spring-projects/spring-framework/releases/tag/v5.1.13.RELEASE) \n* [**5.0.16**](https://github.com/spring-projects/spring-framework/releases/tag/v5.0.16.RELEASE)\n\n\n\n## Dependency tree\n- org.owasp.webgoat.lesson:http-basics:v8.1.0:-maven\n    - org.springframework.boot:spring-boot-starter-test:2.2.2.RELEASE\n        - org.springframework:spring-core:5.2.2.RELEASE\n\n\n## References\n* Common Weakness Enumeration: [CWE-20](https://cwe.mitre.org/data/definitions/20.html)\n\n","text":"Spring Framework is vulnerable to a reflected file download (RFD) attack via improper input validation on filenames in a `Content-Disposition` header."},"properties":{"security-severity":"8.9","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-20"]},"defaultConfiguration":{"level":"error"}},{"id":"CVE-2021-22096 spring-core 5.2.2.RELEASE: spring-boot-starter-test 2.2.2.RELEASE: org.springframework","shortDescription":{"text":"Transitive Dependency: spring-core 5.2.2.RELEASE from spring-boot-starter-test 2.2.2.RELEASE (CVE-2021-22096)"},"fullDescription":{"text":"Spring Framework is vulnerable to log file injection due to the insufficient validation of user input in an undisclosed component. An attacker could leverage this issue in order to add arbitrary entries to a log file which could impact both the integrity issues and performance issues.\n\n**Note**: a follow-up to this issue was disclosed as **CVE-2021-22060** (**BDSA-2021-3236**), with further fixed releases that protect against additional types of input and in more places of the Spring Framework codebase."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| spring-core 5.2.2.RELEASE  | 5.3.31  | 6.1.2 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/ba6e9d03-9fbd-4086-9631-99d1ad5e520c?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=09f17d81-b282-43ec-9f2b-36c8021d3ca7)\n\n\n## Description\nSpring Framework is vulnerable to log file injection due to the insufficient validation of user input in an undisclosed component. An attacker could leverage this issue in order to add arbitrary entries to a log file which could impact both the integrity issues and performance issues.\n\n**Note**: a follow-up to this issue was disclosed as **CVE-2021-22060** (**BDSA-2021-3236**), with further fixed releases that protect against additional types of input and in more places of the Spring Framework codebase.\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [CVE-2021-22096](https://openhub.net/vulnerabilities/bdsa/CVE-2021-22096) - Injection in Downstream Component\n\n\n\n## Solution\nFixed in versions [**5.3.14**](https://github.com/spring-projects/spring-framework/releases/tag/v5.3.14) and [**5.2.19**](https://github.com/spring-projects/spring-framework/releases/tag/v5.2.19.RELEASE).\n\nThe latest stable releases can be found [here](https://github.com/spring-projects/spring-framework/releases).\n\n\n\n## Dependency tree\n- org.owasp.webgoat.lesson:http-basics:v8.1.0:-maven\n    - org.springframework.boot:spring-boot-starter-test:2.2.2.RELEASE\n        - org.springframework:spring-core:5.2.2.RELEASE\n\n\n## References\n* Common Weakness Enumeration: [CWE-74](https://cwe.mitre.org/data/definitions/74.html)\n\n","text":"Spring Framework is vulnerable to log file injection due to the insufficient validation of user input in an undisclosed component. An attacker could leverage this issue in order to add arbitrary entries to a log file which could impact both the integrity issues and performance issues.\n\n**Note**: a follow-up to this issue was disclosed as **CVE-2021-22060** (**BDSA-2021-3236**), with further fixed releases that protect against additional types of input and in more places of the Spring Framework codebase."},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-74"]},"defaultConfiguration":{"level":"warning"}},{"id":"CVE-2021-22060 spring-core 5.2.2.RELEASE: spring-boot-starter-test 2.2.2.RELEASE: org.springframework","shortDescription":{"text":"Transitive Dependency: spring-core 5.2.2.RELEASE from spring-boot-starter-test 2.2.2.RELEASE (CVE-2021-22060)"},"fullDescription":{"text":"Spring Framework is vulnerable to log file injection due to the insufficient validation of user input in an undisclosed component. An attacker could leverage this issue in order to add arbitrary entries to a log file which could impact both the integrity issues and performance issues.\n\n**Note**: the vendor states this issue exists as a follow up to CVE-2021-22096 (BDSA-2022-0011) that protects against additional types of input and in more places of the Spring Framework codebase."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| spring-core 5.2.2.RELEASE  | 5.3.31  | 6.1.2 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/ba6e9d03-9fbd-4086-9631-99d1ad5e520c?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=09f17d81-b282-43ec-9f2b-36c8021d3ca7)\n\n\n## Description\nSpring Framework is vulnerable to log file injection due to the insufficient validation of user input in an undisclosed component. An attacker could leverage this issue in order to add arbitrary entries to a log file which could impact both the integrity issues and performance issues.\n\n**Note**: the vendor states this issue exists as a follow up to CVE-2021-22096 (BDSA-2022-0011) that protects against additional types of input and in more places of the Spring Framework codebase.\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [CVE-2021-22060](https://openhub.net/vulnerabilities/bdsa/CVE-2021-22060) - Injection in Downstream Component\n\n\n\n## Solution\nFixed in versions [**5.3.14**](https://github.com/spring-projects/spring-framework/releases/tag/v5.3.14) and [**5.2.19**](https://github.com/spring-projects/spring-framework/releases/tag/v5.2.19.RELEASE).\n\nThe latest stable releases can be found [here](https://github.com/spring-projects/spring-framework/releases).\n\n\n\n## Dependency tree\n- org.owasp.webgoat.lesson:http-basics:v8.1.0:-maven\n    - org.springframework.boot:spring-boot-starter-test:2.2.2.RELEASE\n        - org.springframework:spring-core:5.2.2.RELEASE\n\n\n## References\n* Common Weakness Enumeration: [CWE-74](https://cwe.mitre.org/data/definitions/74.html)\n\n","text":"Spring Framework is vulnerable to log file injection due to the insufficient validation of user input in an undisclosed component. An attacker could leverage this issue in order to add arbitrary entries to a log file which could impact both the integrity issues and performance issues.\n\n**Note**: the vendor states this issue exists as a follow up to CVE-2021-22096 (BDSA-2022-0011) that protects against additional types of input and in more places of the Spring Framework codebase."},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-74"]},"defaultConfiguration":{"level":"warning"}},{"id":"CVE-2022-22950 spring-core 5.2.2.RELEASE: spring-boot-starter-test 2.2.2.RELEASE: org.springframework","shortDescription":{"text":"Transitive Dependency: spring-core 5.2.2.RELEASE from spring-boot-starter-test 2.2.2.RELEASE (CVE-2022-22950)"},"fullDescription":{"text":"Spring-Framework's spring-expression is vulnerable to a denial-of-service (DoS) condition. This allows an attacker to use crafted input to cause the spring-expression process to crash due to an exception."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| spring-core 5.2.2.RELEASE  | 5.3.31  | 6.1.2 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/ba6e9d03-9fbd-4086-9631-99d1ad5e520c?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=09f17d81-b282-43ec-9f2b-36c8021d3ca7)\n\n\n## Description\nSpring-Framework's spring-expression is vulnerable to a denial-of-service (DoS) condition. This allows an attacker to use crafted input to cause the spring-expression process to crash due to an exception.\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [CVE-2022-22950](https://openhub.net/vulnerabilities/bdsa/CVE-2022-22950) - Allocation of Resources Without Limits or Throttling\n\n\n\n## Solution\nFixed in version [**5.3.17**](https://github.com/spring-projects/spring-framework/releases/tag/v5.3.17) by [this](https://github.com/spring-projects/spring-framework/commit/94af2ca06bf711de03286999b1c64a703d6de552) commit.\n\nThe latest stable releases can be found [here](https://github.com/spring-projects/spring-framework/tags).\n\n\n\n## Dependency tree\n- org.owasp.webgoat.lesson:http-basics:v8.1.0:-maven\n    - org.springframework.boot:spring-boot-starter-test:2.2.2.RELEASE\n        - org.springframework:spring-core:5.2.2.RELEASE\n\n\n## References\n* Common Weakness Enumeration: [CWE-770](https://cwe.mitre.org/data/definitions/770.html)\n\n","text":"Spring-Framework's spring-expression is vulnerable to a denial-of-service (DoS) condition. This allows an attacker to use crafted input to cause the spring-expression process to crash due to an exception."},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-770"]},"defaultConfiguration":{"level":"warning"}},{"id":"CVE-2021-22118 spring-core 5.2.2.RELEASE: spring-boot-starter-test 2.2.2.RELEASE: org.springframework","shortDescription":{"text":"Transitive Dependency: spring-core 5.2.2.RELEASE from spring-boot-starter-test 2.2.2.RELEASE (CVE-2021-22118)"},"fullDescription":{"text":"Spring Framework is vulnerable to privilege escalation due to the creation of unsafe temporary directories by the WebFlux component. A local authenticated attacker could modify arbitrary files via maliciously crafted `multipart` requests. \n\nThis vulnerability does not affect Spring MVC applications, or applications that do not handle `multipart` file requests."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| spring-core 5.2.2.RELEASE  | 5.3.31  | 6.1.2 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/ba6e9d03-9fbd-4086-9631-99d1ad5e520c?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=09f17d81-b282-43ec-9f2b-36c8021d3ca7)\n\n\n## Description\nSpring Framework is vulnerable to privilege escalation due to the creation of unsafe temporary directories by the WebFlux component. A local authenticated attacker could modify arbitrary files via maliciously crafted `multipart` requests. \n\nThis vulnerability does not affect Spring MVC applications, or applications that do not handle `multipart` file requests.\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [CVE-2021-22118](https://openhub.net/vulnerabilities/bdsa/CVE-2021-22118) - Third-party component usage\n\n\n\n## Solution\nFixed in [**5.3.7**](https://github.com/spring-projects/spring-framework/releases/tag/v5.3.7)  by [this](https://github.com/spring-projects/spring-framework/commit/cce60c479c22101f24b2b4abebb6d79440b120d1) commit and [this](https://github.com/spring-projects/spring-framework/commit/0d0d75e25322d8161002d861fff3ec04ba8be5ac) commit, and in [**5.2.15**](https://github.com/spring-projects/spring-framework/releases/tag/v5.2.15.RELEASE) by [this](https://github.com/spring-projects/spring-framework/commit/85ad63bd35f6f10fa5549ba9a11869144338bd8a) commit.\n\nThe latest stable releases are available [here](https://github.com/spring-projects/spring-framework/releases/).\n\n\n\n## Dependency tree\n- org.owasp.webgoat.lesson:http-basics:v8.1.0:-maven\n    - org.springframework.boot:spring-boot-starter-test:2.2.2.RELEASE\n        - org.springframework:spring-core:5.2.2.RELEASE\n\n\n## References\n* Common Weakness Enumeration: [CWE-264](https://cwe.mitre.org/data/definitions/264.html)\n* Common Weakness Enumeration: [CWE-376](https://cwe.mitre.org/data/definitions/376.html)\n\n","text":"Spring Framework is vulnerable to privilege escalation due to the creation of unsafe temporary directories by the WebFlux component. A local authenticated attacker could modify arbitrary files via maliciously crafted `multipart` requests. \n\nThis vulnerability does not affect Spring MVC applications, or applications that do not handle `multipart` file requests."},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-264","external/cwe/cwe-376"]},"defaultConfiguration":{"level":"warning"}},{"id":"CVE-2022-22970 spring-core 5.2.2.RELEASE: spring-boot-starter-test 2.2.2.RELEASE: org.springframework","shortDescription":{"text":"Transitive Dependency: spring-core 5.2.2.RELEASE from spring-boot-starter-test 2.2.2.RELEASE (CVE-2022-22970)"},"fullDescription":{"text":"Spring Framework is vulnerable to denial-of-service (DoS) due to the improper implementation of data binding functionality. A remote attacker could cause a vulnerable server to crash if that server provides file upload functionality."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| spring-core 5.2.2.RELEASE  | 5.3.31  | 6.1.2 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/ba6e9d03-9fbd-4086-9631-99d1ad5e520c?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=09f17d81-b282-43ec-9f2b-36c8021d3ca7)\n\n\n## Description\nSpring Framework is vulnerable to denial-of-service (DoS) due to the improper implementation of data binding functionality. A remote attacker could cause a vulnerable server to crash if that server provides file upload functionality.\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [CVE-2022-22970](https://openhub.net/vulnerabilities/bdsa/CVE-2022-22970) - Incorrect Provision of Specified Functionality\n\n\n\n## Solution\nFixed in version [**5.3.20**](https://github.com/spring-projects/spring-framework/releases/tag/v5.3.20) and in version [**5.2.22**](https://github.com/spring-projects/spring-framework/releases/tag/v5.2.22.RELEASE).\n\nThe latest stable releases can be found [here](https://github.com/spring-projects/spring-framework/releases).\n\n\n\n## Dependency tree\n- org.owasp.webgoat.lesson:http-basics:v8.1.0:-maven\n    - org.springframework.boot:spring-boot-starter-test:2.2.2.RELEASE\n        - org.springframework:spring-core:5.2.2.RELEASE\n\n\n## References\n* Common Weakness Enumeration: [CWE-684](https://cwe.mitre.org/data/definitions/684.html)\n\n","text":"Spring Framework is vulnerable to denial-of-service (DoS) due to the improper implementation of data binding functionality. A remote attacker could cause a vulnerable server to crash if that server provides file upload functionality."},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-684"]},"defaultConfiguration":{"level":"warning"}},{"id":"CVE-2022-22971 spring-core 5.2.2.RELEASE: spring-boot-starter-test 2.2.2.RELEASE: org.springframework","shortDescription":{"text":"Transitive Dependency: spring-core 5.2.2.RELEASE from spring-boot-starter-test 2.2.2.RELEASE (CVE-2022-22971)"},"fullDescription":{"text":"Spring Framework is vulnerable to denial-of-service (DoS) due to the improper handling of the STOMP protocol for websockets. A remote authenticated attacker could leverage this issue in order to cause a server to crash."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| spring-core 5.2.2.RELEASE  | 5.3.31  | 6.1.2 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/ba6e9d03-9fbd-4086-9631-99d1ad5e520c?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=09f17d81-b282-43ec-9f2b-36c8021d3ca7)\n\n\n## Description\nSpring Framework is vulnerable to denial-of-service (DoS) due to the improper handling of the STOMP protocol for websockets. A remote authenticated attacker could leverage this issue in order to cause a server to crash.\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [CVE-2022-22971](https://openhub.net/vulnerabilities/bdsa/CVE-2022-22971) - Incorrect Provision of Specified Functionality\n\n\n\n## Solution\nFixed in version [**5.3.20**](https://github.com/spring-projects/spring-framework/releases/tag/v5.3.20) and in version [**5.2.22**](https://github.com/spring-projects/spring-framework/releases/tag/v5.2.22.RELEASE).\n\nThe latest stable releases can be found [here](https://github.com/spring-projects/spring-framework/releases).\n\n\n\n## Dependency tree\n- org.owasp.webgoat.lesson:http-basics:v8.1.0:-maven\n    - org.springframework.boot:spring-boot-starter-test:2.2.2.RELEASE\n        - org.springframework:spring-core:5.2.2.RELEASE\n\n\n## References\n* Common Weakness Enumeration: [CWE-684](https://cwe.mitre.org/data/definitions/684.html)\n\n","text":"Spring Framework is vulnerable to denial-of-service (DoS) due to the improper handling of the STOMP protocol for websockets. A remote authenticated attacker could leverage this issue in order to cause a server to crash."},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-684"]},"defaultConfiguration":{"level":"warning"}},{"id":"CVE-2023-20861 spring-core 5.2.2.RELEASE: spring-boot-starter-test 2.2.2.RELEASE: org.springframework","shortDescription":{"text":"Transitive Dependency: spring-core 5.2.2.RELEASE from spring-boot-starter-test 2.2.2.RELEASE (CVE-2023-20861)"},"fullDescription":{"text":"Spring Framework is vulnerable to denial-of-service (DoS) via specially crafted SpEL expressions. An attacker could exploit this issue by passing a crafted SpEL expression to the application which may result in a crash."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| spring-core 5.2.2.RELEASE  | 5.3.31  | 6.1.2 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/ba6e9d03-9fbd-4086-9631-99d1ad5e520c?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=09f17d81-b282-43ec-9f2b-36c8021d3ca7)\n\n\n## Description\nSpring Framework is vulnerable to denial-of-service (DoS) via specially crafted SpEL expressions. An attacker could exploit this issue by passing a crafted SpEL expression to the application which may result in a crash.\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [CVE-2023-20861](https://openhub.net/vulnerabilities/bdsa/CVE-2023-20861) - Weak Input Validation\n\n\n\n## Solution\nFixed in:\n* [**5.2.23**](https://github.com/spring-projects/spring-framework/releases/tag/v5.2.23.RELEASE) by [this](https://github.com/spring-projects/spring-framework/commit/52c93b1c4b24d70de233a958e60e7c5822bd274f) commit,\n* [**5.3.26**](https://github.com/spring-projects/spring-framework/releases/tag/v5.3.26) by [this](https://github.com/spring-projects/spring-framework/commit/430fc25acad2e85cbdddcd52b64481691f03ebd1) commit,\n* [**6.0.7**](https://github.com/spring-projects/spring-framework/releases/tag/v6.0.7) by [this](https://github.com/spring-projects/spring-framework/commit/935c29e3ddba5b19951e54f6685c70ed45d9cbe5) commit.\n\nThe latest stable releases are available [here](https://github.com/spring-projects/spring-framework/releases).\n\n\n\n## Dependency tree\n- org.owasp.webgoat.lesson:http-basics:v8.1.0:-maven\n    - org.springframework.boot:spring-boot-starter-test:2.2.2.RELEASE\n        - org.springframework:spring-core:5.2.2.RELEASE\n\n\n## References\n* Common Weakness Enumeration: [CWE-20](https://cwe.mitre.org/data/definitions/20.html)\n\n","text":"Spring Framework is vulnerable to denial-of-service (DoS) via specially crafted SpEL expressions. An attacker could exploit this issue by passing a crafted SpEL expression to the application which may result in a crash."},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-20"]},"defaultConfiguration":{"level":"warning"}},{"id":"CVE-2023-20863 spring-core 5.2.2.RELEASE: spring-boot-starter-test 2.2.2.RELEASE: org.springframework","shortDescription":{"text":"Transitive Dependency: spring-core 5.2.2.RELEASE from spring-boot-starter-test 2.2.2.RELEASE (CVE-2023-20863)"},"fullDescription":{"text":"Spring Framework is vulnerable to denial-of-service (DoS) via specially crafted SpEL expressions."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| spring-core 5.2.2.RELEASE  | 5.3.31  | 6.1.2 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/ba6e9d03-9fbd-4086-9631-99d1ad5e520c?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=09f17d81-b282-43ec-9f2b-36c8021d3ca7)\n\n\n## Description\nSpring Framework is vulnerable to denial-of-service (DoS) via specially crafted SpEL expressions.\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [CVE-2023-20863](https://openhub.net/vulnerabilities/bdsa/CVE-2023-20863) - Weak Input Validation\n\n\n\n## Solution\nFixed in:\n* [**5.2.24**](https://github.com/spring-projects/spring-framework/releases/tag/v5.2.24.RELEASE)\n* [**5.3.27**](https://github.com/spring-projects/spring-framework/releases/tag/v5.3.27)\n* [**6.0.8**](https://github.com/spring-projects/spring-framework/releases/tag/v6.0.8)\n\nThe latest stable releases are available [here](https://github.com/spring-projects/spring-framework/releases).\n\n\n\n## Dependency tree\n- org.owasp.webgoat.lesson:http-basics:v8.1.0:-maven\n    - org.springframework.boot:spring-boot-starter-test:2.2.2.RELEASE\n        - org.springframework:spring-core:5.2.2.RELEASE\n\n\n## References\n* Common Weakness Enumeration: [CWE-20](https://cwe.mitre.org/data/definitions/20.html)\n\n","text":"Spring Framework is vulnerable to denial-of-service (DoS) via specially crafted SpEL expressions."},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-20"]},"defaultConfiguration":{"level":"warning"}},{"id":"CVE-2020-5421 spring-core 5.2.2.RELEASE: spring-boot-starter-test 2.2.2.RELEASE: org.springframework","shortDescription":{"text":"Transitive Dependency: spring-core 5.2.2.RELEASE from spring-boot-starter-test 2.2.2.RELEASE (CVE-2020-5421)"},"fullDescription":{"text":"It was discovered that Spring Framework was vulnerable to RFD protection bypass. In some instances, depending on the browser used, an attacker could bypass the RFD attack protections via the use of a `jsessionid` path parameter."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| spring-core 5.2.2.RELEASE  | 5.3.31  | 6.1.2 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/ba6e9d03-9fbd-4086-9631-99d1ad5e520c?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=09f17d81-b282-43ec-9f2b-36c8021d3ca7)\n\n\n## Description\nIt was discovered that Spring Framework was vulnerable to RFD protection bypass. In some instances, depending on the browser used, an attacker could bypass the RFD attack protections via the use of a `jsessionid` path parameter.\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [CVE-2020-5421](https://openhub.net/vulnerabilities/bdsa/CVE-2020-5421) - Weak Input Validation\n\n\n\n## Solution\nFixed in:\n* [**5.2.9**](https://github.com/spring-projects/spring-framework/releases/tag/v5.2.9.RELEASE) by [this](https://github.com/spring-projects/spring-framework/commit/899761f0a8890353dc01f10d2af96ae192f3e655) commit,\n* [**5.1.18**](https://github.com/spring-projects/spring-framework/releases/tag/v5.1.18.RELEASE) by [this](https://github.com/spring-projects/spring-framework/commit/a63c8886c00f30fea5b25f50ddf6f56c6eb957bd) commit,\n* [**5.0.19**](https://github.com/spring-projects/spring-framework/releases/tag/v5.0.19.RELEASE) by [this](https://github.com/spring-projects/spring-framework/commit/aec3a4c69e02d87f87258b0ab5c1d6c83f4cb44f) commit,\n* [**4.3.29**](https://github.com/spring-projects/spring-framework/releases/tag/v4.3.29.RELEASE) by [this](https://github.com/spring-projects/spring-framework/commit/2f75212eb667a30fe2fa9b5aca8f22d5e255821f) commit.\n\n\n\n## Dependency tree\n- org.owasp.webgoat.lesson:http-basics:v8.1.0:-maven\n    - org.springframework.boot:spring-boot-starter-test:2.2.2.RELEASE\n        - org.springframework:spring-core:5.2.2.RELEASE\n\n\n## References\n* Common Weakness Enumeration: [CWE-20](https://cwe.mitre.org/data/definitions/20.html)\n\n","text":"It was discovered that Spring Framework was vulnerable to RFD protection bypass. In some instances, depending on the browser used, an attacker could bypass the RFD attack protections via the use of a `jsessionid` path parameter."},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-20"]},"defaultConfiguration":{"level":"warning"}},{"id":"CVE-2022-22968 spring-core 5.2.2.RELEASE: spring-boot-starter-test 2.2.2.RELEASE: org.springframework","shortDescription":{"text":"Transitive Dependency: spring-core 5.2.2.RELEASE from spring-boot-starter-test 2.2.2.RELEASE (CVE-2022-22968)"},"fullDescription":{"text":"Spring Framework is vulnerable to data binding protection bypass due to improper validation of specified disallowed fields in `DataBinders`. This could be leveraged by an attacker to bypass the suggested workaround to **CVE-2022-22965** (**BDSA-2022-0858**) if it is improperly implemented."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| spring-core 5.2.2.RELEASE  | 5.3.31  | 6.1.2 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/ba6e9d03-9fbd-4086-9631-99d1ad5e520c?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=09f17d81-b282-43ec-9f2b-36c8021d3ca7)\n\n\n## Description\nSpring Framework is vulnerable to data binding protection bypass due to improper validation of specified disallowed fields in `DataBinders`. This could be leveraged by an attacker to bypass the suggested workaround to **CVE-2022-22965** (**BDSA-2022-0858**) if it is improperly implemented.\n\n## Vulnerabilities(BDSA,CVE)\n:large_blue_circle: [CVE-2022-22968](https://openhub.net/vulnerabilities/bdsa/CVE-2022-22968) - Weak Input Validation\n\n\n\n## Solution\nFixed  in [**5.3.19**](https://github.com/spring-projects/spring-framework/releases/tag/v5.3.19) by [this](https://github.com/spring-projects/spring-framework/commit/a7cf19cec5ebd270f97a194d749e2d5701ad2ab7) commit and [**5.2.21**](https://github.com/spring-projects/spring-framework/releases/tag/v5.2.21.RELEASE) by [this](https://github.com/spring-projects/spring-framework/commit/833e750175349ab4fd502109a8b41af77e25cdea) commit.\n\n\n\n## Dependency tree\n- org.owasp.webgoat.lesson:http-basics:v8.1.0:-maven\n    - org.springframework.boot:spring-boot-starter-test:2.2.2.RELEASE\n        - org.springframework:spring-core:5.2.2.RELEASE\n\n\n## References\n* Common Weakness Enumeration: [CWE-20](https://cwe.mitre.org/data/definitions/20.html)\n\n","text":"Spring Framework is vulnerable to data binding protection bypass due to improper validation of specified disallowed fields in `DataBinders`. This could be leveraged by an attacker to bypass the suggested workaround to **CVE-2022-22965** (**BDSA-2022-0858**) if it is improperly implemented."},"properties":{"security-severity":"3.8","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-20"]},"defaultConfiguration":{"level":"note"}},{"id":"BDSA-2022-0856 spring-boot-devtools 2.2.2.RELEASE: org.springframework.boot","shortDescription":{"text":"Direct Dependency: spring-boot-devtools 2.2.2.RELEASE (BDSA-2022-0856)"},"fullDescription":{"text":"Spring Boot is vulnerable to privilege escalation due to a race condition which occurs during the creation of a temporary directory. A local attacker could create their own temporary directory by racing against Spring Boot and supply their own configuration files which would allow for the full takeover of the application."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| spring-boot-devtools 2.2.2.RELEASE  | 2.7.18  | 3.2.1 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/8209ed1e-e394-4fd6-8cae-800967f1adda?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=fdad7d51-de80-41f9-be4b-8fe1fb80f22c)\n\n\n## Description\nSpring Boot is vulnerable to privilege escalation due to a race condition which occurs during the creation of a temporary directory. A local attacker could create their own temporary directory by racing against Spring Boot and supply their own configuration files which would allow for the full takeover of the application.\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [BDSA-2022-0856](https://openhub.net/vulnerabilities/bdsa/BDSA-2022-0856) - Race Condition due to Improper Synchronization\n\n\n\n## Solution\nFixed in [**2.2.11**](https://github.com/spring-projects/spring-boot/releases/tag/v2.2.11.RELEASE) by [this](https://github.com/spring-projects/spring-boot/commit/667ccdae84822072f9ea1a27ed5c77964c71002d) commit.\n\nThe latest stable releases can be found [here](https://github.com/spring-projects/spring-boot/releases).\n\n## Workaround\nAccording to the [Github Security Advisory](https://github.com/JLLeitschuh/security-research/security/advisories/GHSA-cm59-pr5q-cw85), setting the `java.io.tmpdir` system environment variable to a directory that is exclusively owned by the executing user will fix this vulnerability for all operating systems.\n\n\n\n## References\n* Common Weakness Enumeration: [CWE-362](https://cwe.mitre.org/data/definitions/362.html)\n* Common Weakness Enumeration: [CWE-379](https://cwe.mitre.org/data/definitions/379.html)\n\n","text":"Spring Boot is vulnerable to privilege escalation due to a race condition which occurs during the creation of a temporary directory. A local attacker could create their own temporary directory by racing against Spring Boot and supply their own configuration files which would allow for the full takeover of the application."},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","direct_dependency","patch_available","external/cwe/cwe-362","external/cwe/cwe-379"]},"defaultConfiguration":{"level":"warning"}},{"id":"CVE-2020-17521 groovy 2.5.8: rest-assured 3.3.0: org.codehaus.groovy","shortDescription":{"text":"Transitive Dependency: groovy 2.5.8 from rest-assured 3.3.0 (CVE-2020-17521)"},"fullDescription":{"text":"Apache Groovy is vulnerable to privilege escalation and information exposure due to inappropriate use of an insecure JDK method. A local attacker could exploit this vulnerability by supplying a system with maliciously crafted input."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| groovy 2.5.8  | 2.5.23  | 3.0.20 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/2753baae-27d4-436c-b4f8-04fa18e1a849?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=81f45bb9-9c2e-4a23-be4b-2a85101048a1)\n\n\n## Description\nApache Groovy is vulnerable to privilege escalation and information exposure due to inappropriate use of an insecure JDK method. A local attacker could exploit this vulnerability by supplying a system with maliciously crafted input.\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [CVE-2020-17521](https://openhub.net/vulnerabilities/bdsa/CVE-2020-17521) - Sensitive Data Exposure\n\n\n\n## Solution\nFixed in:\n* [**2.4.21**](https://github.com/apache/groovy/releases/tag/GROOVY_2_4_21) by [this](https://github.com/apache/groovy/commit/4e418d4a34c973a7ec1e822552103043ac13780e) commit,\n* [**2.5.14**](https://github.com/apache/groovy/releases/tag/GROOVY_2_5_14) by [this](https://github.com/apache/groovy/commit/98dc5d713926cd81b006c510a1546ccd520fe17f) commit,\n* [**3.0.7**](https://github.com/apache/groovy/releases/tag/GROOVY_3_0_7) by [this](https://github.com/apache/groovy/commit/f069c35c4bbaf68547c76381509d59840a7ed32d) commit,\n* [**4.0.0-alpha-2**](https://github.com/apache/groovy/releases/tag/GROOVY_4_0_0_ALPHA_2) by [this](https://github.com/apache/groovy/commit/bcbe5c4c76db83736166530647c024ac1e47ef28) commit.\n\nNote: the vendor states that the fix for **2.4**, when Groovy is running on a pre-JDK7 version of the JDK, eliminates the risk of privilege escalation but still leaves the potential for sensitive information leakage. The vendor recommends applying the following mitigation for **2.4**/pre-JDK7 users:\n\u003e Set the `java.io.tmpdir` system environment variable to a directory that is exclusively owned by the executing user.\n\n\n\n## Dependency tree\n- org.owasp.webgoat:webgoat-integration-tests:v8.1.0:-maven\n    - io.rest-assured:rest-assured:3.3.0\n        - org.codehaus.groovy:groovy:2.5.8\n\n\n## References\n* Common Weakness Enumeration: [CWE-200](https://cwe.mitre.org/data/definitions/200.html)\n* Common Weakness Enumeration: [CWE-379](https://cwe.mitre.org/data/definitions/379.html)\n\n","text":"Apache Groovy is vulnerable to privilege escalation and information exposure due to inappropriate use of an insecure JDK method. A local attacker could exploit this vulnerability by supplying a system with maliciously crafted input."},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-200","external/cwe/cwe-379"]},"defaultConfiguration":{"level":"warning"}},{"id":"CVE-2020-1745 undertow-core 2.0.28.Final: spring-boot-starter-undertow 2.2.2.RELEASE: io.undertow","shortDescription":{"text":"Transitive Dependency: undertow-core 2.0.28.Final from spring-boot-starter-undertow 2.2.2.RELEASE (CVE-2020-1745)"},"fullDescription":{"text":"Undertow is vulnerable to a remote file inclusion vulnerability. An attacker could potentially exploit this to cause remote code execution (RCE)."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| undertow-core 2.0.28.Final  | 2.3.10.SP1-redhat-00001  | 2.3.10.SP1-redhat-00001 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/d6725da7-d4ea-4ca5-819b-84375b5db4a4?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=c5c549d3-e8c1-41c6-a16c-976bfb449e37)\n\n\n## Description\nUndertow is vulnerable to a remote file inclusion vulnerability. An attacker could potentially exploit this to cause remote code execution (RCE).\n\n## Vulnerabilities(BDSA,CVE)\n:red_circle: [CVE-2020-1745](https://openhub.net/vulnerabilities/bdsa/CVE-2020-1745) - Improper Access Control\n\n\n\n## Solution\nFixed in [**2.0.30.Final**](https://github.com/undertow-io/undertow/releases/tag/2.0.30.Final) by [this](https://github.com/undertow-io/undertow/commit/e3f460b4d930960bde0f91acdb9815d03ccf6e1d) commit.\n\n## Workaround\nIf not using AJP, it can be disabled in your `standalone-\\*.xml` and/or `domain.xml` file by setting `\"enabled=false\"` on the following line:\n\n`\u003cajp-listener name=\"ajp\" socket-binding=\"ajp\" enabled=\"false\"/\u003e`\n\n## Dependency tree\n- org.owasp.webgoat:webgoat-container:v8.1.0:-maven\n    - org.springframework.boot:spring-boot-starter-undertow:2.2.2.RELEASE\n        - io.undertow:undertow-core:2.0.28.Final\n\n\n## References\n* Common Weakness Enumeration: [CWE-284](https://cwe.mitre.org/data/definitions/284.html)\n\n","text":"Undertow is vulnerable to a remote file inclusion vulnerability. An attacker could potentially exploit this to cause remote code execution (RCE)."},"properties":{"security-severity":"9.1","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-284"]},"defaultConfiguration":{"level":"error"}},{"id":"CVE-2020-10687 undertow-core 2.0.28.Final: spring-boot-starter-undertow 2.2.2.RELEASE: io.undertow","shortDescription":{"text":"Transitive Dependency: undertow-core 2.0.28.Final from spring-boot-starter-undertow 2.2.2.RELEASE (CVE-2020-10687)"},"fullDescription":{"text":"It was found that a previously known HTTP request smuggling issue (`CVE-2017-2666`) in Undertow was not fully fixed. It is still possible to abuse this vulnerability by including invalid characters in HTTP/1.x and [HTTP/2](https://en.wikipedia.org/wiki/HTTP/2) requests. This flaw can result in cache-poisoning, cross-site scripting (XSS) attacks and information disclosure."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| undertow-core 2.0.28.Final  | 2.3.10.SP1-redhat-00001  | 2.3.10.SP1-redhat-00001 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/d6725da7-d4ea-4ca5-819b-84375b5db4a4?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=c5c549d3-e8c1-41c6-a16c-976bfb449e37)\n\n\n## Description\nIt was found that a previously known HTTP request smuggling issue (`CVE-2017-2666`) in Undertow was not fully fixed. It is still possible to abuse this vulnerability by including invalid characters in HTTP/1.x and [HTTP/2](https://en.wikipedia.org/wiki/HTTP/2) requests. This flaw can result in cache-poisoning, cross-site scripting (XSS) attacks and information disclosure.\n\n## Vulnerabilities(BDSA,CVE)\n:orange_circle: [CVE-2020-10687](https://openhub.net/vulnerabilities/bdsa/CVE-2020-10687) - HTTP Request Smuggling\n\n\n\n## Solution\nFixed in:\n* **[2.0.34](https://github.com/undertow-io/undertow/releases/tag/2.0.34.Final)** by [this](https://github.com/undertow-io/undertow/commit/ce19d7d72) commit.\n* **[2.1.6](https://github.com/undertow-io/undertow/releases/tag/2.1.6.Final)** by [this](https://github.com/undertow-io/undertow/commit/2792ae69e) commit.\n* **[2.2.0](https://github.com/undertow-io/undertow/releases/tag/2.2.0.Final)** by [this](https://github.com/undertow-io/undertow/commit/b73042757) commit.\n\nThe latest stable releases are available [here](https://github.com/undertow-io/undertow/releases).\n\n\n\n## Dependency tree\n- org.owasp.webgoat:webgoat-container:v8.1.0:-maven\n    - org.springframework.boot:spring-boot-starter-undertow:2.2.2.RELEASE\n        - io.undertow:undertow-core:2.0.28.Final\n\n\n## References\n* Common Weakness Enumeration: [CWE-444](https://cwe.mitre.org/data/definitions/444.html)\n\n","text":"It was found that a previously known HTTP request smuggling issue (`CVE-2017-2666`) in Undertow was not fully fixed. It is still possible to abuse this vulnerability by including invalid characters in HTTP/1.x and [HTTP/2](https://en.wikipedia.org/wiki/HTTP/2) requests. This flaw can result in cache-poisoning, cross-site scripting (XSS) attacks and information disclosure."},"properties":{"security-severity":"8.9","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-444"]},"defaultConfiguration":{"level":"error"}},{"id":"CVE-2022-1319 undertow-core 2.0.28.Final: spring-boot-starter-undertow 2.2.2.RELEASE: io.undertow","shortDescription":{"text":"Transitive Dependency: undertow-core 2.0.28.Final from spring-boot-starter-undertow 2.2.2.RELEASE (CVE-2022-1319)"},"fullDescription":{"text":"A flaw was found in Undertow. For an AJP 400 response, EAP 7 is improperly sending two response packets, and those packets have the reuse flag set even though JBoss EAP closes the connection. A failure occurs when the connection is reused after a 400 by CPING since it reads in the second SEND_HEADERS response packet instead of a CPONG."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| undertow-core 2.0.28.Final  | 2.3.10.SP1-redhat-00001  | 2.3.10.SP1-redhat-00001 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/d6725da7-d4ea-4ca5-819b-84375b5db4a4?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=c5c549d3-e8c1-41c6-a16c-976bfb449e37)\n\n\n## Description\nA flaw was found in Undertow. For an AJP 400 response, EAP 7 is improperly sending two response packets, and those packets have the reuse flag set even though JBoss EAP closes the connection. A failure occurs when the connection is reused after a 400 by CPING since it reads in the second SEND_HEADERS response packet instead of a CPONG.\n\n## Vulnerabilities(BDSA,CVE)\n:orange_circle: [CVE-2022-1319](https://openhub.net/vulnerabilities/bdsa/CVE-2022-1319) - Unchecked Return Value\n\n\n\n\n\n\n\n## Dependency tree\n- org.owasp.webgoat:webgoat-container:v8.1.0:-maven\n    - org.springframework.boot:spring-boot-starter-undertow:2.2.2.RELEASE\n        - io.undertow:undertow-core:2.0.28.Final\n\n\n## References\n* Common Weakness Enumeration: [CWE-252](https://cwe.mitre.org/data/definitions/252.html)\n\n","text":"A flaw was found in Undertow. For an AJP 400 response, EAP 7 is improperly sending two response packets, and those packets have the reuse flag set even though JBoss EAP closes the connection. A failure occurs when the connection is reused after a 400 by CPING since it reads in the second SEND_HEADERS response packet instead of a CPONG."},"properties":{"security-severity":"8.9","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-252"]},"defaultConfiguration":{"level":"error"}},{"id":"CVE-2021-20220 undertow-core 2.0.28.Final: spring-boot-starter-undertow 2.2.2.RELEASE: io.undertow","shortDescription":{"text":"Transitive Dependency: undertow-core 2.0.28.Final from spring-boot-starter-undertow 2.2.2.RELEASE (CVE-2021-20220)"},"fullDescription":{"text":"Undertow is vulnerable to HTTP request smuggling due to a possible regression in the fix for `CVE-2020-10687` (`BDSA-2020-2102`). This flaw can result in cache-poisoning, cross-site scripting (XSS) attacks and information disclosure."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| undertow-core 2.0.28.Final  | 2.3.10.SP1-redhat-00001  | 2.3.10.SP1-redhat-00001 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/d6725da7-d4ea-4ca5-819b-84375b5db4a4?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=c5c549d3-e8c1-41c6-a16c-976bfb449e37)\n\n\n## Description\nUndertow is vulnerable to HTTP request smuggling due to a possible regression in the fix for `CVE-2020-10687` (`BDSA-2020-2102`). This flaw can result in cache-poisoning, cross-site scripting (XSS) attacks and information disclosure.\n\n## Vulnerabilities(BDSA,CVE)\n:orange_circle: [CVE-2021-20220](https://openhub.net/vulnerabilities/bdsa/CVE-2021-20220) - HTTP Request Smuggling\n\n\n\n## Solution\nFixed in:\n* **[2.0.34](https://github.com/undertow-io/undertow/releases/tag/2.0.34.Final)** by [this](https://github.com/undertow-io/undertow/commit/ce19d7d72) commit.\n* **[2.1.6](https://github.com/undertow-io/undertow/releases/tag/2.1.6.Final)** by [this](https://github.com/undertow-io/undertow/commit/2792ae69e) commit.\n* **[2.2.0](https://github.com/undertow-io/undertow/releases/tag/2.2.0.Final)** by [this](https://github.com/undertow-io/undertow/commit/b73042757) commit.\n\nThe latest stable releases are available [here](https://github.com/undertow-io/undertow/releases).\n\n\n\n## Dependency tree\n- org.owasp.webgoat:webgoat-container:v8.1.0:-maven\n    - org.springframework.boot:spring-boot-starter-undertow:2.2.2.RELEASE\n        - io.undertow:undertow-core:2.0.28.Final\n\n\n## References\n* Common Weakness Enumeration: [CWE-444](https://cwe.mitre.org/data/definitions/444.html)\n\n","text":"Undertow is vulnerable to HTTP request smuggling due to a possible regression in the fix for `CVE-2020-10687` (`BDSA-2020-2102`). This flaw can result in cache-poisoning, cross-site scripting (XSS) attacks and information disclosure."},"properties":{"security-severity":"8.9","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-444"]},"defaultConfiguration":{"level":"error"}},{"id":"CVE-2021-3859 undertow-core 2.0.28.Final: spring-boot-starter-undertow 2.2.2.RELEASE: io.undertow","shortDescription":{"text":"Transitive Dependency: undertow-core 2.0.28.Final from spring-boot-starter-undertow 2.2.2.RELEASE (CVE-2021-3859)"},"fullDescription":{"text":"Undertow contains a flaw with how certain calls are made over HTTP2. Invocation of an EJB can fail on the client side which will result in the invocation-timeout being hit. Successfully exploiting this can allow an attacker to trigger a denial-of-service (DoS)."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| undertow-core 2.0.28.Final  | 2.3.10.SP1-redhat-00001  | 2.3.10.SP1-redhat-00001 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/d6725da7-d4ea-4ca5-819b-84375b5db4a4?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=c5c549d3-e8c1-41c6-a16c-976bfb449e37)\n\n\n## Description\nUndertow contains a flaw with how certain calls are made over HTTP2. Invocation of an EJB can fail on the client side which will result in the invocation-timeout being hit. Successfully exploiting this can allow an attacker to trigger a denial-of-service (DoS).\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [CVE-2021-3859](https://openhub.net/vulnerabilities/bdsa/CVE-2021-3859) - Uncontrolled Resource Consumption\n\n\n\n## Solution\nFixed in [**2.2.15**](https://github.com/undertow-io/undertow/releases/tag/2.2.15.Final) by [this](https://github.com/undertow-io/undertow/commit/e43f0ada3f4da6e8579e0020cec3cb1a81e487c2) commit.\n\nThe latest stable releases are available [here](https://undertow.io/downloads.html).\n\n\n\n## Dependency tree\n- org.owasp.webgoat:webgoat-container:v8.1.0:-maven\n    - org.springframework.boot:spring-boot-starter-undertow:2.2.2.RELEASE\n        - io.undertow:undertow-core:2.0.28.Final\n\n\n## References\n* Common Weakness Enumeration: [CWE-400](https://cwe.mitre.org/data/definitions/400.html)\n\n","text":"Undertow contains a flaw with how certain calls are made over HTTP2. Invocation of an EJB can fail on the client side which will result in the invocation-timeout being hit. Successfully exploiting this can allow an attacker to trigger a denial-of-service (DoS)."},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-400"]},"defaultConfiguration":{"level":"warning"}},{"id":"CVE-2020-27782 undertow-core 2.0.28.Final: spring-boot-starter-undertow 2.2.2.RELEASE: io.undertow","shortDescription":{"text":"Transitive Dependency: undertow-core 2.0.28.Final from spring-boot-starter-undertow 2.2.2.RELEASE (CVE-2020-27782)"},"fullDescription":{"text":"Undertow is vulnerable to denial-of-service (DoS) due to the improper handling of certain characters. An attacker could exploit this vulnerability via a maliciously crafted request in order to trigger a denial-of-service (DoS) condition."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| undertow-core 2.0.28.Final  | 2.3.10.SP1-redhat-00001  | 2.3.10.SP1-redhat-00001 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/d6725da7-d4ea-4ca5-819b-84375b5db4a4?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=c5c549d3-e8c1-41c6-a16c-976bfb449e37)\n\n\n## Description\nUndertow is vulnerable to denial-of-service (DoS) due to the improper handling of certain characters. An attacker could exploit this vulnerability via a maliciously crafted request in order to trigger a denial-of-service (DoS) condition.\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [CVE-2020-27782](https://openhub.net/vulnerabilities/bdsa/CVE-2020-27782) - Uncontrolled Resource Consumption\n\n\n\n\n\n## Workaround\nThe issue may be mitigated by using **HTTP/1.1** instead of AJP to proxy to the back-end.\n\n## Dependency tree\n- org.owasp.webgoat:webgoat-container:v8.1.0:-maven\n    - org.springframework.boot:spring-boot-starter-undertow:2.2.2.RELEASE\n        - io.undertow:undertow-core:2.0.28.Final\n\n\n## References\n* Common Weakness Enumeration: [CWE-400](https://cwe.mitre.org/data/definitions/400.html)\n\n","text":"Undertow is vulnerable to denial-of-service (DoS) due to the improper handling of certain characters. An attacker could exploit this vulnerability via a maliciously crafted request in order to trigger a denial-of-service (DoS) condition."},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-400"]},"defaultConfiguration":{"level":"warning"}},{"id":"CVE-2020-10705 undertow-core 2.0.28.Final: spring-boot-starter-undertow 2.2.2.RELEASE: io.undertow","shortDescription":{"text":"Transitive Dependency: undertow-core 2.0.28.Final from spring-boot-starter-undertow 2.2.2.RELEASE (CVE-2020-10705)"},"fullDescription":{"text":"Undertow is vulnerable to denial-of-service (DoS) due to the improper management of system memory resources. A remote attacker could cause a vulnerable server to crash by sending maliciously crafted web requests to that server."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| undertow-core 2.0.28.Final  | 2.3.10.SP1-redhat-00001  | 2.3.10.SP1-redhat-00001 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/d6725da7-d4ea-4ca5-819b-84375b5db4a4?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=c5c549d3-e8c1-41c6-a16c-976bfb449e37)\n\n\n## Description\nUndertow is vulnerable to denial-of-service (DoS) due to the improper management of system memory resources. A remote attacker could cause a vulnerable server to crash by sending maliciously crafted web requests to that server.\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [CVE-2020-10705](https://openhub.net/vulnerabilities/bdsa/CVE-2020-10705) - Missing Release of Memory after Effective Lifetime\n\n\n\n## Solution\nFixed in [**2.1.1**](https://github.com/undertow-io/undertow/releases/tag/2.1.1.Final) by [this](https://github.com/undertow-io/undertow/commit/c74b8ffa653adc442832c188171c2476b97cdbe6) commit.\n\nThe latest stable releases can be found [here](https://github.com/undertow-io/undertow/releases).\n\n\n\n## Dependency tree\n- org.owasp.webgoat:webgoat-container:v8.1.0:-maven\n    - org.springframework.boot:spring-boot-starter-undertow:2.2.2.RELEASE\n        - io.undertow:undertow-core:2.0.28.Final\n\n\n## References\n* Common Weakness Enumeration: [CWE-401](https://cwe.mitre.org/data/definitions/401.html)\n\n","text":"Undertow is vulnerable to denial-of-service (DoS) due to the improper management of system memory resources. A remote attacker could cause a vulnerable server to crash by sending maliciously crafted web requests to that server."},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-401"]},"defaultConfiguration":{"level":"warning"}},{"id":"CVE-2021-3690 undertow-core 2.0.28.Final: spring-boot-starter-undertow 2.2.2.RELEASE: io.undertow","shortDescription":{"text":"Transitive Dependency: undertow-core 2.0.28.Final from spring-boot-starter-undertow 2.2.2.RELEASE (CVE-2021-3690)"},"fullDescription":{"text":"undertow is vulnerable to denial-of-service (DoS) due to improper processing of incoming WebSocket PONG messages. An attacker could exploit this vulnerability by supplying a system with maliciously crafted requests."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| undertow-core 2.0.28.Final  | 2.3.10.SP1-redhat-00001  | 2.3.10.SP1-redhat-00001 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/d6725da7-d4ea-4ca5-819b-84375b5db4a4?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=c5c549d3-e8c1-41c6-a16c-976bfb449e37)\n\n\n## Description\nundertow is vulnerable to denial-of-service (DoS) due to improper processing of incoming WebSocket PONG messages. An attacker could exploit this vulnerability by supplying a system with maliciously crafted requests.\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [CVE-2021-3690](https://openhub.net/vulnerabilities/bdsa/CVE-2021-3690) - Uncontrolled Resource Consumption\n\n\n\n## Solution\nFixed in [**2.2.10**](https://github.com/undertow-io/undertow/releases/tag/2.2.10.Final) by [this](https://github.com/undertow-io/undertow/commit/845881a7843a8bdb0ef1c66774237bd63061ea9e) commit.\n\nFixed in [**2.0.40**](https://github.com/undertow-io/undertow/releases/tag/2.0.40.Final) by [this](https://github.com/undertow-io/undertow/commit/97482a5d4114001d45f9b07f1d2893749cdcba8b) commit.\n\nThe latest stable releases can be found [here](https://undertow.io/downloads.html).\n\n\n\n## Dependency tree\n- org.owasp.webgoat:webgoat-container:v8.1.0:-maven\n    - org.springframework.boot:spring-boot-starter-undertow:2.2.2.RELEASE\n        - io.undertow:undertow-core:2.0.28.Final\n\n\n## References\n* Common Weakness Enumeration: [CWE-400](https://cwe.mitre.org/data/definitions/400.html)\n\n","text":"undertow is vulnerable to denial-of-service (DoS) due to improper processing of incoming WebSocket PONG messages. An attacker could exploit this vulnerability by supplying a system with maliciously crafted requests."},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-400"]},"defaultConfiguration":{"level":"warning"}},{"id":"CVE-2021-3597 undertow-core 2.0.28.Final: spring-boot-starter-undertow 2.2.2.RELEASE: io.undertow","shortDescription":{"text":"Transitive Dependency: undertow-core 2.0.28.Final from spring-boot-starter-undertow 2.2.2.RELEASE (CVE-2021-3597)"},"fullDescription":{"text":"Undertow contains a flaw with its `HTTP2SourceChannel` implementation where in some circumstances it fails to write a final frame. Successfully exploiting this could allow an attacker to cause a denial-of-service (DoS) condition."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| undertow-core 2.0.28.Final  | 2.3.10.SP1-redhat-00001  | 2.3.10.SP1-redhat-00001 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/d6725da7-d4ea-4ca5-819b-84375b5db4a4?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=c5c549d3-e8c1-41c6-a16c-976bfb449e37)\n\n\n## Description\nUndertow contains a flaw with its `HTTP2SourceChannel` implementation where in some circumstances it fails to write a final frame. Successfully exploiting this could allow an attacker to cause a denial-of-service (DoS) condition.\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [CVE-2021-3597](https://openhub.net/vulnerabilities/bdsa/CVE-2021-3597) - Uncontrolled Resource Consumption\n\n\n\n## Solution\nFixed in [**2.2.9**](https://github.com/undertow-io/undertow/releases/tag/2.2.9.Final) and [**2.0.39**](https://github.com/undertow-io/undertow/releases/tag/2.0.39.Final) by [this](https://github.com/undertow-io/undertow/commit/b92904715c5f5857827cf4201b9bce5844919259) commit.\n\n\n\n## Dependency tree\n- org.owasp.webgoat:webgoat-container:v8.1.0:-maven\n    - org.springframework.boot:spring-boot-starter-undertow:2.2.2.RELEASE\n        - io.undertow:undertow-core:2.0.28.Final\n\n\n## References\n* Common Weakness Enumeration: [CWE-400](https://cwe.mitre.org/data/definitions/400.html)\n\n","text":"Undertow contains a flaw with its `HTTP2SourceChannel` implementation where in some circumstances it fails to write a final frame. Successfully exploiting this could allow an attacker to cause a denial-of-service (DoS) condition."},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-400"]},"defaultConfiguration":{"level":"warning"}},{"id":"CVE-2021-3629 undertow-core 2.0.28.Final: spring-boot-starter-undertow 2.2.2.RELEASE: io.undertow","shortDescription":{"text":"Transitive Dependency: undertow-core 2.0.28.Final from spring-boot-starter-undertow 2.2.2.RELEASE (CVE-2021-3629)"},"fullDescription":{"text":"Undertow is vulnerable to denial-of-service (DoS) due to the flawed implementation of flow controls during HTTP/2 exchanges. A remote attacker could impact the performance of a vulnerable server, or potentially cause it to crash, by sending maliciously crafted network traffic to that server.\n\n**Note:** It has been found that this vulnerability is an incomplete fix and a new CVE has been assigned **CVE-2022-1259**. This has been addressed by **BDSA-2022-2100**."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| undertow-core 2.0.28.Final  | 2.3.10.SP1-redhat-00001  | 2.3.10.SP1-redhat-00001 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/d6725da7-d4ea-4ca5-819b-84375b5db4a4?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=c5c549d3-e8c1-41c6-a16c-976bfb449e37)\n\n\n## Description\nUndertow is vulnerable to denial-of-service (DoS) due to the flawed implementation of flow controls during HTTP/2 exchanges. A remote attacker could impact the performance of a vulnerable server, or potentially cause it to crash, by sending maliciously crafted network traffic to that server.\n\n**Note:** It has been found that this vulnerability is an incomplete fix and a new CVE has been assigned **CVE-2022-1259**. This has been addressed by **BDSA-2022-2100**.\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [CVE-2021-3629](https://openhub.net/vulnerabilities/bdsa/CVE-2021-3629) - Uncontrolled Resource Consumption\n\n\n\n## Solution\nFixed in versions [**2.2.18**](https://github.com/undertow-io/undertow/releases/tag/2.2.18.Final) by [this](https://github.com/undertow-io/undertow/commit/4d5f6e1d5eabe2fdc8f37814d710ea5c53199379) commit and [**2.3.0-alpha1**](https://github.com/undertow-io/undertow/releases/tag/2.3.0.Alpha1) by [this](https://github.com/undertow-io/undertow/commit/2aa5d35d096004ae2b22c6270dd1268bdceda8fc) commit.\n\nThe latest stable releases can be found [here](https://undertow.io/downloads.html).\n\n\n\n## Dependency tree\n- org.owasp.webgoat:webgoat-container:v8.1.0:-maven\n    - org.springframework.boot:spring-boot-starter-undertow:2.2.2.RELEASE\n        - io.undertow:undertow-core:2.0.28.Final\n\n\n## References\n* Common Weakness Enumeration: [CWE-400](https://cwe.mitre.org/data/definitions/400.html)\n\n","text":"Undertow is vulnerable to denial-of-service (DoS) due to the flawed implementation of flow controls during HTTP/2 exchanges. A remote attacker could impact the performance of a vulnerable server, or potentially cause it to crash, by sending maliciously crafted network traffic to that server.\n\n**Note:** It has been found that this vulnerability is an incomplete fix and a new CVE has been assigned **CVE-2022-1259**. This has been addressed by **BDSA-2022-2100**."},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-400"]},"defaultConfiguration":{"level":"warning"}},{"id":"CVE-2019-14888 undertow-core 2.0.28.Final: spring-boot-starter-undertow 2.2.2.RELEASE: io.undertow","shortDescription":{"text":"Transitive Dependency: undertow-core 2.0.28.Final from spring-boot-starter-undertow 2.2.2.RELEASE (CVE-2019-14888)"},"fullDescription":{"text":"Undertow is vulnerable to denial-of-service (DoS) due to a buffer overflow in the HTTPS functionality. A remote attacker could crash a victim's instance of the application by connecting to a HTTP2 port."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| undertow-core 2.0.28.Final  | 2.3.10.SP1-redhat-00001  | 2.3.10.SP1-redhat-00001 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/d6725da7-d4ea-4ca5-819b-84375b5db4a4?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=c5c549d3-e8c1-41c6-a16c-976bfb449e37)\n\n\n## Description\nUndertow is vulnerable to denial-of-service (DoS) due to a buffer overflow in the HTTPS functionality. A remote attacker could crash a victim's instance of the application by connecting to a HTTP2 port.\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [CVE-2019-14888](https://openhub.net/vulnerabilities/bdsa/CVE-2019-14888) - Uncontrolled Resource Consumption\n\n\n\n## Solution\nFixed in [**2.0.30**](https://github.com/undertow-io/undertow/releases/tag/2.0.30.Final) by [this](https://github.com/undertow-io/undertow/commit/869efc1339b63a4659df82b68ed8243c4cf90d10) commit and [this](https://github.com/undertow-io/undertow/commit/d76a02cd16f9d8ee0c948026758a02a7c7b6d218) commit.\n\nThe latest stable releases are available [here](https://github.com/undertow-io/undertow/releases/).\n\n## Workaround\nEnable HTTP2 (`enable-http2=\"true\"`) in Undertow's HTTPS settings.\n\n## Dependency tree\n- org.owasp.webgoat:webgoat-container:v8.1.0:-maven\n    - org.springframework.boot:spring-boot-starter-undertow:2.2.2.RELEASE\n        - io.undertow:undertow-core:2.0.28.Final\n\n\n## References\n* Common Weakness Enumeration: [CWE-400](https://cwe.mitre.org/data/definitions/400.html)\n\n","text":"Undertow is vulnerable to denial-of-service (DoS) due to a buffer overflow in the HTTPS functionality. A remote attacker could crash a victim's instance of the application by connecting to a HTTP2 port."},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-400"]},"defaultConfiguration":{"level":"warning"}},{"id":"CVE-2022-2053 undertow-core 2.0.28.Final: spring-boot-starter-undertow 2.2.2.RELEASE: io.undertow","shortDescription":{"text":"Transitive Dependency: undertow-core 2.0.28.Final from spring-boot-starter-undertow 2.2.2.RELEASE (CVE-2022-2053)"},"fullDescription":{"text":"Undertow contains a flaw in its handling of AJP requests that exceed the maximum header size. This results in mod_proxy_cluster marking backend JBoss EAP instances as an error workers. A remote unauthenticated attacker could leverage this to cause a denial-of-service (DoS)."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| undertow-core 2.0.28.Final  | 2.3.10.SP1-redhat-00001  | 2.3.10.SP1-redhat-00001 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/d6725da7-d4ea-4ca5-819b-84375b5db4a4?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=c5c549d3-e8c1-41c6-a16c-976bfb449e37)\n\n\n## Description\nUndertow contains a flaw in its handling of AJP requests that exceed the maximum header size. This results in mod_proxy_cluster marking backend JBoss EAP instances as an error workers. A remote unauthenticated attacker could leverage this to cause a denial-of-service (DoS).\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [CVE-2022-2053](https://openhub.net/vulnerabilities/bdsa/CVE-2022-2053) - Uncaught Exception\n\n\n\n## Solution\nFixed in versions:\n* [**2.3.0.Alpha2**](https://github.com/undertow-io/undertow/releases/tag/2.3.0.Alpha2) by [this](https://github.com/undertow-io/undertow/commit/10ad8964162162ce6d441e951cb9efcdaa585916) commit.\n* [**2.2.19**](https://github.com/undertow-io/undertow/releases/tag/2.2.19.Final) by [this](https://github.com/undertow-io/undertow/commit/7d3a045da0fa4e4f3f6c4af145b87c7c15581748) commit.\n\nThe latest stable releases can be found [here](https://github.com/undertow-io/undertow/tags).\n\n\n\n## Dependency tree\n- org.owasp.webgoat:webgoat-container:v8.1.0:-maven\n    - org.springframework.boot:spring-boot-starter-undertow:2.2.2.RELEASE\n        - io.undertow:undertow-core:2.0.28.Final\n\n\n## References\n* Common Weakness Enumeration: [CWE-248](https://cwe.mitre.org/data/definitions/248.html)\n\n","text":"Undertow contains a flaw in its handling of AJP requests that exceed the maximum header size. This results in mod_proxy_cluster marking backend JBoss EAP instances as an error workers. A remote unauthenticated attacker could leverage this to cause a denial-of-service (DoS)."},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-248"]},"defaultConfiguration":{"level":"warning"}},{"id":"CVE-2022-1259 undertow-core 2.0.28.Final: spring-boot-starter-undertow 2.2.2.RELEASE: io.undertow","shortDescription":{"text":"Transitive Dependency: undertow-core 2.0.28.Final from spring-boot-starter-undertow 2.2.2.RELEASE (CVE-2022-1259)"},"fullDescription":{"text":"Undertow is vulnerable to denial-of-service (DoS) due to the flawed implementation of flow controls during HTTP/2 exchanges. A remote attacker could impact the performance of a vulnerable server, or potentially cause it to crash, by sending maliciously crafted network traffic to that server.\n\n**Note:** This vulnerability is a result of an incomplete fix for **CVE-2021-3629** (**BDSA-2021-3463**)"},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| undertow-core 2.0.28.Final  | 2.3.10.SP1-redhat-00001  | 2.3.10.SP1-redhat-00001 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/d6725da7-d4ea-4ca5-819b-84375b5db4a4?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=c5c549d3-e8c1-41c6-a16c-976bfb449e37)\n\n\n## Description\nUndertow is vulnerable to denial-of-service (DoS) due to the flawed implementation of flow controls during HTTP/2 exchanges. A remote attacker could impact the performance of a vulnerable server, or potentially cause it to crash, by sending maliciously crafted network traffic to that server.\n\n**Note:** This vulnerability is a result of an incomplete fix for **CVE-2021-3629** (**BDSA-2021-3463**)\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [CVE-2022-1259](https://openhub.net/vulnerabilities/bdsa/CVE-2022-1259) - Uncontrolled Resource Consumption\n\n\n\n## Solution\nFixed in versions [**2.2.18**](https://github.com/undertow-io/undertow/releases/tag/2.2.18.Final) by [this](https://github.com/undertow-io/undertow/commit/4d5f6e1d5eabe2fdc8f37814d710ea5c53199379) commit and [**2.3.0-alpha1**](https://github.com/undertow-io/undertow/releases/tag/2.3.0.Alpha1) by [this](https://github.com/undertow-io/undertow/commit/2aa5d35d096004ae2b22c6270dd1268bdceda8fc) commit.\n\nThe latest stable releases can be found [here](https://undertow.io/downloads.html).\n\n\n\n## Dependency tree\n- org.owasp.webgoat:webgoat-container:v8.1.0:-maven\n    - org.springframework.boot:spring-boot-starter-undertow:2.2.2.RELEASE\n        - io.undertow:undertow-core:2.0.28.Final\n\n\n## References\n* Common Weakness Enumeration: [CWE-400](https://cwe.mitre.org/data/definitions/400.html)\n\n","text":"Undertow is vulnerable to denial-of-service (DoS) due to the flawed implementation of flow controls during HTTP/2 exchanges. A remote attacker could impact the performance of a vulnerable server, or potentially cause it to crash, by sending maliciously crafted network traffic to that server.\n\n**Note:** This vulnerability is a result of an incomplete fix for **CVE-2021-3629** (**BDSA-2021-3463**)"},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-400"]},"defaultConfiguration":{"level":"warning"}},{"id":"CVE-2020-10719 undertow-core 2.0.28.Final: spring-boot-starter-undertow 2.2.2.RELEASE: io.undertow","shortDescription":{"text":"Transitive Dependency: undertow-core 2.0.28.Final from spring-boot-starter-undertow 2.2.2.RELEASE (CVE-2020-10719)"},"fullDescription":{"text":"A flaw was found in Undertow in versions before 2.1.1.Final, regarding the processing of invalid HTTP requests with large chunk sizes. This flaw allows an attacker to take advantage of HTTP request smuggling."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| undertow-core 2.0.28.Final  | 2.3.10.SP1-redhat-00001  | 2.3.10.SP1-redhat-00001 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/d6725da7-d4ea-4ca5-819b-84375b5db4a4?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=c5c549d3-e8c1-41c6-a16c-976bfb449e37)\n\n\n## Description\nA flaw was found in Undertow in versions before 2.1.1.Final, regarding the processing of invalid HTTP requests with large chunk sizes. This flaw allows an attacker to take advantage of HTTP request smuggling.\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [CVE-2020-10719](https://openhub.net/vulnerabilities/bdsa/CVE-2020-10719) - HTTP Request Smuggling\n\n\n\n\n\n\n\n## Dependency tree\n- org.owasp.webgoat:webgoat-container:v8.1.0:-maven\n    - org.springframework.boot:spring-boot-starter-undertow:2.2.2.RELEASE\n        - io.undertow:undertow-core:2.0.28.Final\n\n\n## References\n* Common Weakness Enumeration: [CWE-444](https://cwe.mitre.org/data/definitions/444.html)\n\n","text":"A flaw was found in Undertow in versions before 2.1.1.Final, regarding the processing of invalid HTTP requests with large chunk sizes. This flaw allows an attacker to take advantage of HTTP request smuggling."},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-444"]},"defaultConfiguration":{"level":"warning"}},{"id":"BDSA-2022-4041 undertow-core 2.0.28.Final: spring-boot-starter-undertow 2.2.2.RELEASE: io.undertow","shortDescription":{"text":"Transitive Dependency: undertow-core 2.0.28.Final from spring-boot-starter-undertow 2.2.2.RELEASE (BDSA-2022-4041)"},"fullDescription":{"text":"Undertow contains a server identity spoofing vulnerability. This issue exists due to the Undertow client not checking the server identity presented by the server certificate in HTTPS connections, leading it to accept certificates with arbitrary subjects."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| undertow-core 2.0.28.Final  | 2.3.10.SP1-redhat-00001  | 2.3.10.SP1-redhat-00001 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/d6725da7-d4ea-4ca5-819b-84375b5db4a4?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=c5c549d3-e8c1-41c6-a16c-976bfb449e37)\n\n\n## Description\nUndertow contains a server identity spoofing vulnerability. This issue exists due to the Undertow client not checking the server identity presented by the server certificate in HTTPS connections, leading it to accept certificates with arbitrary subjects.\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [BDSA-2022-4041](https://openhub.net/vulnerabilities/bdsa/BDSA-2022-4041) - Improper Certificate Validation\n\n\n\n## Solution\nThis issue was fixed in version [**2.3.5**](https://github.com/undertow-io/undertow/releases/tag/2.3.5.Final) by [this](https://github.com/undertow-io/undertow/commit/e5071e52b72529a14d3ec436ae7102cea5d918c4) commit and [this](https://github.com/undertow-io/undertow/commit/cc2f99a2fea3d5cb57ba2e578588bdc5285e6429) commit.\n\nThe fix was cherry-picked and backported into [**2.2.24**](https://github.com/undertow-io/undertow/releases/tag/2.2.24.Final) by [this](https://github.com/undertow-io/undertow/commit/a4d3b167126a803cc4f7fb740dd9a6ecabf59342) commit and [this](https://github.com/undertow-io/undertow/commit/a511cb5cfc8e9b5653f1b796704e36575f471829) commit.\n\nThe latest stable releases can be found [here](https://github.com/undertow-io/undertow/tags).\n\n\n\n## Dependency tree\n- org.owasp.webgoat:webgoat-container:v8.1.0:-maven\n    - org.springframework.boot:spring-boot-starter-undertow:2.2.2.RELEASE\n        - io.undertow:undertow-core:2.0.28.Final\n\n\n## References\n* Common Weakness Enumeration: [CWE-295](https://cwe.mitre.org/data/definitions/295.html)\n\n","text":"Undertow contains a server identity spoofing vulnerability. This issue exists due to the Undertow client not checking the server identity presented by the server certificate in HTTPS connections, leading it to accept certificates with arbitrary subjects."},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-295"]},"defaultConfiguration":{"level":"warning"}},{"id":"CVE-2023-1108 undertow-core 2.0.28.Final: spring-boot-starter-undertow 2.2.2.RELEASE: io.undertow","shortDescription":{"text":"Transitive Dependency: undertow-core 2.0.28.Final from spring-boot-starter-undertow 2.2.2.RELEASE (CVE-2023-1108)"},"fullDescription":{"text":"Undertow is vulnerable to an infinite loop condition. A remote unauthenticated attacker could exploit this vulnerability in order to cause a denial-of-service (DoS)."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| undertow-core 2.0.28.Final  | 2.3.10.SP1-redhat-00001  | 2.3.10.SP1-redhat-00001 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/d6725da7-d4ea-4ca5-819b-84375b5db4a4?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=c5c549d3-e8c1-41c6-a16c-976bfb449e37)\n\n\n## Description\nUndertow is vulnerable to an infinite loop condition. A remote unauthenticated attacker could exploit this vulnerability in order to cause a denial-of-service (DoS).\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [CVE-2023-1108](https://openhub.net/vulnerabilities/bdsa/CVE-2023-1108) - Loop with Unreachable Exit Condition ('Infinite Loop')\n\n\n\n## Solution\nFixed in [**2.3.5**](https://github.com/undertow-io/undertow/releases/tag/2.3.5.Final) by [this](https://github.com/undertow-io/undertow/commit/ccc053b55f5de9872bc1a4999fd6aa85fc5e146d) commit.\n\nThe fix was cherry-picked and backported into [**2.2.24**](https://github.com/undertow-io/undertow/releases/tag/2.2.24.Final) by [this](https://github.com/undertow-io/undertow/commit/1302c8cf4476936802504efe0d36c58dcd954f78) commit.\n\nThe latest stable releases are available [here](https://github.com/undertow-io/undertow/tags).\n\n\n\n## Dependency tree\n- org.owasp.webgoat:webgoat-container:v8.1.0:-maven\n    - org.springframework.boot:spring-boot-starter-undertow:2.2.2.RELEASE\n        - io.undertow:undertow-core:2.0.28.Final\n\n\n## References\n* Common Weakness Enumeration: [CWE-835](https://cwe.mitre.org/data/definitions/835.html)\n\n","text":"Undertow is vulnerable to an infinite loop condition. A remote unauthenticated attacker could exploit this vulnerability in order to cause a denial-of-service (DoS)."},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-835"]},"defaultConfiguration":{"level":"warning"}},{"id":"CVE-2023-3223 undertow-core 2.0.28.Final: spring-boot-starter-undertow 2.2.2.RELEASE: io.undertow","shortDescription":{"text":"Transitive Dependency: undertow-core 2.0.28.Final from spring-boot-starter-undertow 2.2.2.RELEASE (CVE-2023-3223)"},"fullDescription":{"text":"Undertow contains a denial-of-service (DoS) vulnerability. An unauthenticated attacker could exploit this by manipulating Servlet annotations to exhaust system resources and cause a system crash."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| undertow-core 2.0.28.Final  | 2.3.10.SP1-redhat-00001  | 2.3.10.SP1-redhat-00001 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/d6725da7-d4ea-4ca5-819b-84375b5db4a4?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=c5c549d3-e8c1-41c6-a16c-976bfb449e37)\n\n\n## Description\nUndertow contains a denial-of-service (DoS) vulnerability. An unauthenticated attacker could exploit this by manipulating Servlet annotations to exhaust system resources and cause a system crash.\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [CVE-2023-3223](https://openhub.net/vulnerabilities/bdsa/CVE-2023-3223) - Memory Allocation with Excessive Size Value\n\n\n\n## Solution\nFixed in versions:\n* [**2.3.9**](https://github.com/undertow-io/undertow/releases/tag/2.3.9.Final) by [this](https://github.com/undertow-io/undertow/commit/22ab63b40d5e523538db2096160ee084ee04b9c0) commit and [this](https://github.com/undertow-io/undertow/commit/52cf6a779c4cf17dfc4cf159aaca986b567b2025) commit.\n* [**2.2.27**](https://github.com/undertow-io/undertow/releases/tag/2.2.27.Final) by [this](https://github.com/undertow-io/undertow/commit/86209e5dd84d06708957ead659b7ed8daa7fb912) commit and [this](https://github.com/undertow-io/undertow/commit/7094d86be5f81012ae09e06c897db0e8714d5243) commit.\n\nThe latest stable releases are available [here](https://mvnrepository.com/artifact/io.undertow/undertow-core).\n\n\n\n## Dependency tree\n- org.owasp.webgoat:webgoat-container:v8.1.0:-maven\n    - org.springframework.boot:spring-boot-starter-undertow:2.2.2.RELEASE\n        - io.undertow:undertow-core:2.0.28.Final\n\n\n## References\n* Common Weakness Enumeration: [CWE-789](https://cwe.mitre.org/data/definitions/789.html)\n\n","text":"Undertow contains a denial-of-service (DoS) vulnerability. An unauthenticated attacker could exploit this by manipulating Servlet annotations to exhaust system resources and cause a system crash."},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-789"]},"defaultConfiguration":{"level":"warning"}},{"id":"BDSA-2024-0321 undertow-core 2.0.28.Final: spring-boot-starter-undertow 2.2.2.RELEASE: io.undertow","shortDescription":{"text":"Transitive Dependency: undertow-core 2.0.28.Final from spring-boot-starter-undertow 2.2.2.RELEASE (BDSA-2024-0321)"},"fullDescription":{"text":"Undertow is vulnerable to the smuggling or spoofing of cookies as a result of insufficient validation within the Undertow cookie parsing functionality.\n\nAn attacker could submit crafted requests to Undertow that include cookies with improper quote formatting in order to bypass existing cookie validation checks."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| undertow-core 2.0.28.Final  | 2.3.10.SP1-redhat-00001  | 2.3.10.SP1-redhat-00001 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/d6725da7-d4ea-4ca5-819b-84375b5db4a4?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=c5c549d3-e8c1-41c6-a16c-976bfb449e37)\n\n\n## Description\nUndertow is vulnerable to the smuggling or spoofing of cookies as a result of insufficient validation within the Undertow cookie parsing functionality.\n\nAn attacker could submit crafted requests to Undertow that include cookies with improper quote formatting in order to bypass existing cookie validation checks.\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [BDSA-2024-0321](https://openhub.net/vulnerabilities/bdsa/BDSA-2024-0321) - HTTP Request Smuggling\n\n\n\n## Solution\nFixed in the **master** branch by [this](https://github.com/undertow-io/undertow/commit/1f93a979d2ac264798e5779b5b7172dfafe0066f) commit which is not yet available in any release.\n\n\n\n## Dependency tree\n- org.owasp.webgoat:webgoat-container:v8.1.0:-maven\n    - org.springframework.boot:spring-boot-starter-undertow:2.2.2.RELEASE\n        - io.undertow:undertow-core:2.0.28.Final\n\n\n## References\n* Common Weakness Enumeration: [CWE-444](https://cwe.mitre.org/data/definitions/444.html)\n\n","text":"Undertow is vulnerable to the smuggling or spoofing of cookies as a result of insufficient validation within the Undertow cookie parsing functionality.\n\nAn attacker could submit crafted requests to Undertow that include cookies with improper quote formatting in order to bypass existing cookie validation checks."},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-444"]},"defaultConfiguration":{"level":"warning"}},{"id":"BDSA-2024-0322 undertow-core 2.0.28.Final: spring-boot-starter-undertow 2.2.2.RELEASE: io.undertow","shortDescription":{"text":"Transitive Dependency: undertow-core 2.0.28.Final from spring-boot-starter-undertow 2.2.2.RELEASE (BDSA-2024-0322)"},"fullDescription":{"text":"Undertow contains a path traversal vulnerability. An attacker could exploit this issue by making a request with a crafted, appended sequence to a JBoss EAP application. This may potentially result in unauthorized access to restricted files/directories and lead to the loss of sensitive information."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| undertow-core 2.0.28.Final  | 2.3.10.SP1-redhat-00001  | 2.3.10.SP1-redhat-00001 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/d6725da7-d4ea-4ca5-819b-84375b5db4a4?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=c5c549d3-e8c1-41c6-a16c-976bfb449e37)\n\n\n## Description\nUndertow contains a path traversal vulnerability. An attacker could exploit this issue by making a request with a crafted, appended sequence to a JBoss EAP application. This may potentially result in unauthorized access to restricted files/directories and lead to the loss of sensitive information.\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [BDSA-2024-0322](https://openhub.net/vulnerabilities/bdsa/BDSA-2024-0322) - Directory Traversal\n\n\n\n\n\n\n\n## Dependency tree\n- org.owasp.webgoat:webgoat-container:v8.1.0:-maven\n    - org.springframework.boot:spring-boot-starter-undertow:2.2.2.RELEASE\n        - io.undertow:undertow-core:2.0.28.Final\n\n\n## References\n* Common Weakness Enumeration: [CWE-22](https://cwe.mitre.org/data/definitions/22.html)\n\n","text":"Undertow contains a path traversal vulnerability. An attacker could exploit this issue by making a request with a crafted, appended sequence to a JBoss EAP application. This may potentially result in unauthorized access to restricted files/directories and lead to the loss of sensitive information."},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-22"]},"defaultConfiguration":{"level":"warning"}},{"id":"CVE-2020-1757 undertow-core 2.0.28.Final: spring-boot-starter-undertow 2.2.2.RELEASE: io.undertow","shortDescription":{"text":"Transitive Dependency: undertow-core 2.0.28.Final from spring-boot-starter-undertow 2.2.2.RELEASE (CVE-2020-1757)"},"fullDescription":{"text":"Undertow is vulnerable to improperly normalizing servlet paths. A remote attacker may be able to leverage this to bypass specific URL-based security checks."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| undertow-core 2.0.28.Final  | 2.3.10.SP1-redhat-00001  | 2.3.10.SP1-redhat-00001 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/d6725da7-d4ea-4ca5-819b-84375b5db4a4?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=c5c549d3-e8c1-41c6-a16c-976bfb449e37)\n\n\n## Description\nUndertow is vulnerable to improperly normalizing servlet paths. A remote attacker may be able to leverage this to bypass specific URL-based security checks.\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [CVE-2020-1757](https://openhub.net/vulnerabilities/bdsa/CVE-2020-1757) - Weak Input Validation\n\n\n\n## Solution\nFixed in version [**2.0.30**](https://github.com/undertow-io/undertow/releases/tag/2.0.30.Final).\n\n## Workaround\nThe issue can be mitigated by configuring `UrlPathHelper` to ignore the `servletPath` via setting \"alwaysUseFullPath\".\n\n## Dependency tree\n- org.owasp.webgoat:webgoat-container:v8.1.0:-maven\n    - org.springframework.boot:spring-boot-starter-undertow:2.2.2.RELEASE\n        - io.undertow:undertow-core:2.0.28.Final\n\n\n## References\n* Common Weakness Enumeration: [CWE-20](https://cwe.mitre.org/data/definitions/20.html)\n* Common Weakness Enumeration: [CWE-200](https://cwe.mitre.org/data/definitions/200.html)\n\n","text":"Undertow is vulnerable to improperly normalizing servlet paths. A remote attacker may be able to leverage this to bypass specific URL-based security checks."},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-20","external/cwe/cwe-200"]},"defaultConfiguration":{"level":"warning"}},{"id":"CVE-2022-2764 undertow-core 2.0.28.Final: spring-boot-starter-undertow 2.2.2.RELEASE: io.undertow","shortDescription":{"text":"Transitive Dependency: undertow-core 2.0.28.Final from spring-boot-starter-undertow 2.2.2.RELEASE (CVE-2022-2764)"},"fullDescription":{"text":"Undertow contains a denial-of-service (DoS) vulnerability. An authenticated attacker can exploit this via EJB invocations to exhaust system resources and cause a system crash."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| undertow-core 2.0.28.Final  | 2.3.10.SP1-redhat-00001  | 2.3.10.SP1-redhat-00001 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/d6725da7-d4ea-4ca5-819b-84375b5db4a4?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=c5c549d3-e8c1-41c6-a16c-976bfb449e37)\n\n\n## Description\nUndertow contains a denial-of-service (DoS) vulnerability. An authenticated attacker can exploit this via EJB invocations to exhaust system resources and cause a system crash.\n\n## Vulnerabilities(BDSA,CVE)\n:large_blue_circle: [CVE-2022-2764](https://openhub.net/vulnerabilities/bdsa/CVE-2022-2764) - Uncontrolled Resource Consumption\n\n\n\n## Solution\nFixed in [**2.3.0-final**](https://github.com/undertow-io/undertow/releases/tag/2.3.0.Final) by [this](https://github.com/undertow-io/undertow/commit/d9dcf4f996deb83e5453d60a74ff11b176b98757) commit.\nFixed in [**2.2.21.Final**](https://github.com/undertow-io/undertow/releases/tag/2.2.21.Final) by [this](https://github.com/undertow-io/undertow/commit/84d897850247564e1a25d2df7ce321bd5f49c340) commit.\n\nThe latest stable releases are available [here](https://mvnrepository.com/artifact/io.undertow/undertow-core).\n\n\n\n## Dependency tree\n- org.owasp.webgoat:webgoat-container:v8.1.0:-maven\n    - org.springframework.boot:spring-boot-starter-undertow:2.2.2.RELEASE\n        - io.undertow:undertow-core:2.0.28.Final\n\n\n## References\n* Common Weakness Enumeration: [CWE-400](https://cwe.mitre.org/data/definitions/400.html)\n\n","text":"Undertow contains a denial-of-service (DoS) vulnerability. An authenticated attacker can exploit this via EJB invocations to exhaust system resources and cause a system crash."},"properties":{"security-severity":"3.8","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-400"]},"defaultConfiguration":{"level":"note"}},{"id":"CVE-2023-2976 guava 20.0: wiremock 2.8.0: com.google.guava","shortDescription":{"text":"Transitive Dependency: guava 20.0 from wiremock 2.8.0 (CVE-2023-2976)"},"fullDescription":{"text":"Guava is vulnerable to authorization bypass due to the use of an insecure temporary directory for certain file creation operations. A local attacker that has access to the default Java temporary directory could access files created by the `FileBackedOutputStream` class, even when they are not intended to be able to do so."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| guava 20.0  | 20.0-hal  | 33.0.0-jre |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/fc3a0063-ab0d-41bf-a602-55ca75fc2cf0?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=2f0a32a0-f5c6-45d7-858c-b8a5d922633d)\n\n\n## Description\nGuava is vulnerable to authorization bypass due to the use of an insecure temporary directory for certain file creation operations. A local attacker that has access to the default Java temporary directory could access files created by the `FileBackedOutputStream` class, even when they are not intended to be able to do so.\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [CVE-2023-2976](https://openhub.net/vulnerabilities/bdsa/CVE-2023-2976) - Creation of Temporary File With Insecure Permissions\n\n\n\n## Solution\nFixed in version [**32.0.0**](https://github.com/google/guava/releases/tag/v32.0.0) by [this](https://github.com/google/guava/commit/feb83a1c8fd2e7670b244d5afd23cba5aca43284) commit.\n\nIt should be noted that this patch broke the functionality of `FileBackedOutputStream` and `Files.createTempDir` on Windows. The vendor recommends upgrading to [**32.0.1**](https://github.com/google/guava/releases/tag/v32.0.1), which contains a patch that rectifies this.\n\nThe latest stable releases can be found [here](https://github.com/google/guava/releases).\n\n\n\n## Dependency tree\n- org.owasp.webgoat.lesson:xxe:v8.1.0:-maven\n    - com.github.tomakehurst:wiremock:2.8.0\n        - com.google.guava:guava:20.0\n\n\n## References\n* Common Weakness Enumeration: [CWE-378](https://cwe.mitre.org/data/definitions/378.html)\n\n","text":"Guava is vulnerable to authorization bypass due to the use of an insecure temporary directory for certain file creation operations. A local attacker that has access to the default Java temporary directory could access files created by the `FileBackedOutputStream` class, even when they are not intended to be able to do so."},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-378"]},"defaultConfiguration":{"level":"warning"}},{"id":"CVE-2018-10237 guava 20.0: wiremock 2.8.0: com.google.guava","shortDescription":{"text":"Transitive Dependency: guava 20.0 from wiremock 2.8.0 (CVE-2018-10237)"},"fullDescription":{"text":"Servers that depend on the Guava libraries are vulnerable to denial-of-service (DoS) conditions because certain classes allocate memory without proper checks. Potential attackers can leverage this flaw to crash the software repeatedly rendering it unusable."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| guava 20.0  | 20.0-hal  | 33.0.0-jre |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/fc3a0063-ab0d-41bf-a602-55ca75fc2cf0?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=2f0a32a0-f5c6-45d7-858c-b8a5d922633d)\n\n\n## Description\nServers that depend on the Guava libraries are vulnerable to denial-of-service (DoS) conditions because certain classes allocate memory without proper checks. Potential attackers can leverage this flaw to crash the software repeatedly rendering it unusable.\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [CVE-2018-10237](https://openhub.net/vulnerabilities/bdsa/CVE-2018-10237) - Uncontrolled Resource Consumption\n\n\n\n## Solution\nFixed in:\n* [**23.6.1**](https://github.com/google/guava/releases/tag/v23.6.1)  by [this](https://github.com/google/guava/commit/a81698a0525b6bcdecef3930aeed4db5aa7ab469) commit,\n* [**24.1.1**](https://github.com/google/guava/releases/tag/v24.1.1) by [this](https://github.com/google/guava/commit/7ec8718f1e6e2814dabaa4b9f96b6b33a813101c) commit,\n* [**25.0**](https://github.com/google/guava/releases/tag/v25.0) by [this](https://github.com/google/guava/commit/f89ece5721b2f637fe754937ff1f3c86d80bb196) commit.\n\nThe latest stable releases are available [here](https://github.com/google/guava/releases).\n\n\n\n## Dependency tree\n- org.owasp.webgoat.lesson:xxe:v8.1.0:-maven\n    - com.github.tomakehurst:wiremock:2.8.0\n        - com.google.guava:guava:20.0\n\n\n## References\n* Common Weakness Enumeration: [CWE-400](https://cwe.mitre.org/data/definitions/400.html)\n\n","text":"Servers that depend on the Guava libraries are vulnerable to denial-of-service (DoS) conditions because certain classes allocate memory without proper checks. Potential attackers can leverage this flaw to crash the software repeatedly rendering it unusable."},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-400"]},"defaultConfiguration":{"level":"warning"}},{"id":"CVE-2020-8908 guava 20.0: wiremock 2.8.0: com.google.guava","shortDescription":{"text":"Transitive Dependency: guava 20.0 from wiremock 2.8.0 (CVE-2020-8908)"},"fullDescription":{"text":"Guava creates temporary files and directories with insecure default permissions. A local attacker on the machine could learn the contents of sensitive temporary files.\n\n**Note:** It was determined that the initial patch in version [**30.0**](https://github.com/google/guava/releases/tag/v30.0) by [this](https://github.com/google/guava/commit/fec0dbc4634006a6162cfd4d0d09c962073ddf40) commit was inadequate to fully remove the problem of insecure temporary files from Guava. It only marked a function as deprecated, but the functionality still persisted. A new solution has been released."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| guava 20.0  | 20.0-hal  | 33.0.0-jre |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/fc3a0063-ab0d-41bf-a602-55ca75fc2cf0?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=2f0a32a0-f5c6-45d7-858c-b8a5d922633d)\n\n\n## Description\nGuava creates temporary files and directories with insecure default permissions. A local attacker on the machine could learn the contents of sensitive temporary files.\n\n**Note:** It was determined that the initial patch in version [**30.0**](https://github.com/google/guava/releases/tag/v30.0) by [this](https://github.com/google/guava/commit/fec0dbc4634006a6162cfd4d0d09c962073ddf40) commit was inadequate to fully remove the problem of insecure temporary files from Guava. It only marked a function as deprecated, but the functionality still persisted. A new solution has been released.\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [CVE-2020-8908](https://openhub.net/vulnerabilities/bdsa/CVE-2020-8908) - Sensitive Data Exposure\n\n\n\n## Solution\nFixed in version [**32.0.0**](https://github.com/google/guava/releases/tag/v32.0.0) by [this](https://github.com/google/guava/commit/feb83a1c8fd2e7670b244d5afd23cba5aca43284) commit.\n\nThe latest stable releases can be found [here](https://github.com/google/guava/releases).\n\n## Workaround\nA third party workaround has been suggested [here](https://github.com/google/guava/issues/4011):\n\u003e Explicitly set the `java.io.tmpdir` system property to a \"safe\" directory when starting the JVM.\n\n## Dependency tree\n- org.owasp.webgoat.lesson:xxe:v8.1.0:-maven\n    - com.github.tomakehurst:wiremock:2.8.0\n        - com.google.guava:guava:20.0\n\n\n## References\n* Common Weakness Enumeration: [CWE-200](https://cwe.mitre.org/data/definitions/200.html)\n* Common Weakness Enumeration: [CWE-379](https://cwe.mitre.org/data/definitions/379.html)\n\n","text":"Guava creates temporary files and directories with insecure default permissions. A local attacker on the machine could learn the contents of sensitive temporary files.\n\n**Note:** It was determined that the initial patch in version [**30.0**](https://github.com/google/guava/releases/tag/v30.0) by [this](https://github.com/google/guava/commit/fec0dbc4634006a6162cfd4d0d09c962073ddf40) commit was inadequate to fully remove the problem of insecure temporary files from Guava. It only marked a function as deprecated, but the functionality still persisted. A new solution has been released."},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-200","external/cwe/cwe-379"]},"defaultConfiguration":{"level":"warning"}},{"id":"CVE-2020-27216 jetty-io 9.4.24.v20191120: wiremock 2.8.0: org.eclipse.jetty","shortDescription":{"text":"Transitive Dependency: jetty-io 9.4.24.v20191120 from wiremock 2.8.0 (CVE-2020-27216)"},"fullDescription":{"text":"Jetty is vulnerable to temporary directory Hijacking via a race condition. If code is executed from this temporary directory it can lead to local privilege escalation."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| jetty-io 9.4.24.v20191120  | 9.4.53.20231009  | 12.0.5 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/ee93672f-853c-4083-a5e8-0d5ab21e8bf9?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=d8221aaa-7d55-4b5a-b3e0-2b5cba26ce60)\n\n\n## Description\nJetty is vulnerable to temporary directory Hijacking via a race condition. If code is executed from this temporary directory it can lead to local privilege escalation.\n\n## Vulnerabilities(BDSA,CVE)\n:orange_circle: [CVE-2020-27216](https://openhub.net/vulnerabilities/bdsa/CVE-2020-27216) - Race Condition due to Improper Synchronization\n\n\n\n## Solution\nFixed in:\n* [**11.0.0.beta3**](https://github.com/eclipse/jetty.project/releases/tag/jetty-11.0.0.beta3)\n* [**10.0.0.beta3**](https://github.com/eclipse/jetty.project/releases/tag/jetty-10.0.0.beta3) \n* [**9.4.33.v20201020**](https://github.com/eclipse/jetty.project/releases/tag/jetty-9.4.33.v20201020) by [this](https://github.com/eclipse/jetty.project/commit/53e0e0e9b25a6309bf24ee3b10984f4145701edb) commit and [this](https://github.com/eclipse/jetty.project/commit/9ad6beb80543b392c91653f6bfce233fc75b9d5f) commit.\n\n## Workaround\nSet a temporary directory, either for the server or the context, to one outside the shared temporary file system. For recent releases, a temporary directory by created by making a directory called work in the `${jetty.base}` directory (the parent directory of the webapps directory). Alternately the java temporary directory can be set with the System Property `java.io.tmpdir`. A more detailed description of how jetty selects a temporary directory is below.\n\nTo mitigate this vulnerability the directory must be set to one that is not writable by an attacker. To avoid information leakage, the directory should also not be readable by an attacker.\n\n## Dependency tree\n- org.owasp.webgoat.lesson:xxe:v8.1.0:-maven\n    - com.github.tomakehurst:wiremock:2.8.0\n        - org.eclipse.jetty:jetty-server:9.4.24.v20191120\n            - org.eclipse.jetty:jetty-io:9.4.24.v20191120\n\n\n## References\n* Common Weakness Enumeration: [CWE-362](https://cwe.mitre.org/data/definitions/362.html)\n\n","text":"Jetty is vulnerable to temporary directory Hijacking via a race condition. If code is executed from this temporary directory it can lead to local privilege escalation."},"properties":{"security-severity":"8.9","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-362"]},"defaultConfiguration":{"level":"error"}},{"id":"CVE-2023-44487 jetty-io 9.4.24.v20191120: wiremock 2.8.0: org.eclipse.jetty","shortDescription":{"text":"Transitive Dependency: jetty-io 9.4.24.v20191120 from wiremock 2.8.0 (CVE-2023-44487)"},"fullDescription":{"text":"The HTTP/2 protocol contains a flaw related to the stream multiplexing feature that can allow for excessive resource consumption on servers operating implementations of the HTTP/2 protocol. \n\nThe HTTP/2 protocol allows clients to signal to a server to cancel a previously opened stream by sending an `RST_STREAM` frame. Attackers can abuse this stream canceling ability by opening a large number of streams at once immediately followed by `RST_STREAM` frames. In most HTTP/2 implementations this bypasses concurrent open stream limits and causes servers to spend processing time first handling request frames and then performing stream tear downs. For the server, these operations can pile up whereas the attacker client paid minuscule bandwidth and processing costs.\n\n[Amazon](https://aws.amazon.com/security/security-bulletins/AWS-2023-011/), [Cloudflare](https://blog.cloudflare.com/technical-breakdown-http2-rapid-reset-ddos-attack/) and [Google](https://cloud.google.com/blog/products/identity-security/google-cloud-mitigated-largest-ddos-attack-peaking-above-398-million-rps/) have reported that this vulnerability has been exploited in the wild from August to October 2023.\n\nThis vulnerability is listed as exploitable by the Cybersecurity \u0026 Infrastructure Security Agency in their [Known Exploited Vulnerabilities Catalog](https://www.cisa.gov/known-exploited-vulnerabilities-catalog)."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| jetty-io 9.4.24.v20191120  | 9.4.53.20231009  | 12.0.5 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/ee93672f-853c-4083-a5e8-0d5ab21e8bf9?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=d8221aaa-7d55-4b5a-b3e0-2b5cba26ce60)\n\n\n## Description\nThe HTTP/2 protocol contains a flaw related to the stream multiplexing feature that can allow for excessive resource consumption on servers operating implementations of the HTTP/2 protocol. \n\nThe HTTP/2 protocol allows clients to signal to a server to cancel a previously opened stream by sending an `RST_STREAM` frame. Attackers can abuse this stream canceling ability by opening a large number of streams at once immediately followed by `RST_STREAM` frames. In most HTTP/2 implementations this bypasses concurrent open stream limits and causes servers to spend processing time first handling request frames and then performing stream tear downs. For the server, these operations can pile up whereas the attacker client paid minuscule bandwidth and processing costs.\n\n[Amazon](https://aws.amazon.com/security/security-bulletins/AWS-2023-011/), [Cloudflare](https://blog.cloudflare.com/technical-breakdown-http2-rapid-reset-ddos-attack/) and [Google](https://cloud.google.com/blog/products/identity-security/google-cloud-mitigated-largest-ddos-attack-peaking-above-398-million-rps/) have reported that this vulnerability has been exploited in the wild from August to October 2023.\n\nThis vulnerability is listed as exploitable by the Cybersecurity \u0026 Infrastructure Security Agency in their [Known Exploited Vulnerabilities Catalog](https://www.cisa.gov/known-exploited-vulnerabilities-catalog).\n\n## Vulnerabilities(BDSA,CVE)\n:orange_circle: [CVE-2023-44487](https://openhub.net/vulnerabilities/bdsa/CVE-2023-44487) - Uncontrolled Resource Consumption\n\n\n\n## Solution\nFixed in:\n* nghttp2 [**1.57.0**](https://github.com/nghttp2/nghttp2/releases/tag/v1.57.0) by [this](https://github.com/nghttp2/nghttp2/commit/72b4af6143681f528f1d237b21a9a7aee1738832) commit,\n* NGINX [**1.25.3**](https://hg.nginx.org/nginx/rev/release-1.25.3) by [this](https://hg.nginx.org/nginx/rev/cdda286c0f1b) revision,\n* Apache Tomcat \n\t* [**8.5.94**](https://github.com/apache/tomcat/releases/tag/8.5.94) by [this](https://github.com/apache/tomcat/commit/944332bb15bd2f3bf76ec2caeb1ff0a58a3bc628) commit,\n\t* [**9.0.81**](https://github.com/apache/tomcat/releases/tag/9.0.81) by [this](https://github.com/apache/tomcat/commit/6d1a9fd6642387969e4410b9989c85856b74917a) commit,\n\t* [**10.1.14**](https://github.com/apache/tomcat/releases/tag/10.1.14) by [this](https://github.com/apache/tomcat/commit/76bb4bfbfeae827dce896f650655bbf6e251ed49) commit,\n\t* [**11.0.0-M12**](https://github.com/apache/tomcat/releases/tag/11.0.0-M12) by [this](https://github.com/apache/tomcat/commit/9cdfe25bad707f34b3e5da2994f3f1952a163c3e) commit,\n* Apache Traffic Server\n\t* [**9.2.3-rc0**](https://github.com/apache/trafficserver/releases/tag/9.2.3-rc0) by [this](https://github.com/apache/trafficserver/commit/b28ad74f117307e8de206f1de70c3fa716f90682) commit,\n\t* [**8.1.9-rc0**](https://github.com/apache/trafficserver/releases/tag/8.1.9-rc0) by [this](https://github.com/apache/trafficserver/commit/d742d74039aaa548dda0148ab4ba207906abc620) commit,\n* Netty/Codec/HTTP2 [**4.1.100.Final**](https://mvnrepository.com/artifact/io.netty/netty-codec-http2/4.1.100.Final) by [this](https://github.com/netty/netty/commit/58f75f665aa81a8cbcf6ffa74820042a285c5e61) commit,\n* Eclipse Jetty\n\t* [**12.0.2**](https://github.com/jetty/jetty.project/releases/tag/jetty-12.0.2), [**11.0.17**](https://github.com/jetty/jetty.project/releases/tag/jetty-11.0.17), [**10.0.17**](https://github.com/jetty/jetty.project/releases/tag/jetty-10.0.17) by [this](https://github.com/jetty/jetty.project/commit/dbb94514dc9d3fb21fe92080f57c314e7e06a148) commit,\n\t* [**9.4.53.v20231009**](https://github.com/jetty/jetty.project/releases/tag/jetty-9.4.53.v20231009) by [this](https://github.com/jetty/jetty.project/commit/0f246d12090fb15b7b21dee8429f459fd792de53) commit.\n* lighttpd [**1.4.73**](https://github.com/lighttpd/lighttpd1.4/releases/tag/lighttpd-1.4.73) by [this](https://github.com/lighttpd/lighttpd1.4/commit/7b48f3c843e1113b27f5d278f4d10861cc499a06) commit.\n* grpc-go \n  * [**1.56.3**](https://github.com/grpc/grpc-go/releases/tag/v1.56.3) by [this](https://github.com/grpc/grpc-go/commit/5efd7bd7) commit,\n  * [**1.57.1**](https://github.com/grpc/grpc-go/releases/tag/v1.57.1) by [this](https://github.com/grpc/grpc-go/commit/6a1400d5) commit,\n  * [**1.58.3**](https://github.com/grpc/grpc-go/releases/tag/v1.58.3) by [this](https://github.com/grpc/grpc-go/commit/c40c9ba3) commit,\n * h2o fixed in the **master** branch by [this](https://github.com/h2o/h2o/commit/28fe15117b909588bf14269a0e1c6ec4548579fe) commit which is not yet included in any release.\n\n## Workaround\nDepending on technologies use and their configuration, different mitigation strategies may be available.\n\nIn some cases, it may be possible to limit the amount of `RST_STREAM` frame frames that are processed within a given time by configuring the particular HTTP/2 implementation manually. Please refer to your software vendor's advisories for more information.\n\n## Dependency tree\n- org.owasp.webgoat.lesson:xxe:v8.1.0:-maven\n    - com.github.tomakehurst:wiremock:2.8.0\n        - org.eclipse.jetty:jetty-server:9.4.24.v20191120\n            - org.eclipse.jetty:jetty-io:9.4.24.v20191120\n\n\n## References\n* Common Weakness Enumeration: [CWE-400](https://cwe.mitre.org/data/definitions/400.html)\n\n","text":"The HTTP/2 protocol contains a flaw related to the stream multiplexing feature that can allow for excessive resource consumption on servers operating implementations of the HTTP/2 protocol. \n\nThe HTTP/2 protocol allows clients to signal to a server to cancel a previously opened stream by sending an `RST_STREAM` frame. Attackers can abuse this stream canceling ability by opening a large number of streams at once immediately followed by `RST_STREAM` frames. In most HTTP/2 implementations this bypasses concurrent open stream limits and causes servers to spend processing time first handling request frames and then performing stream tear downs. For the server, these operations can pile up whereas the attacker client paid minuscule bandwidth and processing costs.\n\n[Amazon](https://aws.amazon.com/security/security-bulletins/AWS-2023-011/), [Cloudflare](https://blog.cloudflare.com/technical-breakdown-http2-rapid-reset-ddos-attack/) and [Google](https://cloud.google.com/blog/products/identity-security/google-cloud-mitigated-largest-ddos-attack-peaking-above-398-million-rps/) have reported that this vulnerability has been exploited in the wild from August to October 2023.\n\nThis vulnerability is listed as exploitable by the Cybersecurity \u0026 Infrastructure Security Agency in their [Known Exploited Vulnerabilities Catalog](https://www.cisa.gov/known-exploited-vulnerabilities-catalog)."},"properties":{"security-severity":"8.9","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-400"]},"defaultConfiguration":{"level":"error"}},{"id":"CVE-2020-27223 jetty-io 9.4.24.v20191120: wiremock 2.8.0: org.eclipse.jetty","shortDescription":{"text":"Transitive Dependency: jetty-io 9.4.24.v20191120 from wiremock 2.8.0 (CVE-2020-27223)"},"fullDescription":{"text":"Jetty is vulnerable to denial-of-service (DoS) due to the use of an exponential algorithm that can have excessive resource requirements. A remote attacker could cause a vulnerable server to become unresponsive by sending maliciously crafted HTTP requests to that server."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| jetty-io 9.4.24.v20191120  | 9.4.53.20231009  | 12.0.5 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/ee93672f-853c-4083-a5e8-0d5ab21e8bf9?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=d8221aaa-7d55-4b5a-b3e0-2b5cba26ce60)\n\n\n## Description\nJetty is vulnerable to denial-of-service (DoS) due to the use of an exponential algorithm that can have excessive resource requirements. A remote attacker could cause a vulnerable server to become unresponsive by sending maliciously crafted HTTP requests to that server.\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [CVE-2020-27223](https://openhub.net/vulnerabilities/bdsa/CVE-2020-27223) - Inefficient Algorithmic Complexity\n\n\n\n## Solution\nFixed by [this](https://github.com/eclipse/jetty.project/commit/10e531756b972162eed402c44d0244f7f6b85131) commit in:\n* [**11.0.1**](https://github.com/eclipse/jetty.project/releases/tag/jetty-11.0.1)\n* [**10.0.1**](https://github.com/eclipse/jetty.project/releases/tag/jetty-10.0.1)\n* [**9.4.37.v20210219**](https://github.com/eclipse/jetty.project/releases/tag/jetty-9.4.37.v20210219)\n\nThe latest stable releases are available [here](https://github.com/eclipse/jetty.project/releases).\n\n## Workaround\nThe vendor has stated that the following workarounds are effective:\n\n* Don't use the default error page or handler.\n* Don't deploy an instance of `StatisticsServlet` that is exposed to the network.\n* Don't call the `getLocale` API.\n* Don't enable precompressed static content in instances of `DefaultServlet`.\n* Deploy a rule that limits the number and size of `Accept-*` header fields.\n\n## Dependency tree\n- org.owasp.webgoat.lesson:xxe:v8.1.0:-maven\n    - com.github.tomakehurst:wiremock:2.8.0\n        - org.eclipse.jetty:jetty-server:9.4.24.v20191120\n            - org.eclipse.jetty:jetty-io:9.4.24.v20191120\n\n\n## References\n* Common Weakness Enumeration: [CWE-407](https://cwe.mitre.org/data/definitions/407.html)\n\n","text":"Jetty is vulnerable to denial-of-service (DoS) due to the use of an exponential algorithm that can have excessive resource requirements. A remote attacker could cause a vulnerable server to become unresponsive by sending maliciously crafted HTTP requests to that server."},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-407"]},"defaultConfiguration":{"level":"warning"}},{"id":"CVE-2021-28165 jetty-io 9.4.24.v20191120: wiremock 2.8.0: org.eclipse.jetty","shortDescription":{"text":"Transitive Dependency: jetty-io 9.4.24.v20191120 from wiremock 2.8.0 (CVE-2021-28165)"},"fullDescription":{"text":"Eclipse Jetty is vulnerable to Denial-of-Service (DoS) via invalid TLS frames. An attacker could exploit this by sending a TLS frame with a size in excess of 17408 resulting in excessive resource consumption leading to a DoS condition."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| jetty-io 9.4.24.v20191120  | 9.4.53.20231009  | 12.0.5 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/ee93672f-853c-4083-a5e8-0d5ab21e8bf9?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=d8221aaa-7d55-4b5a-b3e0-2b5cba26ce60)\n\n\n## Description\nEclipse Jetty is vulnerable to Denial-of-Service (DoS) via invalid TLS frames. An attacker could exploit this by sending a TLS frame with a size in excess of 17408 resulting in excessive resource consumption leading to a DoS condition.\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [CVE-2021-28165](https://openhub.net/vulnerabilities/bdsa/CVE-2021-28165) - Uncontrolled Resource Consumption\n\n\n\n## Solution\nFixed in [**10.0.2**](https://github.com/eclipse/jetty.project/releases/tag/jetty-10.0.2) and [**11.0.2**](https://github.com/eclipse/jetty.project/releases/tag/jetty-11.0.2) by [this](https://github.com/eclipse/jetty.project/commit/be22761a20a1685365c8e0356bf09b47e574cfd9) and [this](https://github.com/eclipse/jetty.project/commit/039c7386d0f3087d7c8aa19ea6001b24c95b9f16) commit.\nFixed in [**9.4.39.v20210325**](https://github.com/eclipse/jetty.project/releases/tag/jetty-9.4.39.v20210325) by [this](https://github.com/eclipse/jetty.project/commit/00d379c94ba865dced2025c2d1bc3e2e0e41e880) and [this](https://github.com/eclipse/jetty.project/commit/294b2ba02b667548617a94cd99592110ac230add) commit. \n\nThe latest stable releases are available [here](https://github.com/eclipse/jetty.project/releases).\n\n## Workaround\nThe problem can be worked around by compiling the following class:\n```\npackage org.eclipse.jetty.server.ssl.fix6072;\n\nimport java.nio.ByteBuffer;\nimport javax.net.ssl.SSLEngine;\nimport javax.net.ssl.SSLEngineResult;\nimport javax.net.ssl.SSLException;\nimport javax.net.ssl.SSLHandshakeException;\n\nimport org.eclipse.jetty.io.EndPoint;\nimport org.eclipse.jetty.io.ssl.SslConnection;\nimport org.eclipse.jetty.server.Connector;\nimport org.eclipse.jetty.server.SslConnectionFactory;\nimport org.eclipse.jetty.util.BufferUtil;\nimport org.eclipse.jetty.util.annotation.Name;\nimport org.eclipse.jetty.util.ssl.SslContextFactory;\n\npublic class SpaceCheckingSslConnectionFactory extends SslConnectionFactory\n{\n    public SpaceCheckingSslConnectionFactory(@Name(\"sslContextFactory\") SslContextFactory factory, @Name(\"next\") String nextProtocol)\n    {\n        super(factory, nextProtocol);\n    }\n\n    @Override\n    protected SslConnection newSslConnection(Connector connector, EndPoint endPoint, SSLEngine engine)\n    {\n        return new SslConnection(connector.getByteBufferPool(), connector.getExecutor(), endPoint, engine, isDirectBuffersForEncryption(), isDirectBuffersForDecryption())\n        {\n            @Override\n            protected SSLEngineResult unwrap(SSLEngine sslEngine, ByteBuffer input, ByteBuffer output) throws SSLException\n            {\n                SSLEngineResult results = super.unwrap(sslEngine, input, output);\n\n                if ((results.getStatus() == SSLEngineResult.Status.BUFFER_UNDERFLOW ||\n                    results.getStatus() == SSLEngineResult.Status.OK \u0026\u0026 results.bytesConsumed() == 0 \u0026\u0026 results.bytesProduced() == 0) \u0026\u0026\n                    BufferUtil.space(input) == 0)\n                {\n                    BufferUtil.clear(input);\n                    throw new SSLHandshakeException(\"Encrypted buffer max length exceeded\");\n                }\n                return results;\n            }\n        };\n    }\n}\n```\n\nThis class can be deployed by:\n* The resulting class file should be put into a jar file (eg `sslfix6072.jar`)\n* The jar file should be made available to the server. For a normal distribution this can be done by putting the file into `${jetty.base}/lib`\n* Copy the file `${jetty.home}/modules/ssl.mod` to `${jetty.base}/modules`\n* Edit the `${jetty.base}/modules/ssl.mod` file to have the following section:\n```\n[lib]\nlib/sslfix6072.jar\n```\n\n* Copy the file `${jetty.home}/etc/jetty-https.xml` and `${jetty.home}/etc/jetty-http2.xml` to `${jetty.base}/etc`\n* Edit files `${jetty.base}/etc/jetty-https.xml` and `${jetty.base}/etc/jetty-http2.xml`, changing any reference of `org.eclipse.jetty.server.SslConnectionFactory` to `org.eclipse.jetty.server.ssl.fix6072.SpaceCheckingSslConnectionFactory`. \n\nFor example:\n```\n  \u003cCall name=\"addIfAbsentConnectionFactory\"\u003e\n    \u003cArg\u003e\n      \u003cNew class=\"org.eclipse.jetty.server.ssl.fix6072.SpaceCheckingSslConnectionFactory\"\u003e\n        \u003cArg name=\"next\"\u003ehttp/1.1\u003c/Arg\u003e\n        \u003cArg name=\"sslContextFactory\"\u003e\u003cRef refid=\"sslContextFactory\"/\u003e\u003c/Arg\u003e\n      \u003c/New\u003e\n    \u003c/Arg\u003e\n  \u003c/Call\u003e\n```\nRestart Jetty\n\n## Dependency tree\n- org.owasp.webgoat.lesson:xxe:v8.1.0:-maven\n    - com.github.tomakehurst:wiremock:2.8.0\n        - org.eclipse.jetty:jetty-server:9.4.24.v20191120\n            - org.eclipse.jetty:jetty-io:9.4.24.v20191120\n\n\n## References\n* Common Weakness Enumeration: [CWE-400](https://cwe.mitre.org/data/definitions/400.html)\n\n","text":"Eclipse Jetty is vulnerable to Denial-of-Service (DoS) via invalid TLS frames. An attacker could exploit this by sending a TLS frame with a size in excess of 17408 resulting in excessive resource consumption leading to a DoS condition."},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-400"]},"defaultConfiguration":{"level":"warning"}},{"id":"CVE-2021-28169 jetty-io 9.4.24.v20191120: wiremock 2.8.0: org.eclipse.jetty","shortDescription":{"text":"Transitive Dependency: jetty-io 9.4.24.v20191120 from wiremock 2.8.0 (CVE-2021-28169)"},"fullDescription":{"text":"Jetty is vulnerable to information disclosure due to improper requested path verification. This allows crafted requests to access protected resources of the web application which, depending on the implementation, might reveal sensitive information."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| jetty-io 9.4.24.v20191120  | 9.4.53.20231009  | 12.0.5 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/ee93672f-853c-4083-a5e8-0d5ab21e8bf9?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=d8221aaa-7d55-4b5a-b3e0-2b5cba26ce60)\n\n\n## Description\nJetty is vulnerable to information disclosure due to improper requested path verification. This allows crafted requests to access protected resources of the web application which, depending on the implementation, might reveal sensitive information.\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [CVE-2021-28169](https://openhub.net/vulnerabilities/bdsa/CVE-2021-28169) - Directory Traversal\n\n\n\n## Solution\nFixed in [**9.4.41**](https://github.com/eclipse/jetty.project/releases/tag/jetty-9.4.41.v20210512) by [this](https://github.com/eclipse/jetty.project/commit/1c05b0bcb1) commit.\n\nFixed in [**10.0.3**](https://github.com/eclipse/jetty.project/releases/tag/jetty-10.0.3) and [**11.0.3**](https://github.com/eclipse/jetty.project/releases/tag/jetty-11.0.3) by [this](https://github.com/eclipse/jetty.project/commit/f58dbedcd0) commit.\n\nThe latest stable releases are available [here](https://www.eclipse.org/jetty/download.php).\n\n## Workaround\nThe vendor provides the following workaround:\n\nIf you cannot update to the latest version of Jetty, you can instead deploy your own version of the `ConcatServlet` and/or the `WelcomeFilter` by using the code from the latest version of Jetty.\n\n## Dependency tree\n- org.owasp.webgoat.lesson:xxe:v8.1.0:-maven\n    - com.github.tomakehurst:wiremock:2.8.0\n        - org.eclipse.jetty:jetty-server:9.4.24.v20191120\n            - org.eclipse.jetty:jetty-io:9.4.24.v20191120\n\n\n## References\n* Common Weakness Enumeration: [CWE-22](https://cwe.mitre.org/data/definitions/22.html)\n\n","text":"Jetty is vulnerable to information disclosure due to improper requested path verification. This allows crafted requests to access protected resources of the web application which, depending on the implementation, might reveal sensitive information."},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-22"]},"defaultConfiguration":{"level":"warning"}},{"id":"CVE-2023-36478 jetty-io 9.4.24.v20191120: wiremock 2.8.0: org.eclipse.jetty","shortDescription":{"text":"Transitive Dependency: jetty-io 9.4.24.v20191120 from wiremock 2.8.0 (CVE-2023-36478)"},"fullDescription":{"text":"Eclipse Jetty is vulnerable to a denial-of-service (DoS) issue due to presence of a user input validation flaw in the HTTP/2 HPACK functionality that can lead to an integer overflow and allow HPACK headers to exceed their expected size limits.\n\nAn attacker could submit crafted HTTP messages that trigger the integer overflow flaw and cause large buffers to be allocated on the server, consuming memory resources in a manner that could cause the server to run out of memory."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| jetty-io 9.4.24.v20191120  | 9.4.53.20231009  | 12.0.5 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/ee93672f-853c-4083-a5e8-0d5ab21e8bf9?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=d8221aaa-7d55-4b5a-b3e0-2b5cba26ce60)\n\n\n## Description\nEclipse Jetty is vulnerable to a denial-of-service (DoS) issue due to presence of a user input validation flaw in the HTTP/2 HPACK functionality that can lead to an integer overflow and allow HPACK headers to exceed their expected size limits.\n\nAn attacker could submit crafted HTTP messages that trigger the integer overflow flaw and cause large buffers to be allocated on the server, consuming memory resources in a manner that could cause the server to run out of memory.\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [CVE-2023-36478](https://openhub.net/vulnerabilities/bdsa/CVE-2023-36478) - Integer Overflow / Underflow\n\n\n\n## Solution\nFixed in:\n* [**9.4.53.v20231009**](https://github.com/jetty/jetty.project/releases/tag/jetty-9.4.53.v20231009) by [this](https://github.com/jetty/jetty.project/commit/c7a4b05fc735e73e7522cb617c079045b709957b) commit and [this](https://github.com/jetty/jetty.project/commit/a4d61e9eb026ec98c79107e840cabdf520482c56) commit,\n* [**10.0.16**](https://github.com/jetty/jetty.project/releases/tag/jetty-10.0.16), [**11.0.16**](https://github.com/jetty/jetty.project/releases/tag/jetty-11.0.16) and [**12.0.0.beta2x**](https://github.com/jetty/jetty.project/releases/tag/jetty-12.0.0.beta2x) by [this](https://github.com/jetty/jetty.project/commit/a8c9eea75bffcb2b2557acefb75856707654a56f) commit and [this](https://github.com/jetty/jetty.project/commit/420ec7cc1db65b42693dc002aca0faa567f62f7e) commit.\n\nThe latest stable releases can be found [here](https://eclipse.dev/jetty/download.php).\n\n\n\n## Dependency tree\n- org.owasp.webgoat.lesson:xxe:v8.1.0:-maven\n    - com.github.tomakehurst:wiremock:2.8.0\n        - org.eclipse.jetty:jetty-server:9.4.24.v20191120\n            - org.eclipse.jetty:jetty-io:9.4.24.v20191120\n\n\n## References\n* Common Weakness Enumeration: [CWE-190](https://cwe.mitre.org/data/definitions/190.html)\n* Common Weakness Enumeration: [CWE-400](https://cwe.mitre.org/data/definitions/400.html)\n\n","text":"Eclipse Jetty is vulnerable to a denial-of-service (DoS) issue due to presence of a user input validation flaw in the HTTP/2 HPACK functionality that can lead to an integer overflow and allow HPACK headers to exceed their expected size limits.\n\nAn attacker could submit crafted HTTP messages that trigger the integer overflow flaw and cause large buffers to be allocated on the server, consuming memory resources in a manner that could cause the server to run out of memory."},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-190","external/cwe/cwe-400"]},"defaultConfiguration":{"level":"warning"}},{"id":"CVE-2022-2048 jetty-io 9.4.24.v20191120: wiremock 2.8.0: org.eclipse.jetty","shortDescription":{"text":"Transitive Dependency: jetty-io 9.4.24.v20191120 from wiremock 2.8.0 (CVE-2022-2048)"},"fullDescription":{"text":"Eclipse Jetty does not correctly handle invalid HTTP/2 requests. An attacker could exploit this flaw to exhaust the HTTP/2 flow control window or TCP congest the connection. This will cause the relevant selector threads to be blocked and it will lead to a denial-of-service (DoS)."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| jetty-io 9.4.24.v20191120  | 9.4.53.20231009  | 12.0.5 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/ee93672f-853c-4083-a5e8-0d5ab21e8bf9?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=d8221aaa-7d55-4b5a-b3e0-2b5cba26ce60)\n\n\n## Description\nEclipse Jetty does not correctly handle invalid HTTP/2 requests. An attacker could exploit this flaw to exhaust the HTTP/2 flow control window or TCP congest the connection. This will cause the relevant selector threads to be blocked and it will lead to a denial-of-service (DoS).\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [CVE-2022-2048](https://openhub.net/vulnerabilities/bdsa/CVE-2022-2048) - Insufficient Resource Pool\n\n\n\n## Solution\nFixed in:\n* **[9.4.47](https://github.com/eclipse/jetty.project/releases/tag/jetty-9.4.47.v20220610)** by [this](https://github.com/eclipse/jetty.project/commit/be912d4315839405a8ae601f2e4ee0306867266e) commit,\n* **[10.0.10](https://github.com/eclipse/jetty.project/releases/tag/jetty-10.0.10)** and **[11.0.10](https://github.com/eclipse/jetty.project/releases/tag/jetty-11.0.10)** by [this](https://github.com/eclipse/jetty.project/commit/b705091afb9158b39590fa36b9b84795524a8f0b) commit.\n\n\nThe latest stable releases can be found [here](https://github.com/eclipse/jetty.project/releases).\n\n## Workaround\nThe vendor recommends users to filter the requests before they are sent to Jetty. One way to filter them would be to use a proxy.\n\n## Dependency tree\n- org.owasp.webgoat.lesson:xxe:v8.1.0:-maven\n    - com.github.tomakehurst:wiremock:2.8.0\n        - org.eclipse.jetty:jetty-server:9.4.24.v20191120\n            - org.eclipse.jetty:jetty-io:9.4.24.v20191120\n\n\n## References\n* Common Weakness Enumeration: [CWE-410](https://cwe.mitre.org/data/definitions/410.html)\n* Common Weakness Enumeration: [CWE-664](https://cwe.mitre.org/data/definitions/664.html)\n\n","text":"Eclipse Jetty does not correctly handle invalid HTTP/2 requests. An attacker could exploit this flaw to exhaust the HTTP/2 flow control window or TCP congest the connection. This will cause the relevant selector threads to be blocked and it will lead to a denial-of-service (DoS)."},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-410","external/cwe/cwe-664"]},"defaultConfiguration":{"level":"warning"}},{"id":"CVE-2020-27218 jetty-io 9.4.24.v20191120: wiremock 2.8.0: org.eclipse.jetty","shortDescription":{"text":"Transitive Dependency: jetty-io 9.4.24.v20191120 from wiremock 2.8.0 (CVE-2020-27218)"},"fullDescription":{"text":"Eclipse Jetty contains a vulnerability that allows a remote attacker to inject data into other client's requests. This vulnerability only exists when GZIP request body inflation is enabled, and requests from different clients are multiplexed onto a single connection."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| jetty-io 9.4.24.v20191120  | 9.4.53.20231009  | 12.0.5 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/ee93672f-853c-4083-a5e8-0d5ab21e8bf9?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=d8221aaa-7d55-4b5a-b3e0-2b5cba26ce60)\n\n\n## Description\nEclipse Jetty contains a vulnerability that allows a remote attacker to inject data into other client's requests. This vulnerability only exists when GZIP request body inflation is enabled, and requests from different clients are multiplexed onto a single connection.\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [CVE-2020-27218](https://openhub.net/vulnerabilities/bdsa/CVE-2020-27218) - Sensitive Information in Resource Not Removed Before Reuse\n\n\n\n## Solution\nFixed in **[9.4.35.v20201120](https://github.com/eclipse/jetty.project/releases/tag/jetty-9.4.35.v20201120)** by [this](https://github.com/eclipse/jetty.project/commit/850a0330ff25da42b1b1cbdbdca0fcc0c40e47e9) commit.\n\nFixed in **[10.0.0.beta3](https://github.com/eclipse/jetty.project/releases/tag/jetty-10.0.0.beta3)** and in **[11.0.0.beta3](https://github.com/eclipse/jetty.project/releases/tag/jetty-11.0.0.beta3)** by [this](https://github.com/eclipse/jetty.project/commit/34d27e85483c119b7dd1aa9beda735844d14b605) commit.\n\n## Workaround\nThe vendor states that any of the following will mitigate this vulnerability:\n\n\n\u003e * Disabling compressed request body inflation by GzipHandler.\n\u003e * By always fully consuming the request content before sending a response.\n\u003e * By adding a Connection: close to any response where the servlet does not fully consume request content.\n\n## Dependency tree\n- org.owasp.webgoat.lesson:xxe:v8.1.0:-maven\n    - com.github.tomakehurst:wiremock:2.8.0\n        - org.eclipse.jetty:jetty-server:9.4.24.v20191120\n            - org.eclipse.jetty:jetty-io:9.4.24.v20191120\n\n\n## References\n* Common Weakness Enumeration: [CWE-226](https://cwe.mitre.org/data/definitions/226.html)\n\n","text":"Eclipse Jetty contains a vulnerability that allows a remote attacker to inject data into other client's requests. This vulnerability only exists when GZIP request body inflation is enabled, and requests from different clients are multiplexed onto a single connection."},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-226"]},"defaultConfiguration":{"level":"warning"}},{"id":"CVE-2023-26048 jetty-io 9.4.24.v20191120: wiremock 2.8.0: org.eclipse.jetty","shortDescription":{"text":"Transitive Dependency: jetty-io 9.4.24.v20191120 from wiremock 2.8.0 (CVE-2023-26048)"},"fullDescription":{"text":"Eclipse Jetty contains a vulnerability in its multipart request parsing mechanism that can lead to an out-of-memory error due to insufficient limiting measures. An attacker can exploit this flaw by supplying a request containing a large multipart without a filename in order to cause a denial-of-service (DoS)."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| jetty-io 9.4.24.v20191120  | 9.4.53.20231009  | 12.0.5 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/ee93672f-853c-4083-a5e8-0d5ab21e8bf9?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=d8221aaa-7d55-4b5a-b3e0-2b5cba26ce60)\n\n\n## Description\nEclipse Jetty contains a vulnerability in its multipart request parsing mechanism that can lead to an out-of-memory error due to insufficient limiting measures. An attacker can exploit this flaw by supplying a request containing a large multipart without a filename in order to cause a denial-of-service (DoS).\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [CVE-2023-26048](https://openhub.net/vulnerabilities/bdsa/CVE-2023-26048) - Uncontrolled Resource Consumption\n\n\n\n## Solution\nFixed in [**jetty-9.4.51.v20230217**](https://github.com/eclipse/jetty.project/releases/tag/jetty-9.4.51.v20230217) by [this](https://github.com/eclipse/jetty.project/commit/c3021592218da289563987e6f7fbe05f8704b285) commit.\n\nFixed by [this](https://github.com/eclipse/jetty.project/commit/622befbd0d52f61c1acd41b4ef12458311494f1a) commit in:\n* **[jetty-10.0.14](https://github.com/eclipse/jetty.project/releases/tag/jetty-10.0.14)**\n* **[jetty-11.0.14](https://github.com/eclipse/jetty.project/releases/tag/jetty-11.0.14)**\n* **[jetty-12.0.0.beta0](https://github.com/eclipse/jetty.project/releases/tag/jetty-12.0.0.beta0)**\n\nThe latest stable releases can be found [here](https://github.com/eclipse/jetty.project/releases).\n\n## Workaround\nIt is recommended to set the multipart parameter `maxRequestSize` to a non-negative value in order to limit the whole multipart content. It has also been stated that limiting the multipart parameter `maxFileSize` will not be enough since the attacker can supply a large number of parts that, when summed up, will cause memory issues.\n\n## Dependency tree\n- org.owasp.webgoat.lesson:xxe:v8.1.0:-maven\n    - com.github.tomakehurst:wiremock:2.8.0\n        - org.eclipse.jetty:jetty-server:9.4.24.v20191120\n            - org.eclipse.jetty:jetty-io:9.4.24.v20191120\n\n\n## References\n* Common Weakness Enumeration: [CWE-400](https://cwe.mitre.org/data/definitions/400.html)\n* Common Weakness Enumeration: [CWE-770](https://cwe.mitre.org/data/definitions/770.html)\n\n","text":"Eclipse Jetty contains a vulnerability in its multipart request parsing mechanism that can lead to an out-of-memory error due to insufficient limiting measures. An attacker can exploit this flaw by supplying a request containing a large multipart without a filename in order to cause a denial-of-service (DoS)."},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-400","external/cwe/cwe-770"]},"defaultConfiguration":{"level":"warning"}},{"id":"CVE-2023-26049 jetty-io 9.4.24.v20191120: wiremock 2.8.0: org.eclipse.jetty","shortDescription":{"text":"Transitive Dependency: jetty-io 9.4.24.v20191120 from wiremock 2.8.0 (CVE-2023-26049)"},"fullDescription":{"text":"Eclipse Jetty does not properly parse quoted values in cookies. This could allow an attacker to smuggle cookies within other cookies into the application. The attacker can also tamper with the cookie parsing mechanism and cause other unintended behavior."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| jetty-io 9.4.24.v20191120  | 9.4.53.20231009  | 12.0.5 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/ee93672f-853c-4083-a5e8-0d5ab21e8bf9?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=d8221aaa-7d55-4b5a-b3e0-2b5cba26ce60)\n\n\n## Description\nEclipse Jetty does not properly parse quoted values in cookies. This could allow an attacker to smuggle cookies within other cookies into the application. The attacker can also tamper with the cookie parsing mechanism and cause other unintended behavior.\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [CVE-2023-26049](https://openhub.net/vulnerabilities/bdsa/CVE-2023-26049) - Weak Input Validation\n\n\n\n## Solution\nFixed in version [**jetty-9.4.51.v20230217**](https://github.com/eclipse/jetty.project/releases/tag/jetty-9.4.51.v20230217) by [this](https://github.com/eclipse/jetty.project/commit/1be1401bafb4c46fae3c234c8e93743a661dcf21) commit.\n\nFixed by [this](https://github.com/eclipse/jetty.project/commit/7b8c2c1bf081c7f408e5da3371c8c3c9802f09fd) commit in:\n* [**jetty-10.0.14**](https://github.com/eclipse/jetty.project/releases/tag/jetty-10.0.14)\n* [**jetty-11.0.14**](https://github.com/eclipse/jetty.project/releases/tag/jetty-11.0.14)\n* [**jetty-12.0.0.beta0**](https://github.com/eclipse/jetty.project/releases/tag/jetty-12.0.0.beta0)\n\nThe latest stable releases can be found [here](https://github.com/eclipse/jetty.project/releases).\n\n\n\n## Dependency tree\n- org.owasp.webgoat.lesson:xxe:v8.1.0:-maven\n    - com.github.tomakehurst:wiremock:2.8.0\n        - org.eclipse.jetty:jetty-server:9.4.24.v20191120\n            - org.eclipse.jetty:jetty-io:9.4.24.v20191120\n\n\n## References\n* Common Weakness Enumeration: [CWE-20](https://cwe.mitre.org/data/definitions/20.html)\n\n","text":"Eclipse Jetty does not properly parse quoted values in cookies. This could allow an attacker to smuggle cookies within other cookies into the application. The attacker can also tamper with the cookie parsing mechanism and cause other unintended behavior."},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-20"]},"defaultConfiguration":{"level":"warning"}},{"id":"CVE-2023-40167 jetty-io 9.4.24.v20191120: wiremock 2.8.0: org.eclipse.jetty","shortDescription":{"text":"Transitive Dependency: jetty-io 9.4.24.v20191120 from wiremock 2.8.0 (CVE-2023-40167)"},"fullDescription":{"text":"Eclipse Jetty is vulnerable to HTTP request smuggling due to the improper parsing of HTTP requests. An attacker could exploit this vulnerability by sending maliciously crafted HTTP requests to a vulnerable endpoint with multiple requests included inside the body by manipulating the `Content-Length` of the request. The smuggling of HTTP requests may allow for the bypass of security tools such as web application firewalls (WAFs) and intrusion detection systems (IDSs)."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| jetty-io 9.4.24.v20191120  | 9.4.53.20231009  | 12.0.5 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/ee93672f-853c-4083-a5e8-0d5ab21e8bf9?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=d8221aaa-7d55-4b5a-b3e0-2b5cba26ce60)\n\n\n## Description\nEclipse Jetty is vulnerable to HTTP request smuggling due to the improper parsing of HTTP requests. An attacker could exploit this vulnerability by sending maliciously crafted HTTP requests to a vulnerable endpoint with multiple requests included inside the body by manipulating the `Content-Length` of the request. The smuggling of HTTP requests may allow for the bypass of security tools such as web application firewalls (WAFs) and intrusion detection systems (IDSs).\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [CVE-2023-40167](https://openhub.net/vulnerabilities/bdsa/CVE-2023-40167) - Improper Handling of Length Parameter Inconsistency\n\n\n\n## Solution\nFixed in versions:\n* [**12.0.1**](https://github.com/eclipse/jetty.project/releases/tag/jetty-12.0.1) by [this](https://github.com/eclipse/jetty.project/commit/13cf2dade746e5d3bb123fd7ecd9fdc28fc43082) commit.\n* [**11.0.16**](https://github.com/eclipse/jetty.project/releases/tag/jetty-11.0.16) and [**10.0.16**](https://github.com/eclipse/jetty.project/releases/tag/jetty-10.0.16) by [this](https://github.com/eclipse/jetty.project/commit/003e46cae4d71e147d51fb8ea378e8989d381cc3) commit.\n* [**9.4.52.v20230823**](https://github.com/eclipse/jetty.project/releases/tag/jetty-9.4.52.v20230823) by [this](https://github.com/eclipse/jetty.project/commit/e4d596eafc887bcd813ae6e28295b5ce327def47) commit.\n\nThe latest stable releases can be found [here](https://eclipse.dev/jetty/download.php).\n\n\n\n## Dependency tree\n- org.owasp.webgoat.lesson:xxe:v8.1.0:-maven\n    - com.github.tomakehurst:wiremock:2.8.0\n        - org.eclipse.jetty:jetty-server:9.4.24.v20191120\n            - org.eclipse.jetty:jetty-io:9.4.24.v20191120\n\n\n## References\n* Common Weakness Enumeration: [CWE-130](https://cwe.mitre.org/data/definitions/130.html)\n\n","text":"Eclipse Jetty is vulnerable to HTTP request smuggling due to the improper parsing of HTTP requests. An attacker could exploit this vulnerability by sending maliciously crafted HTTP requests to a vulnerable endpoint with multiple requests included inside the body by manipulating the `Content-Length` of the request. The smuggling of HTTP requests may allow for the bypass of security tools such as web application firewalls (WAFs) and intrusion detection systems (IDSs)."},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-130"]},"defaultConfiguration":{"level":"warning"}},{"id":"CVE-2023-36479 jetty-io 9.4.24.v20191120: wiremock 2.8.0: org.eclipse.jetty","shortDescription":{"text":"Transitive Dependency: jetty-io 9.4.24.v20191120 from wiremock 2.8.0 (CVE-2023-36479)"},"fullDescription":{"text":"Eclipse Jetty contains an improper neutralization of quoting syntax issue within the CGI servlet. This could allow an authenticated attacker to send a request to the CGI Servlet for a binary with a space in its name in order to manipulate the command structure and execute incorrect commands."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| jetty-io 9.4.24.v20191120  | 9.4.53.20231009  | 12.0.5 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/ee93672f-853c-4083-a5e8-0d5ab21e8bf9?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=d8221aaa-7d55-4b5a-b3e0-2b5cba26ce60)\n\n\n## Description\nEclipse Jetty contains an improper neutralization of quoting syntax issue within the CGI servlet. This could allow an authenticated attacker to send a request to the CGI Servlet for a binary with a space in its name in order to manipulate the command structure and execute incorrect commands.\n\n## Vulnerabilities(BDSA,CVE)\n:large_blue_circle: [CVE-2023-36479](https://openhub.net/vulnerabilities/bdsa/CVE-2023-36479) - Improper Neutralization of Quoting Syntax\n\n\n\n## Solution\nFixed in versions:\n* [**12.0.0.beta1**](https://github.com/eclipse/jetty.project/releases/tag/jetty-12.0.0.beta1) by [this](https://github.com/eclipse/jetty.project/commit/6ce5a0fbcdf06ae647dfd304dd81a1f9b0691a5c) commit.\n* [**11.0.16**](https://github.com/eclipse/jetty.project/releases/tag/jetty-11.0.16) and [**10.0.16**](https://github.com/eclipse/jetty.project/releases/tag/jetty-10.0.16) by [this](https://github.com/eclipse/jetty.project/commit/c29491e5ac70c98e4d7d7dff2a6465ddecc45c0c) commit.\n* [**9.4.52.v20230823**](https://github.com/eclipse/jetty.project/releases/tag/jetty-9.4.52.v20230823) by [this](https://github.com/eclipse/jetty.project/commit/ec7e1fd173481e526db4092f558aa2b5aab57580) commit.\n\nThe latest stable releases can be found [here](https://eclipse.dev/jetty/download.php).\n\n## Workaround\nThe vendor has issued the following workaround:\n\n\u003e The` org.eclipse.jetty.servlets.CGI` Servlet should not be used. Fast CGI support is available instead.\n\n## Dependency tree\n- org.owasp.webgoat.lesson:xxe:v8.1.0:-maven\n    - com.github.tomakehurst:wiremock:2.8.0\n        - org.eclipse.jetty:jetty-server:9.4.24.v20191120\n            - org.eclipse.jetty:jetty-io:9.4.24.v20191120\n\n\n## References\n* Common Weakness Enumeration: [CWE-149](https://cwe.mitre.org/data/definitions/149.html)\n\n","text":"Eclipse Jetty contains an improper neutralization of quoting syntax issue within the CGI servlet. This could allow an authenticated attacker to send a request to the CGI Servlet for a binary with a space in its name in order to manipulate the command structure and execute incorrect commands."},"properties":{"security-severity":"3.8","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-149"]},"defaultConfiguration":{"level":"note"}},{"id":"CVE-2023-41900 jetty-io 9.4.24.v20191120: wiremock 2.8.0: org.eclipse.jetty","shortDescription":{"text":"Transitive Dependency: jetty-io 9.4.24.v20191120 from wiremock 2.8.0 (CVE-2023-41900)"},"fullDescription":{"text":"Eclipse Jetty contains an improper authentication vulnerability. This could allow an authenticated attacker to bypass authentication after it has been rejected or revoked by the `LoginService` and make a request as if authenticated.\n\n**Note:** The vendor has stated that this issue impacts usages of the `jetty-openid` which have configured a nested `LoginService` and where that `LoginService` is capable of rejecting previously authenticated users."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| jetty-io 9.4.24.v20191120  | 9.4.53.20231009  | 12.0.5 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/ee93672f-853c-4083-a5e8-0d5ab21e8bf9?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=d8221aaa-7d55-4b5a-b3e0-2b5cba26ce60)\n\n\n## Description\nEclipse Jetty contains an improper authentication vulnerability. This could allow an authenticated attacker to bypass authentication after it has been rejected or revoked by the `LoginService` and make a request as if authenticated.\n\n**Note:** The vendor has stated that this issue impacts usages of the `jetty-openid` which have configured a nested `LoginService` and where that `LoginService` is capable of rejecting previously authenticated users.\n\n## Vulnerabilities(BDSA,CVE)\n:large_blue_circle: [CVE-2023-41900](https://openhub.net/vulnerabilities/bdsa/CVE-2023-41900) - Improper Authentication\n\n\n\n## Solution\nFixed in version [**11.0.15**](https://github.com/eclipse/jetty.project/releases/tag/jetty-11.0.15) and [**10.0.15**](https://github.com/eclipse/jetty.project/releases/tag/jetty-10.0.15) by [this](https://github.com/eclipse/jetty.project/commit/24b7d06fd5ce5468caa3eaa93688879fb2900fda) commit and in [**9.4.52.v20230823**](https://github.com/eclipse/jetty.project/releases/tag/jetty-9.4.52.v20230823) by [this](https://github.com/eclipse/jetty.project/commit/5f48b4170f36b275e1576548b44bd5009feba669) commit.\n\nThe latest stable releases can be found [here](https://eclipse.dev/jetty/download.php).\n\n\n\n## Dependency tree\n- org.owasp.webgoat.lesson:xxe:v8.1.0:-maven\n    - com.github.tomakehurst:wiremock:2.8.0\n        - org.eclipse.jetty:jetty-server:9.4.24.v20191120\n            - org.eclipse.jetty:jetty-io:9.4.24.v20191120\n\n\n## References\n* Common Weakness Enumeration: [CWE-287](https://cwe.mitre.org/data/definitions/287.html)\n\n","text":"Eclipse Jetty contains an improper authentication vulnerability. This could allow an authenticated attacker to bypass authentication after it has been rejected or revoked by the `LoginService` and make a request as if authenticated.\n\n**Note:** The vendor has stated that this issue impacts usages of the `jetty-openid` which have configured a nested `LoginService` and where that `LoginService` is capable of rejecting previously authenticated users."},"properties":{"security-severity":"3.8","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-287"]},"defaultConfiguration":{"level":"note"}},{"id":"CVE-2021-34428 jetty-io 9.4.24.v20191120: wiremock 2.8.0: org.eclipse.jetty","shortDescription":{"text":"Transitive Dependency: jetty-io 9.4.24.v20191120 from wiremock 2.8.0 (CVE-2021-34428)"},"fullDescription":{"text":"Eclipse Jetty is vulnerable to insufficient session expiry. This may result in sessions used on a shared computer persisting for longer than intended."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| jetty-io 9.4.24.v20191120  | 9.4.53.20231009  | 12.0.5 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/ee93672f-853c-4083-a5e8-0d5ab21e8bf9?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=d8221aaa-7d55-4b5a-b3e0-2b5cba26ce60)\n\n\n## Description\nEclipse Jetty is vulnerable to insufficient session expiry. This may result in sessions used on a shared computer persisting for longer than intended.\n\n## Vulnerabilities(BDSA,CVE)\n:large_blue_circle: [CVE-2021-34428](https://openhub.net/vulnerabilities/bdsa/CVE-2021-34428) - Insufficient Session Expiration\n\n\n\n## Solution\nFixed in:\n* [**9.4.41.v20210516**](https://github.com/eclipse/jetty.project/releases/tag/jetty-9.4.41.v20210516) by [this](https://github.com/eclipse/jetty.project/commit/087f486b4461746b4ded45833887b3ccb136ee85) commit, \n* [**10.0.3**](https://github.com/eclipse/jetty.project/releases/tag/jetty-10.0.3) by [this](https://github.com/eclipse/jetty.project/commit/cd6462a6252d083b3c9ea2684aab0b4c9669ed19) commit, \n* [**11.0.3**](https://github.com/eclipse/jetty.project/releases/tag/jetty-11.0.3) by [this](https://github.com/eclipse/jetty.project/commit/cd6462a6252d083b3c9ea2684aab0b4c9669ed19) commit.\n\nThe latest stable releases are available [here](https://github.com/eclipse/jetty.project/releases).\n\n## Workaround\nThe vendor has [stated](https://github.com/eclipse/jetty.project/security/advisories/GHSA-m6cp-vxjx-65j6) that a workaround is to ensure that the application catches all Throwables within their `SessionListener#sessionDestroyed()` implementations.\n\n## Dependency tree\n- org.owasp.webgoat.lesson:xxe:v8.1.0:-maven\n    - com.github.tomakehurst:wiremock:2.8.0\n        - org.eclipse.jetty:jetty-server:9.4.24.v20191120\n            - org.eclipse.jetty:jetty-io:9.4.24.v20191120\n\n\n## References\n* Common Weakness Enumeration: [CWE-613](https://cwe.mitre.org/data/definitions/613.html)\n\n","text":"Eclipse Jetty is vulnerable to insufficient session expiry. This may result in sessions used on a shared computer persisting for longer than intended."},"properties":{"security-severity":"3.8","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-613"]},"defaultConfiguration":{"level":"note"}},{"id":"CVE-2022-2047 jetty-io 9.4.24.v20191120: wiremock 2.8.0: org.eclipse.jetty","shortDescription":{"text":"Transitive Dependency: jetty-io 9.4.24.v20191120 from wiremock 2.8.0 (CVE-2022-2047)"},"fullDescription":{"text":"Eclipse Jetty does not correctly handle invalid authority segments of HTTP URIs. An authenticated attacker could exploit this flaw by passing an invalid URI that contains an improper authority with no host so that it is interpreted as one with a host."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| jetty-io 9.4.24.v20191120  | 9.4.53.20231009  | 12.0.5 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/ee93672f-853c-4083-a5e8-0d5ab21e8bf9?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=d8221aaa-7d55-4b5a-b3e0-2b5cba26ce60)\n\n\n## Description\nEclipse Jetty does not correctly handle invalid authority segments of HTTP URIs. An authenticated attacker could exploit this flaw by passing an invalid URI that contains an improper authority with no host so that it is interpreted as one with a host.\n\n## Vulnerabilities(BDSA,CVE)\n:large_blue_circle: [CVE-2022-2047](https://openhub.net/vulnerabilities/bdsa/CVE-2022-2047) - Weak Input Validation\n\n\n\n## Solution\nFixed in versions:\n* [**9.4.47**](https://github.com/eclipse/jetty.project/releases/tag/jetty-9.4.47.v20220610) by [this](https://github.com/eclipse/jetty.project/commit/4ca8afbbd667c19a084d5ff14a4f08eb7049d1c7) commit.\n* [**10.0.10**](https://github.com/eclipse/jetty.project/releases/tag/jetty-10.0.10) and [**11.0.10**](https://github.com/eclipse/jetty.project/releases/tag/jetty-11.0.10) by [this](https://github.com/eclipse/jetty.project/commit/d1e64f469362bb9371d530cccded5ecb13fa1cb5) commit.\n\nThe latest stable releases can be found [here](https://github.com/eclipse/jetty.project/releases).\n\n\n\n## Dependency tree\n- org.owasp.webgoat.lesson:xxe:v8.1.0:-maven\n    - com.github.tomakehurst:wiremock:2.8.0\n        - org.eclipse.jetty:jetty-server:9.4.24.v20191120\n            - org.eclipse.jetty:jetty-io:9.4.24.v20191120\n\n\n## References\n* Common Weakness Enumeration: [CWE-20](https://cwe.mitre.org/data/definitions/20.html)\n\n","text":"Eclipse Jetty does not correctly handle invalid authority segments of HTTP URIs. An authenticated attacker could exploit this flaw by passing an invalid URI that contains an improper authority with no host so that it is interpreted as one with a host."},"properties":{"security-severity":"3.8","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-20"]},"defaultConfiguration":{"level":"note"}},{"id":"CVE-2016-1000027 spring-beans 5.2.2.RELEASE: spring-security-test 4.1.3.RELEASE: org.springframework","shortDescription":{"text":"Transitive Dependency: spring-beans 5.2.2.RELEASE from spring-security-test 4.1.3.RELEASE (CVE-2016-1000027)"},"fullDescription":{"text":"Pivotal Spring Framework through 5.3.16 suffers from a potential remote code execution (RCE) issue if used for Java deserialization of untrusted data. Depending on how the library is implemented within a product, this issue may or not occur, and authentication may be required. NOTE: the vendor's position is that untrusted data is not an intended use case. The product's behavior will not be changed because some users rely on deserialization of trusted data."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| spring-beans 5.2.2.RELEASE  | 5.3.31  | 6.1.2 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/ba6e9d03-9fbd-4086-9631-99d1ad5e520c?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=09f17d81-b282-43ec-9f2b-36c8021d3ca7)\n\n\n## Description\nPivotal Spring Framework through 5.3.16 suffers from a potential remote code execution (RCE) issue if used for Java deserialization of untrusted data. Depending on how the library is implemented within a product, this issue may or not occur, and authentication may be required. NOTE: the vendor's position is that untrusted data is not an intended use case. The product's behavior will not be changed because some users rely on deserialization of trusted data.\n\n## Vulnerabilities(BDSA,CVE)\n:red_circle: [CVE-2016-1000027](https://openhub.net/vulnerabilities/bdsa/CVE-2016-1000027) - Insecure Object Deserialization\n\n\n\n\n\n\n\n## Dependency tree\n- org.owasp.webgoat.lesson:http-basics:v8.1.0:-maven\n    - org.springframework.security:spring-security-test:4.1.3.RELEASE\n        - org.springframework.security:spring-security-core:5.2.1.RELEASE\n            - org.springframework:spring-beans:5.2.2.RELEASE\n\n\n## References\n* Common Weakness Enumeration: [CWE-502](https://cwe.mitre.org/data/definitions/502.html)\n\n","text":"Pivotal Spring Framework through 5.3.16 suffers from a potential remote code execution (RCE) issue if used for Java deserialization of untrusted data. Depending on how the library is implemented within a product, this issue may or not occur, and authentication may be required. NOTE: the vendor's position is that untrusted data is not an intended use case. The product's behavior will not be changed because some users rely on deserialization of trusted data."},"properties":{"security-severity":"9.1","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-502"]},"defaultConfiguration":{"level":"error"}},{"id":"CVE-2022-22965 spring-beans 5.2.2.RELEASE: spring-security-test 4.1.3.RELEASE: org.springframework","shortDescription":{"text":"Transitive Dependency: spring-beans 5.2.2.RELEASE from spring-security-test 4.1.3.RELEASE (CVE-2022-22965)"},"fullDescription":{"text":"Spring Framework is vulnerable to a flaw in the access restrictions to the security sensitive `ClassLoader` property. The restrictions can be bypassed through alternative paths available with Java9 and later. An attacker can leverage this vulnerability to cause remote code execution (RCE).\n\n**Note** this issue exists because the restrictions that were introduced to prevent exploitation of BDSA-2010-0001 (CVE-2010-1622) can be bypassed on platforms where Java9 and later are in use.\n\nThis vulnerability is listed as exploitable by the Cybersecurity \u0026 Infrastructure Security Agency in their [Known Exploited Vulnerabilities Catalog](https://www.cisa.gov/known-exploited-vulnerabilities-catalog)."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| spring-beans 5.2.2.RELEASE  | 5.3.31  | 6.1.2 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/ba6e9d03-9fbd-4086-9631-99d1ad5e520c?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=09f17d81-b282-43ec-9f2b-36c8021d3ca7)\n\n\n## Description\nSpring Framework is vulnerable to a flaw in the access restrictions to the security sensitive `ClassLoader` property. The restrictions can be bypassed through alternative paths available with Java9 and later. An attacker can leverage this vulnerability to cause remote code execution (RCE).\n\n**Note** this issue exists because the restrictions that were introduced to prevent exploitation of BDSA-2010-0001 (CVE-2010-1622) can be bypassed on platforms where Java9 and later are in use.\n\nThis vulnerability is listed as exploitable by the Cybersecurity \u0026 Infrastructure Security Agency in their [Known Exploited Vulnerabilities Catalog](https://www.cisa.gov/known-exploited-vulnerabilities-catalog).\n\n## Vulnerabilities(BDSA,CVE)\n:red_circle: [CVE-2022-22965](https://openhub.net/vulnerabilities/bdsa/CVE-2022-22965) - Incomplete List of Disallowed Inputs\n\n\n\n## Solution\nFixed in [**5.3.18**](https://github.com/spring-projects/spring-framework/releases/tag/v5.3.18) by [this](https://github.com/spring-projects/spring-framework/commit/002546b3e4b8d791ea6acccb81eb3168f51abb15) commit and  [**5.2.20**](https://github.com/spring-projects/spring-framework/releases/tag/v5.2.20.RELEASE) by [this](https://github.com/spring-projects/spring-framework/commit/996f701a1916d10202c1d0d281f06ab1f2e1117e) commit .\n\nThe latest releases can be found [here](https://github.com/spring-projects/spring-framework/tags).\n\n## Workaround\nAn official workaround for the issue has been outlined [here](https://spring.io/blog/2022/03/31/spring-framework-rce-early-announcement).\n\n## Dependency tree\n- org.owasp.webgoat.lesson:http-basics:v8.1.0:-maven\n    - org.springframework.security:spring-security-test:4.1.3.RELEASE\n        - org.springframework.security:spring-security-core:5.2.1.RELEASE\n            - org.springframework:spring-beans:5.2.2.RELEASE\n\n\n## References\n* Common Weakness Enumeration: [CWE-184](https://cwe.mitre.org/data/definitions/184.html)\n* Common Weakness Enumeration: [CWE-749](https://cwe.mitre.org/data/definitions/749.html)\n\n","text":"Spring Framework is vulnerable to a flaw in the access restrictions to the security sensitive `ClassLoader` property. The restrictions can be bypassed through alternative paths available with Java9 and later. An attacker can leverage this vulnerability to cause remote code execution (RCE).\n\n**Note** this issue exists because the restrictions that were introduced to prevent exploitation of BDSA-2010-0001 (CVE-2010-1622) can be bypassed on platforms where Java9 and later are in use.\n\nThis vulnerability is listed as exploitable by the Cybersecurity \u0026 Infrastructure Security Agency in their [Known Exploited Vulnerabilities Catalog](https://www.cisa.gov/known-exploited-vulnerabilities-catalog)."},"properties":{"security-severity":"9.1","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-184","external/cwe/cwe-749"]},"defaultConfiguration":{"level":"error"}},{"id":"CVE-2020-5397 spring-beans 5.2.2.RELEASE: spring-security-test 4.1.3.RELEASE: org.springframework","shortDescription":{"text":"Transitive Dependency: spring-beans 5.2.2.RELEASE from spring-security-test 4.1.3.RELEASE (CVE-2020-5397)"},"fullDescription":{"text":"Spring Framework is vulnerable to cross-site request forgery (CSRF) attacks via CORS preflight requests which target Spring MVC or Spring WebFlux endpoints."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| spring-beans 5.2.2.RELEASE  | 5.3.31  | 6.1.2 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/ba6e9d03-9fbd-4086-9631-99d1ad5e520c?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=09f17d81-b282-43ec-9f2b-36c8021d3ca7)\n\n\n## Description\nSpring Framework is vulnerable to cross-site request forgery (CSRF) attacks via CORS preflight requests which target Spring MVC or Spring WebFlux endpoints.\n\n## Vulnerabilities(BDSA,CVE)\n:orange_circle: [CVE-2020-5397](https://openhub.net/vulnerabilities/bdsa/CVE-2020-5397) - Cross-Site Request Forgery (CSRF)\n\n\n\n## Solution\nFixed in [**5.2.3**](https://github.com/spring-projects/spring-framework/releases/tag/v5.2.3.RELEASE).\n\n\n\n## Dependency tree\n- org.owasp.webgoat.lesson:http-basics:v8.1.0:-maven\n    - org.springframework.security:spring-security-test:4.1.3.RELEASE\n        - org.springframework.security:spring-security-core:5.2.1.RELEASE\n            - org.springframework:spring-beans:5.2.2.RELEASE\n\n\n## References\n* Common Weakness Enumeration: [CWE-352](https://cwe.mitre.org/data/definitions/352.html)\n\n","text":"Spring Framework is vulnerable to cross-site request forgery (CSRF) attacks via CORS preflight requests which target Spring MVC or Spring WebFlux endpoints."},"properties":{"security-severity":"8.9","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-352"]},"defaultConfiguration":{"level":"error"}},{"id":"BDSA-2022-0847 spring-beans 5.2.2.RELEASE: spring-security-test 4.1.3.RELEASE: org.springframework","shortDescription":{"text":"Transitive Dependency: spring-beans 5.2.2.RELEASE from spring-security-test 4.1.3.RELEASE (BDSA-2022-0847)"},"fullDescription":{"text":"Software systems using Spring Framework may be vulnerable to unsafe deserialization if they employ unsafe use of certain provided deserialization functionality. A remote attacker could potentially execute arbitrary code on a vulnerable endpoint by passing a maliciously crafted serialized object to that endpoint.\n\n**Note**: This issue only affects software that has been written to leverage specific deserialization functionality provided by the Spring Framework without sanitization."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| spring-beans 5.2.2.RELEASE  | 5.3.31  | 6.1.2 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/ba6e9d03-9fbd-4086-9631-99d1ad5e520c?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=09f17d81-b282-43ec-9f2b-36c8021d3ca7)\n\n\n## Description\nSoftware systems using Spring Framework may be vulnerable to unsafe deserialization if they employ unsafe use of certain provided deserialization functionality. A remote attacker could potentially execute arbitrary code on a vulnerable endpoint by passing a maliciously crafted serialized object to that endpoint.\n\n**Note**: This issue only affects software that has been written to leverage specific deserialization functionality provided by the Spring Framework without sanitization.\n\n## Vulnerabilities(BDSA,CVE)\n:orange_circle: [BDSA-2022-0847](https://openhub.net/vulnerabilities/bdsa/BDSA-2022-0847) - Insecure Object Deserialization\n\n\n\n## Solution\nFixed in **[6.0.0-M4](https://github.com/spring-projects/spring-framework/releases/tag/v6.0.0-M4)** by [this](https://github.com/spring-projects/spring-framework/commit/7f7fb58dd0dae86d22268a4b59ac7c72a6c22529) commit.\n\nFixed in **[5.3.18](https://github.com/spring-projects/spring-framework/releases/tag/v5.3.18)** and **[5.2.20](https://github.com/spring-projects/spring-framework/releases/tag/v5.2.20.RELEASE)** by [this](https://github.com/spring-projects/spring-framework/commit/3811cd4c0a0be3aac6e842cf1890610ce986449d) commit.\n\n**Note**: These patches simply annotate the dangerous method as deprecated or documents the dangers. It is the responsibility of developers who call this method to ensure that it is not used with unsanitized untrusted input.\n\n\n\n## Dependency tree\n- org.owasp.webgoat.lesson:http-basics:v8.1.0:-maven\n    - org.springframework.security:spring-security-test:4.1.3.RELEASE\n        - org.springframework.security:spring-security-core:5.2.1.RELEASE\n            - org.springframework:spring-beans:5.2.2.RELEASE\n\n\n## References\n* Common Weakness Enumeration: [CWE-502](https://cwe.mitre.org/data/definitions/502.html)\n\n","text":"Software systems using Spring Framework may be vulnerable to unsafe deserialization if they employ unsafe use of certain provided deserialization functionality. A remote attacker could potentially execute arbitrary code on a vulnerable endpoint by passing a maliciously crafted serialized object to that endpoint.\n\n**Note**: This issue only affects software that has been written to leverage specific deserialization functionality provided by the Spring Framework without sanitization."},"properties":{"security-severity":"8.9","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-502"]},"defaultConfiguration":{"level":"error"}},{"id":"CVE-2020-5398 spring-beans 5.2.2.RELEASE: spring-security-test 4.1.3.RELEASE: org.springframework","shortDescription":{"text":"Transitive Dependency: spring-beans 5.2.2.RELEASE from spring-security-test 4.1.3.RELEASE (CVE-2020-5398)"},"fullDescription":{"text":"Spring Framework is vulnerable to a reflected file download (RFD) attack via improper input validation on filenames in a `Content-Disposition` header."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| spring-beans 5.2.2.RELEASE  | 5.3.31  | 6.1.2 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/ba6e9d03-9fbd-4086-9631-99d1ad5e520c?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=09f17d81-b282-43ec-9f2b-36c8021d3ca7)\n\n\n## Description\nSpring Framework is vulnerable to a reflected file download (RFD) attack via improper input validation on filenames in a `Content-Disposition` header.\n\n## Vulnerabilities(BDSA,CVE)\n:orange_circle: [CVE-2020-5398](https://openhub.net/vulnerabilities/bdsa/CVE-2020-5398) - Weak Input Validation\n\n\n\n## Solution\nFixed by [this](https://github.com/spring-projects/spring-framework/commit/956ffe68587c8d5f21135b5ce4650af0c2dea933) commit in:\n* [**5.2.3**](https://github.com/spring-projects/spring-framework/releases/tag/v5.2.3.RELEASE)\n* [**5.1.13**](https://github.com/spring-projects/spring-framework/releases/tag/v5.1.13.RELEASE) \n* [**5.0.16**](https://github.com/spring-projects/spring-framework/releases/tag/v5.0.16.RELEASE)\n\n\n\n## Dependency tree\n- org.owasp.webgoat.lesson:http-basics:v8.1.0:-maven\n    - org.springframework.security:spring-security-test:4.1.3.RELEASE\n        - org.springframework.security:spring-security-core:5.2.1.RELEASE\n            - org.springframework:spring-beans:5.2.2.RELEASE\n\n\n## References\n* Common Weakness Enumeration: [CWE-20](https://cwe.mitre.org/data/definitions/20.html)\n\n","text":"Spring Framework is vulnerable to a reflected file download (RFD) attack via improper input validation on filenames in a `Content-Disposition` header."},"properties":{"security-severity":"8.9","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-20"]},"defaultConfiguration":{"level":"error"}},{"id":"CVE-2021-22096 spring-beans 5.2.2.RELEASE: spring-security-test 4.1.3.RELEASE: org.springframework","shortDescription":{"text":"Transitive Dependency: spring-beans 5.2.2.RELEASE from spring-security-test 4.1.3.RELEASE (CVE-2021-22096)"},"fullDescription":{"text":"Spring Framework is vulnerable to log file injection due to the insufficient validation of user input in an undisclosed component. An attacker could leverage this issue in order to add arbitrary entries to a log file which could impact both the integrity issues and performance issues.\n\n**Note**: a follow-up to this issue was disclosed as **CVE-2021-22060** (**BDSA-2021-3236**), with further fixed releases that protect against additional types of input and in more places of the Spring Framework codebase."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| spring-beans 5.2.2.RELEASE  | 5.3.31  | 6.1.2 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/ba6e9d03-9fbd-4086-9631-99d1ad5e520c?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=09f17d81-b282-43ec-9f2b-36c8021d3ca7)\n\n\n## Description\nSpring Framework is vulnerable to log file injection due to the insufficient validation of user input in an undisclosed component. An attacker could leverage this issue in order to add arbitrary entries to a log file which could impact both the integrity issues and performance issues.\n\n**Note**: a follow-up to this issue was disclosed as **CVE-2021-22060** (**BDSA-2021-3236**), with further fixed releases that protect against additional types of input and in more places of the Spring Framework codebase.\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [CVE-2021-22096](https://openhub.net/vulnerabilities/bdsa/CVE-2021-22096) - Injection in Downstream Component\n\n\n\n## Solution\nFixed in versions [**5.3.14**](https://github.com/spring-projects/spring-framework/releases/tag/v5.3.14) and [**5.2.19**](https://github.com/spring-projects/spring-framework/releases/tag/v5.2.19.RELEASE).\n\nThe latest stable releases can be found [here](https://github.com/spring-projects/spring-framework/releases).\n\n\n\n## Dependency tree\n- org.owasp.webgoat.lesson:http-basics:v8.1.0:-maven\n    - org.springframework.security:spring-security-test:4.1.3.RELEASE\n        - org.springframework.security:spring-security-core:5.2.1.RELEASE\n            - org.springframework:spring-beans:5.2.2.RELEASE\n\n\n## References\n* Common Weakness Enumeration: [CWE-74](https://cwe.mitre.org/data/definitions/74.html)\n\n","text":"Spring Framework is vulnerable to log file injection due to the insufficient validation of user input in an undisclosed component. An attacker could leverage this issue in order to add arbitrary entries to a log file which could impact both the integrity issues and performance issues.\n\n**Note**: a follow-up to this issue was disclosed as **CVE-2021-22060** (**BDSA-2021-3236**), with further fixed releases that protect against additional types of input and in more places of the Spring Framework codebase."},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-74"]},"defaultConfiguration":{"level":"warning"}},{"id":"CVE-2021-22060 spring-beans 5.2.2.RELEASE: spring-security-test 4.1.3.RELEASE: org.springframework","shortDescription":{"text":"Transitive Dependency: spring-beans 5.2.2.RELEASE from spring-security-test 4.1.3.RELEASE (CVE-2021-22060)"},"fullDescription":{"text":"Spring Framework is vulnerable to log file injection due to the insufficient validation of user input in an undisclosed component. An attacker could leverage this issue in order to add arbitrary entries to a log file which could impact both the integrity issues and performance issues.\n\n**Note**: the vendor states this issue exists as a follow up to CVE-2021-22096 (BDSA-2022-0011) that protects against additional types of input and in more places of the Spring Framework codebase."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| spring-beans 5.2.2.RELEASE  | 5.3.31  | 6.1.2 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/ba6e9d03-9fbd-4086-9631-99d1ad5e520c?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=09f17d81-b282-43ec-9f2b-36c8021d3ca7)\n\n\n## Description\nSpring Framework is vulnerable to log file injection due to the insufficient validation of user input in an undisclosed component. An attacker could leverage this issue in order to add arbitrary entries to a log file which could impact both the integrity issues and performance issues.\n\n**Note**: the vendor states this issue exists as a follow up to CVE-2021-22096 (BDSA-2022-0011) that protects against additional types of input and in more places of the Spring Framework codebase.\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [CVE-2021-22060](https://openhub.net/vulnerabilities/bdsa/CVE-2021-22060) - Injection in Downstream Component\n\n\n\n## Solution\nFixed in versions [**5.3.14**](https://github.com/spring-projects/spring-framework/releases/tag/v5.3.14) and [**5.2.19**](https://github.com/spring-projects/spring-framework/releases/tag/v5.2.19.RELEASE).\n\nThe latest stable releases can be found [here](https://github.com/spring-projects/spring-framework/releases).\n\n\n\n## Dependency tree\n- org.owasp.webgoat.lesson:http-basics:v8.1.0:-maven\n    - org.springframework.security:spring-security-test:4.1.3.RELEASE\n        - org.springframework.security:spring-security-core:5.2.1.RELEASE\n            - org.springframework:spring-beans:5.2.2.RELEASE\n\n\n## References\n* Common Weakness Enumeration: [CWE-74](https://cwe.mitre.org/data/definitions/74.html)\n\n","text":"Spring Framework is vulnerable to log file injection due to the insufficient validation of user input in an undisclosed component. An attacker could leverage this issue in order to add arbitrary entries to a log file which could impact both the integrity issues and performance issues.\n\n**Note**: the vendor states this issue exists as a follow up to CVE-2021-22096 (BDSA-2022-0011) that protects against additional types of input and in more places of the Spring Framework codebase."},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-74"]},"defaultConfiguration":{"level":"warning"}},{"id":"CVE-2022-22950 spring-beans 5.2.2.RELEASE: spring-security-test 4.1.3.RELEASE: org.springframework","shortDescription":{"text":"Transitive Dependency: spring-beans 5.2.2.RELEASE from spring-security-test 4.1.3.RELEASE (CVE-2022-22950)"},"fullDescription":{"text":"Spring-Framework's spring-expression is vulnerable to a denial-of-service (DoS) condition. This allows an attacker to use crafted input to cause the spring-expression process to crash due to an exception."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| spring-beans 5.2.2.RELEASE  | 5.3.31  | 6.1.2 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/ba6e9d03-9fbd-4086-9631-99d1ad5e520c?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=09f17d81-b282-43ec-9f2b-36c8021d3ca7)\n\n\n## Description\nSpring-Framework's spring-expression is vulnerable to a denial-of-service (DoS) condition. This allows an attacker to use crafted input to cause the spring-expression process to crash due to an exception.\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [CVE-2022-22950](https://openhub.net/vulnerabilities/bdsa/CVE-2022-22950) - Allocation of Resources Without Limits or Throttling\n\n\n\n## Solution\nFixed in version [**5.3.17**](https://github.com/spring-projects/spring-framework/releases/tag/v5.3.17) by [this](https://github.com/spring-projects/spring-framework/commit/94af2ca06bf711de03286999b1c64a703d6de552) commit.\n\nThe latest stable releases can be found [here](https://github.com/spring-projects/spring-framework/tags).\n\n\n\n## Dependency tree\n- org.owasp.webgoat.lesson:http-basics:v8.1.0:-maven\n    - org.springframework.security:spring-security-test:4.1.3.RELEASE\n        - org.springframework.security:spring-security-core:5.2.1.RELEASE\n            - org.springframework:spring-beans:5.2.2.RELEASE\n\n\n## References\n* Common Weakness Enumeration: [CWE-770](https://cwe.mitre.org/data/definitions/770.html)\n\n","text":"Spring-Framework's spring-expression is vulnerable to a denial-of-service (DoS) condition. This allows an attacker to use crafted input to cause the spring-expression process to crash due to an exception."},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-770"]},"defaultConfiguration":{"level":"warning"}},{"id":"CVE-2021-22118 spring-beans 5.2.2.RELEASE: spring-security-test 4.1.3.RELEASE: org.springframework","shortDescription":{"text":"Transitive Dependency: spring-beans 5.2.2.RELEASE from spring-security-test 4.1.3.RELEASE (CVE-2021-22118)"},"fullDescription":{"text":"Spring Framework is vulnerable to privilege escalation due to the creation of unsafe temporary directories by the WebFlux component. A local authenticated attacker could modify arbitrary files via maliciously crafted `multipart` requests. \n\nThis vulnerability does not affect Spring MVC applications, or applications that do not handle `multipart` file requests."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| spring-beans 5.2.2.RELEASE  | 5.3.31  | 6.1.2 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/ba6e9d03-9fbd-4086-9631-99d1ad5e520c?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=09f17d81-b282-43ec-9f2b-36c8021d3ca7)\n\n\n## Description\nSpring Framework is vulnerable to privilege escalation due to the creation of unsafe temporary directories by the WebFlux component. A local authenticated attacker could modify arbitrary files via maliciously crafted `multipart` requests. \n\nThis vulnerability does not affect Spring MVC applications, or applications that do not handle `multipart` file requests.\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [CVE-2021-22118](https://openhub.net/vulnerabilities/bdsa/CVE-2021-22118) - Third-party component usage\n\n\n\n## Solution\nFixed in [**5.3.7**](https://github.com/spring-projects/spring-framework/releases/tag/v5.3.7)  by [this](https://github.com/spring-projects/spring-framework/commit/cce60c479c22101f24b2b4abebb6d79440b120d1) commit and [this](https://github.com/spring-projects/spring-framework/commit/0d0d75e25322d8161002d861fff3ec04ba8be5ac) commit, and in [**5.2.15**](https://github.com/spring-projects/spring-framework/releases/tag/v5.2.15.RELEASE) by [this](https://github.com/spring-projects/spring-framework/commit/85ad63bd35f6f10fa5549ba9a11869144338bd8a) commit.\n\nThe latest stable releases are available [here](https://github.com/spring-projects/spring-framework/releases/).\n\n\n\n## Dependency tree\n- org.owasp.webgoat.lesson:http-basics:v8.1.0:-maven\n    - org.springframework.security:spring-security-test:4.1.3.RELEASE\n        - org.springframework.security:spring-security-core:5.2.1.RELEASE\n            - org.springframework:spring-beans:5.2.2.RELEASE\n\n\n## References\n* Common Weakness Enumeration: [CWE-264](https://cwe.mitre.org/data/definitions/264.html)\n* Common Weakness Enumeration: [CWE-376](https://cwe.mitre.org/data/definitions/376.html)\n\n","text":"Spring Framework is vulnerable to privilege escalation due to the creation of unsafe temporary directories by the WebFlux component. A local authenticated attacker could modify arbitrary files via maliciously crafted `multipart` requests. \n\nThis vulnerability does not affect Spring MVC applications, or applications that do not handle `multipart` file requests."},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-264","external/cwe/cwe-376"]},"defaultConfiguration":{"level":"warning"}},{"id":"CVE-2022-22970 spring-beans 5.2.2.RELEASE: spring-security-test 4.1.3.RELEASE: org.springframework","shortDescription":{"text":"Transitive Dependency: spring-beans 5.2.2.RELEASE from spring-security-test 4.1.3.RELEASE (CVE-2022-22970)"},"fullDescription":{"text":"Spring Framework is vulnerable to denial-of-service (DoS) due to the improper implementation of data binding functionality. A remote attacker could cause a vulnerable server to crash if that server provides file upload functionality."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| spring-beans 5.2.2.RELEASE  | 5.3.31  | 6.1.2 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/ba6e9d03-9fbd-4086-9631-99d1ad5e520c?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=09f17d81-b282-43ec-9f2b-36c8021d3ca7)\n\n\n## Description\nSpring Framework is vulnerable to denial-of-service (DoS) due to the improper implementation of data binding functionality. A remote attacker could cause a vulnerable server to crash if that server provides file upload functionality.\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [CVE-2022-22970](https://openhub.net/vulnerabilities/bdsa/CVE-2022-22970) - Incorrect Provision of Specified Functionality\n\n\n\n## Solution\nFixed in version [**5.3.20**](https://github.com/spring-projects/spring-framework/releases/tag/v5.3.20) and in version [**5.2.22**](https://github.com/spring-projects/spring-framework/releases/tag/v5.2.22.RELEASE).\n\nThe latest stable releases can be found [here](https://github.com/spring-projects/spring-framework/releases).\n\n\n\n## Dependency tree\n- org.owasp.webgoat.lesson:http-basics:v8.1.0:-maven\n    - org.springframework.security:spring-security-test:4.1.3.RELEASE\n        - org.springframework.security:spring-security-core:5.2.1.RELEASE\n            - org.springframework:spring-beans:5.2.2.RELEASE\n\n\n## References\n* Common Weakness Enumeration: [CWE-684](https://cwe.mitre.org/data/definitions/684.html)\n\n","text":"Spring Framework is vulnerable to denial-of-service (DoS) due to the improper implementation of data binding functionality. A remote attacker could cause a vulnerable server to crash if that server provides file upload functionality."},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-684"]},"defaultConfiguration":{"level":"warning"}},{"id":"CVE-2022-22971 spring-beans 5.2.2.RELEASE: spring-security-test 4.1.3.RELEASE: org.springframework","shortDescription":{"text":"Transitive Dependency: spring-beans 5.2.2.RELEASE from spring-security-test 4.1.3.RELEASE (CVE-2022-22971)"},"fullDescription":{"text":"Spring Framework is vulnerable to denial-of-service (DoS) due to the improper handling of the STOMP protocol for websockets. A remote authenticated attacker could leverage this issue in order to cause a server to crash."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| spring-beans 5.2.2.RELEASE  | 5.3.31  | 6.1.2 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/ba6e9d03-9fbd-4086-9631-99d1ad5e520c?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=09f17d81-b282-43ec-9f2b-36c8021d3ca7)\n\n\n## Description\nSpring Framework is vulnerable to denial-of-service (DoS) due to the improper handling of the STOMP protocol for websockets. A remote authenticated attacker could leverage this issue in order to cause a server to crash.\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [CVE-2022-22971](https://openhub.net/vulnerabilities/bdsa/CVE-2022-22971) - Incorrect Provision of Specified Functionality\n\n\n\n## Solution\nFixed in version [**5.3.20**](https://github.com/spring-projects/spring-framework/releases/tag/v5.3.20) and in version [**5.2.22**](https://github.com/spring-projects/spring-framework/releases/tag/v5.2.22.RELEASE).\n\nThe latest stable releases can be found [here](https://github.com/spring-projects/spring-framework/releases).\n\n\n\n## Dependency tree\n- org.owasp.webgoat.lesson:http-basics:v8.1.0:-maven\n    - org.springframework.security:spring-security-test:4.1.3.RELEASE\n        - org.springframework.security:spring-security-core:5.2.1.RELEASE\n            - org.springframework:spring-beans:5.2.2.RELEASE\n\n\n## References\n* Common Weakness Enumeration: [CWE-684](https://cwe.mitre.org/data/definitions/684.html)\n\n","text":"Spring Framework is vulnerable to denial-of-service (DoS) due to the improper handling of the STOMP protocol for websockets. A remote authenticated attacker could leverage this issue in order to cause a server to crash."},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-684"]},"defaultConfiguration":{"level":"warning"}},{"id":"CVE-2023-20861 spring-beans 5.2.2.RELEASE: spring-security-test 4.1.3.RELEASE: org.springframework","shortDescription":{"text":"Transitive Dependency: spring-beans 5.2.2.RELEASE from spring-security-test 4.1.3.RELEASE (CVE-2023-20861)"},"fullDescription":{"text":"Spring Framework is vulnerable to denial-of-service (DoS) via specially crafted SpEL expressions. An attacker could exploit this issue by passing a crafted SpEL expression to the application which may result in a crash."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| spring-beans 5.2.2.RELEASE  | 5.3.31  | 6.1.2 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/ba6e9d03-9fbd-4086-9631-99d1ad5e520c?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=09f17d81-b282-43ec-9f2b-36c8021d3ca7)\n\n\n## Description\nSpring Framework is vulnerable to denial-of-service (DoS) via specially crafted SpEL expressions. An attacker could exploit this issue by passing a crafted SpEL expression to the application which may result in a crash.\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [CVE-2023-20861](https://openhub.net/vulnerabilities/bdsa/CVE-2023-20861) - Weak Input Validation\n\n\n\n## Solution\nFixed in:\n* [**5.2.23**](https://github.com/spring-projects/spring-framework/releases/tag/v5.2.23.RELEASE) by [this](https://github.com/spring-projects/spring-framework/commit/52c93b1c4b24d70de233a958e60e7c5822bd274f) commit,\n* [**5.3.26**](https://github.com/spring-projects/spring-framework/releases/tag/v5.3.26) by [this](https://github.com/spring-projects/spring-framework/commit/430fc25acad2e85cbdddcd52b64481691f03ebd1) commit,\n* [**6.0.7**](https://github.com/spring-projects/spring-framework/releases/tag/v6.0.7) by [this](https://github.com/spring-projects/spring-framework/commit/935c29e3ddba5b19951e54f6685c70ed45d9cbe5) commit.\n\nThe latest stable releases are available [here](https://github.com/spring-projects/spring-framework/releases).\n\n\n\n## Dependency tree\n- org.owasp.webgoat.lesson:http-basics:v8.1.0:-maven\n    - org.springframework.security:spring-security-test:4.1.3.RELEASE\n        - org.springframework.security:spring-security-core:5.2.1.RELEASE\n            - org.springframework:spring-beans:5.2.2.RELEASE\n\n\n## References\n* Common Weakness Enumeration: [CWE-20](https://cwe.mitre.org/data/definitions/20.html)\n\n","text":"Spring Framework is vulnerable to denial-of-service (DoS) via specially crafted SpEL expressions. An attacker could exploit this issue by passing a crafted SpEL expression to the application which may result in a crash."},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-20"]},"defaultConfiguration":{"level":"warning"}},{"id":"CVE-2023-20863 spring-beans 5.2.2.RELEASE: spring-security-test 4.1.3.RELEASE: org.springframework","shortDescription":{"text":"Transitive Dependency: spring-beans 5.2.2.RELEASE from spring-security-test 4.1.3.RELEASE (CVE-2023-20863)"},"fullDescription":{"text":"Spring Framework is vulnerable to denial-of-service (DoS) via specially crafted SpEL expressions."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| spring-beans 5.2.2.RELEASE  | 5.3.31  | 6.1.2 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/ba6e9d03-9fbd-4086-9631-99d1ad5e520c?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=09f17d81-b282-43ec-9f2b-36c8021d3ca7)\n\n\n## Description\nSpring Framework is vulnerable to denial-of-service (DoS) via specially crafted SpEL expressions.\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [CVE-2023-20863](https://openhub.net/vulnerabilities/bdsa/CVE-2023-20863) - Weak Input Validation\n\n\n\n## Solution\nFixed in:\n* [**5.2.24**](https://github.com/spring-projects/spring-framework/releases/tag/v5.2.24.RELEASE)\n* [**5.3.27**](https://github.com/spring-projects/spring-framework/releases/tag/v5.3.27)\n* [**6.0.8**](https://github.com/spring-projects/spring-framework/releases/tag/v6.0.8)\n\nThe latest stable releases are available [here](https://github.com/spring-projects/spring-framework/releases).\n\n\n\n## Dependency tree\n- org.owasp.webgoat.lesson:http-basics:v8.1.0:-maven\n    - org.springframework.security:spring-security-test:4.1.3.RELEASE\n        - org.springframework.security:spring-security-core:5.2.1.RELEASE\n            - org.springframework:spring-beans:5.2.2.RELEASE\n\n\n## References\n* Common Weakness Enumeration: [CWE-20](https://cwe.mitre.org/data/definitions/20.html)\n\n","text":"Spring Framework is vulnerable to denial-of-service (DoS) via specially crafted SpEL expressions."},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-20"]},"defaultConfiguration":{"level":"warning"}},{"id":"CVE-2020-5421 spring-beans 5.2.2.RELEASE: spring-security-test 4.1.3.RELEASE: org.springframework","shortDescription":{"text":"Transitive Dependency: spring-beans 5.2.2.RELEASE from spring-security-test 4.1.3.RELEASE (CVE-2020-5421)"},"fullDescription":{"text":"It was discovered that Spring Framework was vulnerable to RFD protection bypass. In some instances, depending on the browser used, an attacker could bypass the RFD attack protections via the use of a `jsessionid` path parameter."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| spring-beans 5.2.2.RELEASE  | 5.3.31  | 6.1.2 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/ba6e9d03-9fbd-4086-9631-99d1ad5e520c?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=09f17d81-b282-43ec-9f2b-36c8021d3ca7)\n\n\n## Description\nIt was discovered that Spring Framework was vulnerable to RFD protection bypass. In some instances, depending on the browser used, an attacker could bypass the RFD attack protections via the use of a `jsessionid` path parameter.\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [CVE-2020-5421](https://openhub.net/vulnerabilities/bdsa/CVE-2020-5421) - Weak Input Validation\n\n\n\n## Solution\nFixed in:\n* [**5.2.9**](https://github.com/spring-projects/spring-framework/releases/tag/v5.2.9.RELEASE) by [this](https://github.com/spring-projects/spring-framework/commit/899761f0a8890353dc01f10d2af96ae192f3e655) commit,\n* [**5.1.18**](https://github.com/spring-projects/spring-framework/releases/tag/v5.1.18.RELEASE) by [this](https://github.com/spring-projects/spring-framework/commit/a63c8886c00f30fea5b25f50ddf6f56c6eb957bd) commit,\n* [**5.0.19**](https://github.com/spring-projects/spring-framework/releases/tag/v5.0.19.RELEASE) by [this](https://github.com/spring-projects/spring-framework/commit/aec3a4c69e02d87f87258b0ab5c1d6c83f4cb44f) commit,\n* [**4.3.29**](https://github.com/spring-projects/spring-framework/releases/tag/v4.3.29.RELEASE) by [this](https://github.com/spring-projects/spring-framework/commit/2f75212eb667a30fe2fa9b5aca8f22d5e255821f) commit.\n\n\n\n## Dependency tree\n- org.owasp.webgoat.lesson:http-basics:v8.1.0:-maven\n    - org.springframework.security:spring-security-test:4.1.3.RELEASE\n        - org.springframework.security:spring-security-core:5.2.1.RELEASE\n            - org.springframework:spring-beans:5.2.2.RELEASE\n\n\n## References\n* Common Weakness Enumeration: [CWE-20](https://cwe.mitre.org/data/definitions/20.html)\n\n","text":"It was discovered that Spring Framework was vulnerable to RFD protection bypass. In some instances, depending on the browser used, an attacker could bypass the RFD attack protections via the use of a `jsessionid` path parameter."},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-20"]},"defaultConfiguration":{"level":"warning"}},{"id":"CVE-2022-22968 spring-beans 5.2.2.RELEASE: spring-security-test 4.1.3.RELEASE: org.springframework","shortDescription":{"text":"Transitive Dependency: spring-beans 5.2.2.RELEASE from spring-security-test 4.1.3.RELEASE (CVE-2022-22968)"},"fullDescription":{"text":"Spring Framework is vulnerable to data binding protection bypass due to improper validation of specified disallowed fields in `DataBinders`. This could be leveraged by an attacker to bypass the suggested workaround to **CVE-2022-22965** (**BDSA-2022-0858**) if it is improperly implemented."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| spring-beans 5.2.2.RELEASE  | 5.3.31  | 6.1.2 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/ba6e9d03-9fbd-4086-9631-99d1ad5e520c?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=09f17d81-b282-43ec-9f2b-36c8021d3ca7)\n\n\n## Description\nSpring Framework is vulnerable to data binding protection bypass due to improper validation of specified disallowed fields in `DataBinders`. This could be leveraged by an attacker to bypass the suggested workaround to **CVE-2022-22965** (**BDSA-2022-0858**) if it is improperly implemented.\n\n## Vulnerabilities(BDSA,CVE)\n:large_blue_circle: [CVE-2022-22968](https://openhub.net/vulnerabilities/bdsa/CVE-2022-22968) - Weak Input Validation\n\n\n\n## Solution\nFixed  in [**5.3.19**](https://github.com/spring-projects/spring-framework/releases/tag/v5.3.19) by [this](https://github.com/spring-projects/spring-framework/commit/a7cf19cec5ebd270f97a194d749e2d5701ad2ab7) commit and [**5.2.21**](https://github.com/spring-projects/spring-framework/releases/tag/v5.2.21.RELEASE) by [this](https://github.com/spring-projects/spring-framework/commit/833e750175349ab4fd502109a8b41af77e25cdea) commit.\n\n\n\n## Dependency tree\n- org.owasp.webgoat.lesson:http-basics:v8.1.0:-maven\n    - org.springframework.security:spring-security-test:4.1.3.RELEASE\n        - org.springframework.security:spring-security-core:5.2.1.RELEASE\n            - org.springframework:spring-beans:5.2.2.RELEASE\n\n\n## References\n* Common Weakness Enumeration: [CWE-20](https://cwe.mitre.org/data/definitions/20.html)\n\n","text":"Spring Framework is vulnerable to data binding protection bypass due to improper validation of specified disallowed fields in `DataBinders`. This could be leveraged by an attacker to bypass the suggested workaround to **CVE-2022-22965** (**BDSA-2022-0858**) if it is improperly implemented."},"properties":{"security-severity":"3.8","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-20"]},"defaultConfiguration":{"level":"note"}},{"id":"CVE-2022-0084 xnio-api 3.3.8.Final: spring-boot-starter-undertow 2.2.2.RELEASE: org.jboss.xnio","shortDescription":{"text":"Transitive Dependency: xnio-api 3.3.8.Final from spring-boot-starter-undertow 2.2.2.RELEASE (CVE-2022-0084)"},"fullDescription":{"text":"A flaw was found in XNIO, specifically in the notifyReadClosed method. The issue revealed this method was logging a message to another expected end. This flaw allows an attacker to send flawed requests to a server, possibly causing log contention-related performance concerns or an unwanted disk fill-up."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| xnio-api 3.3.8.Final  | 3.8.12.Final  | 3.8.12.Final |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/d70e94e3-41e7-4ff3-9c9d-08511b298af9?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=f690accd-82a8-497f-af60-df6b66c751e7)\n\n\n## Description\nA flaw was found in XNIO, specifically in the notifyReadClosed method. The issue revealed this method was logging a message to another expected end. This flaw allows an attacker to send flawed requests to a server, possibly causing log contention-related performance concerns or an unwanted disk fill-up.\n\n## Vulnerabilities(BDSA,CVE)\n:orange_circle: [CVE-2022-0084](https://openhub.net/vulnerabilities/bdsa/CVE-2022-0084) - Allocation of Resources Without Limits or Throttling\n\n\n\n\n\n\n\n## Dependency tree\n- org.owasp.webgoat:webgoat-container:v8.1.0:-maven\n    - org.springframework.boot:spring-boot-starter-undertow:2.2.2.RELEASE\n        - io.undertow:undertow-core:2.0.28.Final\n            - org.jboss.xnio:xnio-api:3.3.8.Final\n\n\n## References\n* Common Weakness Enumeration: [CWE-770](https://cwe.mitre.org/data/definitions/770.html)\n\n","text":"A flaw was found in XNIO, specifically in the notifyReadClosed method. The issue revealed this method was logging a message to another expected end. This flaw allows an attacker to send flawed requests to a server, possibly causing log contention-related performance concerns or an unwanted disk fill-up."},"properties":{"security-severity":"8.9","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-770"]},"defaultConfiguration":{"level":"error"}},{"id":"BDSA-2021-3731 spring-boot-starter-validation 2.2.2.RELEASE: spring-boot-starter-web 2.2.2.RELEASE: org.springframework.boot","shortDescription":{"text":"Transitive Dependency: spring-boot-starter-validation 2.2.2.RELEASE from spring-boot-starter-web 2.2.2.RELEASE (BDSA-2021-3731)"},"fullDescription":{"text":"Apache Log4j, as used in many popular services, is vulnerable to improperly allowing lightweight directory access protocol (LDAP) access via Java naming and directory interface (JNDI). A remote attacker able to supply the end application with specially crafted input that is then processed by the Log4j subcomponent could cause the execution of arbitrary Java code.\n\n**Note** \n\n- log4j-api packages by themselves do not contain the vulnerable functionality and are therefore unaffected. log4j-core packages and the upstream overarching source repository are affected.\n\n- A previously suggested mitigation of setting environment variable `LOG4J_FORMAT_MSG_NO_LOOKUPS=true` is not recommended. This mitigation has been proven inadequate against this vulnerability. \n\n- This vulnerability is partially fixed in [**2.15.0-rc2**](https://github.com/apache/logging-log4j2/releases/tag/log4j-2.15.0-rc2) by [this](https://github.com/apache/logging-log4j2/commit/001aaada7dab82c3c09cde5f8e14245dc9d8b454) commit and [this](https://github.com/apache/logging-log4j2/commit/bac0d8a35c7e354a0d3f706569116dff6c6bd658) commit. These fixes were deemed incomplete. See BDSA-2021-3779 (CVE-2021-45046) for more details.\n\nThis vulnerability is listed as exploitable by the Cybersecurity \u0026 Infrastructure Security Agency in their [Known Exploited Vulnerabilities Catalog](https://www.cisa.gov/known-exploited-vulnerabilities-catalog)."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| spring-boot-starter-validation 2.2.2.RELEASE  | 2.7.18  | 3.2.1 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/48431389-4a2f-44ed-8597-55184ffc0e88?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=ee1b331d-05e0-4bd1-b6ef-727c3b98e324)\n\n\n## Description\nApache Log4j, as used in many popular services, is vulnerable to improperly allowing lightweight directory access protocol (LDAP) access via Java naming and directory interface (JNDI). A remote attacker able to supply the end application with specially crafted input that is then processed by the Log4j subcomponent could cause the execution of arbitrary Java code.\n\n**Note** \n\n- log4j-api packages by themselves do not contain the vulnerable functionality and are therefore unaffected. log4j-core packages and the upstream overarching source repository are affected.\n\n- A previously suggested mitigation of setting environment variable `LOG4J_FORMAT_MSG_NO_LOOKUPS=true` is not recommended. This mitigation has been proven inadequate against this vulnerability. \n\n- This vulnerability is partially fixed in [**2.15.0-rc2**](https://github.com/apache/logging-log4j2/releases/tag/log4j-2.15.0-rc2) by [this](https://github.com/apache/logging-log4j2/commit/001aaada7dab82c3c09cde5f8e14245dc9d8b454) commit and [this](https://github.com/apache/logging-log4j2/commit/bac0d8a35c7e354a0d3f706569116dff6c6bd658) commit. These fixes were deemed incomplete. See BDSA-2021-3779 (CVE-2021-45046) for more details.\n\nThis vulnerability is listed as exploitable by the Cybersecurity \u0026 Infrastructure Security Agency in their [Known Exploited Vulnerabilities Catalog](https://www.cisa.gov/known-exploited-vulnerabilities-catalog).\n\n## Vulnerabilities(BDSA,CVE)\n:red_circle: [BDSA-2021-3731](https://openhub.net/vulnerabilities/bdsa/BDSA-2021-3731) - Insecure Object Deserialization\n\n\n\n## Solution\nFixed in versions:\n*  [**2.16.0-rc1**](https://github.com/apache/logging-log4j2/releases/tag/log4j-2.16.0-rc1) by [this](https://github.com/apache/logging-log4j2/commit/27972043b76c9645476f561c5adc483dec6d3f5d) commit.\n*  [**2.12.2-rc1**](https://github.com/apache/logging-log4j2/releases/tag/log4j-2.12.2-rc1) by [this](https://github.com/apache/logging-log4j2/commit/f819c83804152cb6ed94cb408302e36b21b65053) commit and [this](https://github.com/apache/logging-log4j2/commit/70edc233343815d5efa043b54294a6fb065aa1c5) commit.\n*   [**2.3.1-rc1**](https://github.com/apache/logging-log4j2/releases/tag/log4j-2.3.1-rc1) by [this](https://github.com/apache/logging-log4j2/commit/be848dacbac6df30c4f32b2852e24446033ecf79) commit and [this](https://github.com/apache/logging-log4j2/commit/f6564bb993d547d0a371b75d869042c334bf57f0) commit.\n\nThe latest releases can be found [here](https://github.com/apache/logging-log4j2/tags).\n\nNOTE: It is recommended to upgrade to version  [**2.17.0**](https://downloads.apache.org/logging/log4j/2.17.0/). This recommendation is due to related vulnerabilities (BDSA-2021-3779, CVE-2021-45046) affecting the version that this vulnerability is fixed in.\n\n## Workaround\nThe vendor states that:\n\n\u003e This issue can be mitigated in prior releases (\u003c**2.16.0**) by removing the JndiLookup class from the classpath (example: `zip -q -d log4j-core-*.jar org/apache/logging/log4j/core/lookup/JndiLookup.class`).\n\n## Dependency tree\n- org.owasp.webgoat:webgoat-container:v8.1.0:-maven\n    - org.springframework.boot:spring-boot-starter-web:2.2.2.RELEASE\n        - org.springframework.boot:spring-boot-starter-validation:2.2.2.RELEASE\n\n\n## References\n* Common Weakness Enumeration: [CWE-502](https://cwe.mitre.org/data/definitions/502.html)\n\n","text":"Apache Log4j, as used in many popular services, is vulnerable to improperly allowing lightweight directory access protocol (LDAP) access via Java naming and directory interface (JNDI). A remote attacker able to supply the end application with specially crafted input that is then processed by the Log4j subcomponent could cause the execution of arbitrary Java code.\n\n**Note** \n\n- log4j-api packages by themselves do not contain the vulnerable functionality and are therefore unaffected. log4j-core packages and the upstream overarching source repository are affected.\n\n- A previously suggested mitigation of setting environment variable `LOG4J_FORMAT_MSG_NO_LOOKUPS=true` is not recommended. This mitigation has been proven inadequate against this vulnerability. \n\n- This vulnerability is partially fixed in [**2.15.0-rc2**](https://github.com/apache/logging-log4j2/releases/tag/log4j-2.15.0-rc2) by [this](https://github.com/apache/logging-log4j2/commit/001aaada7dab82c3c09cde5f8e14245dc9d8b454) commit and [this](https://github.com/apache/logging-log4j2/commit/bac0d8a35c7e354a0d3f706569116dff6c6bd658) commit. These fixes were deemed incomplete. See BDSA-2021-3779 (CVE-2021-45046) for more details.\n\nThis vulnerability is listed as exploitable by the Cybersecurity \u0026 Infrastructure Security Agency in their [Known Exploited Vulnerabilities Catalog](https://www.cisa.gov/known-exploited-vulnerabilities-catalog)."},"properties":{"security-severity":"9.1","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-502"]},"defaultConfiguration":{"level":"error"}},{"id":"CVE-2022-22965 spring-boot-starter-validation 2.2.2.RELEASE: spring-boot-starter-web 2.2.2.RELEASE: org.springframework.boot","shortDescription":{"text":"Transitive Dependency: spring-boot-starter-validation 2.2.2.RELEASE from spring-boot-starter-web 2.2.2.RELEASE (CVE-2022-22965)"},"fullDescription":{"text":"Spring Framework is vulnerable to a flaw in the access restrictions to the security sensitive `ClassLoader` property. The restrictions can be bypassed through alternative paths available with Java9 and later. An attacker can leverage this vulnerability to cause remote code execution (RCE).\n\n**Note** this issue exists because the restrictions that were introduced to prevent exploitation of BDSA-2010-0001 (CVE-2010-1622) can be bypassed on platforms where Java9 and later are in use.\n\nThis vulnerability is listed as exploitable by the Cybersecurity \u0026 Infrastructure Security Agency in their [Known Exploited Vulnerabilities Catalog](https://www.cisa.gov/known-exploited-vulnerabilities-catalog)."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| spring-boot-starter-validation 2.2.2.RELEASE  | 2.7.18  | 3.2.1 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/48431389-4a2f-44ed-8597-55184ffc0e88?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=ee1b331d-05e0-4bd1-b6ef-727c3b98e324)\n\n\n## Description\nSpring Framework is vulnerable to a flaw in the access restrictions to the security sensitive `ClassLoader` property. The restrictions can be bypassed through alternative paths available with Java9 and later. An attacker can leverage this vulnerability to cause remote code execution (RCE).\n\n**Note** this issue exists because the restrictions that were introduced to prevent exploitation of BDSA-2010-0001 (CVE-2010-1622) can be bypassed on platforms where Java9 and later are in use.\n\nThis vulnerability is listed as exploitable by the Cybersecurity \u0026 Infrastructure Security Agency in their [Known Exploited Vulnerabilities Catalog](https://www.cisa.gov/known-exploited-vulnerabilities-catalog).\n\n## Vulnerabilities(BDSA,CVE)\n:red_circle: [CVE-2022-22965](https://openhub.net/vulnerabilities/bdsa/CVE-2022-22965) - Incomplete List of Disallowed Inputs\n\n\n\n## Solution\nFixed in [**5.3.18**](https://github.com/spring-projects/spring-framework/releases/tag/v5.3.18) by [this](https://github.com/spring-projects/spring-framework/commit/002546b3e4b8d791ea6acccb81eb3168f51abb15) commit and  [**5.2.20**](https://github.com/spring-projects/spring-framework/releases/tag/v5.2.20.RELEASE) by [this](https://github.com/spring-projects/spring-framework/commit/996f701a1916d10202c1d0d281f06ab1f2e1117e) commit .\n\nThe latest releases can be found [here](https://github.com/spring-projects/spring-framework/tags).\n\n## Workaround\nAn official workaround for the issue has been outlined [here](https://spring.io/blog/2022/03/31/spring-framework-rce-early-announcement).\n\n## Dependency tree\n- org.owasp.webgoat:webgoat-container:v8.1.0:-maven\n    - org.springframework.boot:spring-boot-starter-web:2.2.2.RELEASE\n        - org.springframework.boot:spring-boot-starter-validation:2.2.2.RELEASE\n\n\n## References\n* Common Weakness Enumeration: [CWE-184](https://cwe.mitre.org/data/definitions/184.html)\n* Common Weakness Enumeration: [CWE-749](https://cwe.mitre.org/data/definitions/749.html)\n\n","text":"Spring Framework is vulnerable to a flaw in the access restrictions to the security sensitive `ClassLoader` property. The restrictions can be bypassed through alternative paths available with Java9 and later. An attacker can leverage this vulnerability to cause remote code execution (RCE).\n\n**Note** this issue exists because the restrictions that were introduced to prevent exploitation of BDSA-2010-0001 (CVE-2010-1622) can be bypassed on platforms where Java9 and later are in use.\n\nThis vulnerability is listed as exploitable by the Cybersecurity \u0026 Infrastructure Security Agency in their [Known Exploited Vulnerabilities Catalog](https://www.cisa.gov/known-exploited-vulnerabilities-catalog)."},"properties":{"security-severity":"9.1","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-184","external/cwe/cwe-749"]},"defaultConfiguration":{"level":"error"}},{"id":"CVE-2023-20873 spring-boot-starter-validation 2.2.2.RELEASE: spring-boot-starter-web 2.2.2.RELEASE: org.springframework.boot","shortDescription":{"text":"Transitive Dependency: spring-boot-starter-validation 2.2.2.RELEASE from spring-boot-starter-web 2.2.2.RELEASE (CVE-2023-20873)"},"fullDescription":{"text":"Spring framework contains a security bypass vulnerability when `/**` is used as a pattern in Spring Security configuration with the `/cloudfoundryapplication/**` component. The potential for security bypass exists due to the mismatch in pattern matching between Spring Security and Cloud Foundry.\n\n**Note**: The vendor has stated in their [advisory](https://spring.io/security/cve-2023-20873) that this application is not vulnerable if any of the following is true:\n* The application is not deployed to Cloud Foundry.\n* You have disabled Cloud Foundry actuator endpoints with `management.cloudfoundry.enabled` set to `false`.\n* Your application does not have handler mappings that can handle requests to `/cloudfoundryapplication/**`."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| spring-boot-starter-validation 2.2.2.RELEASE  | 2.7.18  | 3.2.1 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/48431389-4a2f-44ed-8597-55184ffc0e88?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=ee1b331d-05e0-4bd1-b6ef-727c3b98e324)\n\n\n## Description\nSpring framework contains a security bypass vulnerability when `/**` is used as a pattern in Spring Security configuration with the `/cloudfoundryapplication/**` component. The potential for security bypass exists due to the mismatch in pattern matching between Spring Security and Cloud Foundry.\n\n**Note**: The vendor has stated in their [advisory](https://spring.io/security/cve-2023-20873) that this application is not vulnerable if any of the following is true:\n* The application is not deployed to Cloud Foundry.\n* You have disabled Cloud Foundry actuator endpoints with `management.cloudfoundry.enabled` set to `false`.\n* Your application does not have handler mappings that can handle requests to `/cloudfoundryapplication/**`.\n\n## Vulnerabilities(BDSA,CVE)\n:orange_circle: [CVE-2023-20873](https://openhub.net/vulnerabilities/bdsa/CVE-2023-20873) - Improper Access Control\n\n\n\n## Solution\nFixed in [**3.1.0-RC1**](https://github.com/spring-projects/spring-boot/releases/tag/v3.1.0-RC1), [**3.0.6**](https://github.com/spring-projects/spring-boot/releases/tag/v3.0.6) and [**2.7.11**](https://github.com/spring-projects/spring-boot/releases/tag/v2.7.11)  by [this](https://github.com/spring-projects/spring-boot/commit/3522714c13b47af03bf42e7f2d5994af568cb1a7) commit.\n\nFixed in [**2.6.15**](https://github.com/spring-projects/spring-boot/releases/tag/v2.6.15) and [**2.5.15**](https://github.com/spring-projects/spring-boot/releases/tag/v2.5.15) by [this](https://github.com/spring-projects/spring-boot/commit/307f3c339912466e78fcdac648fff95a4edea573) commit.\n\nThe latest stable releases can be found [here](https://github.com/spring-projects/spring-boot/releases).\n\n## Workaround\nThe vendor has advised the following as a workaround:\n\u003eDisable Cloud Foundry actuator endpoints by setting `management.cloudfoundry.enabled` to `false`.\n\n## Dependency tree\n- org.owasp.webgoat:webgoat-container:v8.1.0:-maven\n    - org.springframework.boot:spring-boot-starter-web:2.2.2.RELEASE\n        - org.springframework.boot:spring-boot-starter-validation:2.2.2.RELEASE\n\n\n## References\n* Common Weakness Enumeration: [CWE-284](https://cwe.mitre.org/data/definitions/284.html)\n* Common Weakness Enumeration: [CWE-923](https://cwe.mitre.org/data/definitions/923.html)\n\n","text":"Spring framework contains a security bypass vulnerability when `/**` is used as a pattern in Spring Security configuration with the `/cloudfoundryapplication/**` component. The potential for security bypass exists due to the mismatch in pattern matching between Spring Security and Cloud Foundry.\n\n**Note**: The vendor has stated in their [advisory](https://spring.io/security/cve-2023-20873) that this application is not vulnerable if any of the following is true:\n* The application is not deployed to Cloud Foundry.\n* You have disabled Cloud Foundry actuator endpoints with `management.cloudfoundry.enabled` set to `false`.\n* Your application does not have handler mappings that can handle requests to `/cloudfoundryapplication/**`."},"properties":{"security-severity":"8.9","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-284","external/cwe/cwe-923"]},"defaultConfiguration":{"level":"error"}},{"id":"BDSA-2021-3817 spring-boot-starter-validation 2.2.2.RELEASE: spring-boot-starter-web 2.2.2.RELEASE: org.springframework.boot","shortDescription":{"text":"Transitive Dependency: spring-boot-starter-validation 2.2.2.RELEASE from spring-boot-starter-web 2.2.2.RELEASE (BDSA-2021-3817)"},"fullDescription":{"text":"Apache log4j is vulnerable to a denial-of-service (DoS) when uncontrolled recursion occurs through a self-referencing lookup.  An attacker can trigger a DoS with malicious input data that generates a recursive lookup  and consequent application crash.\n\nSuccessful attacks require the attacker to have access to Thread Context Map (MDC) input, and for log4j configured with non-default pattern layout with a Context Lookup.\n\nOnly the log4j-core JAR file is impacted by this vulnerability. Applications using only the log4j-api JAR file without the log4j-core JAR file are not impacted.\n\nApache Log4j is the only Logging Services subproject affected by this vulnerability. Other projects like Log4net  are not impacted."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| spring-boot-starter-validation 2.2.2.RELEASE  | 2.7.18  | 3.2.1 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/48431389-4a2f-44ed-8597-55184ffc0e88?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=ee1b331d-05e0-4bd1-b6ef-727c3b98e324)\n\n\n## Description\nApache log4j is vulnerable to a denial-of-service (DoS) when uncontrolled recursion occurs through a self-referencing lookup.  An attacker can trigger a DoS with malicious input data that generates a recursive lookup  and consequent application crash.\n\nSuccessful attacks require the attacker to have access to Thread Context Map (MDC) input, and for log4j configured with non-default pattern layout with a Context Lookup.\n\nOnly the log4j-core JAR file is impacted by this vulnerability. Applications using only the log4j-api JAR file without the log4j-core JAR file are not impacted.\n\nApache Log4j is the only Logging Services subproject affected by this vulnerability. Other projects like Log4net  are not impacted.\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [BDSA-2021-3817](https://openhub.net/vulnerabilities/bdsa/BDSA-2021-3817) - Loop with Unreachable Exit Condition ('Infinite Loop')\n\n\n\n## Solution\nFixed in version [**2.17.0**](https://downloads.apache.org/logging/log4j/2.17.0/)  by [this](https://github.com/apache/logging-log4j2/commit/806023265f8c905b2dd1d81fd2458f64b2ea0b5e) commit.\n\nFixed in [**2.12.3-rc1**](https://github.com/apache/logging-log4j2/releases/tag/log4j-2.12.3-rc1) by [this](https://github.com/apache/logging-log4j2/commit/bf7e916df6335713fe2219c7b3b523fb509deabc) commit.\n\nFixed in [**2.3.1-rc1**](https://github.com/apache/logging-log4j2/releases/tag/log4j-2.3.1-rc1) by [this](https://github.com/apache/logging-log4j2/commit/ce6b78d082aae89089cb3ad25cdd46e9ec70a70b) commit.\n\n\nThe latest stable releases can be found [here](https://github.com/apache/logging-log4j2/releases).\n\n## Workaround\nThe vendor advises that  this vulnerability can can be mitigated through one of the following:\n\n* In PatternLayout in the logging configuration, replace Context Lookups like `${ctx:loginId}` or `$${ctx:loginId}` with Thread Context Map patterns `(%X, %mdc, or %MDC)`.\n\n* Alternatively,  remove references in the configuration to Context Lookups like `${ctx:loginId}` or `$${ctx:loginId}` where they originate from sources external to the application such as HTTP headers or user input.\n\n## Dependency tree\n- org.owasp.webgoat:webgoat-container:v8.1.0:-maven\n    - org.springframework.boot:spring-boot-starter-web:2.2.2.RELEASE\n        - org.springframework.boot:spring-boot-starter-validation:2.2.2.RELEASE\n\n\n## References\n* Common Weakness Enumeration: [CWE-835](https://cwe.mitre.org/data/definitions/835.html)\n\n","text":"Apache log4j is vulnerable to a denial-of-service (DoS) when uncontrolled recursion occurs through a self-referencing lookup.  An attacker can trigger a DoS with malicious input data that generates a recursive lookup  and consequent application crash.\n\nSuccessful attacks require the attacker to have access to Thread Context Map (MDC) input, and for log4j configured with non-default pattern layout with a Context Lookup.\n\nOnly the log4j-core JAR file is impacted by this vulnerability. Applications using only the log4j-api JAR file without the log4j-core JAR file are not impacted.\n\nApache Log4j is the only Logging Services subproject affected by this vulnerability. Other projects like Log4net  are not impacted."},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-835"]},"defaultConfiguration":{"level":"warning"}},{"id":"BDSA-2021-3887 spring-boot-starter-validation 2.2.2.RELEASE: spring-boot-starter-web 2.2.2.RELEASE: org.springframework.boot","shortDescription":{"text":"Transitive Dependency: spring-boot-starter-validation 2.2.2.RELEASE from spring-boot-starter-web 2.2.2.RELEASE (BDSA-2021-3887)"},"fullDescription":{"text":"Apache Log4j contains a remote code execution (RCE) vulnerability. This allows an attacker that has permissions to modify the logging configuration files to input a malicious JDBC Appender with a data source referencing a JDNI URI. This can then lead to RCE.\n\n**Note:** This vulnerability impacts log4j-core."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| spring-boot-starter-validation 2.2.2.RELEASE  | 2.7.18  | 3.2.1 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/48431389-4a2f-44ed-8597-55184ffc0e88?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=ee1b331d-05e0-4bd1-b6ef-727c3b98e324)\n\n\n## Description\nApache Log4j contains a remote code execution (RCE) vulnerability. This allows an attacker that has permissions to modify the logging configuration files to input a malicious JDBC Appender with a data source referencing a JDNI URI. This can then lead to RCE.\n\n**Note:** This vulnerability impacts log4j-core.\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [BDSA-2021-3887](https://openhub.net/vulnerabilities/bdsa/BDSA-2021-3887) - Weak Input Validation\n\n\n\n## Solution\nFixed in versions:\n\n* [**2.3.2-rc1**](https://github.com/apache/logging-log4j2/releases/tag/log4j-2.3.2-rc1) by [this](https://github.com/apache/logging-log4j2/commit/ae4dc0c1a6389ae895f60451cd87e97e7b9d85c1) commit.\n* [**2.12.4-rc1**](https://github.com/apache/logging-log4j2/releases/tag/log4j-2.12.4-rc1) by [this](https://github.com/apache/logging-log4j2/commit/b3879958cb3b75eb16bf27e970538b6e4e130f1c) commit.\n* [**2.17.1-rc1**](https://github.com/apache/logging-log4j2/releases/tag/log4j-2.17.1-rc1) by [this](https://github.com/apache/logging-log4j2/commit/05db5f9527254632b59aed2a1d78a32c5ab74f16) commit.\n\nThe latest stable releases can be found [here](https://logging.apache.org/log4j/2.x/download.html).\n\n\n\n## Dependency tree\n- org.owasp.webgoat:webgoat-container:v8.1.0:-maven\n    - org.springframework.boot:spring-boot-starter-web:2.2.2.RELEASE\n        - org.springframework.boot:spring-boot-starter-validation:2.2.2.RELEASE\n\n\n## References\n* Common Weakness Enumeration: [CWE-20](https://cwe.mitre.org/data/definitions/20.html)\n\n","text":"Apache Log4j contains a remote code execution (RCE) vulnerability. This allows an attacker that has permissions to modify the logging configuration files to input a malicious JDBC Appender with a data source referencing a JDNI URI. This can then lead to RCE.\n\n**Note:** This vulnerability impacts log4j-core."},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-20"]},"defaultConfiguration":{"level":"warning"}},{"id":"CVE-2022-27772 spring-boot-starter-validation 2.2.2.RELEASE: spring-boot-starter-web 2.2.2.RELEASE: org.springframework.boot","shortDescription":{"text":"Transitive Dependency: spring-boot-starter-validation 2.2.2.RELEASE from spring-boot-starter-web 2.2.2.RELEASE (CVE-2022-27772)"},"fullDescription":{"text":"Spring Boot is vulnerable to privilege escalation due to a race condition which occurs during the creation of a temporary directory. A local attacker could create their own temporary directory by racing against Spring Boot and supply their own configuration files which would allow for the full takeover of the application."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| spring-boot-starter-validation 2.2.2.RELEASE  | 2.7.18  | 3.2.1 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/48431389-4a2f-44ed-8597-55184ffc0e88?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=ee1b331d-05e0-4bd1-b6ef-727c3b98e324)\n\n\n## Description\nSpring Boot is vulnerable to privilege escalation due to a race condition which occurs during the creation of a temporary directory. A local attacker could create their own temporary directory by racing against Spring Boot and supply their own configuration files which would allow for the full takeover of the application.\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [CVE-2022-27772](https://openhub.net/vulnerabilities/bdsa/CVE-2022-27772) - Race Condition due to Improper Synchronization\n\n\n\n## Solution\nFixed in [**2.2.11**](https://github.com/spring-projects/spring-boot/releases/tag/v2.2.11.RELEASE) by [this](https://github.com/spring-projects/spring-boot/commit/667ccdae84822072f9ea1a27ed5c77964c71002d) commit.\n\nThe latest stable releases can be found [here](https://github.com/spring-projects/spring-boot/releases).\n\n## Workaround\nAccording to the [Github Security Advisory](https://github.com/JLLeitschuh/security-research/security/advisories/GHSA-cm59-pr5q-cw85), setting the `java.io.tmpdir` system environment variable to a directory that is exclusively owned by the executing user will fix this vulnerability for all operating systems.\n\n## Dependency tree\n- org.owasp.webgoat:webgoat-container:v8.1.0:-maven\n    - org.springframework.boot:spring-boot-starter-web:2.2.2.RELEASE\n        - org.springframework.boot:spring-boot-starter-validation:2.2.2.RELEASE\n\n\n## References\n* Common Weakness Enumeration: [CWE-362](https://cwe.mitre.org/data/definitions/362.html)\n* Common Weakness Enumeration: [CWE-379](https://cwe.mitre.org/data/definitions/379.html)\n\n","text":"Spring Boot is vulnerable to privilege escalation due to a race condition which occurs during the creation of a temporary directory. A local attacker could create their own temporary directory by racing against Spring Boot and supply their own configuration files which would allow for the full takeover of the application."},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-362","external/cwe/cwe-379"]},"defaultConfiguration":{"level":"warning"}},{"id":"CVE-2023-20883 spring-boot-starter-validation 2.2.2.RELEASE: spring-boot-starter-web 2.2.2.RELEASE: org.springframework.boot","shortDescription":{"text":"Transitive Dependency: spring-boot-starter-validation 2.2.2.RELEASE from spring-boot-starter-web 2.2.2.RELEASE (CVE-2023-20883)"},"fullDescription":{"text":"Spring Boot is vulnerable to denial-of-service (DoS) via the welcome page when used to serve an application behind a reverse proxy cache. This will cause users to continuously be served a 404 response, preventing standard application use.\n\n\n**Note:** Spring have provided the following guidance for vulnerable criteria. \nAn application is vulnerable if all of the following are true:\n\n- \"The application has Spring MVC auto-configuration enabled. This is the case by default if Spring MVC is on the classpath.\"\n- \"The application makes use of Spring Boot's welcome page support, either static or templated.\"\n- \"Your application is deployed behind a proxy which caches 404 responses.\"\n\nThe application is not vulnerable if any of the following are true:\n\n- \"Spring MVC auto-configuration is disabled. This is true if `WebMvcAutoConfiguration` is explicitly excluded, if Spring MVC is not on the classpath, or if `spring.main.web-application-type` is set to a value other than `SERVLET`.\"\n- \"The application does not use Spring Boot's welcome page support.\"\n- \"You do not have a proxy which caches 404 responses.\""},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| spring-boot-starter-validation 2.2.2.RELEASE  | 2.7.18  | 3.2.1 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/48431389-4a2f-44ed-8597-55184ffc0e88?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=ee1b331d-05e0-4bd1-b6ef-727c3b98e324)\n\n\n## Description\nSpring Boot is vulnerable to denial-of-service (DoS) via the welcome page when used to serve an application behind a reverse proxy cache. This will cause users to continuously be served a 404 response, preventing standard application use.\n\n\n**Note:** Spring have provided the following guidance for vulnerable criteria. \nAn application is vulnerable if all of the following are true:\n\n- \"The application has Spring MVC auto-configuration enabled. This is the case by default if Spring MVC is on the classpath.\"\n- \"The application makes use of Spring Boot's welcome page support, either static or templated.\"\n- \"Your application is deployed behind a proxy which caches 404 responses.\"\n\nThe application is not vulnerable if any of the following are true:\n\n- \"Spring MVC auto-configuration is disabled. This is true if `WebMvcAutoConfiguration` is explicitly excluded, if Spring MVC is not on the classpath, or if `spring.main.web-application-type` is set to a value other than `SERVLET`.\"\n- \"The application does not use Spring Boot's welcome page support.\"\n- \"You do not have a proxy which caches 404 responses.\"\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [CVE-2023-20883](https://openhub.net/vulnerabilities/bdsa/CVE-2023-20883) - Insufficient Verification of Data Authenticity\n\n\n\n## Solution\nFixed in versions\n- [**2.5.15**](https://github.com/spring-projects/spring-boot/releases/tag/v2.5.15) by [this](https://github.com/spring-projects/spring-boot/commit/d7ff379fb8bb2c33319afeb45a343116b59e0ee2) commit,\n- [**2.6.15**](https://github.com/spring-projects/spring-boot/releases/tag/v2.6.15) by [this](https://github.com/spring-projects/spring-boot/commit/d7ff379fb8bb2c33319afeb45a343116b59e0ee2) commit,\n- [**2.7.12**](https://github.com/spring-projects/spring-boot/releases/tag/v2.7.12) by [this](https://github.com/spring-projects/spring-boot/commit/418dd1ba5bdad79b55a043000164bfcbda2acd78) commit,\n- [**3.0.7**](https://github.com/spring-projects/spring-boot/releases/tag/v3.0.7) by [this](https://github.com/spring-projects/spring-boot/commit/418dd1ba5bdad79b55a043000164bfcbda2acd78) commit,\n- [**3.1.0**](https://github.com/spring-projects/spring-boot/releases/tag/v3.1.0) by [this](https://github.com/spring-projects/spring-boot/commit/418dd1ba5bdad79b55a043000164bfcbda2acd78) commit.\n\nThe latest stable releases can be found [here](https://github.com/spring-projects/spring-boot/releases).\n\n## Workaround\nThe vendor has supplied the following workaround:\n\u003e \"configure the reverse proxy not to cache 404 responses and/or not to cache responses to requests to the root (`/`) of the application.\"\n\n## Dependency tree\n- org.owasp.webgoat:webgoat-container:v8.1.0:-maven\n    - org.springframework.boot:spring-boot-starter-web:2.2.2.RELEASE\n        - org.springframework.boot:spring-boot-starter-validation:2.2.2.RELEASE\n\n\n## References\n* Common Weakness Enumeration: [CWE-345](https://cwe.mitre.org/data/definitions/345.html)\n\n","text":"Spring Boot is vulnerable to denial-of-service (DoS) via the welcome page when used to serve an application behind a reverse proxy cache. This will cause users to continuously be served a 404 response, preventing standard application use.\n\n\n**Note:** Spring have provided the following guidance for vulnerable criteria. \nAn application is vulnerable if all of the following are true:\n\n- \"The application has Spring MVC auto-configuration enabled. This is the case by default if Spring MVC is on the classpath.\"\n- \"The application makes use of Spring Boot's welcome page support, either static or templated.\"\n- \"Your application is deployed behind a proxy which caches 404 responses.\"\n\nThe application is not vulnerable if any of the following are true:\n\n- \"Spring MVC auto-configuration is disabled. This is true if `WebMvcAutoConfiguration` is explicitly excluded, if Spring MVC is not on the classpath, or if `spring.main.web-application-type` is set to a value other than `SERVLET`.\"\n- \"The application does not use Spring Boot's welcome page support.\"\n- \"You do not have a proxy which caches 404 responses.\""},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-345"]},"defaultConfiguration":{"level":"warning"}},{"id":"CVE-2023-34055 spring-boot-starter-validation 2.2.2.RELEASE: spring-boot-starter-web 2.2.2.RELEASE: org.springframework.boot","shortDescription":{"text":"Transitive Dependency: spring-boot-starter-validation 2.2.2.RELEASE from spring-boot-starter-web 2.2.2.RELEASE (CVE-2023-34055)"},"fullDescription":{"text":"Spring Boot is vulnerable to denial-of-service (DoS). An unauthenticated user could trigger the vulnerability by providing specially crafted HTTP requests to a web metrics endpoint."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| spring-boot-starter-validation 2.2.2.RELEASE  | 2.7.18  | 3.2.1 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/48431389-4a2f-44ed-8597-55184ffc0e88?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=ee1b331d-05e0-4bd1-b6ef-727c3b98e324)\n\n\n## Description\nSpring Boot is vulnerable to denial-of-service (DoS). An unauthenticated user could trigger the vulnerability by providing specially crafted HTTP requests to a web metrics endpoint.\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [CVE-2023-34055](https://openhub.net/vulnerabilities/bdsa/CVE-2023-34055) - Third-party component usage\n\n\n\n## Solution\nFixed in:\n* [**3.1.6**](https://github.com/spring-projects/spring-boot/releases/tag/v3.1.6)\n* [**3.0.13**](https://github.com/spring-projects/spring-boot/releases/tag/v3.0.13)\n* [**2.7.18**](https://github.com/spring-projects/spring-boot/releases/tag/v2.7.18)\n\nThe latest stable releases can be found [here](https://github.com/spring-projects/spring-boot/releases).\n\n## Workaround\nThe vendor notes the following:\n\u003e As a temporary workaround, Spring Boot users can choose to disable web metrics with the following property: `management.metrics.enable.http.server.requests=false`\n\n## Dependency tree\n- org.owasp.webgoat:webgoat-container:v8.1.0:-maven\n    - org.springframework.boot:spring-boot-starter-web:2.2.2.RELEASE\n        - org.springframework.boot:spring-boot-starter-validation:2.2.2.RELEASE\n\n\n\n","text":"Spring Boot is vulnerable to denial-of-service (DoS). An unauthenticated user could trigger the vulnerability by providing specially crafted HTTP requests to a web metrics endpoint."},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","transitive_dependency","patch_available"]},"defaultConfiguration":{"level":"warning"}},{"id":"BDSA-2021-3731 spring-boot-starter-logging 2.2.2.RELEASE: spring-boot-starter-test 2.2.2.RELEASE: org.springframework.boot","shortDescription":{"text":"Transitive Dependency: spring-boot-starter-logging 2.2.2.RELEASE from spring-boot-starter-test 2.2.2.RELEASE (BDSA-2021-3731)"},"fullDescription":{"text":"Apache Log4j, as used in many popular services, is vulnerable to improperly allowing lightweight directory access protocol (LDAP) access via Java naming and directory interface (JNDI). A remote attacker able to supply the end application with specially crafted input that is then processed by the Log4j subcomponent could cause the execution of arbitrary Java code.\n\n**Note** \n\n- log4j-api packages by themselves do not contain the vulnerable functionality and are therefore unaffected. log4j-core packages and the upstream overarching source repository are affected.\n\n- A previously suggested mitigation of setting environment variable `LOG4J_FORMAT_MSG_NO_LOOKUPS=true` is not recommended. This mitigation has been proven inadequate against this vulnerability. \n\n- This vulnerability is partially fixed in [**2.15.0-rc2**](https://github.com/apache/logging-log4j2/releases/tag/log4j-2.15.0-rc2) by [this](https://github.com/apache/logging-log4j2/commit/001aaada7dab82c3c09cde5f8e14245dc9d8b454) commit and [this](https://github.com/apache/logging-log4j2/commit/bac0d8a35c7e354a0d3f706569116dff6c6bd658) commit. These fixes were deemed incomplete. See BDSA-2021-3779 (CVE-2021-45046) for more details.\n\nThis vulnerability is listed as exploitable by the Cybersecurity \u0026 Infrastructure Security Agency in their [Known Exploited Vulnerabilities Catalog](https://www.cisa.gov/known-exploited-vulnerabilities-catalog)."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| spring-boot-starter-logging 2.2.2.RELEASE  | 2.7.18  | 3.2.1 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/48431389-4a2f-44ed-8597-55184ffc0e88?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=ee1b331d-05e0-4bd1-b6ef-727c3b98e324)\n\n\n## Description\nApache Log4j, as used in many popular services, is vulnerable to improperly allowing lightweight directory access protocol (LDAP) access via Java naming and directory interface (JNDI). A remote attacker able to supply the end application with specially crafted input that is then processed by the Log4j subcomponent could cause the execution of arbitrary Java code.\n\n**Note** \n\n- log4j-api packages by themselves do not contain the vulnerable functionality and are therefore unaffected. log4j-core packages and the upstream overarching source repository are affected.\n\n- A previously suggested mitigation of setting environment variable `LOG4J_FORMAT_MSG_NO_LOOKUPS=true` is not recommended. This mitigation has been proven inadequate against this vulnerability. \n\n- This vulnerability is partially fixed in [**2.15.0-rc2**](https://github.com/apache/logging-log4j2/releases/tag/log4j-2.15.0-rc2) by [this](https://github.com/apache/logging-log4j2/commit/001aaada7dab82c3c09cde5f8e14245dc9d8b454) commit and [this](https://github.com/apache/logging-log4j2/commit/bac0d8a35c7e354a0d3f706569116dff6c6bd658) commit. These fixes were deemed incomplete. See BDSA-2021-3779 (CVE-2021-45046) for more details.\n\nThis vulnerability is listed as exploitable by the Cybersecurity \u0026 Infrastructure Security Agency in their [Known Exploited Vulnerabilities Catalog](https://www.cisa.gov/known-exploited-vulnerabilities-catalog).\n\n## Vulnerabilities(BDSA,CVE)\n:red_circle: [BDSA-2021-3731](https://openhub.net/vulnerabilities/bdsa/BDSA-2021-3731) - Insecure Object Deserialization\n\n\n\n## Solution\nFixed in versions:\n*  [**2.16.0-rc1**](https://github.com/apache/logging-log4j2/releases/tag/log4j-2.16.0-rc1) by [this](https://github.com/apache/logging-log4j2/commit/27972043b76c9645476f561c5adc483dec6d3f5d) commit.\n*  [**2.12.2-rc1**](https://github.com/apache/logging-log4j2/releases/tag/log4j-2.12.2-rc1) by [this](https://github.com/apache/logging-log4j2/commit/f819c83804152cb6ed94cb408302e36b21b65053) commit and [this](https://github.com/apache/logging-log4j2/commit/70edc233343815d5efa043b54294a6fb065aa1c5) commit.\n*   [**2.3.1-rc1**](https://github.com/apache/logging-log4j2/releases/tag/log4j-2.3.1-rc1) by [this](https://github.com/apache/logging-log4j2/commit/be848dacbac6df30c4f32b2852e24446033ecf79) commit and [this](https://github.com/apache/logging-log4j2/commit/f6564bb993d547d0a371b75d869042c334bf57f0) commit.\n\nThe latest releases can be found [here](https://github.com/apache/logging-log4j2/tags).\n\nNOTE: It is recommended to upgrade to version  [**2.17.0**](https://downloads.apache.org/logging/log4j/2.17.0/). This recommendation is due to related vulnerabilities (BDSA-2021-3779, CVE-2021-45046) affecting the version that this vulnerability is fixed in.\n\n## Workaround\nThe vendor states that:\n\n\u003e This issue can be mitigated in prior releases (\u003c**2.16.0**) by removing the JndiLookup class from the classpath (example: `zip -q -d log4j-core-*.jar org/apache/logging/log4j/core/lookup/JndiLookup.class`).\n\n## Dependency tree\n- org.owasp.webgoat.lesson:http-basics:v8.1.0:-maven\n    - org.springframework.boot:spring-boot-starter-test:2.2.2.RELEASE\n        - org.springframework.boot:spring-boot-starter:2.2.2.RELEASE\n            - org.springframework.boot:spring-boot-starter-logging:2.2.2.RELEASE\n\n\n## References\n* Common Weakness Enumeration: [CWE-502](https://cwe.mitre.org/data/definitions/502.html)\n\n","text":"Apache Log4j, as used in many popular services, is vulnerable to improperly allowing lightweight directory access protocol (LDAP) access via Java naming and directory interface (JNDI). A remote attacker able to supply the end application with specially crafted input that is then processed by the Log4j subcomponent could cause the execution of arbitrary Java code.\n\n**Note** \n\n- log4j-api packages by themselves do not contain the vulnerable functionality and are therefore unaffected. log4j-core packages and the upstream overarching source repository are affected.\n\n- A previously suggested mitigation of setting environment variable `LOG4J_FORMAT_MSG_NO_LOOKUPS=true` is not recommended. This mitigation has been proven inadequate against this vulnerability. \n\n- This vulnerability is partially fixed in [**2.15.0-rc2**](https://github.com/apache/logging-log4j2/releases/tag/log4j-2.15.0-rc2) by [this](https://github.com/apache/logging-log4j2/commit/001aaada7dab82c3c09cde5f8e14245dc9d8b454) commit and [this](https://github.com/apache/logging-log4j2/commit/bac0d8a35c7e354a0d3f706569116dff6c6bd658) commit. These fixes were deemed incomplete. See BDSA-2021-3779 (CVE-2021-45046) for more details.\n\nThis vulnerability is listed as exploitable by the Cybersecurity \u0026 Infrastructure Security Agency in their [Known Exploited Vulnerabilities Catalog](https://www.cisa.gov/known-exploited-vulnerabilities-catalog)."},"properties":{"security-severity":"9.1","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-502"]},"defaultConfiguration":{"level":"error"}},{"id":"CVE-2022-22965 spring-boot-starter-logging 2.2.2.RELEASE: spring-boot-starter-test 2.2.2.RELEASE: org.springframework.boot","shortDescription":{"text":"Transitive Dependency: spring-boot-starter-logging 2.2.2.RELEASE from spring-boot-starter-test 2.2.2.RELEASE (CVE-2022-22965)"},"fullDescription":{"text":"Spring Framework is vulnerable to a flaw in the access restrictions to the security sensitive `ClassLoader` property. The restrictions can be bypassed through alternative paths available with Java9 and later. An attacker can leverage this vulnerability to cause remote code execution (RCE).\n\n**Note** this issue exists because the restrictions that were introduced to prevent exploitation of BDSA-2010-0001 (CVE-2010-1622) can be bypassed on platforms where Java9 and later are in use.\n\nThis vulnerability is listed as exploitable by the Cybersecurity \u0026 Infrastructure Security Agency in their [Known Exploited Vulnerabilities Catalog](https://www.cisa.gov/known-exploited-vulnerabilities-catalog)."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| spring-boot-starter-logging 2.2.2.RELEASE  | 2.7.18  | 3.2.1 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/48431389-4a2f-44ed-8597-55184ffc0e88?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=ee1b331d-05e0-4bd1-b6ef-727c3b98e324)\n\n\n## Description\nSpring Framework is vulnerable to a flaw in the access restrictions to the security sensitive `ClassLoader` property. The restrictions can be bypassed through alternative paths available with Java9 and later. An attacker can leverage this vulnerability to cause remote code execution (RCE).\n\n**Note** this issue exists because the restrictions that were introduced to prevent exploitation of BDSA-2010-0001 (CVE-2010-1622) can be bypassed on platforms where Java9 and later are in use.\n\nThis vulnerability is listed as exploitable by the Cybersecurity \u0026 Infrastructure Security Agency in their [Known Exploited Vulnerabilities Catalog](https://www.cisa.gov/known-exploited-vulnerabilities-catalog).\n\n## Vulnerabilities(BDSA,CVE)\n:red_circle: [CVE-2022-22965](https://openhub.net/vulnerabilities/bdsa/CVE-2022-22965) - Incomplete List of Disallowed Inputs\n\n\n\n## Solution\nFixed in [**5.3.18**](https://github.com/spring-projects/spring-framework/releases/tag/v5.3.18) by [this](https://github.com/spring-projects/spring-framework/commit/002546b3e4b8d791ea6acccb81eb3168f51abb15) commit and  [**5.2.20**](https://github.com/spring-projects/spring-framework/releases/tag/v5.2.20.RELEASE) by [this](https://github.com/spring-projects/spring-framework/commit/996f701a1916d10202c1d0d281f06ab1f2e1117e) commit .\n\nThe latest releases can be found [here](https://github.com/spring-projects/spring-framework/tags).\n\n## Workaround\nAn official workaround for the issue has been outlined [here](https://spring.io/blog/2022/03/31/spring-framework-rce-early-announcement).\n\n## Dependency tree\n- org.owasp.webgoat.lesson:http-basics:v8.1.0:-maven\n    - org.springframework.boot:spring-boot-starter-test:2.2.2.RELEASE\n        - org.springframework.boot:spring-boot-starter:2.2.2.RELEASE\n            - org.springframework.boot:spring-boot-starter-logging:2.2.2.RELEASE\n\n\n## References\n* Common Weakness Enumeration: [CWE-184](https://cwe.mitre.org/data/definitions/184.html)\n* Common Weakness Enumeration: [CWE-749](https://cwe.mitre.org/data/definitions/749.html)\n\n","text":"Spring Framework is vulnerable to a flaw in the access restrictions to the security sensitive `ClassLoader` property. The restrictions can be bypassed through alternative paths available with Java9 and later. An attacker can leverage this vulnerability to cause remote code execution (RCE).\n\n**Note** this issue exists because the restrictions that were introduced to prevent exploitation of BDSA-2010-0001 (CVE-2010-1622) can be bypassed on platforms where Java9 and later are in use.\n\nThis vulnerability is listed as exploitable by the Cybersecurity \u0026 Infrastructure Security Agency in their [Known Exploited Vulnerabilities Catalog](https://www.cisa.gov/known-exploited-vulnerabilities-catalog)."},"properties":{"security-severity":"9.1","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-184","external/cwe/cwe-749"]},"defaultConfiguration":{"level":"error"}},{"id":"CVE-2023-20873 spring-boot-starter-logging 2.2.2.RELEASE: spring-boot-starter-test 2.2.2.RELEASE: org.springframework.boot","shortDescription":{"text":"Transitive Dependency: spring-boot-starter-logging 2.2.2.RELEASE from spring-boot-starter-test 2.2.2.RELEASE (CVE-2023-20873)"},"fullDescription":{"text":"Spring framework contains a security bypass vulnerability when `/**` is used as a pattern in Spring Security configuration with the `/cloudfoundryapplication/**` component. The potential for security bypass exists due to the mismatch in pattern matching between Spring Security and Cloud Foundry.\n\n**Note**: The vendor has stated in their [advisory](https://spring.io/security/cve-2023-20873) that this application is not vulnerable if any of the following is true:\n* The application is not deployed to Cloud Foundry.\n* You have disabled Cloud Foundry actuator endpoints with `management.cloudfoundry.enabled` set to `false`.\n* Your application does not have handler mappings that can handle requests to `/cloudfoundryapplication/**`."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| spring-boot-starter-logging 2.2.2.RELEASE  | 2.7.18  | 3.2.1 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/48431389-4a2f-44ed-8597-55184ffc0e88?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=ee1b331d-05e0-4bd1-b6ef-727c3b98e324)\n\n\n## Description\nSpring framework contains a security bypass vulnerability when `/**` is used as a pattern in Spring Security configuration with the `/cloudfoundryapplication/**` component. The potential for security bypass exists due to the mismatch in pattern matching between Spring Security and Cloud Foundry.\n\n**Note**: The vendor has stated in their [advisory](https://spring.io/security/cve-2023-20873) that this application is not vulnerable if any of the following is true:\n* The application is not deployed to Cloud Foundry.\n* You have disabled Cloud Foundry actuator endpoints with `management.cloudfoundry.enabled` set to `false`.\n* Your application does not have handler mappings that can handle requests to `/cloudfoundryapplication/**`.\n\n## Vulnerabilities(BDSA,CVE)\n:orange_circle: [CVE-2023-20873](https://openhub.net/vulnerabilities/bdsa/CVE-2023-20873) - Improper Access Control\n\n\n\n## Solution\nFixed in [**3.1.0-RC1**](https://github.com/spring-projects/spring-boot/releases/tag/v3.1.0-RC1), [**3.0.6**](https://github.com/spring-projects/spring-boot/releases/tag/v3.0.6) and [**2.7.11**](https://github.com/spring-projects/spring-boot/releases/tag/v2.7.11)  by [this](https://github.com/spring-projects/spring-boot/commit/3522714c13b47af03bf42e7f2d5994af568cb1a7) commit.\n\nFixed in [**2.6.15**](https://github.com/spring-projects/spring-boot/releases/tag/v2.6.15) and [**2.5.15**](https://github.com/spring-projects/spring-boot/releases/tag/v2.5.15) by [this](https://github.com/spring-projects/spring-boot/commit/307f3c339912466e78fcdac648fff95a4edea573) commit.\n\nThe latest stable releases can be found [here](https://github.com/spring-projects/spring-boot/releases).\n\n## Workaround\nThe vendor has advised the following as a workaround:\n\u003eDisable Cloud Foundry actuator endpoints by setting `management.cloudfoundry.enabled` to `false`.\n\n## Dependency tree\n- org.owasp.webgoat.lesson:http-basics:v8.1.0:-maven\n    - org.springframework.boot:spring-boot-starter-test:2.2.2.RELEASE\n        - org.springframework.boot:spring-boot-starter:2.2.2.RELEASE\n            - org.springframework.boot:spring-boot-starter-logging:2.2.2.RELEASE\n\n\n## References\n* Common Weakness Enumeration: [CWE-284](https://cwe.mitre.org/data/definitions/284.html)\n* Common Weakness Enumeration: [CWE-923](https://cwe.mitre.org/data/definitions/923.html)\n\n","text":"Spring framework contains a security bypass vulnerability when `/**` is used as a pattern in Spring Security configuration with the `/cloudfoundryapplication/**` component. The potential for security bypass exists due to the mismatch in pattern matching between Spring Security and Cloud Foundry.\n\n**Note**: The vendor has stated in their [advisory](https://spring.io/security/cve-2023-20873) that this application is not vulnerable if any of the following is true:\n* The application is not deployed to Cloud Foundry.\n* You have disabled Cloud Foundry actuator endpoints with `management.cloudfoundry.enabled` set to `false`.\n* Your application does not have handler mappings that can handle requests to `/cloudfoundryapplication/**`."},"properties":{"security-severity":"8.9","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-284","external/cwe/cwe-923"]},"defaultConfiguration":{"level":"error"}},{"id":"BDSA-2021-3817 spring-boot-starter-logging 2.2.2.RELEASE: spring-boot-starter-test 2.2.2.RELEASE: org.springframework.boot","shortDescription":{"text":"Transitive Dependency: spring-boot-starter-logging 2.2.2.RELEASE from spring-boot-starter-test 2.2.2.RELEASE (BDSA-2021-3817)"},"fullDescription":{"text":"Apache log4j is vulnerable to a denial-of-service (DoS) when uncontrolled recursion occurs through a self-referencing lookup.  An attacker can trigger a DoS with malicious input data that generates a recursive lookup  and consequent application crash.\n\nSuccessful attacks require the attacker to have access to Thread Context Map (MDC) input, and for log4j configured with non-default pattern layout with a Context Lookup.\n\nOnly the log4j-core JAR file is impacted by this vulnerability. Applications using only the log4j-api JAR file without the log4j-core JAR file are not impacted.\n\nApache Log4j is the only Logging Services subproject affected by this vulnerability. Other projects like Log4net  are not impacted."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| spring-boot-starter-logging 2.2.2.RELEASE  | 2.7.18  | 3.2.1 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/48431389-4a2f-44ed-8597-55184ffc0e88?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=ee1b331d-05e0-4bd1-b6ef-727c3b98e324)\n\n\n## Description\nApache log4j is vulnerable to a denial-of-service (DoS) when uncontrolled recursion occurs through a self-referencing lookup.  An attacker can trigger a DoS with malicious input data that generates a recursive lookup  and consequent application crash.\n\nSuccessful attacks require the attacker to have access to Thread Context Map (MDC) input, and for log4j configured with non-default pattern layout with a Context Lookup.\n\nOnly the log4j-core JAR file is impacted by this vulnerability. Applications using only the log4j-api JAR file without the log4j-core JAR file are not impacted.\n\nApache Log4j is the only Logging Services subproject affected by this vulnerability. Other projects like Log4net  are not impacted.\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [BDSA-2021-3817](https://openhub.net/vulnerabilities/bdsa/BDSA-2021-3817) - Loop with Unreachable Exit Condition ('Infinite Loop')\n\n\n\n## Solution\nFixed in version [**2.17.0**](https://downloads.apache.org/logging/log4j/2.17.0/)  by [this](https://github.com/apache/logging-log4j2/commit/806023265f8c905b2dd1d81fd2458f64b2ea0b5e) commit.\n\nFixed in [**2.12.3-rc1**](https://github.com/apache/logging-log4j2/releases/tag/log4j-2.12.3-rc1) by [this](https://github.com/apache/logging-log4j2/commit/bf7e916df6335713fe2219c7b3b523fb509deabc) commit.\n\nFixed in [**2.3.1-rc1**](https://github.com/apache/logging-log4j2/releases/tag/log4j-2.3.1-rc1) by [this](https://github.com/apache/logging-log4j2/commit/ce6b78d082aae89089cb3ad25cdd46e9ec70a70b) commit.\n\n\nThe latest stable releases can be found [here](https://github.com/apache/logging-log4j2/releases).\n\n## Workaround\nThe vendor advises that  this vulnerability can can be mitigated through one of the following:\n\n* In PatternLayout in the logging configuration, replace Context Lookups like `${ctx:loginId}` or `$${ctx:loginId}` with Thread Context Map patterns `(%X, %mdc, or %MDC)`.\n\n* Alternatively,  remove references in the configuration to Context Lookups like `${ctx:loginId}` or `$${ctx:loginId}` where they originate from sources external to the application such as HTTP headers or user input.\n\n## Dependency tree\n- org.owasp.webgoat.lesson:http-basics:v8.1.0:-maven\n    - org.springframework.boot:spring-boot-starter-test:2.2.2.RELEASE\n        - org.springframework.boot:spring-boot-starter:2.2.2.RELEASE\n            - org.springframework.boot:spring-boot-starter-logging:2.2.2.RELEASE\n\n\n## References\n* Common Weakness Enumeration: [CWE-835](https://cwe.mitre.org/data/definitions/835.html)\n\n","text":"Apache log4j is vulnerable to a denial-of-service (DoS) when uncontrolled recursion occurs through a self-referencing lookup.  An attacker can trigger a DoS with malicious input data that generates a recursive lookup  and consequent application crash.\n\nSuccessful attacks require the attacker to have access to Thread Context Map (MDC) input, and for log4j configured with non-default pattern layout with a Context Lookup.\n\nOnly the log4j-core JAR file is impacted by this vulnerability. Applications using only the log4j-api JAR file without the log4j-core JAR file are not impacted.\n\nApache Log4j is the only Logging Services subproject affected by this vulnerability. Other projects like Log4net  are not impacted."},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-835"]},"defaultConfiguration":{"level":"warning"}},{"id":"BDSA-2021-3887 spring-boot-starter-logging 2.2.2.RELEASE: spring-boot-starter-test 2.2.2.RELEASE: org.springframework.boot","shortDescription":{"text":"Transitive Dependency: spring-boot-starter-logging 2.2.2.RELEASE from spring-boot-starter-test 2.2.2.RELEASE (BDSA-2021-3887)"},"fullDescription":{"text":"Apache Log4j contains a remote code execution (RCE) vulnerability. This allows an attacker that has permissions to modify the logging configuration files to input a malicious JDBC Appender with a data source referencing a JDNI URI. This can then lead to RCE.\n\n**Note:** This vulnerability impacts log4j-core."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| spring-boot-starter-logging 2.2.2.RELEASE  | 2.7.18  | 3.2.1 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/48431389-4a2f-44ed-8597-55184ffc0e88?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=ee1b331d-05e0-4bd1-b6ef-727c3b98e324)\n\n\n## Description\nApache Log4j contains a remote code execution (RCE) vulnerability. This allows an attacker that has permissions to modify the logging configuration files to input a malicious JDBC Appender with a data source referencing a JDNI URI. This can then lead to RCE.\n\n**Note:** This vulnerability impacts log4j-core.\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [BDSA-2021-3887](https://openhub.net/vulnerabilities/bdsa/BDSA-2021-3887) - Weak Input Validation\n\n\n\n## Solution\nFixed in versions:\n\n* [**2.3.2-rc1**](https://github.com/apache/logging-log4j2/releases/tag/log4j-2.3.2-rc1) by [this](https://github.com/apache/logging-log4j2/commit/ae4dc0c1a6389ae895f60451cd87e97e7b9d85c1) commit.\n* [**2.12.4-rc1**](https://github.com/apache/logging-log4j2/releases/tag/log4j-2.12.4-rc1) by [this](https://github.com/apache/logging-log4j2/commit/b3879958cb3b75eb16bf27e970538b6e4e130f1c) commit.\n* [**2.17.1-rc1**](https://github.com/apache/logging-log4j2/releases/tag/log4j-2.17.1-rc1) by [this](https://github.com/apache/logging-log4j2/commit/05db5f9527254632b59aed2a1d78a32c5ab74f16) commit.\n\nThe latest stable releases can be found [here](https://logging.apache.org/log4j/2.x/download.html).\n\n\n\n## Dependency tree\n- org.owasp.webgoat.lesson:http-basics:v8.1.0:-maven\n    - org.springframework.boot:spring-boot-starter-test:2.2.2.RELEASE\n        - org.springframework.boot:spring-boot-starter:2.2.2.RELEASE\n            - org.springframework.boot:spring-boot-starter-logging:2.2.2.RELEASE\n\n\n## References\n* Common Weakness Enumeration: [CWE-20](https://cwe.mitre.org/data/definitions/20.html)\n\n","text":"Apache Log4j contains a remote code execution (RCE) vulnerability. This allows an attacker that has permissions to modify the logging configuration files to input a malicious JDBC Appender with a data source referencing a JDNI URI. This can then lead to RCE.\n\n**Note:** This vulnerability impacts log4j-core."},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-20"]},"defaultConfiguration":{"level":"warning"}},{"id":"CVE-2022-27772 spring-boot-starter-logging 2.2.2.RELEASE: spring-boot-starter-test 2.2.2.RELEASE: org.springframework.boot","shortDescription":{"text":"Transitive Dependency: spring-boot-starter-logging 2.2.2.RELEASE from spring-boot-starter-test 2.2.2.RELEASE (CVE-2022-27772)"},"fullDescription":{"text":"Spring Boot is vulnerable to privilege escalation due to a race condition which occurs during the creation of a temporary directory. A local attacker could create their own temporary directory by racing against Spring Boot and supply their own configuration files which would allow for the full takeover of the application."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| spring-boot-starter-logging 2.2.2.RELEASE  | 2.7.18  | 3.2.1 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/48431389-4a2f-44ed-8597-55184ffc0e88?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=ee1b331d-05e0-4bd1-b6ef-727c3b98e324)\n\n\n## Description\nSpring Boot is vulnerable to privilege escalation due to a race condition which occurs during the creation of a temporary directory. A local attacker could create their own temporary directory by racing against Spring Boot and supply their own configuration files which would allow for the full takeover of the application.\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [CVE-2022-27772](https://openhub.net/vulnerabilities/bdsa/CVE-2022-27772) - Race Condition due to Improper Synchronization\n\n\n\n## Solution\nFixed in [**2.2.11**](https://github.com/spring-projects/spring-boot/releases/tag/v2.2.11.RELEASE) by [this](https://github.com/spring-projects/spring-boot/commit/667ccdae84822072f9ea1a27ed5c77964c71002d) commit.\n\nThe latest stable releases can be found [here](https://github.com/spring-projects/spring-boot/releases).\n\n## Workaround\nAccording to the [Github Security Advisory](https://github.com/JLLeitschuh/security-research/security/advisories/GHSA-cm59-pr5q-cw85), setting the `java.io.tmpdir` system environment variable to a directory that is exclusively owned by the executing user will fix this vulnerability for all operating systems.\n\n## Dependency tree\n- org.owasp.webgoat.lesson:http-basics:v8.1.0:-maven\n    - org.springframework.boot:spring-boot-starter-test:2.2.2.RELEASE\n        - org.springframework.boot:spring-boot-starter:2.2.2.RELEASE\n            - org.springframework.boot:spring-boot-starter-logging:2.2.2.RELEASE\n\n\n## References\n* Common Weakness Enumeration: [CWE-362](https://cwe.mitre.org/data/definitions/362.html)\n* Common Weakness Enumeration: [CWE-379](https://cwe.mitre.org/data/definitions/379.html)\n\n","text":"Spring Boot is vulnerable to privilege escalation due to a race condition which occurs during the creation of a temporary directory. A local attacker could create their own temporary directory by racing against Spring Boot and supply their own configuration files which would allow for the full takeover of the application."},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-362","external/cwe/cwe-379"]},"defaultConfiguration":{"level":"warning"}},{"id":"CVE-2023-20883 spring-boot-starter-logging 2.2.2.RELEASE: spring-boot-starter-test 2.2.2.RELEASE: org.springframework.boot","shortDescription":{"text":"Transitive Dependency: spring-boot-starter-logging 2.2.2.RELEASE from spring-boot-starter-test 2.2.2.RELEASE (CVE-2023-20883)"},"fullDescription":{"text":"Spring Boot is vulnerable to denial-of-service (DoS) via the welcome page when used to serve an application behind a reverse proxy cache. This will cause users to continuously be served a 404 response, preventing standard application use.\n\n\n**Note:** Spring have provided the following guidance for vulnerable criteria. \nAn application is vulnerable if all of the following are true:\n\n- \"The application has Spring MVC auto-configuration enabled. This is the case by default if Spring MVC is on the classpath.\"\n- \"The application makes use of Spring Boot's welcome page support, either static or templated.\"\n- \"Your application is deployed behind a proxy which caches 404 responses.\"\n\nThe application is not vulnerable if any of the following are true:\n\n- \"Spring MVC auto-configuration is disabled. This is true if `WebMvcAutoConfiguration` is explicitly excluded, if Spring MVC is not on the classpath, or if `spring.main.web-application-type` is set to a value other than `SERVLET`.\"\n- \"The application does not use Spring Boot's welcome page support.\"\n- \"You do not have a proxy which caches 404 responses.\""},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| spring-boot-starter-logging 2.2.2.RELEASE  | 2.7.18  | 3.2.1 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/48431389-4a2f-44ed-8597-55184ffc0e88?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=ee1b331d-05e0-4bd1-b6ef-727c3b98e324)\n\n\n## Description\nSpring Boot is vulnerable to denial-of-service (DoS) via the welcome page when used to serve an application behind a reverse proxy cache. This will cause users to continuously be served a 404 response, preventing standard application use.\n\n\n**Note:** Spring have provided the following guidance for vulnerable criteria. \nAn application is vulnerable if all of the following are true:\n\n- \"The application has Spring MVC auto-configuration enabled. This is the case by default if Spring MVC is on the classpath.\"\n- \"The application makes use of Spring Boot's welcome page support, either static or templated.\"\n- \"Your application is deployed behind a proxy which caches 404 responses.\"\n\nThe application is not vulnerable if any of the following are true:\n\n- \"Spring MVC auto-configuration is disabled. This is true if `WebMvcAutoConfiguration` is explicitly excluded, if Spring MVC is not on the classpath, or if `spring.main.web-application-type` is set to a value other than `SERVLET`.\"\n- \"The application does not use Spring Boot's welcome page support.\"\n- \"You do not have a proxy which caches 404 responses.\"\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [CVE-2023-20883](https://openhub.net/vulnerabilities/bdsa/CVE-2023-20883) - Insufficient Verification of Data Authenticity\n\n\n\n## Solution\nFixed in versions\n- [**2.5.15**](https://github.com/spring-projects/spring-boot/releases/tag/v2.5.15) by [this](https://github.com/spring-projects/spring-boot/commit/d7ff379fb8bb2c33319afeb45a343116b59e0ee2) commit,\n- [**2.6.15**](https://github.com/spring-projects/spring-boot/releases/tag/v2.6.15) by [this](https://github.com/spring-projects/spring-boot/commit/d7ff379fb8bb2c33319afeb45a343116b59e0ee2) commit,\n- [**2.7.12**](https://github.com/spring-projects/spring-boot/releases/tag/v2.7.12) by [this](https://github.com/spring-projects/spring-boot/commit/418dd1ba5bdad79b55a043000164bfcbda2acd78) commit,\n- [**3.0.7**](https://github.com/spring-projects/spring-boot/releases/tag/v3.0.7) by [this](https://github.com/spring-projects/spring-boot/commit/418dd1ba5bdad79b55a043000164bfcbda2acd78) commit,\n- [**3.1.0**](https://github.com/spring-projects/spring-boot/releases/tag/v3.1.0) by [this](https://github.com/spring-projects/spring-boot/commit/418dd1ba5bdad79b55a043000164bfcbda2acd78) commit.\n\nThe latest stable releases can be found [here](https://github.com/spring-projects/spring-boot/releases).\n\n## Workaround\nThe vendor has supplied the following workaround:\n\u003e \"configure the reverse proxy not to cache 404 responses and/or not to cache responses to requests to the root (`/`) of the application.\"\n\n## Dependency tree\n- org.owasp.webgoat.lesson:http-basics:v8.1.0:-maven\n    - org.springframework.boot:spring-boot-starter-test:2.2.2.RELEASE\n        - org.springframework.boot:spring-boot-starter:2.2.2.RELEASE\n            - org.springframework.boot:spring-boot-starter-logging:2.2.2.RELEASE\n\n\n## References\n* Common Weakness Enumeration: [CWE-345](https://cwe.mitre.org/data/definitions/345.html)\n\n","text":"Spring Boot is vulnerable to denial-of-service (DoS) via the welcome page when used to serve an application behind a reverse proxy cache. This will cause users to continuously be served a 404 response, preventing standard application use.\n\n\n**Note:** Spring have provided the following guidance for vulnerable criteria. \nAn application is vulnerable if all of the following are true:\n\n- \"The application has Spring MVC auto-configuration enabled. This is the case by default if Spring MVC is on the classpath.\"\n- \"The application makes use of Spring Boot's welcome page support, either static or templated.\"\n- \"Your application is deployed behind a proxy which caches 404 responses.\"\n\nThe application is not vulnerable if any of the following are true:\n\n- \"Spring MVC auto-configuration is disabled. This is true if `WebMvcAutoConfiguration` is explicitly excluded, if Spring MVC is not on the classpath, or if `spring.main.web-application-type` is set to a value other than `SERVLET`.\"\n- \"The application does not use Spring Boot's welcome page support.\"\n- \"You do not have a proxy which caches 404 responses.\""},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-345"]},"defaultConfiguration":{"level":"warning"}},{"id":"CVE-2023-34055 spring-boot-starter-logging 2.2.2.RELEASE: spring-boot-starter-test 2.2.2.RELEASE: org.springframework.boot","shortDescription":{"text":"Transitive Dependency: spring-boot-starter-logging 2.2.2.RELEASE from spring-boot-starter-test 2.2.2.RELEASE (CVE-2023-34055)"},"fullDescription":{"text":"Spring Boot is vulnerable to denial-of-service (DoS). An unauthenticated user could trigger the vulnerability by providing specially crafted HTTP requests to a web metrics endpoint."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| spring-boot-starter-logging 2.2.2.RELEASE  | 2.7.18  | 3.2.1 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/48431389-4a2f-44ed-8597-55184ffc0e88?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=ee1b331d-05e0-4bd1-b6ef-727c3b98e324)\n\n\n## Description\nSpring Boot is vulnerable to denial-of-service (DoS). An unauthenticated user could trigger the vulnerability by providing specially crafted HTTP requests to a web metrics endpoint.\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [CVE-2023-34055](https://openhub.net/vulnerabilities/bdsa/CVE-2023-34055) - Third-party component usage\n\n\n\n## Solution\nFixed in:\n* [**3.1.6**](https://github.com/spring-projects/spring-boot/releases/tag/v3.1.6)\n* [**3.0.13**](https://github.com/spring-projects/spring-boot/releases/tag/v3.0.13)\n* [**2.7.18**](https://github.com/spring-projects/spring-boot/releases/tag/v2.7.18)\n\nThe latest stable releases can be found [here](https://github.com/spring-projects/spring-boot/releases).\n\n## Workaround\nThe vendor notes the following:\n\u003e As a temporary workaround, Spring Boot users can choose to disable web metrics with the following property: `management.metrics.enable.http.server.requests=false`\n\n## Dependency tree\n- org.owasp.webgoat.lesson:http-basics:v8.1.0:-maven\n    - org.springframework.boot:spring-boot-starter-test:2.2.2.RELEASE\n        - org.springframework.boot:spring-boot-starter:2.2.2.RELEASE\n            - org.springframework.boot:spring-boot-starter-logging:2.2.2.RELEASE\n\n\n\n","text":"Spring Boot is vulnerable to denial-of-service (DoS). An unauthenticated user could trigger the vulnerability by providing specially crafted HTTP requests to a web metrics endpoint."},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","transitive_dependency","patch_available"]},"defaultConfiguration":{"level":"warning"}},{"id":"BDSA-2022-3109 spring-security-core 5.2.1.RELEASE: spring-security-test 4.1.3.RELEASE: org.springframework.security","shortDescription":{"text":"Transitive Dependency: spring-security-core 5.2.1.RELEASE from spring-security-test 4.1.3.RELEASE (BDSA-2022-3109)"},"fullDescription":{"text":"Spring Security contains a flaw when dealing with OAuth2 access token empty scope list  responses. A remote attacker could leverage this to escalate their privileges under **all** the following conditions being met:\n\n* They act as the role of a Login Client (e.g. uses `http.oauth2Login()`).\n* They use one or more authorization rules with authorities mapped from authorized scopes (e.g. `anyRequest().hasAuthority(\"SCOPE_message.write\")`) in the client application.\n* An authorization server that responds with empty scopes list is registered (RFC 6749, Section 5.1).\n\n**Note:** The role of Resource Servers (`http.oauth2ResourceServer()`) and applications that do not map authorization rules from authorized scopes (eg. `anyRequest().hasAuthority(\"ROLE_USER\")`) cannot be exploited by this vulnerability."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| spring-security-core 5.2.1.RELEASE  | 5.8.9  | 6.2.1 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/bfe44ed0-0640-4faa-92fc-2c894ff23018?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=d80c013b-7862-4ea8-83e5-eb7b91623e0c)\n\n\n## Description\nSpring Security contains a flaw when dealing with OAuth2 access token empty scope list  responses. A remote attacker could leverage this to escalate their privileges under **all** the following conditions being met:\n\n* They act as the role of a Login Client (e.g. uses `http.oauth2Login()`).\n* They use one or more authorization rules with authorities mapped from authorized scopes (e.g. `anyRequest().hasAuthority(\"SCOPE_message.write\")`) in the client application.\n* An authorization server that responds with empty scopes list is registered (RFC 6749, Section 5.1).\n\n**Note:** The role of Resource Servers (`http.oauth2ResourceServer()`) and applications that do not map authorization rules from authorized scopes (eg. `anyRequest().hasAuthority(\"ROLE_USER\")`) cannot be exploited by this vulnerability.\n\n## Vulnerabilities(BDSA,CVE)\n:orange_circle: [BDSA-2022-3109](https://openhub.net/vulnerabilities/bdsa/BDSA-2022-3109) - Missing or Broken Authorization Mechanism\n\n\n\n## Solution\nFixed in versions [**5.7.5**](https://github.com/spring-projects/spring-security/releases/tag/5.7.5) and [**5.6.9**](https://github.com/spring-projects/spring-security/releases/tag/5.6.9) by [this](https://github.com/spring-projects/spring-security/commit/75004587a419a96d18909030b20c6b16b226ecbe) commit..\n\nThe latest releases can be found [here](https://github.com/spring-projects/spring-security/tags).\n\n\n\n## Dependency tree\n- org.owasp.webgoat.lesson:http-basics:v8.1.0:-maven\n    - org.springframework.security:spring-security-test:4.1.3.RELEASE\n        - org.springframework.security:spring-security-core:5.2.1.RELEASE\n\n\n## References\n* Common Weakness Enumeration: [CWE-285](https://cwe.mitre.org/data/definitions/285.html)\n\n","text":"Spring Security contains a flaw when dealing with OAuth2 access token empty scope list  responses. A remote attacker could leverage this to escalate their privileges under **all** the following conditions being met:\n\n* They act as the role of a Login Client (e.g. uses `http.oauth2Login()`).\n* They use one or more authorization rules with authorities mapped from authorized scopes (e.g. `anyRequest().hasAuthority(\"SCOPE_message.write\")`) in the client application.\n* An authorization server that responds with empty scopes list is registered (RFC 6749, Section 5.1).\n\n**Note:** The role of Resource Servers (`http.oauth2ResourceServer()`) and applications that do not map authorization rules from authorized scopes (eg. `anyRequest().hasAuthority(\"ROLE_USER\")`) cannot be exploited by this vulnerability."},"properties":{"security-severity":"8.9","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-285"]},"defaultConfiguration":{"level":"error"}},{"id":"BDSA-2023-1825 spring-security-core 5.2.1.RELEASE: spring-security-test 4.1.3.RELEASE: org.springframework.security","shortDescription":{"text":"Transitive Dependency: spring-security-core 5.2.1.RELEASE from spring-security-test 4.1.3.RELEASE (BDSA-2023-1825)"},"fullDescription":{"text":"Spring Security used with Spring WebFlux performs incorrect parsing when using `**` as a pattern in Spring Security configuration due to inconsistent pattern matching between the two components. This could lead to bypassing of security mechanisms configured by Spring Security."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| spring-security-core 5.2.1.RELEASE  | 5.8.9  | 6.2.1 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/bfe44ed0-0640-4faa-92fc-2c894ff23018?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=d80c013b-7862-4ea8-83e5-eb7b91623e0c)\n\n\n## Description\nSpring Security used with Spring WebFlux performs incorrect parsing when using `**` as a pattern in Spring Security configuration due to inconsistent pattern matching between the two components. This could lead to bypassing of security mechanisms configured by Spring Security.\n\n## Vulnerabilities(BDSA,CVE)\n:orange_circle: [BDSA-2023-1825](https://openhub.net/vulnerabilities/bdsa/BDSA-2023-1825) - Missing or Broken Authorization Mechanism\n\n\n\n## Solution\nFixed in versions:\n- [**5.6.12**](https://github.com/spring-projects/spring-security/releases/tag/5.6.12) by [this](https://github.com/spring-projects/spring-security/commit/7813a9ba26e53fe54e4d2ec6eb076126e8550780) commit,\n- [**5.7.10**](https://github.com/spring-projects/spring-security/releases/tag/5.7.10) by [this](https://github.com/spring-projects/spring-security/commit/fe9bc26bdcfea2a40c93e3db98e649bfb0edaab2) commit,\n- [**5.8.5**](https://github.com/spring-projects/spring-security/releases/tag/5.8.5) by [this](https://github.com/spring-projects/spring-security/commit/a939f17890a9415604ecf81bc236d3e969e2d9b4) commit,\n- [**6.0.5**](https://github.com/spring-projects/spring-security/releases/tag/6.0.5) by [this](https://github.com/spring-projects/spring-security/commit/cbef118026e38005109158dd35e79038af2bb913) commit,\n- [**6.1.2**](https://github.com/spring-projects/spring-security/releases/tag/6.1.2) by [this](https://github.com/spring-projects/spring-security/commit/aaa31312bd74c637ce9549ed68cab33214008bf5) commit.\n\nThe above fixed versions require Spring Framework versions:\n- [**5.2.25**](https://github.com/spring-projects/spring-framework/releases/tag/5.2.25),\n- [**5.3.29**](https://github.com/spring-projects/spring-framework/releases/tag/5.3.29),\n- [**6.0.11**](https://github.com/spring-projects/spring-framework/releases/tag/6.0.11).\n\nThe latest stable releases can be found [here](https://github.com/spring-projects/spring-security/releases).\n\n\n\n## Dependency tree\n- org.owasp.webgoat.lesson:http-basics:v8.1.0:-maven\n    - org.springframework.security:spring-security-test:4.1.3.RELEASE\n        - org.springframework.security:spring-security-core:5.2.1.RELEASE\n\n\n## References\n* Common Weakness Enumeration: [CWE-285](https://cwe.mitre.org/data/definitions/285.html)\n* Common Weakness Enumeration: [CWE-287](https://cwe.mitre.org/data/definitions/287.html)\n\n","text":"Spring Security used with Spring WebFlux performs incorrect parsing when using `**` as a pattern in Spring Security configuration due to inconsistent pattern matching between the two components. This could lead to bypassing of security mechanisms configured by Spring Security."},"properties":{"security-severity":"8.9","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-285","external/cwe/cwe-287"]},"defaultConfiguration":{"level":"error"}},{"id":"CVE-2022-22978 spring-security-core 5.2.1.RELEASE: spring-security-test 4.1.3.RELEASE: org.springframework.security","shortDescription":{"text":"Transitive Dependency: spring-security-core 5.2.1.RELEASE from spring-security-test 4.1.3.RELEASE (CVE-2022-22978)"},"fullDescription":{"text":"Spring Security is vulnerable to the bypassing of an authorization mechanism due to improperly implemented regular expression matching. A remote attacker could perform unauthorized actions on a vulnerable server by sending maliciously crafted requests to that server."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| spring-security-core 5.2.1.RELEASE  | 5.8.9  | 6.2.1 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/bfe44ed0-0640-4faa-92fc-2c894ff23018?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=d80c013b-7862-4ea8-83e5-eb7b91623e0c)\n\n\n## Description\nSpring Security is vulnerable to the bypassing of an authorization mechanism due to improperly implemented regular expression matching. A remote attacker could perform unauthorized actions on a vulnerable server by sending maliciously crafted requests to that server.\n\n## Vulnerabilities(BDSA,CVE)\n:orange_circle: [CVE-2022-22978](https://openhub.net/vulnerabilities/bdsa/CVE-2022-22978) - Incorrect Regular Expression\n\n\n\n## Solution\nFixed in versions:\n* [**5.7.0**](https://github.com/spring-projects/spring-security/releases/tag/5.7.0)\n* [**5.6.4**](https://github.com/spring-projects/spring-security/releases/tag/5.6.4)\n* [**5.5.7**](https://github.com/spring-projects/spring-security/releases/tag/5.5.7)\n\nThe latest stable releases can be found [here](https://github.com/spring-projects/spring-security/releases).\n\n\n\n## Dependency tree\n- org.owasp.webgoat.lesson:http-basics:v8.1.0:-maven\n    - org.springframework.security:spring-security-test:4.1.3.RELEASE\n        - org.springframework.security:spring-security-core:5.2.1.RELEASE\n\n\n## References\n* Common Weakness Enumeration: [CWE-185](https://cwe.mitre.org/data/definitions/185.html)\n\n","text":"Spring Security is vulnerable to the bypassing of an authorization mechanism due to improperly implemented regular expression matching. A remote attacker could perform unauthorized actions on a vulnerable server by sending maliciously crafted requests to that server."},"properties":{"security-severity":"8.9","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-185"]},"defaultConfiguration":{"level":"error"}},{"id":"CVE-2021-22112 spring-security-core 5.2.1.RELEASE: spring-security-test 4.1.3.RELEASE: org.springframework.security","shortDescription":{"text":"Transitive Dependency: spring-security-core 5.2.1.RELEASE from spring-security-test 4.1.3.RELEASE (CVE-2021-22112)"},"fullDescription":{"text":"Spring Security is vulnerable to privilege escalation due to a failure to correctly save security context information. An attacker who is allowed to use elevated privileges in a small portion of a program could extend those privileges to the entire program by sending maliciously crafted requests to the application.\n\nIt should be noted that the vulnerability is not present by default, and must be programmed in by an application developer."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| spring-security-core 5.2.1.RELEASE  | 5.8.9  | 6.2.1 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/bfe44ed0-0640-4faa-92fc-2c894ff23018?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=d80c013b-7862-4ea8-83e5-eb7b91623e0c)\n\n\n## Description\nSpring Security is vulnerable to privilege escalation due to a failure to correctly save security context information. An attacker who is allowed to use elevated privileges in a small portion of a program could extend those privileges to the entire program by sending maliciously crafted requests to the application.\n\nIt should be noted that the vulnerability is not present by default, and must be programmed in by an application developer.\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [CVE-2021-22112](https://openhub.net/vulnerabilities/bdsa/CVE-2021-22112) - Third-party component usage\n\n\n\n## Solution\nFixed in:\n* [**5.4.4**](https://github.com/spring-projects/spring-security/releases/tag/5.4.4) by [this](https://github.com/spring-projects/spring-security/commit/c72a6fac04853912a4b7caad5f0500f2aace5a79) commit.\n* [**5.3.8**](https://github.com/spring-projects/spring-security/releases/tag/5.3.8.RELEASE) by [this](https://github.com/spring-projects/spring-security/commit/38e9e8ca52ddc4bdd272083563a657d5e37ea1e8) commit.\n* [**5.2.9**](https://github.com/spring-projects/spring-security/releases/tag/5.2.9.RELEASE) by [this](https://github.com/spring-projects/spring-security/commit/7cab7b06c51ea885dd0d07ff26b135dd3afce1d1) commit.\n\nThe latest stable releases are available [here](https://github.com/spring-projects/spring-security/releases).\n\n\n\n## Dependency tree\n- org.owasp.webgoat.lesson:http-basics:v8.1.0:-maven\n    - org.springframework.security:spring-security-test:4.1.3.RELEASE\n        - org.springframework.security:spring-security-core:5.2.1.RELEASE\n\n\n## References\n* Common Weakness Enumeration: [CWE-265](https://cwe.mitre.org/data/definitions/265.html)\n\n","text":"Spring Security is vulnerable to privilege escalation due to a failure to correctly save security context information. An attacker who is allowed to use elevated privileges in a small portion of a program could extend those privileges to the entire program by sending maliciously crafted requests to the application.\n\nIt should be noted that the vulnerability is not present by default, and must be programmed in by an application developer."},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-265"]},"defaultConfiguration":{"level":"warning"}},{"id":"CVE-2021-22119 spring-security-core 5.2.1.RELEASE: spring-security-test 4.1.3.RELEASE: org.springframework.security","shortDescription":{"text":"Transitive Dependency: spring-security-core 5.2.1.RELEASE from spring-security-test 4.1.3.RELEASE (CVE-2021-22119)"},"fullDescription":{"text":"Spring Security contains an uncontrolled resource consumption vulnerability. Attackers could exploit this to create an `OutOfMemory` error and exhaust  system resources, triggering a denial-of-service (DoS) condition."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| spring-security-core 5.2.1.RELEASE  | 5.8.9  | 6.2.1 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/bfe44ed0-0640-4faa-92fc-2c894ff23018?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=d80c013b-7862-4ea8-83e5-eb7b91623e0c)\n\n\n## Description\nSpring Security contains an uncontrolled resource consumption vulnerability. Attackers could exploit this to create an `OutOfMemory` error and exhaust  system resources, triggering a denial-of-service (DoS) condition.\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [CVE-2021-22119](https://openhub.net/vulnerabilities/bdsa/CVE-2021-22119) - Uncontrolled Resource Consumption\n\n\n\n## Solution\nFixed in:\n* **[5.5.1](https://github.com/spring-projects/spring-security/releases/tag/5.5.1)**\n* **[5.4.7](https://github.com/spring-projects/spring-security/releases/tag/5.4.7)**\n* **[5.3.10](https://github.com/spring-projects/spring-security/releases/tag/5.3.10.RELEASE)**\n* **[5.2.11](https://github.com/spring-projects/spring-security/releases/tag/5.2.11.RELEASE)**\n\nThe latest stable releases are also available [here](https://github.com/spring-projects/spring-security/releases).\n\n\n\n## Dependency tree\n- org.owasp.webgoat.lesson:http-basics:v8.1.0:-maven\n    - org.springframework.security:spring-security-test:4.1.3.RELEASE\n        - org.springframework.security:spring-security-core:5.2.1.RELEASE\n\n\n## References\n* Common Weakness Enumeration: [CWE-400](https://cwe.mitre.org/data/definitions/400.html)\n\n","text":"Spring Security contains an uncontrolled resource consumption vulnerability. Attackers could exploit this to create an `OutOfMemory` error and exhaust  system resources, triggering a denial-of-service (DoS) condition."},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-400"]},"defaultConfiguration":{"level":"warning"}},{"id":"CVE-2022-22976 spring-security-core 5.2.1.RELEASE: spring-security-test 4.1.3.RELEASE: org.springframework.security","shortDescription":{"text":"Transitive Dependency: spring-security-core 5.2.1.RELEASE from spring-security-test 4.1.3.RELEASE (CVE-2022-22976)"},"fullDescription":{"text":"Spring Security is vulnerable to the weakening of bcrypt-generated password hashes due to an integer overflow. An attacker that is able to obtain weak password hashes that have been produced by a vulnerable application could potentially retrieve the plaintext password. It should be noted that the `BCryptPasswordEncoder` class must have been configured to use the maximum work factor (31) in order for the vulnerability to manifest. This is a non-default value."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| spring-security-core 5.2.1.RELEASE  | 5.8.9  | 6.2.1 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/bfe44ed0-0640-4faa-92fc-2c894ff23018?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=d80c013b-7862-4ea8-83e5-eb7b91623e0c)\n\n\n## Description\nSpring Security is vulnerable to the weakening of bcrypt-generated password hashes due to an integer overflow. An attacker that is able to obtain weak password hashes that have been produced by a vulnerable application could potentially retrieve the plaintext password. It should be noted that the `BCryptPasswordEncoder` class must have been configured to use the maximum work factor (31) in order for the vulnerability to manifest. This is a non-default value.\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [CVE-2022-22976](https://openhub.net/vulnerabilities/bdsa/CVE-2022-22976) - Integer Overflow / Underflow\n\n\n\n## Solution\nFixed in versions:\n* [**5.7.0**](https://github.com/spring-projects/spring-security/releases/tag/5.7.0)\n* [**5.6.4**](https://github.com/spring-projects/spring-security/releases/tag/5.6.4)\n* [**5.5.7**](https://github.com/spring-projects/spring-security/releases/tag/5.5.7)\n\nThe latest stable releases can be found [here](https://github.com/spring-projects/spring-security/releases).\n\n## Workaround\nThe vendor has stated [here](https://tanzu.vmware.com/security/cve-2022-22976) that the following workaround can be implemented:\n\n\u003e Update your BCryptPasswordEncoder to use a lower number of rounds.\n\n## Dependency tree\n- org.owasp.webgoat.lesson:http-basics:v8.1.0:-maven\n    - org.springframework.security:spring-security-test:4.1.3.RELEASE\n        - org.springframework.security:spring-security-core:5.2.1.RELEASE\n\n\n## References\n* Common Weakness Enumeration: [CWE-190](https://cwe.mitre.org/data/definitions/190.html)\n\n","text":"Spring Security is vulnerable to the weakening of bcrypt-generated password hashes due to an integer overflow. An attacker that is able to obtain weak password hashes that have been produced by a vulnerable application could potentially retrieve the plaintext password. It should be noted that the `BCryptPasswordEncoder` class must have been configured to use the maximum work factor (31) in order for the vulnerability to manifest. This is a non-default value."},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-190"]},"defaultConfiguration":{"level":"warning"}},{"id":"CVE-2020-5407 spring-security-core 5.2.1.RELEASE: spring-security-test 4.1.3.RELEASE: org.springframework.security","shortDescription":{"text":"Transitive Dependency: spring-security-core 5.2.1.RELEASE from spring-security-test 4.1.3.RELEASE (CVE-2020-5407)"},"fullDescription":{"text":"Spring Security is vulnerable to authentication abuse due to the improper handling of SAML response validation. This could allow an attacker to inject arbitrary assertions into SAML responses."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| spring-security-core 5.2.1.RELEASE  | 5.8.9  | 6.2.1 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/bfe44ed0-0640-4faa-92fc-2c894ff23018?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=d80c013b-7862-4ea8-83e5-eb7b91623e0c)\n\n\n## Description\nSpring Security is vulnerable to authentication abuse due to the improper handling of SAML response validation. This could allow an attacker to inject arbitrary assertions into SAML responses.\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [CVE-2020-5407](https://openhub.net/vulnerabilities/bdsa/CVE-2020-5407) - Improper Authentication\n\n\n\n## Solution\nFixed in **[5.3.2](https://github.com/spring-projects/spring-security/releases/tag/5.3.2.RELEASE)** by [this](https://github.com/spring-projects/spring-security/commit/0db9cd075d621118cdff303f402d25425ec81bbc) commit and **[5.2.4](https://github.com/spring-projects/spring-security/releases/tag/5.2.4.RELEASE)** by [this](https://github.com/spring-projects/spring-security/commit/69b1bc62ffe7c1e1bbf508951efa1e0235954198) commit.\n\n\n\n## Dependency tree\n- org.owasp.webgoat.lesson:http-basics:v8.1.0:-maven\n    - org.springframework.security:spring-security-test:4.1.3.RELEASE\n        - org.springframework.security:spring-security-core:5.2.1.RELEASE\n\n\n## References\n* Common Weakness Enumeration: [CWE-287](https://cwe.mitre.org/data/definitions/287.html)\n\n","text":"Spring Security is vulnerable to authentication abuse due to the improper handling of SAML response validation. This could allow an attacker to inject arbitrary assertions into SAML responses."},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-287"]},"defaultConfiguration":{"level":"warning"}},{"id":"CVE-2020-5408 spring-security-core 5.2.1.RELEASE: spring-security-test 4.1.3.RELEASE: org.springframework.security","shortDescription":{"text":"Transitive Dependency: spring-security-core 5.2.1.RELEASE from spring-security-test 4.1.3.RELEASE (CVE-2020-5408)"},"fullDescription":{"text":"Spring Security is vulnerable to information exposure due to an insecure cryptographic mechanism in the queryable text encryptor. This could be leveraged by an attacker to derive sensitive information from encrypted text using dictionary attacks."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| spring-security-core 5.2.1.RELEASE  | 5.8.9  | 6.2.1 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/bfe44ed0-0640-4faa-92fc-2c894ff23018?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=d80c013b-7862-4ea8-83e5-eb7b91623e0c)\n\n\n## Description\nSpring Security is vulnerable to information exposure due to an insecure cryptographic mechanism in the queryable text encryptor. This could be leveraged by an attacker to derive sensitive information from encrypted text using dictionary attacks.\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [CVE-2020-5408](https://openhub.net/vulnerabilities/bdsa/CVE-2020-5408) - Generation of Predictable IV with CBC Mode\n\n\n\n## Solution\nFixed by [this](https://github.com/spring-projects/spring-security/commit/db155b30941536e6c33408a20f62e790b2c78a97) commit in:\n* **[5.3.2](https://github.com/spring-projects/spring-security/releases/tag/5.3.2.RELEASE)**\n* **[5.2.4](https://github.com/spring-projects/spring-security/releases/tag/5.2.4.RELEASE)**\n* **[5.1.10](https://github.com/spring-projects/spring-security/releases/tag/5.1.10.RELEASE)**\n* **[5.0.16](https://github.com/spring-projects/spring-security/releases/tag/5.0.16.RELEASE)**\n* **[4.2.16](https://github.com/spring-projects/spring-security/releases/tag/4.2.16.RELEASE)**\n\n## Workaround\nIf upgrading to a fixed version cannot be performed immediately, users should discontinue use of the function `Encryptors#queryableText(CharSequence, CharSequence)` and look to their data store for a secure mechanism to query encrypted data.\n\n## Dependency tree\n- org.owasp.webgoat.lesson:http-basics:v8.1.0:-maven\n    - org.springframework.security:spring-security-test:4.1.3.RELEASE\n        - org.springframework.security:spring-security-core:5.2.1.RELEASE\n\n\n## References\n* Common Weakness Enumeration: [CWE-329](https://cwe.mitre.org/data/definitions/329.html)\n\n","text":"Spring Security is vulnerable to information exposure due to an insecure cryptographic mechanism in the queryable text encryptor. This could be leveraged by an attacker to derive sensitive information from encrypted text using dictionary attacks."},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-329"]},"defaultConfiguration":{"level":"warning"}},{"id":"CVE-2016-1000027 spring-aspects 5.2.2.RELEASE: spring-boot-starter-data-jpa 2.2.2.RELEASE: org.springframework","shortDescription":{"text":"Transitive Dependency: spring-aspects 5.2.2.RELEASE from spring-boot-starter-data-jpa 2.2.2.RELEASE (CVE-2016-1000027)"},"fullDescription":{"text":"Pivotal Spring Framework through 5.3.16 suffers from a potential remote code execution (RCE) issue if used for Java deserialization of untrusted data. Depending on how the library is implemented within a product, this issue may or not occur, and authentication may be required. NOTE: the vendor's position is that untrusted data is not an intended use case. The product's behavior will not be changed because some users rely on deserialization of trusted data."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| spring-aspects 5.2.2.RELEASE  | 5.3.31  | 6.1.2 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/ba6e9d03-9fbd-4086-9631-99d1ad5e520c?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=09f17d81-b282-43ec-9f2b-36c8021d3ca7)\n\n\n## Description\nPivotal Spring Framework through 5.3.16 suffers from a potential remote code execution (RCE) issue if used for Java deserialization of untrusted data. Depending on how the library is implemented within a product, this issue may or not occur, and authentication may be required. NOTE: the vendor's position is that untrusted data is not an intended use case. The product's behavior will not be changed because some users rely on deserialization of trusted data.\n\n## Vulnerabilities(BDSA,CVE)\n:red_circle: [CVE-2016-1000027](https://openhub.net/vulnerabilities/bdsa/CVE-2016-1000027) - Insecure Object Deserialization\n\n\n\n\n\n\n\n## Dependency tree\n- org.owasp.webgoat:webgoat-container:v8.1.0:-maven\n    - org.springframework.boot:spring-boot-starter-data-jpa:2.2.2.RELEASE\n        - org.springframework:spring-aspects:5.2.2.RELEASE\n\n\n## References\n* Common Weakness Enumeration: [CWE-502](https://cwe.mitre.org/data/definitions/502.html)\n\n","text":"Pivotal Spring Framework through 5.3.16 suffers from a potential remote code execution (RCE) issue if used for Java deserialization of untrusted data. Depending on how the library is implemented within a product, this issue may or not occur, and authentication may be required. NOTE: the vendor's position is that untrusted data is not an intended use case. The product's behavior will not be changed because some users rely on deserialization of trusted data."},"properties":{"security-severity":"9.1","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-502"]},"defaultConfiguration":{"level":"error"}},{"id":"CVE-2022-22965 spring-aspects 5.2.2.RELEASE: spring-boot-starter-data-jpa 2.2.2.RELEASE: org.springframework","shortDescription":{"text":"Transitive Dependency: spring-aspects 5.2.2.RELEASE from spring-boot-starter-data-jpa 2.2.2.RELEASE (CVE-2022-22965)"},"fullDescription":{"text":"Spring Framework is vulnerable to a flaw in the access restrictions to the security sensitive `ClassLoader` property. The restrictions can be bypassed through alternative paths available with Java9 and later. An attacker can leverage this vulnerability to cause remote code execution (RCE).\n\n**Note** this issue exists because the restrictions that were introduced to prevent exploitation of BDSA-2010-0001 (CVE-2010-1622) can be bypassed on platforms where Java9 and later are in use.\n\nThis vulnerability is listed as exploitable by the Cybersecurity \u0026 Infrastructure Security Agency in their [Known Exploited Vulnerabilities Catalog](https://www.cisa.gov/known-exploited-vulnerabilities-catalog)."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| spring-aspects 5.2.2.RELEASE  | 5.3.31  | 6.1.2 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/ba6e9d03-9fbd-4086-9631-99d1ad5e520c?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=09f17d81-b282-43ec-9f2b-36c8021d3ca7)\n\n\n## Description\nSpring Framework is vulnerable to a flaw in the access restrictions to the security sensitive `ClassLoader` property. The restrictions can be bypassed through alternative paths available with Java9 and later. An attacker can leverage this vulnerability to cause remote code execution (RCE).\n\n**Note** this issue exists because the restrictions that were introduced to prevent exploitation of BDSA-2010-0001 (CVE-2010-1622) can be bypassed on platforms where Java9 and later are in use.\n\nThis vulnerability is listed as exploitable by the Cybersecurity \u0026 Infrastructure Security Agency in their [Known Exploited Vulnerabilities Catalog](https://www.cisa.gov/known-exploited-vulnerabilities-catalog).\n\n## Vulnerabilities(BDSA,CVE)\n:red_circle: [CVE-2022-22965](https://openhub.net/vulnerabilities/bdsa/CVE-2022-22965) - Incomplete List of Disallowed Inputs\n\n\n\n## Solution\nFixed in [**5.3.18**](https://github.com/spring-projects/spring-framework/releases/tag/v5.3.18) by [this](https://github.com/spring-projects/spring-framework/commit/002546b3e4b8d791ea6acccb81eb3168f51abb15) commit and  [**5.2.20**](https://github.com/spring-projects/spring-framework/releases/tag/v5.2.20.RELEASE) by [this](https://github.com/spring-projects/spring-framework/commit/996f701a1916d10202c1d0d281f06ab1f2e1117e) commit .\n\nThe latest releases can be found [here](https://github.com/spring-projects/spring-framework/tags).\n\n## Workaround\nAn official workaround for the issue has been outlined [here](https://spring.io/blog/2022/03/31/spring-framework-rce-early-announcement).\n\n## Dependency tree\n- org.owasp.webgoat:webgoat-container:v8.1.0:-maven\n    - org.springframework.boot:spring-boot-starter-data-jpa:2.2.2.RELEASE\n        - org.springframework:spring-aspects:5.2.2.RELEASE\n\n\n## References\n* Common Weakness Enumeration: [CWE-184](https://cwe.mitre.org/data/definitions/184.html)\n* Common Weakness Enumeration: [CWE-749](https://cwe.mitre.org/data/definitions/749.html)\n\n","text":"Spring Framework is vulnerable to a flaw in the access restrictions to the security sensitive `ClassLoader` property. The restrictions can be bypassed through alternative paths available with Java9 and later. An attacker can leverage this vulnerability to cause remote code execution (RCE).\n\n**Note** this issue exists because the restrictions that were introduced to prevent exploitation of BDSA-2010-0001 (CVE-2010-1622) can be bypassed on platforms where Java9 and later are in use.\n\nThis vulnerability is listed as exploitable by the Cybersecurity \u0026 Infrastructure Security Agency in their [Known Exploited Vulnerabilities Catalog](https://www.cisa.gov/known-exploited-vulnerabilities-catalog)."},"properties":{"security-severity":"9.1","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-184","external/cwe/cwe-749"]},"defaultConfiguration":{"level":"error"}},{"id":"CVE-2020-5397 spring-aspects 5.2.2.RELEASE: spring-boot-starter-data-jpa 2.2.2.RELEASE: org.springframework","shortDescription":{"text":"Transitive Dependency: spring-aspects 5.2.2.RELEASE from spring-boot-starter-data-jpa 2.2.2.RELEASE (CVE-2020-5397)"},"fullDescription":{"text":"Spring Framework is vulnerable to cross-site request forgery (CSRF) attacks via CORS preflight requests which target Spring MVC or Spring WebFlux endpoints."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| spring-aspects 5.2.2.RELEASE  | 5.3.31  | 6.1.2 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/ba6e9d03-9fbd-4086-9631-99d1ad5e520c?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=09f17d81-b282-43ec-9f2b-36c8021d3ca7)\n\n\n## Description\nSpring Framework is vulnerable to cross-site request forgery (CSRF) attacks via CORS preflight requests which target Spring MVC or Spring WebFlux endpoints.\n\n## Vulnerabilities(BDSA,CVE)\n:orange_circle: [CVE-2020-5397](https://openhub.net/vulnerabilities/bdsa/CVE-2020-5397) - Cross-Site Request Forgery (CSRF)\n\n\n\n## Solution\nFixed in [**5.2.3**](https://github.com/spring-projects/spring-framework/releases/tag/v5.2.3.RELEASE).\n\n\n\n## Dependency tree\n- org.owasp.webgoat:webgoat-container:v8.1.0:-maven\n    - org.springframework.boot:spring-boot-starter-data-jpa:2.2.2.RELEASE\n        - org.springframework:spring-aspects:5.2.2.RELEASE\n\n\n## References\n* Common Weakness Enumeration: [CWE-352](https://cwe.mitre.org/data/definitions/352.html)\n\n","text":"Spring Framework is vulnerable to cross-site request forgery (CSRF) attacks via CORS preflight requests which target Spring MVC or Spring WebFlux endpoints."},"properties":{"security-severity":"8.9","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-352"]},"defaultConfiguration":{"level":"error"}},{"id":"BDSA-2022-0847 spring-aspects 5.2.2.RELEASE: spring-boot-starter-data-jpa 2.2.2.RELEASE: org.springframework","shortDescription":{"text":"Transitive Dependency: spring-aspects 5.2.2.RELEASE from spring-boot-starter-data-jpa 2.2.2.RELEASE (BDSA-2022-0847)"},"fullDescription":{"text":"Software systems using Spring Framework may be vulnerable to unsafe deserialization if they employ unsafe use of certain provided deserialization functionality. A remote attacker could potentially execute arbitrary code on a vulnerable endpoint by passing a maliciously crafted serialized object to that endpoint.\n\n**Note**: This issue only affects software that has been written to leverage specific deserialization functionality provided by the Spring Framework without sanitization."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| spring-aspects 5.2.2.RELEASE  | 5.3.31  | 6.1.2 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/ba6e9d03-9fbd-4086-9631-99d1ad5e520c?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=09f17d81-b282-43ec-9f2b-36c8021d3ca7)\n\n\n## Description\nSoftware systems using Spring Framework may be vulnerable to unsafe deserialization if they employ unsafe use of certain provided deserialization functionality. A remote attacker could potentially execute arbitrary code on a vulnerable endpoint by passing a maliciously crafted serialized object to that endpoint.\n\n**Note**: This issue only affects software that has been written to leverage specific deserialization functionality provided by the Spring Framework without sanitization.\n\n## Vulnerabilities(BDSA,CVE)\n:orange_circle: [BDSA-2022-0847](https://openhub.net/vulnerabilities/bdsa/BDSA-2022-0847) - Insecure Object Deserialization\n\n\n\n## Solution\nFixed in **[6.0.0-M4](https://github.com/spring-projects/spring-framework/releases/tag/v6.0.0-M4)** by [this](https://github.com/spring-projects/spring-framework/commit/7f7fb58dd0dae86d22268a4b59ac7c72a6c22529) commit.\n\nFixed in **[5.3.18](https://github.com/spring-projects/spring-framework/releases/tag/v5.3.18)** and **[5.2.20](https://github.com/spring-projects/spring-framework/releases/tag/v5.2.20.RELEASE)** by [this](https://github.com/spring-projects/spring-framework/commit/3811cd4c0a0be3aac6e842cf1890610ce986449d) commit.\n\n**Note**: These patches simply annotate the dangerous method as deprecated or documents the dangers. It is the responsibility of developers who call this method to ensure that it is not used with unsanitized untrusted input.\n\n\n\n## Dependency tree\n- org.owasp.webgoat:webgoat-container:v8.1.0:-maven\n    - org.springframework.boot:spring-boot-starter-data-jpa:2.2.2.RELEASE\n        - org.springframework:spring-aspects:5.2.2.RELEASE\n\n\n## References\n* Common Weakness Enumeration: [CWE-502](https://cwe.mitre.org/data/definitions/502.html)\n\n","text":"Software systems using Spring Framework may be vulnerable to unsafe deserialization if they employ unsafe use of certain provided deserialization functionality. A remote attacker could potentially execute arbitrary code on a vulnerable endpoint by passing a maliciously crafted serialized object to that endpoint.\n\n**Note**: This issue only affects software that has been written to leverage specific deserialization functionality provided by the Spring Framework without sanitization."},"properties":{"security-severity":"8.9","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-502"]},"defaultConfiguration":{"level":"error"}},{"id":"CVE-2020-5398 spring-aspects 5.2.2.RELEASE: spring-boot-starter-data-jpa 2.2.2.RELEASE: org.springframework","shortDescription":{"text":"Transitive Dependency: spring-aspects 5.2.2.RELEASE from spring-boot-starter-data-jpa 2.2.2.RELEASE (CVE-2020-5398)"},"fullDescription":{"text":"Spring Framework is vulnerable to a reflected file download (RFD) attack via improper input validation on filenames in a `Content-Disposition` header."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| spring-aspects 5.2.2.RELEASE  | 5.3.31  | 6.1.2 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/ba6e9d03-9fbd-4086-9631-99d1ad5e520c?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=09f17d81-b282-43ec-9f2b-36c8021d3ca7)\n\n\n## Description\nSpring Framework is vulnerable to a reflected file download (RFD) attack via improper input validation on filenames in a `Content-Disposition` header.\n\n## Vulnerabilities(BDSA,CVE)\n:orange_circle: [CVE-2020-5398](https://openhub.net/vulnerabilities/bdsa/CVE-2020-5398) - Weak Input Validation\n\n\n\n## Solution\nFixed by [this](https://github.com/spring-projects/spring-framework/commit/956ffe68587c8d5f21135b5ce4650af0c2dea933) commit in:\n* [**5.2.3**](https://github.com/spring-projects/spring-framework/releases/tag/v5.2.3.RELEASE)\n* [**5.1.13**](https://github.com/spring-projects/spring-framework/releases/tag/v5.1.13.RELEASE) \n* [**5.0.16**](https://github.com/spring-projects/spring-framework/releases/tag/v5.0.16.RELEASE)\n\n\n\n## Dependency tree\n- org.owasp.webgoat:webgoat-container:v8.1.0:-maven\n    - org.springframework.boot:spring-boot-starter-data-jpa:2.2.2.RELEASE\n        - org.springframework:spring-aspects:5.2.2.RELEASE\n\n\n## References\n* Common Weakness Enumeration: [CWE-20](https://cwe.mitre.org/data/definitions/20.html)\n\n","text":"Spring Framework is vulnerable to a reflected file download (RFD) attack via improper input validation on filenames in a `Content-Disposition` header."},"properties":{"security-severity":"8.9","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-20"]},"defaultConfiguration":{"level":"error"}},{"id":"CVE-2021-22096 spring-aspects 5.2.2.RELEASE: spring-boot-starter-data-jpa 2.2.2.RELEASE: org.springframework","shortDescription":{"text":"Transitive Dependency: spring-aspects 5.2.2.RELEASE from spring-boot-starter-data-jpa 2.2.2.RELEASE (CVE-2021-22096)"},"fullDescription":{"text":"Spring Framework is vulnerable to log file injection due to the insufficient validation of user input in an undisclosed component. An attacker could leverage this issue in order to add arbitrary entries to a log file which could impact both the integrity issues and performance issues.\n\n**Note**: a follow-up to this issue was disclosed as **CVE-2021-22060** (**BDSA-2021-3236**), with further fixed releases that protect against additional types of input and in more places of the Spring Framework codebase."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| spring-aspects 5.2.2.RELEASE  | 5.3.31  | 6.1.2 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/ba6e9d03-9fbd-4086-9631-99d1ad5e520c?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=09f17d81-b282-43ec-9f2b-36c8021d3ca7)\n\n\n## Description\nSpring Framework is vulnerable to log file injection due to the insufficient validation of user input in an undisclosed component. An attacker could leverage this issue in order to add arbitrary entries to a log file which could impact both the integrity issues and performance issues.\n\n**Note**: a follow-up to this issue was disclosed as **CVE-2021-22060** (**BDSA-2021-3236**), with further fixed releases that protect against additional types of input and in more places of the Spring Framework codebase.\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [CVE-2021-22096](https://openhub.net/vulnerabilities/bdsa/CVE-2021-22096) - Injection in Downstream Component\n\n\n\n## Solution\nFixed in versions [**5.3.14**](https://github.com/spring-projects/spring-framework/releases/tag/v5.3.14) and [**5.2.19**](https://github.com/spring-projects/spring-framework/releases/tag/v5.2.19.RELEASE).\n\nThe latest stable releases can be found [here](https://github.com/spring-projects/spring-framework/releases).\n\n\n\n## Dependency tree\n- org.owasp.webgoat:webgoat-container:v8.1.0:-maven\n    - org.springframework.boot:spring-boot-starter-data-jpa:2.2.2.RELEASE\n        - org.springframework:spring-aspects:5.2.2.RELEASE\n\n\n## References\n* Common Weakness Enumeration: [CWE-74](https://cwe.mitre.org/data/definitions/74.html)\n\n","text":"Spring Framework is vulnerable to log file injection due to the insufficient validation of user input in an undisclosed component. An attacker could leverage this issue in order to add arbitrary entries to a log file which could impact both the integrity issues and performance issues.\n\n**Note**: a follow-up to this issue was disclosed as **CVE-2021-22060** (**BDSA-2021-3236**), with further fixed releases that protect against additional types of input and in more places of the Spring Framework codebase."},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-74"]},"defaultConfiguration":{"level":"warning"}},{"id":"CVE-2021-22060 spring-aspects 5.2.2.RELEASE: spring-boot-starter-data-jpa 2.2.2.RELEASE: org.springframework","shortDescription":{"text":"Transitive Dependency: spring-aspects 5.2.2.RELEASE from spring-boot-starter-data-jpa 2.2.2.RELEASE (CVE-2021-22060)"},"fullDescription":{"text":"Spring Framework is vulnerable to log file injection due to the insufficient validation of user input in an undisclosed component. An attacker could leverage this issue in order to add arbitrary entries to a log file which could impact both the integrity issues and performance issues.\n\n**Note**: the vendor states this issue exists as a follow up to CVE-2021-22096 (BDSA-2022-0011) that protects against additional types of input and in more places of the Spring Framework codebase."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| spring-aspects 5.2.2.RELEASE  | 5.3.31  | 6.1.2 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/ba6e9d03-9fbd-4086-9631-99d1ad5e520c?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=09f17d81-b282-43ec-9f2b-36c8021d3ca7)\n\n\n## Description\nSpring Framework is vulnerable to log file injection due to the insufficient validation of user input in an undisclosed component. An attacker could leverage this issue in order to add arbitrary entries to a log file which could impact both the integrity issues and performance issues.\n\n**Note**: the vendor states this issue exists as a follow up to CVE-2021-22096 (BDSA-2022-0011) that protects against additional types of input and in more places of the Spring Framework codebase.\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [CVE-2021-22060](https://openhub.net/vulnerabilities/bdsa/CVE-2021-22060) - Injection in Downstream Component\n\n\n\n## Solution\nFixed in versions [**5.3.14**](https://github.com/spring-projects/spring-framework/releases/tag/v5.3.14) and [**5.2.19**](https://github.com/spring-projects/spring-framework/releases/tag/v5.2.19.RELEASE).\n\nThe latest stable releases can be found [here](https://github.com/spring-projects/spring-framework/releases).\n\n\n\n## Dependency tree\n- org.owasp.webgoat:webgoat-container:v8.1.0:-maven\n    - org.springframework.boot:spring-boot-starter-data-jpa:2.2.2.RELEASE\n        - org.springframework:spring-aspects:5.2.2.RELEASE\n\n\n## References\n* Common Weakness Enumeration: [CWE-74](https://cwe.mitre.org/data/definitions/74.html)\n\n","text":"Spring Framework is vulnerable to log file injection due to the insufficient validation of user input in an undisclosed component. An attacker could leverage this issue in order to add arbitrary entries to a log file which could impact both the integrity issues and performance issues.\n\n**Note**: the vendor states this issue exists as a follow up to CVE-2021-22096 (BDSA-2022-0011) that protects against additional types of input and in more places of the Spring Framework codebase."},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-74"]},"defaultConfiguration":{"level":"warning"}},{"id":"CVE-2022-22950 spring-aspects 5.2.2.RELEASE: spring-boot-starter-data-jpa 2.2.2.RELEASE: org.springframework","shortDescription":{"text":"Transitive Dependency: spring-aspects 5.2.2.RELEASE from spring-boot-starter-data-jpa 2.2.2.RELEASE (CVE-2022-22950)"},"fullDescription":{"text":"Spring-Framework's spring-expression is vulnerable to a denial-of-service (DoS) condition. This allows an attacker to use crafted input to cause the spring-expression process to crash due to an exception."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| spring-aspects 5.2.2.RELEASE  | 5.3.31  | 6.1.2 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/ba6e9d03-9fbd-4086-9631-99d1ad5e520c?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=09f17d81-b282-43ec-9f2b-36c8021d3ca7)\n\n\n## Description\nSpring-Framework's spring-expression is vulnerable to a denial-of-service (DoS) condition. This allows an attacker to use crafted input to cause the spring-expression process to crash due to an exception.\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [CVE-2022-22950](https://openhub.net/vulnerabilities/bdsa/CVE-2022-22950) - Allocation of Resources Without Limits or Throttling\n\n\n\n## Solution\nFixed in version [**5.3.17**](https://github.com/spring-projects/spring-framework/releases/tag/v5.3.17) by [this](https://github.com/spring-projects/spring-framework/commit/94af2ca06bf711de03286999b1c64a703d6de552) commit.\n\nThe latest stable releases can be found [here](https://github.com/spring-projects/spring-framework/tags).\n\n\n\n## Dependency tree\n- org.owasp.webgoat:webgoat-container:v8.1.0:-maven\n    - org.springframework.boot:spring-boot-starter-data-jpa:2.2.2.RELEASE\n        - org.springframework:spring-aspects:5.2.2.RELEASE\n\n\n## References\n* Common Weakness Enumeration: [CWE-770](https://cwe.mitre.org/data/definitions/770.html)\n\n","text":"Spring-Framework's spring-expression is vulnerable to a denial-of-service (DoS) condition. This allows an attacker to use crafted input to cause the spring-expression process to crash due to an exception."},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-770"]},"defaultConfiguration":{"level":"warning"}},{"id":"CVE-2021-22118 spring-aspects 5.2.2.RELEASE: spring-boot-starter-data-jpa 2.2.2.RELEASE: org.springframework","shortDescription":{"text":"Transitive Dependency: spring-aspects 5.2.2.RELEASE from spring-boot-starter-data-jpa 2.2.2.RELEASE (CVE-2021-22118)"},"fullDescription":{"text":"Spring Framework is vulnerable to privilege escalation due to the creation of unsafe temporary directories by the WebFlux component. A local authenticated attacker could modify arbitrary files via maliciously crafted `multipart` requests. \n\nThis vulnerability does not affect Spring MVC applications, or applications that do not handle `multipart` file requests."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| spring-aspects 5.2.2.RELEASE  | 5.3.31  | 6.1.2 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/ba6e9d03-9fbd-4086-9631-99d1ad5e520c?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=09f17d81-b282-43ec-9f2b-36c8021d3ca7)\n\n\n## Description\nSpring Framework is vulnerable to privilege escalation due to the creation of unsafe temporary directories by the WebFlux component. A local authenticated attacker could modify arbitrary files via maliciously crafted `multipart` requests. \n\nThis vulnerability does not affect Spring MVC applications, or applications that do not handle `multipart` file requests.\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [CVE-2021-22118](https://openhub.net/vulnerabilities/bdsa/CVE-2021-22118) - Third-party component usage\n\n\n\n## Solution\nFixed in [**5.3.7**](https://github.com/spring-projects/spring-framework/releases/tag/v5.3.7)  by [this](https://github.com/spring-projects/spring-framework/commit/cce60c479c22101f24b2b4abebb6d79440b120d1) commit and [this](https://github.com/spring-projects/spring-framework/commit/0d0d75e25322d8161002d861fff3ec04ba8be5ac) commit, and in [**5.2.15**](https://github.com/spring-projects/spring-framework/releases/tag/v5.2.15.RELEASE) by [this](https://github.com/spring-projects/spring-framework/commit/85ad63bd35f6f10fa5549ba9a11869144338bd8a) commit.\n\nThe latest stable releases are available [here](https://github.com/spring-projects/spring-framework/releases/).\n\n\n\n## Dependency tree\n- org.owasp.webgoat:webgoat-container:v8.1.0:-maven\n    - org.springframework.boot:spring-boot-starter-data-jpa:2.2.2.RELEASE\n        - org.springframework:spring-aspects:5.2.2.RELEASE\n\n\n## References\n* Common Weakness Enumeration: [CWE-264](https://cwe.mitre.org/data/definitions/264.html)\n* Common Weakness Enumeration: [CWE-376](https://cwe.mitre.org/data/definitions/376.html)\n\n","text":"Spring Framework is vulnerable to privilege escalation due to the creation of unsafe temporary directories by the WebFlux component. A local authenticated attacker could modify arbitrary files via maliciously crafted `multipart` requests. \n\nThis vulnerability does not affect Spring MVC applications, or applications that do not handle `multipart` file requests."},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-264","external/cwe/cwe-376"]},"defaultConfiguration":{"level":"warning"}},{"id":"CVE-2022-22970 spring-aspects 5.2.2.RELEASE: spring-boot-starter-data-jpa 2.2.2.RELEASE: org.springframework","shortDescription":{"text":"Transitive Dependency: spring-aspects 5.2.2.RELEASE from spring-boot-starter-data-jpa 2.2.2.RELEASE (CVE-2022-22970)"},"fullDescription":{"text":"Spring Framework is vulnerable to denial-of-service (DoS) due to the improper implementation of data binding functionality. A remote attacker could cause a vulnerable server to crash if that server provides file upload functionality."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| spring-aspects 5.2.2.RELEASE  | 5.3.31  | 6.1.2 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/ba6e9d03-9fbd-4086-9631-99d1ad5e520c?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=09f17d81-b282-43ec-9f2b-36c8021d3ca7)\n\n\n## Description\nSpring Framework is vulnerable to denial-of-service (DoS) due to the improper implementation of data binding functionality. A remote attacker could cause a vulnerable server to crash if that server provides file upload functionality.\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [CVE-2022-22970](https://openhub.net/vulnerabilities/bdsa/CVE-2022-22970) - Incorrect Provision of Specified Functionality\n\n\n\n## Solution\nFixed in version [**5.3.20**](https://github.com/spring-projects/spring-framework/releases/tag/v5.3.20) and in version [**5.2.22**](https://github.com/spring-projects/spring-framework/releases/tag/v5.2.22.RELEASE).\n\nThe latest stable releases can be found [here](https://github.com/spring-projects/spring-framework/releases).\n\n\n\n## Dependency tree\n- org.owasp.webgoat:webgoat-container:v8.1.0:-maven\n    - org.springframework.boot:spring-boot-starter-data-jpa:2.2.2.RELEASE\n        - org.springframework:spring-aspects:5.2.2.RELEASE\n\n\n## References\n* Common Weakness Enumeration: [CWE-684](https://cwe.mitre.org/data/definitions/684.html)\n\n","text":"Spring Framework is vulnerable to denial-of-service (DoS) due to the improper implementation of data binding functionality. A remote attacker could cause a vulnerable server to crash if that server provides file upload functionality."},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-684"]},"defaultConfiguration":{"level":"warning"}},{"id":"CVE-2022-22971 spring-aspects 5.2.2.RELEASE: spring-boot-starter-data-jpa 2.2.2.RELEASE: org.springframework","shortDescription":{"text":"Transitive Dependency: spring-aspects 5.2.2.RELEASE from spring-boot-starter-data-jpa 2.2.2.RELEASE (CVE-2022-22971)"},"fullDescription":{"text":"Spring Framework is vulnerable to denial-of-service (DoS) due to the improper handling of the STOMP protocol for websockets. A remote authenticated attacker could leverage this issue in order to cause a server to crash."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| spring-aspects 5.2.2.RELEASE  | 5.3.31  | 6.1.2 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/ba6e9d03-9fbd-4086-9631-99d1ad5e520c?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=09f17d81-b282-43ec-9f2b-36c8021d3ca7)\n\n\n## Description\nSpring Framework is vulnerable to denial-of-service (DoS) due to the improper handling of the STOMP protocol for websockets. A remote authenticated attacker could leverage this issue in order to cause a server to crash.\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [CVE-2022-22971](https://openhub.net/vulnerabilities/bdsa/CVE-2022-22971) - Incorrect Provision of Specified Functionality\n\n\n\n## Solution\nFixed in version [**5.3.20**](https://github.com/spring-projects/spring-framework/releases/tag/v5.3.20) and in version [**5.2.22**](https://github.com/spring-projects/spring-framework/releases/tag/v5.2.22.RELEASE).\n\nThe latest stable releases can be found [here](https://github.com/spring-projects/spring-framework/releases).\n\n\n\n## Dependency tree\n- org.owasp.webgoat:webgoat-container:v8.1.0:-maven\n    - org.springframework.boot:spring-boot-starter-data-jpa:2.2.2.RELEASE\n        - org.springframework:spring-aspects:5.2.2.RELEASE\n\n\n## References\n* Common Weakness Enumeration: [CWE-684](https://cwe.mitre.org/data/definitions/684.html)\n\n","text":"Spring Framework is vulnerable to denial-of-service (DoS) due to the improper handling of the STOMP protocol for websockets. A remote authenticated attacker could leverage this issue in order to cause a server to crash."},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-684"]},"defaultConfiguration":{"level":"warning"}},{"id":"CVE-2023-20861 spring-aspects 5.2.2.RELEASE: spring-boot-starter-data-jpa 2.2.2.RELEASE: org.springframework","shortDescription":{"text":"Transitive Dependency: spring-aspects 5.2.2.RELEASE from spring-boot-starter-data-jpa 2.2.2.RELEASE (CVE-2023-20861)"},"fullDescription":{"text":"Spring Framework is vulnerable to denial-of-service (DoS) via specially crafted SpEL expressions. An attacker could exploit this issue by passing a crafted SpEL expression to the application which may result in a crash."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| spring-aspects 5.2.2.RELEASE  | 5.3.31  | 6.1.2 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/ba6e9d03-9fbd-4086-9631-99d1ad5e520c?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=09f17d81-b282-43ec-9f2b-36c8021d3ca7)\n\n\n## Description\nSpring Framework is vulnerable to denial-of-service (DoS) via specially crafted SpEL expressions. An attacker could exploit this issue by passing a crafted SpEL expression to the application which may result in a crash.\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [CVE-2023-20861](https://openhub.net/vulnerabilities/bdsa/CVE-2023-20861) - Weak Input Validation\n\n\n\n## Solution\nFixed in:\n* [**5.2.23**](https://github.com/spring-projects/spring-framework/releases/tag/v5.2.23.RELEASE) by [this](https://github.com/spring-projects/spring-framework/commit/52c93b1c4b24d70de233a958e60e7c5822bd274f) commit,\n* [**5.3.26**](https://github.com/spring-projects/spring-framework/releases/tag/v5.3.26) by [this](https://github.com/spring-projects/spring-framework/commit/430fc25acad2e85cbdddcd52b64481691f03ebd1) commit,\n* [**6.0.7**](https://github.com/spring-projects/spring-framework/releases/tag/v6.0.7) by [this](https://github.com/spring-projects/spring-framework/commit/935c29e3ddba5b19951e54f6685c70ed45d9cbe5) commit.\n\nThe latest stable releases are available [here](https://github.com/spring-projects/spring-framework/releases).\n\n\n\n## Dependency tree\n- org.owasp.webgoat:webgoat-container:v8.1.0:-maven\n    - org.springframework.boot:spring-boot-starter-data-jpa:2.2.2.RELEASE\n        - org.springframework:spring-aspects:5.2.2.RELEASE\n\n\n## References\n* Common Weakness Enumeration: [CWE-20](https://cwe.mitre.org/data/definitions/20.html)\n\n","text":"Spring Framework is vulnerable to denial-of-service (DoS) via specially crafted SpEL expressions. An attacker could exploit this issue by passing a crafted SpEL expression to the application which may result in a crash."},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-20"]},"defaultConfiguration":{"level":"warning"}},{"id":"CVE-2023-20863 spring-aspects 5.2.2.RELEASE: spring-boot-starter-data-jpa 2.2.2.RELEASE: org.springframework","shortDescription":{"text":"Transitive Dependency: spring-aspects 5.2.2.RELEASE from spring-boot-starter-data-jpa 2.2.2.RELEASE (CVE-2023-20863)"},"fullDescription":{"text":"Spring Framework is vulnerable to denial-of-service (DoS) via specially crafted SpEL expressions."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| spring-aspects 5.2.2.RELEASE  | 5.3.31  | 6.1.2 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/ba6e9d03-9fbd-4086-9631-99d1ad5e520c?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=09f17d81-b282-43ec-9f2b-36c8021d3ca7)\n\n\n## Description\nSpring Framework is vulnerable to denial-of-service (DoS) via specially crafted SpEL expressions.\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [CVE-2023-20863](https://openhub.net/vulnerabilities/bdsa/CVE-2023-20863) - Weak Input Validation\n\n\n\n## Solution\nFixed in:\n* [**5.2.24**](https://github.com/spring-projects/spring-framework/releases/tag/v5.2.24.RELEASE)\n* [**5.3.27**](https://github.com/spring-projects/spring-framework/releases/tag/v5.3.27)\n* [**6.0.8**](https://github.com/spring-projects/spring-framework/releases/tag/v6.0.8)\n\nThe latest stable releases are available [here](https://github.com/spring-projects/spring-framework/releases).\n\n\n\n## Dependency tree\n- org.owasp.webgoat:webgoat-container:v8.1.0:-maven\n    - org.springframework.boot:spring-boot-starter-data-jpa:2.2.2.RELEASE\n        - org.springframework:spring-aspects:5.2.2.RELEASE\n\n\n## References\n* Common Weakness Enumeration: [CWE-20](https://cwe.mitre.org/data/definitions/20.html)\n\n","text":"Spring Framework is vulnerable to denial-of-service (DoS) via specially crafted SpEL expressions."},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-20"]},"defaultConfiguration":{"level":"warning"}},{"id":"CVE-2020-5421 spring-aspects 5.2.2.RELEASE: spring-boot-starter-data-jpa 2.2.2.RELEASE: org.springframework","shortDescription":{"text":"Transitive Dependency: spring-aspects 5.2.2.RELEASE from spring-boot-starter-data-jpa 2.2.2.RELEASE (CVE-2020-5421)"},"fullDescription":{"text":"It was discovered that Spring Framework was vulnerable to RFD protection bypass. In some instances, depending on the browser used, an attacker could bypass the RFD attack protections via the use of a `jsessionid` path parameter."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| spring-aspects 5.2.2.RELEASE  | 5.3.31  | 6.1.2 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/ba6e9d03-9fbd-4086-9631-99d1ad5e520c?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=09f17d81-b282-43ec-9f2b-36c8021d3ca7)\n\n\n## Description\nIt was discovered that Spring Framework was vulnerable to RFD protection bypass. In some instances, depending on the browser used, an attacker could bypass the RFD attack protections via the use of a `jsessionid` path parameter.\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [CVE-2020-5421](https://openhub.net/vulnerabilities/bdsa/CVE-2020-5421) - Weak Input Validation\n\n\n\n## Solution\nFixed in:\n* [**5.2.9**](https://github.com/spring-projects/spring-framework/releases/tag/v5.2.9.RELEASE) by [this](https://github.com/spring-projects/spring-framework/commit/899761f0a8890353dc01f10d2af96ae192f3e655) commit,\n* [**5.1.18**](https://github.com/spring-projects/spring-framework/releases/tag/v5.1.18.RELEASE) by [this](https://github.com/spring-projects/spring-framework/commit/a63c8886c00f30fea5b25f50ddf6f56c6eb957bd) commit,\n* [**5.0.19**](https://github.com/spring-projects/spring-framework/releases/tag/v5.0.19.RELEASE) by [this](https://github.com/spring-projects/spring-framework/commit/aec3a4c69e02d87f87258b0ab5c1d6c83f4cb44f) commit,\n* [**4.3.29**](https://github.com/spring-projects/spring-framework/releases/tag/v4.3.29.RELEASE) by [this](https://github.com/spring-projects/spring-framework/commit/2f75212eb667a30fe2fa9b5aca8f22d5e255821f) commit.\n\n\n\n## Dependency tree\n- org.owasp.webgoat:webgoat-container:v8.1.0:-maven\n    - org.springframework.boot:spring-boot-starter-data-jpa:2.2.2.RELEASE\n        - org.springframework:spring-aspects:5.2.2.RELEASE\n\n\n## References\n* Common Weakness Enumeration: [CWE-20](https://cwe.mitre.org/data/definitions/20.html)\n\n","text":"It was discovered that Spring Framework was vulnerable to RFD protection bypass. In some instances, depending on the browser used, an attacker could bypass the RFD attack protections via the use of a `jsessionid` path parameter."},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-20"]},"defaultConfiguration":{"level":"warning"}},{"id":"CVE-2022-22968 spring-aspects 5.2.2.RELEASE: spring-boot-starter-data-jpa 2.2.2.RELEASE: org.springframework","shortDescription":{"text":"Transitive Dependency: spring-aspects 5.2.2.RELEASE from spring-boot-starter-data-jpa 2.2.2.RELEASE (CVE-2022-22968)"},"fullDescription":{"text":"Spring Framework is vulnerable to data binding protection bypass due to improper validation of specified disallowed fields in `DataBinders`. This could be leveraged by an attacker to bypass the suggested workaround to **CVE-2022-22965** (**BDSA-2022-0858**) if it is improperly implemented."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| spring-aspects 5.2.2.RELEASE  | 5.3.31  | 6.1.2 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/ba6e9d03-9fbd-4086-9631-99d1ad5e520c?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=09f17d81-b282-43ec-9f2b-36c8021d3ca7)\n\n\n## Description\nSpring Framework is vulnerable to data binding protection bypass due to improper validation of specified disallowed fields in `DataBinders`. This could be leveraged by an attacker to bypass the suggested workaround to **CVE-2022-22965** (**BDSA-2022-0858**) if it is improperly implemented.\n\n## Vulnerabilities(BDSA,CVE)\n:large_blue_circle: [CVE-2022-22968](https://openhub.net/vulnerabilities/bdsa/CVE-2022-22968) - Weak Input Validation\n\n\n\n## Solution\nFixed  in [**5.3.19**](https://github.com/spring-projects/spring-framework/releases/tag/v5.3.19) by [this](https://github.com/spring-projects/spring-framework/commit/a7cf19cec5ebd270f97a194d749e2d5701ad2ab7) commit and [**5.2.21**](https://github.com/spring-projects/spring-framework/releases/tag/v5.2.21.RELEASE) by [this](https://github.com/spring-projects/spring-framework/commit/833e750175349ab4fd502109a8b41af77e25cdea) commit.\n\n\n\n## Dependency tree\n- org.owasp.webgoat:webgoat-container:v8.1.0:-maven\n    - org.springframework.boot:spring-boot-starter-data-jpa:2.2.2.RELEASE\n        - org.springframework:spring-aspects:5.2.2.RELEASE\n\n\n## References\n* Common Weakness Enumeration: [CWE-20](https://cwe.mitre.org/data/definitions/20.html)\n\n","text":"Spring Framework is vulnerable to data binding protection bypass due to improper validation of specified disallowed fields in `DataBinders`. This could be leveraged by an attacker to bypass the suggested workaround to **CVE-2022-22965** (**BDSA-2022-0858**) if it is improperly implemented."},"properties":{"security-severity":"3.8","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-20"]},"defaultConfiguration":{"level":"note"}},{"id":"CVE-2023-2976 guava 18.0: com.google.guava","shortDescription":{"text":"Direct Dependency: guava 18.0 (CVE-2023-2976)"},"fullDescription":{"text":"Guava is vulnerable to authorization bypass due to the use of an insecure temporary directory for certain file creation operations. A local attacker that has access to the default Java temporary directory could access files created by the `FileBackedOutputStream` class, even when they are not intended to be able to do so."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| guava 18.0  | Not available  | 33.0.0-jre |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/7f93b54d-c536-426f-b236-5e2cf6b97f10?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=2f0a32a0-f5c6-45d7-858c-b8a5d922633d)\n\n\n## Description\nGuava is vulnerable to authorization bypass due to the use of an insecure temporary directory for certain file creation operations. A local attacker that has access to the default Java temporary directory could access files created by the `FileBackedOutputStream` class, even when they are not intended to be able to do so.\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [CVE-2023-2976](https://openhub.net/vulnerabilities/bdsa/CVE-2023-2976) - Creation of Temporary File With Insecure Permissions\n\n\n\n## Solution\nFixed in version [**32.0.0**](https://github.com/google/guava/releases/tag/v32.0.0) by [this](https://github.com/google/guava/commit/feb83a1c8fd2e7670b244d5afd23cba5aca43284) commit.\n\nIt should be noted that this patch broke the functionality of `FileBackedOutputStream` and `Files.createTempDir` on Windows. The vendor recommends upgrading to [**32.0.1**](https://github.com/google/guava/releases/tag/v32.0.1), which contains a patch that rectifies this.\n\nThe latest stable releases can be found [here](https://github.com/google/guava/releases).\n\n\n\n\n\n## References\n* Common Weakness Enumeration: [CWE-378](https://cwe.mitre.org/data/definitions/378.html)\n\n","text":"Guava is vulnerable to authorization bypass due to the use of an insecure temporary directory for certain file creation operations. A local attacker that has access to the default Java temporary directory could access files created by the `FileBackedOutputStream` class, even when they are not intended to be able to do so."},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","direct_dependency","patch_available","external/cwe/cwe-378"]},"defaultConfiguration":{"level":"warning"}},{"id":"CVE-2018-10237 guava 18.0: com.google.guava","shortDescription":{"text":"Direct Dependency: guava 18.0 (CVE-2018-10237)"},"fullDescription":{"text":"Servers that depend on the Guava libraries are vulnerable to denial-of-service (DoS) conditions because certain classes allocate memory without proper checks. Potential attackers can leverage this flaw to crash the software repeatedly rendering it unusable."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| guava 18.0  | Not available  | 33.0.0-jre |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/7f93b54d-c536-426f-b236-5e2cf6b97f10?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=2f0a32a0-f5c6-45d7-858c-b8a5d922633d)\n\n\n## Description\nServers that depend on the Guava libraries are vulnerable to denial-of-service (DoS) conditions because certain classes allocate memory without proper checks. Potential attackers can leverage this flaw to crash the software repeatedly rendering it unusable.\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [CVE-2018-10237](https://openhub.net/vulnerabilities/bdsa/CVE-2018-10237) - Uncontrolled Resource Consumption\n\n\n\n## Solution\nFixed in:\n* [**23.6.1**](https://github.com/google/guava/releases/tag/v23.6.1)  by [this](https://github.com/google/guava/commit/a81698a0525b6bcdecef3930aeed4db5aa7ab469) commit,\n* [**24.1.1**](https://github.com/google/guava/releases/tag/v24.1.1) by [this](https://github.com/google/guava/commit/7ec8718f1e6e2814dabaa4b9f96b6b33a813101c) commit,\n* [**25.0**](https://github.com/google/guava/releases/tag/v25.0) by [this](https://github.com/google/guava/commit/f89ece5721b2f637fe754937ff1f3c86d80bb196) commit.\n\nThe latest stable releases are available [here](https://github.com/google/guava/releases).\n\n\n\n\n\n## References\n* Common Weakness Enumeration: [CWE-400](https://cwe.mitre.org/data/definitions/400.html)\n\n","text":"Servers that depend on the Guava libraries are vulnerable to denial-of-service (DoS) conditions because certain classes allocate memory without proper checks. Potential attackers can leverage this flaw to crash the software repeatedly rendering it unusable."},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","direct_dependency","patch_available","external/cwe/cwe-400"]},"defaultConfiguration":{"level":"warning"}},{"id":"CVE-2020-8908 guava 18.0: com.google.guava","shortDescription":{"text":"Direct Dependency: guava 18.0 (CVE-2020-8908)"},"fullDescription":{"text":"Guava creates temporary files and directories with insecure default permissions. A local attacker on the machine could learn the contents of sensitive temporary files.\n\n**Note:** It was determined that the initial patch in version [**30.0**](https://github.com/google/guava/releases/tag/v30.0) by [this](https://github.com/google/guava/commit/fec0dbc4634006a6162cfd4d0d09c962073ddf40) commit was inadequate to fully remove the problem of insecure temporary files from Guava. It only marked a function as deprecated, but the functionality still persisted. A new solution has been released."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| guava 18.0  | Not available  | 33.0.0-jre |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/7f93b54d-c536-426f-b236-5e2cf6b97f10?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=2f0a32a0-f5c6-45d7-858c-b8a5d922633d)\n\n\n## Description\nGuava creates temporary files and directories with insecure default permissions. A local attacker on the machine could learn the contents of sensitive temporary files.\n\n**Note:** It was determined that the initial patch in version [**30.0**](https://github.com/google/guava/releases/tag/v30.0) by [this](https://github.com/google/guava/commit/fec0dbc4634006a6162cfd4d0d09c962073ddf40) commit was inadequate to fully remove the problem of insecure temporary files from Guava. It only marked a function as deprecated, but the functionality still persisted. A new solution has been released.\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [CVE-2020-8908](https://openhub.net/vulnerabilities/bdsa/CVE-2020-8908) - Sensitive Data Exposure\n\n\n\n## Solution\nFixed in version [**32.0.0**](https://github.com/google/guava/releases/tag/v32.0.0) by [this](https://github.com/google/guava/commit/feb83a1c8fd2e7670b244d5afd23cba5aca43284) commit.\n\nThe latest stable releases can be found [here](https://github.com/google/guava/releases).\n\n## Workaround\nA third party workaround has been suggested [here](https://github.com/google/guava/issues/4011):\n\u003e Explicitly set the `java.io.tmpdir` system property to a \"safe\" directory when starting the JVM.\n\n\n\n## References\n* Common Weakness Enumeration: [CWE-200](https://cwe.mitre.org/data/definitions/200.html)\n* Common Weakness Enumeration: [CWE-379](https://cwe.mitre.org/data/definitions/379.html)\n\n","text":"Guava creates temporary files and directories with insecure default permissions. A local attacker on the machine could learn the contents of sensitive temporary files.\n\n**Note:** It was determined that the initial patch in version [**30.0**](https://github.com/google/guava/releases/tag/v30.0) by [this](https://github.com/google/guava/commit/fec0dbc4634006a6162cfd4d0d09c962073ddf40) commit was inadequate to fully remove the problem of insecure temporary files from Guava. It only marked a function as deprecated, but the functionality still persisted. A new solution has been released."},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","direct_dependency","patch_available","external/cwe/cwe-200","external/cwe/cwe-379"]},"defaultConfiguration":{"level":"warning"}},{"id":"CVE-2020-27216 jetty-server 9.4.24.v20191120: wiremock 2.8.0: org.eclipse.jetty","shortDescription":{"text":"Transitive Dependency: jetty-server 9.4.24.v20191120 from wiremock 2.8.0 (CVE-2020-27216)"},"fullDescription":{"text":"Jetty is vulnerable to temporary directory Hijacking via a race condition. If code is executed from this temporary directory it can lead to local privilege escalation."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| jetty-server 9.4.24.v20191120  | 9.4.53.20231009  | 12.0.5 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/ee93672f-853c-4083-a5e8-0d5ab21e8bf9?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=d8221aaa-7d55-4b5a-b3e0-2b5cba26ce60)\n\n\n## Description\nJetty is vulnerable to temporary directory Hijacking via a race condition. If code is executed from this temporary directory it can lead to local privilege escalation.\n\n## Vulnerabilities(BDSA,CVE)\n:orange_circle: [CVE-2020-27216](https://openhub.net/vulnerabilities/bdsa/CVE-2020-27216) - Race Condition due to Improper Synchronization\n\n\n\n## Solution\nFixed in:\n* [**11.0.0.beta3**](https://github.com/eclipse/jetty.project/releases/tag/jetty-11.0.0.beta3)\n* [**10.0.0.beta3**](https://github.com/eclipse/jetty.project/releases/tag/jetty-10.0.0.beta3) \n* [**9.4.33.v20201020**](https://github.com/eclipse/jetty.project/releases/tag/jetty-9.4.33.v20201020) by [this](https://github.com/eclipse/jetty.project/commit/53e0e0e9b25a6309bf24ee3b10984f4145701edb) commit and [this](https://github.com/eclipse/jetty.project/commit/9ad6beb80543b392c91653f6bfce233fc75b9d5f) commit.\n\n## Workaround\nSet a temporary directory, either for the server or the context, to one outside the shared temporary file system. For recent releases, a temporary directory by created by making a directory called work in the `${jetty.base}` directory (the parent directory of the webapps directory). Alternately the java temporary directory can be set with the System Property `java.io.tmpdir`. A more detailed description of how jetty selects a temporary directory is below.\n\nTo mitigate this vulnerability the directory must be set to one that is not writable by an attacker. To avoid information leakage, the directory should also not be readable by an attacker.\n\n## Dependency tree\n- org.owasp.webgoat.lesson:xxe:v8.1.0:-maven\n    - com.github.tomakehurst:wiremock:2.8.0\n        - org.eclipse.jetty:jetty-server:9.4.24.v20191120\n\n\n## References\n* Common Weakness Enumeration: [CWE-362](https://cwe.mitre.org/data/definitions/362.html)\n\n","text":"Jetty is vulnerable to temporary directory Hijacking via a race condition. If code is executed from this temporary directory it can lead to local privilege escalation."},"properties":{"security-severity":"8.9","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-362"]},"defaultConfiguration":{"level":"error"}},{"id":"CVE-2023-44487 jetty-server 9.4.24.v20191120: wiremock 2.8.0: org.eclipse.jetty","shortDescription":{"text":"Transitive Dependency: jetty-server 9.4.24.v20191120 from wiremock 2.8.0 (CVE-2023-44487)"},"fullDescription":{"text":"The HTTP/2 protocol contains a flaw related to the stream multiplexing feature that can allow for excessive resource consumption on servers operating implementations of the HTTP/2 protocol. \n\nThe HTTP/2 protocol allows clients to signal to a server to cancel a previously opened stream by sending an `RST_STREAM` frame. Attackers can abuse this stream canceling ability by opening a large number of streams at once immediately followed by `RST_STREAM` frames. In most HTTP/2 implementations this bypasses concurrent open stream limits and causes servers to spend processing time first handling request frames and then performing stream tear downs. For the server, these operations can pile up whereas the attacker client paid minuscule bandwidth and processing costs.\n\n[Amazon](https://aws.amazon.com/security/security-bulletins/AWS-2023-011/), [Cloudflare](https://blog.cloudflare.com/technical-breakdown-http2-rapid-reset-ddos-attack/) and [Google](https://cloud.google.com/blog/products/identity-security/google-cloud-mitigated-largest-ddos-attack-peaking-above-398-million-rps/) have reported that this vulnerability has been exploited in the wild from August to October 2023.\n\nThis vulnerability is listed as exploitable by the Cybersecurity \u0026 Infrastructure Security Agency in their [Known Exploited Vulnerabilities Catalog](https://www.cisa.gov/known-exploited-vulnerabilities-catalog)."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| jetty-server 9.4.24.v20191120  | 9.4.53.20231009  | 12.0.5 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/ee93672f-853c-4083-a5e8-0d5ab21e8bf9?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=d8221aaa-7d55-4b5a-b3e0-2b5cba26ce60)\n\n\n## Description\nThe HTTP/2 protocol contains a flaw related to the stream multiplexing feature that can allow for excessive resource consumption on servers operating implementations of the HTTP/2 protocol. \n\nThe HTTP/2 protocol allows clients to signal to a server to cancel a previously opened stream by sending an `RST_STREAM` frame. Attackers can abuse this stream canceling ability by opening a large number of streams at once immediately followed by `RST_STREAM` frames. In most HTTP/2 implementations this bypasses concurrent open stream limits and causes servers to spend processing time first handling request frames and then performing stream tear downs. For the server, these operations can pile up whereas the attacker client paid minuscule bandwidth and processing costs.\n\n[Amazon](https://aws.amazon.com/security/security-bulletins/AWS-2023-011/), [Cloudflare](https://blog.cloudflare.com/technical-breakdown-http2-rapid-reset-ddos-attack/) and [Google](https://cloud.google.com/blog/products/identity-security/google-cloud-mitigated-largest-ddos-attack-peaking-above-398-million-rps/) have reported that this vulnerability has been exploited in the wild from August to October 2023.\n\nThis vulnerability is listed as exploitable by the Cybersecurity \u0026 Infrastructure Security Agency in their [Known Exploited Vulnerabilities Catalog](https://www.cisa.gov/known-exploited-vulnerabilities-catalog).\n\n## Vulnerabilities(BDSA,CVE)\n:orange_circle: [CVE-2023-44487](https://openhub.net/vulnerabilities/bdsa/CVE-2023-44487) - Uncontrolled Resource Consumption\n\n\n\n## Solution\nFixed in:\n* nghttp2 [**1.57.0**](https://github.com/nghttp2/nghttp2/releases/tag/v1.57.0) by [this](https://github.com/nghttp2/nghttp2/commit/72b4af6143681f528f1d237b21a9a7aee1738832) commit,\n* NGINX [**1.25.3**](https://hg.nginx.org/nginx/rev/release-1.25.3) by [this](https://hg.nginx.org/nginx/rev/cdda286c0f1b) revision,\n* Apache Tomcat \n\t* [**8.5.94**](https://github.com/apache/tomcat/releases/tag/8.5.94) by [this](https://github.com/apache/tomcat/commit/944332bb15bd2f3bf76ec2caeb1ff0a58a3bc628) commit,\n\t* [**9.0.81**](https://github.com/apache/tomcat/releases/tag/9.0.81) by [this](https://github.com/apache/tomcat/commit/6d1a9fd6642387969e4410b9989c85856b74917a) commit,\n\t* [**10.1.14**](https://github.com/apache/tomcat/releases/tag/10.1.14) by [this](https://github.com/apache/tomcat/commit/76bb4bfbfeae827dce896f650655bbf6e251ed49) commit,\n\t* [**11.0.0-M12**](https://github.com/apache/tomcat/releases/tag/11.0.0-M12) by [this](https://github.com/apache/tomcat/commit/9cdfe25bad707f34b3e5da2994f3f1952a163c3e) commit,\n* Apache Traffic Server\n\t* [**9.2.3-rc0**](https://github.com/apache/trafficserver/releases/tag/9.2.3-rc0) by [this](https://github.com/apache/trafficserver/commit/b28ad74f117307e8de206f1de70c3fa716f90682) commit,\n\t* [**8.1.9-rc0**](https://github.com/apache/trafficserver/releases/tag/8.1.9-rc0) by [this](https://github.com/apache/trafficserver/commit/d742d74039aaa548dda0148ab4ba207906abc620) commit,\n* Netty/Codec/HTTP2 [**4.1.100.Final**](https://mvnrepository.com/artifact/io.netty/netty-codec-http2/4.1.100.Final) by [this](https://github.com/netty/netty/commit/58f75f665aa81a8cbcf6ffa74820042a285c5e61) commit,\n* Eclipse Jetty\n\t* [**12.0.2**](https://github.com/jetty/jetty.project/releases/tag/jetty-12.0.2), [**11.0.17**](https://github.com/jetty/jetty.project/releases/tag/jetty-11.0.17), [**10.0.17**](https://github.com/jetty/jetty.project/releases/tag/jetty-10.0.17) by [this](https://github.com/jetty/jetty.project/commit/dbb94514dc9d3fb21fe92080f57c314e7e06a148) commit,\n\t* [**9.4.53.v20231009**](https://github.com/jetty/jetty.project/releases/tag/jetty-9.4.53.v20231009) by [this](https://github.com/jetty/jetty.project/commit/0f246d12090fb15b7b21dee8429f459fd792de53) commit.\n* lighttpd [**1.4.73**](https://github.com/lighttpd/lighttpd1.4/releases/tag/lighttpd-1.4.73) by [this](https://github.com/lighttpd/lighttpd1.4/commit/7b48f3c843e1113b27f5d278f4d10861cc499a06) commit.\n* grpc-go \n  * [**1.56.3**](https://github.com/grpc/grpc-go/releases/tag/v1.56.3) by [this](https://github.com/grpc/grpc-go/commit/5efd7bd7) commit,\n  * [**1.57.1**](https://github.com/grpc/grpc-go/releases/tag/v1.57.1) by [this](https://github.com/grpc/grpc-go/commit/6a1400d5) commit,\n  * [**1.58.3**](https://github.com/grpc/grpc-go/releases/tag/v1.58.3) by [this](https://github.com/grpc/grpc-go/commit/c40c9ba3) commit,\n * h2o fixed in the **master** branch by [this](https://github.com/h2o/h2o/commit/28fe15117b909588bf14269a0e1c6ec4548579fe) commit which is not yet included in any release.\n\n## Workaround\nDepending on technologies use and their configuration, different mitigation strategies may be available.\n\nIn some cases, it may be possible to limit the amount of `RST_STREAM` frame frames that are processed within a given time by configuring the particular HTTP/2 implementation manually. Please refer to your software vendor's advisories for more information.\n\n## Dependency tree\n- org.owasp.webgoat.lesson:xxe:v8.1.0:-maven\n    - com.github.tomakehurst:wiremock:2.8.0\n        - org.eclipse.jetty:jetty-server:9.4.24.v20191120\n\n\n## References\n* Common Weakness Enumeration: [CWE-400](https://cwe.mitre.org/data/definitions/400.html)\n\n","text":"The HTTP/2 protocol contains a flaw related to the stream multiplexing feature that can allow for excessive resource consumption on servers operating implementations of the HTTP/2 protocol. \n\nThe HTTP/2 protocol allows clients to signal to a server to cancel a previously opened stream by sending an `RST_STREAM` frame. Attackers can abuse this stream canceling ability by opening a large number of streams at once immediately followed by `RST_STREAM` frames. In most HTTP/2 implementations this bypasses concurrent open stream limits and causes servers to spend processing time first handling request frames and then performing stream tear downs. For the server, these operations can pile up whereas the attacker client paid minuscule bandwidth and processing costs.\n\n[Amazon](https://aws.amazon.com/security/security-bulletins/AWS-2023-011/), [Cloudflare](https://blog.cloudflare.com/technical-breakdown-http2-rapid-reset-ddos-attack/) and [Google](https://cloud.google.com/blog/products/identity-security/google-cloud-mitigated-largest-ddos-attack-peaking-above-398-million-rps/) have reported that this vulnerability has been exploited in the wild from August to October 2023.\n\nThis vulnerability is listed as exploitable by the Cybersecurity \u0026 Infrastructure Security Agency in their [Known Exploited Vulnerabilities Catalog](https://www.cisa.gov/known-exploited-vulnerabilities-catalog)."},"properties":{"security-severity":"8.9","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-400"]},"defaultConfiguration":{"level":"error"}},{"id":"CVE-2020-27223 jetty-server 9.4.24.v20191120: wiremock 2.8.0: org.eclipse.jetty","shortDescription":{"text":"Transitive Dependency: jetty-server 9.4.24.v20191120 from wiremock 2.8.0 (CVE-2020-27223)"},"fullDescription":{"text":"Jetty is vulnerable to denial-of-service (DoS) due to the use of an exponential algorithm that can have excessive resource requirements. A remote attacker could cause a vulnerable server to become unresponsive by sending maliciously crafted HTTP requests to that server."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| jetty-server 9.4.24.v20191120  | 9.4.53.20231009  | 12.0.5 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/ee93672f-853c-4083-a5e8-0d5ab21e8bf9?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=d8221aaa-7d55-4b5a-b3e0-2b5cba26ce60)\n\n\n## Description\nJetty is vulnerable to denial-of-service (DoS) due to the use of an exponential algorithm that can have excessive resource requirements. A remote attacker could cause a vulnerable server to become unresponsive by sending maliciously crafted HTTP requests to that server.\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [CVE-2020-27223](https://openhub.net/vulnerabilities/bdsa/CVE-2020-27223) - Inefficient Algorithmic Complexity\n\n\n\n## Solution\nFixed by [this](https://github.com/eclipse/jetty.project/commit/10e531756b972162eed402c44d0244f7f6b85131) commit in:\n* [**11.0.1**](https://github.com/eclipse/jetty.project/releases/tag/jetty-11.0.1)\n* [**10.0.1**](https://github.com/eclipse/jetty.project/releases/tag/jetty-10.0.1)\n* [**9.4.37.v20210219**](https://github.com/eclipse/jetty.project/releases/tag/jetty-9.4.37.v20210219)\n\nThe latest stable releases are available [here](https://github.com/eclipse/jetty.project/releases).\n\n## Workaround\nThe vendor has stated that the following workarounds are effective:\n\n* Don't use the default error page or handler.\n* Don't deploy an instance of `StatisticsServlet` that is exposed to the network.\n* Don't call the `getLocale` API.\n* Don't enable precompressed static content in instances of `DefaultServlet`.\n* Deploy a rule that limits the number and size of `Accept-*` header fields.\n\n## Dependency tree\n- org.owasp.webgoat.lesson:xxe:v8.1.0:-maven\n    - com.github.tomakehurst:wiremock:2.8.0\n        - org.eclipse.jetty:jetty-server:9.4.24.v20191120\n\n\n## References\n* Common Weakness Enumeration: [CWE-407](https://cwe.mitre.org/data/definitions/407.html)\n\n","text":"Jetty is vulnerable to denial-of-service (DoS) due to the use of an exponential algorithm that can have excessive resource requirements. A remote attacker could cause a vulnerable server to become unresponsive by sending maliciously crafted HTTP requests to that server."},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-407"]},"defaultConfiguration":{"level":"warning"}},{"id":"CVE-2021-28165 jetty-server 9.4.24.v20191120: wiremock 2.8.0: org.eclipse.jetty","shortDescription":{"text":"Transitive Dependency: jetty-server 9.4.24.v20191120 from wiremock 2.8.0 (CVE-2021-28165)"},"fullDescription":{"text":"Eclipse Jetty is vulnerable to Denial-of-Service (DoS) via invalid TLS frames. An attacker could exploit this by sending a TLS frame with a size in excess of 17408 resulting in excessive resource consumption leading to a DoS condition."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| jetty-server 9.4.24.v20191120  | 9.4.53.20231009  | 12.0.5 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/ee93672f-853c-4083-a5e8-0d5ab21e8bf9?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=d8221aaa-7d55-4b5a-b3e0-2b5cba26ce60)\n\n\n## Description\nEclipse Jetty is vulnerable to Denial-of-Service (DoS) via invalid TLS frames. An attacker could exploit this by sending a TLS frame with a size in excess of 17408 resulting in excessive resource consumption leading to a DoS condition.\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [CVE-2021-28165](https://openhub.net/vulnerabilities/bdsa/CVE-2021-28165) - Uncontrolled Resource Consumption\n\n\n\n## Solution\nFixed in [**10.0.2**](https://github.com/eclipse/jetty.project/releases/tag/jetty-10.0.2) and [**11.0.2**](https://github.com/eclipse/jetty.project/releases/tag/jetty-11.0.2) by [this](https://github.com/eclipse/jetty.project/commit/be22761a20a1685365c8e0356bf09b47e574cfd9) and [this](https://github.com/eclipse/jetty.project/commit/039c7386d0f3087d7c8aa19ea6001b24c95b9f16) commit.\nFixed in [**9.4.39.v20210325**](https://github.com/eclipse/jetty.project/releases/tag/jetty-9.4.39.v20210325) by [this](https://github.com/eclipse/jetty.project/commit/00d379c94ba865dced2025c2d1bc3e2e0e41e880) and [this](https://github.com/eclipse/jetty.project/commit/294b2ba02b667548617a94cd99592110ac230add) commit. \n\nThe latest stable releases are available [here](https://github.com/eclipse/jetty.project/releases).\n\n## Workaround\nThe problem can be worked around by compiling the following class:\n```\npackage org.eclipse.jetty.server.ssl.fix6072;\n\nimport java.nio.ByteBuffer;\nimport javax.net.ssl.SSLEngine;\nimport javax.net.ssl.SSLEngineResult;\nimport javax.net.ssl.SSLException;\nimport javax.net.ssl.SSLHandshakeException;\n\nimport org.eclipse.jetty.io.EndPoint;\nimport org.eclipse.jetty.io.ssl.SslConnection;\nimport org.eclipse.jetty.server.Connector;\nimport org.eclipse.jetty.server.SslConnectionFactory;\nimport org.eclipse.jetty.util.BufferUtil;\nimport org.eclipse.jetty.util.annotation.Name;\nimport org.eclipse.jetty.util.ssl.SslContextFactory;\n\npublic class SpaceCheckingSslConnectionFactory extends SslConnectionFactory\n{\n    public SpaceCheckingSslConnectionFactory(@Name(\"sslContextFactory\") SslContextFactory factory, @Name(\"next\") String nextProtocol)\n    {\n        super(factory, nextProtocol);\n    }\n\n    @Override\n    protected SslConnection newSslConnection(Connector connector, EndPoint endPoint, SSLEngine engine)\n    {\n        return new SslConnection(connector.getByteBufferPool(), connector.getExecutor(), endPoint, engine, isDirectBuffersForEncryption(), isDirectBuffersForDecryption())\n        {\n            @Override\n            protected SSLEngineResult unwrap(SSLEngine sslEngine, ByteBuffer input, ByteBuffer output) throws SSLException\n            {\n                SSLEngineResult results = super.unwrap(sslEngine, input, output);\n\n                if ((results.getStatus() == SSLEngineResult.Status.BUFFER_UNDERFLOW ||\n                    results.getStatus() == SSLEngineResult.Status.OK \u0026\u0026 results.bytesConsumed() == 0 \u0026\u0026 results.bytesProduced() == 0) \u0026\u0026\n                    BufferUtil.space(input) == 0)\n                {\n                    BufferUtil.clear(input);\n                    throw new SSLHandshakeException(\"Encrypted buffer max length exceeded\");\n                }\n                return results;\n            }\n        };\n    }\n}\n```\n\nThis class can be deployed by:\n* The resulting class file should be put into a jar file (eg `sslfix6072.jar`)\n* The jar file should be made available to the server. For a normal distribution this can be done by putting the file into `${jetty.base}/lib`\n* Copy the file `${jetty.home}/modules/ssl.mod` to `${jetty.base}/modules`\n* Edit the `${jetty.base}/modules/ssl.mod` file to have the following section:\n```\n[lib]\nlib/sslfix6072.jar\n```\n\n* Copy the file `${jetty.home}/etc/jetty-https.xml` and `${jetty.home}/etc/jetty-http2.xml` to `${jetty.base}/etc`\n* Edit files `${jetty.base}/etc/jetty-https.xml` and `${jetty.base}/etc/jetty-http2.xml`, changing any reference of `org.eclipse.jetty.server.SslConnectionFactory` to `org.eclipse.jetty.server.ssl.fix6072.SpaceCheckingSslConnectionFactory`. \n\nFor example:\n```\n  \u003cCall name=\"addIfAbsentConnectionFactory\"\u003e\n    \u003cArg\u003e\n      \u003cNew class=\"org.eclipse.jetty.server.ssl.fix6072.SpaceCheckingSslConnectionFactory\"\u003e\n        \u003cArg name=\"next\"\u003ehttp/1.1\u003c/Arg\u003e\n        \u003cArg name=\"sslContextFactory\"\u003e\u003cRef refid=\"sslContextFactory\"/\u003e\u003c/Arg\u003e\n      \u003c/New\u003e\n    \u003c/Arg\u003e\n  \u003c/Call\u003e\n```\nRestart Jetty\n\n## Dependency tree\n- org.owasp.webgoat.lesson:xxe:v8.1.0:-maven\n    - com.github.tomakehurst:wiremock:2.8.0\n        - org.eclipse.jetty:jetty-server:9.4.24.v20191120\n\n\n## References\n* Common Weakness Enumeration: [CWE-400](https://cwe.mitre.org/data/definitions/400.html)\n\n","text":"Eclipse Jetty is vulnerable to Denial-of-Service (DoS) via invalid TLS frames. An attacker could exploit this by sending a TLS frame with a size in excess of 17408 resulting in excessive resource consumption leading to a DoS condition."},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-400"]},"defaultConfiguration":{"level":"warning"}},{"id":"CVE-2021-28169 jetty-server 9.4.24.v20191120: wiremock 2.8.0: org.eclipse.jetty","shortDescription":{"text":"Transitive Dependency: jetty-server 9.4.24.v20191120 from wiremock 2.8.0 (CVE-2021-28169)"},"fullDescription":{"text":"Jetty is vulnerable to information disclosure due to improper requested path verification. This allows crafted requests to access protected resources of the web application which, depending on the implementation, might reveal sensitive information."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| jetty-server 9.4.24.v20191120  | 9.4.53.20231009  | 12.0.5 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/ee93672f-853c-4083-a5e8-0d5ab21e8bf9?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=d8221aaa-7d55-4b5a-b3e0-2b5cba26ce60)\n\n\n## Description\nJetty is vulnerable to information disclosure due to improper requested path verification. This allows crafted requests to access protected resources of the web application which, depending on the implementation, might reveal sensitive information.\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [CVE-2021-28169](https://openhub.net/vulnerabilities/bdsa/CVE-2021-28169) - Directory Traversal\n\n\n\n## Solution\nFixed in [**9.4.41**](https://github.com/eclipse/jetty.project/releases/tag/jetty-9.4.41.v20210512) by [this](https://github.com/eclipse/jetty.project/commit/1c05b0bcb1) commit.\n\nFixed in [**10.0.3**](https://github.com/eclipse/jetty.project/releases/tag/jetty-10.0.3) and [**11.0.3**](https://github.com/eclipse/jetty.project/releases/tag/jetty-11.0.3) by [this](https://github.com/eclipse/jetty.project/commit/f58dbedcd0) commit.\n\nThe latest stable releases are available [here](https://www.eclipse.org/jetty/download.php).\n\n## Workaround\nThe vendor provides the following workaround:\n\nIf you cannot update to the latest version of Jetty, you can instead deploy your own version of the `ConcatServlet` and/or the `WelcomeFilter` by using the code from the latest version of Jetty.\n\n## Dependency tree\n- org.owasp.webgoat.lesson:xxe:v8.1.0:-maven\n    - com.github.tomakehurst:wiremock:2.8.0\n        - org.eclipse.jetty:jetty-server:9.4.24.v20191120\n\n\n## References\n* Common Weakness Enumeration: [CWE-22](https://cwe.mitre.org/data/definitions/22.html)\n\n","text":"Jetty is vulnerable to information disclosure due to improper requested path verification. This allows crafted requests to access protected resources of the web application which, depending on the implementation, might reveal sensitive information."},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-22"]},"defaultConfiguration":{"level":"warning"}},{"id":"CVE-2023-36478 jetty-server 9.4.24.v20191120: wiremock 2.8.0: org.eclipse.jetty","shortDescription":{"text":"Transitive Dependency: jetty-server 9.4.24.v20191120 from wiremock 2.8.0 (CVE-2023-36478)"},"fullDescription":{"text":"Eclipse Jetty is vulnerable to a denial-of-service (DoS) issue due to presence of a user input validation flaw in the HTTP/2 HPACK functionality that can lead to an integer overflow and allow HPACK headers to exceed their expected size limits.\n\nAn attacker could submit crafted HTTP messages that trigger the integer overflow flaw and cause large buffers to be allocated on the server, consuming memory resources in a manner that could cause the server to run out of memory."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| jetty-server 9.4.24.v20191120  | 9.4.53.20231009  | 12.0.5 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/ee93672f-853c-4083-a5e8-0d5ab21e8bf9?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=d8221aaa-7d55-4b5a-b3e0-2b5cba26ce60)\n\n\n## Description\nEclipse Jetty is vulnerable to a denial-of-service (DoS) issue due to presence of a user input validation flaw in the HTTP/2 HPACK functionality that can lead to an integer overflow and allow HPACK headers to exceed their expected size limits.\n\nAn attacker could submit crafted HTTP messages that trigger the integer overflow flaw and cause large buffers to be allocated on the server, consuming memory resources in a manner that could cause the server to run out of memory.\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [CVE-2023-36478](https://openhub.net/vulnerabilities/bdsa/CVE-2023-36478) - Integer Overflow / Underflow\n\n\n\n## Solution\nFixed in:\n* [**9.4.53.v20231009**](https://github.com/jetty/jetty.project/releases/tag/jetty-9.4.53.v20231009) by [this](https://github.com/jetty/jetty.project/commit/c7a4b05fc735e73e7522cb617c079045b709957b) commit and [this](https://github.com/jetty/jetty.project/commit/a4d61e9eb026ec98c79107e840cabdf520482c56) commit,\n* [**10.0.16**](https://github.com/jetty/jetty.project/releases/tag/jetty-10.0.16), [**11.0.16**](https://github.com/jetty/jetty.project/releases/tag/jetty-11.0.16) and [**12.0.0.beta2x**](https://github.com/jetty/jetty.project/releases/tag/jetty-12.0.0.beta2x) by [this](https://github.com/jetty/jetty.project/commit/a8c9eea75bffcb2b2557acefb75856707654a56f) commit and [this](https://github.com/jetty/jetty.project/commit/420ec7cc1db65b42693dc002aca0faa567f62f7e) commit.\n\nThe latest stable releases can be found [here](https://eclipse.dev/jetty/download.php).\n\n\n\n## Dependency tree\n- org.owasp.webgoat.lesson:xxe:v8.1.0:-maven\n    - com.github.tomakehurst:wiremock:2.8.0\n        - org.eclipse.jetty:jetty-server:9.4.24.v20191120\n\n\n## References\n* Common Weakness Enumeration: [CWE-190](https://cwe.mitre.org/data/definitions/190.html)\n* Common Weakness Enumeration: [CWE-400](https://cwe.mitre.org/data/definitions/400.html)\n\n","text":"Eclipse Jetty is vulnerable to a denial-of-service (DoS) issue due to presence of a user input validation flaw in the HTTP/2 HPACK functionality that can lead to an integer overflow and allow HPACK headers to exceed their expected size limits.\n\nAn attacker could submit crafted HTTP messages that trigger the integer overflow flaw and cause large buffers to be allocated on the server, consuming memory resources in a manner that could cause the server to run out of memory."},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-190","external/cwe/cwe-400"]},"defaultConfiguration":{"level":"warning"}},{"id":"CVE-2022-2048 jetty-server 9.4.24.v20191120: wiremock 2.8.0: org.eclipse.jetty","shortDescription":{"text":"Transitive Dependency: jetty-server 9.4.24.v20191120 from wiremock 2.8.0 (CVE-2022-2048)"},"fullDescription":{"text":"Eclipse Jetty does not correctly handle invalid HTTP/2 requests. An attacker could exploit this flaw to exhaust the HTTP/2 flow control window or TCP congest the connection. This will cause the relevant selector threads to be blocked and it will lead to a denial-of-service (DoS)."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| jetty-server 9.4.24.v20191120  | 9.4.53.20231009  | 12.0.5 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/ee93672f-853c-4083-a5e8-0d5ab21e8bf9?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=d8221aaa-7d55-4b5a-b3e0-2b5cba26ce60)\n\n\n## Description\nEclipse Jetty does not correctly handle invalid HTTP/2 requests. An attacker could exploit this flaw to exhaust the HTTP/2 flow control window or TCP congest the connection. This will cause the relevant selector threads to be blocked and it will lead to a denial-of-service (DoS).\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [CVE-2022-2048](https://openhub.net/vulnerabilities/bdsa/CVE-2022-2048) - Insufficient Resource Pool\n\n\n\n## Solution\nFixed in:\n* **[9.4.47](https://github.com/eclipse/jetty.project/releases/tag/jetty-9.4.47.v20220610)** by [this](https://github.com/eclipse/jetty.project/commit/be912d4315839405a8ae601f2e4ee0306867266e) commit,\n* **[10.0.10](https://github.com/eclipse/jetty.project/releases/tag/jetty-10.0.10)** and **[11.0.10](https://github.com/eclipse/jetty.project/releases/tag/jetty-11.0.10)** by [this](https://github.com/eclipse/jetty.project/commit/b705091afb9158b39590fa36b9b84795524a8f0b) commit.\n\n\nThe latest stable releases can be found [here](https://github.com/eclipse/jetty.project/releases).\n\n## Workaround\nThe vendor recommends users to filter the requests before they are sent to Jetty. One way to filter them would be to use a proxy.\n\n## Dependency tree\n- org.owasp.webgoat.lesson:xxe:v8.1.0:-maven\n    - com.github.tomakehurst:wiremock:2.8.0\n        - org.eclipse.jetty:jetty-server:9.4.24.v20191120\n\n\n## References\n* Common Weakness Enumeration: [CWE-410](https://cwe.mitre.org/data/definitions/410.html)\n* Common Weakness Enumeration: [CWE-664](https://cwe.mitre.org/data/definitions/664.html)\n\n","text":"Eclipse Jetty does not correctly handle invalid HTTP/2 requests. An attacker could exploit this flaw to exhaust the HTTP/2 flow control window or TCP congest the connection. This will cause the relevant selector threads to be blocked and it will lead to a denial-of-service (DoS)."},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-410","external/cwe/cwe-664"]},"defaultConfiguration":{"level":"warning"}},{"id":"CVE-2020-27218 jetty-server 9.4.24.v20191120: wiremock 2.8.0: org.eclipse.jetty","shortDescription":{"text":"Transitive Dependency: jetty-server 9.4.24.v20191120 from wiremock 2.8.0 (CVE-2020-27218)"},"fullDescription":{"text":"Eclipse Jetty contains a vulnerability that allows a remote attacker to inject data into other client's requests. This vulnerability only exists when GZIP request body inflation is enabled, and requests from different clients are multiplexed onto a single connection."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| jetty-server 9.4.24.v20191120  | 9.4.53.20231009  | 12.0.5 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/ee93672f-853c-4083-a5e8-0d5ab21e8bf9?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=d8221aaa-7d55-4b5a-b3e0-2b5cba26ce60)\n\n\n## Description\nEclipse Jetty contains a vulnerability that allows a remote attacker to inject data into other client's requests. This vulnerability only exists when GZIP request body inflation is enabled, and requests from different clients are multiplexed onto a single connection.\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [CVE-2020-27218](https://openhub.net/vulnerabilities/bdsa/CVE-2020-27218) - Sensitive Information in Resource Not Removed Before Reuse\n\n\n\n## Solution\nFixed in **[9.4.35.v20201120](https://github.com/eclipse/jetty.project/releases/tag/jetty-9.4.35.v20201120)** by [this](https://github.com/eclipse/jetty.project/commit/850a0330ff25da42b1b1cbdbdca0fcc0c40e47e9) commit.\n\nFixed in **[10.0.0.beta3](https://github.com/eclipse/jetty.project/releases/tag/jetty-10.0.0.beta3)** and in **[11.0.0.beta3](https://github.com/eclipse/jetty.project/releases/tag/jetty-11.0.0.beta3)** by [this](https://github.com/eclipse/jetty.project/commit/34d27e85483c119b7dd1aa9beda735844d14b605) commit.\n\n## Workaround\nThe vendor states that any of the following will mitigate this vulnerability:\n\n\n\u003e * Disabling compressed request body inflation by GzipHandler.\n\u003e * By always fully consuming the request content before sending a response.\n\u003e * By adding a Connection: close to any response where the servlet does not fully consume request content.\n\n## Dependency tree\n- org.owasp.webgoat.lesson:xxe:v8.1.0:-maven\n    - com.github.tomakehurst:wiremock:2.8.0\n        - org.eclipse.jetty:jetty-server:9.4.24.v20191120\n\n\n## References\n* Common Weakness Enumeration: [CWE-226](https://cwe.mitre.org/data/definitions/226.html)\n\n","text":"Eclipse Jetty contains a vulnerability that allows a remote attacker to inject data into other client's requests. This vulnerability only exists when GZIP request body inflation is enabled, and requests from different clients are multiplexed onto a single connection."},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-226"]},"defaultConfiguration":{"level":"warning"}},{"id":"CVE-2023-26048 jetty-server 9.4.24.v20191120: wiremock 2.8.0: org.eclipse.jetty","shortDescription":{"text":"Transitive Dependency: jetty-server 9.4.24.v20191120 from wiremock 2.8.0 (CVE-2023-26048)"},"fullDescription":{"text":"Eclipse Jetty contains a vulnerability in its multipart request parsing mechanism that can lead to an out-of-memory error due to insufficient limiting measures. An attacker can exploit this flaw by supplying a request containing a large multipart without a filename in order to cause a denial-of-service (DoS)."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| jetty-server 9.4.24.v20191120  | 9.4.53.20231009  | 12.0.5 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/ee93672f-853c-4083-a5e8-0d5ab21e8bf9?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=d8221aaa-7d55-4b5a-b3e0-2b5cba26ce60)\n\n\n## Description\nEclipse Jetty contains a vulnerability in its multipart request parsing mechanism that can lead to an out-of-memory error due to insufficient limiting measures. An attacker can exploit this flaw by supplying a request containing a large multipart without a filename in order to cause a denial-of-service (DoS).\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [CVE-2023-26048](https://openhub.net/vulnerabilities/bdsa/CVE-2023-26048) - Uncontrolled Resource Consumption\n\n\n\n## Solution\nFixed in [**jetty-9.4.51.v20230217**](https://github.com/eclipse/jetty.project/releases/tag/jetty-9.4.51.v20230217) by [this](https://github.com/eclipse/jetty.project/commit/c3021592218da289563987e6f7fbe05f8704b285) commit.\n\nFixed by [this](https://github.com/eclipse/jetty.project/commit/622befbd0d52f61c1acd41b4ef12458311494f1a) commit in:\n* **[jetty-10.0.14](https://github.com/eclipse/jetty.project/releases/tag/jetty-10.0.14)**\n* **[jetty-11.0.14](https://github.com/eclipse/jetty.project/releases/tag/jetty-11.0.14)**\n* **[jetty-12.0.0.beta0](https://github.com/eclipse/jetty.project/releases/tag/jetty-12.0.0.beta0)**\n\nThe latest stable releases can be found [here](https://github.com/eclipse/jetty.project/releases).\n\n## Workaround\nIt is recommended to set the multipart parameter `maxRequestSize` to a non-negative value in order to limit the whole multipart content. It has also been stated that limiting the multipart parameter `maxFileSize` will not be enough since the attacker can supply a large number of parts that, when summed up, will cause memory issues.\n\n## Dependency tree\n- org.owasp.webgoat.lesson:xxe:v8.1.0:-maven\n    - com.github.tomakehurst:wiremock:2.8.0\n        - org.eclipse.jetty:jetty-server:9.4.24.v20191120\n\n\n## References\n* Common Weakness Enumeration: [CWE-400](https://cwe.mitre.org/data/definitions/400.html)\n* Common Weakness Enumeration: [CWE-770](https://cwe.mitre.org/data/definitions/770.html)\n\n","text":"Eclipse Jetty contains a vulnerability in its multipart request parsing mechanism that can lead to an out-of-memory error due to insufficient limiting measures. An attacker can exploit this flaw by supplying a request containing a large multipart without a filename in order to cause a denial-of-service (DoS)."},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-400","external/cwe/cwe-770"]},"defaultConfiguration":{"level":"warning"}},{"id":"CVE-2023-26049 jetty-server 9.4.24.v20191120: wiremock 2.8.0: org.eclipse.jetty","shortDescription":{"text":"Transitive Dependency: jetty-server 9.4.24.v20191120 from wiremock 2.8.0 (CVE-2023-26049)"},"fullDescription":{"text":"Eclipse Jetty does not properly parse quoted values in cookies. This could allow an attacker to smuggle cookies within other cookies into the application. The attacker can also tamper with the cookie parsing mechanism and cause other unintended behavior."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| jetty-server 9.4.24.v20191120  | 9.4.53.20231009  | 12.0.5 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/ee93672f-853c-4083-a5e8-0d5ab21e8bf9?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=d8221aaa-7d55-4b5a-b3e0-2b5cba26ce60)\n\n\n## Description\nEclipse Jetty does not properly parse quoted values in cookies. This could allow an attacker to smuggle cookies within other cookies into the application. The attacker can also tamper with the cookie parsing mechanism and cause other unintended behavior.\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [CVE-2023-26049](https://openhub.net/vulnerabilities/bdsa/CVE-2023-26049) - Weak Input Validation\n\n\n\n## Solution\nFixed in version [**jetty-9.4.51.v20230217**](https://github.com/eclipse/jetty.project/releases/tag/jetty-9.4.51.v20230217) by [this](https://github.com/eclipse/jetty.project/commit/1be1401bafb4c46fae3c234c8e93743a661dcf21) commit.\n\nFixed by [this](https://github.com/eclipse/jetty.project/commit/7b8c2c1bf081c7f408e5da3371c8c3c9802f09fd) commit in:\n* [**jetty-10.0.14**](https://github.com/eclipse/jetty.project/releases/tag/jetty-10.0.14)\n* [**jetty-11.0.14**](https://github.com/eclipse/jetty.project/releases/tag/jetty-11.0.14)\n* [**jetty-12.0.0.beta0**](https://github.com/eclipse/jetty.project/releases/tag/jetty-12.0.0.beta0)\n\nThe latest stable releases can be found [here](https://github.com/eclipse/jetty.project/releases).\n\n\n\n## Dependency tree\n- org.owasp.webgoat.lesson:xxe:v8.1.0:-maven\n    - com.github.tomakehurst:wiremock:2.8.0\n        - org.eclipse.jetty:jetty-server:9.4.24.v20191120\n\n\n## References\n* Common Weakness Enumeration: [CWE-20](https://cwe.mitre.org/data/definitions/20.html)\n\n","text":"Eclipse Jetty does not properly parse quoted values in cookies. This could allow an attacker to smuggle cookies within other cookies into the application. The attacker can also tamper with the cookie parsing mechanism and cause other unintended behavior."},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-20"]},"defaultConfiguration":{"level":"warning"}},{"id":"CVE-2023-40167 jetty-server 9.4.24.v20191120: wiremock 2.8.0: org.eclipse.jetty","shortDescription":{"text":"Transitive Dependency: jetty-server 9.4.24.v20191120 from wiremock 2.8.0 (CVE-2023-40167)"},"fullDescription":{"text":"Eclipse Jetty is vulnerable to HTTP request smuggling due to the improper parsing of HTTP requests. An attacker could exploit this vulnerability by sending maliciously crafted HTTP requests to a vulnerable endpoint with multiple requests included inside the body by manipulating the `Content-Length` of the request. The smuggling of HTTP requests may allow for the bypass of security tools such as web application firewalls (WAFs) and intrusion detection systems (IDSs)."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| jetty-server 9.4.24.v20191120  | 9.4.53.20231009  | 12.0.5 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/ee93672f-853c-4083-a5e8-0d5ab21e8bf9?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=d8221aaa-7d55-4b5a-b3e0-2b5cba26ce60)\n\n\n## Description\nEclipse Jetty is vulnerable to HTTP request smuggling due to the improper parsing of HTTP requests. An attacker could exploit this vulnerability by sending maliciously crafted HTTP requests to a vulnerable endpoint with multiple requests included inside the body by manipulating the `Content-Length` of the request. The smuggling of HTTP requests may allow for the bypass of security tools such as web application firewalls (WAFs) and intrusion detection systems (IDSs).\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [CVE-2023-40167](https://openhub.net/vulnerabilities/bdsa/CVE-2023-40167) - Improper Handling of Length Parameter Inconsistency\n\n\n\n## Solution\nFixed in versions:\n* [**12.0.1**](https://github.com/eclipse/jetty.project/releases/tag/jetty-12.0.1) by [this](https://github.com/eclipse/jetty.project/commit/13cf2dade746e5d3bb123fd7ecd9fdc28fc43082) commit.\n* [**11.0.16**](https://github.com/eclipse/jetty.project/releases/tag/jetty-11.0.16) and [**10.0.16**](https://github.com/eclipse/jetty.project/releases/tag/jetty-10.0.16) by [this](https://github.com/eclipse/jetty.project/commit/003e46cae4d71e147d51fb8ea378e8989d381cc3) commit.\n* [**9.4.52.v20230823**](https://github.com/eclipse/jetty.project/releases/tag/jetty-9.4.52.v20230823) by [this](https://github.com/eclipse/jetty.project/commit/e4d596eafc887bcd813ae6e28295b5ce327def47) commit.\n\nThe latest stable releases can be found [here](https://eclipse.dev/jetty/download.php).\n\n\n\n## Dependency tree\n- org.owasp.webgoat.lesson:xxe:v8.1.0:-maven\n    - com.github.tomakehurst:wiremock:2.8.0\n        - org.eclipse.jetty:jetty-server:9.4.24.v20191120\n\n\n## References\n* Common Weakness Enumeration: [CWE-130](https://cwe.mitre.org/data/definitions/130.html)\n\n","text":"Eclipse Jetty is vulnerable to HTTP request smuggling due to the improper parsing of HTTP requests. An attacker could exploit this vulnerability by sending maliciously crafted HTTP requests to a vulnerable endpoint with multiple requests included inside the body by manipulating the `Content-Length` of the request. The smuggling of HTTP requests may allow for the bypass of security tools such as web application firewalls (WAFs) and intrusion detection systems (IDSs)."},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-130"]},"defaultConfiguration":{"level":"warning"}},{"id":"CVE-2023-36479 jetty-server 9.4.24.v20191120: wiremock 2.8.0: org.eclipse.jetty","shortDescription":{"text":"Transitive Dependency: jetty-server 9.4.24.v20191120 from wiremock 2.8.0 (CVE-2023-36479)"},"fullDescription":{"text":"Eclipse Jetty contains an improper neutralization of quoting syntax issue within the CGI servlet. This could allow an authenticated attacker to send a request to the CGI Servlet for a binary with a space in its name in order to manipulate the command structure and execute incorrect commands."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| jetty-server 9.4.24.v20191120  | 9.4.53.20231009  | 12.0.5 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/ee93672f-853c-4083-a5e8-0d5ab21e8bf9?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=d8221aaa-7d55-4b5a-b3e0-2b5cba26ce60)\n\n\n## Description\nEclipse Jetty contains an improper neutralization of quoting syntax issue within the CGI servlet. This could allow an authenticated attacker to send a request to the CGI Servlet for a binary with a space in its name in order to manipulate the command structure and execute incorrect commands.\n\n## Vulnerabilities(BDSA,CVE)\n:large_blue_circle: [CVE-2023-36479](https://openhub.net/vulnerabilities/bdsa/CVE-2023-36479) - Improper Neutralization of Quoting Syntax\n\n\n\n## Solution\nFixed in versions:\n* [**12.0.0.beta1**](https://github.com/eclipse/jetty.project/releases/tag/jetty-12.0.0.beta1) by [this](https://github.com/eclipse/jetty.project/commit/6ce5a0fbcdf06ae647dfd304dd81a1f9b0691a5c) commit.\n* [**11.0.16**](https://github.com/eclipse/jetty.project/releases/tag/jetty-11.0.16) and [**10.0.16**](https://github.com/eclipse/jetty.project/releases/tag/jetty-10.0.16) by [this](https://github.com/eclipse/jetty.project/commit/c29491e5ac70c98e4d7d7dff2a6465ddecc45c0c) commit.\n* [**9.4.52.v20230823**](https://github.com/eclipse/jetty.project/releases/tag/jetty-9.4.52.v20230823) by [this](https://github.com/eclipse/jetty.project/commit/ec7e1fd173481e526db4092f558aa2b5aab57580) commit.\n\nThe latest stable releases can be found [here](https://eclipse.dev/jetty/download.php).\n\n## Workaround\nThe vendor has issued the following workaround:\n\n\u003e The` org.eclipse.jetty.servlets.CGI` Servlet should not be used. Fast CGI support is available instead.\n\n## Dependency tree\n- org.owasp.webgoat.lesson:xxe:v8.1.0:-maven\n    - com.github.tomakehurst:wiremock:2.8.0\n        - org.eclipse.jetty:jetty-server:9.4.24.v20191120\n\n\n## References\n* Common Weakness Enumeration: [CWE-149](https://cwe.mitre.org/data/definitions/149.html)\n\n","text":"Eclipse Jetty contains an improper neutralization of quoting syntax issue within the CGI servlet. This could allow an authenticated attacker to send a request to the CGI Servlet for a binary with a space in its name in order to manipulate the command structure and execute incorrect commands."},"properties":{"security-severity":"3.8","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-149"]},"defaultConfiguration":{"level":"note"}},{"id":"CVE-2023-41900 jetty-server 9.4.24.v20191120: wiremock 2.8.0: org.eclipse.jetty","shortDescription":{"text":"Transitive Dependency: jetty-server 9.4.24.v20191120 from wiremock 2.8.0 (CVE-2023-41900)"},"fullDescription":{"text":"Eclipse Jetty contains an improper authentication vulnerability. This could allow an authenticated attacker to bypass authentication after it has been rejected or revoked by the `LoginService` and make a request as if authenticated.\n\n**Note:** The vendor has stated that this issue impacts usages of the `jetty-openid` which have configured a nested `LoginService` and where that `LoginService` is capable of rejecting previously authenticated users."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| jetty-server 9.4.24.v20191120  | 9.4.53.20231009  | 12.0.5 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/ee93672f-853c-4083-a5e8-0d5ab21e8bf9?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=d8221aaa-7d55-4b5a-b3e0-2b5cba26ce60)\n\n\n## Description\nEclipse Jetty contains an improper authentication vulnerability. This could allow an authenticated attacker to bypass authentication after it has been rejected or revoked by the `LoginService` and make a request as if authenticated.\n\n**Note:** The vendor has stated that this issue impacts usages of the `jetty-openid` which have configured a nested `LoginService` and where that `LoginService` is capable of rejecting previously authenticated users.\n\n## Vulnerabilities(BDSA,CVE)\n:large_blue_circle: [CVE-2023-41900](https://openhub.net/vulnerabilities/bdsa/CVE-2023-41900) - Improper Authentication\n\n\n\n## Solution\nFixed in version [**11.0.15**](https://github.com/eclipse/jetty.project/releases/tag/jetty-11.0.15) and [**10.0.15**](https://github.com/eclipse/jetty.project/releases/tag/jetty-10.0.15) by [this](https://github.com/eclipse/jetty.project/commit/24b7d06fd5ce5468caa3eaa93688879fb2900fda) commit and in [**9.4.52.v20230823**](https://github.com/eclipse/jetty.project/releases/tag/jetty-9.4.52.v20230823) by [this](https://github.com/eclipse/jetty.project/commit/5f48b4170f36b275e1576548b44bd5009feba669) commit.\n\nThe latest stable releases can be found [here](https://eclipse.dev/jetty/download.php).\n\n\n\n## Dependency tree\n- org.owasp.webgoat.lesson:xxe:v8.1.0:-maven\n    - com.github.tomakehurst:wiremock:2.8.0\n        - org.eclipse.jetty:jetty-server:9.4.24.v20191120\n\n\n## References\n* Common Weakness Enumeration: [CWE-287](https://cwe.mitre.org/data/definitions/287.html)\n\n","text":"Eclipse Jetty contains an improper authentication vulnerability. This could allow an authenticated attacker to bypass authentication after it has been rejected or revoked by the `LoginService` and make a request as if authenticated.\n\n**Note:** The vendor has stated that this issue impacts usages of the `jetty-openid` which have configured a nested `LoginService` and where that `LoginService` is capable of rejecting previously authenticated users."},"properties":{"security-severity":"3.8","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-287"]},"defaultConfiguration":{"level":"note"}},{"id":"CVE-2021-34428 jetty-server 9.4.24.v20191120: wiremock 2.8.0: org.eclipse.jetty","shortDescription":{"text":"Transitive Dependency: jetty-server 9.4.24.v20191120 from wiremock 2.8.0 (CVE-2021-34428)"},"fullDescription":{"text":"Eclipse Jetty is vulnerable to insufficient session expiry. This may result in sessions used on a shared computer persisting for longer than intended."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| jetty-server 9.4.24.v20191120  | 9.4.53.20231009  | 12.0.5 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/ee93672f-853c-4083-a5e8-0d5ab21e8bf9?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=d8221aaa-7d55-4b5a-b3e0-2b5cba26ce60)\n\n\n## Description\nEclipse Jetty is vulnerable to insufficient session expiry. This may result in sessions used on a shared computer persisting for longer than intended.\n\n## Vulnerabilities(BDSA,CVE)\n:large_blue_circle: [CVE-2021-34428](https://openhub.net/vulnerabilities/bdsa/CVE-2021-34428) - Insufficient Session Expiration\n\n\n\n## Solution\nFixed in:\n* [**9.4.41.v20210516**](https://github.com/eclipse/jetty.project/releases/tag/jetty-9.4.41.v20210516) by [this](https://github.com/eclipse/jetty.project/commit/087f486b4461746b4ded45833887b3ccb136ee85) commit, \n* [**10.0.3**](https://github.com/eclipse/jetty.project/releases/tag/jetty-10.0.3) by [this](https://github.com/eclipse/jetty.project/commit/cd6462a6252d083b3c9ea2684aab0b4c9669ed19) commit, \n* [**11.0.3**](https://github.com/eclipse/jetty.project/releases/tag/jetty-11.0.3) by [this](https://github.com/eclipse/jetty.project/commit/cd6462a6252d083b3c9ea2684aab0b4c9669ed19) commit.\n\nThe latest stable releases are available [here](https://github.com/eclipse/jetty.project/releases).\n\n## Workaround\nThe vendor has [stated](https://github.com/eclipse/jetty.project/security/advisories/GHSA-m6cp-vxjx-65j6) that a workaround is to ensure that the application catches all Throwables within their `SessionListener#sessionDestroyed()` implementations.\n\n## Dependency tree\n- org.owasp.webgoat.lesson:xxe:v8.1.0:-maven\n    - com.github.tomakehurst:wiremock:2.8.0\n        - org.eclipse.jetty:jetty-server:9.4.24.v20191120\n\n\n## References\n* Common Weakness Enumeration: [CWE-613](https://cwe.mitre.org/data/definitions/613.html)\n\n","text":"Eclipse Jetty is vulnerable to insufficient session expiry. This may result in sessions used on a shared computer persisting for longer than intended."},"properties":{"security-severity":"3.8","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-613"]},"defaultConfiguration":{"level":"note"}},{"id":"CVE-2022-2047 jetty-server 9.4.24.v20191120: wiremock 2.8.0: org.eclipse.jetty","shortDescription":{"text":"Transitive Dependency: jetty-server 9.4.24.v20191120 from wiremock 2.8.0 (CVE-2022-2047)"},"fullDescription":{"text":"Eclipse Jetty does not correctly handle invalid authority segments of HTTP URIs. An authenticated attacker could exploit this flaw by passing an invalid URI that contains an improper authority with no host so that it is interpreted as one with a host."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| jetty-server 9.4.24.v20191120  | 9.4.53.20231009  | 12.0.5 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/ee93672f-853c-4083-a5e8-0d5ab21e8bf9?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=d8221aaa-7d55-4b5a-b3e0-2b5cba26ce60)\n\n\n## Description\nEclipse Jetty does not correctly handle invalid authority segments of HTTP URIs. An authenticated attacker could exploit this flaw by passing an invalid URI that contains an improper authority with no host so that it is interpreted as one with a host.\n\n## Vulnerabilities(BDSA,CVE)\n:large_blue_circle: [CVE-2022-2047](https://openhub.net/vulnerabilities/bdsa/CVE-2022-2047) - Weak Input Validation\n\n\n\n## Solution\nFixed in versions:\n* [**9.4.47**](https://github.com/eclipse/jetty.project/releases/tag/jetty-9.4.47.v20220610) by [this](https://github.com/eclipse/jetty.project/commit/4ca8afbbd667c19a084d5ff14a4f08eb7049d1c7) commit.\n* [**10.0.10**](https://github.com/eclipse/jetty.project/releases/tag/jetty-10.0.10) and [**11.0.10**](https://github.com/eclipse/jetty.project/releases/tag/jetty-11.0.10) by [this](https://github.com/eclipse/jetty.project/commit/d1e64f469362bb9371d530cccded5ecb13fa1cb5) commit.\n\nThe latest stable releases can be found [here](https://github.com/eclipse/jetty.project/releases).\n\n\n\n## Dependency tree\n- org.owasp.webgoat.lesson:xxe:v8.1.0:-maven\n    - com.github.tomakehurst:wiremock:2.8.0\n        - org.eclipse.jetty:jetty-server:9.4.24.v20191120\n\n\n## References\n* Common Weakness Enumeration: [CWE-20](https://cwe.mitre.org/data/definitions/20.html)\n\n","text":"Eclipse Jetty does not correctly handle invalid authority segments of HTTP URIs. An authenticated attacker could exploit this flaw by passing an invalid URI that contains an improper authority with no host so that it is interpreted as one with a host."},"properties":{"security-severity":"3.8","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-20"]},"defaultConfiguration":{"level":"note"}},{"id":"BDSA-2021-3731 spring-boot-starter-web 2.2.2.RELEASE: org.springframework.boot","shortDescription":{"text":"Direct Dependency: spring-boot-starter-web 2.2.2.RELEASE (BDSA-2021-3731)"},"fullDescription":{"text":"Apache Log4j, as used in many popular services, is vulnerable to improperly allowing lightweight directory access protocol (LDAP) access via Java naming and directory interface (JNDI). A remote attacker able to supply the end application with specially crafted input that is then processed by the Log4j subcomponent could cause the execution of arbitrary Java code.\n\n**Note** \n\n- log4j-api packages by themselves do not contain the vulnerable functionality and are therefore unaffected. log4j-core packages and the upstream overarching source repository are affected.\n\n- A previously suggested mitigation of setting environment variable `LOG4J_FORMAT_MSG_NO_LOOKUPS=true` is not recommended. This mitigation has been proven inadequate against this vulnerability. \n\n- This vulnerability is partially fixed in [**2.15.0-rc2**](https://github.com/apache/logging-log4j2/releases/tag/log4j-2.15.0-rc2) by [this](https://github.com/apache/logging-log4j2/commit/001aaada7dab82c3c09cde5f8e14245dc9d8b454) commit and [this](https://github.com/apache/logging-log4j2/commit/bac0d8a35c7e354a0d3f706569116dff6c6bd658) commit. These fixes were deemed incomplete. See BDSA-2021-3779 (CVE-2021-45046) for more details.\n\nThis vulnerability is listed as exploitable by the Cybersecurity \u0026 Infrastructure Security Agency in their [Known Exploited Vulnerabilities Catalog](https://www.cisa.gov/known-exploited-vulnerabilities-catalog)."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| spring-boot-starter-web 2.2.2.RELEASE  | 2.7.18  | 3.2.1 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/48431389-4a2f-44ed-8597-55184ffc0e88?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=ee1b331d-05e0-4bd1-b6ef-727c3b98e324)\n\n\n## Description\nApache Log4j, as used in many popular services, is vulnerable to improperly allowing lightweight directory access protocol (LDAP) access via Java naming and directory interface (JNDI). A remote attacker able to supply the end application with specially crafted input that is then processed by the Log4j subcomponent could cause the execution of arbitrary Java code.\n\n**Note** \n\n- log4j-api packages by themselves do not contain the vulnerable functionality and are therefore unaffected. log4j-core packages and the upstream overarching source repository are affected.\n\n- A previously suggested mitigation of setting environment variable `LOG4J_FORMAT_MSG_NO_LOOKUPS=true` is not recommended. This mitigation has been proven inadequate against this vulnerability. \n\n- This vulnerability is partially fixed in [**2.15.0-rc2**](https://github.com/apache/logging-log4j2/releases/tag/log4j-2.15.0-rc2) by [this](https://github.com/apache/logging-log4j2/commit/001aaada7dab82c3c09cde5f8e14245dc9d8b454) commit and [this](https://github.com/apache/logging-log4j2/commit/bac0d8a35c7e354a0d3f706569116dff6c6bd658) commit. These fixes were deemed incomplete. See BDSA-2021-3779 (CVE-2021-45046) for more details.\n\nThis vulnerability is listed as exploitable by the Cybersecurity \u0026 Infrastructure Security Agency in their [Known Exploited Vulnerabilities Catalog](https://www.cisa.gov/known-exploited-vulnerabilities-catalog).\n\n## Vulnerabilities(BDSA,CVE)\n:red_circle: [BDSA-2021-3731](https://openhub.net/vulnerabilities/bdsa/BDSA-2021-3731) - Insecure Object Deserialization\n\n\n\n## Solution\nFixed in versions:\n*  [**2.16.0-rc1**](https://github.com/apache/logging-log4j2/releases/tag/log4j-2.16.0-rc1) by [this](https://github.com/apache/logging-log4j2/commit/27972043b76c9645476f561c5adc483dec6d3f5d) commit.\n*  [**2.12.2-rc1**](https://github.com/apache/logging-log4j2/releases/tag/log4j-2.12.2-rc1) by [this](https://github.com/apache/logging-log4j2/commit/f819c83804152cb6ed94cb408302e36b21b65053) commit and [this](https://github.com/apache/logging-log4j2/commit/70edc233343815d5efa043b54294a6fb065aa1c5) commit.\n*   [**2.3.1-rc1**](https://github.com/apache/logging-log4j2/releases/tag/log4j-2.3.1-rc1) by [this](https://github.com/apache/logging-log4j2/commit/be848dacbac6df30c4f32b2852e24446033ecf79) commit and [this](https://github.com/apache/logging-log4j2/commit/f6564bb993d547d0a371b75d869042c334bf57f0) commit.\n\nThe latest releases can be found [here](https://github.com/apache/logging-log4j2/tags).\n\nNOTE: It is recommended to upgrade to version  [**2.17.0**](https://downloads.apache.org/logging/log4j/2.17.0/). This recommendation is due to related vulnerabilities (BDSA-2021-3779, CVE-2021-45046) affecting the version that this vulnerability is fixed in.\n\n## Workaround\nThe vendor states that:\n\n\u003e This issue can be mitigated in prior releases (\u003c**2.16.0**) by removing the JndiLookup class from the classpath (example: `zip -q -d log4j-core-*.jar org/apache/logging/log4j/core/lookup/JndiLookup.class`).\n\n\n\n## References\n* Common Weakness Enumeration: [CWE-502](https://cwe.mitre.org/data/definitions/502.html)\n\n","text":"Apache Log4j, as used in many popular services, is vulnerable to improperly allowing lightweight directory access protocol (LDAP) access via Java naming and directory interface (JNDI). A remote attacker able to supply the end application with specially crafted input that is then processed by the Log4j subcomponent could cause the execution of arbitrary Java code.\n\n**Note** \n\n- log4j-api packages by themselves do not contain the vulnerable functionality and are therefore unaffected. log4j-core packages and the upstream overarching source repository are affected.\n\n- A previously suggested mitigation of setting environment variable `LOG4J_FORMAT_MSG_NO_LOOKUPS=true` is not recommended. This mitigation has been proven inadequate against this vulnerability. \n\n- This vulnerability is partially fixed in [**2.15.0-rc2**](https://github.com/apache/logging-log4j2/releases/tag/log4j-2.15.0-rc2) by [this](https://github.com/apache/logging-log4j2/commit/001aaada7dab82c3c09cde5f8e14245dc9d8b454) commit and [this](https://github.com/apache/logging-log4j2/commit/bac0d8a35c7e354a0d3f706569116dff6c6bd658) commit. These fixes were deemed incomplete. See BDSA-2021-3779 (CVE-2021-45046) for more details.\n\nThis vulnerability is listed as exploitable by the Cybersecurity \u0026 Infrastructure Security Agency in their [Known Exploited Vulnerabilities Catalog](https://www.cisa.gov/known-exploited-vulnerabilities-catalog)."},"properties":{"security-severity":"9.1","tags":["security","open_source_analysis","direct_dependency","patch_available","external/cwe/cwe-502"]},"defaultConfiguration":{"level":"error"}},{"id":"CVE-2022-22965 spring-boot-starter-web 2.2.2.RELEASE: org.springframework.boot","shortDescription":{"text":"Direct Dependency: spring-boot-starter-web 2.2.2.RELEASE (CVE-2022-22965)"},"fullDescription":{"text":"Spring Framework is vulnerable to a flaw in the access restrictions to the security sensitive `ClassLoader` property. The restrictions can be bypassed through alternative paths available with Java9 and later. An attacker can leverage this vulnerability to cause remote code execution (RCE).\n\n**Note** this issue exists because the restrictions that were introduced to prevent exploitation of BDSA-2010-0001 (CVE-2010-1622) can be bypassed on platforms where Java9 and later are in use.\n\nThis vulnerability is listed as exploitable by the Cybersecurity \u0026 Infrastructure Security Agency in their [Known Exploited Vulnerabilities Catalog](https://www.cisa.gov/known-exploited-vulnerabilities-catalog)."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| spring-boot-starter-web 2.2.2.RELEASE  | 2.7.18  | 3.2.1 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/48431389-4a2f-44ed-8597-55184ffc0e88?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=ee1b331d-05e0-4bd1-b6ef-727c3b98e324)\n\n\n## Description\nSpring Framework is vulnerable to a flaw in the access restrictions to the security sensitive `ClassLoader` property. The restrictions can be bypassed through alternative paths available with Java9 and later. An attacker can leverage this vulnerability to cause remote code execution (RCE).\n\n**Note** this issue exists because the restrictions that were introduced to prevent exploitation of BDSA-2010-0001 (CVE-2010-1622) can be bypassed on platforms where Java9 and later are in use.\n\nThis vulnerability is listed as exploitable by the Cybersecurity \u0026 Infrastructure Security Agency in their [Known Exploited Vulnerabilities Catalog](https://www.cisa.gov/known-exploited-vulnerabilities-catalog).\n\n## Vulnerabilities(BDSA,CVE)\n:red_circle: [CVE-2022-22965](https://openhub.net/vulnerabilities/bdsa/CVE-2022-22965) - Incomplete List of Disallowed Inputs\n\n\n\n## Solution\nFixed in [**5.3.18**](https://github.com/spring-projects/spring-framework/releases/tag/v5.3.18) by [this](https://github.com/spring-projects/spring-framework/commit/002546b3e4b8d791ea6acccb81eb3168f51abb15) commit and  [**5.2.20**](https://github.com/spring-projects/spring-framework/releases/tag/v5.2.20.RELEASE) by [this](https://github.com/spring-projects/spring-framework/commit/996f701a1916d10202c1d0d281f06ab1f2e1117e) commit .\n\nThe latest releases can be found [here](https://github.com/spring-projects/spring-framework/tags).\n\n## Workaround\nAn official workaround for the issue has been outlined [here](https://spring.io/blog/2022/03/31/spring-framework-rce-early-announcement).\n\n\n\n## References\n* Common Weakness Enumeration: [CWE-184](https://cwe.mitre.org/data/definitions/184.html)\n* Common Weakness Enumeration: [CWE-749](https://cwe.mitre.org/data/definitions/749.html)\n\n","text":"Spring Framework is vulnerable to a flaw in the access restrictions to the security sensitive `ClassLoader` property. The restrictions can be bypassed through alternative paths available with Java9 and later. An attacker can leverage this vulnerability to cause remote code execution (RCE).\n\n**Note** this issue exists because the restrictions that were introduced to prevent exploitation of BDSA-2010-0001 (CVE-2010-1622) can be bypassed on platforms where Java9 and later are in use.\n\nThis vulnerability is listed as exploitable by the Cybersecurity \u0026 Infrastructure Security Agency in their [Known Exploited Vulnerabilities Catalog](https://www.cisa.gov/known-exploited-vulnerabilities-catalog)."},"properties":{"security-severity":"9.1","tags":["security","open_source_analysis","direct_dependency","patch_available","external/cwe/cwe-184","external/cwe/cwe-749"]},"defaultConfiguration":{"level":"error"}},{"id":"CVE-2023-20873 spring-boot-starter-web 2.2.2.RELEASE: org.springframework.boot","shortDescription":{"text":"Direct Dependency: spring-boot-starter-web 2.2.2.RELEASE (CVE-2023-20873)"},"fullDescription":{"text":"Spring framework contains a security bypass vulnerability when `/**` is used as a pattern in Spring Security configuration with the `/cloudfoundryapplication/**` component. The potential for security bypass exists due to the mismatch in pattern matching between Spring Security and Cloud Foundry.\n\n**Note**: The vendor has stated in their [advisory](https://spring.io/security/cve-2023-20873) that this application is not vulnerable if any of the following is true:\n* The application is not deployed to Cloud Foundry.\n* You have disabled Cloud Foundry actuator endpoints with `management.cloudfoundry.enabled` set to `false`.\n* Your application does not have handler mappings that can handle requests to `/cloudfoundryapplication/**`."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| spring-boot-starter-web 2.2.2.RELEASE  | 2.7.18  | 3.2.1 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/48431389-4a2f-44ed-8597-55184ffc0e88?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=ee1b331d-05e0-4bd1-b6ef-727c3b98e324)\n\n\n## Description\nSpring framework contains a security bypass vulnerability when `/**` is used as a pattern in Spring Security configuration with the `/cloudfoundryapplication/**` component. The potential for security bypass exists due to the mismatch in pattern matching between Spring Security and Cloud Foundry.\n\n**Note**: The vendor has stated in their [advisory](https://spring.io/security/cve-2023-20873) that this application is not vulnerable if any of the following is true:\n* The application is not deployed to Cloud Foundry.\n* You have disabled Cloud Foundry actuator endpoints with `management.cloudfoundry.enabled` set to `false`.\n* Your application does not have handler mappings that can handle requests to `/cloudfoundryapplication/**`.\n\n## Vulnerabilities(BDSA,CVE)\n:orange_circle: [CVE-2023-20873](https://openhub.net/vulnerabilities/bdsa/CVE-2023-20873) - Improper Access Control\n\n\n\n## Solution\nFixed in [**3.1.0-RC1**](https://github.com/spring-projects/spring-boot/releases/tag/v3.1.0-RC1), [**3.0.6**](https://github.com/spring-projects/spring-boot/releases/tag/v3.0.6) and [**2.7.11**](https://github.com/spring-projects/spring-boot/releases/tag/v2.7.11)  by [this](https://github.com/spring-projects/spring-boot/commit/3522714c13b47af03bf42e7f2d5994af568cb1a7) commit.\n\nFixed in [**2.6.15**](https://github.com/spring-projects/spring-boot/releases/tag/v2.6.15) and [**2.5.15**](https://github.com/spring-projects/spring-boot/releases/tag/v2.5.15) by [this](https://github.com/spring-projects/spring-boot/commit/307f3c339912466e78fcdac648fff95a4edea573) commit.\n\nThe latest stable releases can be found [here](https://github.com/spring-projects/spring-boot/releases).\n\n## Workaround\nThe vendor has advised the following as a workaround:\n\u003eDisable Cloud Foundry actuator endpoints by setting `management.cloudfoundry.enabled` to `false`.\n\n\n\n## References\n* Common Weakness Enumeration: [CWE-284](https://cwe.mitre.org/data/definitions/284.html)\n* Common Weakness Enumeration: [CWE-923](https://cwe.mitre.org/data/definitions/923.html)\n\n","text":"Spring framework contains a security bypass vulnerability when `/**` is used as a pattern in Spring Security configuration with the `/cloudfoundryapplication/**` component. The potential for security bypass exists due to the mismatch in pattern matching between Spring Security and Cloud Foundry.\n\n**Note**: The vendor has stated in their [advisory](https://spring.io/security/cve-2023-20873) that this application is not vulnerable if any of the following is true:\n* The application is not deployed to Cloud Foundry.\n* You have disabled Cloud Foundry actuator endpoints with `management.cloudfoundry.enabled` set to `false`.\n* Your application does not have handler mappings that can handle requests to `/cloudfoundryapplication/**`."},"properties":{"security-severity":"8.9","tags":["security","open_source_analysis","direct_dependency","patch_available","external/cwe/cwe-284","external/cwe/cwe-923"]},"defaultConfiguration":{"level":"error"}},{"id":"BDSA-2021-3817 spring-boot-starter-web 2.2.2.RELEASE: org.springframework.boot","shortDescription":{"text":"Direct Dependency: spring-boot-starter-web 2.2.2.RELEASE (BDSA-2021-3817)"},"fullDescription":{"text":"Apache log4j is vulnerable to a denial-of-service (DoS) when uncontrolled recursion occurs through a self-referencing lookup.  An attacker can trigger a DoS with malicious input data that generates a recursive lookup  and consequent application crash.\n\nSuccessful attacks require the attacker to have access to Thread Context Map (MDC) input, and for log4j configured with non-default pattern layout with a Context Lookup.\n\nOnly the log4j-core JAR file is impacted by this vulnerability. Applications using only the log4j-api JAR file without the log4j-core JAR file are not impacted.\n\nApache Log4j is the only Logging Services subproject affected by this vulnerability. Other projects like Log4net  are not impacted."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| spring-boot-starter-web 2.2.2.RELEASE  | 2.7.18  | 3.2.1 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/48431389-4a2f-44ed-8597-55184ffc0e88?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=ee1b331d-05e0-4bd1-b6ef-727c3b98e324)\n\n\n## Description\nApache log4j is vulnerable to a denial-of-service (DoS) when uncontrolled recursion occurs through a self-referencing lookup.  An attacker can trigger a DoS with malicious input data that generates a recursive lookup  and consequent application crash.\n\nSuccessful attacks require the attacker to have access to Thread Context Map (MDC) input, and for log4j configured with non-default pattern layout with a Context Lookup.\n\nOnly the log4j-core JAR file is impacted by this vulnerability. Applications using only the log4j-api JAR file without the log4j-core JAR file are not impacted.\n\nApache Log4j is the only Logging Services subproject affected by this vulnerability. Other projects like Log4net  are not impacted.\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [BDSA-2021-3817](https://openhub.net/vulnerabilities/bdsa/BDSA-2021-3817) - Loop with Unreachable Exit Condition ('Infinite Loop')\n\n\n\n## Solution\nFixed in version [**2.17.0**](https://downloads.apache.org/logging/log4j/2.17.0/)  by [this](https://github.com/apache/logging-log4j2/commit/806023265f8c905b2dd1d81fd2458f64b2ea0b5e) commit.\n\nFixed in [**2.12.3-rc1**](https://github.com/apache/logging-log4j2/releases/tag/log4j-2.12.3-rc1) by [this](https://github.com/apache/logging-log4j2/commit/bf7e916df6335713fe2219c7b3b523fb509deabc) commit.\n\nFixed in [**2.3.1-rc1**](https://github.com/apache/logging-log4j2/releases/tag/log4j-2.3.1-rc1) by [this](https://github.com/apache/logging-log4j2/commit/ce6b78d082aae89089cb3ad25cdd46e9ec70a70b) commit.\n\n\nThe latest stable releases can be found [here](https://github.com/apache/logging-log4j2/releases).\n\n## Workaround\nThe vendor advises that  this vulnerability can can be mitigated through one of the following:\n\n* In PatternLayout in the logging configuration, replace Context Lookups like `${ctx:loginId}` or `$${ctx:loginId}` with Thread Context Map patterns `(%X, %mdc, or %MDC)`.\n\n* Alternatively,  remove references in the configuration to Context Lookups like `${ctx:loginId}` or `$${ctx:loginId}` where they originate from sources external to the application such as HTTP headers or user input.\n\n\n\n## References\n* Common Weakness Enumeration: [CWE-835](https://cwe.mitre.org/data/definitions/835.html)\n\n","text":"Apache log4j is vulnerable to a denial-of-service (DoS) when uncontrolled recursion occurs through a self-referencing lookup.  An attacker can trigger a DoS with malicious input data that generates a recursive lookup  and consequent application crash.\n\nSuccessful attacks require the attacker to have access to Thread Context Map (MDC) input, and for log4j configured with non-default pattern layout with a Context Lookup.\n\nOnly the log4j-core JAR file is impacted by this vulnerability. Applications using only the log4j-api JAR file without the log4j-core JAR file are not impacted.\n\nApache Log4j is the only Logging Services subproject affected by this vulnerability. Other projects like Log4net  are not impacted."},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","direct_dependency","patch_available","external/cwe/cwe-835"]},"defaultConfiguration":{"level":"warning"}},{"id":"BDSA-2021-3887 spring-boot-starter-web 2.2.2.RELEASE: org.springframework.boot","shortDescription":{"text":"Direct Dependency: spring-boot-starter-web 2.2.2.RELEASE (BDSA-2021-3887)"},"fullDescription":{"text":"Apache Log4j contains a remote code execution (RCE) vulnerability. This allows an attacker that has permissions to modify the logging configuration files to input a malicious JDBC Appender with a data source referencing a JDNI URI. This can then lead to RCE.\n\n**Note:** This vulnerability impacts log4j-core."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| spring-boot-starter-web 2.2.2.RELEASE  | 2.7.18  | 3.2.1 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/48431389-4a2f-44ed-8597-55184ffc0e88?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=ee1b331d-05e0-4bd1-b6ef-727c3b98e324)\n\n\n## Description\nApache Log4j contains a remote code execution (RCE) vulnerability. This allows an attacker that has permissions to modify the logging configuration files to input a malicious JDBC Appender with a data source referencing a JDNI URI. This can then lead to RCE.\n\n**Note:** This vulnerability impacts log4j-core.\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [BDSA-2021-3887](https://openhub.net/vulnerabilities/bdsa/BDSA-2021-3887) - Weak Input Validation\n\n\n\n## Solution\nFixed in versions:\n\n* [**2.3.2-rc1**](https://github.com/apache/logging-log4j2/releases/tag/log4j-2.3.2-rc1) by [this](https://github.com/apache/logging-log4j2/commit/ae4dc0c1a6389ae895f60451cd87e97e7b9d85c1) commit.\n* [**2.12.4-rc1**](https://github.com/apache/logging-log4j2/releases/tag/log4j-2.12.4-rc1) by [this](https://github.com/apache/logging-log4j2/commit/b3879958cb3b75eb16bf27e970538b6e4e130f1c) commit.\n* [**2.17.1-rc1**](https://github.com/apache/logging-log4j2/releases/tag/log4j-2.17.1-rc1) by [this](https://github.com/apache/logging-log4j2/commit/05db5f9527254632b59aed2a1d78a32c5ab74f16) commit.\n\nThe latest stable releases can be found [here](https://logging.apache.org/log4j/2.x/download.html).\n\n\n\n\n\n## References\n* Common Weakness Enumeration: [CWE-20](https://cwe.mitre.org/data/definitions/20.html)\n\n","text":"Apache Log4j contains a remote code execution (RCE) vulnerability. This allows an attacker that has permissions to modify the logging configuration files to input a malicious JDBC Appender with a data source referencing a JDNI URI. This can then lead to RCE.\n\n**Note:** This vulnerability impacts log4j-core."},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","direct_dependency","patch_available","external/cwe/cwe-20"]},"defaultConfiguration":{"level":"warning"}},{"id":"CVE-2022-27772 spring-boot-starter-web 2.2.2.RELEASE: org.springframework.boot","shortDescription":{"text":"Direct Dependency: spring-boot-starter-web 2.2.2.RELEASE (CVE-2022-27772)"},"fullDescription":{"text":"Spring Boot is vulnerable to privilege escalation due to a race condition which occurs during the creation of a temporary directory. A local attacker could create their own temporary directory by racing against Spring Boot and supply their own configuration files which would allow for the full takeover of the application."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| spring-boot-starter-web 2.2.2.RELEASE  | 2.7.18  | 3.2.1 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/48431389-4a2f-44ed-8597-55184ffc0e88?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=ee1b331d-05e0-4bd1-b6ef-727c3b98e324)\n\n\n## Description\nSpring Boot is vulnerable to privilege escalation due to a race condition which occurs during the creation of a temporary directory. A local attacker could create their own temporary directory by racing against Spring Boot and supply their own configuration files which would allow for the full takeover of the application.\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [CVE-2022-27772](https://openhub.net/vulnerabilities/bdsa/CVE-2022-27772) - Race Condition due to Improper Synchronization\n\n\n\n## Solution\nFixed in [**2.2.11**](https://github.com/spring-projects/spring-boot/releases/tag/v2.2.11.RELEASE) by [this](https://github.com/spring-projects/spring-boot/commit/667ccdae84822072f9ea1a27ed5c77964c71002d) commit.\n\nThe latest stable releases can be found [here](https://github.com/spring-projects/spring-boot/releases).\n\n## Workaround\nAccording to the [Github Security Advisory](https://github.com/JLLeitschuh/security-research/security/advisories/GHSA-cm59-pr5q-cw85), setting the `java.io.tmpdir` system environment variable to a directory that is exclusively owned by the executing user will fix this vulnerability for all operating systems.\n\n\n\n## References\n* Common Weakness Enumeration: [CWE-362](https://cwe.mitre.org/data/definitions/362.html)\n* Common Weakness Enumeration: [CWE-379](https://cwe.mitre.org/data/definitions/379.html)\n\n","text":"Spring Boot is vulnerable to privilege escalation due to a race condition which occurs during the creation of a temporary directory. A local attacker could create their own temporary directory by racing against Spring Boot and supply their own configuration files which would allow for the full takeover of the application."},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","direct_dependency","patch_available","external/cwe/cwe-362","external/cwe/cwe-379"]},"defaultConfiguration":{"level":"warning"}},{"id":"CVE-2023-20883 spring-boot-starter-web 2.2.2.RELEASE: org.springframework.boot","shortDescription":{"text":"Direct Dependency: spring-boot-starter-web 2.2.2.RELEASE (CVE-2023-20883)"},"fullDescription":{"text":"Spring Boot is vulnerable to denial-of-service (DoS) via the welcome page when used to serve an application behind a reverse proxy cache. This will cause users to continuously be served a 404 response, preventing standard application use.\n\n\n**Note:** Spring have provided the following guidance for vulnerable criteria. \nAn application is vulnerable if all of the following are true:\n\n- \"The application has Spring MVC auto-configuration enabled. This is the case by default if Spring MVC is on the classpath.\"\n- \"The application makes use of Spring Boot's welcome page support, either static or templated.\"\n- \"Your application is deployed behind a proxy which caches 404 responses.\"\n\nThe application is not vulnerable if any of the following are true:\n\n- \"Spring MVC auto-configuration is disabled. This is true if `WebMvcAutoConfiguration` is explicitly excluded, if Spring MVC is not on the classpath, or if `spring.main.web-application-type` is set to a value other than `SERVLET`.\"\n- \"The application does not use Spring Boot's welcome page support.\"\n- \"You do not have a proxy which caches 404 responses.\""},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| spring-boot-starter-web 2.2.2.RELEASE  | 2.7.18  | 3.2.1 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/48431389-4a2f-44ed-8597-55184ffc0e88?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=ee1b331d-05e0-4bd1-b6ef-727c3b98e324)\n\n\n## Description\nSpring Boot is vulnerable to denial-of-service (DoS) via the welcome page when used to serve an application behind a reverse proxy cache. This will cause users to continuously be served a 404 response, preventing standard application use.\n\n\n**Note:** Spring have provided the following guidance for vulnerable criteria. \nAn application is vulnerable if all of the following are true:\n\n- \"The application has Spring MVC auto-configuration enabled. This is the case by default if Spring MVC is on the classpath.\"\n- \"The application makes use of Spring Boot's welcome page support, either static or templated.\"\n- \"Your application is deployed behind a proxy which caches 404 responses.\"\n\nThe application is not vulnerable if any of the following are true:\n\n- \"Spring MVC auto-configuration is disabled. This is true if `WebMvcAutoConfiguration` is explicitly excluded, if Spring MVC is not on the classpath, or if `spring.main.web-application-type` is set to a value other than `SERVLET`.\"\n- \"The application does not use Spring Boot's welcome page support.\"\n- \"You do not have a proxy which caches 404 responses.\"\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [CVE-2023-20883](https://openhub.net/vulnerabilities/bdsa/CVE-2023-20883) - Insufficient Verification of Data Authenticity\n\n\n\n## Solution\nFixed in versions\n- [**2.5.15**](https://github.com/spring-projects/spring-boot/releases/tag/v2.5.15) by [this](https://github.com/spring-projects/spring-boot/commit/d7ff379fb8bb2c33319afeb45a343116b59e0ee2) commit,\n- [**2.6.15**](https://github.com/spring-projects/spring-boot/releases/tag/v2.6.15) by [this](https://github.com/spring-projects/spring-boot/commit/d7ff379fb8bb2c33319afeb45a343116b59e0ee2) commit,\n- [**2.7.12**](https://github.com/spring-projects/spring-boot/releases/tag/v2.7.12) by [this](https://github.com/spring-projects/spring-boot/commit/418dd1ba5bdad79b55a043000164bfcbda2acd78) commit,\n- [**3.0.7**](https://github.com/spring-projects/spring-boot/releases/tag/v3.0.7) by [this](https://github.com/spring-projects/spring-boot/commit/418dd1ba5bdad79b55a043000164bfcbda2acd78) commit,\n- [**3.1.0**](https://github.com/spring-projects/spring-boot/releases/tag/v3.1.0) by [this](https://github.com/spring-projects/spring-boot/commit/418dd1ba5bdad79b55a043000164bfcbda2acd78) commit.\n\nThe latest stable releases can be found [here](https://github.com/spring-projects/spring-boot/releases).\n\n## Workaround\nThe vendor has supplied the following workaround:\n\u003e \"configure the reverse proxy not to cache 404 responses and/or not to cache responses to requests to the root (`/`) of the application.\"\n\n\n\n## References\n* Common Weakness Enumeration: [CWE-345](https://cwe.mitre.org/data/definitions/345.html)\n\n","text":"Spring Boot is vulnerable to denial-of-service (DoS) via the welcome page when used to serve an application behind a reverse proxy cache. This will cause users to continuously be served a 404 response, preventing standard application use.\n\n\n**Note:** Spring have provided the following guidance for vulnerable criteria. \nAn application is vulnerable if all of the following are true:\n\n- \"The application has Spring MVC auto-configuration enabled. This is the case by default if Spring MVC is on the classpath.\"\n- \"The application makes use of Spring Boot's welcome page support, either static or templated.\"\n- \"Your application is deployed behind a proxy which caches 404 responses.\"\n\nThe application is not vulnerable if any of the following are true:\n\n- \"Spring MVC auto-configuration is disabled. This is true if `WebMvcAutoConfiguration` is explicitly excluded, if Spring MVC is not on the classpath, or if `spring.main.web-application-type` is set to a value other than `SERVLET`.\"\n- \"The application does not use Spring Boot's welcome page support.\"\n- \"You do not have a proxy which caches 404 responses.\""},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","direct_dependency","patch_available","external/cwe/cwe-345"]},"defaultConfiguration":{"level":"warning"}},{"id":"CVE-2023-34055 spring-boot-starter-web 2.2.2.RELEASE: org.springframework.boot","shortDescription":{"text":"Direct Dependency: spring-boot-starter-web 2.2.2.RELEASE (CVE-2023-34055)"},"fullDescription":{"text":"Spring Boot is vulnerable to denial-of-service (DoS). An unauthenticated user could trigger the vulnerability by providing specially crafted HTTP requests to a web metrics endpoint."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| spring-boot-starter-web 2.2.2.RELEASE  | 2.7.18  | 3.2.1 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/48431389-4a2f-44ed-8597-55184ffc0e88?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=ee1b331d-05e0-4bd1-b6ef-727c3b98e324)\n\n\n## Description\nSpring Boot is vulnerable to denial-of-service (DoS). An unauthenticated user could trigger the vulnerability by providing specially crafted HTTP requests to a web metrics endpoint.\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [CVE-2023-34055](https://openhub.net/vulnerabilities/bdsa/CVE-2023-34055) - Third-party component usage\n\n\n\n## Solution\nFixed in:\n* [**3.1.6**](https://github.com/spring-projects/spring-boot/releases/tag/v3.1.6)\n* [**3.0.13**](https://github.com/spring-projects/spring-boot/releases/tag/v3.0.13)\n* [**2.7.18**](https://github.com/spring-projects/spring-boot/releases/tag/v2.7.18)\n\nThe latest stable releases can be found [here](https://github.com/spring-projects/spring-boot/releases).\n\n## Workaround\nThe vendor notes the following:\n\u003e As a temporary workaround, Spring Boot users can choose to disable web metrics with the following property: `management.metrics.enable.http.server.requests=false`\n\n\n\n\n","text":"Spring Boot is vulnerable to denial-of-service (DoS). An unauthenticated user could trigger the vulnerability by providing specially crafted HTTP requests to a web metrics endpoint."},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","direct_dependency","patch_available"]},"defaultConfiguration":{"level":"warning"}},{"id":"CVE-2020-17521 groovy-xml 2.5.8: rest-assured 3.3.0: org.codehaus.groovy","shortDescription":{"text":"Transitive Dependency: groovy-xml 2.5.8 from rest-assured 3.3.0 (CVE-2020-17521)"},"fullDescription":{"text":"Apache Groovy is vulnerable to privilege escalation and information exposure due to inappropriate use of an insecure JDK method. A local attacker could exploit this vulnerability by supplying a system with maliciously crafted input."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| groovy-xml 2.5.8  | 2.5.23  | 3.0.20 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/2753baae-27d4-436c-b4f8-04fa18e1a849?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=81f45bb9-9c2e-4a23-be4b-2a85101048a1)\n\n\n## Description\nApache Groovy is vulnerable to privilege escalation and information exposure due to inappropriate use of an insecure JDK method. A local attacker could exploit this vulnerability by supplying a system with maliciously crafted input.\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [CVE-2020-17521](https://openhub.net/vulnerabilities/bdsa/CVE-2020-17521) - Sensitive Data Exposure\n\n\n\n## Solution\nFixed in:\n* [**2.4.21**](https://github.com/apache/groovy/releases/tag/GROOVY_2_4_21) by [this](https://github.com/apache/groovy/commit/4e418d4a34c973a7ec1e822552103043ac13780e) commit,\n* [**2.5.14**](https://github.com/apache/groovy/releases/tag/GROOVY_2_5_14) by [this](https://github.com/apache/groovy/commit/98dc5d713926cd81b006c510a1546ccd520fe17f) commit,\n* [**3.0.7**](https://github.com/apache/groovy/releases/tag/GROOVY_3_0_7) by [this](https://github.com/apache/groovy/commit/f069c35c4bbaf68547c76381509d59840a7ed32d) commit,\n* [**4.0.0-alpha-2**](https://github.com/apache/groovy/releases/tag/GROOVY_4_0_0_ALPHA_2) by [this](https://github.com/apache/groovy/commit/bcbe5c4c76db83736166530647c024ac1e47ef28) commit.\n\nNote: the vendor states that the fix for **2.4**, when Groovy is running on a pre-JDK7 version of the JDK, eliminates the risk of privilege escalation but still leaves the potential for sensitive information leakage. The vendor recommends applying the following mitigation for **2.4**/pre-JDK7 users:\n\u003e Set the `java.io.tmpdir` system environment variable to a directory that is exclusively owned by the executing user.\n\n\n\n## Dependency tree\n- org.owasp.webgoat:webgoat-integration-tests:v8.1.0:-maven\n    - io.rest-assured:rest-assured:3.3.0\n        - org.codehaus.groovy:groovy-xml:2.5.8\n\n\n## References\n* Common Weakness Enumeration: [CWE-200](https://cwe.mitre.org/data/definitions/200.html)\n* Common Weakness Enumeration: [CWE-379](https://cwe.mitre.org/data/definitions/379.html)\n\n","text":"Apache Groovy is vulnerable to privilege escalation and information exposure due to inappropriate use of an insecure JDK method. A local attacker could exploit this vulnerability by supplying a system with maliciously crafted input."},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-200","external/cwe/cwe-379"]},"defaultConfiguration":{"level":"warning"}},{"id":"BDSA-2021-3731 spring-boot-starter-actuator 2.2.2.RELEASE: org.springframework.boot","shortDescription":{"text":"Direct Dependency: spring-boot-starter-actuator 2.2.2.RELEASE (BDSA-2021-3731)"},"fullDescription":{"text":"Apache Log4j, as used in many popular services, is vulnerable to improperly allowing lightweight directory access protocol (LDAP) access via Java naming and directory interface (JNDI). A remote attacker able to supply the end application with specially crafted input that is then processed by the Log4j subcomponent could cause the execution of arbitrary Java code.\n\n**Note** \n\n- log4j-api packages by themselves do not contain the vulnerable functionality and are therefore unaffected. log4j-core packages and the upstream overarching source repository are affected.\n\n- A previously suggested mitigation of setting environment variable `LOG4J_FORMAT_MSG_NO_LOOKUPS=true` is not recommended. This mitigation has been proven inadequate against this vulnerability. \n\n- This vulnerability is partially fixed in [**2.15.0-rc2**](https://github.com/apache/logging-log4j2/releases/tag/log4j-2.15.0-rc2) by [this](https://github.com/apache/logging-log4j2/commit/001aaada7dab82c3c09cde5f8e14245dc9d8b454) commit and [this](https://github.com/apache/logging-log4j2/commit/bac0d8a35c7e354a0d3f706569116dff6c6bd658) commit. These fixes were deemed incomplete. See BDSA-2021-3779 (CVE-2021-45046) for more details.\n\nThis vulnerability is listed as exploitable by the Cybersecurity \u0026 Infrastructure Security Agency in their [Known Exploited Vulnerabilities Catalog](https://www.cisa.gov/known-exploited-vulnerabilities-catalog)."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| spring-boot-starter-actuator 2.2.2.RELEASE  | 2.7.18  | 3.2.1 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/48431389-4a2f-44ed-8597-55184ffc0e88?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=ee1b331d-05e0-4bd1-b6ef-727c3b98e324)\n\n\n## Description\nApache Log4j, as used in many popular services, is vulnerable to improperly allowing lightweight directory access protocol (LDAP) access via Java naming and directory interface (JNDI). A remote attacker able to supply the end application with specially crafted input that is then processed by the Log4j subcomponent could cause the execution of arbitrary Java code.\n\n**Note** \n\n- log4j-api packages by themselves do not contain the vulnerable functionality and are therefore unaffected. log4j-core packages and the upstream overarching source repository are affected.\n\n- A previously suggested mitigation of setting environment variable `LOG4J_FORMAT_MSG_NO_LOOKUPS=true` is not recommended. This mitigation has been proven inadequate against this vulnerability. \n\n- This vulnerability is partially fixed in [**2.15.0-rc2**](https://github.com/apache/logging-log4j2/releases/tag/log4j-2.15.0-rc2) by [this](https://github.com/apache/logging-log4j2/commit/001aaada7dab82c3c09cde5f8e14245dc9d8b454) commit and [this](https://github.com/apache/logging-log4j2/commit/bac0d8a35c7e354a0d3f706569116dff6c6bd658) commit. These fixes were deemed incomplete. See BDSA-2021-3779 (CVE-2021-45046) for more details.\n\nThis vulnerability is listed as exploitable by the Cybersecurity \u0026 Infrastructure Security Agency in their [Known Exploited Vulnerabilities Catalog](https://www.cisa.gov/known-exploited-vulnerabilities-catalog).\n\n## Vulnerabilities(BDSA,CVE)\n:red_circle: [BDSA-2021-3731](https://openhub.net/vulnerabilities/bdsa/BDSA-2021-3731) - Insecure Object Deserialization\n\n\n\n## Solution\nFixed in versions:\n*  [**2.16.0-rc1**](https://github.com/apache/logging-log4j2/releases/tag/log4j-2.16.0-rc1) by [this](https://github.com/apache/logging-log4j2/commit/27972043b76c9645476f561c5adc483dec6d3f5d) commit.\n*  [**2.12.2-rc1**](https://github.com/apache/logging-log4j2/releases/tag/log4j-2.12.2-rc1) by [this](https://github.com/apache/logging-log4j2/commit/f819c83804152cb6ed94cb408302e36b21b65053) commit and [this](https://github.com/apache/logging-log4j2/commit/70edc233343815d5efa043b54294a6fb065aa1c5) commit.\n*   [**2.3.1-rc1**](https://github.com/apache/logging-log4j2/releases/tag/log4j-2.3.1-rc1) by [this](https://github.com/apache/logging-log4j2/commit/be848dacbac6df30c4f32b2852e24446033ecf79) commit and [this](https://github.com/apache/logging-log4j2/commit/f6564bb993d547d0a371b75d869042c334bf57f0) commit.\n\nThe latest releases can be found [here](https://github.com/apache/logging-log4j2/tags).\n\nNOTE: It is recommended to upgrade to version  [**2.17.0**](https://downloads.apache.org/logging/log4j/2.17.0/). This recommendation is due to related vulnerabilities (BDSA-2021-3779, CVE-2021-45046) affecting the version that this vulnerability is fixed in.\n\n## Workaround\nThe vendor states that:\n\n\u003e This issue can be mitigated in prior releases (\u003c**2.16.0**) by removing the JndiLookup class from the classpath (example: `zip -q -d log4j-core-*.jar org/apache/logging/log4j/core/lookup/JndiLookup.class`).\n\n\n\n## References\n* Common Weakness Enumeration: [CWE-502](https://cwe.mitre.org/data/definitions/502.html)\n\n","text":"Apache Log4j, as used in many popular services, is vulnerable to improperly allowing lightweight directory access protocol (LDAP) access via Java naming and directory interface (JNDI). A remote attacker able to supply the end application with specially crafted input that is then processed by the Log4j subcomponent could cause the execution of arbitrary Java code.\n\n**Note** \n\n- log4j-api packages by themselves do not contain the vulnerable functionality and are therefore unaffected. log4j-core packages and the upstream overarching source repository are affected.\n\n- A previously suggested mitigation of setting environment variable `LOG4J_FORMAT_MSG_NO_LOOKUPS=true` is not recommended. This mitigation has been proven inadequate against this vulnerability. \n\n- This vulnerability is partially fixed in [**2.15.0-rc2**](https://github.com/apache/logging-log4j2/releases/tag/log4j-2.15.0-rc2) by [this](https://github.com/apache/logging-log4j2/commit/001aaada7dab82c3c09cde5f8e14245dc9d8b454) commit and [this](https://github.com/apache/logging-log4j2/commit/bac0d8a35c7e354a0d3f706569116dff6c6bd658) commit. These fixes were deemed incomplete. See BDSA-2021-3779 (CVE-2021-45046) for more details.\n\nThis vulnerability is listed as exploitable by the Cybersecurity \u0026 Infrastructure Security Agency in their [Known Exploited Vulnerabilities Catalog](https://www.cisa.gov/known-exploited-vulnerabilities-catalog)."},"properties":{"security-severity":"9.1","tags":["security","open_source_analysis","direct_dependency","patch_available","external/cwe/cwe-502"]},"defaultConfiguration":{"level":"error"}},{"id":"CVE-2022-22965 spring-boot-starter-actuator 2.2.2.RELEASE: org.springframework.boot","shortDescription":{"text":"Direct Dependency: spring-boot-starter-actuator 2.2.2.RELEASE (CVE-2022-22965)"},"fullDescription":{"text":"Spring Framework is vulnerable to a flaw in the access restrictions to the security sensitive `ClassLoader` property. The restrictions can be bypassed through alternative paths available with Java9 and later. An attacker can leverage this vulnerability to cause remote code execution (RCE).\n\n**Note** this issue exists because the restrictions that were introduced to prevent exploitation of BDSA-2010-0001 (CVE-2010-1622) can be bypassed on platforms where Java9 and later are in use.\n\nThis vulnerability is listed as exploitable by the Cybersecurity \u0026 Infrastructure Security Agency in their [Known Exploited Vulnerabilities Catalog](https://www.cisa.gov/known-exploited-vulnerabilities-catalog)."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| spring-boot-starter-actuator 2.2.2.RELEASE  | 2.7.18  | 3.2.1 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/48431389-4a2f-44ed-8597-55184ffc0e88?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=ee1b331d-05e0-4bd1-b6ef-727c3b98e324)\n\n\n## Description\nSpring Framework is vulnerable to a flaw in the access restrictions to the security sensitive `ClassLoader` property. The restrictions can be bypassed through alternative paths available with Java9 and later. An attacker can leverage this vulnerability to cause remote code execution (RCE).\n\n**Note** this issue exists because the restrictions that were introduced to prevent exploitation of BDSA-2010-0001 (CVE-2010-1622) can be bypassed on platforms where Java9 and later are in use.\n\nThis vulnerability is listed as exploitable by the Cybersecurity \u0026 Infrastructure Security Agency in their [Known Exploited Vulnerabilities Catalog](https://www.cisa.gov/known-exploited-vulnerabilities-catalog).\n\n## Vulnerabilities(BDSA,CVE)\n:red_circle: [CVE-2022-22965](https://openhub.net/vulnerabilities/bdsa/CVE-2022-22965) - Incomplete List of Disallowed Inputs\n\n\n\n## Solution\nFixed in [**5.3.18**](https://github.com/spring-projects/spring-framework/releases/tag/v5.3.18) by [this](https://github.com/spring-projects/spring-framework/commit/002546b3e4b8d791ea6acccb81eb3168f51abb15) commit and  [**5.2.20**](https://github.com/spring-projects/spring-framework/releases/tag/v5.2.20.RELEASE) by [this](https://github.com/spring-projects/spring-framework/commit/996f701a1916d10202c1d0d281f06ab1f2e1117e) commit .\n\nThe latest releases can be found [here](https://github.com/spring-projects/spring-framework/tags).\n\n## Workaround\nAn official workaround for the issue has been outlined [here](https://spring.io/blog/2022/03/31/spring-framework-rce-early-announcement).\n\n\n\n## References\n* Common Weakness Enumeration: [CWE-184](https://cwe.mitre.org/data/definitions/184.html)\n* Common Weakness Enumeration: [CWE-749](https://cwe.mitre.org/data/definitions/749.html)\n\n","text":"Spring Framework is vulnerable to a flaw in the access restrictions to the security sensitive `ClassLoader` property. The restrictions can be bypassed through alternative paths available with Java9 and later. An attacker can leverage this vulnerability to cause remote code execution (RCE).\n\n**Note** this issue exists because the restrictions that were introduced to prevent exploitation of BDSA-2010-0001 (CVE-2010-1622) can be bypassed on platforms where Java9 and later are in use.\n\nThis vulnerability is listed as exploitable by the Cybersecurity \u0026 Infrastructure Security Agency in their [Known Exploited Vulnerabilities Catalog](https://www.cisa.gov/known-exploited-vulnerabilities-catalog)."},"properties":{"security-severity":"9.1","tags":["security","open_source_analysis","direct_dependency","patch_available","external/cwe/cwe-184","external/cwe/cwe-749"]},"defaultConfiguration":{"level":"error"}},{"id":"CVE-2023-20873 spring-boot-starter-actuator 2.2.2.RELEASE: org.springframework.boot","shortDescription":{"text":"Direct Dependency: spring-boot-starter-actuator 2.2.2.RELEASE (CVE-2023-20873)"},"fullDescription":{"text":"Spring framework contains a security bypass vulnerability when `/**` is used as a pattern in Spring Security configuration with the `/cloudfoundryapplication/**` component. The potential for security bypass exists due to the mismatch in pattern matching between Spring Security and Cloud Foundry.\n\n**Note**: The vendor has stated in their [advisory](https://spring.io/security/cve-2023-20873) that this application is not vulnerable if any of the following is true:\n* The application is not deployed to Cloud Foundry.\n* You have disabled Cloud Foundry actuator endpoints with `management.cloudfoundry.enabled` set to `false`.\n* Your application does not have handler mappings that can handle requests to `/cloudfoundryapplication/**`."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| spring-boot-starter-actuator 2.2.2.RELEASE  | 2.7.18  | 3.2.1 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/48431389-4a2f-44ed-8597-55184ffc0e88?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=ee1b331d-05e0-4bd1-b6ef-727c3b98e324)\n\n\n## Description\nSpring framework contains a security bypass vulnerability when `/**` is used as a pattern in Spring Security configuration with the `/cloudfoundryapplication/**` component. The potential for security bypass exists due to the mismatch in pattern matching between Spring Security and Cloud Foundry.\n\n**Note**: The vendor has stated in their [advisory](https://spring.io/security/cve-2023-20873) that this application is not vulnerable if any of the following is true:\n* The application is not deployed to Cloud Foundry.\n* You have disabled Cloud Foundry actuator endpoints with `management.cloudfoundry.enabled` set to `false`.\n* Your application does not have handler mappings that can handle requests to `/cloudfoundryapplication/**`.\n\n## Vulnerabilities(BDSA,CVE)\n:orange_circle: [CVE-2023-20873](https://openhub.net/vulnerabilities/bdsa/CVE-2023-20873) - Improper Access Control\n\n\n\n## Solution\nFixed in [**3.1.0-RC1**](https://github.com/spring-projects/spring-boot/releases/tag/v3.1.0-RC1), [**3.0.6**](https://github.com/spring-projects/spring-boot/releases/tag/v3.0.6) and [**2.7.11**](https://github.com/spring-projects/spring-boot/releases/tag/v2.7.11)  by [this](https://github.com/spring-projects/spring-boot/commit/3522714c13b47af03bf42e7f2d5994af568cb1a7) commit.\n\nFixed in [**2.6.15**](https://github.com/spring-projects/spring-boot/releases/tag/v2.6.15) and [**2.5.15**](https://github.com/spring-projects/spring-boot/releases/tag/v2.5.15) by [this](https://github.com/spring-projects/spring-boot/commit/307f3c339912466e78fcdac648fff95a4edea573) commit.\n\nThe latest stable releases can be found [here](https://github.com/spring-projects/spring-boot/releases).\n\n## Workaround\nThe vendor has advised the following as a workaround:\n\u003eDisable Cloud Foundry actuator endpoints by setting `management.cloudfoundry.enabled` to `false`.\n\n\n\n## References\n* Common Weakness Enumeration: [CWE-284](https://cwe.mitre.org/data/definitions/284.html)\n* Common Weakness Enumeration: [CWE-923](https://cwe.mitre.org/data/definitions/923.html)\n\n","text":"Spring framework contains a security bypass vulnerability when `/**` is used as a pattern in Spring Security configuration with the `/cloudfoundryapplication/**` component. The potential for security bypass exists due to the mismatch in pattern matching between Spring Security and Cloud Foundry.\n\n**Note**: The vendor has stated in their [advisory](https://spring.io/security/cve-2023-20873) that this application is not vulnerable if any of the following is true:\n* The application is not deployed to Cloud Foundry.\n* You have disabled Cloud Foundry actuator endpoints with `management.cloudfoundry.enabled` set to `false`.\n* Your application does not have handler mappings that can handle requests to `/cloudfoundryapplication/**`."},"properties":{"security-severity":"8.9","tags":["security","open_source_analysis","direct_dependency","patch_available","external/cwe/cwe-284","external/cwe/cwe-923"]},"defaultConfiguration":{"level":"error"}},{"id":"BDSA-2021-3817 spring-boot-starter-actuator 2.2.2.RELEASE: org.springframework.boot","shortDescription":{"text":"Direct Dependency: spring-boot-starter-actuator 2.2.2.RELEASE (BDSA-2021-3817)"},"fullDescription":{"text":"Apache log4j is vulnerable to a denial-of-service (DoS) when uncontrolled recursion occurs through a self-referencing lookup.  An attacker can trigger a DoS with malicious input data that generates a recursive lookup  and consequent application crash.\n\nSuccessful attacks require the attacker to have access to Thread Context Map (MDC) input, and for log4j configured with non-default pattern layout with a Context Lookup.\n\nOnly the log4j-core JAR file is impacted by this vulnerability. Applications using only the log4j-api JAR file without the log4j-core JAR file are not impacted.\n\nApache Log4j is the only Logging Services subproject affected by this vulnerability. Other projects like Log4net  are not impacted."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| spring-boot-starter-actuator 2.2.2.RELEASE  | 2.7.18  | 3.2.1 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/48431389-4a2f-44ed-8597-55184ffc0e88?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=ee1b331d-05e0-4bd1-b6ef-727c3b98e324)\n\n\n## Description\nApache log4j is vulnerable to a denial-of-service (DoS) when uncontrolled recursion occurs through a self-referencing lookup.  An attacker can trigger a DoS with malicious input data that generates a recursive lookup  and consequent application crash.\n\nSuccessful attacks require the attacker to have access to Thread Context Map (MDC) input, and for log4j configured with non-default pattern layout with a Context Lookup.\n\nOnly the log4j-core JAR file is impacted by this vulnerability. Applications using only the log4j-api JAR file without the log4j-core JAR file are not impacted.\n\nApache Log4j is the only Logging Services subproject affected by this vulnerability. Other projects like Log4net  are not impacted.\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [BDSA-2021-3817](https://openhub.net/vulnerabilities/bdsa/BDSA-2021-3817) - Loop with Unreachable Exit Condition ('Infinite Loop')\n\n\n\n## Solution\nFixed in version [**2.17.0**](https://downloads.apache.org/logging/log4j/2.17.0/)  by [this](https://github.com/apache/logging-log4j2/commit/806023265f8c905b2dd1d81fd2458f64b2ea0b5e) commit.\n\nFixed in [**2.12.3-rc1**](https://github.com/apache/logging-log4j2/releases/tag/log4j-2.12.3-rc1) by [this](https://github.com/apache/logging-log4j2/commit/bf7e916df6335713fe2219c7b3b523fb509deabc) commit.\n\nFixed in [**2.3.1-rc1**](https://github.com/apache/logging-log4j2/releases/tag/log4j-2.3.1-rc1) by [this](https://github.com/apache/logging-log4j2/commit/ce6b78d082aae89089cb3ad25cdd46e9ec70a70b) commit.\n\n\nThe latest stable releases can be found [here](https://github.com/apache/logging-log4j2/releases).\n\n## Workaround\nThe vendor advises that  this vulnerability can can be mitigated through one of the following:\n\n* In PatternLayout in the logging configuration, replace Context Lookups like `${ctx:loginId}` or `$${ctx:loginId}` with Thread Context Map patterns `(%X, %mdc, or %MDC)`.\n\n* Alternatively,  remove references in the configuration to Context Lookups like `${ctx:loginId}` or `$${ctx:loginId}` where they originate from sources external to the application such as HTTP headers or user input.\n\n\n\n## References\n* Common Weakness Enumeration: [CWE-835](https://cwe.mitre.org/data/definitions/835.html)\n\n","text":"Apache log4j is vulnerable to a denial-of-service (DoS) when uncontrolled recursion occurs through a self-referencing lookup.  An attacker can trigger a DoS with malicious input data that generates a recursive lookup  and consequent application crash.\n\nSuccessful attacks require the attacker to have access to Thread Context Map (MDC) input, and for log4j configured with non-default pattern layout with a Context Lookup.\n\nOnly the log4j-core JAR file is impacted by this vulnerability. Applications using only the log4j-api JAR file without the log4j-core JAR file are not impacted.\n\nApache Log4j is the only Logging Services subproject affected by this vulnerability. Other projects like Log4net  are not impacted."},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","direct_dependency","patch_available","external/cwe/cwe-835"]},"defaultConfiguration":{"level":"warning"}},{"id":"BDSA-2021-3887 spring-boot-starter-actuator 2.2.2.RELEASE: org.springframework.boot","shortDescription":{"text":"Direct Dependency: spring-boot-starter-actuator 2.2.2.RELEASE (BDSA-2021-3887)"},"fullDescription":{"text":"Apache Log4j contains a remote code execution (RCE) vulnerability. This allows an attacker that has permissions to modify the logging configuration files to input a malicious JDBC Appender with a data source referencing a JDNI URI. This can then lead to RCE.\n\n**Note:** This vulnerability impacts log4j-core."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| spring-boot-starter-actuator 2.2.2.RELEASE  | 2.7.18  | 3.2.1 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/48431389-4a2f-44ed-8597-55184ffc0e88?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=ee1b331d-05e0-4bd1-b6ef-727c3b98e324)\n\n\n## Description\nApache Log4j contains a remote code execution (RCE) vulnerability. This allows an attacker that has permissions to modify the logging configuration files to input a malicious JDBC Appender with a data source referencing a JDNI URI. This can then lead to RCE.\n\n**Note:** This vulnerability impacts log4j-core.\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [BDSA-2021-3887](https://openhub.net/vulnerabilities/bdsa/BDSA-2021-3887) - Weak Input Validation\n\n\n\n## Solution\nFixed in versions:\n\n* [**2.3.2-rc1**](https://github.com/apache/logging-log4j2/releases/tag/log4j-2.3.2-rc1) by [this](https://github.com/apache/logging-log4j2/commit/ae4dc0c1a6389ae895f60451cd87e97e7b9d85c1) commit.\n* [**2.12.4-rc1**](https://github.com/apache/logging-log4j2/releases/tag/log4j-2.12.4-rc1) by [this](https://github.com/apache/logging-log4j2/commit/b3879958cb3b75eb16bf27e970538b6e4e130f1c) commit.\n* [**2.17.1-rc1**](https://github.com/apache/logging-log4j2/releases/tag/log4j-2.17.1-rc1) by [this](https://github.com/apache/logging-log4j2/commit/05db5f9527254632b59aed2a1d78a32c5ab74f16) commit.\n\nThe latest stable releases can be found [here](https://logging.apache.org/log4j/2.x/download.html).\n\n\n\n\n\n## References\n* Common Weakness Enumeration: [CWE-20](https://cwe.mitre.org/data/definitions/20.html)\n\n","text":"Apache Log4j contains a remote code execution (RCE) vulnerability. This allows an attacker that has permissions to modify the logging configuration files to input a malicious JDBC Appender with a data source referencing a JDNI URI. This can then lead to RCE.\n\n**Note:** This vulnerability impacts log4j-core."},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","direct_dependency","patch_available","external/cwe/cwe-20"]},"defaultConfiguration":{"level":"warning"}},{"id":"CVE-2022-27772 spring-boot-starter-actuator 2.2.2.RELEASE: org.springframework.boot","shortDescription":{"text":"Direct Dependency: spring-boot-starter-actuator 2.2.2.RELEASE (CVE-2022-27772)"},"fullDescription":{"text":"Spring Boot is vulnerable to privilege escalation due to a race condition which occurs during the creation of a temporary directory. A local attacker could create their own temporary directory by racing against Spring Boot and supply their own configuration files which would allow for the full takeover of the application."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| spring-boot-starter-actuator 2.2.2.RELEASE  | 2.7.18  | 3.2.1 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/48431389-4a2f-44ed-8597-55184ffc0e88?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=ee1b331d-05e0-4bd1-b6ef-727c3b98e324)\n\n\n## Description\nSpring Boot is vulnerable to privilege escalation due to a race condition which occurs during the creation of a temporary directory. A local attacker could create their own temporary directory by racing against Spring Boot and supply their own configuration files which would allow for the full takeover of the application.\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [CVE-2022-27772](https://openhub.net/vulnerabilities/bdsa/CVE-2022-27772) - Race Condition due to Improper Synchronization\n\n\n\n## Solution\nFixed in [**2.2.11**](https://github.com/spring-projects/spring-boot/releases/tag/v2.2.11.RELEASE) by [this](https://github.com/spring-projects/spring-boot/commit/667ccdae84822072f9ea1a27ed5c77964c71002d) commit.\n\nThe latest stable releases can be found [here](https://github.com/spring-projects/spring-boot/releases).\n\n## Workaround\nAccording to the [Github Security Advisory](https://github.com/JLLeitschuh/security-research/security/advisories/GHSA-cm59-pr5q-cw85), setting the `java.io.tmpdir` system environment variable to a directory that is exclusively owned by the executing user will fix this vulnerability for all operating systems.\n\n\n\n## References\n* Common Weakness Enumeration: [CWE-362](https://cwe.mitre.org/data/definitions/362.html)\n* Common Weakness Enumeration: [CWE-379](https://cwe.mitre.org/data/definitions/379.html)\n\n","text":"Spring Boot is vulnerable to privilege escalation due to a race condition which occurs during the creation of a temporary directory. A local attacker could create their own temporary directory by racing against Spring Boot and supply their own configuration files which would allow for the full takeover of the application."},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","direct_dependency","patch_available","external/cwe/cwe-362","external/cwe/cwe-379"]},"defaultConfiguration":{"level":"warning"}},{"id":"CVE-2023-20883 spring-boot-starter-actuator 2.2.2.RELEASE: org.springframework.boot","shortDescription":{"text":"Direct Dependency: spring-boot-starter-actuator 2.2.2.RELEASE (CVE-2023-20883)"},"fullDescription":{"text":"Spring Boot is vulnerable to denial-of-service (DoS) via the welcome page when used to serve an application behind a reverse proxy cache. This will cause users to continuously be served a 404 response, preventing standard application use.\n\n\n**Note:** Spring have provided the following guidance for vulnerable criteria. \nAn application is vulnerable if all of the following are true:\n\n- \"The application has Spring MVC auto-configuration enabled. This is the case by default if Spring MVC is on the classpath.\"\n- \"The application makes use of Spring Boot's welcome page support, either static or templated.\"\n- \"Your application is deployed behind a proxy which caches 404 responses.\"\n\nThe application is not vulnerable if any of the following are true:\n\n- \"Spring MVC auto-configuration is disabled. This is true if `WebMvcAutoConfiguration` is explicitly excluded, if Spring MVC is not on the classpath, or if `spring.main.web-application-type` is set to a value other than `SERVLET`.\"\n- \"The application does not use Spring Boot's welcome page support.\"\n- \"You do not have a proxy which caches 404 responses.\""},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| spring-boot-starter-actuator 2.2.2.RELEASE  | 2.7.18  | 3.2.1 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/48431389-4a2f-44ed-8597-55184ffc0e88?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=ee1b331d-05e0-4bd1-b6ef-727c3b98e324)\n\n\n## Description\nSpring Boot is vulnerable to denial-of-service (DoS) via the welcome page when used to serve an application behind a reverse proxy cache. This will cause users to continuously be served a 404 response, preventing standard application use.\n\n\n**Note:** Spring have provided the following guidance for vulnerable criteria. \nAn application is vulnerable if all of the following are true:\n\n- \"The application has Spring MVC auto-configuration enabled. This is the case by default if Spring MVC is on the classpath.\"\n- \"The application makes use of Spring Boot's welcome page support, either static or templated.\"\n- \"Your application is deployed behind a proxy which caches 404 responses.\"\n\nThe application is not vulnerable if any of the following are true:\n\n- \"Spring MVC auto-configuration is disabled. This is true if `WebMvcAutoConfiguration` is explicitly excluded, if Spring MVC is not on the classpath, or if `spring.main.web-application-type` is set to a value other than `SERVLET`.\"\n- \"The application does not use Spring Boot's welcome page support.\"\n- \"You do not have a proxy which caches 404 responses.\"\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [CVE-2023-20883](https://openhub.net/vulnerabilities/bdsa/CVE-2023-20883) - Insufficient Verification of Data Authenticity\n\n\n\n## Solution\nFixed in versions\n- [**2.5.15**](https://github.com/spring-projects/spring-boot/releases/tag/v2.5.15) by [this](https://github.com/spring-projects/spring-boot/commit/d7ff379fb8bb2c33319afeb45a343116b59e0ee2) commit,\n- [**2.6.15**](https://github.com/spring-projects/spring-boot/releases/tag/v2.6.15) by [this](https://github.com/spring-projects/spring-boot/commit/d7ff379fb8bb2c33319afeb45a343116b59e0ee2) commit,\n- [**2.7.12**](https://github.com/spring-projects/spring-boot/releases/tag/v2.7.12) by [this](https://github.com/spring-projects/spring-boot/commit/418dd1ba5bdad79b55a043000164bfcbda2acd78) commit,\n- [**3.0.7**](https://github.com/spring-projects/spring-boot/releases/tag/v3.0.7) by [this](https://github.com/spring-projects/spring-boot/commit/418dd1ba5bdad79b55a043000164bfcbda2acd78) commit,\n- [**3.1.0**](https://github.com/spring-projects/spring-boot/releases/tag/v3.1.0) by [this](https://github.com/spring-projects/spring-boot/commit/418dd1ba5bdad79b55a043000164bfcbda2acd78) commit.\n\nThe latest stable releases can be found [here](https://github.com/spring-projects/spring-boot/releases).\n\n## Workaround\nThe vendor has supplied the following workaround:\n\u003e \"configure the reverse proxy not to cache 404 responses and/or not to cache responses to requests to the root (`/`) of the application.\"\n\n\n\n## References\n* Common Weakness Enumeration: [CWE-345](https://cwe.mitre.org/data/definitions/345.html)\n\n","text":"Spring Boot is vulnerable to denial-of-service (DoS) via the welcome page when used to serve an application behind a reverse proxy cache. This will cause users to continuously be served a 404 response, preventing standard application use.\n\n\n**Note:** Spring have provided the following guidance for vulnerable criteria. \nAn application is vulnerable if all of the following are true:\n\n- \"The application has Spring MVC auto-configuration enabled. This is the case by default if Spring MVC is on the classpath.\"\n- \"The application makes use of Spring Boot's welcome page support, either static or templated.\"\n- \"Your application is deployed behind a proxy which caches 404 responses.\"\n\nThe application is not vulnerable if any of the following are true:\n\n- \"Spring MVC auto-configuration is disabled. This is true if `WebMvcAutoConfiguration` is explicitly excluded, if Spring MVC is not on the classpath, or if `spring.main.web-application-type` is set to a value other than `SERVLET`.\"\n- \"The application does not use Spring Boot's welcome page support.\"\n- \"You do not have a proxy which caches 404 responses.\""},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","direct_dependency","patch_available","external/cwe/cwe-345"]},"defaultConfiguration":{"level":"warning"}},{"id":"CVE-2023-34055 spring-boot-starter-actuator 2.2.2.RELEASE: org.springframework.boot","shortDescription":{"text":"Direct Dependency: spring-boot-starter-actuator 2.2.2.RELEASE (CVE-2023-34055)"},"fullDescription":{"text":"Spring Boot is vulnerable to denial-of-service (DoS). An unauthenticated user could trigger the vulnerability by providing specially crafted HTTP requests to a web metrics endpoint."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| spring-boot-starter-actuator 2.2.2.RELEASE  | 2.7.18  | 3.2.1 |\n\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/components/48431389-4a2f-44ed-8597-55184ffc0e88?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026component=ee1b331d-05e0-4bd1-b6ef-727c3b98e324)\n\n\n## Description\nSpring Boot is vulnerable to denial-of-service (DoS). An unauthenticated user could trigger the vulnerability by providing specially crafted HTTP requests to a web metrics endpoint.\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [CVE-2023-34055](https://openhub.net/vulnerabilities/bdsa/CVE-2023-34055) - Third-party component usage\n\n\n\n## Solution\nFixed in:\n* [**3.1.6**](https://github.com/spring-projects/spring-boot/releases/tag/v3.1.6)\n* [**3.0.13**](https://github.com/spring-projects/spring-boot/releases/tag/v3.0.13)\n* [**2.7.18**](https://github.com/spring-projects/spring-boot/releases/tag/v2.7.18)\n\nThe latest stable releases can be found [here](https://github.com/spring-projects/spring-boot/releases).\n\n## Workaround\nThe vendor notes the following:\n\u003e As a temporary workaround, Spring Boot users can choose to disable web metrics with the following property: `management.metrics.enable.http.server.requests=false`\n\n\n\n\n","text":"Spring Boot is vulnerable to denial-of-service (DoS). An unauthenticated user could trigger the vulnerability by providing specially crafted HTTP requests to a web metrics endpoint."},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","direct_dependency","patch_available"]},"defaultConfiguration":{"level":"warning"}},{"id":"missing_break:logic_error|javascript","shortDescription":{"text":"Omitted Break Statement in Switch"},"fullDescription":{"text":"Missing break statement between cases in switch statement"},"help":{"markdown":"\n## Description\nMissing break statement between cases in switch statement\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/issues?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026filter=issueType%3Alocalized-name%3DOmitted%20Break%20Statement%20in%20Switch%26context%3AtoolType%3Dsast)\n\n## Local Effect\n\nExecution falls through to the next case statement or default; this might indicate a common typo.\n\n\n## Remediation\nPotential mitigations include the following:\n  1. Omitting a break statement so that one may fall through is often indistinguishable from an error, and therefore should be avoided. If you need to use fall-through capabilities, make sure that you have clearly documented this within the switch statement, and ensure that you have examined all the logical possibilities.\n  2. The functionality of omitting a break statement could be clarified with an if statement. This method is much safer.\n\n## References\n* Common Weakness Enumeration: [CWE-484](https://cwe.mitre.org/data/definitions/484.html)\n\n","text":"Missing break statement between cases in switch statement"},"properties":{"security-severity":"6.8","tags":["security","static_analysis","external/cwe/cwe-484"]},"defaultConfiguration":{"level":"warning"}},{"id":"weak_password_hash:weak_salt|java","shortDescription":{"text":"Use of a One-Way Hash with a Predictable Salt"},"fullDescription":{"text":"Hashing a password without using a random and unique salt as part of the input."},"help":{"markdown":"\n## Description\nHashing a password without using a random and unique salt as part of the input.\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/issues?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026filter=issueType%3Alocalized-name%3DUse%20of%20a%20One-Way%20Hash%20with%20a%20Predictable%20Salt%26context%3AtoolType%3Dsast)\n\n## Local Effect\n\nAn attacker may recover individual passwords hashed this way with modest computational effort.\n\n\n## Remediation\nPotential mitigations include the following:\n  1. Use an adaptive hash function that can be configured to change the amount of computational effort needed to compute the hash, such as the number of iterations (\"stretching\") or the amount of memory required. Some hash functions perform salting automatically. These functions can significantly increase the overhead for a brute force attack compared to intentionally-fast functions such as MD5. For example, rainbow table attacks can become infeasible due to the high computing overhead. Finally, since computing power gets faster and cheaper over time, the technique can be reconfigured to increase the workload without forcing an entire replacement of the algorithm in use.\n\nSome hash functions that have one or more of these desired properties include bcrypt [REF-291], scrypt [REF-292], and PBKDF2 [REF-293]. While there is active debate about which of these is the most effective, they are all stronger than using salts with hash functions with very little computing overhead.\n\nNote that using these functions can have an impact on performance, so they require special consideration to avoid denial-of-service attacks. However, their configurability provides finer control over how much CPU and memory is used, so it could be adjusted to suit the environment's needs.\n\n  2. If a technique that requires extra computational effort can not be implemented, then for each password that is processed, generate a new random salt using a strong random number generator with unpredictable seeds. Add the salt to the plaintext password before hashing it. When storing the hash, also store the salt. Do not use the same salt for every password.\n\n## References\n* Common Weakness Enumeration: [CWE-760](https://cwe.mitre.org/data/definitions/760.html)\n\n","text":"Hashing a password without using a random and unique salt as part of the input."},"properties":{"security-severity":"3.8","tags":["security","static_analysis","external/cwe/cwe-760"]},"defaultConfiguration":{"level":"note"}},{"id":"sql_injection:sink|java","shortDescription":{"text":"SQL Injection"},"fullDescription":{"text":"Untrusted user-supplied data is inserted into a SQL statement without adequate validation, escaping, or filtering."},"help":{"markdown":"\n## Description\nUntrusted user-supplied data is inserted into a SQL statement without adequate validation, escaping, or filtering.\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/issues?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026filter=issueType%3Alocalized-name%3DSQL%20Injection%26context%3AtoolType%3Dsast)\n\n## Local Effect\n\nA user can change the intent of the SQL query, which may inappropriately disclose or corrupt data within the database.\n\n\n## Remediation\nRewrite all SQL queries constructed through dynamic concatenation to use an injection-safe query mechanism such as prepared statements with parameterized queries.\n\nMost modern programming languages provide a feature called \"parameterized queries\" that allow user-supplied data to be inserted safely as values in dynamic SQL queries. Rather than construct the dynamic SQL query by concatenating user-supplied data to static SQL query string fragments, data values are identified in the query by parameter markers or variables. Dynamic data is then passed through a mechanism provided by SQL that prevents the supplied data from changing the meaning of the query.\n\nNote: the exact syntax and use of prepared statements with parameterized queries vary from language to language.\n\n## References\n* Common Weakness Enumeration: [CWE-89](https://cwe.mitre.org/data/definitions/89.html)\n\n","text":"Untrusted user-supplied data is inserted into a SQL statement without adequate validation, escaping, or filtering."},"properties":{"security-severity":"8.9","tags":["security","static_analysis","external/cwe/cwe-89"]},"defaultConfiguration":{"level":"error"}},{"id":"sigma.least_privilege_violation:docker_compose|text","shortDescription":{"text":"Improper Access Control"},"fullDescription":{"text":"The Docker container is not configured to drop all default capabilities and then add only required one. Thus the container may be granted excessive privileges which violate the least privilege principle."},"help":{"markdown":"\n## Description\nThe Docker container is not configured to drop all default capabilities and then add only required one. Thus the container may be granted excessive privileges which violate the least privilege principle.\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/issues?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026filter=issueType%3Alocalized-name%3DImproper%20Access%20Control%26context%3AtoolType%3Dsast)\n\n\n\n## Remediation\nPotential mitigations include the following:\n  1. Very carefully manage the setting, management, and handling of privileges. Explicitly manage trust zones in the software.\n  2. Compartmentalize the system to have \"safe\" areas where trust boundaries can be unambiguously drawn. Do not allow sensitive data to go outside of the trust boundary and always be careful when interfacing with a compartment outside of the safe area.\n\nEnsure that appropriate compartmentalization is built into the system design, and the compartmentalization allows for and reinforces privilege separation functionality. Architects and designers should rely on the principle of least privilege to decide the appropriate time to use privileges and the time to drop privileges.\n\n## References\n* Common Weakness Enumeration: [CWE-284](https://cwe.mitre.org/data/definitions/284.html)\n\n","text":"The Docker container is not configured to drop all default capabilities and then add only required one. Thus the container may be granted excessive privileges which violate the least privilege principle."},"properties":{"security-severity":"3.8","tags":["security","static_analysis","external/cwe/cwe-284"]},"defaultConfiguration":{"level":"note"}},{"id":"no_effect|javascript","shortDescription":{"text":"Unreachable, Unused or Dead Code"},"fullDescription":{"text":"An expression is useless because it has no side effects and its result is ignored."},"help":{"markdown":"\n## Description\nAn expression is useless because it has no side effects and its result is ignored.\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/issues?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026filter=issueType%3Alocalized-name%3DUnreachable%252C%20Unused%20or%20Dead%20Code%26context%3AtoolType%3Dsast)\n\n## Local Effect\n\nPerhaps the code was intended to affect the behavior of the program, but it does not.\n\n\n## Remediation\nUnreachable and dead code should be analyzed and either removed or corrected depending on whether it is needed. If the code should execute but doesn't, any bugs preventing the code from executing must be fixed. If the code is not needed, and its removal will not have a negative impact on the application, it should be removed.\n\n## References\n* Common Weakness Enumeration: [CWE-398](https://cwe.mitre.org/data/definitions/398.html)\n\n","text":"An expression is useless because it has no side effects and its result is ignored."},"properties":{"security-severity":"6.8","tags":["security","static_analysis","external/cwe/cwe-398"]},"defaultConfiguration":{"level":"warning"}},{"id":"FB.DLS_DEAD_LOCAL_STORE|java","shortDescription":{"text":"Assignment to Variable without Use"},"fullDescription":{"text":"This instruction assigns a value to a local variable, but the value is not read or used in any subsequent instruction. (\u003ca href=\"/doc/en/spotbugs/sb_checker_ref.html#FB.DLS_DEAD_LOCAL_STORE\" target=\"_blank\"\u003eFrom SpotBugs description\u003c/a\u003e)"},"help":{"markdown":"\n## Description\nThis instruction assigns a value to a local variable, but the value is not read or used in any subsequent instruction. (\u003ca href=\"/doc/en/spotbugs/sb_checker_ref.html#FB.DLS_DEAD_LOCAL_STORE\" target=\"_blank\"\u003eFrom SpotBugs description\u003c/a\u003e)\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/issues?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026filter=issueType%3Alocalized-name%3DAssignment%20to%20Variable%20without%20Use%26context%3AtoolType%3Dsast)\n\n\n\n## Remediation\nPotential mitigations include the following:\n  1. Remove unused variables from the code.\n\n## References\n* Common Weakness Enumeration: [CWE-563](https://cwe.mitre.org/data/definitions/563.html)\n\n","text":"This instruction assigns a value to a local variable, but the value is not read or used in any subsequent instruction. (\u003ca href=\"/doc/en/spotbugs/sb_checker_ref.html#FB.DLS_DEAD_LOCAL_STORE\" target=\"_blank\"\u003eFrom SpotBugs description\u003c/a\u003e)"},"properties":{"security-severity":"3.8","tags":["security","static_analysis","external/cwe/cwe-563"]},"defaultConfiguration":{"level":"note"}},{"id":"sigma.jwt_untrusted_decode:io_jsonwebtoken|java","shortDescription":{"text":"Improper Verification of Cryptographic Signature"},"fullDescription":{"text":"The application uses the `io.jsonwebtoken.JwtParser` package's `parse()`, `parsePlaintextJwt()`, or `parseClaimsJwt()` method to parse a JWT without first verifying the token's signature, allowing an attacker to forge the token claims and perform attacks such as impersonating other users."},"help":{"markdown":"\n## Description\nThe application uses the `io.jsonwebtoken.JwtParser` package's `parse()`, `parsePlaintextJwt()`, or `parseClaimsJwt()` method to parse a JWT without first verifying the token's signature, allowing an attacker to forge the token claims and perform attacks such as impersonating other users.\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/issues?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026filter=issueType%3Alocalized-name%3DImproper%20Verification%20of%20Cryptographic%20Signature%26context%3AtoolType%3Dsast)\n\n\n\n## Remediation\nUnspecified remediation.\n\n## References\n* Common Weakness Enumeration: [CWE-347](https://cwe.mitre.org/data/definitions/347.html)\n\n","text":"The application uses the `io.jsonwebtoken.JwtParser` package's `parse()`, `parsePlaintextJwt()`, or `parseClaimsJwt()` method to parse a JWT without first verifying the token's signature, allowing an attacker to forge the token claims and perform attacks such as impersonating other users."},"properties":{"security-severity":"6.8","tags":["security","static_analysis","external/cwe/cwe-347"]},"defaultConfiguration":{"level":"warning"}},{"id":"sigma.container_privilege_escalation_allowed:docker_compose|text","shortDescription":{"text":"Improper Privilege Management"},"fullDescription":{"text":"The Docker Compose file sets the `no-new-privileges` attribute to `false` or omits it as the default value is `false`. This doesn't restrict the container from acquiring additional privileges via SUID or SGID bits. This allows privilege escalation, meaning a user can set the security context of the container and can perform root-level operations."},"help":{"markdown":"\n## Description\nThe Docker Compose file sets the `no-new-privileges` attribute to `false` or omits it as the default value is `false`. This doesn't restrict the container from acquiring additional privileges via SUID or SGID bits. This allows privilege escalation, meaning a user can set the security context of the container and can perform root-level operations.\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/issues?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026filter=issueType%3Alocalized-name%3DImproper%20Privilege%20Management%26context%3AtoolType%3Dsast)\n\n\n\n## Remediation\nPotential mitigations include the following:\n  1. Very carefully manage the setting, management, and handling of privileges. Explicitly manage trust zones in the software.\n  2. Follow the principle of least privilege when assigning access rights to entities in a software system.\n  3. Consider following the principle of separation of privilege. Require multiple conditions to be met before permitting access to a system resource.\n\n## References\n* Common Weakness Enumeration: [CWE-269](https://cwe.mitre.org/data/definitions/269.html)\n\n","text":"The Docker Compose file sets the `no-new-privileges` attribute to `false` or omits it as the default value is `false`. This doesn't restrict the container from acquiring additional privileges via SUID or SGID bits. This allows privilege escalation, meaning a user can set the security context of the container and can perform root-level operations."},"properties":{"security-severity":"3.8","tags":["security","static_analysis","external/cwe/cwe-269"]},"defaultConfiguration":{"level":"note"}},{"id":"url_manipulation:bad_web_uri|java","shortDescription":{"text":"Server-Side Request Forgery"},"fullDescription":{"text":"A user-controllable string is used to specify a URL that is used in a connection. An attacker can modify the URL scheme to access a local file. An attacker can also mount a phishing attack by modifying the URL value to point to a malicious website."},"help":{"markdown":"\n## Description\nA user-controllable string is used to specify a URL that is used in a connection. An attacker can modify the URL scheme to access a local file. An attacker can also mount a phishing attack by modifying the URL value to point to a malicious website.\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/issues?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026filter=issueType%3Alocalized-name%3DServer-Side%20Request%20Forgery%26context%3AtoolType%3Dsast)\n\n## Local Effect\n\nAn attacker may access unintended files or make the application access a malicious website.\n\n\n## Remediation\nThe use of server-side requests must be limited to specific scenarios required by the application, and servers must be hardened to only allow requests to legitimate targets. If possible, avoid use of input from client requests when constructing server-side requests. If data from client requests needs to be included when constructing the server-side request, the application must ensure that strict input validation is used, and that appropriate encoding is applied for the data context (e.g., blocking newline characters or encoding them appropriately to avoid HTTP Request header injection).\n\nThe risk of SSRF can be mitigated using a combination of input validation techniques and firewall rules:\n\n1. Limit service types and endpoints exposed via input validation on user input. For example, only allow URL schemes such as HTTP/HTTPS, if those are the expected schemes for the server-side request. Disallow all other URL schemes such as file://, dict://, gopher://, ftp://. Create an allow-list of trusted destinations (if this list is known) or a block-list preventing access to any internal resources (if access to arbitrary external servers is required). Validate that the input is in the expected format, and that the target IP resolved from a domain name is indeed allowed, e.g., if you want to block \"localhost\" and \"127.0.0.1\", you must also check that an attacker can't bypass this by using an external domain name that resolves to a forbidden internal or loopback IP such as \"127.0.0.1\". It's also important that the validation routine and the HTTP client making the server-side request parses the input in the same way, as any discrepancy between them might be abused by an attacker to bypass the validation routine.\n2. Limit service interactions on the network layer. Carefully analyze if the server requires interactions with external servers. \n\nBased on the intended use case, prevent unintended behavior in one of the following ways:\n\n* External service interactions required: If the server is to perform interactions with external services, the server must be hardened to safely eliminate requests to services available on the local loopback adapter and prevent any non-essential requests from the server to other internal systems.\n* External service interactions not required: If the server is to only interact with local services, configure outbound firewall rules to check any requests being made from the application. The rules must limit the web server's interaction with other hosts by routing traffic only to specified resources on the local network, i.e., web servers must not be allowed to make connections to any host not included in the allow-list.\n\n## References\n* Common Weakness Enumeration: [CWE-918](https://cwe.mitre.org/data/definitions/918.html)\n\n","text":"A user-controllable string is used to specify a URL that is used in a connection. An attacker can modify the URL scheme to access a local file. An attacker can also mount a phishing attack by modifying the URL value to point to a malicious website."},"properties":{"security-severity":"6.8","tags":["security","static_analysis","external/cwe/cwe-918"]},"defaultConfiguration":{"level":"warning"}},{"id":"unlocked_access:unlocked_write|java","shortDescription":{"text":"Missing Synchronization"},"fullDescription":{"text":"Attempt to write a shared variable without holding a lock."},"help":{"markdown":"\n## Description\nAttempt to write a shared variable without holding a lock.\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/issues?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026filter=issueType%3Alocalized-name%3DMissing%20Synchronization%26context%3AtoolType%3Dsast)\n\n## Local Effect\n\nMay result in data corruption.\n\n\n## Remediation\nUnspecified remediation.\n\n## References\n* Common Weakness Enumeration: [CWE-820](https://cwe.mitre.org/data/definitions/820.html)\n\n","text":"Attempt to write a shared variable without holding a lock."},"properties":{"security-severity":"8.9","tags":["security","static_analysis","external/cwe/cwe-820"]},"defaultConfiguration":{"level":"error"}},{"id":"FB.PI_DO_NOT_REUSE_PUBLIC_IDENTIFIERS_CLASS_NAMES|java","shortDescription":{"text":"PI: Do not reuse public identifiers from Java Standard Library"},"fullDescription":{"text":"It's essential to avoid reusing public identifiers from the Java Standard Library as class names. (\u003ca href=\"/doc/en/spotbugs/sb_checker_ref.html#FB.PI_DO_NOT_REUSE_PUBLIC_IDENTIFIERS_CLASS_NAMES\" target=\"_blank\"\u003eFrom SpotBugs description\u003c/a\u003e)"},"help":{"markdown":"\n## Description\nIt's essential to avoid reusing public identifiers from the Java Standard Library as class names. (\u003ca href=\"/doc/en/spotbugs/sb_checker_ref.html#FB.PI_DO_NOT_REUSE_PUBLIC_IDENTIFIERS_CLASS_NAMES\" target=\"_blank\"\u003eFrom SpotBugs description\u003c/a\u003e)\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/issues?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026filter=issueType%3Alocalized-name%3DPI:%20Do%20not%20reuse%20public%20identifiers%20from%20Java%20Standard%20Library%26context%3AtoolType%3Dsast)\n\n\n\n## Remediation\nUnspecified remediation.\n\n\n","text":"It's essential to avoid reusing public identifiers from the Java Standard Library as class names. (\u003ca href=\"/doc/en/spotbugs/sb_checker_ref.html#FB.PI_DO_NOT_REUSE_PUBLIC_IDENTIFIERS_CLASS_NAMES\" target=\"_blank\"\u003eFrom SpotBugs description\u003c/a\u003e)"},"properties":{"security-severity":"3.8","tags":["security","static_analysis"]},"defaultConfiguration":{"level":"note"}},{"id":"xss|java","shortDescription":{"text":"Cross-site Scripting"},"fullDescription":{"text":"Untrusted user-supplied data is inserted into a context that can execute JavaScript without adequate validation, escaping, or filtering."},"help":{"markdown":"\n## Description\nUntrusted user-supplied data is inserted into a context that can execute JavaScript without adequate validation, escaping, or filtering.\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/issues?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026filter=issueType%3Alocalized-name%3DCross-site%20Scripting%26context%3AtoolType%3Dsast)\n\n## Local Effect\n\nA user can execute arbitrary JavaScript on a web page viewed or accessed by another user, potentially allowing session hijacking, disclosing sensitive data in the DOM, or viewing of keyboard and mouse events.\n\n\n## Remediation\nPotential mitigations include the following:\n  1. Use a vetted library or framework that does not allow this weakness to occur or provides constructs that make this weakness easier to avoid.\n\nExamples of libraries and frameworks that make it easier to generate properly encoded output include Microsoft's Anti-XSS library, the OWASP ESAPI Encoding module, and Apache Wicket.\n\n  2. Understand the context in which your data will be used and the encoding that will be expected. This is especially important when transmitting data between different components, or when generating outputs that can contain multiple encodings at the same time, such as web pages or multi-part mail messages. Study all expected communication protocols and data representations to determine the required encoding strategies.\n\nFor any data that will be output to another web page, especially any data that was received from external inputs, use the appropriate encoding on all non-alphanumeric characters.\n\nParts of the same output document may require different encodings, which will vary depending on whether the output is in the:\n\n    * HTML body\n    * Element attributes (such as src=\"XYZ\")\n    * URIs\n    * JavaScript sections\n    * Cascading Style Sheets and style property\n\netc. Note that HTML Entity Encoding is only appropriate for the HTML body.\n\nConsult the XSS Prevention Cheat Sheet [REF-724] for more details on the types of encoding and escaping that are needed.\n\n  3. Understand all the potential areas where untrusted inputs can enter your software: parameters or arguments, cookies, anything read from the network, environment variables, reverse DNS lookups, query results, request headers, URL components, e-mail, files, filenames, databases, and any external systems that provide data to the application. Remember that such inputs may be obtained indirectly through API calls.\n  4. For any security checks that are performed on the client side, ensure that these checks are duplicated on the server side, in order to avoid CWE-602. Attackers can bypass the client-side checks by modifying values after the checks have been performed, or by changing the client to remove the client-side checks entirely. Then, these modified values would be submitted to the server.\n  5. If available, use structured mechanisms that automatically enforce the separation between data and code. These mechanisms may be able to provide the relevant quoting, encoding, and validation automatically, instead of relying on the developer to provide this capability at every point where output is generated.\n  6. Use and specify an output encoding that can be handled by the downstream component that is reading the output. Common encodings include ISO-8859-1, UTF-7, and UTF-8. When an encoding is not specified, a downstream component may choose a different encoding, either by assuming a default encoding or automatically inferring which encoding is being used, which can be erroneous. When the encodings are inconsistent, the downstream component might treat some character or byte sequences as special, even if they are not special in the original encoding. Attackers might then be able to exploit this discrepancy and conduct injection attacks; they even might be able to bypass protection mechanisms that assume the original encoding is also being used by the downstream component.\n\nThe problem of inconsistent output encodings often arises in web pages. If an encoding is not specified in an HTTP header, web browsers often guess about which encoding is being used. This can open up the browser to subtle XSS attacks.\n\n  7. With Struts, write all data from form beans with the bean's filter attribute set to true.\n  8. To help mitigate XSS attacks against the user's session cookie, set the session cookie to be HttpOnly. In browsers that support the HttpOnly feature (such as more recent versions of Internet Explorer and Firefox), this attribute can prevent the user's session cookie from being accessible to malicious client-side scripts that use document.cookie. This is not a complete solution, since HttpOnly is not supported by all browsers. More importantly, XMLHTTPRequest and other powerful browser technologies provide read access to HTTP headers, including the Set-Cookie header in which the HttpOnly flag is set.\n  9. Assume all input is malicious. Use an \"accept known good\" input validation strategy, i.e., use a list of acceptable inputs that strictly conform to specifications. Reject any input that does not strictly conform to specifications, or transform it into something that does.\n\nWhen performing input validation, consider all potentially relevant properties, including length, type of input, the full range of acceptable values, missing or extra inputs, syntax, consistency across related fields, and conformance to business rules. As an example of business rule logic, \"boat\" may be syntactically valid because it only contains alphanumeric characters, but it is not valid if the input is only expected to contain colors such as \"red\" or \"blue.\"\n\nDo not rely exclusively on looking for malicious or malformed inputs. This is likely to miss at least one undesirable input, especially if the code's environment changes. This can give attackers enough room to bypass the intended validation. However, denylists can be useful for detecting potential attacks or determining which inputs are so malformed that they should be rejected outright.\n\nWhen dynamically constructing web pages, use stringent allowlists that limit the character set based on the expected value of the parameter in the request. All input should be validated and cleansed, not just parameters that the user is supposed to specify, but all data in the request, including hidden fields, cookies, headers, the URL itself, and so forth. A common mistake that leads to continuing XSS vulnerabilities is to validate only fields that are expected to be redisplayed by the site. It is common to see data from the request that is reflected by the application server or the application that the development team did not anticipate. Also, a field that is not currently reflected may be used by a future developer. Therefore, validating ALL parts of the HTTP request is recommended.\n\nNote that proper output encoding, escaping, and quoting is the most effective solution for preventing XSS, although input validation may provide some defense-in-depth. This is because it effectively limits what will appear in output. Input validation will not always prevent XSS, especially if you are required to support free-form text fields that could contain arbitrary characters. For example, in a chat application, the heart emoticon (\"\u003c3\") would likely pass the validation step, since it is commonly used. However, it cannot be directly inserted into the web page because it contains the \"\u003c\" character, which would need to be escaped or otherwise handled. In this case, stripping the \"\u003c\" might reduce the risk of XSS, but it would produce incorrect behavior because the emoticon would not be recorded. This might seem to be a minor inconvenience, but it would be more important in a mathematical forum that wants to represent inequalities.\n\nEven if you make a mistake in your validation (such as forgetting one out of 100 input fields), appropriate encoding is still likely to protect you from injection-based attacks. As long as it is not done in isolation, input validation is still a useful technique, since it may significantly reduce your attack surface, allow you to detect some attacks, and provide other security benefits that proper encoding does not address.\n\nEnsure that you perform input validation at well-defined interfaces within the application. This will help protect the application even if a component is reused or moved elsewhere.\n\n  10. When the set of acceptable objects, such as filenames or URLs, is limited or known, create a mapping from a set of fixed input values (such as numeric IDs) to the actual filenames or URLs, and reject all other inputs.\n  11. Use an application firewall that can detect attacks against this weakness. It can be beneficial in cases in which the code cannot be fixed (because it is controlled by a third party), as an emergency prevention measure while more comprehensive software assurance measures are applied, or to provide defense in depth.\n  12. When using PHP, configure the application so that it does not use register_globals. During implementation, develop the application so that it does not rely on this feature, but be wary of implementing a register_globals emulation that is subject to weaknesses such as CWE-95, CWE-621, and similar issues.\n\n## References\n* Common Weakness Enumeration: [CWE-79](https://cwe.mitre.org/data/definitions/79.html)\n\n","text":"Untrusted user-supplied data is inserted into a context that can execute JavaScript without adequate validation, escaping, or filtering."},"properties":{"security-severity":"8.9","tags":["security","static_analysis","external/cwe/cwe-79"]},"defaultConfiguration":{"level":"error"}},{"id":"sigma.verbose_error_message:spring_boot_stacktrace_properties|text","shortDescription":{"text":"Generation of Error Message Containing Sensitive Information"},"fullDescription":{"text":"The Spring Boot main application server is configured to allow stack traces to be displayed in an error page. The stack traces might contain sensitive information and should not be displayed."},"help":{"markdown":"\n## Description\nThe Spring Boot main application server is configured to allow stack traces to be displayed in an error page. The stack traces might contain sensitive information and should not be displayed.\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/issues?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026filter=issueType%3Alocalized-name%3DGeneration%20of%20Error%20Message%20Containing%20Sensitive%20Information%26context%3AtoolType%3Dsast)\n\n\n\n## Remediation\nPotential mitigations include the following:\n  1. Ensure that error messages only contain minimal details that are useful to the intended audience and no one else. The messages need to strike the balance between being too cryptic (which can confuse users) or being too detailed (which may reveal more than intended). The messages should not reveal the methods that were used to determine the error. Attackers can use detailed information to refine or optimize their original attack, thereby increasing their chances of success.\n\nIf errors must be captured in some detail, record them in log messages, but consider what could occur if the log messages can be viewed by attackers. Highly sensitive information such as passwords should never be saved to log files.\n\nAvoid inconsistent messaging that might accidentally tip off an attacker about internal state, such as whether a user account exists or not.\n\n  2. Handle exceptions internally and do not display errors containing potentially sensitive information to a user.\n  3. Use naming conventions and strong types to make it easier to spot when sensitive data is being used. When creating structures, objects, or other complex entities, separate the sensitive and non-sensitive data as much as possible.\n  4. Debugging information should not make its way into a production release.\n  5. Debugging information should not make its way into a production release.\n  6. Where available, configure the environment to use less verbose error messages. For example, in PHP, disable the display_errors setting during configuration, or at runtime using the error_reporting() function.\n  7. Create default error pages or messages that do not leak any information.\n\n## References\n* Common Weakness Enumeration: [CWE-209](https://cwe.mitre.org/data/definitions/209.html)\n\n","text":"The Spring Boot main application server is configured to allow stack traces to be displayed in an error page. The stack traces might contain sensitive information and should not be displayed."},"properties":{"security-severity":"3.8","tags":["security","static_analysis","external/cwe/cwe-209"]},"defaultConfiguration":{"level":"note"}},{"id":"path_manipulation|java","shortDescription":{"text":"Directory Traversal"},"fullDescription":{"text":"A user-controllable string is used as part or all of a filesystem path, filename, or URI (uniform resource identifier)."},"help":{"markdown":"\n## Description\nA user-controllable string is used as part or all of a filesystem path, filename, or URI (uniform resource identifier).\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/issues?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026filter=issueType%3Alocalized-name%3DDirectory%20Traversal%26context%3AtoolType%3Dsast)\n\n## Local Effect\n\nAn attacker may access, modify, or corrupt files that contain sensitive information or are critical to the application.\n\n\n## Remediation\nTo protect against directory traversal the application should enforce strict access controls and validate user input used to create pathnames or create indirect object references for file access. The application should also configure access to the file system on a least privilege basis to reduce the potential impact of attacks.\n\nWhenever possible, the application must restrict the use of user-supplied file paths.  When such paths are required for the application to function properly, indirect object references should be used for file access instead of accepting paths from the user. For example, consider an application that allows its users to specify a file to download from a directory. Instead of using a user-supplied filename to access the file, the application should maintain a mapping from integer keys to file names, ensuring that the supplied value is both an integer and corresponds to an actual file. In the case that a value does not have a corresponding file, the application should return a generic error message. This will often provide a safer way of referencing files that exist in the application than trying to check user input for malicious path manipulation.\n\n## References\n* Common Weakness Enumeration: [CWE-22](https://cwe.mitre.org/data/definitions/22.html)\n\n","text":"A user-controllable string is used as part or all of a filesystem path, filename, or URI (uniform resource identifier)."},"properties":{"security-severity":"8.9","tags":["security","static_analysis","external/cwe/cwe-22"]},"defaultConfiguration":{"level":"error"}},{"id":"resource_leak|java","shortDescription":{"text":"Improper Resource Shutdown or Release"},"fullDescription":{"text":"Leak of a system resource"},"help":{"markdown":"\n## Description\nLeak of a system resource\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/issues?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026filter=issueType%3Alocalized-name%3DImproper%20Resource%20Shutdown%20or%20Release%26context%3AtoolType%3Dsast)\n\n## Local Effect\n\nThe system resource will not be reclaimed and reused, reducing the future availability of the resource.\n\n\n## Remediation\nThe application must shut down or close any opened resource (such as a database connection, file handle, or input/output stream) after it is finished using that resource. The implementation should account for all possible execution paths where use of a resource ceases, including when exceptions occur.\n\nWhere possible, it is recommended to use the dispose pattern provided by the language or framework in question, e.g., the \"using\" statement in C# or the \"try-with-resources\" statement in Java to ensure a disposable or closeable object is disposed or closed on all paths exiting a block, including exception cases. Otherwise, calling \"Dispose\" (C#) or \"close\" (Java) in a \"finally\" block is equally effective but more verbose and prone to mistakes.\n\n## References\n* Common Weakness Enumeration: [CWE-404](https://cwe.mitre.org/data/definitions/404.html)\n\n","text":"Leak of a system resource"},"properties":{"security-severity":"8.9","tags":["security","static_analysis","external/cwe/cwe-404"]},"defaultConfiguration":{"level":"error"}},{"id":"sensitive_data_leak:cleartext_in_gui|java","shortDescription":{"text":"Cleartext Storage of Sensitive Information in GUI"},"fullDescription":{"text":"Displaying sensitive data in the user interface."},"help":{"markdown":"\n## Description\nDisplaying sensitive data in the user interface.\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/issues?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026filter=issueType%3Alocalized-name%3DCleartext%20Storage%20of%20Sensitive%20Information%20in%20GUI%26context%3AtoolType%3Dsast)\n\n## Local Effect\n\nSensitive data within the GUI may be accidentally displayed to unauthorized individuals.\n\n\n## Remediation\nUnspecified remediation.\n\n## References\n* Common Weakness Enumeration: [CWE-317](https://cwe.mitre.org/data/definitions/317.html)\n\n","text":"Displaying sensitive data in the user interface."},"properties":{"security-severity":"8.9","tags":["security","static_analysis","external/cwe/cwe-317"]},"defaultConfiguration":{"level":"error"}},{"id":"FB.DM_DEFAULT_ENCODING|java","shortDescription":{"text":"Dm: Dubious method used"},"fullDescription":{"text":"Found a call to a method which will perform a byte to String (or String to byte) conversion, and will assume that the default platform encoding is suitable. (\u003ca href=\"/doc/en/spotbugs/sb_checker_ref.html#FB.DM_DEFAULT_ENCODING\" target=\"_blank\"\u003eFrom SpotBugs description\u003c/a\u003e)"},"help":{"markdown":"\n## Description\nFound a call to a method which will perform a byte to String (or String to byte) conversion, and will assume that the default platform encoding is suitable. (\u003ca href=\"/doc/en/spotbugs/sb_checker_ref.html#FB.DM_DEFAULT_ENCODING\" target=\"_blank\"\u003eFrom SpotBugs description\u003c/a\u003e)\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/issues?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026filter=issueType%3Alocalized-name%3DDm:%20Dubious%20method%20used%26context%3AtoolType%3Dsast)\n\n\n\n## Remediation\nUnspecified remediation.\n\n\n","text":"Found a call to a method which will perform a byte to String (or String to byte) conversion, and will assume that the default platform encoding is suitable. (\u003ca href=\"/doc/en/spotbugs/sb_checker_ref.html#FB.DM_DEFAULT_ENCODING\" target=\"_blank\"\u003eFrom SpotBugs description\u003c/a\u003e)"},"properties":{"security-severity":"3.8","tags":["security","static_analysis"]},"defaultConfiguration":{"level":"note"}},{"id":"sigma.unspecified_software_version:docker_compose|text","shortDescription":{"text":"Inclusion of Functionality from Untrusted Control Sphere"},"fullDescription":{"text":"The Docker Compose file does not explicitly set `image` attribute with a specific stable version. Pinning the version of the base image will make the container being built more predictable. Relying on the latest version may silently inherit newer packages, which in the best case may affect application reliability and in the worst case may introduce vulnerabilities."},"help":{"markdown":"\n## Description\nThe Docker Compose file does not explicitly set `image` attribute with a specific stable version. Pinning the version of the base image will make the container being built more predictable. Relying on the latest version may silently inherit newer packages, which in the best case may affect application reliability and in the worst case may introduce vulnerabilities.\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/issues?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026filter=issueType%3Alocalized-name%3DInclusion%20of%20Functionality%20from%20Untrusted%20Control%20Sphere%26context%3AtoolType%3Dsast)\n\n\n\n## Remediation\nPotential mitigations include the following:\n  1. Use a vetted library or framework that does not allow this weakness to occur or provides constructs that make this weakness easier to avoid.\n  2. When the set of acceptable objects, such as filenames or URLs, is limited or known, create a mapping from a set of fixed input values (such as numeric IDs) to the actual filenames or URLs, and reject all other inputs.\n\nFor example, ID 1 could map to \"inbox.txt\" and ID 2 could map to \"profile.txt\". Features such as the ESAPI AccessReferenceMap [REF-45] provide this capability.\n\n  3. For any security checks that are performed on the client side, ensure that these checks are duplicated on the server side, in order to avoid CWE-602. Attackers can bypass the client-side checks by modifying values after the checks have been performed, or by changing the client to remove the client-side checks entirely. Then, these modified values would be submitted to the server.\n  4. Run the code in a \"jail\" or similar sandbox environment that enforces strict boundaries between the process and the operating system. This may effectively restrict which files can be accessed in a particular directory or which commands can be executed by the software.\n\nOS-level examples include the Unix chroot jail, AppArmor, and SELinux. In general, managed code may provide some protection. For example, java.io.FilePermission in the Java SecurityManager allows the software to specify restrictions on file operations.\n\nThis may not be a feasible solution, and it only limits the impact to the operating system; the rest of the application may still be subject to compromise.\n\nBe careful to avoid CWE-243 and other weaknesses related to jails.\n\n  5. Run your code using the lowest privileges that are required to accomplish the necessary tasks [REF-76]. If possible, create isolated accounts with limited privileges that are only used for a single task. That way, a successful attack will not immediately give the attacker access to the rest of the software or its environment. For example, database applications rarely need to run as the database administrator, especially in day-to-day operations.\n  6. Assume all input is malicious. Use an \"accept known good\" input validation strategy, i.e., use a list of acceptable inputs that strictly conform to specifications. Reject any input that does not strictly conform to specifications, or transform it into something that does.\n\nWhen performing input validation, consider all potentially relevant properties, including length, type of input, the full range of acceptable values, missing or extra inputs, syntax, consistency across related fields, and conformance to business rules. As an example of business rule logic, \"boat\" may be syntactically valid because it only contains alphanumeric characters, but it is not valid if the input is only expected to contain colors such as \"red\" or \"blue.\"\n\nDo not rely exclusively on looking for malicious or malformed inputs. This is likely to miss at least one undesirable input, especially if the code's environment changes. This can give attackers enough room to bypass the intended validation. However, denylists can be useful for detecting potential attacks or determining which inputs are so malformed that they should be rejected outright.\n\nWhen validating filenames, use stringent allowlists that limit the character set to be used. If feasible, only allow a single \".\" character in the filename to avoid weaknesses such as CWE-23, and exclude directory separators such as \"/\" to avoid CWE-36. Use a list of allowable file extensions, which will help to avoid CWE-434.\n\nDo not rely exclusively on a filtering mechanism that removes potentially dangerous characters. This is equivalent to a denylist, which may be incomplete (CWE-184). For example, filtering \"/\" is insufficient protection if the filesystem also supports the use of \"\\\" as a directory separator. Another possible error could occur when the filtering is applied in a way that still produces dangerous data (CWE-182). For example, if \"../\" sequences are removed from the \".../...//\" string in a sequential fashion, two instances of \"../\" would be removed from the original string, but the remaining characters would still form the \"../\" string.\n\n  7. Store library, include, and utility files outside of the web document root, if possible. Otherwise, store them in a separate directory and use the web server's access control capabilities to prevent attackers from directly requesting them. One common practice is to define a fixed constant in each calling program, then check for the existence of the constant in the library/include file; if the constant does not exist, then the file was directly requested, and it can exit immediately.\n\nThis significantly reduces the chance of an attacker being able to bypass any protection mechanisms that are in the base program but not in the include files. It will also reduce the attack surface.\n\n  8. Understand all the potential areas where untrusted inputs can enter your software: parameters or arguments, cookies, anything read from the network, environment variables, reverse DNS lookups, query results, request headers, URL components, e-mail, files, filenames, databases, and any external systems that provide data to the application. Remember that such inputs may be obtained indirectly through API calls.\n\nMany file inclusion problems occur because the programmer assumed that certain inputs could not be modified, especially for cookies and URL components.\n\n  9. Use an application firewall that can detect attacks against this weakness. It can be beneficial in cases in which the code cannot be fixed (because it is controlled by a third party), as an emergency prevention measure while more comprehensive software assurance measures are applied, or to provide defense in depth.\n\n## References\n* Common Weakness Enumeration: [CWE-829](https://cwe.mitre.org/data/definitions/829.html)\n\n","text":"The Docker Compose file does not explicitly set `image` attribute with a specific stable version. Pinning the version of the base image will make the container being built more predictable. Relying on the latest version may silently inherit newer packages, which in the best case may affect application reliability and in the worst case may introduce vulnerabilities."},"properties":{"security-severity":"3.8","tags":["security","static_analysis","external/cwe/cwe-829"]},"defaultConfiguration":{"level":"note"}},{"id":"null_pointer_dereference_exception:return_value|javascript","shortDescription":{"text":"NULL Pointer Dereference"},"fullDescription":{"text":"Using the return value of a function that can return null or undefined without checking it for null or undefined."},"help":{"markdown":"\n## Description\nUsing the return value of a function that can return null or undefined without checking it for null or undefined.\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/issues?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026filter=issueType%3Alocalized-name%3DNULL%20Pointer%20Dereference%26context%3AtoolType%3Dsast)\n\n## Local Effect\n\nIf the function returns a null or undefined value, this code will cause an exception such as a TypeError.\n\n\n## Remediation\nPotential mitigations include the following:\n  1. If all pointers that could have been modified are sanity-checked previous to use, nearly all NULL pointer dereferences can be prevented.\n  2. The choice could be made to use a language that is not susceptible to these issues.\n  3. Check the results of all functions that return a value and verify that the value is non-null before acting upon it.\n  4. Identify all variables and data stores that receive information from external sources, and apply input validation to make sure that they are only initialized to expected values.\n  5. Explicitly initialize all your variables and other data stores, either during declaration or just before the first usage.\n  6. Use automated static analysis tools that target this type of weakness. Many modern techniques use data flow analysis to minimize the number of false positives. This is not a perfect solution, since 100% accuracy and coverage are not feasible.\n\n## References\n* Common Weakness Enumeration: [CWE-476](https://cwe.mitre.org/data/definitions/476.html)\n\n","text":"Using the return value of a function that can return null or undefined without checking it for null or undefined."},"properties":{"security-severity":"6.8","tags":["security","static_analysis","external/cwe/cwe-476"]},"defaultConfiguration":{"level":"warning"}},{"id":"resource_leak:exceptional_path|java","shortDescription":{"text":"Improper Resource Shutdown or Release"},"fullDescription":{"text":"Leak of a system resource on an exception path (probably error handling)"},"help":{"markdown":"\n## Description\nLeak of a system resource on an exception path (probably error handling)\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/issues?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026filter=issueType%3Alocalized-name%3DImproper%20Resource%20Shutdown%20or%20Release%26context%3AtoolType%3Dsast)\n\n## Local Effect\n\nThe system resource will not be reclaimed and reused, reducing the future availability of the resource.\n\n\n## Remediation\nThe application must shut down or close any opened resource (such as a database connection, file handle, or input/output stream) after it is finished using that resource. The implementation should account for all possible execution paths where use of a resource ceases, including when exceptions occur.\n\nWhere possible, it is recommended to use the dispose pattern provided by the language or framework in question, e.g., the \"using\" statement in C# or the \"try-with-resources\" statement in Java to ensure a disposable or closeable object is disposed or closed on all paths exiting a block, including exception cases. Otherwise, calling \"Dispose\" (C#) or \"close\" (Java) in a \"finally\" block is equally effective but more verbose and prone to mistakes.\n\n## References\n* Common Weakness Enumeration: [CWE-404](https://cwe.mitre.org/data/definitions/404.html)\n\n","text":"Leak of a system resource on an exception path (probably error handling)"},"properties":{"security-severity":"3.8","tags":["security","static_analysis","external/cwe/cwe-404"]},"defaultConfiguration":{"level":"note"}},{"id":"weak_password_hash:weak_hash_no_salt|java","shortDescription":{"text":"Unsalted Password Hashes"},"fullDescription":{"text":"Hashing a password using a scheme that is not computationally intensive, and without using any salt as part of the input."},"help":{"markdown":"\n## Description\nHashing a password using a scheme that is not computationally intensive, and without using any salt as part of the input.\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/issues?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026filter=issueType%3Alocalized-name%3DUnsalted%20Password%20Hashes%26context%3AtoolType%3Dsast)\n\n## Local Effect\n\nAn attacker may recover a large number of passwords hashed this way with modest computational effort.\n\n\n## Remediation\nFor defense-in-depth, passwords should be salted and hashed to prevent an attacker from gaining access to clear-text passwords in the event that the database table containing user passwords is compromised.\n\nThe first step toward securely storing passwords involves generating a secure random, fixed-length, at least 32 bits, token (or \"salt\") when the clear-text password is about to be stored in the database.\n\n```\nSALT = rand(32bits)\n```\n\nAdditionally, consider larger salt (64 bits) if you have a very large user base to avoid salt collisions.\n\nThe salt value and clear-text password should then be supplied as inputs to a cryptographically secure one-way key derivation function. A key derivation function derives one or more secret keys from a secret value such as a master key or other known information such as a password or passphrase using a pseudo-random function. Some examples include PBKDF#2, BALLOON, bcrypt, scrypt, and Argon2. Bcrypt and Argon2 have salts built-in to prevent rainbow table attacks. The key derivation function must use an approved one-way function such as Keyed Hash Message Authentication Code (HMAC), any approved hash function in NIST SP 800-107 Revision 1, SHA-3, CMAC, KMAC, or cSHAKE.\n\n```\nOUT = PBKDF2WithHmacSHA3-512(KEY, PW, SALT, WORK FACTOR) + \":\" + SALT;\n```\n\nImproved security from MAC is contingent upon the proper key management of the MAC key. MAC key must be protected like any other private key using established key management practices, including secure key generation and storage. Besides, multiple key versions need to be supported when rotating keys to account for the password hash change using a new key.\n\nAdditionally, developers must specify a cost or \"work factor\" to set the number of iterations of the adaptive hash function. This parameter's value changes depending on the chosen function but should be tuned to execute in 1/100th of a second (lower/higher depending on peak user load requirements) in the production environment. The work factor should also be tweaked every 1-2 years as computers get faster. Once the password is salted and hashed, the hash and plaintext salt can be stored in the database alongside the username.\n\nNote: once passwords are salted and hashed in the database, any functionality which involves user credentials needs to be modified to account for the change in how passwords are stored. When a user logs in, the application needs to take the supplied clear-text password and associated salt, then compute the hash using key derivation function and compare the resulting hash with the hash stored for that user. If the hashes match, the supplied password matches the one the user-submitted initially.\n\n## References\n* Common Weakness Enumeration: [CWE-759](https://cwe.mitre.org/data/definitions/759.html)\n\n","text":"Hashing a password using a scheme that is not computationally intensive, and without using any salt as part of the input."},"properties":{"security-severity":"8.9","tags":["security","static_analysis","external/cwe/cwe-759"]},"defaultConfiguration":{"level":"error"}},{"id":"sigma.container_requesting_net_raw:docker_compose|text","shortDescription":{"text":"Improper Privilege Management"},"fullDescription":{"text":"The Docker container requests the `NET_RAW` capability, either explicitly or by default, granting access to the host's network interfaces."},"help":{"markdown":"\n## Description\nThe Docker container requests the `NET_RAW` capability, either explicitly or by default, granting access to the host's network interfaces.\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/issues?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026filter=issueType%3Alocalized-name%3DImproper%20Privilege%20Management%26context%3AtoolType%3Dsast)\n\n\n\n## Remediation\nPotential mitigations include the following:\n  1. Very carefully manage the setting, management, and handling of privileges. Explicitly manage trust zones in the software.\n  2. Follow the principle of least privilege when assigning access rights to entities in a software system.\n  3. Consider following the principle of separation of privilege. Require multiple conditions to be met before permitting access to a system resource.\n\n## References\n* Common Weakness Enumeration: [CWE-269](https://cwe.mitre.org/data/definitions/269.html)\n\n","text":"The Docker container requests the `NET_RAW` capability, either explicitly or by default, granting access to the host's network interfaces."},"properties":{"security-severity":"8.9","tags":["security","static_analysis","external/cwe/cwe-269"]},"defaultConfiguration":{"level":"error"}},{"id":"csrf:database_update|java","shortDescription":{"text":"Cross-Site Request Forgery (CSRF)"},"fullDescription":{"text":"The web application controller modifies data or state and is unprotected from cross-site request forgery."},"help":{"markdown":"\n## Description\nThe web application controller modifies data or state and is unprotected from cross-site request forgery.\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/issues?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026filter=issueType%3Alocalized-name%3DCross-Site%20Request%20Forgery%20%28CSRF%29%26context%3AtoolType%3Dsast)\n\n## Local Effect\n\nControllers that execute actions or tasks may be accessed to perform activities without the user's knowledge or authorization. These attacks are difficult to distinguish from legitimate requests.\n\n\n## Remediation\nGenerate a sufficiently large, non-guessable random token value, and scope it to the current user's session. The CSRF token should not be accepted for any other user across the application.\n\nOne way to add a non-predictable parameter is to use a secure hash function, such as SHA-256, to hash the user's session ID. However, many application frameworks provide some built-in support to enable CSRF protection, and it is often recommended to leverage these first whenever available.\n\nA classic pattern for CSRF protection is to generate and store a token in the user's session, and then include the CSRF token in a hidden field within all forms. The server will validate the CSRF token (sometimes referred to as a \"form-authenticator\") to ensure that the request is legitimate for the current user. If the hidden field and server-side tokens match, the request can be processed; otherwise, the application issues an error indicating the request is invalid. Since an attacker can't access this token for other users, it will not be possible to generate a valid request for another user. Alternative patterns rely on matching a token within the request data against a cookie or custom HTTP header (e.g., \"X-XSRF-TOKEN\" in AngularJS).\n\nThe \"SameSite\" cookie attribute can be used to prevent a cookie from being included in requests initiated from another site, and therefore reduces the risk of a successful CSRF attack. This attribute supports three different values:\n\n* None - cookies for the site are always sent with requests. This is the default behavior in older browsers and provides no protection against CSRF. Note that cookies without the \"Secure\" attribute will be blocked from setting \"SameSite=None\" by browsers.\n* Lax - cookies for the site will normally not be sent on cross-site requests, but will be included for top-level navigation (e.g., when a user clicks on a link from a different site). This is the default behavior in recent versions of some modern browsers, such as Chrome and Edge, and provides limited protection against some CSRF attacks.\n* Strict -  cookies for the site will only be included with same-site requests, and never included with cross-site requests. This is the most secure setting of the three but may have some negative impact on user experience, e.g., cross-site navigation to a site where the user has already logged in will still appear to the user as if they were not authenticated. \n\nIt's worth noting that the definition of same-site is less restrictive than the definition of cross-origin, e.g., requests from other sub-domains are considered same-site although they are from a different origin. This means that even in browsers that fully support the \"SameSite\" cookie attribute, an attacker may still circumvent this protection if they can take over a subdomain or inject HTML or JavaScript into any subdomain of the same site. Therefore, relying on the \"SameSite\" attribute is not recommended as the sole defense against cross-site request forgery, it should instead be seen as a defense in depth mechanism that reduces the likelihood of CSRF.\n\n## References\n* Common Weakness Enumeration: [CWE-352](https://cwe.mitre.org/data/definitions/352.html)\n\n","text":"The web application controller modifies data or state and is unprotected from cross-site request forgery."},"properties":{"security-severity":"8.9","tags":["security","static_analysis","external/cwe/cwe-352"]},"defaultConfiguration":{"level":"error"}},{"id":"sigma.hardcoded_secret:pattern|java","shortDescription":{"text":"Use of Hard-coded Credentials"},"fullDescription":{"text":"A secret, such as a password, cryptographic key, or token is stored in plaintext directly in the source code, in an application's properties, or configuration file. Users with access to the secret may then use the secret to access resources that they otherwise would not have access to."},"help":{"markdown":"\n## Description\nA secret, such as a password, cryptographic key, or token is stored in plaintext directly in the source code, in an application's properties, or configuration file. Users with access to the secret may then use the secret to access resources that they otherwise would not have access to.\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/issues?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026filter=issueType%3Alocalized-name%3DUse%20of%20Hard-coded%20Credentials%26context%3AtoolType%3Dsast)\n\n\n\n## Remediation\nPotential mitigations include the following:\n  1. For outbound authentication: store passwords, keys, and other credentials outside of the code in a strongly-protected, encrypted configuration file or database that is protected from access by all outsiders, including other local users on the same system. Properly protect the key (CWE-320). If you cannot use encryption to protect the file, then make sure that the permissions are as restrictive as possible [REF-7].\n\nIn Windows environments, the Encrypted File System (EFS) may provide some protection.\n\n  2. For inbound authentication: Rather than hard-code a default username and password, key, or other authentication credentials for first time logins, utilize a \"first login\" mode that requires the user to enter a unique strong password or key.\n  3. If the software must contain hard-coded credentials or they cannot be removed, perform access control checks and limit which entities can access the feature that requires the hard-coded credentials. For example, a feature might only be enabled through the system console instead of through a network connection.\n  4. For inbound authentication using passwords: apply strong one-way hashes to passwords and store those hashes in a configuration file or database with appropriate access control. That way, theft of the file/database still requires the attacker to try to crack the password. When handling an incoming password during authentication, take the hash of the password and compare it to the saved hash.\n\nUse randomly assigned salts for each separate hash that is generated. This increases the amount of computation that an attacker needs to conduct a brute-force attack, possibly limiting the effectiveness of the rainbow table method.\n\n  5. For front-end to back-end connections: Three solutions are possible, although none are complete.\n\n    * The first suggestion involves the use of generated passwords or keys that are changed automatically and must be entered at given time intervals by a system administrator. These passwords will be held in memory and only be valid for the time intervals.\n    * Next, the passwords or keys should be limited at the back end to only performing actions valid for the front end, as opposed to having full access.\n    * Finally, the messages sent should be tagged and checksummed with time sensitive values so as to prevent replay-style attacks.\n\n## References\n* Common Weakness Enumeration: [CWE-798](https://cwe.mitre.org/data/definitions/798.html)\n\n","text":"A secret, such as a password, cryptographic key, or token is stored in plaintext directly in the source code, in an application's properties, or configuration file. Users with access to the secret may then use the secret to access resources that they otherwise would not have access to."},"properties":{"security-severity":"3.8","tags":["security","static_analysis","external/cwe/cwe-798"]},"defaultConfiguration":{"level":"note"}},{"id":"risky_crypto:hashing|java","shortDescription":{"text":"Weak Hash Function"},"fullDescription":{"text":"A risky hashing function was used. This may allow an attacker to produce collisions on the hash or execute length extension attacks."},"help":{"markdown":"\n## Description\nA risky hashing function was used. This may allow an attacker to produce collisions on the hash or execute length extension attacks.\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/issues?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026filter=issueType%3Alocalized-name%3DWeak%20Hash%20Function%26context%3AtoolType%3Dsast)\n\n## Local Effect\n\nA use of a weak hashing algorithm was detected. There exist well known ways to produce collisions on the hashes.\n\n\n## Remediation\nEnsure the use of cryptographically strong hashing algorithms such as the ones approved by NIST:\n\n* https://csrc.nist.gov/projects/hash-functions\n\n## References\n* Common Weakness Enumeration: [CWE-328](https://cwe.mitre.org/data/definitions/328.html)\n\n","text":"A risky hashing function was used. This may allow an attacker to produce collisions on the hash or execute length extension attacks."},"properties":{"security-severity":"6.8","tags":["security","static_analysis","external/cwe/cwe-328"]},"defaultConfiguration":{"level":"warning"}},{"id":"hibernate_equals_depends_on_primary_key|java","shortDescription":{"text":"Incomplete Comparison with Missing Factors"},"fullDescription":{"text":"The result of equals() depends on an entity's primary database key"},"help":{"markdown":"\n## Description\nThe result of equals() depends on an entity's primary database key\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/issues?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026filter=issueType%3Alocalized-name%3DIncomplete%20Comparison%20with%20Missing%20Factors%26context%3AtoolType%3Dsast)\n\n## Local Effect\n\nCollections and other objects which depend on equals() may not behave as expected.\n\n\n## Remediation\nPotential mitigations include the following:\n  1. Thoroughly test the comparison scheme before deploying code into production. Perform positive testing as well as negative testing.\n\n## References\n* Common Weakness Enumeration: [CWE-1023](https://cwe.mitre.org/data/definitions/1023.html)\n\n","text":"The result of equals() depends on an entity's primary database key"},"properties":{"security-severity":"6.8","tags":["security","static_analysis","external/cwe/cwe-1023"]},"defaultConfiguration":{"level":"warning"}},{"id":"FB.DMI_RANDOM_USED_ONLY_ONCE|java","shortDescription":{"text":"Expected Behavior Violation"},"fullDescription":{"text":"This code creates a java.util.Random object, uses it to generate one random number, and then discards the Random object. (\u003ca href=\"/doc/en/spotbugs/sb_checker_ref.html#FB.DMI_RANDOM_USED_ONLY_ONCE\" target=\"_blank\"\u003eFrom SpotBugs description\u003c/a\u003e)"},"help":{"markdown":"\n## Description\nThis code creates a java.util.Random object, uses it to generate one random number, and then discards the Random object. (\u003ca href=\"/doc/en/spotbugs/sb_checker_ref.html#FB.DMI_RANDOM_USED_ONLY_ONCE\" target=\"_blank\"\u003eFrom SpotBugs description\u003c/a\u003e)\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/issues?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026filter=issueType%3Alocalized-name%3DExpected%20Behavior%20Violation%26context%3AtoolType%3Dsast)\n\n\n\n## Remediation\nUnspecified remediation.\n\n## References\n* Common Weakness Enumeration: [CWE-440](https://cwe.mitre.org/data/definitions/440.html)\n\n","text":"This code creates a java.util.Random object, uses it to generate one random number, and then discards the Random object. (\u003ca href=\"/doc/en/spotbugs/sb_checker_ref.html#FB.DMI_RANDOM_USED_ONLY_ONCE\" target=\"_blank\"\u003eFrom SpotBugs description\u003c/a\u003e)"},"properties":{"security-severity":"3.8","tags":["security","static_analysis","external/cwe/cwe-440"]},"defaultConfiguration":{"level":"note"}},{"id":"FB.RV_RETURN_VALUE_IGNORED_BAD_PRACTICE|java","shortDescription":{"text":"Incorrect Check of Function Return Value"},"fullDescription":{"text":"This method returns a value that is not checked. (\u003ca href=\"/doc/en/spotbugs/sb_checker_ref.html#FB.RV_RETURN_VALUE_IGNORED_BAD_PRACTICE\" target=\"_blank\"\u003eFrom SpotBugs description\u003c/a\u003e)"},"help":{"markdown":"\n## Description\nThis method returns a value that is not checked. (\u003ca href=\"/doc/en/spotbugs/sb_checker_ref.html#FB.RV_RETURN_VALUE_IGNORED_BAD_PRACTICE\" target=\"_blank\"\u003eFrom SpotBugs description\u003c/a\u003e)\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/issues?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026filter=issueType%3Alocalized-name%3DIncorrect%20Check%20of%20Function%20Return%20Value%26context%3AtoolType%3Dsast)\n\n\n\n## Remediation\nPotential mitigations include the following:\n  1. Use a language or compiler that uses exceptions and requires the catching of those exceptions.\n  2. Properly check all functions which return a value.\n  3. When designing any function make sure you return a value or throw an exception in case of an error.\n\n## References\n* Common Weakness Enumeration: [CWE-253](https://cwe.mitre.org/data/definitions/253.html)\n\n","text":"This method returns a value that is not checked. (\u003ca href=\"/doc/en/spotbugs/sb_checker_ref.html#FB.RV_RETURN_VALUE_IGNORED_BAD_PRACTICE\" target=\"_blank\"\u003eFrom SpotBugs description\u003c/a\u003e)"},"properties":{"security-severity":"3.8","tags":["security","static_analysis","external/cwe/cwe-253"]},"defaultConfiguration":{"level":"note"}},{"id":"FB.SIC_INNER_SHOULD_BE_STATIC|java","shortDescription":{"text":"SIC: Inner class could be made static"},"fullDescription":{"text":"This class is an inner class, but does not use its embedded reference to the object which created it. (\u003ca href=\"/doc/en/spotbugs/sb_checker_ref.html#FB.SIC_INNER_SHOULD_BE_STATIC\" target=\"_blank\"\u003eFrom SpotBugs description\u003c/a\u003e)"},"help":{"markdown":"\n## Description\nThis class is an inner class, but does not use its embedded reference to the object which created it. (\u003ca href=\"/doc/en/spotbugs/sb_checker_ref.html#FB.SIC_INNER_SHOULD_BE_STATIC\" target=\"_blank\"\u003eFrom SpotBugs description\u003c/a\u003e)\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/issues?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026filter=issueType%3Alocalized-name%3DSIC:%20Inner%20class%20could%20be%20made%20static%26context%3AtoolType%3Dsast)\n\n\n\n## Remediation\nUnspecified remediation.\n\n\n","text":"This class is an inner class, but does not use its embedded reference to the object which created it. (\u003ca href=\"/doc/en/spotbugs/sb_checker_ref.html#FB.SIC_INNER_SHOULD_BE_STATIC\" target=\"_blank\"\u003eFrom SpotBugs description\u003c/a\u003e)"},"properties":{"security-severity":"3.8","tags":["security","static_analysis"]},"defaultConfiguration":{"level":"note"}},{"id":"FB.SQL_BAD_RESULTSET_ACCESS|java","shortDescription":{"text":"SQL: Potential SQL Problem"},"fullDescription":{"text":"A call to getXXX or updateXXX methods of a result set was made where the field index is 0. (\u003ca href=\"/doc/en/spotbugs/sb_checker_ref.html#FB.SQL_BAD_RESULTSET_ACCESS\" target=\"_blank\"\u003eFrom SpotBugs description\u003c/a\u003e)"},"help":{"markdown":"\n## Description\nA call to getXXX or updateXXX methods of a result set was made where the field index is 0. (\u003ca href=\"/doc/en/spotbugs/sb_checker_ref.html#FB.SQL_BAD_RESULTSET_ACCESS\" target=\"_blank\"\u003eFrom SpotBugs description\u003c/a\u003e)\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/issues?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026filter=issueType%3Alocalized-name%3DSQL:%20Potential%20SQL%20Problem%26context%3AtoolType%3Dsast)\n\n\n\n## Remediation\nUnspecified remediation.\n\n\n","text":"A call to getXXX or updateXXX methods of a result set was made where the field index is 0. (\u003ca href=\"/doc/en/spotbugs/sb_checker_ref.html#FB.SQL_BAD_RESULTSET_ACCESS\" target=\"_blank\"\u003eFrom SpotBugs description\u003c/a\u003e)"},"properties":{"security-severity":"6.8","tags":["security","static_analysis"]},"defaultConfiguration":{"level":"warning"}},{"id":"FB.REC_CATCH_EXCEPTION|java","shortDescription":{"text":"Declaration of Catch for Generic Exception"},"fullDescription":{"text":"This catch block for Exception also catches any RuntimeException, which could mask programming errors. (\u003ca href=\"/doc/en/spotbugs/sb_checker_ref.html#FB.REC_CATCH_EXCEPTION\" target=\"_blank\"\u003eFrom SpotBugs description\u003c/a\u003e)"},"help":{"markdown":"\n## Description\nThis catch block for Exception also catches any RuntimeException, which could mask programming errors. (\u003ca href=\"/doc/en/spotbugs/sb_checker_ref.html#FB.REC_CATCH_EXCEPTION\" target=\"_blank\"\u003eFrom SpotBugs description\u003c/a\u003e)\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/issues?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026filter=issueType%3Alocalized-name%3DDeclaration%20of%20Catch%20for%20Generic%20Exception%26context%3AtoolType%3Dsast)\n\n\n\n## Remediation\nUnspecified remediation.\n\n## References\n* Common Weakness Enumeration: [CWE-396](https://cwe.mitre.org/data/definitions/396.html)\n\n","text":"This catch block for Exception also catches any RuntimeException, which could mask programming errors. (\u003ca href=\"/doc/en/spotbugs/sb_checker_ref.html#FB.REC_CATCH_EXCEPTION\" target=\"_blank\"\u003eFrom SpotBugs description\u003c/a\u003e)"},"properties":{"security-severity":"3.8","tags":["security","static_analysis","external/cwe/cwe-396"]},"defaultConfiguration":{"level":"note"}},{"id":"insecure_random:insecure_random_used|java","shortDescription":{"text":"Pseudo-Random Number Generator Initialized with Insecure Seed"},"fullDescription":{"text":"Random value generated using a cryptographically insecure pseudo-random number generator, and used in a security-sensitive context"},"help":{"markdown":"\n## Description\nRandom value generated using a cryptographically insecure pseudo-random number generator, and used in a security-sensitive context\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/issues?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026filter=issueType%3Alocalized-name%3DPseudo-Random%20Number%20Generator%20Initialized%20with%20Insecure%20Seed%26context%3AtoolType%3Dsast)\n\n## Local Effect\n\nAn attacker may be able to predict the values generated by a cryptographically weak PRNG and gain access to sensitive information.\n\n\n## Remediation\nThe application should use a CSPRNG with an unpredictable seed to ensure that the random values needed by the application cannot be predicted by an attacker. Some standardized CSPRNGs are described in NIST SP 800-90A, and ANSI X8.82 Part 3. See NIST SP 800-90B for guidance on entropy sources for seed generation.\n\nIn addition, the following guidelines should be employed where appropriate when seeding a CSPRNG:\n\n* Avoid using /dev/random as a seed source on Solaris/Linux/MacOS systems. Reading from this source may cause availability issues, as /dev/random will block until sufficient system entropy is available. Instead, use /dev/urandom.\n* The application should always specify the exact PRNG algorithm to be used. Different environments may have different default PRNG implementations.\n* Periodically reseed the PRNG, as a large amount of output generated by a single seed may be used by an attacker to determine the seed.\n\n## References\n* Common Weakness Enumeration: [CWE-330](https://cwe.mitre.org/data/definitions/330.html)\n\n","text":"Random value generated using a cryptographically insecure pseudo-random number generator, and used in a security-sensitive context"},"properties":{"security-severity":"6.8","tags":["security","static_analysis","external/cwe/cwe-330"]},"defaultConfiguration":{"level":"warning"}},{"id":"FB.URF_UNREAD_FIELD|java","shortDescription":{"text":"UrF: Unread field"},"fullDescription":{"text":"This field is never read. (\u003ca href=\"/doc/en/spotbugs/sb_checker_ref.html#FB.URF_UNREAD_FIELD\" target=\"_blank\"\u003eFrom SpotBugs description\u003c/a\u003e)"},"help":{"markdown":"\n## Description\nThis field is never read. (\u003ca href=\"/doc/en/spotbugs/sb_checker_ref.html#FB.URF_UNREAD_FIELD\" target=\"_blank\"\u003eFrom SpotBugs description\u003c/a\u003e)\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/issues?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026filter=issueType%3Alocalized-name%3DUrF:%20Unread%20field%26context%3AtoolType%3Dsast)\n\n\n\n## Remediation\nUnspecified remediation.\n\n\n","text":"This field is never read. (\u003ca href=\"/doc/en/spotbugs/sb_checker_ref.html#FB.URF_UNREAD_FIELD\" target=\"_blank\"\u003eFrom SpotBugs description\u003c/a\u003e)"},"properties":{"security-severity":"3.8","tags":["security","static_analysis"]},"defaultConfiguration":{"level":"note"}},{"id":"deadcode:logical_contradiction|java","shortDescription":{"text":"Unreachable, Unused or Dead Code"},"fullDescription":{"text":"Code can never be reached because of a logical contradiction"},"help":{"markdown":"\n## Description\nCode can never be reached because of a logical contradiction\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/issues?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026filter=issueType%3Alocalized-name%3DUnreachable%252C%20Unused%20or%20Dead%20Code%26context%3AtoolType%3Dsast)\n\n## Local Effect\n\nThe indicated dead code may have performed some action; that action will never occur.\n\n\n## Remediation\nUnreachable and dead code should be analyzed and either removed or corrected depending on whether it is needed. If the code should execute but doesn't, any bugs preventing the code from executing must be fixed. If the code is not needed, and its removal will not have a negative impact on the application, it should be removed.\n\n## References\n* Common Weakness Enumeration: [CWE-561](https://cwe.mitre.org/data/definitions/561.html)\n\n","text":"Code can never be reached because of a logical contradiction"},"properties":{"security-severity":"6.8","tags":["security","static_analysis","external/cwe/cwe-561"]},"defaultConfiguration":{"level":"warning"}},{"id":"sigma.hardcoded_secret:pattern|html","shortDescription":{"text":"Use of Hard-coded Credentials"},"fullDescription":{"text":"A secret, such as a password, cryptographic key, or token is stored in plaintext directly in the source code, in an application's properties, or configuration file. Users with access to the secret may then use the secret to access resources that they otherwise would not have access to."},"help":{"markdown":"\n## Description\nA secret, such as a password, cryptographic key, or token is stored in plaintext directly in the source code, in an application's properties, or configuration file. Users with access to the secret may then use the secret to access resources that they otherwise would not have access to.\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/issues?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026filter=issueType%3Alocalized-name%3DUse%20of%20Hard-coded%20Credentials%26context%3AtoolType%3Dsast)\n\n\n\n## Remediation\nPotential mitigations include the following:\n  1. For outbound authentication: store passwords, keys, and other credentials outside of the code in a strongly-protected, encrypted configuration file or database that is protected from access by all outsiders, including other local users on the same system. Properly protect the key (CWE-320). If you cannot use encryption to protect the file, then make sure that the permissions are as restrictive as possible [REF-7].\n\nIn Windows environments, the Encrypted File System (EFS) may provide some protection.\n\n  2. For inbound authentication: Rather than hard-code a default username and password, key, or other authentication credentials for first time logins, utilize a \"first login\" mode that requires the user to enter a unique strong password or key.\n  3. If the software must contain hard-coded credentials or they cannot be removed, perform access control checks and limit which entities can access the feature that requires the hard-coded credentials. For example, a feature might only be enabled through the system console instead of through a network connection.\n  4. For inbound authentication using passwords: apply strong one-way hashes to passwords and store those hashes in a configuration file or database with appropriate access control. That way, theft of the file/database still requires the attacker to try to crack the password. When handling an incoming password during authentication, take the hash of the password and compare it to the saved hash.\n\nUse randomly assigned salts for each separate hash that is generated. This increases the amount of computation that an attacker needs to conduct a brute-force attack, possibly limiting the effectiveness of the rainbow table method.\n\n  5. For front-end to back-end connections: Three solutions are possible, although none are complete.\n\n    * The first suggestion involves the use of generated passwords or keys that are changed automatically and must be entered at given time intervals by a system administrator. These passwords will be held in memory and only be valid for the time intervals.\n    * Next, the passwords or keys should be limited at the back end to only performing actions valid for the front end, as opposed to having full access.\n    * Finally, the messages sent should be tagged and checksummed with time sensitive values so as to prevent replay-style attacks.\n\n## References\n* Common Weakness Enumeration: [CWE-798](https://cwe.mitre.org/data/definitions/798.html)\n\n","text":"A secret, such as a password, cryptographic key, or token is stored in plaintext directly in the source code, in an application's properties, or configuration file. Users with access to the secret may then use the secret to access resources that they otherwise would not have access to."},"properties":{"security-severity":"3.8","tags":["security","static_analysis","external/cwe/cwe-798"]},"defaultConfiguration":{"level":"note"}},{"id":"sensitive_data_leak:cleartext_in_database|java","shortDescription":{"text":"Cleartext Storage in a File or on Disk"},"fullDescription":{"text":"Storing unencrypted sensitive data to a database."},"help":{"markdown":"\n## Description\nStoring unencrypted sensitive data to a database.\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/issues?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026filter=issueType%3Alocalized-name%3DCleartext%20Storage%20in%20a%20File%20or%20on%20Disk%26context%3AtoolType%3Dsast)\n\n## Local Effect\n\nAn attacker with access to the database can read this sensitive data.\n\n\n## Remediation\nUnspecified remediation.\n\n## References\n* Common Weakness Enumeration: [CWE-313](https://cwe.mitre.org/data/definitions/313.html)\n\n","text":"Storing unencrypted sensitive data to a database."},"properties":{"security-severity":"6.8","tags":["security","static_analysis","external/cwe/cwe-313"]},"defaultConfiguration":{"level":"warning"}},{"id":"hardcoded_credentials:cryptographic_key|java","shortDescription":{"text":"Use of Hard-coded Cryptographic Key"},"fullDescription":{"text":"A cryptographic key is stored directly in the source code."},"help":{"markdown":"\n## Description\nA cryptographic key is stored directly in the source code.\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/issues?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026filter=issueType%3Alocalized-name%3DUse%20of%20Hard-coded%20Cryptographic%20Key%26context%3AtoolType%3Dsast)\n\n## Local Effect\n\nUsers with access to this source code can use this key to access encrypted production data.  Changing this key requires changing the code and re-deploying the application.\n\n\n## Remediation\nPotential mitigations include the following:\n  1. Prevention schemes mirror that of hard-coded password storage.\n\n## References\n* Common Weakness Enumeration: [CWE-321](https://cwe.mitre.org/data/definitions/321.html)\n\n","text":"A cryptographic key is stored directly in the source code."},"properties":{"security-severity":"6.8","tags":["security","static_analysis","external/cwe/cwe-321"]},"defaultConfiguration":{"level":"warning"}},{"id":"sigma.csrf_protection_disabled:spring_security_code|java","shortDescription":{"text":"Cross-Site Request Forgery (CSRF)"},"fullDescription":{"text":"The Spring Security CSRF protection is disabled. An attacker may trick a client into making an unintentional request to the web server which will be treated as an authentic request. It may result in unintended execution of sensitive functionality or in exposure of data if the CSRF protection is disabled."},"help":{"markdown":"\n## Description\nThe Spring Security CSRF protection is disabled. An attacker may trick a client into making an unintentional request to the web server which will be treated as an authentic request. It may result in unintended execution of sensitive functionality or in exposure of data if the CSRF protection is disabled.\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/issues?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026filter=issueType%3Alocalized-name%3DCross-Site%20Request%20Forgery%20%28CSRF%29%26context%3AtoolType%3Dsast)\n\n\n\n## Remediation\nGenerate a sufficiently large, non-guessable random token value, and scope it to the current user's session. The CSRF token should not be accepted for any other user across the application.\n\nOne way to add a non-predictable parameter is to use a secure hash function, such as SHA-256, to hash the user's session ID. However, many application frameworks provide some built-in support to enable CSRF protection, and it is often recommended to leverage these first whenever available.\n\nA classic pattern for CSRF protection is to generate and store a token in the user's session, and then include the CSRF token in a hidden field within all forms. The server will validate the CSRF token (sometimes referred to as a \"form-authenticator\") to ensure that the request is legitimate for the current user. If the hidden field and server-side tokens match, the request can be processed; otherwise, the application issues an error indicating the request is invalid. Since an attacker can't access this token for other users, it will not be possible to generate a valid request for another user. Alternative patterns rely on matching a token within the request data against a cookie or custom HTTP header (e.g., \"X-XSRF-TOKEN\" in AngularJS).\n\nThe \"SameSite\" cookie attribute can be used to prevent a cookie from being included in requests initiated from another site, and therefore reduces the risk of a successful CSRF attack. This attribute supports three different values:\n\n* None - cookies for the site are always sent with requests. This is the default behavior in older browsers and provides no protection against CSRF. Note that cookies without the \"Secure\" attribute will be blocked from setting \"SameSite=None\" by browsers.\n* Lax - cookies for the site will normally not be sent on cross-site requests, but will be included for top-level navigation (e.g., when a user clicks on a link from a different site). This is the default behavior in recent versions of some modern browsers, such as Chrome and Edge, and provides limited protection against some CSRF attacks.\n* Strict -  cookies for the site will only be included with same-site requests, and never included with cross-site requests. This is the most secure setting of the three but may have some negative impact on user experience, e.g., cross-site navigation to a site where the user has already logged in will still appear to the user as if they were not authenticated. \n\nIt's worth noting that the definition of same-site is less restrictive than the definition of cross-origin, e.g., requests from other sub-domains are considered same-site although they are from a different origin. This means that even in browsers that fully support the \"SameSite\" cookie attribute, an attacker may still circumvent this protection if they can take over a subdomain or inject HTML or JavaScript into any subdomain of the same site. Therefore, relying on the \"SameSite\" attribute is not recommended as the sole defense against cross-site request forgery, it should instead be seen as a defense in depth mechanism that reduces the likelihood of CSRF.\n\n## References\n* Common Weakness Enumeration: [CWE-352](https://cwe.mitre.org/data/definitions/352.html)\n\n","text":"The Spring Security CSRF protection is disabled. An attacker may trick a client into making an unintentional request to the web server which will be treated as an authentic request. It may result in unintended execution of sensitive functionality or in exposure of data if the CSRF protection is disabled."},"properties":{"security-severity":"3.8","tags":["security","static_analysis","external/cwe/cwe-352"]},"defaultConfiguration":{"level":"note"}},{"id":"trust_boundary_violation|java","shortDescription":{"text":"Trust Boundary Violation"},"fullDescription":{"text":"A user-controllable string is stored in a trusted data structure."},"help":{"markdown":"\n## Description\nA user-controllable string is stored in a trusted data structure.\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/issues?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026filter=issueType%3Alocalized-name%3DTrust%20Boundary%20Violation%26context%3AtoolType%3Dsast)\n\n## Local Effect\n\nThe tainted data can be mixed with trustworthy data and can be mistakenly used in an insecure manner.\n\n\n## Remediation\nThe application must always validate data crossing a trust boundary before use in application logic or storage in trusted data structures. Validation techniques based on lists of allowed characters or values should be favored first over other validation techniques since any character or string not explicitly specified as part of the known safe set of characters or values is rejected or removed by default. If a sufficient pattern of allowed input cannot be determined, validation based on forbidden input can be implemented to provide some protection by filtering out or rejecting inputs that contain specified characters.\n\nIn some cases, characters considered dangerous if handled by the application in specific ways may be part of an input's expected format. Separate security controls will need to be implemented in such cases to protect against specific attacks. Consider the following examples:\n\n* Application users may have a legitimate need to include characters that, in certain combinations, can be interpreted as HTML and JavaScript code by an end-user's browser. In this situation, these characters cannot be filtered; instead, the application must encode these characters for the appropriate output context.\n* The application may allow users to include single quotes in a name field, but single quotes may affect how SQL queries are executed if the input is concatenated to a static query string. In this case, correctly utilizing parameterized queries sufficiently protects against SQL injection attacks.\n\nIn addition to syntactic checks, data should also be checked for size and semantic correctness where possible.\n\n## References\n* Common Weakness Enumeration: [CWE-501](https://cwe.mitre.org/data/definitions/501.html)\n\n","text":"A user-controllable string is stored in a trusted data structure."},"properties":{"security-severity":"3.8","tags":["security","static_analysis","external/cwe/cwe-501"]},"defaultConfiguration":{"level":"note"}},{"id":"sigma.xml_external_entity_enabled:input_factory|java","shortDescription":{"text":"XML External Entity (XXE) Injection"},"fullDescription":{"text":"The application parses XML using the `javax.xml.stream.XMLInputFactory` class which has not been configured to prevent expansion of external entities during XML parsing by disabling the XML external entities and DTD features. External entity expansion may cause a server-side request forgery, denial of service, exposure of sensitive data or unwanted server requests."},"help":{"markdown":"\n## Description\nThe application parses XML using the `javax.xml.stream.XMLInputFactory` class which has not been configured to prevent expansion of external entities during XML parsing by disabling the XML external entities and DTD features. External entity expansion may cause a server-side request forgery, denial of service, exposure of sensitive data or unwanted server requests.\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/issues?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026filter=issueType%3Alocalized-name%3DXML%20External%20Entity%20%28XXE%29%20Injection%26context%3AtoolType%3Dsast)\n\n\n\n## Remediation\nDisable the use of DTDs in XML parsers where the document source crosses a trust boundary. Very few applications have a business requirement to accept DTDs in XML documents supplied by end-users or external systems.\n\nIf DTD support can't be disabled completely due to business requirements, configure your XML parser to disable resolution of external entities. In addition, set an XML entity expansion limit to prevent a denial of service attack from exponential entity expansions.\n\n## References\n* Common Weakness Enumeration: [CWE-611](https://cwe.mitre.org/data/definitions/611.html)\n\n","text":"The application parses XML using the `javax.xml.stream.XMLInputFactory` class which has not been configured to prevent expansion of external entities during XML parsing by disabling the XML external entities and DTD features. External entity expansion may cause a server-side request forgery, denial of service, exposure of sensitive data or unwanted server requests."},"properties":{"security-severity":"6.8","tags":["security","static_analysis","external/cwe/cwe-611"]},"defaultConfiguration":{"level":"warning"}},{"id":"sigma.excessive_session_lifetime:spring_boot_properties|text","shortDescription":{"text":"Insufficient Session Expiration"},"fullDescription":{"text":"The session is configured with an excessively long timeout value. Session-based attacks require an active session. Therefore, the longer a session persists, the more time an attacker has to hijack the session."},"help":{"markdown":"\n## Description\nThe session is configured with an excessively long timeout value. Session-based attacks require an active session. Therefore, the longer a session persists, the more time an attacker has to hijack the session.\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/issues?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026filter=issueType%3Alocalized-name%3DInsufficient%20Session%20Expiration%26context%3AtoolType%3Dsast)\n\n\n\n## Remediation\nPotential mitigations include the following:\n  1. Set sessions/credentials expiration date.\n\n## References\n* Common Weakness Enumeration: [CWE-613](https://cwe.mitre.org/data/definitions/613.html)\n\n","text":"The session is configured with an excessively long timeout value. Session-based attacks require an active session. Therefore, the longer a session persists, the more time an attacker has to hijack the session."},"properties":{"security-severity":"3.8","tags":["security","static_analysis","external/cwe/cwe-613"]},"defaultConfiguration":{"level":"note"}},{"id":"sigma.hardcoded_secret:pattern|javascript","shortDescription":{"text":"Use of Hard-coded Credentials"},"fullDescription":{"text":"A secret, such as a password, cryptographic key, or token is stored in plaintext directly in the source code, in an application's properties, or configuration file. Users with access to the secret may then use the secret to access resources that they otherwise would not have access to."},"help":{"markdown":"\n## Description\nA secret, such as a password, cryptographic key, or token is stored in plaintext directly in the source code, in an application's properties, or configuration file. Users with access to the secret may then use the secret to access resources that they otherwise would not have access to.\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/issues?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026filter=issueType%3Alocalized-name%3DUse%20of%20Hard-coded%20Credentials%26context%3AtoolType%3Dsast)\n\n\n\n## Remediation\nPotential mitigations include the following:\n  1. For outbound authentication: store passwords, keys, and other credentials outside of the code in a strongly-protected, encrypted configuration file or database that is protected from access by all outsiders, including other local users on the same system. Properly protect the key (CWE-320). If you cannot use encryption to protect the file, then make sure that the permissions are as restrictive as possible [REF-7].\n\nIn Windows environments, the Encrypted File System (EFS) may provide some protection.\n\n  2. For inbound authentication: Rather than hard-code a default username and password, key, or other authentication credentials for first time logins, utilize a \"first login\" mode that requires the user to enter a unique strong password or key.\n  3. If the software must contain hard-coded credentials or they cannot be removed, perform access control checks and limit which entities can access the feature that requires the hard-coded credentials. For example, a feature might only be enabled through the system console instead of through a network connection.\n  4. For inbound authentication using passwords: apply strong one-way hashes to passwords and store those hashes in a configuration file or database with appropriate access control. That way, theft of the file/database still requires the attacker to try to crack the password. When handling an incoming password during authentication, take the hash of the password and compare it to the saved hash.\n\nUse randomly assigned salts for each separate hash that is generated. This increases the amount of computation that an attacker needs to conduct a brute-force attack, possibly limiting the effectiveness of the rainbow table method.\n\n  5. For front-end to back-end connections: Three solutions are possible, although none are complete.\n\n    * The first suggestion involves the use of generated passwords or keys that are changed automatically and must be entered at given time intervals by a system administrator. These passwords will be held in memory and only be valid for the time intervals.\n    * Next, the passwords or keys should be limited at the back end to only performing actions valid for the front end, as opposed to having full access.\n    * Finally, the messages sent should be tagged and checksummed with time sensitive values so as to prevent replay-style attacks.\n\n## References\n* Common Weakness Enumeration: [CWE-798](https://cwe.mitre.org/data/definitions/798.html)\n\n","text":"A secret, such as a password, cryptographic key, or token is stored in plaintext directly in the source code, in an application's properties, or configuration file. Users with access to the secret may then use the secret to access resources that they otherwise would not have access to."},"properties":{"security-severity":"3.8","tags":["security","static_analysis","external/cwe/cwe-798"]},"defaultConfiguration":{"level":"note"}},{"id":"sigma.insufficient_asymmetric_key_size:core_java|java","shortDescription":{"text":"Inadequate Encryption Strength"},"fullDescription":{"text":"The application uses an asymmetric algorithm with insufficient key size, making the ciphertext data vulnerable to brute force attacks."},"help":{"markdown":"\n## Description\nThe application uses an asymmetric algorithm with insufficient key size, making the ciphertext data vulnerable to brute force attacks.\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/issues?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026filter=issueType%3Alocalized-name%3DInadequate%20Encryption%20Strength%26context%3AtoolType%3Dsast)\n\n\n\n## Remediation\nPotential mitigations include the following:\n  1. Use an encryption scheme that is currently considered to be strong by experts in the field.\n\n## References\n* Common Weakness Enumeration: [CWE-326](https://cwe.mitre.org/data/definitions/326.html)\n\n","text":"The application uses an asymmetric algorithm with insufficient key size, making the ciphertext data vulnerable to brute force attacks."},"properties":{"security-severity":"3.8","tags":["security","static_analysis","external/cwe/cwe-326"]},"defaultConfiguration":{"level":"note"}},{"id":"unsafe_deserialization|java","shortDescription":{"text":"Insecure Object Deserialization"},"fullDescription":{"text":"A user-controllable string is deserialized."},"help":{"markdown":"\n## Description\nA user-controllable string is deserialized.\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/issues?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026filter=issueType%3Alocalized-name%3DInsecure%20Object%20Deserialization%26context%3AtoolType%3Dsast)\n\n## Local Effect\n\nAn attacker can instantiate arbitrary classes, possibly resulting in a denial of service or potentially unintended code execution.\n\n\n## Remediation\nThe application should avoid using object deserialization for data shared outside a trusted system.\n\nThe following things should be taken into consideration for remediation of this issue:\n\n* Sensitive data should never be included without in serialized state that is sent to a client. If sensitive data is included in serialized state, it must be encrypted with a key that is only available to authorized entities for decrypting the sensitive data. \n* Serialized data must be protected from unauthorized modification, i.e., it should use some form of integrity protection such as a keyed MAC or being digitally signed.\n* Data entering via an untrusted source (e.g., client) should never be deserialized. If this is not possible, then the application must explicitly specify and enforce which classes that should be allowed to be deserialized. It is important to note that it is not sufficient to add validation checks within the class that the application expects to deserialize, as an attacker can create a serialized object of any class they choose, which would then bypass such validation. It is important to strictly control which classes are allowed to be deserialized.\n\nIf using Java, it is recommended to use a run-time \"agent\" such as notsoserial (https://github.com/kantega/notsoserial) to specify and control which classes that should be allowed to be deserialized. Furthermore, it is strongly recommended to use the latest hardened JDK and ensure all third-party libraries, such as Apache Commons Collections, are updated.\n\n## References\n* Common Weakness Enumeration: [CWE-502](https://cwe.mitre.org/data/definitions/502.html)\n\n","text":"A user-controllable string is deserialized."},"properties":{"security-severity":"8.9","tags":["security","static_analysis","external/cwe/cwe-502"]},"defaultConfiguration":{"level":"error"}},{"id":"deadcode:logical_contradiction|javascript","shortDescription":{"text":"Unreachable, Unused or Dead Code"},"fullDescription":{"text":"Code can never be reached because of a logical contradiction"},"help":{"markdown":"\n## Description\nCode can never be reached because of a logical contradiction\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/issues?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026filter=issueType%3Alocalized-name%3DUnreachable%252C%20Unused%20or%20Dead%20Code%26context%3AtoolType%3Dsast)\n\n## Local Effect\n\nThe indicated dead code may have performed some action; that action will never occur.\n\n\n## Remediation\nUnreachable and dead code should be analyzed and either removed or corrected depending on whether it is needed. If the code should execute but doesn't, any bugs preventing the code from executing must be fixed. If the code is not needed, and its removal will not have a negative impact on the application, it should be removed.\n\n## References\n* Common Weakness Enumeration: [CWE-561](https://cwe.mitre.org/data/definitions/561.html)\n\n","text":"Code can never be reached because of a logical contradiction"},"properties":{"security-severity":"6.8","tags":["security","static_analysis","external/cwe/cwe-561"]},"defaultConfiguration":{"level":"warning"}},{"id":"sigma.container_filesystem_write:docker_compose|text","shortDescription":{"text":"Files or Directories Accessible to External Parties"},"fullDescription":{"text":"The docker service container is configured to permit writing to the root filesystem. This makes some security attack vectors such as privilege escalation, denial-of-service or authorization bypass possible since the container instance's filesystem can be tampered with."},"help":{"markdown":"\n## Description\nThe docker service container is configured to permit writing to the root filesystem. This makes some security attack vectors such as privilege escalation, denial-of-service or authorization bypass possible since the container instance's filesystem can be tampered with.\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/issues?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026filter=issueType%3Alocalized-name%3DFiles%20or%20Directories%20Accessible%20to%20External%20Parties%26context%3AtoolType%3Dsast)\n\n\n\n## Remediation\nUnspecified remediation.\n\n## References\n* Common Weakness Enumeration: [CWE-552](https://cwe.mitre.org/data/definitions/552.html)\n\n","text":"The docker service container is configured to permit writing to the root filesystem. This makes some security attack vectors such as privilege escalation, denial-of-service or authorization bypass possible since the container instance's filesystem can be tampered with."},"properties":{"security-severity":"3.8","tags":["security","static_analysis","external/cwe/cwe-552"]},"defaultConfiguration":{"level":"note"}},{"id":"sigma.jwt_non_expiring_token:io_jsonwebtoken|java","shortDescription":{"text":"Insufficient Session Expiration"},"fullDescription":{"text":"The instance of `JwtBuilder` doesn't set the expiration time when generating the token. Ignoring the expiration time for a JSON web token means it is valid forever. Since the token never expires, an attacker has a longer window to brute-force or exploit the stolen the token."},"help":{"markdown":"\n## Description\nThe instance of `JwtBuilder` doesn't set the expiration time when generating the token. Ignoring the expiration time for a JSON web token means it is valid forever. Since the token never expires, an attacker has a longer window to brute-force or exploit the stolen the token.\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/issues?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026filter=issueType%3Alocalized-name%3DInsufficient%20Session%20Expiration%26context%3AtoolType%3Dsast)\n\n\n\n## Remediation\nPotential mitigations include the following:\n  1. Set sessions/credentials expiration date.\n\n## References\n* Common Weakness Enumeration: [CWE-613](https://cwe.mitre.org/data/definitions/613.html)\n\n","text":"The instance of `JwtBuilder` doesn't set the expiration time when generating the token. Ignoring the expiration time for a JSON web token means it is valid forever. Since the token never expires, an attacker has a longer window to brute-force or exploit the stolen the token."},"properties":{"security-severity":"6.8","tags":["security","static_analysis","external/cwe/cwe-613"]},"defaultConfiguration":{"level":"warning"}},{"id":"FB.RV_RETURN_VALUE_IGNORED_NO_SIDE_EFFECT|java","shortDescription":{"text":"Expected Behavior Violation"},"fullDescription":{"text":"This code calls a method and ignores the return value. (\u003ca href=\"/doc/en/spotbugs/sb_checker_ref.html#FB.RV_RETURN_VALUE_IGNORED_NO_SIDE_EFFECT\" target=\"_blank\"\u003eFrom SpotBugs description\u003c/a\u003e)"},"help":{"markdown":"\n## Description\nThis code calls a method and ignores the return value. (\u003ca href=\"/doc/en/spotbugs/sb_checker_ref.html#FB.RV_RETURN_VALUE_IGNORED_NO_SIDE_EFFECT\" target=\"_blank\"\u003eFrom SpotBugs description\u003c/a\u003e)\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/issues?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026filter=issueType%3Alocalized-name%3DExpected%20Behavior%20Violation%26context%3AtoolType%3Dsast)\n\n\n\n## Remediation\nUnspecified remediation.\n\n## References\n* Common Weakness Enumeration: [CWE-440](https://cwe.mitre.org/data/definitions/440.html)\n\n","text":"This code calls a method and ignores the return value. (\u003ca href=\"/doc/en/spotbugs/sb_checker_ref.html#FB.RV_RETURN_VALUE_IGNORED_NO_SIDE_EFFECT\" target=\"_blank\"\u003eFrom SpotBugs description\u003c/a\u003e)"},"properties":{"security-severity":"3.8","tags":["security","static_analysis","external/cwe/cwe-440"]},"defaultConfiguration":{"level":"note"}},{"id":"sigma.weak_password_hash:spring_security_code|java","shortDescription":{"text":"Weak Encoding for Password"},"fullDescription":{"text":"Spring Security framework uses weak hashing algorithm in the PasswordEncoder interface. Weak hashing algorithm does not adequately protect the password. In case of a data leak from a password storage, attackers will easily be able to obtain the original password values."},"help":{"markdown":"\n## Description\nSpring Security framework uses weak hashing algorithm in the PasswordEncoder interface. Weak hashing algorithm does not adequately protect the password. In case of a data leak from a password storage, attackers will easily be able to obtain the original password values.\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/issues?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026filter=issueType%3Alocalized-name%3DWeak%20Encoding%20for%20Password%26context%3AtoolType%3Dsast)\n\n\n\n## Remediation\nPotential mitigations include the following:\n  1. Passwords should be encrypted with keys that are at least 128 bits in length for adequate security.\n\n## References\n* Common Weakness Enumeration: [CWE-261](https://cwe.mitre.org/data/definitions/261.html)\n\n","text":"Spring Security framework uses weak hashing algorithm in the PasswordEncoder interface. Weak hashing algorithm does not adequately protect the password. In case of a data leak from a password storage, attackers will easily be able to obtain the original password values."},"properties":{"security-severity":"3.8","tags":["security","static_analysis","external/cwe/cwe-261"]},"defaultConfiguration":{"level":"note"}},{"id":"FB.SBSC_USE_STRINGBUFFER_CONCATENATION|java","shortDescription":{"text":"SBSC: String concatenation in loop using + operator"},"fullDescription":{"text":"The method seems to be building a String using concatenation in a loop. (\u003ca href=\"/doc/en/spotbugs/sb_checker_ref.html#FB.SBSC_USE_STRINGBUFFER_CONCATENATION\" target=\"_blank\"\u003eFrom SpotBugs description\u003c/a\u003e)"},"help":{"markdown":"\n## Description\nThe method seems to be building a String using concatenation in a loop. (\u003ca href=\"/doc/en/spotbugs/sb_checker_ref.html#FB.SBSC_USE_STRINGBUFFER_CONCATENATION\" target=\"_blank\"\u003eFrom SpotBugs description\u003c/a\u003e)\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/issues?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026filter=issueType%3Alocalized-name%3DSBSC:%20String%20concatenation%20in%20loop%20using%20+%20operator%26context%3AtoolType%3Dsast)\n\n\n\n## Remediation\nUnspecified remediation.\n\n\n","text":"The method seems to be building a String using concatenation in a loop. (\u003ca href=\"/doc/en/spotbugs/sb_checker_ref.html#FB.SBSC_USE_STRINGBUFFER_CONCATENATION\" target=\"_blank\"\u003eFrom SpotBugs description\u003c/a\u003e)"},"properties":{"security-severity":"3.8","tags":["security","static_analysis"]},"defaultConfiguration":{"level":"note"}},{"id":"sigma.weak_hash:core_java|java","shortDescription":{"text":"Insecure Encryption Algorithm in Use"},"fullDescription":{"text":"This application uses a weak algorithm to create a `MessageDigest`, which may lead to collision attacks."},"help":{"markdown":"\n## Description\nThis application uses a weak algorithm to create a `MessageDigest`, which may lead to collision attacks.\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/issues?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026filter=issueType%3Alocalized-name%3DInsecure%20Encryption%20Algorithm%20in%20Use%26context%3AtoolType%3Dsast)\n\n\n\n## Remediation\nUse a secure encryption algorithm with a key size and block length of 128 bits or greater. The Advanced Encryption Standard (AES) algorithms (AES-128, AES-192, and AES-256) are approved by NIST and is a good option.\n\n## References\n* Common Weakness Enumeration: [CWE-327](https://cwe.mitre.org/data/definitions/327.html)\n\n","text":"This application uses a weak algorithm to create a `MessageDigest`, which may lead to collision attacks."},"properties":{"security-severity":"3.8","tags":["security","static_analysis","external/cwe/cwe-327"]},"defaultConfiguration":{"level":"note"}},{"id":"sigma.missing_httponly_attribute:servlet|java","shortDescription":{"text":"HttpOnly Cookie Attribute Not Set"},"fullDescription":{"text":"The `HttpOnly` flag is not enabled for cookies.\nEnabling the `HttpOnly` flag prevents an attacker from stealing or modifying cookie data via cross-site scripting attacks executed against vulnerable client-side applications."},"help":{"markdown":"\n## Description\nThe `HttpOnly` flag is not enabled for cookies.\nEnabling the `HttpOnly` flag prevents an attacker from stealing or modifying cookie data via cross-site scripting attacks executed against vulnerable client-side applications.\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/issues?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026filter=issueType%3Alocalized-name%3DHttpOnly%20Cookie%20Attribute%20Not%20Set%26context%3AtoolType%3Dsast)\n\n\n\n## Remediation\nSet the \"HttpOnly\" attribute for all cookies that don't need to be accessible by client-side scripts. This can be done either programmatically when sending Set-Cookie headers in responses or through deployment descriptors provided by various frameworks. Note that in many newer frameworks, the HttpOnly attribute is set by default for sensitive cookies such as session cookies.\n\nIn some cases, there is a legitimate need to allow client-side scripts to read a cookie's value, such as when using the default CSRF protection mechanism in frameworks like Angular. In such cases, it is acceptable to not set the HttpOnly flag on certain cookies, as doing so would otherwise break the intended functionality.\n\n## References\n* Common Weakness Enumeration: [CWE-1004](https://cwe.mitre.org/data/definitions/1004.html)\n\n","text":"The `HttpOnly` flag is not enabled for cookies.\nEnabling the `HttpOnly` flag prevents an attacker from stealing or modifying cookie data via cross-site scripting attacks executed against vulnerable client-side applications."},"properties":{"security-severity":"3.8","tags":["security","static_analysis","external/cwe/cwe-1004"]},"defaultConfiguration":{"level":"note"}},{"id":"xml_external_entity:unrestricted_dtds|java","shortDescription":{"text":"Improper Control of Document Type Definition"},"fullDescription":{"text":"Passing tainted input data with possibly arbitrary DTDs to a weakly configured XML parser."},"help":{"markdown":"\n## Description\nPassing tainted input data with possibly arbitrary DTDs to a weakly configured XML parser.\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/issues?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026filter=issueType%3Alocalized-name%3DImproper%20Control%20of%20Document%20Type%20Definition%26context%3AtoolType%3Dsast)\n\n## Local Effect\n\nAn attacker-controlled DTD can be used to specify an external URL, making the impact of processing the DTD analogous to a server-side request forgery. Processing an arbitrary DTD may also result in parsing a large number of entities, causing denial of service.\n\n\n## Remediation\nUnspecified remediation.\n\n## References\n* Common Weakness Enumeration: [CWE-827](https://cwe.mitre.org/data/definitions/827.html)\n\n","text":"Passing tainted input data with possibly arbitrary DTDs to a weakly configured XML parser."},"properties":{"security-severity":"6.8","tags":["security","static_analysis","external/cwe/cwe-827"]},"defaultConfiguration":{"level":"warning"}},{"id":"useless_call|java","shortDescription":{"text":"Useless Call"},"fullDescription":{"text":"A function is called that is only useful for its return value, and this value is ignored."},"help":{"markdown":"\n## Description\nA function is called that is only useful for its return value, and this value is ignored.\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/issues?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026filter=issueType%3Alocalized-name%3DUseless%20Call%26context%3AtoolType%3Dsast)\n\n## Local Effect\n\nA function call that seems to have an intended effect has no actual effect on the logic of the program.\n\n\n## Remediation\nAudit the use of the return value such as for asserting or assignment.\n\n\n","text":"A function is called that is only useful for its return value, and this value is ignored."},"properties":{"security-severity":"6.8","tags":["security","static_analysis"]},"defaultConfiguration":{"level":"warning"}},{"id":"sigma.missing_tls:spring_boot_datasource_properties|text","shortDescription":{"text":"Cleartext Transmission of Sensitive Information"},"fullDescription":{"text":"The Spring Boot application's data source is configured to disable SSL by setting the `spring.datasource.url` attribute to a value without `useSSL=true`. Thus, sensitive data transmitted over an insecure communication channel could be read and modified by attackers."},"help":{"markdown":"\n## Description\nThe Spring Boot application's data source is configured to disable SSL by setting the `spring.datasource.url` attribute to a value without `useSSL=true`. Thus, sensitive data transmitted over an insecure communication channel could be read and modified by attackers.\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/issues?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026filter=issueType%3Alocalized-name%3DCleartext%20Transmission%20of%20Sensitive%20Information%26context%3AtoolType%3Dsast)\n\n\n\n## Remediation\nPotential mitigations include the following:\n  1. Encrypt the data with a reliable encryption scheme before transmitting.\n  2. When using web applications with SSL, use SSL for the entire session from login to logout, not just for the initial login page.\n  3. Use tools and techniques that require manual (human) analysis, such as penetration testing, threat modeling, and interactive tools that allow the tester to record and modify an active session. These may be more effective than strictly automated techniques. This is especially the case with weaknesses that are related to design and business rules.\n  4. Configure servers to use encrypted channels for communication, which may include SSL or other secure protocols.\n\n## References\n* Common Weakness Enumeration: [CWE-319](https://cwe.mitre.org/data/definitions/319.html)\n\n","text":"The Spring Boot application's data source is configured to disable SSL by setting the `spring.datasource.url` attribute to a value without `useSSL=true`. Thus, sensitive data transmitted over an insecure communication channel could be read and modified by attackers."},"properties":{"security-severity":"3.8","tags":["security","static_analysis","external/cwe/cwe-319"]},"defaultConfiguration":{"level":"note"}},{"id":"sigma.improper_use_of_add_command:dockerfile|text","shortDescription":{"text":"Use of Potentially Dangerous Function"},"fullDescription":{"text":"The Dockerfile uses the `ADD` command to add a local non-tar file or to fetch a remote file into the Docker container. The best use for the `ADD` command is to extract local tar files into Docker containers."},"help":{"markdown":"\n## Description\nThe Dockerfile uses the `ADD` command to add a local non-tar file or to fetch a remote file into the Docker container. The best use for the `ADD` command is to extract local tar files into Docker containers.\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/issues?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026filter=issueType%3Alocalized-name%3DUse%20of%20Potentially%20Dangerous%20Function%26context%3AtoolType%3Dsast)\n\n\n\n## Remediation\nPotential mitigations include the following:\n  1. Identify a list of prohibited API functions and prohibit developers from using these functions, providing safer alternatives. In some cases, automatic code analysis tools or the compiler can be instructed to spot use of prohibited functions, such as the \"banned.h\" include file from Microsoft's SDL. [REF-554] [REF-7]\n\n## References\n* Common Weakness Enumeration: [CWE-676](https://cwe.mitre.org/data/definitions/676.html)\n\n","text":"The Dockerfile uses the `ADD` command to add a local non-tar file or to fetch a remote file into the Docker container. The best use for the `ADD` command is to extract local tar files into Docker containers."},"properties":{"security-severity":"3.8","tags":["security","static_analysis","external/cwe/cwe-676"]},"defaultConfiguration":{"level":"note"}},{"id":"sigma.weak_auth_mechanism:docker_compose_postgres|text","shortDescription":{"text":"Use of Password System for Primary Authentication"},"fullDescription":{"text":"The `POSTGRES_HOST_AUTH_METHOD` property is set to a weak authentication mechanism (such as `md5`, `password`, or `ident`) or omitted as the default value is `md5` when the PostgreSQL image version is prior to 14, then the connection is vulnerable to password \"sniffing\" attacks or to be compromised."},"help":{"markdown":"\n## Description\nThe `POSTGRES_HOST_AUTH_METHOD` property is set to a weak authentication mechanism (such as `md5`, `password`, or `ident`) or omitted as the default value is `md5` when the PostgreSQL image version is prior to 14, then the connection is vulnerable to password \"sniffing\" attacks or to be compromised.\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/issues?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026filter=issueType%3Alocalized-name%3DUse%20of%20Password%20System%20for%20Primary%20Authentication%26context%3AtoolType%3Dsast)\n\n\n\n## Remediation\nPotential mitigations include the following:\n  1. In order to protect password systems from compromise, the following should be noted:\n\n    * Passwords should be stored safely to prevent insider attack and to ensure that -- if a system is compromised -- the passwords are not retrievable. Due to password reuse, this information may be useful in the compromise of other systems these users work with. In order to protect these passwords, they should be stored encrypted, in a non-reversible state, such that the original text password cannot be extracted from the stored value.\n    * Password aging should be strictly enforced to ensure that passwords do not remain unchanged for long periods of time. The longer a password remains in use, the higher the probability that it has been compromised. For this reason, passwords should require refreshing periodically, and users should be informed of the risk of passwords which remain in use for too long.\n    * Password strength should be enforced intelligently. Rather than restrict passwords to specific content, or specific length, users should be encouraged to use upper and lower case letters, numbers, and symbols in their passwords. The system should also ensure that no passwords are derived from dictionary words.\n\n  2. Use a zero-knowledge password protocol, such as SRP.\n  3. Ensure that passwords are stored safely and are not reversible.\n  4. Implement password aging functionality that requires passwords be changed after a certain point.\n  5. Use a mechanism for determining the strength of a password and notify the user of weak password use.\n  6. Inform the user of why password protections are in place, how they work to protect data integrity, and why it is important to heed their warnings.\n\n## References\n* Common Weakness Enumeration: [CWE-309](https://cwe.mitre.org/data/definitions/309.html)\n\n","text":"The `POSTGRES_HOST_AUTH_METHOD` property is set to a weak authentication mechanism (such as `md5`, `password`, or `ident`) or omitted as the default value is `md5` when the PostgreSQL image version is prior to 14, then the connection is vulnerable to password \"sniffing\" attacks or to be compromised."},"properties":{"security-severity":"3.8","tags":["security","static_analysis","external/cwe/cwe-309"]},"defaultConfiguration":{"level":"note"}},{"id":"xss:dom_xss|javascript","shortDescription":{"text":"DOM-Based Cross-Site Scripting"},"fullDescription":{"text":"Untrusted user-supplied data is inserted into a context that can execute JavaScript."},"help":{"markdown":"\n## Description\nUntrusted user-supplied data is inserted into a context that can execute JavaScript.\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/issues?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026filter=issueType%3Alocalized-name%3DDOM-Based%20Cross-Site%20Scripting%26context%3AtoolType%3Dsast)\n\n## Local Effect\n\nA user can execute arbitrary JavaScript on a web page viewed or accessed by another user, potentially allowing session hijacking, disclosing sensitive data in the DOM, or viewing of keyboard and mouse events.\n\n\n## Remediation\nUse the correct remediation approach depending on the data context. Like traditional XSS mitigations, DOM-based XSS is mitigated using output encoding and input validation. The output encoding technique should match the context where data is inserted, such as HTML, HTML attribute, URL parameter, etc. Keep in mind that some contexts, such as the \"href\" attribute value, cannot be mitigated with output encoding alone and, therefore, require input validation. As the injection of untrusted data happens in the browser, the mitigation must be done in the client-side code.\n\nDifferent mitigation techniques apply to different JavaScript execution contexts:\n\n* HTML context. Use the correct element property, such as \"textContent\", \"innerText\" or \"outerText\", so that the inserted data is automatically output-encoded by the browser. \n* HTML attributes. When the \"setAttribute()\" function is used with untrusted data in both the name of the attribute and its value, use exact match to limit the attribute names that a user can set. These should only be safe attributes that do not execute JavaScript, such as \"align\", \"alink\", \"alt\", \"value\" and not event handlers or URI-type attributes. When untrusted data is used to set the value of the attribute, make sure that the attribute is not an event handler or a source. In addition, use input validation for the attribute's values, where appropriate (for example, for numeric values, such as \"width\", \"height\").\n* URL context. Use the exact match approach or mapping. If the application must allow users to provide any URL, at the minimum, validate the schema of the URL to avoid XSS through redirects to \"javascript:\" and \"data:\" URLs. \n* JavaScript context. Redesign the application so untrusted data is not used to dynamically create or modify JavaScript code. If a redesign is not possible, use exact match or allow-lists to validate data instead, since JavaScript encoding will not mitigate an injection into a string that is dynamically evaluated by functions like \"eval()\", \"new Function()\", \"document.write()\", or an event handler. \n\nRemember that server-side validation will not protect the application from DOM-based XSS because in DOM-based injections the payload is evaluated on the client side and not on the server side.\n\nFor example, if untrusted data passed through the URL fragment must be added to the page, use the \"innerText\" property rather than \"innerHTML\". In this case, if the data contains any HTML tags, they will be automatically encoded by the browser.\n\n```\n\u003cp\u003e\u003cb id='err'\u003e\u003c/b\u003e\u003c/p\u003e\n\u003cinput type=hidden id=_csrf value=\"wS2sCg7DA0\" /\u003e\n\u003cscript\u003edocument.getElementById('err').innerText = window.location.hash.substring(1);\u003c/script\u003e\n```\n\n## References\n* Common Weakness Enumeration: [CWE-79](https://cwe.mitre.org/data/definitions/79.html)\n\n","text":"Untrusted user-supplied data is inserted into a context that can execute JavaScript."},"properties":{"security-severity":"8.9","tags":["security","static_analysis","external/cwe/cwe-79"]},"defaultConfiguration":{"level":"error"}},{"id":"null_pointer_dereference_exception:return_value|java","shortDescription":{"text":"NULL Pointer Dereference"},"fullDescription":{"text":"Return value of function which returns null is dereferenced without checking"},"help":{"markdown":"\n## Description\nReturn value of function which returns null is dereferenced without checking\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/issues?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026filter=issueType%3Alocalized-name%3DNULL%20Pointer%20Dereference%26context%3AtoolType%3Dsast)\n\n## Local Effect\n\nIf the function actually returns a null value, a NullPointerException will be thrown.\n\n\n## Remediation\nPotential mitigations include the following:\n  1. If all pointers that could have been modified are sanity-checked previous to use, nearly all NULL pointer dereferences can be prevented.\n  2. The choice could be made to use a language that is not susceptible to these issues.\n  3. Check the results of all functions that return a value and verify that the value is non-null before acting upon it.\n  4. Identify all variables and data stores that receive information from external sources, and apply input validation to make sure that they are only initialized to expected values.\n  5. Explicitly initialize all your variables and other data stores, either during declaration or just before the first usage.\n  6. Use automated static analysis tools that target this type of weakness. Many modern techniques use data flow analysis to minimize the number of false positives. This is not a perfect solution, since 100% accuracy and coverage are not feasible.\n\n## References\n* Common Weakness Enumeration: [CWE-476](https://cwe.mitre.org/data/definitions/476.html)\n\n","text":"Return value of function which returns null is dereferenced without checking"},"properties":{"security-severity":"6.8","tags":["security","static_analysis","external/cwe/cwe-476"]},"defaultConfiguration":{"level":"warning"}},{"id":"FB.DLS_DEAD_LOCAL_STORE_SHADOWS_FIELD|java","shortDescription":{"text":"Assignment to Variable without Use"},"fullDescription":{"text":"This instruction assigns a value to a local variable, but the value is not read or used in any subsequent instruction. (\u003ca href=\"/doc/en/spotbugs/sb_checker_ref.html#FB.DLS_DEAD_LOCAL_STORE_SHADOWS_FIELD\" target=\"_blank\"\u003eFrom SpotBugs description\u003c/a\u003e)"},"help":{"markdown":"\n## Description\nThis instruction assigns a value to a local variable, but the value is not read or used in any subsequent instruction. (\u003ca href=\"/doc/en/spotbugs/sb_checker_ref.html#FB.DLS_DEAD_LOCAL_STORE_SHADOWS_FIELD\" target=\"_blank\"\u003eFrom SpotBugs description\u003c/a\u003e)\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/issues?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026filter=issueType%3Alocalized-name%3DAssignment%20to%20Variable%20without%20Use%26context%3AtoolType%3Dsast)\n\n\n\n## Remediation\nPotential mitigations include the following:\n  1. Remove unused variables from the code.\n\n## References\n* Common Weakness Enumeration: [CWE-563](https://cwe.mitre.org/data/definitions/563.html)\n\n","text":"This instruction assigns a value to a local variable, but the value is not read or used in any subsequent instruction. (\u003ca href=\"/doc/en/spotbugs/sb_checker_ref.html#FB.DLS_DEAD_LOCAL_STORE_SHADOWS_FIELD\" target=\"_blank\"\u003eFrom SpotBugs description\u003c/a\u003e)"},"properties":{"security-severity":"3.8","tags":["security","static_analysis","external/cwe/cwe-563"]},"defaultConfiguration":{"level":"note"}},{"id":"hibernate_hashcode_depends_on_primary_key|java","shortDescription":{"text":"Unsafe Dependence On Database Key"},"fullDescription":{"text":"The result of hashCode() depends on an entity's primary database key"},"help":{"markdown":"\n## Description\nThe result of hashCode() depends on an entity's primary database key\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/issues?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026filter=issueType%3Alocalized-name%3DUnsafe%20Dependence%20On%20Database%20Key%26context%3AtoolType%3Dsast)\n\n## Local Effect\n\nCollections and other objects which depend on hashCode() may not behave as expected.\n\n\n## Remediation\n\n\n\n","text":"The result of hashCode() depends on an entity's primary database key"},"properties":{"security-severity":"6.8","tags":["security","static_analysis"]},"defaultConfiguration":{"level":"warning"}},{"id":"sigma.reverse_tabnabbing:html|html","shortDescription":{"text":"Insecure Link Target"},"fullDescription":{"text":"The application uses an anchor tag whose `target` attribute is set to `_blank`, but the `rel` attribute is not set with the `noopener` value. The page opened from that target link may have the access to the `location` object of the original page through `window.opener.location`. A malicious page associated with this link will be able to navigate the original page to an arbitrary site, such as a phishing site, and thus, execute a reverse tabnabbing attack.\nNote that most contemporary browsers add the `noopener` value to the `rel` automatically by default. Thus, only users with older versions of browsers are targets for this phishing attack."},"help":{"markdown":"\n## Description\nThe application uses an anchor tag whose `target` attribute is set to `_blank`, but the `rel` attribute is not set with the `noopener` value. The page opened from that target link may have the access to the `location` object of the original page through `window.opener.location`. A malicious page associated with this link will be able to navigate the original page to an arbitrary site, such as a phishing site, and thus, execute a reverse tabnabbing attack.\nNote that most contemporary browsers add the `noopener` value to the `rel` automatically by default. Thus, only users with older versions of browsers are targets for this phishing attack.\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/issues?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026filter=issueType%3Alocalized-name%3DInsecure%20Link%20Target%26context%3AtoolType%3Dsast)\n\n\n\n## Remediation\nTo prevent untrusted pages linked from the application from being able to manipulate the \"window.opener\" object, set the attribute rel=\"noopener noreferrer\" for each HTML link to external sites. In addition to preventing reverse tabnabbing attacks, it may also improve browser performance as the new page can be run in a separate process.\n\nWhen the rel attribute is set to \"noopener\", the \"window.opener\" object is \"null\" on the new page. Therefore, the attacker cannot manipulate the navigation of the original page.  Additionally, the \"noreferrer\" attribute tells the browser to not include referrer information when the new page is requested.\n\nFor links opened with JavaScript, add the values \"noopener\", \"noreferrer\" as the \"windowFeatures\" parameter in the \"window.open()\" function:\n```\nvar childWindow = window.open(url, name, \"noopener,noreferrer\");   \n```\nFor legacy browser support, you can also manually set the opener to \"null\":\n```\nchildWindow.opener = null;  \n```\n\n**Note**: The rel=\"noopener\" attribute setting is supported by most modern browsers such as Firefox, Chrome, Edge and Safari but is not supported by legacy browsers such as Internet Explorer. For the latest information on browser support, refer to https://caniuse.com/#search=rel.\n\n## References\n* Common Weakness Enumeration: [CWE-1022](https://cwe.mitre.org/data/definitions/1022.html)\n\n","text":"The application uses an anchor tag whose `target` attribute is set to `_blank`, but the `rel` attribute is not set with the `noopener` value. The page opened from that target link may have the access to the `location` object of the original page through `window.opener.location`. A malicious page associated with this link will be able to navigate the original page to an arbitrary site, such as a phishing site, and thus, execute a reverse tabnabbing attack.\nNote that most contemporary browsers add the `noopener` value to the `rel` automatically by default. Thus, only users with older versions of browsers are targets for this phishing attack."},"properties":{"security-severity":"3.8","tags":["security","static_analysis","external/cwe/cwe-1022"]},"defaultConfiguration":{"level":"note"}},{"id":"null_pointer_dereference_exception:constant_null|java","shortDescription":{"text":"Bad Use Of Null-like Value"},"fullDescription":{"text":"Dereference of an explicit null value"},"help":{"markdown":"\n## Description\nDereference of an explicit null value\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/issues?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026filter=issueType%3Alocalized-name%3DBad%20Use%20Of%20Null-like%20Value%26context%3AtoolType%3Dsast)\n\n## Local Effect\n\nA null pointer exception will occur.\n\n\n## Remediation\n\n\n## References\n* Common Weakness Enumeration: [CWE-476](https://cwe.mitre.org/data/definitions/476.html)\n\n","text":"Dereference of an explicit null value"},"properties":{"security-severity":"6.8","tags":["security","static_analysis","external/cwe/cwe-476"]},"defaultConfiguration":{"level":"warning"}},{"id":"weak_password_hash:weak_hash|java","shortDescription":{"text":"Passwords Stored Using Cryptographically Weak Hash"},"fullDescription":{"text":"Hashing a password using a scheme that is not computationally intensive."},"help":{"markdown":"\n## Description\nHashing a password using a scheme that is not computationally intensive.\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/issues?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026filter=issueType%3Alocalized-name%3DPasswords%20Stored%20Using%20Cryptographically%20Weak%20Hash%26context%3AtoolType%3Dsast)\n\n## Local Effect\n\nAn attacker may recover individual passwords hashed this way with modest computational effort.\n\n\n## Remediation\nFor defense-in-depth, passwords should be salted and hashed to prevent an attacker from gaining access to clear-text passwords in the event that the database table containing user passwords is compromised.\n\nThe first step toward securely storing passwords involves generating a secure random, fixed-length, at least 32 bits, token (or \"salt\") when the clear-text password is about to be stored in the database.\n\n```\nSALT = rand(32bits)\n```\n\nAdditionally, consider larger salt (64 bits) if you have a very large user base to avoid salt collisions.\n\nThe salt value and clear-text password should then be supplied as inputs to a cryptographically secure one-way key derivation function. A key derivation function derives one or more secret keys from a secret value such as a master key or other known information such as a password or passphrase using a pseudo-random function. Some examples include PBKDF#2, BALLOON, bcrypt, scrypt, and Argon2. Bcrypt and Argon2 have salts built-in to prevent rainbow table attacks. The key derivation function must use an approved one-way function such as Keyed Hash Message Authentication Code (HMAC), any approved hash function in NIST SP 800-107 Revision 1, SHA-3, CMAC, KMAC, or cSHAKE.\n\n```\nOUT = PBKDF2WithHmacSHA3-512(KEY, PW, SALT, WORK FACTOR) + \":\" + SALT;\n```\n\nImproved security from MAC is contingent upon the proper key management of the MAC key. MAC key must be protected like any other private key using established key management practices, including secure key generation and storage. Besides, multiple key versions need to be supported when rotating keys to account for the password hash change using a new key.\n\nAdditionally, developers must specify a cost or \"work factor\" to set the number of iterations of the adaptive hash function. This parameter's value changes depending on the chosen function but should be tuned to execute in 1/100th of a second (lower/higher depending on peak user load requirements) in the production environment. The work factor should also be tweaked every 1-2 years as computers get faster. Once the password is salted and hashed, the hash and plaintext salt can be stored in the database alongside the username.\n\nNote: once passwords are salted and hashed in the database, any functionality which involves user credentials needs to be modified to account for the change in how passwords are stored. When a user logs in, the application needs to take the supplied clear-text password and associated salt, then compute the hash using key derivation function and compare the resulting hash with the hash stored for that user. If the hashes match, the supplied password matches the one the user-submitted initially.\n\n## References\n* Common Weakness Enumeration: [CWE-916](https://cwe.mitre.org/data/definitions/916.html)\n\n","text":"Hashing a password using a scheme that is not computationally intensive."},"properties":{"security-severity":"6.8","tags":["security","static_analysis","external/cwe/cwe-916"]},"defaultConfiguration":{"level":"warning"}},{"id":"null_pointer_dereference_exception:check_then_dereference|java","shortDescription":{"text":"Bad Use Of Null-like Value"},"fullDescription":{"text":"Reference is checked against null but then dereferenced anyway"},"help":{"markdown":"\n## Description\nReference is checked against null but then dereferenced anyway\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/issues?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026filter=issueType%3Alocalized-name%3DBad%20Use%20Of%20Null-like%20Value%26context%3AtoolType%3Dsast)\n\n## Local Effect\n\nEither the check against null is unnecessary, or there may be a null pointer exception.\n\n\n## Remediation\n\n\n## References\n* Common Weakness Enumeration: [CWE-476](https://cwe.mitre.org/data/definitions/476.html)\n\n","text":"Reference is checked against null but then dereferenced anyway"},"properties":{"security-severity":"6.8","tags":["security","static_analysis","external/cwe/cwe-476"]},"defaultConfiguration":{"level":"warning"}},{"id":"FB.CT_CONSTRUCTOR_THROW|java","shortDescription":{"text":"CT: Constructor throws"},"fullDescription":{"text":"Classes that throw exceptions in their constructors are vulnerable to Finalizer attacks (\u003ca href=\"/doc/en/spotbugs/sb_checker_ref.html#FB.CT_CONSTRUCTOR_THROW\" target=\"_blank\"\u003eFrom SpotBugs description\u003c/a\u003e)"},"help":{"markdown":"\n## Description\nClasses that throw exceptions in their constructors are vulnerable to Finalizer attacks (\u003ca href=\"/doc/en/spotbugs/sb_checker_ref.html#FB.CT_CONSTRUCTOR_THROW\" target=\"_blank\"\u003eFrom SpotBugs description\u003c/a\u003e)\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/issues?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026filter=issueType%3Alocalized-name%3DCT:%20Constructor%20throws%26context%3AtoolType%3Dsast)\n\n\n\n## Remediation\nUnspecified remediation.\n\n\n","text":"Classes that throw exceptions in their constructors are vulnerable to Finalizer attacks (\u003ca href=\"/doc/en/spotbugs/sb_checker_ref.html#FB.CT_CONSTRUCTOR_THROW\" target=\"_blank\"\u003eFrom SpotBugs description\u003c/a\u003e)"},"properties":{"security-severity":"3.8","tags":["security","static_analysis"]},"defaultConfiguration":{"level":"note"}},{"id":"FB.VA_FORMAT_STRING_USES_NEWLINE|java","shortDescription":{"text":"FS: Format string problem"},"fullDescription":{"text":"This format string includes a newline character (\\n). (\u003ca href=\"/doc/en/spotbugs/sb_checker_ref.html#FB.VA_FORMAT_STRING_USES_NEWLINE\" target=\"_blank\"\u003eFrom SpotBugs description\u003c/a\u003e)"},"help":{"markdown":"\n## Description\nThis format string includes a newline character (\\n). (\u003ca href=\"/doc/en/spotbugs/sb_checker_ref.html#FB.VA_FORMAT_STRING_USES_NEWLINE\" target=\"_blank\"\u003eFrom SpotBugs description\u003c/a\u003e)\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/issues?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026filter=issueType%3Alocalized-name%3DFS:%20Format%20string%20problem%26context%3AtoolType%3Dsast)\n\n\n\n## Remediation\nUnspecified remediation.\n\n\n","text":"This format string includes a newline character (\\n). (\u003ca href=\"/doc/en/spotbugs/sb_checker_ref.html#FB.VA_FORMAT_STRING_USES_NEWLINE\" target=\"_blank\"\u003eFrom SpotBugs description\u003c/a\u003e)"},"properties":{"security-severity":"3.8","tags":["security","static_analysis"]},"defaultConfiguration":{"level":"note"}},{"id":"sigma.container_missing_cpu_limit:kubernetes|text","shortDescription":{"text":"Uncontrolled Resource Consumption"},"fullDescription":{"text":"The Kubernetes container does not have a set CPU limit, allowing it to exhaust all CPU resources or cause excessive cloud usage bills."},"help":{"markdown":"\n## Description\nThe Kubernetes container does not have a set CPU limit, allowing it to exhaust all CPU resources or cause excessive cloud usage bills.\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/issues?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026filter=issueType%3Alocalized-name%3DUncontrolled%20Resource%20Consumption%26context%3AtoolType%3Dsast)\n\n\n\n## Remediation\nPotential mitigations include the following:\n  1. Design throttling mechanisms into the system architecture. The best protection is to limit the amount of resources that an unauthorized user can cause to be expended. A strong authentication and access control model will help prevent such attacks from occurring in the first place. The login application should be protected against DoS attacks as much as possible. Limiting the database access, perhaps by caching result sets, can help minimize the resources expended. To further limit the potential for a DoS attack, consider tracking the rate of requests received from users and blocking requests that exceed a defined rate threshold.\n  2. Mitigation of resource exhaustion attacks requires that the target system either:\n\n    * recognizes the attack and denies that user further access for a given amount of time, or\n    * uniformly throttles all requests in order to make it more difficult to consume resources more quickly than they can again be freed.\n\nThe first of these solutions is an issue in itself though, since it may allow attackers to prevent the use of the system by a particular valid user. If the attacker impersonates the valid user, they may be able to prevent the user from accessing the server in question.\n\nThe second solution is simply difficult to effectively institute -- and even when properly done, it does not provide a full solution. It simply makes the attack require more resources on the part of the attacker.\n\n  3. Ensure that protocols have specific limits of scale placed on them.\n  4. Ensure that all failures in resource allocation place the system into a safe posture.\n\n## References\n* Common Weakness Enumeration: [CWE-400](https://cwe.mitre.org/data/definitions/400.html)\n\n","text":"The Kubernetes container does not have a set CPU limit, allowing it to exhaust all CPU resources or cause excessive cloud usage bills."},"properties":{"security-severity":"3.8","tags":["security","static_analysis","external/cwe/cwe-400"]},"defaultConfiguration":{"level":"note"}},{"id":"FB.UC_USELESS_OBJECT|java","shortDescription":{"text":"UC: Useless code"},"fullDescription":{"text":"Our analysis shows that this object is useless. (\u003ca href=\"/doc/en/spotbugs/sb_checker_ref.html#FB.UC_USELESS_OBJECT\" target=\"_blank\"\u003eFrom SpotBugs description\u003c/a\u003e)"},"help":{"markdown":"\n## Description\nOur analysis shows that this object is useless. (\u003ca href=\"/doc/en/spotbugs/sb_checker_ref.html#FB.UC_USELESS_OBJECT\" target=\"_blank\"\u003eFrom SpotBugs description\u003c/a\u003e)\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/issues?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026filter=issueType%3Alocalized-name%3DUC:%20Useless%20code%26context%3AtoolType%3Dsast)\n\n\n\n## Remediation\nUnspecified remediation.\n\n\n","text":"Our analysis shows that this object is useless. (\u003ca href=\"/doc/en/spotbugs/sb_checker_ref.html#FB.UC_USELESS_OBJECT\" target=\"_blank\"\u003eFrom SpotBugs description\u003c/a\u003e)"},"properties":{"security-severity":"3.8","tags":["security","static_analysis"]},"defaultConfiguration":{"level":"note"}},{"id":"unrestricted_cross_origin_message_target_event|javascript","shortDescription":{"text":"Insecure Target for \"Window.postMessage()\""},"fullDescription":{"text":"Sending a cross-origin message without restricting the origin that can receive it."},"help":{"markdown":"\n## Description\nSending a cross-origin message without restricting the origin that can receive it.\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/issues?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026filter=issueType%3Alocalized-name%3DInsecure%20Target%20for%20%22Window.postMessage%28%29%22%26context%3AtoolType%3Dsast)\n\n## Local Effect\n\nA malicious site can intercept the message by changing the location of the window.\n\n\n## Remediation\nDo not use the wildcard (\"*\") as target origin when sending window messages. Always set an exact URI for the intended target, and use a target URI that starts with \"https://\" to make sure that the target has been loaded over a secure, encrypted connection using HTTPS.\n\nIf window messages are only intended for documents on the same origin as the sender, the target origin can be set to \"/\" or left out completely as it defaults to only allow messages to same-origin targets when not set.\n\n## References\n* Common Weakness Enumeration: [CWE-668](https://cwe.mitre.org/data/definitions/668.html)\n\n","text":"Sending a cross-origin message without restricting the origin that can receive it."},"properties":{"security-severity":"3.8","tags":["security","static_analysis","external/cwe/cwe-668"]},"defaultConfiguration":{"level":"note"}},{"id":"sigma.container_missing_memory_limit:kubernetes|text","shortDescription":{"text":"Uncontrolled Resource Consumption"},"fullDescription":{"text":"The Kubernetes container does not have a set memory limit, allowing it to exhaust all memory resources or cause excessive cloud usage bills."},"help":{"markdown":"\n## Description\nThe Kubernetes container does not have a set memory limit, allowing it to exhaust all memory resources or cause excessive cloud usage bills.\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/issues?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026filter=issueType%3Alocalized-name%3DUncontrolled%20Resource%20Consumption%26context%3AtoolType%3Dsast)\n\n\n\n## Remediation\nPotential mitigations include the following:\n  1. Design throttling mechanisms into the system architecture. The best protection is to limit the amount of resources that an unauthorized user can cause to be expended. A strong authentication and access control model will help prevent such attacks from occurring in the first place. The login application should be protected against DoS attacks as much as possible. Limiting the database access, perhaps by caching result sets, can help minimize the resources expended. To further limit the potential for a DoS attack, consider tracking the rate of requests received from users and blocking requests that exceed a defined rate threshold.\n  2. Mitigation of resource exhaustion attacks requires that the target system either:\n\n    * recognizes the attack and denies that user further access for a given amount of time, or\n    * uniformly throttles all requests in order to make it more difficult to consume resources more quickly than they can again be freed.\n\nThe first of these solutions is an issue in itself though, since it may allow attackers to prevent the use of the system by a particular valid user. If the attacker impersonates the valid user, they may be able to prevent the user from accessing the server in question.\n\nThe second solution is simply difficult to effectively institute -- and even when properly done, it does not provide a full solution. It simply makes the attack require more resources on the part of the attacker.\n\n  3. Ensure that protocols have specific limits of scale placed on them.\n  4. Ensure that all failures in resource allocation place the system into a safe posture.\n\n## References\n* Common Weakness Enumeration: [CWE-400](https://cwe.mitre.org/data/definitions/400.html)\n\n","text":"The Kubernetes container does not have a set memory limit, allowing it to exhaust all memory resources or cause excessive cloud usage bills."},"properties":{"security-severity":"3.8","tags":["security","static_analysis","external/cwe/cwe-400"]},"defaultConfiguration":{"level":"note"}},{"id":"FB.SE_BAD_FIELD|java","shortDescription":{"text":"Se: Incorrect definition of Serializable class"},"fullDescription":{"text":"This Serializable class defines a non-primitive instance field which is neither transient, Serializable, or \u003ccode\u003ejava.lang.Object\u003c/code\u003e, and does not appear to implement the \u003ccode\u003eExternalizable\u003c/code\u003e interface or the \u003ccode\u003ereadObject()\u003c/code\u003e and \u003ccode\u003ewriteObject()\u003c/code\u003e methods. (\u003ca href=\"/doc/en/spotbugs/sb_checker_ref.html#FB.SE_BAD_FIELD\" target=\"_blank\"\u003eFrom SpotBugs description\u003c/a\u003e)"},"help":{"markdown":"\n## Description\nThis Serializable class defines a non-primitive instance field which is neither transient, Serializable, or \u003ccode\u003ejava.lang.Object\u003c/code\u003e, and does not appear to implement the \u003ccode\u003eExternalizable\u003c/code\u003e interface or the \u003ccode\u003ereadObject()\u003c/code\u003e and \u003ccode\u003ewriteObject()\u003c/code\u003e methods. (\u003ca href=\"/doc/en/spotbugs/sb_checker_ref.html#FB.SE_BAD_FIELD\" target=\"_blank\"\u003eFrom SpotBugs description\u003c/a\u003e)\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/issues?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026filter=issueType%3Alocalized-name%3DSe:%20Incorrect%20definition%20of%20Serializable%20class%26context%3AtoolType%3Dsast)\n\n\n\n## Remediation\nUnspecified remediation.\n\n\n","text":"This Serializable class defines a non-primitive instance field which is neither transient, Serializable, or \u003ccode\u003ejava.lang.Object\u003c/code\u003e, and does not appear to implement the \u003ccode\u003eExternalizable\u003c/code\u003e interface or the \u003ccode\u003ereadObject()\u003c/code\u003e and \u003ccode\u003ewriteObject()\u003c/code\u003e methods. (\u003ca href=\"/doc/en/spotbugs/sb_checker_ref.html#FB.SE_BAD_FIELD\" target=\"_blank\"\u003eFrom SpotBugs description\u003c/a\u003e)"},"properties":{"security-severity":"3.8","tags":["security","static_analysis"]},"defaultConfiguration":{"level":"note"}},{"id":"copy_paste_error|javascript","shortDescription":{"text":"Copy-Paste Error"},"fullDescription":{"text":"A copied piece of code is inconsistent with the original"},"help":{"markdown":"\n## Description\nA copied piece of code is inconsistent with the original\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/issues?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026filter=issueType%3Alocalized-name%3DCopy-Paste%20Error%26context%3AtoolType%3Dsast)\n\n## Local Effect\n\nThe copied code will not have its intended effect.\n\n\n## Remediation\n\n\n## References\n* Common Weakness Enumeration: [CWE-398](https://cwe.mitre.org/data/definitions/398.html)\n\n","text":"A copied piece of code is inconsistent with the original"},"properties":{"security-severity":"6.8","tags":["security","static_analysis","external/cwe/cwe-398"]},"defaultConfiguration":{"level":"warning"}},{"id":"sigma.missing_samesite_attribute:servlet|java","shortDescription":{"text":"Sensitive Cookie with Improper SameSite Attribute"},"fullDescription":{"text":"The application returns a `Set-Cookie` HTTP response header without the `SameSite` attribute. As a result, the client will use the default value which, in older browsers, is the insecure value `None`. In this case, the client will send the cookie for cross-origin requests, making Cross-Site Request Forgery (CSRF) attacks possible if other mitigating controls are absent."},"help":{"markdown":"\n## Description\nThe application returns a `Set-Cookie` HTTP response header without the `SameSite` attribute. As a result, the client will use the default value which, in older browsers, is the insecure value `None`. In this case, the client will send the cookie for cross-origin requests, making Cross-Site Request Forgery (CSRF) attacks possible if other mitigating controls are absent.\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/issues?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026filter=issueType%3Alocalized-name%3DSensitive%20Cookie%20with%20Improper%20SameSite%20Attribute%26context%3AtoolType%3Dsast)\n\n\n\n## Remediation\nThe server should explicitly set the SameSite attribute for all cookies containing sensitive data, such as session tokens. This can be accomplished either programmatically when setting Set-Cookie headers in responses or via deployment descriptors provided by various frameworks.\n\nThe setting \"SameSite=Strict\" provides the strongest protection against CSRF but the user experience works best when an application uses two different cookies, one for write-access that is locked down with \"SameSite=Strict\" and another for read-access that can have a more permissive setting, e.g., \"SameSite=Lax\". If the application only relies on one cookie for both read \u0026 write access, then the setting \"SameSite=Lax\" provides some protection against CSRF without too much negative impact on user experience. \n\nIt's worth noting that the definition of same-site is less restrictive than the definition of cross-origin, e.g., requests from other sub-domains are considered same-site although they are from a different origin. This means that even in browsers that fully support the \"SameSite\" cookie attribute, an attacker may still circumvent this protection if they can take over a subdomain or inject HTML or JavaScript into any subdomain of the same site. Therefore, relying on the \"SameSite\" attribute is not recommended as the sole defense against cross-site request forgery, it should instead be seen as a defense in depth mechanism that reduces the likelihood of CSRF.\n\n## References\n* Common Weakness Enumeration: [CWE-1275](https://cwe.mitre.org/data/definitions/1275.html)\n\n","text":"The application returns a `Set-Cookie` HTTP response header without the `SameSite` attribute. As a result, the client will use the default value which, in older browsers, is the insecure value `None`. In this case, the client will send the cookie for cross-origin requests, making Cross-Site Request Forgery (CSRF) attacks possible if other mitigating controls are absent."},"properties":{"security-severity":"3.8","tags":["security","static_analysis","external/cwe/cwe-1275"]},"defaultConfiguration":{"level":"note"}},{"id":"null_pointer_dereference_exception:constant|javascript","shortDescription":{"text":"Bad Use Of Null-like Value"},"fullDescription":{"text":"Performing an operation that would be invalid on a null or undefined value."},"help":{"markdown":"\n## Description\nPerforming an operation that would be invalid on a null or undefined value.\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/issues?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026filter=issueType%3Alocalized-name%3DBad%20Use%20Of%20Null-like%20Value%26context%3AtoolType%3Dsast)\n\n## Local Effect\n\nIf the value is null or undefined, this code will cause an exception such as a TypeError.\n\n\n## Remediation\n\n\n## References\n* Common Weakness Enumeration: [CWE-476](https://cwe.mitre.org/data/definitions/476.html)\n\n","text":"Performing an operation that would be invalid on a null or undefined value."},"properties":{"security-severity":"6.8","tags":["security","static_analysis","external/cwe/cwe-476"]},"defaultConfiguration":{"level":"warning"}},{"id":"FB.DE_MIGHT_IGNORE|java","shortDescription":{"text":"Unchecked Error Condition"},"fullDescription":{"text":"This method might ignore an exception. (\u003ca href=\"/doc/en/spotbugs/sb_checker_ref.html#FB.DE_MIGHT_IGNORE\" target=\"_blank\"\u003eFrom SpotBugs description\u003c/a\u003e)"},"help":{"markdown":"\n## Description\nThis method might ignore an exception. (\u003ca href=\"/doc/en/spotbugs/sb_checker_ref.html#FB.DE_MIGHT_IGNORE\" target=\"_blank\"\u003eFrom SpotBugs description\u003c/a\u003e)\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/issues?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026filter=issueType%3Alocalized-name%3DUnchecked%20Error%20Condition%26context%3AtoolType%3Dsast)\n\n\n\n## Remediation\nPotential mitigations include the following:\n  1. The choice between a language which has named or unnamed exceptions needs to be done. While unnamed exceptions exacerbate the chance of not properly dealing with an exception, named exceptions suffer from the up call version of the weak base class problem.\n  2. A language can be used which requires, at compile time, to catch all serious exceptions. However, one must make sure to use the most current version of the API as new exceptions could be added.\n  3. Catch all relevant exceptions. This is the recommended solution. Ensure that all exceptions are handled in such a way that you can be sure of the state of your system at any given moment.\n\n## References\n* Common Weakness Enumeration: [CWE-391](https://cwe.mitre.org/data/definitions/391.html)\n\n","text":"This method might ignore an exception. (\u003ca href=\"/doc/en/spotbugs/sb_checker_ref.html#FB.DE_MIGHT_IGNORE\" target=\"_blank\"\u003eFrom SpotBugs description\u003c/a\u003e)"},"properties":{"security-severity":"3.8","tags":["security","static_analysis","external/cwe/cwe-391"]},"defaultConfiguration":{"level":"note"}},{"id":"sigma.hardcoded_secret:pattern|text","shortDescription":{"text":"Use of Hard-coded Credentials"},"fullDescription":{"text":"A secret, such as a password, cryptographic key, or token is stored in plaintext directly in the source code, in an application's properties, or configuration file. Users with access to the secret may then use the secret to access resources that they otherwise would not have access to."},"help":{"markdown":"\n## Description\nA secret, such as a password, cryptographic key, or token is stored in plaintext directly in the source code, in an application's properties, or configuration file. Users with access to the secret may then use the secret to access resources that they otherwise would not have access to.\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/issues?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026filter=issueType%3Alocalized-name%3DUse%20of%20Hard-coded%20Credentials%26context%3AtoolType%3Dsast)\n\n\n\n## Remediation\nPotential mitigations include the following:\n  1. For outbound authentication: store passwords, keys, and other credentials outside of the code in a strongly-protected, encrypted configuration file or database that is protected from access by all outsiders, including other local users on the same system. Properly protect the key (CWE-320). If you cannot use encryption to protect the file, then make sure that the permissions are as restrictive as possible [REF-7].\n\nIn Windows environments, the Encrypted File System (EFS) may provide some protection.\n\n  2. For inbound authentication: Rather than hard-code a default username and password, key, or other authentication credentials for first time logins, utilize a \"first login\" mode that requires the user to enter a unique strong password or key.\n  3. If the software must contain hard-coded credentials or they cannot be removed, perform access control checks and limit which entities can access the feature that requires the hard-coded credentials. For example, a feature might only be enabled through the system console instead of through a network connection.\n  4. For inbound authentication using passwords: apply strong one-way hashes to passwords and store those hashes in a configuration file or database with appropriate access control. That way, theft of the file/database still requires the attacker to try to crack the password. When handling an incoming password during authentication, take the hash of the password and compare it to the saved hash.\n\nUse randomly assigned salts for each separate hash that is generated. This increases the amount of computation that an attacker needs to conduct a brute-force attack, possibly limiting the effectiveness of the rainbow table method.\n\n  5. For front-end to back-end connections: Three solutions are possible, although none are complete.\n\n    * The first suggestion involves the use of generated passwords or keys that are changed automatically and must be entered at given time intervals by a system administrator. These passwords will be held in memory and only be valid for the time intervals.\n    * Next, the passwords or keys should be limited at the back end to only performing actions valid for the front end, as opposed to having full access.\n    * Finally, the messages sent should be tagged and checksummed with time sensitive values so as to prevent replay-style attacks.\n\n## References\n* Common Weakness Enumeration: [CWE-798](https://cwe.mitre.org/data/definitions/798.html)\n\n","text":"A secret, such as a password, cryptographic key, or token is stored in plaintext directly in the source code, in an application's properties, or configuration file. Users with access to the secret may then use the secret to access resources that they otherwise would not have access to."},"properties":{"security-severity":"3.8","tags":["security","static_analysis","external/cwe/cwe-798"]},"defaultConfiguration":{"level":"note"}},{"id":"sigma.container_running_as_root:dockerfile|text","shortDescription":{"text":"Improper Privilege Management"},"fullDescription":{"text":"The Docker container is configured to run as the root user."},"help":{"markdown":"\n## Description\nThe Docker container is configured to run as the root user.\n\n[Click Here To See More Details in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/issues?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026filter=issueType%3Alocalized-name%3DImproper%20Privilege%20Management%26context%3AtoolType%3Dsast)\n\n\n\n## Remediation\nPotential mitigations include the following:\n  1. Very carefully manage the setting, management, and handling of privileges. Explicitly manage trust zones in the software.\n  2. Follow the principle of least privilege when assigning access rights to entities in a software system.\n  3. Consider following the principle of separation of privilege. Require multiple conditions to be met before permitting access to a system resource.\n\n## References\n* Common Weakness Enumeration: [CWE-269](https://cwe.mitre.org/data/definitions/269.html)\n\n","text":"The Docker container is configured to run as the root user."},"properties":{"security-severity":"3.8","tags":["security","static_analysis","external/cwe/cwe-269"]},"defaultConfiguration":{"level":"note"}}]}},"results":[{"message":{"text":"A vulnerability was found in netplex json-smart **V1** and **V2** due to an uncaught exception in parser. Successful exploitation of this issue could result in a denial-of-service (DoS) or potential sensitive data exposure."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2021-27568 json-smart 2.3: spring-boot-starter-test 2.2.2.RELEASE: net.minidev","partialFingerprints":{"ruleIdLocationHash/v1":"03278fe9733b31a5579eed4c7c82e80459a325ed6747794e789d5294759ae5af"}},{"message":{"text":"json-smart is vulnerable to denial-of-service (DoS) due to not having any depth limits of nested arrays or objects. Parsing large nested elements could result in stack exhaustion and an application crash."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2023-1370 json-smart 2.3: spring-boot-starter-test 2.2.2.RELEASE: net.minidev","partialFingerprints":{"ruleIdLocationHash/v1":"8956c824a579e725feafc81f86e8b4974b38409eb891866539f2f5112f65d2e0"}},{"message":{"text":"Jetty is vulnerable to temporary directory Hijacking via a race condition. If code is executed from this temporary directory it can lead to local privilege escalation."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2020-27216 jetty-webapp 9.4.24.v20191120: wiremock 2.8.0: org.eclipse.jetty","partialFingerprints":{"ruleIdLocationHash/v1":"8e94b848c62cd045d8d99c3127d25aa16eb7a181185657bb44bda2bd17104bfa"}},{"message":{"text":"The HTTP/2 protocol contains a flaw related to the stream multiplexing feature that can allow for excessive resource consumption on servers operating implementations of the HTTP/2 protocol. \n\nThe HTTP/2 protocol allows clients to signal to a server to cancel a previously opened stream by sending an `RST_STREAM` frame. Attackers can abuse this stream canceling ability by opening a large number of streams at once immediately followed by `RST_STREAM` frames. In most HTTP/2 implementations this bypasses concurrent open stream limits and causes servers to spend processing time first handling request frames and then performing stream tear downs. For the server, these operations can pile up whereas the attacker client paid minuscule bandwidth and processing costs.\n\n[Amazon](https://aws.amazon.com/security/security-bulletins/AWS-2023-011/), [Cloudflare](https://blog.cloudflare.com/technical-breakdown-http2-rapid-reset-ddos-attack/) and [Google](https://cloud.google.com/blog/products/identity-security/google-cloud-mitigated-largest-ddos-attack-peaking-above-398-million-rps/) have reported that this vulnerability has been exploited in the wild from August to October 2023.\n\nThis vulnerability is listed as exploitable by the Cybersecurity \u0026 Infrastructure Security Agency in their [Known Exploited Vulnerabilities Catalog](https://www.cisa.gov/known-exploited-vulnerabilities-catalog)."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2023-44487 jetty-webapp 9.4.24.v20191120: wiremock 2.8.0: org.eclipse.jetty","partialFingerprints":{"ruleIdLocationHash/v1":"17b53ab65411f7a4bfb7f16514b6aefb3450ff8d616b30b41a7872bd0ffded04"}},{"message":{"text":"Jetty is vulnerable to denial-of-service (DoS) due to the use of an exponential algorithm that can have excessive resource requirements. A remote attacker could cause a vulnerable server to become unresponsive by sending maliciously crafted HTTP requests to that server."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2020-27223 jetty-webapp 9.4.24.v20191120: wiremock 2.8.0: org.eclipse.jetty","partialFingerprints":{"ruleIdLocationHash/v1":"b0981ef460136d7314b703afaf7b81e3b78136eab81afc5d7c0f85114944a507"}},{"message":{"text":"Eclipse Jetty is vulnerable to Denial-of-Service (DoS) via invalid TLS frames. An attacker could exploit this by sending a TLS frame with a size in excess of 17408 resulting in excessive resource consumption leading to a DoS condition."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2021-28165 jetty-webapp 9.4.24.v20191120: wiremock 2.8.0: org.eclipse.jetty","partialFingerprints":{"ruleIdLocationHash/v1":"464ff37abbdce30e909ee413d04e5f5a8df98af6114214d8ddeb5b6f0f870589"}},{"message":{"text":"Jetty is vulnerable to information disclosure due to improper requested path verification. This allows crafted requests to access protected resources of the web application which, depending on the implementation, might reveal sensitive information."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2021-28169 jetty-webapp 9.4.24.v20191120: wiremock 2.8.0: org.eclipse.jetty","partialFingerprints":{"ruleIdLocationHash/v1":"0c9c6de84c32f3455bb6dec5dafc13214463ff9231d82662972e4aaef1cc54db"}},{"message":{"text":"Eclipse Jetty is vulnerable to a denial-of-service (DoS) issue due to presence of a user input validation flaw in the HTTP/2 HPACK functionality that can lead to an integer overflow and allow HPACK headers to exceed their expected size limits.\n\nAn attacker could submit crafted HTTP messages that trigger the integer overflow flaw and cause large buffers to be allocated on the server, consuming memory resources in a manner that could cause the server to run out of memory."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2023-36478 jetty-webapp 9.4.24.v20191120: wiremock 2.8.0: org.eclipse.jetty","partialFingerprints":{"ruleIdLocationHash/v1":"d4e5612bdc3aad2d5c7bc1d649c4e71dddf565a599376fcd3c634979602126a3"}},{"message":{"text":"Eclipse Jetty does not correctly handle invalid HTTP/2 requests. An attacker could exploit this flaw to exhaust the HTTP/2 flow control window or TCP congest the connection. This will cause the relevant selector threads to be blocked and it will lead to a denial-of-service (DoS)."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2022-2048 jetty-webapp 9.4.24.v20191120: wiremock 2.8.0: org.eclipse.jetty","partialFingerprints":{"ruleIdLocationHash/v1":"5302df3a24e6f9b27d02153166243c8272d4d55216c19ede1edff0be0c096c78"}},{"message":{"text":"Eclipse Jetty contains a vulnerability that allows a remote attacker to inject data into other client's requests. This vulnerability only exists when GZIP request body inflation is enabled, and requests from different clients are multiplexed onto a single connection."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2020-27218 jetty-webapp 9.4.24.v20191120: wiremock 2.8.0: org.eclipse.jetty","partialFingerprints":{"ruleIdLocationHash/v1":"cb55d48cf636a3f82ae8c5528940abb6be0c57d04bfe4bcb7edd626d8134b118"}},{"message":{"text":"Eclipse Jetty contains a vulnerability in its multipart request parsing mechanism that can lead to an out-of-memory error due to insufficient limiting measures. An attacker can exploit this flaw by supplying a request containing a large multipart without a filename in order to cause a denial-of-service (DoS)."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2023-26048 jetty-webapp 9.4.24.v20191120: wiremock 2.8.0: org.eclipse.jetty","partialFingerprints":{"ruleIdLocationHash/v1":"440dcde3ee9924cc4246b5c5b3f0ab747b12bf601897cd1e05abb0fe0b11cada"}},{"message":{"text":"Eclipse Jetty does not properly parse quoted values in cookies. This could allow an attacker to smuggle cookies within other cookies into the application. The attacker can also tamper with the cookie parsing mechanism and cause other unintended behavior."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2023-26049 jetty-webapp 9.4.24.v20191120: wiremock 2.8.0: org.eclipse.jetty","partialFingerprints":{"ruleIdLocationHash/v1":"bce156d29af6df0aad4aa8d925bb848c76625c3694b9140f96e6efb8fc71ace9"}},{"message":{"text":"Eclipse Jetty is vulnerable to HTTP request smuggling due to the improper parsing of HTTP requests. An attacker could exploit this vulnerability by sending maliciously crafted HTTP requests to a vulnerable endpoint with multiple requests included inside the body by manipulating the `Content-Length` of the request. The smuggling of HTTP requests may allow for the bypass of security tools such as web application firewalls (WAFs) and intrusion detection systems (IDSs)."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2023-40167 jetty-webapp 9.4.24.v20191120: wiremock 2.8.0: org.eclipse.jetty","partialFingerprints":{"ruleIdLocationHash/v1":"568e7abaef3946fc717e3b87e84e6c6b6ddb82e61ec07e032b8513e11c219fcc"}},{"message":{"text":"Eclipse Jetty contains an improper neutralization of quoting syntax issue within the CGI servlet. This could allow an authenticated attacker to send a request to the CGI Servlet for a binary with a space in its name in order to manipulate the command structure and execute incorrect commands."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2023-36479 jetty-webapp 9.4.24.v20191120: wiremock 2.8.0: org.eclipse.jetty","partialFingerprints":{"ruleIdLocationHash/v1":"439448b05166c7275fcd375073f98921dbb03f71b3d397124056b550b3420088"}},{"message":{"text":"Eclipse Jetty contains an improper authentication vulnerability. This could allow an authenticated attacker to bypass authentication after it has been rejected or revoked by the `LoginService` and make a request as if authenticated.\n\n**Note:** The vendor has stated that this issue impacts usages of the `jetty-openid` which have configured a nested `LoginService` and where that `LoginService` is capable of rejecting previously authenticated users."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2023-41900 jetty-webapp 9.4.24.v20191120: wiremock 2.8.0: org.eclipse.jetty","partialFingerprints":{"ruleIdLocationHash/v1":"37dac36a17198828dc9b4c42f8de3b0792066af5a3bcab5647d1af45404e57cd"}},{"message":{"text":"Eclipse Jetty is vulnerable to insufficient session expiry. This may result in sessions used on a shared computer persisting for longer than intended."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2021-34428 jetty-webapp 9.4.24.v20191120: wiremock 2.8.0: org.eclipse.jetty","partialFingerprints":{"ruleIdLocationHash/v1":"6ce6a6bc0dabbd111c900dbdc9a5dea9e846fafac9f4c908f1b83ec753d6da68"}},{"message":{"text":"Eclipse Jetty does not correctly handle invalid authority segments of HTTP URIs. An authenticated attacker could exploit this flaw by passing an invalid URI that contains an improper authority with no host so that it is interpreted as one with a host."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2022-2047 jetty-webapp 9.4.24.v20191120: wiremock 2.8.0: org.eclipse.jetty","partialFingerprints":{"ruleIdLocationHash/v1":"1ce08d88abdd5e5abfd784f3b10cdd019c59e60c56a61b143b7af2676a234c89"}},{"message":{"text":"Apache Log4j, as used in many popular services, is vulnerable to improperly allowing lightweight directory access protocol (LDAP) access via Java naming and directory interface (JNDI). A remote attacker able to supply the end application with specially crafted input that is then processed by the Log4j subcomponent could cause the execution of arbitrary Java code.\n\n**Note** \n\n- log4j-api packages by themselves do not contain the vulnerable functionality and are therefore unaffected. log4j-core packages and the upstream overarching source repository are affected.\n\n- A previously suggested mitigation of setting environment variable `LOG4J_FORMAT_MSG_NO_LOOKUPS=true` is not recommended. This mitigation has been proven inadequate against this vulnerability. \n\n- This vulnerability is partially fixed in [**2.15.0-rc2**](https://github.com/apache/logging-log4j2/releases/tag/log4j-2.15.0-rc2) by [this](https://github.com/apache/logging-log4j2/commit/001aaada7dab82c3c09cde5f8e14245dc9d8b454) commit and [this](https://github.com/apache/logging-log4j2/commit/bac0d8a35c7e354a0d3f706569116dff6c6bd658) commit. These fixes were deemed incomplete. See BDSA-2021-3779 (CVE-2021-45046) for more details.\n\nThis vulnerability is listed as exploitable by the Cybersecurity \u0026 Infrastructure Security Agency in their [Known Exploited Vulnerabilities Catalog](https://www.cisa.gov/known-exploited-vulnerabilities-catalog)."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"BDSA-2021-3731 spring-boot-autoconfigure 2.2.2.RELEASE: spring-boot-devtools 2.2.2.RELEASE: org.springframework.boot","partialFingerprints":{"ruleIdLocationHash/v1":"54913d08fab6e6115e1d6626e29a5055ac852faef4ab30390a7b21a7756d90f0"}},{"message":{"text":"Spring Framework is vulnerable to a flaw in the access restrictions to the security sensitive `ClassLoader` property. The restrictions can be bypassed through alternative paths available with Java9 and later. An attacker can leverage this vulnerability to cause remote code execution (RCE).\n\n**Note** this issue exists because the restrictions that were introduced to prevent exploitation of BDSA-2010-0001 (CVE-2010-1622) can be bypassed on platforms where Java9 and later are in use.\n\nThis vulnerability is listed as exploitable by the Cybersecurity \u0026 Infrastructure Security Agency in their [Known Exploited Vulnerabilities Catalog](https://www.cisa.gov/known-exploited-vulnerabilities-catalog)."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2022-22965 spring-boot-autoconfigure 2.2.2.RELEASE: spring-boot-devtools 2.2.2.RELEASE: org.springframework.boot","partialFingerprints":{"ruleIdLocationHash/v1":"3b344ed21aefee85d1b6809edf80f9233412f9f21bca52508f09df2cb0830dd8"}},{"message":{"text":"Spring framework contains a security bypass vulnerability when `/**` is used as a pattern in Spring Security configuration with the `/cloudfoundryapplication/**` component. The potential for security bypass exists due to the mismatch in pattern matching between Spring Security and Cloud Foundry.\n\n**Note**: The vendor has stated in their [advisory](https://spring.io/security/cve-2023-20873) that this application is not vulnerable if any of the following is true:\n* The application is not deployed to Cloud Foundry.\n* You have disabled Cloud Foundry actuator endpoints with `management.cloudfoundry.enabled` set to `false`.\n* Your application does not have handler mappings that can handle requests to `/cloudfoundryapplication/**`."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2023-20873 spring-boot-autoconfigure 2.2.2.RELEASE: spring-boot-devtools 2.2.2.RELEASE: org.springframework.boot","partialFingerprints":{"ruleIdLocationHash/v1":"3f59bca1ff26bb0e89c3b2c502f2972dff2b77891ee665076efb79af64fce03a"}},{"message":{"text":"Apache log4j is vulnerable to a denial-of-service (DoS) when uncontrolled recursion occurs through a self-referencing lookup.  An attacker can trigger a DoS with malicious input data that generates a recursive lookup  and consequent application crash.\n\nSuccessful attacks require the attacker to have access to Thread Context Map (MDC) input, and for log4j configured with non-default pattern layout with a Context Lookup.\n\nOnly the log4j-core JAR file is impacted by this vulnerability. Applications using only the log4j-api JAR file without the log4j-core JAR file are not impacted.\n\nApache Log4j is the only Logging Services subproject affected by this vulnerability. Other projects like Log4net  are not impacted."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"BDSA-2021-3817 spring-boot-autoconfigure 2.2.2.RELEASE: spring-boot-devtools 2.2.2.RELEASE: org.springframework.boot","partialFingerprints":{"ruleIdLocationHash/v1":"3548711a4c535efb8c59b6ba674ecd6fda6a883ef978a0fed4f61a188e71a56d"}},{"message":{"text":"Apache Log4j contains a remote code execution (RCE) vulnerability. This allows an attacker that has permissions to modify the logging configuration files to input a malicious JDBC Appender with a data source referencing a JDNI URI. This can then lead to RCE.\n\n**Note:** This vulnerability impacts log4j-core."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"BDSA-2021-3887 spring-boot-autoconfigure 2.2.2.RELEASE: spring-boot-devtools 2.2.2.RELEASE: org.springframework.boot","partialFingerprints":{"ruleIdLocationHash/v1":"946f538d4f06bed95765fc996758395053b8b66fff2024bc3d0fa5e14c7465fa"}},{"message":{"text":"Spring Boot is vulnerable to privilege escalation due to a race condition which occurs during the creation of a temporary directory. A local attacker could create their own temporary directory by racing against Spring Boot and supply their own configuration files which would allow for the full takeover of the application."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2022-27772 spring-boot-autoconfigure 2.2.2.RELEASE: spring-boot-devtools 2.2.2.RELEASE: org.springframework.boot","partialFingerprints":{"ruleIdLocationHash/v1":"fc02116299495f78bba5eafbe7a63dc8fcfbfa1838f5d38fb2de19e7db631092"}},{"message":{"text":"Spring Boot is vulnerable to denial-of-service (DoS) via the welcome page when used to serve an application behind a reverse proxy cache. This will cause users to continuously be served a 404 response, preventing standard application use.\n\n\n**Note:** Spring have provided the following guidance for vulnerable criteria. \nAn application is vulnerable if all of the following are true:\n\n- \"The application has Spring MVC auto-configuration enabled. This is the case by default if Spring MVC is on the classpath.\"\n- \"The application makes use of Spring Boot's welcome page support, either static or templated.\"\n- \"Your application is deployed behind a proxy which caches 404 responses.\"\n\nThe application is not vulnerable if any of the following are true:\n\n- \"Spring MVC auto-configuration is disabled. This is true if `WebMvcAutoConfiguration` is explicitly excluded, if Spring MVC is not on the classpath, or if `spring.main.web-application-type` is set to a value other than `SERVLET`.\"\n- \"The application does not use Spring Boot's welcome page support.\"\n- \"You do not have a proxy which caches 404 responses.\""},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2023-20883 spring-boot-autoconfigure 2.2.2.RELEASE: spring-boot-devtools 2.2.2.RELEASE: org.springframework.boot","partialFingerprints":{"ruleIdLocationHash/v1":"eb46779d7d874cf5f5c9b19b28825f5e253d967493cdb4e16ef44dcb97b40986"}},{"message":{"text":"Spring Boot is vulnerable to denial-of-service (DoS). An unauthenticated user could trigger the vulnerability by providing specially crafted HTTP requests to a web metrics endpoint."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2023-34055 spring-boot-autoconfigure 2.2.2.RELEASE: spring-boot-devtools 2.2.2.RELEASE: org.springframework.boot","partialFingerprints":{"ruleIdLocationHash/v1":"c7e75b602d5c1f00ff9dd0090ed2ae81d3eac25b56685a725a9ea22de1fbb0e0"}},{"message":{"text":"SnakeYAML is vulnerable to remote code execution (RCE) when used in an application to parse untrusted user-supplied YAML files. A remote attacker could craft a malicious YAML file that when deserialized allows arbitrary command execution on the target system."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2022-1471 snakeyaml 1.25: spring-boot-starter-test 2.2.2.RELEASE: org.yaml","partialFingerprints":{"ruleIdLocationHash/v1":"71ce91e48a99ce8c55a009f706c30a17b47a7bd6b873ad899965f2be626b1be3"}},{"message":{"text":"SnakeYAML is vulnerable to a billion laughs attack. An attacker able to supply specially crafted input to the application could cause excessive memory consumption, resulting in a denial-of-service (DoS)."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2017-18640 snakeyaml 1.25: spring-boot-starter-test 2.2.2.RELEASE: org.yaml","partialFingerprints":{"ruleIdLocationHash/v1":"e6f0b0d571719b36d597f159bd176b345167879b79985a8f3f04d5556a9dcd97"}},{"message":{"text":"SnakeYAML is vulnerable to a stack-based buffer overflow issue when parsing untrusted YAML files. An attacker could exploit this by providing crafted input in order to cause a denial-of-service (DoS) condition. \n\n**Note**: The vendor disputes the validity of this issue and other similar recently reported issues and have released an [advisory](https://bitbucket.org/snakeyaml/snakeyaml/wiki/CVE%20\u0026%20NIST.md) in response."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2022-38750 snakeyaml 1.25: spring-boot-starter-test 2.2.2.RELEASE: org.yaml","partialFingerprints":{"ruleIdLocationHash/v1":"4d6212885a90962e4aaf4b0c80204592c9bc862e5529a0ddc82859f023d9014f"}},{"message":{"text":"SnakeYAML is vulnerable to denial-of-service (DoS) due to a lack of nested depth limitation for collections. An attacker could exploit this by providing crafted input in order to cause a crash. \n\n**Note**: The vendor disputes the validity of this issue and other similar recently reported issues and have released an [advisory](https://bitbucket.org/snakeyaml/snakeyaml/wiki/CVE%20\u0026%20NIST.md) in response."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2022-25857 snakeyaml 1.25: spring-boot-starter-test 2.2.2.RELEASE: org.yaml","partialFingerprints":{"ruleIdLocationHash/v1":"4d58e9204584e42df05fdadee144e9f7ceba0e02e518efa8114bf4beb2e4e6d0"}},{"message":{"text":"SnakeYAML is vulnerable to denial-of-service (DoS) due to a failure to parse regular expressions that contain large values. A remote attacker could cause a vulnerable application to crash by passing a maliciously crafted regular expression to that application."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2022-38751 snakeyaml 1.25: spring-boot-starter-test 2.2.2.RELEASE: org.yaml","partialFingerprints":{"ruleIdLocationHash/v1":"d5e7da6160eed95467e733babacda8faa22b1eb4d1318deecaacb28547cd6e79"}},{"message":{"text":"SnakeYAML is vulnerable to denial-of-service (DoS) due to a stack overflow which can be triggered by parsing a crafted file. [According to the vendor](https://bitbucket.org/snakeyaml/snakeyaml/wiki/CVE%20\u0026%20NIST.md), such vulnerabilities pose low risks unless the parser input is designed to come from untrusted sources on the internet."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2022-38752 snakeyaml 1.25: spring-boot-starter-test 2.2.2.RELEASE: org.yaml","partialFingerprints":{"ruleIdLocationHash/v1":"a20fbd0294e065ce0a7570b2696d11cf3dfc2a8206ad61f89f489e4655928455"}},{"message":{"text":"Snakeyaml contains a vulnerability that can lead to an uncaught exception in its `java.util.AbstractSet.hashCode` component. This can subsequently cause a stack-based buffer overflow. An attacker could exploit this flaw by supplying a crafted YAML file."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2022-41854 snakeyaml 1.25: spring-boot-starter-test 2.2.2.RELEASE: org.yaml","partialFingerprints":{"ruleIdLocationHash/v1":"6ecccee9d8fb2742b7e777e04086db607077cc00d5e463ea2038dc713dc66612"}},{"message":{"text":"SnakeYAML is vulnerable to a stack-based buffer overflow issue when parsing untrusted YAML files. An attacker could exploit this by providing crafted input in order to cause a denial-of-service (DoS) condition. \n\n**Note**: The vendor disputes the validity of this issue and other similar recently reported issues and have released an [advisory](https://bitbucket.org/snakeyaml/snakeyaml/wiki/CVE%20\u0026%20NIST.md) in response."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2022-38749 snakeyaml 1.25: spring-boot-starter-test 2.2.2.RELEASE: org.yaml","partialFingerprints":{"ruleIdLocationHash/v1":"18aff537f165b43943dfa186d93a43ff0426389f684d30dad96abf30a2065b87"}},{"message":{"text":"Apache HttpClient is vulnerable to the disclosure and modification of data due to the mishandling of malformed URIs. An attacker could pass a maliciously crafted request to a vulnerable application, which will then be executed on an incorrect host."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2020-13956 httpclient 4.5.10: wiremock 2.8.0: org.apache.httpcomponents","partialFingerprints":{"ruleIdLocationHash/v1":"8b4ee7d2d06a5322ba9ea386bd38122dfa6e99ac08db90ccafaa40a52f86206c"}},{"message":{"text":"Jetty is vulnerable to temporary directory Hijacking via a race condition. If code is executed from this temporary directory it can lead to local privilege escalation."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2020-27216 jetty-servlets 9.4.24.v20191120: wiremock 2.8.0: org.eclipse.jetty","partialFingerprints":{"ruleIdLocationHash/v1":"c96fc1e4aaecc5af9e1c01886019e09987f8f62979dc99a4ffe30e94e5c53c8a"}},{"message":{"text":"The HTTP/2 protocol contains a flaw related to the stream multiplexing feature that can allow for excessive resource consumption on servers operating implementations of the HTTP/2 protocol. \n\nThe HTTP/2 protocol allows clients to signal to a server to cancel a previously opened stream by sending an `RST_STREAM` frame. Attackers can abuse this stream canceling ability by opening a large number of streams at once immediately followed by `RST_STREAM` frames. In most HTTP/2 implementations this bypasses concurrent open stream limits and causes servers to spend processing time first handling request frames and then performing stream tear downs. For the server, these operations can pile up whereas the attacker client paid minuscule bandwidth and processing costs.\n\n[Amazon](https://aws.amazon.com/security/security-bulletins/AWS-2023-011/), [Cloudflare](https://blog.cloudflare.com/technical-breakdown-http2-rapid-reset-ddos-attack/) and [Google](https://cloud.google.com/blog/products/identity-security/google-cloud-mitigated-largest-ddos-attack-peaking-above-398-million-rps/) have reported that this vulnerability has been exploited in the wild from August to October 2023.\n\nThis vulnerability is listed as exploitable by the Cybersecurity \u0026 Infrastructure Security Agency in their [Known Exploited Vulnerabilities Catalog](https://www.cisa.gov/known-exploited-vulnerabilities-catalog)."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2023-44487 jetty-servlets 9.4.24.v20191120: wiremock 2.8.0: org.eclipse.jetty","partialFingerprints":{"ruleIdLocationHash/v1":"5ddced1f58b6cf412c5e7707c39c797fd261a1792b1b5b2ada3d298a36e00a62"}},{"message":{"text":"Jetty is vulnerable to denial-of-service (DoS) due to the use of an exponential algorithm that can have excessive resource requirements. A remote attacker could cause a vulnerable server to become unresponsive by sending maliciously crafted HTTP requests to that server."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2020-27223 jetty-servlets 9.4.24.v20191120: wiremock 2.8.0: org.eclipse.jetty","partialFingerprints":{"ruleIdLocationHash/v1":"4700b194b85f656741149d76a3fa125d4cae7ab06bc786cb90a691190c9cfe4a"}},{"message":{"text":"Eclipse Jetty is vulnerable to Denial-of-Service (DoS) via invalid TLS frames. An attacker could exploit this by sending a TLS frame with a size in excess of 17408 resulting in excessive resource consumption leading to a DoS condition."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2021-28165 jetty-servlets 9.4.24.v20191120: wiremock 2.8.0: org.eclipse.jetty","partialFingerprints":{"ruleIdLocationHash/v1":"2bf3164c5644e3300e02388bffcf8efa51396d8e0517fc21ac0367f3e3090adb"}},{"message":{"text":"Jetty is vulnerable to information disclosure due to improper requested path verification. This allows crafted requests to access protected resources of the web application which, depending on the implementation, might reveal sensitive information."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2021-28169 jetty-servlets 9.4.24.v20191120: wiremock 2.8.0: org.eclipse.jetty","partialFingerprints":{"ruleIdLocationHash/v1":"2f233bf2701d53429e3791d5d35251635c91f6d146ccc38e7568ddb1ec4abb0f"}},{"message":{"text":"Eclipse Jetty is vulnerable to a denial-of-service (DoS) issue due to presence of a user input validation flaw in the HTTP/2 HPACK functionality that can lead to an integer overflow and allow HPACK headers to exceed their expected size limits.\n\nAn attacker could submit crafted HTTP messages that trigger the integer overflow flaw and cause large buffers to be allocated on the server, consuming memory resources in a manner that could cause the server to run out of memory."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2023-36478 jetty-servlets 9.4.24.v20191120: wiremock 2.8.0: org.eclipse.jetty","partialFingerprints":{"ruleIdLocationHash/v1":"b3c4a226f0e88e88355ae1c8b25f5e537d99323f98791722e1fa639ebf1126a5"}},{"message":{"text":"Eclipse Jetty does not correctly handle invalid HTTP/2 requests. An attacker could exploit this flaw to exhaust the HTTP/2 flow control window or TCP congest the connection. This will cause the relevant selector threads to be blocked and it will lead to a denial-of-service (DoS)."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2022-2048 jetty-servlets 9.4.24.v20191120: wiremock 2.8.0: org.eclipse.jetty","partialFingerprints":{"ruleIdLocationHash/v1":"9b206b8df4a7ecde3a9eaddb90633c13ad7907836b3262fa4f7b3dbde99949ae"}},{"message":{"text":"Eclipse Jetty contains a vulnerability that allows a remote attacker to inject data into other client's requests. This vulnerability only exists when GZIP request body inflation is enabled, and requests from different clients are multiplexed onto a single connection."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2020-27218 jetty-servlets 9.4.24.v20191120: wiremock 2.8.0: org.eclipse.jetty","partialFingerprints":{"ruleIdLocationHash/v1":"0cdeff1158839300a3f67b9b7cda402b7949906938288b90b1b493ad669158fa"}},{"message":{"text":"Eclipse Jetty contains a vulnerability in its multipart request parsing mechanism that can lead to an out-of-memory error due to insufficient limiting measures. An attacker can exploit this flaw by supplying a request containing a large multipart without a filename in order to cause a denial-of-service (DoS)."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2023-26048 jetty-servlets 9.4.24.v20191120: wiremock 2.8.0: org.eclipse.jetty","partialFingerprints":{"ruleIdLocationHash/v1":"2ed8f7a52e1ba4088315cfc8ba3c60f930e313273ad5c0c9e054065176e671bb"}},{"message":{"text":"Eclipse Jetty does not properly parse quoted values in cookies. This could allow an attacker to smuggle cookies within other cookies into the application. The attacker can also tamper with the cookie parsing mechanism and cause other unintended behavior."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2023-26049 jetty-servlets 9.4.24.v20191120: wiremock 2.8.0: org.eclipse.jetty","partialFingerprints":{"ruleIdLocationHash/v1":"001f40b4ff792aea40377d5a0eecf0c1006bd7b5924b616a289e684b2f12c7f8"}},{"message":{"text":"Eclipse Jetty is vulnerable to HTTP request smuggling due to the improper parsing of HTTP requests. An attacker could exploit this vulnerability by sending maliciously crafted HTTP requests to a vulnerable endpoint with multiple requests included inside the body by manipulating the `Content-Length` of the request. The smuggling of HTTP requests may allow for the bypass of security tools such as web application firewalls (WAFs) and intrusion detection systems (IDSs)."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2023-40167 jetty-servlets 9.4.24.v20191120: wiremock 2.8.0: org.eclipse.jetty","partialFingerprints":{"ruleIdLocationHash/v1":"c4bcf97f5abfa668192a2c8d42a167556edf9be6e2be267921e92ee0459fe0d1"}},{"message":{"text":"Eclipse Jetty contains an improper neutralization of quoting syntax issue within the CGI servlet. This could allow an authenticated attacker to send a request to the CGI Servlet for a binary with a space in its name in order to manipulate the command structure and execute incorrect commands."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2023-36479 jetty-servlets 9.4.24.v20191120: wiremock 2.8.0: org.eclipse.jetty","partialFingerprints":{"ruleIdLocationHash/v1":"dc2c32c9cf35da50de41bc0493ee1001a7cec4335ff5598b91616f7248342c04"}},{"message":{"text":"Eclipse Jetty contains an improper authentication vulnerability. This could allow an authenticated attacker to bypass authentication after it has been rejected or revoked by the `LoginService` and make a request as if authenticated.\n\n**Note:** The vendor has stated that this issue impacts usages of the `jetty-openid` which have configured a nested `LoginService` and where that `LoginService` is capable of rejecting previously authenticated users."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2023-41900 jetty-servlets 9.4.24.v20191120: wiremock 2.8.0: org.eclipse.jetty","partialFingerprints":{"ruleIdLocationHash/v1":"f2feb9743c3adf1bdb30809a499ad851435e89a86569067e99859a96a465ac0c"}},{"message":{"text":"Eclipse Jetty is vulnerable to insufficient session expiry. This may result in sessions used on a shared computer persisting for longer than intended."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2021-34428 jetty-servlets 9.4.24.v20191120: wiremock 2.8.0: org.eclipse.jetty","partialFingerprints":{"ruleIdLocationHash/v1":"0c3a29841cc893f8d0cc195cc44200862a389fd728a207117ea9f0528033c94a"}},{"message":{"text":"Eclipse Jetty does not correctly handle invalid authority segments of HTTP URIs. An authenticated attacker could exploit this flaw by passing an invalid URI that contains an improper authority with no host so that it is interpreted as one with a host."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2022-2047 jetty-servlets 9.4.24.v20191120: wiremock 2.8.0: org.eclipse.jetty","partialFingerprints":{"ruleIdLocationHash/v1":"dd01298f8be35f79e155454e2837cd0f1f563dadb5a608662f5e41eb5a1b323c"}},{"message":{"text":"Apache ant is vulnerable to an arbitrary file write vulnerability via a directory traversal. An attacker could exploit this vulnerability by supplying the component with a maliciously crafted archive that, when unpacked, would cause an arbitrary file to be written to the file system."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"BDSA-2018-1836 ant-launcher 1.6.2: ant","partialFingerprints":{"ruleIdLocationHash/v1":"bc7e391675cbebe17ad3e02a3517e8ae268d821a7c5535686452ac9ee3c77ba2"}},{"message":{"text":"Apache Common Compress and Apache Ant are vulnerable to denial-of-service (DoS) conditions due to the potential worst-case performance of the `bzip2` compressing streams.\n\nAn attacker could supply a crafted input to the Common Compress or Ant `bzip2` tasks to cause a substantial amount of processing time to be used up processing the task."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"BDSA-2012-0078 ant-launcher 1.6.2: ant","partialFingerprints":{"ruleIdLocationHash/v1":"0e932b40edf9e76d3b51c79ad0b76c2ae71192a43eb5a9a41bc31f77d7fe5162"}},{"message":{"text":"Apache Ant is vulnerable to information disclosure due to the usage of a default temporary directory for several tasks. Some tasks may also allow the integrity of a build to be damaged."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2020-1945 ant-launcher 1.6.2: ant","partialFingerprints":{"ruleIdLocationHash/v1":"8a018b8a539efad81a1dce507a0abb104bec6482b9a9f36ebe5bca2fe70f3df7"}},{"message":{"text":"Apache Ant is vulnerable to information disclosure due to the usage of a default temporary directory for several tasks. Some tasks may also allow the integrity of a build to be damaged."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"BDSA-2020-2577 ant-launcher 1.6.2: ant","partialFingerprints":{"ruleIdLocationHash/v1":"affe9e222032b8b5ba81be94cd6db00d3bb2d2c0aa30e49d1d06798c2d792bc1"}},{"message":{"text":"Apache Ant is vulnerable to an out of memory error via a crafted `TAR` archive. An attacker could exploit this in order to cause as denial-of-service (DoS) condition.\n\n**Note:** Per the Vendor, \"Versions prior to 1.9.0 are not affected when reading tar archives.\"."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"BDSA-2021-2083 ant-launcher 1.6.2: ant","partialFingerprints":{"ruleIdLocationHash/v1":"c5fe92d8c21b7643c89fc93d53643b119982394be08a11e057633df904ee8058"}},{"message":{"text":"Apache Ant is vulnerable to an out of memory error via a crafted `ZIP` archive. An attacker could exploit this in order to cause as denial-of-service (DoS) condition."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"BDSA-2021-2085 ant-launcher 1.6.2: ant","partialFingerprints":{"ruleIdLocationHash/v1":"21fd1d492ff4e437e1e9382a0355fb1896759112f1eeed7bfce7ab58eb8f4b7d"}},{"message":{"text":"Pivotal Spring Framework through 5.3.16 suffers from a potential remote code execution (RCE) issue if used for Java deserialization of untrusted data. Depending on how the library is implemented within a product, this issue may or not occur, and authentication may be required. NOTE: the vendor's position is that untrusted data is not an intended use case. The product's behavior will not be changed because some users rely on deserialization of trusted data."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2016-1000027 spring-web 5.2.2.RELEASE: spring-boot-starter-web 2.2.2.RELEASE: org.springframework","partialFingerprints":{"ruleIdLocationHash/v1":"66cb5964785296484a4f02cf217024d6b0a53b8acb1045498516aeabba03d595"}},{"message":{"text":"Spring Framework is vulnerable to a flaw in the access restrictions to the security sensitive `ClassLoader` property. The restrictions can be bypassed through alternative paths available with Java9 and later. An attacker can leverage this vulnerability to cause remote code execution (RCE).\n\n**Note** this issue exists because the restrictions that were introduced to prevent exploitation of BDSA-2010-0001 (CVE-2010-1622) can be bypassed on platforms where Java9 and later are in use.\n\nThis vulnerability is listed as exploitable by the Cybersecurity \u0026 Infrastructure Security Agency in their [Known Exploited Vulnerabilities Catalog](https://www.cisa.gov/known-exploited-vulnerabilities-catalog)."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2022-22965 spring-web 5.2.2.RELEASE: spring-boot-starter-web 2.2.2.RELEASE: org.springframework","partialFingerprints":{"ruleIdLocationHash/v1":"2d3a603f978a0cbc352f6e538211c0b0cac66a6b286941673e9df4862a3b4cca"}},{"message":{"text":"Spring Framework is vulnerable to cross-site request forgery (CSRF) attacks via CORS preflight requests which target Spring MVC or Spring WebFlux endpoints."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2020-5397 spring-web 5.2.2.RELEASE: spring-boot-starter-web 2.2.2.RELEASE: org.springframework","partialFingerprints":{"ruleIdLocationHash/v1":"769460611da525aba0129f8b9386fa5b05db75d3327aa49cfe060210dbe99213"}},{"message":{"text":"Software systems using Spring Framework may be vulnerable to unsafe deserialization if they employ unsafe use of certain provided deserialization functionality. A remote attacker could potentially execute arbitrary code on a vulnerable endpoint by passing a maliciously crafted serialized object to that endpoint.\n\n**Note**: This issue only affects software that has been written to leverage specific deserialization functionality provided by the Spring Framework without sanitization."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"BDSA-2022-0847 spring-web 5.2.2.RELEASE: spring-boot-starter-web 2.2.2.RELEASE: org.springframework","partialFingerprints":{"ruleIdLocationHash/v1":"2aa1b75906f7a8f45b85e1ed02d95f6387502a026e4161a559c27f3e9e2e0c10"}},{"message":{"text":"Spring Framework is vulnerable to a reflected file download (RFD) attack via improper input validation on filenames in a `Content-Disposition` header."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2020-5398 spring-web 5.2.2.RELEASE: spring-boot-starter-web 2.2.2.RELEASE: org.springframework","partialFingerprints":{"ruleIdLocationHash/v1":"5d778c107b44785ad1a47e975eaa92090a60f98e833e9003b8d4a725201b8542"}},{"message":{"text":"Spring Framework is vulnerable to log file injection due to the insufficient validation of user input in an undisclosed component. An attacker could leverage this issue in order to add arbitrary entries to a log file which could impact both the integrity issues and performance issues.\n\n**Note**: a follow-up to this issue was disclosed as **CVE-2021-22060** (**BDSA-2021-3236**), with further fixed releases that protect against additional types of input and in more places of the Spring Framework codebase."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2021-22096 spring-web 5.2.2.RELEASE: spring-boot-starter-web 2.2.2.RELEASE: org.springframework","partialFingerprints":{"ruleIdLocationHash/v1":"adb676acf586b676a3efab940a81727dd935aeb39753f4fe2a2d225598edff61"}},{"message":{"text":"Spring Framework is vulnerable to log file injection due to the insufficient validation of user input in an undisclosed component. An attacker could leverage this issue in order to add arbitrary entries to a log file which could impact both the integrity issues and performance issues.\n\n**Note**: the vendor states this issue exists as a follow up to CVE-2021-22096 (BDSA-2022-0011) that protects against additional types of input and in more places of the Spring Framework codebase."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2021-22060 spring-web 5.2.2.RELEASE: spring-boot-starter-web 2.2.2.RELEASE: org.springframework","partialFingerprints":{"ruleIdLocationHash/v1":"a9ae2779d8c0dad03d8f5ae0b65914a7703a516cc4dd362984c352eb8a7dddf3"}},{"message":{"text":"Spring-Framework's spring-expression is vulnerable to a denial-of-service (DoS) condition. This allows an attacker to use crafted input to cause the spring-expression process to crash due to an exception."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2022-22950 spring-web 5.2.2.RELEASE: spring-boot-starter-web 2.2.2.RELEASE: org.springframework","partialFingerprints":{"ruleIdLocationHash/v1":"4d28b13a4b6b36f5a33b19b10f713dc0120e58f18af5ff4e269199459d852203"}},{"message":{"text":"Spring Framework is vulnerable to privilege escalation due to the creation of unsafe temporary directories by the WebFlux component. A local authenticated attacker could modify arbitrary files via maliciously crafted `multipart` requests. \n\nThis vulnerability does not affect Spring MVC applications, or applications that do not handle `multipart` file requests."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2021-22118 spring-web 5.2.2.RELEASE: spring-boot-starter-web 2.2.2.RELEASE: org.springframework","partialFingerprints":{"ruleIdLocationHash/v1":"56c0afce1279b343d11f92f23f4268a34d3b9e6c4a84ee4b9be2a61fad08538a"}},{"message":{"text":"Spring Framework is vulnerable to denial-of-service (DoS) due to the improper implementation of data binding functionality. A remote attacker could cause a vulnerable server to crash if that server provides file upload functionality."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2022-22970 spring-web 5.2.2.RELEASE: spring-boot-starter-web 2.2.2.RELEASE: org.springframework","partialFingerprints":{"ruleIdLocationHash/v1":"40da09c5e82a9a64e959ca264fda02b2cf46605ab7faa4cc6143ad7e07eef45c"}},{"message":{"text":"Spring Framework is vulnerable to denial-of-service (DoS) due to the improper handling of the STOMP protocol for websockets. A remote authenticated attacker could leverage this issue in order to cause a server to crash."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2022-22971 spring-web 5.2.2.RELEASE: spring-boot-starter-web 2.2.2.RELEASE: org.springframework","partialFingerprints":{"ruleIdLocationHash/v1":"39591f3cb3c06afb9384896693f4ef1e10eecea3182ab84176f3bb5d8ff13a82"}},{"message":{"text":"Spring Framework is vulnerable to denial-of-service (DoS) via specially crafted SpEL expressions. An attacker could exploit this issue by passing a crafted SpEL expression to the application which may result in a crash."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2023-20861 spring-web 5.2.2.RELEASE: spring-boot-starter-web 2.2.2.RELEASE: org.springframework","partialFingerprints":{"ruleIdLocationHash/v1":"f27c2e42dc78e3055baebefa5962737e3d1e530023402ce5cdfa1d442702bd28"}},{"message":{"text":"Spring Framework is vulnerable to denial-of-service (DoS) via specially crafted SpEL expressions."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2023-20863 spring-web 5.2.2.RELEASE: spring-boot-starter-web 2.2.2.RELEASE: org.springframework","partialFingerprints":{"ruleIdLocationHash/v1":"656d2916ddf249bcdac08acbc36035751b9718bbcb115291ea0712eb50352162"}},{"message":{"text":"It was discovered that Spring Framework was vulnerable to RFD protection bypass. In some instances, depending on the browser used, an attacker could bypass the RFD attack protections via the use of a `jsessionid` path parameter."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2020-5421 spring-web 5.2.2.RELEASE: spring-boot-starter-web 2.2.2.RELEASE: org.springframework","partialFingerprints":{"ruleIdLocationHash/v1":"0cfc99aa53cc3a76e38d57781db7d0256bcdc8d9befb96d8c2d789935c1d6d0b"}},{"message":{"text":"Spring Framework is vulnerable to data binding protection bypass due to improper validation of specified disallowed fields in `DataBinders`. This could be leveraged by an attacker to bypass the suggested workaround to **CVE-2022-22965** (**BDSA-2022-0858**) if it is improperly implemented."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2022-22968 spring-web 5.2.2.RELEASE: spring-boot-starter-web 2.2.2.RELEASE: org.springframework","partialFingerprints":{"ruleIdLocationHash/v1":"2de88eeac320ad4d3e0b0371258f61fb8baf9acf50e944f97c2a0e276da91f55"}},{"message":{"text":"Pivotal Spring Framework through 5.3.16 suffers from a potential remote code execution (RCE) issue if used for Java deserialization of untrusted data. Depending on how the library is implemented within a product, this issue may or not occur, and authentication may be required. NOTE: the vendor's position is that untrusted data is not an intended use case. The product's behavior will not be changed because some users rely on deserialization of trusted data."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2016-1000027 spring-tx 5.2.2.RELEASE: spring-boot-starter-data-jpa 2.2.2.RELEASE: org.springframework","partialFingerprints":{"ruleIdLocationHash/v1":"a978babc0e312fe80cff0a1f266fb90deb39d612105172acb57457584ff8a228"}},{"message":{"text":"Spring Framework is vulnerable to a flaw in the access restrictions to the security sensitive `ClassLoader` property. The restrictions can be bypassed through alternative paths available with Java9 and later. An attacker can leverage this vulnerability to cause remote code execution (RCE).\n\n**Note** this issue exists because the restrictions that were introduced to prevent exploitation of BDSA-2010-0001 (CVE-2010-1622) can be bypassed on platforms where Java9 and later are in use.\n\nThis vulnerability is listed as exploitable by the Cybersecurity \u0026 Infrastructure Security Agency in their [Known Exploited Vulnerabilities Catalog](https://www.cisa.gov/known-exploited-vulnerabilities-catalog)."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2022-22965 spring-tx 5.2.2.RELEASE: spring-boot-starter-data-jpa 2.2.2.RELEASE: org.springframework","partialFingerprints":{"ruleIdLocationHash/v1":"c1e7a9e524061b9a596f1af26b53cf0f9c361fccdfd0574dce407483577adff4"}},{"message":{"text":"Spring Framework is vulnerable to cross-site request forgery (CSRF) attacks via CORS preflight requests which target Spring MVC or Spring WebFlux endpoints."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2020-5397 spring-tx 5.2.2.RELEASE: spring-boot-starter-data-jpa 2.2.2.RELEASE: org.springframework","partialFingerprints":{"ruleIdLocationHash/v1":"23b24aacbae117cc931e1b78d79d87291c5254bd634573e1e89bf351721b1a00"}},{"message":{"text":"Software systems using Spring Framework may be vulnerable to unsafe deserialization if they employ unsafe use of certain provided deserialization functionality. A remote attacker could potentially execute arbitrary code on a vulnerable endpoint by passing a maliciously crafted serialized object to that endpoint.\n\n**Note**: This issue only affects software that has been written to leverage specific deserialization functionality provided by the Spring Framework without sanitization."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"BDSA-2022-0847 spring-tx 5.2.2.RELEASE: spring-boot-starter-data-jpa 2.2.2.RELEASE: org.springframework","partialFingerprints":{"ruleIdLocationHash/v1":"d4725dd9801d7c406956d611f15d9fb83cf33dcbc70a3006a2359d76872a5c75"}},{"message":{"text":"Spring Framework is vulnerable to a reflected file download (RFD) attack via improper input validation on filenames in a `Content-Disposition` header."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2020-5398 spring-tx 5.2.2.RELEASE: spring-boot-starter-data-jpa 2.2.2.RELEASE: org.springframework","partialFingerprints":{"ruleIdLocationHash/v1":"366a586e4dd1c4f9752f40a2c910ed0ee7a326f0a4676110d3451c1f9183a9d0"}},{"message":{"text":"Spring Framework is vulnerable to log file injection due to the insufficient validation of user input in an undisclosed component. An attacker could leverage this issue in order to add arbitrary entries to a log file which could impact both the integrity issues and performance issues.\n\n**Note**: a follow-up to this issue was disclosed as **CVE-2021-22060** (**BDSA-2021-3236**), with further fixed releases that protect against additional types of input and in more places of the Spring Framework codebase."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2021-22096 spring-tx 5.2.2.RELEASE: spring-boot-starter-data-jpa 2.2.2.RELEASE: org.springframework","partialFingerprints":{"ruleIdLocationHash/v1":"2149d71c2ce893dcdb7edf2e70bfa6db9cbe96e401960db9630b72039b7b83b9"}},{"message":{"text":"Spring Framework is vulnerable to log file injection due to the insufficient validation of user input in an undisclosed component. An attacker could leverage this issue in order to add arbitrary entries to a log file which could impact both the integrity issues and performance issues.\n\n**Note**: the vendor states this issue exists as a follow up to CVE-2021-22096 (BDSA-2022-0011) that protects against additional types of input and in more places of the Spring Framework codebase."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2021-22060 spring-tx 5.2.2.RELEASE: spring-boot-starter-data-jpa 2.2.2.RELEASE: org.springframework","partialFingerprints":{"ruleIdLocationHash/v1":"a90d6c826ca6934592cc7676c6e6d274a1a99372aaaea1d9b33c141a8ea734e5"}},{"message":{"text":"Spring-Framework's spring-expression is vulnerable to a denial-of-service (DoS) condition. This allows an attacker to use crafted input to cause the spring-expression process to crash due to an exception."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2022-22950 spring-tx 5.2.2.RELEASE: spring-boot-starter-data-jpa 2.2.2.RELEASE: org.springframework","partialFingerprints":{"ruleIdLocationHash/v1":"47c67e6a0c12672df4ce99ccb540abcd5566313725aacf066d847ba984a74b2d"}},{"message":{"text":"Spring Framework is vulnerable to privilege escalation due to the creation of unsafe temporary directories by the WebFlux component. A local authenticated attacker could modify arbitrary files via maliciously crafted `multipart` requests. \n\nThis vulnerability does not affect Spring MVC applications, or applications that do not handle `multipart` file requests."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2021-22118 spring-tx 5.2.2.RELEASE: spring-boot-starter-data-jpa 2.2.2.RELEASE: org.springframework","partialFingerprints":{"ruleIdLocationHash/v1":"b205021ba26b247272ab0d2f4eee00f14ce7a884d5c46004f2ad10187ac999ab"}},{"message":{"text":"Spring Framework is vulnerable to denial-of-service (DoS) due to the improper implementation of data binding functionality. A remote attacker could cause a vulnerable server to crash if that server provides file upload functionality."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2022-22970 spring-tx 5.2.2.RELEASE: spring-boot-starter-data-jpa 2.2.2.RELEASE: org.springframework","partialFingerprints":{"ruleIdLocationHash/v1":"4cfba77b3925f5a92d68b2582298064bf700152b755683a06a382ab224ba4c99"}},{"message":{"text":"Spring Framework is vulnerable to denial-of-service (DoS) due to the improper handling of the STOMP protocol for websockets. A remote authenticated attacker could leverage this issue in order to cause a server to crash."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2022-22971 spring-tx 5.2.2.RELEASE: spring-boot-starter-data-jpa 2.2.2.RELEASE: org.springframework","partialFingerprints":{"ruleIdLocationHash/v1":"333a4559cfdaacdefe311011295af994ccb77640a2e954356d06e2f9b463cce9"}},{"message":{"text":"Spring Framework is vulnerable to denial-of-service (DoS) via specially crafted SpEL expressions. An attacker could exploit this issue by passing a crafted SpEL expression to the application which may result in a crash."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2023-20861 spring-tx 5.2.2.RELEASE: spring-boot-starter-data-jpa 2.2.2.RELEASE: org.springframework","partialFingerprints":{"ruleIdLocationHash/v1":"21c9d9d490cffa57b282bbd347b6ca135e998366b6d46152b358b097ef9d793e"}},{"message":{"text":"Spring Framework is vulnerable to denial-of-service (DoS) via specially crafted SpEL expressions."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2023-20863 spring-tx 5.2.2.RELEASE: spring-boot-starter-data-jpa 2.2.2.RELEASE: org.springframework","partialFingerprints":{"ruleIdLocationHash/v1":"174cff187ac18fd530912f21dfa902f088bba75ea1da147b0b112b98f4765343"}},{"message":{"text":"It was discovered that Spring Framework was vulnerable to RFD protection bypass. In some instances, depending on the browser used, an attacker could bypass the RFD attack protections via the use of a `jsessionid` path parameter."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2020-5421 spring-tx 5.2.2.RELEASE: spring-boot-starter-data-jpa 2.2.2.RELEASE: org.springframework","partialFingerprints":{"ruleIdLocationHash/v1":"900f9bd76d7a64fbfa48a0430e009b0ad66bb7e9f1a306e072d60a373d2cde6c"}},{"message":{"text":"Spring Framework is vulnerable to data binding protection bypass due to improper validation of specified disallowed fields in `DataBinders`. This could be leveraged by an attacker to bypass the suggested workaround to **CVE-2022-22965** (**BDSA-2022-0858**) if it is improperly implemented."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2022-22968 spring-tx 5.2.2.RELEASE: spring-boot-starter-data-jpa 2.2.2.RELEASE: org.springframework","partialFingerprints":{"ruleIdLocationHash/v1":"3eb060d10d5b92e52f2163da593ee5e905d4413532958af6fcf8092b09fc42b5"}},{"message":{"text":"Hibernate ORM is vulnerable to SQL injection due to the unsafe implementation of comments that are intended for debugging purposes. A remote attacker could potentially recover, modify or delete sensitive information that resides in back-end databases by submitting crafted requests that abuse these comments. It should be noted that only instances of Hibernate ORM that use a non-default configuration are affected."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2020-25638 hibernate-core 5.4.9.Final: spring-boot-starter-data-jpa 2.2.2.RELEASE: org.hibernate","partialFingerprints":{"ruleIdLocationHash/v1":"cf3d989a06acbfa26b635fa715215ff94454a13c0579bf06508997ffe620351d"}},{"message":{"text":"Hibernate ORM is vulnerable to SQL injection (SQLi) due to insufficient validation of user-controlled input. An attacker may be able to obtain unauthorized information from the database by executing arbitrary SQL commands."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2019-14900 hibernate-core 5.4.9.Final: spring-boot-starter-data-jpa 2.2.2.RELEASE: org.hibernate","partialFingerprints":{"ruleIdLocationHash/v1":"df6dee7d68481c556083de7003a963b70b1e509a46e39cfb81c01358336a8072"}},{"message":{"text":"Apache Log4j, as used in many popular services, is vulnerable to improperly allowing lightweight directory access protocol (LDAP) access via Java naming and directory interface (JNDI). A remote attacker able to supply the end application with specially crafted input that is then processed by the Log4j subcomponent could cause the execution of arbitrary Java code.\n\n**Note** \n\n- log4j-api packages by themselves do not contain the vulnerable functionality and are therefore unaffected. log4j-core packages and the upstream overarching source repository are affected.\n\n- A previously suggested mitigation of setting environment variable `LOG4J_FORMAT_MSG_NO_LOOKUPS=true` is not recommended. This mitigation has been proven inadequate against this vulnerability. \n\n- This vulnerability is partially fixed in [**2.15.0-rc2**](https://github.com/apache/logging-log4j2/releases/tag/log4j-2.15.0-rc2) by [this](https://github.com/apache/logging-log4j2/commit/001aaada7dab82c3c09cde5f8e14245dc9d8b454) commit and [this](https://github.com/apache/logging-log4j2/commit/bac0d8a35c7e354a0d3f706569116dff6c6bd658) commit. These fixes were deemed incomplete. See BDSA-2021-3779 (CVE-2021-45046) for more details.\n\nThis vulnerability is listed as exploitable by the Cybersecurity \u0026 Infrastructure Security Agency in their [Known Exploited Vulnerabilities Catalog](https://www.cisa.gov/known-exploited-vulnerabilities-catalog)."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"BDSA-2021-3731 spring-boot-starter-jdbc 2.2.2.RELEASE: spring-boot-starter-data-jpa 2.2.2.RELEASE: org.springframework.boot","partialFingerprints":{"ruleIdLocationHash/v1":"40650b944b88dd98d09830a9ec11ed2ff315e7649bf5e5e2281966c626a18258"}},{"message":{"text":"Spring Framework is vulnerable to a flaw in the access restrictions to the security sensitive `ClassLoader` property. The restrictions can be bypassed through alternative paths available with Java9 and later. An attacker can leverage this vulnerability to cause remote code execution (RCE).\n\n**Note** this issue exists because the restrictions that were introduced to prevent exploitation of BDSA-2010-0001 (CVE-2010-1622) can be bypassed on platforms where Java9 and later are in use.\n\nThis vulnerability is listed as exploitable by the Cybersecurity \u0026 Infrastructure Security Agency in their [Known Exploited Vulnerabilities Catalog](https://www.cisa.gov/known-exploited-vulnerabilities-catalog)."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2022-22965 spring-boot-starter-jdbc 2.2.2.RELEASE: spring-boot-starter-data-jpa 2.2.2.RELEASE: org.springframework.boot","partialFingerprints":{"ruleIdLocationHash/v1":"fb2a510d3573cefb69a030d4debf03b236a8cd6404870a0c58e8141158e78f81"}},{"message":{"text":"Spring framework contains a security bypass vulnerability when `/**` is used as a pattern in Spring Security configuration with the `/cloudfoundryapplication/**` component. The potential for security bypass exists due to the mismatch in pattern matching between Spring Security and Cloud Foundry.\n\n**Note**: The vendor has stated in their [advisory](https://spring.io/security/cve-2023-20873) that this application is not vulnerable if any of the following is true:\n* The application is not deployed to Cloud Foundry.\n* You have disabled Cloud Foundry actuator endpoints with `management.cloudfoundry.enabled` set to `false`.\n* Your application does not have handler mappings that can handle requests to `/cloudfoundryapplication/**`."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2023-20873 spring-boot-starter-jdbc 2.2.2.RELEASE: spring-boot-starter-data-jpa 2.2.2.RELEASE: org.springframework.boot","partialFingerprints":{"ruleIdLocationHash/v1":"ab9b31b4a5db75fd7de205dd1cceaa1a51869bdb8ca266f1c75b6bce3ffb06bd"}},{"message":{"text":"Apache log4j is vulnerable to a denial-of-service (DoS) when uncontrolled recursion occurs through a self-referencing lookup.  An attacker can trigger a DoS with malicious input data that generates a recursive lookup  and consequent application crash.\n\nSuccessful attacks require the attacker to have access to Thread Context Map (MDC) input, and for log4j configured with non-default pattern layout with a Context Lookup.\n\nOnly the log4j-core JAR file is impacted by this vulnerability. Applications using only the log4j-api JAR file without the log4j-core JAR file are not impacted.\n\nApache Log4j is the only Logging Services subproject affected by this vulnerability. Other projects like Log4net  are not impacted."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"BDSA-2021-3817 spring-boot-starter-jdbc 2.2.2.RELEASE: spring-boot-starter-data-jpa 2.2.2.RELEASE: org.springframework.boot","partialFingerprints":{"ruleIdLocationHash/v1":"eaef611415aae40b7fa1002b50c535b7202fe3f4f227dc3ec3c84e5042e42f6a"}},{"message":{"text":"Apache Log4j contains a remote code execution (RCE) vulnerability. This allows an attacker that has permissions to modify the logging configuration files to input a malicious JDBC Appender with a data source referencing a JDNI URI. This can then lead to RCE.\n\n**Note:** This vulnerability impacts log4j-core."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"BDSA-2021-3887 spring-boot-starter-jdbc 2.2.2.RELEASE: spring-boot-starter-data-jpa 2.2.2.RELEASE: org.springframework.boot","partialFingerprints":{"ruleIdLocationHash/v1":"521d8b8f74feda1b7f30a0f0c7229050fde8f68effaeaec74e31513d4a12782b"}},{"message":{"text":"Spring Boot is vulnerable to privilege escalation due to a race condition which occurs during the creation of a temporary directory. A local attacker could create their own temporary directory by racing against Spring Boot and supply their own configuration files which would allow for the full takeover of the application."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2022-27772 spring-boot-starter-jdbc 2.2.2.RELEASE: spring-boot-starter-data-jpa 2.2.2.RELEASE: org.springframework.boot","partialFingerprints":{"ruleIdLocationHash/v1":"20a324a19f8c0cb0c117571b536ac37adc52422b56ac57ac9540b26d6631e40a"}},{"message":{"text":"Spring Boot is vulnerable to denial-of-service (DoS) via the welcome page when used to serve an application behind a reverse proxy cache. This will cause users to continuously be served a 404 response, preventing standard application use.\n\n\n**Note:** Spring have provided the following guidance for vulnerable criteria. \nAn application is vulnerable if all of the following are true:\n\n- \"The application has Spring MVC auto-configuration enabled. This is the case by default if Spring MVC is on the classpath.\"\n- \"The application makes use of Spring Boot's welcome page support, either static or templated.\"\n- \"Your application is deployed behind a proxy which caches 404 responses.\"\n\nThe application is not vulnerable if any of the following are true:\n\n- \"Spring MVC auto-configuration is disabled. This is true if `WebMvcAutoConfiguration` is explicitly excluded, if Spring MVC is not on the classpath, or if `spring.main.web-application-type` is set to a value other than `SERVLET`.\"\n- \"The application does not use Spring Boot's welcome page support.\"\n- \"You do not have a proxy which caches 404 responses.\""},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2023-20883 spring-boot-starter-jdbc 2.2.2.RELEASE: spring-boot-starter-data-jpa 2.2.2.RELEASE: org.springframework.boot","partialFingerprints":{"ruleIdLocationHash/v1":"a9a91982f5a170a46ec7c9c41483e690c5b07f54e6790093d31c4109c58fb673"}},{"message":{"text":"Spring Boot is vulnerable to denial-of-service (DoS). An unauthenticated user could trigger the vulnerability by providing specially crafted HTTP requests to a web metrics endpoint."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2023-34055 spring-boot-starter-jdbc 2.2.2.RELEASE: spring-boot-starter-data-jpa 2.2.2.RELEASE: org.springframework.boot","partialFingerprints":{"ruleIdLocationHash/v1":"e8119caa37fa1e2e6898fbbc7739b5805907827b8aec026bd0b0c064fb296efb"}},{"message":{"text":"A flaw was found in XNIO, specifically in the notifyReadClosed method. The issue revealed this method was logging a message to another expected end. This flaw allows an attacker to send flawed requests to a server, possibly causing log contention-related performance concerns or an unwanted disk fill-up."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2022-0084 xnio-nio 3.3.8.Final: spring-boot-starter-undertow 2.2.2.RELEASE: org.jboss.xnio","partialFingerprints":{"ruleIdLocationHash/v1":"3d3107329e25f265775385e2e20d889fc19c75e3e224f5c9ef626e6c9efadbf0"}},{"message":{"text":"Jetty is vulnerable to temporary directory Hijacking via a race condition. If code is executed from this temporary directory it can lead to local privilege escalation."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2020-27216 jetty-xml 9.4.24.v20191120: wiremock 2.8.0: org.eclipse.jetty","partialFingerprints":{"ruleIdLocationHash/v1":"d7218cfba20a103b9e51e13edfc1cec51b527a06ca96139ec0ec64b2ee73459a"}},{"message":{"text":"The HTTP/2 protocol contains a flaw related to the stream multiplexing feature that can allow for excessive resource consumption on servers operating implementations of the HTTP/2 protocol. \n\nThe HTTP/2 protocol allows clients to signal to a server to cancel a previously opened stream by sending an `RST_STREAM` frame. Attackers can abuse this stream canceling ability by opening a large number of streams at once immediately followed by `RST_STREAM` frames. In most HTTP/2 implementations this bypasses concurrent open stream limits and causes servers to spend processing time first handling request frames and then performing stream tear downs. For the server, these operations can pile up whereas the attacker client paid minuscule bandwidth and processing costs.\n\n[Amazon](https://aws.amazon.com/security/security-bulletins/AWS-2023-011/), [Cloudflare](https://blog.cloudflare.com/technical-breakdown-http2-rapid-reset-ddos-attack/) and [Google](https://cloud.google.com/blog/products/identity-security/google-cloud-mitigated-largest-ddos-attack-peaking-above-398-million-rps/) have reported that this vulnerability has been exploited in the wild from August to October 2023.\n\nThis vulnerability is listed as exploitable by the Cybersecurity \u0026 Infrastructure Security Agency in their [Known Exploited Vulnerabilities Catalog](https://www.cisa.gov/known-exploited-vulnerabilities-catalog)."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2023-44487 jetty-xml 9.4.24.v20191120: wiremock 2.8.0: org.eclipse.jetty","partialFingerprints":{"ruleIdLocationHash/v1":"0477a9a5a5af800e37ea6af325b1f941e3f730f58297247cb2a3962058bdfb87"}},{"message":{"text":"Jetty is vulnerable to denial-of-service (DoS) due to the use of an exponential algorithm that can have excessive resource requirements. A remote attacker could cause a vulnerable server to become unresponsive by sending maliciously crafted HTTP requests to that server."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2020-27223 jetty-xml 9.4.24.v20191120: wiremock 2.8.0: org.eclipse.jetty","partialFingerprints":{"ruleIdLocationHash/v1":"f4db2f2b7227bde2902f1974541e84b956f9bbca51df1aa3e9d0bc0819848275"}},{"message":{"text":"Eclipse Jetty is vulnerable to Denial-of-Service (DoS) via invalid TLS frames. An attacker could exploit this by sending a TLS frame with a size in excess of 17408 resulting in excessive resource consumption leading to a DoS condition."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2021-28165 jetty-xml 9.4.24.v20191120: wiremock 2.8.0: org.eclipse.jetty","partialFingerprints":{"ruleIdLocationHash/v1":"9f531821be229aaa93b1631024a2525d9c132dec3ee4a69531c2c2003ba65288"}},{"message":{"text":"Jetty is vulnerable to information disclosure due to improper requested path verification. This allows crafted requests to access protected resources of the web application which, depending on the implementation, might reveal sensitive information."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2021-28169 jetty-xml 9.4.24.v20191120: wiremock 2.8.0: org.eclipse.jetty","partialFingerprints":{"ruleIdLocationHash/v1":"3a7263d06f8a1c2643d83911ee4e86b84708d1bdbfabbd3552f0edea7b2fc702"}},{"message":{"text":"Eclipse Jetty is vulnerable to a denial-of-service (DoS) issue due to presence of a user input validation flaw in the HTTP/2 HPACK functionality that can lead to an integer overflow and allow HPACK headers to exceed their expected size limits.\n\nAn attacker could submit crafted HTTP messages that trigger the integer overflow flaw and cause large buffers to be allocated on the server, consuming memory resources in a manner that could cause the server to run out of memory."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2023-36478 jetty-xml 9.4.24.v20191120: wiremock 2.8.0: org.eclipse.jetty","partialFingerprints":{"ruleIdLocationHash/v1":"9fe87a0c613304aa45573337f8933164c3b21d0c884a7dee59567630bd9a0ddd"}},{"message":{"text":"Eclipse Jetty does not correctly handle invalid HTTP/2 requests. An attacker could exploit this flaw to exhaust the HTTP/2 flow control window or TCP congest the connection. This will cause the relevant selector threads to be blocked and it will lead to a denial-of-service (DoS)."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2022-2048 jetty-xml 9.4.24.v20191120: wiremock 2.8.0: org.eclipse.jetty","partialFingerprints":{"ruleIdLocationHash/v1":"005ec9e8bfbf8ba936dc99107d5083d0f80f5ead05e8b0bae1884af5f1370c5a"}},{"message":{"text":"Eclipse Jetty contains a vulnerability that allows a remote attacker to inject data into other client's requests. This vulnerability only exists when GZIP request body inflation is enabled, and requests from different clients are multiplexed onto a single connection."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2020-27218 jetty-xml 9.4.24.v20191120: wiremock 2.8.0: org.eclipse.jetty","partialFingerprints":{"ruleIdLocationHash/v1":"25d98d4506edb750fdeb724b6c9da96863946833bcd74f1ea4d1daeb48a65bc7"}},{"message":{"text":"Eclipse Jetty contains a vulnerability in its multipart request parsing mechanism that can lead to an out-of-memory error due to insufficient limiting measures. An attacker can exploit this flaw by supplying a request containing a large multipart without a filename in order to cause a denial-of-service (DoS)."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2023-26048 jetty-xml 9.4.24.v20191120: wiremock 2.8.0: org.eclipse.jetty","partialFingerprints":{"ruleIdLocationHash/v1":"9e28dfd5221f5c18e01586d0e1d488987fd194fb52243fcb420f6be8e852c56f"}},{"message":{"text":"Eclipse Jetty does not properly parse quoted values in cookies. This could allow an attacker to smuggle cookies within other cookies into the application. The attacker can also tamper with the cookie parsing mechanism and cause other unintended behavior."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2023-26049 jetty-xml 9.4.24.v20191120: wiremock 2.8.0: org.eclipse.jetty","partialFingerprints":{"ruleIdLocationHash/v1":"93800b2f03e6ac4881b61365300544d872b6c8dea874d9e6a0ef37f59817329d"}},{"message":{"text":"Eclipse Jetty is vulnerable to HTTP request smuggling due to the improper parsing of HTTP requests. An attacker could exploit this vulnerability by sending maliciously crafted HTTP requests to a vulnerable endpoint with multiple requests included inside the body by manipulating the `Content-Length` of the request. The smuggling of HTTP requests may allow for the bypass of security tools such as web application firewalls (WAFs) and intrusion detection systems (IDSs)."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2023-40167 jetty-xml 9.4.24.v20191120: wiremock 2.8.0: org.eclipse.jetty","partialFingerprints":{"ruleIdLocationHash/v1":"989c1e345d45522b28e13c2f4ee56a690782044d68bffd6b2ae78b03da76938a"}},{"message":{"text":"Eclipse Jetty contains an improper neutralization of quoting syntax issue within the CGI servlet. This could allow an authenticated attacker to send a request to the CGI Servlet for a binary with a space in its name in order to manipulate the command structure and execute incorrect commands."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2023-36479 jetty-xml 9.4.24.v20191120: wiremock 2.8.0: org.eclipse.jetty","partialFingerprints":{"ruleIdLocationHash/v1":"7649dafe37c3c697db9a936bd1923cb8a41863220c816a2e1bf24a2255832213"}},{"message":{"text":"Eclipse Jetty contains an improper authentication vulnerability. This could allow an authenticated attacker to bypass authentication after it has been rejected or revoked by the `LoginService` and make a request as if authenticated.\n\n**Note:** The vendor has stated that this issue impacts usages of the `jetty-openid` which have configured a nested `LoginService` and where that `LoginService` is capable of rejecting previously authenticated users."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2023-41900 jetty-xml 9.4.24.v20191120: wiremock 2.8.0: org.eclipse.jetty","partialFingerprints":{"ruleIdLocationHash/v1":"8372c3207c89371e4ed7354fa54238f765a55956b709dff13f363201c833aa02"}},{"message":{"text":"Eclipse Jetty is vulnerable to insufficient session expiry. This may result in sessions used on a shared computer persisting for longer than intended."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2021-34428 jetty-xml 9.4.24.v20191120: wiremock 2.8.0: org.eclipse.jetty","partialFingerprints":{"ruleIdLocationHash/v1":"10b228d0eae787885478610c7db3dffe24660dc678b8ad7f56c34067e5499007"}},{"message":{"text":"Eclipse Jetty does not correctly handle invalid authority segments of HTTP URIs. An authenticated attacker could exploit this flaw by passing an invalid URI that contains an improper authority with no host so that it is interpreted as one with a host."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2022-2047 jetty-xml 9.4.24.v20191120: wiremock 2.8.0: org.eclipse.jetty","partialFingerprints":{"ruleIdLocationHash/v1":"5b37322ea286b9915d18c1d6c12ff18f779af21cc237d2cf965b017a7ae95fb8"}},{"message":{"text":"Apache ant is vulnerable to an arbitrary file write vulnerability via a directory traversal. An attacker could exploit this vulnerability by supplying the component with a maliciously crafted archive that, when unpacked, would cause an arbitrary file to be written to the file system."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"BDSA-2018-1836 ant 1.6.2: ant","partialFingerprints":{"ruleIdLocationHash/v1":"f80de81f8c3125b1c638dad996ca61b998359a76e404c38ea0dcec7a2ede6c15"}},{"message":{"text":"Apache Common Compress and Apache Ant are vulnerable to denial-of-service (DoS) conditions due to the potential worst-case performance of the `bzip2` compressing streams.\n\nAn attacker could supply a crafted input to the Common Compress or Ant `bzip2` tasks to cause a substantial amount of processing time to be used up processing the task."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"BDSA-2012-0078 ant 1.6.2: ant","partialFingerprints":{"ruleIdLocationHash/v1":"47ca09d6098fb14a7e0137377130bce3b309a849fc74a5aa12b8d076373c795d"}},{"message":{"text":"Apache Ant is vulnerable to information disclosure due to the usage of a default temporary directory for several tasks. Some tasks may also allow the integrity of a build to be damaged."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2020-1945 ant 1.6.2: ant","partialFingerprints":{"ruleIdLocationHash/v1":"242c0f3e503d6186803fef0fc53eccd2c5beea73e0eefd2a0c60193203d050de"}},{"message":{"text":"Apache Ant is vulnerable to information disclosure due to the usage of a default temporary directory for several tasks. Some tasks may also allow the integrity of a build to be damaged."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"BDSA-2020-2577 ant 1.6.2: ant","partialFingerprints":{"ruleIdLocationHash/v1":"5acb4c76f98cfd88b600dcdd7da69acbcc96b3f73d41d9a7683d15a90e14483e"}},{"message":{"text":"Apache Ant is vulnerable to an out of memory error via a crafted `TAR` archive. An attacker could exploit this in order to cause as denial-of-service (DoS) condition.\n\n**Note:** Per the Vendor, \"Versions prior to 1.9.0 are not affected when reading tar archives.\"."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"BDSA-2021-2083 ant 1.6.2: ant","partialFingerprints":{"ruleIdLocationHash/v1":"7467778d6cb1df6eb520583969978f6116a3feb2db97b48922f77c49041c0d69"}},{"message":{"text":"Apache Ant is vulnerable to an out of memory error via a crafted `ZIP` archive. An attacker could exploit this in order to cause as denial-of-service (DoS) condition."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"BDSA-2021-2085 ant 1.6.2: ant","partialFingerprints":{"ruleIdLocationHash/v1":"d49d3ec886918d9c9afd16ebbeafd0a948abe90888d879b8f1f217d09d34ebf1"}},{"message":{"text":"Apache Commons IO contains a path traversal vulnerability. Successfully exploiting this could allow an attacker access to files they do not have permission to view."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2021-29425 commons-io 2.6: commons-io","partialFingerprints":{"ruleIdLocationHash/v1":"346775cd13d6e18447089a23b0392335f394b3eca7a983ff70ea6f07ad2d0889"}},{"message":{"text":"In Spring Boot versions 3.0.0 - 3.0.5, 2.7.0 - 2.7.10, and older unsupported versions, an application that is deployed to Cloud Foundry could be susceptible to a security bypass. Users of affected versions should apply the following mitigation: 3.0.x users should upgrade to 3.0.6+. 2.7.x users should upgrade to 2.7.11+. Users of older, unsupported versions should upgrade to 3.0.6+ or 2.7.11+."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2023-20873 spring-boot-actuator-autoconfigure 2.2.2.RELEASE: spring-boot-starter-actuator 2.2.2.RELEASE: org.springframework.boot","partialFingerprints":{"ruleIdLocationHash/v1":"a4dd9a32b8dea535b00742245c49949a57d51804c005455d555e9b7bf26a0827"}},{"message":{"text":"Dom4j is vulnerable to XML external entities (XXE) attacks.  This is due to the XML parser expanding XML entities by default.  A remote attacker that is able to supply input to Dom4j may be able to send crafted XML input that can be used to obtain file, upload content, or cause an impact on the availability of a system."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2020-10683 dom4j 2.1.1: spring-boot-starter-data-jpa 2.2.2.RELEASE: org.dom4j","partialFingerprints":{"ruleIdLocationHash/v1":"16b79e9d1da4912b1dbf798e44d7d73a6c676f58ee0d32f1afcc98217c7636e9"}},{"message":{"text":"Apache Log4j, as used in many popular services, is vulnerable to improperly allowing lightweight directory access protocol (LDAP) access via Java naming and directory interface (JNDI). A remote attacker able to supply the end application with specially crafted input that is then processed by the Log4j subcomponent could cause the execution of arbitrary Java code.\n\n**Note** \n\n- log4j-api packages by themselves do not contain the vulnerable functionality and are therefore unaffected. log4j-core packages and the upstream overarching source repository are affected.\n\n- A previously suggested mitigation of setting environment variable `LOG4J_FORMAT_MSG_NO_LOOKUPS=true` is not recommended. This mitigation has been proven inadequate against this vulnerability. \n\n- This vulnerability is partially fixed in [**2.15.0-rc2**](https://github.com/apache/logging-log4j2/releases/tag/log4j-2.15.0-rc2) by [this](https://github.com/apache/logging-log4j2/commit/001aaada7dab82c3c09cde5f8e14245dc9d8b454) commit and [this](https://github.com/apache/logging-log4j2/commit/bac0d8a35c7e354a0d3f706569116dff6c6bd658) commit. These fixes were deemed incomplete. See BDSA-2021-3779 (CVE-2021-45046) for more details.\n\nThis vulnerability is listed as exploitable by the Cybersecurity \u0026 Infrastructure Security Agency in their [Known Exploited Vulnerabilities Catalog](https://www.cisa.gov/known-exploited-vulnerabilities-catalog)."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"BDSA-2021-3731 spring-boot-starter-security 2.2.2.RELEASE: org.springframework.boot","partialFingerprints":{"ruleIdLocationHash/v1":"fbe9f3a4e469b9e1d39d3d464154f870086495603060fa82832da7f0798dc037"}},{"message":{"text":"Spring Framework is vulnerable to a flaw in the access restrictions to the security sensitive `ClassLoader` property. The restrictions can be bypassed through alternative paths available with Java9 and later. An attacker can leverage this vulnerability to cause remote code execution (RCE).\n\n**Note** this issue exists because the restrictions that were introduced to prevent exploitation of BDSA-2010-0001 (CVE-2010-1622) can be bypassed on platforms where Java9 and later are in use.\n\nThis vulnerability is listed as exploitable by the Cybersecurity \u0026 Infrastructure Security Agency in their [Known Exploited Vulnerabilities Catalog](https://www.cisa.gov/known-exploited-vulnerabilities-catalog)."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2022-22965 spring-boot-starter-security 2.2.2.RELEASE: org.springframework.boot","partialFingerprints":{"ruleIdLocationHash/v1":"023f0dbfe47ad9af7a2e9364aaf2add64336fb584f48baf2d557ec1f3c6cac42"}},{"message":{"text":"Spring framework contains a security bypass vulnerability when `/**` is used as a pattern in Spring Security configuration with the `/cloudfoundryapplication/**` component. The potential for security bypass exists due to the mismatch in pattern matching between Spring Security and Cloud Foundry.\n\n**Note**: The vendor has stated in their [advisory](https://spring.io/security/cve-2023-20873) that this application is not vulnerable if any of the following is true:\n* The application is not deployed to Cloud Foundry.\n* You have disabled Cloud Foundry actuator endpoints with `management.cloudfoundry.enabled` set to `false`.\n* Your application does not have handler mappings that can handle requests to `/cloudfoundryapplication/**`."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2023-20873 spring-boot-starter-security 2.2.2.RELEASE: org.springframework.boot","partialFingerprints":{"ruleIdLocationHash/v1":"9e46f4f86cf708be9a38903ca67223e9c893d492d88c47b4d16557227e085967"}},{"message":{"text":"Apache log4j is vulnerable to a denial-of-service (DoS) when uncontrolled recursion occurs through a self-referencing lookup.  An attacker can trigger a DoS with malicious input data that generates a recursive lookup  and consequent application crash.\n\nSuccessful attacks require the attacker to have access to Thread Context Map (MDC) input, and for log4j configured with non-default pattern layout with a Context Lookup.\n\nOnly the log4j-core JAR file is impacted by this vulnerability. Applications using only the log4j-api JAR file without the log4j-core JAR file are not impacted.\n\nApache Log4j is the only Logging Services subproject affected by this vulnerability. Other projects like Log4net  are not impacted."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"BDSA-2021-3817 spring-boot-starter-security 2.2.2.RELEASE: org.springframework.boot","partialFingerprints":{"ruleIdLocationHash/v1":"c77460c7807931b1bc2eb426aca513f5354870094c82f37b2cf0144f94dbc579"}},{"message":{"text":"Apache Log4j contains a remote code execution (RCE) vulnerability. This allows an attacker that has permissions to modify the logging configuration files to input a malicious JDBC Appender with a data source referencing a JDNI URI. This can then lead to RCE.\n\n**Note:** This vulnerability impacts log4j-core."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"BDSA-2021-3887 spring-boot-starter-security 2.2.2.RELEASE: org.springframework.boot","partialFingerprints":{"ruleIdLocationHash/v1":"4ef96bff0bf2ea8941aa392d524c7560ce29ff9a0cfc33f0aba2b842b4785421"}},{"message":{"text":"Spring Boot is vulnerable to privilege escalation due to a race condition which occurs during the creation of a temporary directory. A local attacker could create their own temporary directory by racing against Spring Boot and supply their own configuration files which would allow for the full takeover of the application."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2022-27772 spring-boot-starter-security 2.2.2.RELEASE: org.springframework.boot","partialFingerprints":{"ruleIdLocationHash/v1":"ad52b9390d0f5664b531752d83b2e00a168150b373e0e668e6351b2f1d545467"}},{"message":{"text":"Spring Boot is vulnerable to denial-of-service (DoS) via the welcome page when used to serve an application behind a reverse proxy cache. This will cause users to continuously be served a 404 response, preventing standard application use.\n\n\n**Note:** Spring have provided the following guidance for vulnerable criteria. \nAn application is vulnerable if all of the following are true:\n\n- \"The application has Spring MVC auto-configuration enabled. This is the case by default if Spring MVC is on the classpath.\"\n- \"The application makes use of Spring Boot's welcome page support, either static or templated.\"\n- \"Your application is deployed behind a proxy which caches 404 responses.\"\n\nThe application is not vulnerable if any of the following are true:\n\n- \"Spring MVC auto-configuration is disabled. This is true if `WebMvcAutoConfiguration` is explicitly excluded, if Spring MVC is not on the classpath, or if `spring.main.web-application-type` is set to a value other than `SERVLET`.\"\n- \"The application does not use Spring Boot's welcome page support.\"\n- \"You do not have a proxy which caches 404 responses.\""},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2023-20883 spring-boot-starter-security 2.2.2.RELEASE: org.springframework.boot","partialFingerprints":{"ruleIdLocationHash/v1":"837466c173319035a4b92d2432387741b0e24d9e4ad9877342d42e7cab4e7fbe"}},{"message":{"text":"Spring Boot is vulnerable to denial-of-service (DoS). An unauthenticated user could trigger the vulnerability by providing specially crafted HTTP requests to a web metrics endpoint."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2023-34055 spring-boot-starter-security 2.2.2.RELEASE: org.springframework.boot","partialFingerprints":{"ruleIdLocationHash/v1":"1edb73193a70b7abbd522a5c54207ef2146a5fa32fa9fc949c80729824c5ad7b"}},{"message":{"text":"Spring Security contains a flaw when dealing with OAuth2 access token empty scope list  responses. A remote attacker could leverage this to escalate their privileges under **all** the following conditions being met:\n\n* They act as the role of a Login Client (e.g. uses `http.oauth2Login()`).\n* They use one or more authorization rules with authorities mapped from authorized scopes (e.g. `anyRequest().hasAuthority(\"SCOPE_message.write\")`) in the client application.\n* An authorization server that responds with empty scopes list is registered (RFC 6749, Section 5.1).\n\n**Note:** The role of Resource Servers (`http.oauth2ResourceServer()`) and applications that do not map authorization rules from authorized scopes (eg. `anyRequest().hasAuthority(\"ROLE_USER\")`) cannot be exploited by this vulnerability."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"BDSA-2022-3109 spring-security-web 5.2.1.RELEASE: spring-security-test 4.1.3.RELEASE: org.springframework.security","partialFingerprints":{"ruleIdLocationHash/v1":"6e2f7516cb98899c5af270f153f20a6366b7a6b425c03d17ee563e944d170f6c"}},{"message":{"text":"Spring Security used with Spring WebFlux performs incorrect parsing when using `**` as a pattern in Spring Security configuration due to inconsistent pattern matching between the two components. This could lead to bypassing of security mechanisms configured by Spring Security."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"BDSA-2023-1825 spring-security-web 5.2.1.RELEASE: spring-security-test 4.1.3.RELEASE: org.springframework.security","partialFingerprints":{"ruleIdLocationHash/v1":"e2dd9a26f3ccd39d8278b0a2fdd53e7f426cf5957adb04a55a9c80388c5f338c"}},{"message":{"text":"Spring Security is vulnerable to the bypassing of an authorization mechanism due to improperly implemented regular expression matching. A remote attacker could perform unauthorized actions on a vulnerable server by sending maliciously crafted requests to that server."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2022-22978 spring-security-web 5.2.1.RELEASE: spring-security-test 4.1.3.RELEASE: org.springframework.security","partialFingerprints":{"ruleIdLocationHash/v1":"ceebb7842f9561bef57a05b40ca7bd841e6718f3caf11d81c4410c1a4a1d4ad4"}},{"message":{"text":"Spring Security is vulnerable to privilege escalation due to a failure to correctly save security context information. An attacker who is allowed to use elevated privileges in a small portion of a program could extend those privileges to the entire program by sending maliciously crafted requests to the application.\n\nIt should be noted that the vulnerability is not present by default, and must be programmed in by an application developer."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2021-22112 spring-security-web 5.2.1.RELEASE: spring-security-test 4.1.3.RELEASE: org.springframework.security","partialFingerprints":{"ruleIdLocationHash/v1":"e23ffbac49d64251cd187339dd881664114e03a62808e594ed7cf0aa761071e8"}},{"message":{"text":"Spring Security contains an uncontrolled resource consumption vulnerability. Attackers could exploit this to create an `OutOfMemory` error and exhaust  system resources, triggering a denial-of-service (DoS) condition."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2021-22119 spring-security-web 5.2.1.RELEASE: spring-security-test 4.1.3.RELEASE: org.springframework.security","partialFingerprints":{"ruleIdLocationHash/v1":"9b7ffce51c441565d22c33cb491f1b7418d4631baef2c6efbcab82f7d2a1ebdb"}},{"message":{"text":"Spring Security is vulnerable to the weakening of bcrypt-generated password hashes due to an integer overflow. An attacker that is able to obtain weak password hashes that have been produced by a vulnerable application could potentially retrieve the plaintext password. It should be noted that the `BCryptPasswordEncoder` class must have been configured to use the maximum work factor (31) in order for the vulnerability to manifest. This is a non-default value."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2022-22976 spring-security-web 5.2.1.RELEASE: spring-security-test 4.1.3.RELEASE: org.springframework.security","partialFingerprints":{"ruleIdLocationHash/v1":"7f84c170269cd821fceabee918ab9660104323b98359ebccf68dc151da67769a"}},{"message":{"text":"Spring Security is vulnerable to authentication abuse due to the improper handling of SAML response validation. This could allow an attacker to inject arbitrary assertions into SAML responses."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2020-5407 spring-security-web 5.2.1.RELEASE: spring-security-test 4.1.3.RELEASE: org.springframework.security","partialFingerprints":{"ruleIdLocationHash/v1":"0a69e7b303864b2e6b1b6c8099ed51ac8fb41a48b9d114c4dd940dd7ea7d0cb5"}},{"message":{"text":"Spring Security is vulnerable to information exposure due to an insecure cryptographic mechanism in the queryable text encryptor. This could be leveraged by an attacker to derive sensitive information from encrypted text using dictionary attacks."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2020-5408 spring-security-web 5.2.1.RELEASE: spring-security-test 4.1.3.RELEASE: org.springframework.security","partialFingerprints":{"ruleIdLocationHash/v1":"e91bfc7f783222625fa20857e01cf35c7244d828ddb69ae0c0e38a0d896ff41f"}},{"message":{"text":"JUnit4 is vulnerable to information disclosure via the `TemporaryFolder` directory. A local user could exploit this vulnerability in order to read files and directories stored within this directory."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2020-15250 junit 4.12: junit","partialFingerprints":{"ruleIdLocationHash/v1":"eb1a41b406d65204dc9aebbc21059018aac8cebdd028c39cf7c5a88ddc600bfe"}},{"message":{"text":"Jetty is vulnerable to temporary directory Hijacking via a race condition. If code is executed from this temporary directory it can lead to local privilege escalation."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2020-27216 jetty-http 9.4.24.v20191120: wiremock 2.8.0: org.eclipse.jetty","partialFingerprints":{"ruleIdLocationHash/v1":"fd8fbc7a8062d9ccdf68e897a1ba10c666aeae123d285f9076625f935c7aeea5"}},{"message":{"text":"The HTTP/2 protocol contains a flaw related to the stream multiplexing feature that can allow for excessive resource consumption on servers operating implementations of the HTTP/2 protocol. \n\nThe HTTP/2 protocol allows clients to signal to a server to cancel a previously opened stream by sending an `RST_STREAM` frame. Attackers can abuse this stream canceling ability by opening a large number of streams at once immediately followed by `RST_STREAM` frames. In most HTTP/2 implementations this bypasses concurrent open stream limits and causes servers to spend processing time first handling request frames and then performing stream tear downs. For the server, these operations can pile up whereas the attacker client paid minuscule bandwidth and processing costs.\n\n[Amazon](https://aws.amazon.com/security/security-bulletins/AWS-2023-011/), [Cloudflare](https://blog.cloudflare.com/technical-breakdown-http2-rapid-reset-ddos-attack/) and [Google](https://cloud.google.com/blog/products/identity-security/google-cloud-mitigated-largest-ddos-attack-peaking-above-398-million-rps/) have reported that this vulnerability has been exploited in the wild from August to October 2023.\n\nThis vulnerability is listed as exploitable by the Cybersecurity \u0026 Infrastructure Security Agency in their [Known Exploited Vulnerabilities Catalog](https://www.cisa.gov/known-exploited-vulnerabilities-catalog)."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2023-44487 jetty-http 9.4.24.v20191120: wiremock 2.8.0: org.eclipse.jetty","partialFingerprints":{"ruleIdLocationHash/v1":"1a0a76803aa08360ac22f8fcf6562d62896f42633df71cf9f559ff915698fab8"}},{"message":{"text":"Jetty is vulnerable to denial-of-service (DoS) due to the use of an exponential algorithm that can have excessive resource requirements. A remote attacker could cause a vulnerable server to become unresponsive by sending maliciously crafted HTTP requests to that server."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2020-27223 jetty-http 9.4.24.v20191120: wiremock 2.8.0: org.eclipse.jetty","partialFingerprints":{"ruleIdLocationHash/v1":"2a59fcd91ddfe7aeabe315518a20c2c79aa3b6865fc6836ce4641fcae489a2d1"}},{"message":{"text":"Eclipse Jetty is vulnerable to Denial-of-Service (DoS) via invalid TLS frames. An attacker could exploit this by sending a TLS frame with a size in excess of 17408 resulting in excessive resource consumption leading to a DoS condition."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2021-28165 jetty-http 9.4.24.v20191120: wiremock 2.8.0: org.eclipse.jetty","partialFingerprints":{"ruleIdLocationHash/v1":"507f9418045ce0502fe9f436c1a298ec2c20a73521e84d98bb5ef62c832d5f58"}},{"message":{"text":"Jetty is vulnerable to information disclosure due to improper requested path verification. This allows crafted requests to access protected resources of the web application which, depending on the implementation, might reveal sensitive information."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2021-28169 jetty-http 9.4.24.v20191120: wiremock 2.8.0: org.eclipse.jetty","partialFingerprints":{"ruleIdLocationHash/v1":"6480c4d06f1bad9ca59ffad83e87253dd17d4b3598b82d192890b6a044d38924"}},{"message":{"text":"Eclipse Jetty is vulnerable to a denial-of-service (DoS) issue due to presence of a user input validation flaw in the HTTP/2 HPACK functionality that can lead to an integer overflow and allow HPACK headers to exceed their expected size limits.\n\nAn attacker could submit crafted HTTP messages that trigger the integer overflow flaw and cause large buffers to be allocated on the server, consuming memory resources in a manner that could cause the server to run out of memory."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2023-36478 jetty-http 9.4.24.v20191120: wiremock 2.8.0: org.eclipse.jetty","partialFingerprints":{"ruleIdLocationHash/v1":"0050691fa01c9df0737c95f07c0671a1badc3b736ad564e911d9117e0af3340f"}},{"message":{"text":"Eclipse Jetty does not correctly handle invalid HTTP/2 requests. An attacker could exploit this flaw to exhaust the HTTP/2 flow control window or TCP congest the connection. This will cause the relevant selector threads to be blocked and it will lead to a denial-of-service (DoS)."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2022-2048 jetty-http 9.4.24.v20191120: wiremock 2.8.0: org.eclipse.jetty","partialFingerprints":{"ruleIdLocationHash/v1":"202512761ff970bd897c38a950cbffe68b0085d06ff2857a027e5016aade24b0"}},{"message":{"text":"Eclipse Jetty contains a vulnerability that allows a remote attacker to inject data into other client's requests. This vulnerability only exists when GZIP request body inflation is enabled, and requests from different clients are multiplexed onto a single connection."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2020-27218 jetty-http 9.4.24.v20191120: wiremock 2.8.0: org.eclipse.jetty","partialFingerprints":{"ruleIdLocationHash/v1":"0d34a2ff8d48d8cb0e107ed8ad45a6d6eaf528f71e8a041feb2a0a5d13f474a9"}},{"message":{"text":"Eclipse Jetty contains a vulnerability in its multipart request parsing mechanism that can lead to an out-of-memory error due to insufficient limiting measures. An attacker can exploit this flaw by supplying a request containing a large multipart without a filename in order to cause a denial-of-service (DoS)."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2023-26048 jetty-http 9.4.24.v20191120: wiremock 2.8.0: org.eclipse.jetty","partialFingerprints":{"ruleIdLocationHash/v1":"3bae1b20ce01df2018209e0f57e4f57c20ada136053cd0d4659d242de799b004"}},{"message":{"text":"Eclipse Jetty does not properly parse quoted values in cookies. This could allow an attacker to smuggle cookies within other cookies into the application. The attacker can also tamper with the cookie parsing mechanism and cause other unintended behavior."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2023-26049 jetty-http 9.4.24.v20191120: wiremock 2.8.0: org.eclipse.jetty","partialFingerprints":{"ruleIdLocationHash/v1":"948891b77fe9a8172b5803e3fc9f3779275a0e3b040ed5cfa1c41a8a0b55f992"}},{"message":{"text":"Eclipse Jetty is vulnerable to HTTP request smuggling due to the improper parsing of HTTP requests. An attacker could exploit this vulnerability by sending maliciously crafted HTTP requests to a vulnerable endpoint with multiple requests included inside the body by manipulating the `Content-Length` of the request. The smuggling of HTTP requests may allow for the bypass of security tools such as web application firewalls (WAFs) and intrusion detection systems (IDSs)."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2023-40167 jetty-http 9.4.24.v20191120: wiremock 2.8.0: org.eclipse.jetty","partialFingerprints":{"ruleIdLocationHash/v1":"b52d871cbbb42f87eeb48c4f69dbd60c4aff87488be3f52608ddc06861e6f931"}},{"message":{"text":"Eclipse Jetty contains an improper neutralization of quoting syntax issue within the CGI servlet. This could allow an authenticated attacker to send a request to the CGI Servlet for a binary with a space in its name in order to manipulate the command structure and execute incorrect commands."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2023-36479 jetty-http 9.4.24.v20191120: wiremock 2.8.0: org.eclipse.jetty","partialFingerprints":{"ruleIdLocationHash/v1":"fe6cc22858b4b91d3abbb6d19adc7aa51041673b530c87f9235968ae167ffc58"}},{"message":{"text":"Eclipse Jetty contains an improper authentication vulnerability. This could allow an authenticated attacker to bypass authentication after it has been rejected or revoked by the `LoginService` and make a request as if authenticated.\n\n**Note:** The vendor has stated that this issue impacts usages of the `jetty-openid` which have configured a nested `LoginService` and where that `LoginService` is capable of rejecting previously authenticated users."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2023-41900 jetty-http 9.4.24.v20191120: wiremock 2.8.0: org.eclipse.jetty","partialFingerprints":{"ruleIdLocationHash/v1":"a82614479ea641bad770e3498eafaa691396fc5d88b541c6f37aa1b9fda03ef8"}},{"message":{"text":"Eclipse Jetty is vulnerable to insufficient session expiry. This may result in sessions used on a shared computer persisting for longer than intended."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2021-34428 jetty-http 9.4.24.v20191120: wiremock 2.8.0: org.eclipse.jetty","partialFingerprints":{"ruleIdLocationHash/v1":"893e12087882149ad989a202a757c96722b413f1d33b67daa7f9b0d5f4d9c82c"}},{"message":{"text":"Eclipse Jetty does not correctly handle invalid authority segments of HTTP URIs. An authenticated attacker could exploit this flaw by passing an invalid URI that contains an improper authority with no host so that it is interpreted as one with a host."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2022-2047 jetty-http 9.4.24.v20191120: wiremock 2.8.0: org.eclipse.jetty","partialFingerprints":{"ruleIdLocationHash/v1":"5f7431c07c8217db35249630a1c500d42f342c91b206846108a96e112f9820d7"}},{"message":{"text":"Apache Groovy is vulnerable to privilege escalation and information exposure due to inappropriate use of an insecure JDK method. A local attacker could exploit this vulnerability by supplying a system with maliciously crafted input."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2020-17521 groovy-json 2.5.8: rest-assured 3.3.0: org.codehaus.groovy","partialFingerprints":{"ruleIdLocationHash/v1":"bcc8db9afd848991db65c541cf0cfb64339bcc37b7bc2e690de080d54f44ae54"}},{"message":{"text":"Jakarta Expression Language is vulnerable to remote code execution (RCE) due to a bug that enables invalid expressions to be evaluated as if they were valid. Applications that evaluate user-supplied expressions in error messages are vulnerable to arbitrary code execution."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"BDSA-2021-2110 jakarta.el 3.0.3: spring-boot-starter-undertow 2.2.2.RELEASE: org.glassfish","partialFingerprints":{"ruleIdLocationHash/v1":"3cad68ac24812fc3db3da83e89f47d91291bb05a6569c6c05979bd3afaf9ee34"}},{"message":{"text":"Jetty is vulnerable to temporary directory Hijacking via a race condition. If code is executed from this temporary directory it can lead to local privilege escalation."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2020-27216 jetty-util 9.4.24.v20191120: wiremock 2.8.0: org.eclipse.jetty","partialFingerprints":{"ruleIdLocationHash/v1":"eaf1fb63eadb95722e93cd8776e0583a090b1b5444f718857aae6441e9513ef8"}},{"message":{"text":"The HTTP/2 protocol contains a flaw related to the stream multiplexing feature that can allow for excessive resource consumption on servers operating implementations of the HTTP/2 protocol. \n\nThe HTTP/2 protocol allows clients to signal to a server to cancel a previously opened stream by sending an `RST_STREAM` frame. Attackers can abuse this stream canceling ability by opening a large number of streams at once immediately followed by `RST_STREAM` frames. In most HTTP/2 implementations this bypasses concurrent open stream limits and causes servers to spend processing time first handling request frames and then performing stream tear downs. For the server, these operations can pile up whereas the attacker client paid minuscule bandwidth and processing costs.\n\n[Amazon](https://aws.amazon.com/security/security-bulletins/AWS-2023-011/), [Cloudflare](https://blog.cloudflare.com/technical-breakdown-http2-rapid-reset-ddos-attack/) and [Google](https://cloud.google.com/blog/products/identity-security/google-cloud-mitigated-largest-ddos-attack-peaking-above-398-million-rps/) have reported that this vulnerability has been exploited in the wild from August to October 2023.\n\nThis vulnerability is listed as exploitable by the Cybersecurity \u0026 Infrastructure Security Agency in their [Known Exploited Vulnerabilities Catalog](https://www.cisa.gov/known-exploited-vulnerabilities-catalog)."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2023-44487 jetty-util 9.4.24.v20191120: wiremock 2.8.0: org.eclipse.jetty","partialFingerprints":{"ruleIdLocationHash/v1":"de723c235715dcc6dfc66ab42e093d34ddceb5bde5f77a0fe62955ae113cc322"}},{"message":{"text":"Jetty is vulnerable to denial-of-service (DoS) due to the use of an exponential algorithm that can have excessive resource requirements. A remote attacker could cause a vulnerable server to become unresponsive by sending maliciously crafted HTTP requests to that server."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2020-27223 jetty-util 9.4.24.v20191120: wiremock 2.8.0: org.eclipse.jetty","partialFingerprints":{"ruleIdLocationHash/v1":"db6346bb6aba77927792b618c1bd98efac6bc8010914a1ad4ed744d9d2d0f8f7"}},{"message":{"text":"Eclipse Jetty is vulnerable to Denial-of-Service (DoS) via invalid TLS frames. An attacker could exploit this by sending a TLS frame with a size in excess of 17408 resulting in excessive resource consumption leading to a DoS condition."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2021-28165 jetty-util 9.4.24.v20191120: wiremock 2.8.0: org.eclipse.jetty","partialFingerprints":{"ruleIdLocationHash/v1":"13febab564cc8c3511b31fc437bce2623c74356cf5f1273751feb0e8ce03d99a"}},{"message":{"text":"Jetty is vulnerable to information disclosure due to improper requested path verification. This allows crafted requests to access protected resources of the web application which, depending on the implementation, might reveal sensitive information."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2021-28169 jetty-util 9.4.24.v20191120: wiremock 2.8.0: org.eclipse.jetty","partialFingerprints":{"ruleIdLocationHash/v1":"94af06cd732e3ef705b4f3f74e32a25f213fe9ad51d9bcefb824c15ce7f609f3"}},{"message":{"text":"Eclipse Jetty is vulnerable to a denial-of-service (DoS) issue due to presence of a user input validation flaw in the HTTP/2 HPACK functionality that can lead to an integer overflow and allow HPACK headers to exceed their expected size limits.\n\nAn attacker could submit crafted HTTP messages that trigger the integer overflow flaw and cause large buffers to be allocated on the server, consuming memory resources in a manner that could cause the server to run out of memory."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2023-36478 jetty-util 9.4.24.v20191120: wiremock 2.8.0: org.eclipse.jetty","partialFingerprints":{"ruleIdLocationHash/v1":"a89a5bf76484a58a452f183efa163d460da7c1a7b7e8d7024f6340f020109e72"}},{"message":{"text":"Eclipse Jetty does not correctly handle invalid HTTP/2 requests. An attacker could exploit this flaw to exhaust the HTTP/2 flow control window or TCP congest the connection. This will cause the relevant selector threads to be blocked and it will lead to a denial-of-service (DoS)."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2022-2048 jetty-util 9.4.24.v20191120: wiremock 2.8.0: org.eclipse.jetty","partialFingerprints":{"ruleIdLocationHash/v1":"eee93ca8231fc4e1e382e3c556ae55e1216e67b38dc8d4bb8451a2fdec3c4667"}},{"message":{"text":"Eclipse Jetty contains a vulnerability that allows a remote attacker to inject data into other client's requests. This vulnerability only exists when GZIP request body inflation is enabled, and requests from different clients are multiplexed onto a single connection."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2020-27218 jetty-util 9.4.24.v20191120: wiremock 2.8.0: org.eclipse.jetty","partialFingerprints":{"ruleIdLocationHash/v1":"ae51eca73a823da2f18afd68dd8b947d639e7f310d8c733ae0c19700d64a3c19"}},{"message":{"text":"Eclipse Jetty contains a vulnerability in its multipart request parsing mechanism that can lead to an out-of-memory error due to insufficient limiting measures. An attacker can exploit this flaw by supplying a request containing a large multipart without a filename in order to cause a denial-of-service (DoS)."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2023-26048 jetty-util 9.4.24.v20191120: wiremock 2.8.0: org.eclipse.jetty","partialFingerprints":{"ruleIdLocationHash/v1":"debf63bc1762af447166aaa76db7aa18e89e4e5ce7aa7879280cb6e504602753"}},{"message":{"text":"Eclipse Jetty does not properly parse quoted values in cookies. This could allow an attacker to smuggle cookies within other cookies into the application. The attacker can also tamper with the cookie parsing mechanism and cause other unintended behavior."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2023-26049 jetty-util 9.4.24.v20191120: wiremock 2.8.0: org.eclipse.jetty","partialFingerprints":{"ruleIdLocationHash/v1":"529772955915a5c838eed5a53ce20c8260e378dc141fa5c58f4144f4ddc80cdf"}},{"message":{"text":"Eclipse Jetty is vulnerable to HTTP request smuggling due to the improper parsing of HTTP requests. An attacker could exploit this vulnerability by sending maliciously crafted HTTP requests to a vulnerable endpoint with multiple requests included inside the body by manipulating the `Content-Length` of the request. The smuggling of HTTP requests may allow for the bypass of security tools such as web application firewalls (WAFs) and intrusion detection systems (IDSs)."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2023-40167 jetty-util 9.4.24.v20191120: wiremock 2.8.0: org.eclipse.jetty","partialFingerprints":{"ruleIdLocationHash/v1":"631b261a367624bb4e60128d189635ce3420ad696fa11adaa97a467814c51bc0"}},{"message":{"text":"Eclipse Jetty contains an improper neutralization of quoting syntax issue within the CGI servlet. This could allow an authenticated attacker to send a request to the CGI Servlet for a binary with a space in its name in order to manipulate the command structure and execute incorrect commands."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2023-36479 jetty-util 9.4.24.v20191120: wiremock 2.8.0: org.eclipse.jetty","partialFingerprints":{"ruleIdLocationHash/v1":"a1a65a2ae7ae39532d9e2072dcbd3cea0d350883f4d079c6a5f12e69ce9fcb71"}},{"message":{"text":"Eclipse Jetty contains an improper authentication vulnerability. This could allow an authenticated attacker to bypass authentication after it has been rejected or revoked by the `LoginService` and make a request as if authenticated.\n\n**Note:** The vendor has stated that this issue impacts usages of the `jetty-openid` which have configured a nested `LoginService` and where that `LoginService` is capable of rejecting previously authenticated users."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2023-41900 jetty-util 9.4.24.v20191120: wiremock 2.8.0: org.eclipse.jetty","partialFingerprints":{"ruleIdLocationHash/v1":"1007ede7911d12d82cbb1edd22a90bf579ed57558af1bca48d5b5d94689d6f9c"}},{"message":{"text":"Eclipse Jetty is vulnerable to insufficient session expiry. This may result in sessions used on a shared computer persisting for longer than intended."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2021-34428 jetty-util 9.4.24.v20191120: wiremock 2.8.0: org.eclipse.jetty","partialFingerprints":{"ruleIdLocationHash/v1":"4c7bbf4d877c9bf819d7d7dc00b2432a456dd2960229611d0d83a984d12c674c"}},{"message":{"text":"Eclipse Jetty does not correctly handle invalid authority segments of HTTP URIs. An authenticated attacker could exploit this flaw by passing an invalid URI that contains an improper authority with no host so that it is interpreted as one with a host."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2022-2047 jetty-util 9.4.24.v20191120: wiremock 2.8.0: org.eclipse.jetty","partialFingerprints":{"ruleIdLocationHash/v1":"952d64884a24a498d65ffa13d148e0d645a3b2362ff7ce84adbf12a1d0f4d7ed"}},{"message":{"text":"logback does not verify the SSL hostname as part of the certificate verification process. A remote attacker could leverage this to perform man-in-the-middle (MitM) attacks against applications using logback."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"BDSA-2021-3401 logback-classic 1.2.3: spring-boot-starter-test 2.2.2.RELEASE: ch.qos.logback","partialFingerprints":{"ruleIdLocationHash/v1":"d82a5140c965ada95cf6e2f16f85f11dcc3cc10fc7f8cec01e59688e196a0772"}},{"message":{"text":"Logback is vulnerable to remote code execution (RCE) due to missing restrictions on JNDI locations provided in the configuration file. An attacker with an access to `logback.xml` configuration file could provide a JNDI location that would load and execute malicious code from an LDAP server.\n\n**Note:** In addition to high privileges required to access `logback.xml`, successful exploitation requires reloading poisoned configuration data. This can be achieved by an application restart or `scan=\"true\"` set prior to the attack."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2021-42550 logback-classic 1.2.3: spring-boot-starter-test 2.2.2.RELEASE: ch.qos.logback","partialFingerprints":{"ruleIdLocationHash/v1":"d7ebaf918601ecb401bd4b5a492c4aa65d04ffc0ca4a9fb83d98d0dc36fb10ee"}},{"message":{"text":"Logback contains a denial-of-service (DoS) vulnerability. An attacker could exploit this issue by connecting to a receiver and sending maliciously crafted data, which could in turn allow them to slow the logging of events or crash the application.\n\nSuccessful exploitation of this vulnerability requires that logback-receiver component is enabled and also reachable by the attacker."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2023-6378 logback-classic 1.2.3: spring-boot-starter-test 2.2.2.RELEASE: ch.qos.logback","partialFingerprints":{"ruleIdLocationHash/v1":"8204ae41f351684546bdfaff226969ba3cd5dbd918676e2868302aac31604c9e"}},{"message":{"text":"Logback contains a denial-of-service (DoS) vulnerability. An attacker could exploit this issue by connecting to a receiver and sending maliciously crafted data, which could in turn allow them to slow the logging of events or crash the application.\n\nSuccessful exploitation of this vulnerability requires that logback-receiver component is enabled and also reachable by the attacker."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"BDSA-2023-3341 logback-classic 1.2.3: spring-boot-starter-test 2.2.2.RELEASE: ch.qos.logback","partialFingerprints":{"ruleIdLocationHash/v1":"51f513a7f853b594a9a9d3ad0054d1bf0cd2714c141fb5323e11ebb41ad85139"}},{"message":{"text":"An improper input validation vulnerability has been discovered in JQuery. An attacker could exploit this vulnerability to execute cross-site scripting (XSS) attacks, trigger a denial-of-service (DoS) condition, or gain unauthorized access to the application."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2019-11358 jquery 3.2.1: org.webjars","partialFingerprints":{"ruleIdLocationHash/v1":"d9ad2386c4b06f449ee01c338fd96c270467143d5f0d8470b5ee34dd875b7aa4"}},{"message":{"text":"It was discovered that jQuery could allow for cross-site scripting (XSS) vulnerabilities to be introduced if `jQuery.htmlPrefilter` method is used. Attackers could exploit XSS vulnerabilities to execute JavaScript code in a target's browser by tricking them into accessing the vulnerable page. This would allow an attacker to steal an administrator's session tokens or execute arbitrary code on their behalf by sending the link to an unsuspecting user or waiting for them to discover it."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2020-11022 jquery 3.2.1: org.webjars","partialFingerprints":{"ruleIdLocationHash/v1":"3cceb8418fd70d7a16f6b56bc610cd68cf19effbdbc7450844e793289c34eb24"}},{"message":{"text":"It was discovered that jQuery could allow for cross-site scripting (XSS) vulnerabilities to be introduced if certain HTML is passed to Document Object Model (DOM) manipulation methods. Attackers could exploit XSS vulnerabilities to execute JavaScript code in a target browser by tricking them into accessing the vulnerable page. This would allow an attacker to steal an administrator's session tokens or execute arbitrary code on their behalf by sending the link to an unsuspecting user or waiting for them to discover it."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2020-11023 jquery 3.2.1: org.webjars","partialFingerprints":{"ruleIdLocationHash/v1":"04e3d01a328becfb1f7a7491dc5e7f841a732ef604af710e72a790290fbc8eb4"}},{"message":{"text":"jQuery is vulnerable to cross-site scripting (XSS) due to a flaw present in Document Object Model (DOM) manipulation methods.\n\nAn attacker could craft HTML content that when viewed by a victim user could allow for the execution of arbitrary scripts. Such scripts could be used to steal tokens or tamper with the rendering of the web content.\n\n**Note**: This reported issue appears to be a duplicate of **CVE-2020-11023** (**BDSA-2020-0964**)."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2020-23064 jquery 3.2.1: org.webjars","partialFingerprints":{"ruleIdLocationHash/v1":"714ae0b797749ca8263eb3e9f5a06e177dfa93d96b947bea936e5d7ea8513708"}},{"message":{"text":"jQuery contains commented references to the hijacked domain `blindsignals`, within the source/non-minified versions of the files `src/queue/delay.js` and `test/data/jquery-1.9.1.js` (the former referring to a Web Archive version of the original site). References to this domain are not present in the minified files.\n\nUsers viewing the jQuery source code may attempt to follow links to the hijacked site without awareness of the domain's current status. This could expose them to attacks such as phishing, where they are tricked into supplying credentials or downloading malicious software. Users are not at risk if they do not manually follow links to the `blindsignals` domain."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"BDSA-2021-3651 jquery 3.2.1: org.webjars","partialFingerprints":{"ruleIdLocationHash/v1":"358b537db6532727ca458bb4ec0293430ffebac327054557ed96cebb5353c9a5"}},{"message":{"text":"XStream is vulnerable to remote code execution (RCE) due to the unsafe deserialization of classes. A remote attacker could execute arbitrary code on a vulnerable server by causing that server to deserialize a maliciously crafted serialized object."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2021-39148 xstream 1.4.5: com.thoughtworks.xstream","partialFingerprints":{"ruleIdLocationHash/v1":"f9f83b6e2995a97cdbb86be2f6c339517bb8de488aaf461e367d5867fe9910bc"}},{"message":{"text":"XStream is vulnerable to remote code execution (RCE) due to the unsafe deserialization of classes. A remote attacker could execute arbitrary code on a vulnerable server by causing that server to deserialize a maliciously crafted serialized object."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2021-39145 xstream 1.4.5: com.thoughtworks.xstream","partialFingerprints":{"ruleIdLocationHash/v1":"b1c8003967fe2fb38775bf6d70db76fc344580a1a274f1daa235f274fcaf6416"}},{"message":{"text":"It was found that xstream API version 1.4.10 before 1.4.11 introduced a regression for a previous deserialization flaw. If the security framework has not been initialized, it may allow a remote attacker to run arbitrary shell commands when unmarshalling XML or any supported format. e.g. JSON. (regression of CVE-2013-7285)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2019-10173 xstream 1.4.5: com.thoughtworks.xstream","partialFingerprints":{"ruleIdLocationHash/v1":"dcc51557ef8dedbea3d49feff167d5a7dfc5bfe82d6d96e7c4ef311da89ed261"}},{"message":{"text":"Xstream is vulnerable to remote code execution (RCE) through specially crafted input. A remote attacker is able to execute arbitrary system commands on the host machine if Xstream's security framework has been configured with a default blacklist, rather than the more secure whitelisting method."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2020-26217 xstream 1.4.5: com.thoughtworks.xstream","partialFingerprints":{"ruleIdLocationHash/v1":"6f71899ed9ed707f74d6b6d8985221978b1c2b77b28b071f56bbd93121466d62"}},{"message":{"text":"XStream is vulnerable to unsafe deserialization of user-controlled input. A remote attacker could leverage this to execute arbitrary code from a remote server.\n\n**Note:** If the application uses XStream's security framework and whitelist approach to deserialization (recommended), it is not vulnerable."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2021-39139 xstream 1.4.5: com.thoughtworks.xstream","partialFingerprints":{"ruleIdLocationHash/v1":"9f34664aeae851505e76d5b95cc9df04bd3c5dd9e47537f3524982e3f72950f3"}},{"message":{"text":"XStream is vulnerable to unsafe deserialization of attacker controlled input. A remote attacker could leverage this to execute arbitrary code from a remote server.\n\n**Note** If the application uses XStreams security framework and whitelist approach to deserialization (recommended), it is not vulnerable."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2021-39141 xstream 1.4.5: com.thoughtworks.xstream","partialFingerprints":{"ruleIdLocationHash/v1":"cb294163f2a26906835ef2712351103d1bd13c2e589eb45c86d9c3b0a480a01b"}},{"message":{"text":"XStream is vulnerable to unsafe deserialization of attacker controlled input. A remote attacker could leverage this to execute arbitrary code from a remote server.\n\nNote that if the application uses XStreams security framework and whitelist approach to deserialization (recommended), it is not vulnerable."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2021-39154 xstream 1.4.5: com.thoughtworks.xstream","partialFingerprints":{"ruleIdLocationHash/v1":"3a07bad868d4a8564be62c485cb42e58a06294c8b3d63495cc513ab8f24ab11b"}},{"message":{"text":"XStream is vulnerable to unsafe deserialization of attacker controlled input. A remote attacker could leverage this to execute arbitrary system commands.\n\nNote that if the application uses XStream's security framework and allowlist approach to deserialization (recommended), it is not vulnerable.\n\nThis vulnerability is listed as exploitable by the Cybersecurity \u0026 Infrastructure Security Agency in their [Known Exploited Vulnerabilities Catalog](https://www.cisa.gov/known-exploited-vulnerabilities-catalog)."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2021-39144 xstream 1.4.5: com.thoughtworks.xstream","partialFingerprints":{"ruleIdLocationHash/v1":"a5e30345b88d4e8b547564f796cfa3a00ebfdaa1249c0c326812fc059c7b0f51"}},{"message":{"text":"Xstream is vulnerable to remote code execution (RCE) by an attacker who can supply a specially crafted input stream."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2013-7285 xstream 1.4.5: com.thoughtworks.xstream","partialFingerprints":{"ruleIdLocationHash/v1":"870cfb53ce2951dfdb346a769a3529e1286b94dcaf9c418a33cd12f172eea934"}},{"message":{"text":"XStream is vulnerable to remote code execution (RCE) due to the unsafe deserialization of classes. A remote attacker could execute arbitrary code on a vulnerable server by causing that server to deserialize a maliciously crafted serialized object."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2021-39146 xstream 1.4.5: com.thoughtworks.xstream","partialFingerprints":{"ruleIdLocationHash/v1":"badea20177fca6433f4aaa215ce6448332c8f2805310bf443e5de58c08111c75"}},{"message":{"text":"XStream is vulnerable to remote code execution (RCE) due to the unsafe deserialization of classes. A remote attacker could execute arbitrary code on a vulnerable server by causing that server to deserialize a maliciously crafted serialized object."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2021-39147 xstream 1.4.5: com.thoughtworks.xstream","partialFingerprints":{"ruleIdLocationHash/v1":"7d89fecb40c0b10ee7be4cc47cd9686db5c565c4dc26ce45244073fb9959e774"}},{"message":{"text":"XStream is vulnerable to server-side request forgery (SSRF) due to the improper restriction of deserialization functionality. A remote attacker could send requests to intranet hosts by sending maliciously crafted serialized data to a vulnerable server.\n\n **Note** If the application uses XStreams security framework and whitelist approach to deserialization (recommended), it is not vulnerable."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2021-39152 xstream 1.4.5: com.thoughtworks.xstream","partialFingerprints":{"ruleIdLocationHash/v1":"67c54adcb2fd8011e797d5cf67bf31c243ba731a1d3101937b93b0c26db2f595"}},{"message":{"text":"XStream is vulnerable to server-side request forgery (SSRF) by a remote attacker who can supply a specially crafted input stream to modify or inject objects. This allows them to request data from the internal network that the XStream application is hosted on."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2021-21349 xstream 1.4.5: com.thoughtworks.xstream","partialFingerprints":{"ruleIdLocationHash/v1":"52520562f18196789f133f53bc648ff85496aa70007bc40f262dbafc0aff7992"}},{"message":{"text":"XStream, when in its default configuration or operating without a sufficient blacklist / whitelist configuration, is vulnerable to an arbitrary code execution issue. This is due to how XStream can potentially create new instances of dangerous objects that are not blocked based on the contents of the input stream. The potentially dangerous types in this case are the JAXB `Accessor$GetterSetterReflection` internal type and `com.sun.rowset.JdbcRowSetImpl`.\n\nAn attacker could supply a crafted input to XStream in order execute arbitrary code stored on a remote host."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2021-21344 xstream 1.4.5: com.thoughtworks.xstream","partialFingerprints":{"ruleIdLocationHash/v1":"86d71c5c30c3f4e403bea301d297d37b32fd8c0075e79f330edfe8aed948b182"}},{"message":{"text":"XStream, when in its default configuration or operating without a sufficient blacklist / whitelist configuration, is vulnerable to an arbitrary command execution issue. This is due to how XStream can potentially create new instances of dangerous objects that are not blocked based on the contents of the input stream. The potentially dangerous type in this case is `com.sun.corba.se.impl.activation.ServerTableEntry`.\n\nAn attacker could supply a crafted input to XStream in order execute arbitrary commands on the XStream host."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2021-21345 xstream 1.4.5: com.thoughtworks.xstream","partialFingerprints":{"ruleIdLocationHash/v1":"0c59c319c22bb037e7bb71d4cbb8f6dc87f64a44e0a84b131ef78a866176b4db"}},{"message":{"text":"XStream, when in its default configuration or operating without a sufficient blacklist / whitelist configuration, is vulnerable to a server-side request forgery (SSRF) issue. This is due to how XStream can potentially create new instances of dangerous objects that are not blocked based on the contents of the input stream. The potentially dangerous types in this case are `sun.awt.datatransfer.DataTransferer$IndexOrderComparator` and `javax.activation.URLDataSource`.\n\nAn attacker could supply a crafted input to XStream in order request information from internal resources."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2021-21342 xstream 1.4.5: com.thoughtworks.xstream","partialFingerprints":{"ruleIdLocationHash/v1":"9930e34050f69c68ea4ada242b5775d5a05fbaa9f43185962f974d1b506b4eb3"}},{"message":{"text":"XStream, when in its default configuration or operating without a sufficient blacklist / whitelist configuration, is vulnerable to an arbitrary code execution issue. This is due to how XStream can potentially create new instances of dangerous objects that are not blocked based on the contents of the input stream. The potentially dangerous type in this case is `sun.swing.SwingLazyValue`.\n\nAn attacker could supply a crafted input to XStream in order execute arbitrary code stored on a remote host."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2021-21346 xstream 1.4.5: com.thoughtworks.xstream","partialFingerprints":{"ruleIdLocationHash/v1":"21e15df2c008c6583738bc70d9246d7d090ee6ad020be168083bd4eb434e9626"}},{"message":{"text":"XStream, when in its default configuration or operating without a sufficient blacklist / whitelist configuration, is vulnerable to an arbitrary code execution issue. This is due to how XStream can potentially create new instances of dangerous objects that are not blocked based on the contents of the input stream. The potentially dangerous type in this case is `sun.jndi.toolkit.dir.LazySearchEnumerationImpl`.\n\nAn attacker could supply a crafted input to XStream in order execute arbitrary code stored on a remote host."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2021-29505 xstream 1.4.5: com.thoughtworks.xstream","partialFingerprints":{"ruleIdLocationHash/v1":"0dc1fa7b81c604240ad0746cfa381f7349944d0e114dd76e9464a401d7d03dd7"}},{"message":{"text":"Xstream is vulnerable to remote code execution (RCE) by an attacker who can supply a specially crafted input stream."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2021-21350 xstream 1.4.5: com.thoughtworks.xstream","partialFingerprints":{"ruleIdLocationHash/v1":"679579ca3f07b3af05905ee40c758b1566e7b3ffe92891ac5817f7c385abaf43"}},{"message":{"text":"XStream is vulnerable to remote code execution (RCE) due to the unsafe demarshalling of the `KeyStoreResolver$KeyStoreIterator` subclass. A remote attacker could execute arbitrary code on a vulnerable server by causing that server to deserialize a maliciously crafted serialized object."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2021-39151 xstream 1.4.5: com.thoughtworks.xstream","partialFingerprints":{"ruleIdLocationHash/v1":"8b7acd14ce35bc81a4b95ff82914b4c752e4415b448086f5f12f4d0b7777ab7d"}},{"message":{"text":"XStream, when in its default configuration or operating without a sufficient blacklist / whitelist configuration, is vulnerable to an arbitrary code execution issue. This is due to how XStream can potentially create new instances of dangerous objects that are not blocked based on the contents of the input stream. The potentially dangerous type in this case are `javafx.collections.ObservableList` and `JavacProcessingEnvironment$NameProcessIterator`.\n\nAn attacker could supply a crafted input to XStream in order execute arbitrary code stored on a remote host."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2021-21347 xstream 1.4.5: com.thoughtworks.xstream","partialFingerprints":{"ruleIdLocationHash/v1":"8560081f492a8fb531de609a42098d0d58b0b02acf2eff7ae184e7286f864a7d"}},{"message":{"text":"Xstream is vulnerable to remote code execution (RCE) by an attacker who can supply a specially crafted input stream."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2021-21351 xstream 1.4.5: com.thoughtworks.xstream","partialFingerprints":{"ruleIdLocationHash/v1":"83fc90aebc2376d931bced9e5614706a6cc9db48aa20877ce63002e341b6c58f"}},{"message":{"text":"XStream is vulnerable to remote code execution (RCE) due to the unsafe deserialization of classes from the `com.sun.java.util.jar.pack` package. A remote attacker could execute arbitrary code on a vulnerable server by causing it to process a maliciously crafted serialized object."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2021-39153 xstream 1.4.5: com.thoughtworks.xstream","partialFingerprints":{"ruleIdLocationHash/v1":"7ecda7ba258bf76d34a35e864e5a8b04dd70fb4f8437232b3987580786b78149"}},{"message":{"text":"Xstream is vulnerable to an information disclosure flaw where it can be tricked into including remote resources when unmarshalling specially crafted input. A remote attacker could learn details about the internal network."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2020-26258 xstream 1.4.5: com.thoughtworks.xstream","partialFingerprints":{"ruleIdLocationHash/v1":"75476388f5a9614712b044e53f9f88ed7ae95f900519da5a391f1acf3753c252"}},{"message":{"text":"XStream is vulnerable to an arbitrary file deletion flaw in it's handling of unmarshalling specially crafted input. A remote attacker could delete arbitrary files on the server, if the server process has sufficient rights. As well as impacting the integrity of data, this might lead to a denial-of-service (DoS) of applications on the system that rely on specific files for their operation."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2020-26259 xstream 1.4.5: com.thoughtworks.xstream","partialFingerprints":{"ruleIdLocationHash/v1":"a2d667123463622da46ad8d14fad3c390baac5ab6f2a6d43fc01bfc03c935819"}},{"message":{"text":"XStream, when using some supported parsers, is vulnerable to an XML entity expansion issue due to how these parsers can process external entities by default.\n\nA remote attacker could use this issue to retrieve the content of arbitrary files with known locations in a local file system if the Java process has read access.\n\n**Note**: XStream is not vulnerable if the default XML Pull Parser (`Xpp3` or `kXML2`) is used. These parser types do not process XML entities."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2016-3674 xstream 1.4.5: com.thoughtworks.xstream","partialFingerprints":{"ruleIdLocationHash/v1":"f7a3974968fdb3020ec300fb979d1aecc469f40175bde05f05c4fa19f206e1d4"}},{"message":{"text":"XStream is vulnerable to server-side request forgery (SSRF) due to the improper restriction of deserialization functionality. A remote attacker could send requests to intranet hosts by sending maliciously crafted serialized data to a vulnerable server.\n\n **Note** If the application uses XStreams security framework and whitelist approach to deserialization (recommended), it is not vulnerable."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2021-39150 xstream 1.4.5: com.thoughtworks.xstream","partialFingerprints":{"ruleIdLocationHash/v1":"12fcf2f746363054dff033afbd53efede1011238dbe5cff20c6a2dc4a23f47d5"}},{"message":{"text":"XStream is vulnerable to remote code execution (RCE) due to the unsafe demarshalling of CORBA and XSLTC classes. A remote attacker could execute arbitrary code on a vulnerable server by causing that server to deserialize a maliciously crafted serialized object."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2021-39149 xstream 1.4.5: com.thoughtworks.xstream","partialFingerprints":{"ruleIdLocationHash/v1":"d42c397959e8c173bc69553bbfaf74988aff00025569ac418bb191165a67248d"}},{"message":{"text":"Those using Woodstox to parse XML data may be vulnerable to Denial of Service attacks (DOS) if DTD support is enabled. If the parser is running on user supplied input, an attacker may supply content that causes the parser to crash by stackoverflow. This effect may support a denial of service attack."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2022-40152 xstream 1.4.5: com.thoughtworks.xstream","partialFingerprints":{"ruleIdLocationHash/v1":"4d12efe3130524e82b180939b0a9ab2021da3eb618f64b0e154065e1c659ea6f"}},{"message":{"text":"XStream is vulnerable to unsafe deserialization of attacker controlled input. A remote attacker could leverage this to consume all available CPU cycles via an infinite loop condition.\n\n**Note:** If the application uses XStreams security framework and whitelist approach to deserialization (recommended), it is not vulnerable."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2021-39140 xstream 1.4.5: com.thoughtworks.xstream","partialFingerprints":{"ruleIdLocationHash/v1":"1c498f27be365096a798a997640814e47d545c9298484bda9a19849cae886547"}},{"message":{"text":"XStream, when in its default configuration or operating without a sufficient blacklist / whitelist configuration, is vulnerable to a denial-of-service (DoS) issue. This is due to how XStream can potentially create new instances of dangerous objects that are not blocked based on the contents of the input stream. The potentially dangerous type in this case is `java.io.ByteArrayInputStream`.\n\nAn attacker could supply a crafted input to XStream in order to cause an endless loop, negatively impacting the availability of XStream."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2021-21341 xstream 1.4.5: com.thoughtworks.xstream","partialFingerprints":{"ruleIdLocationHash/v1":"4cb989fc9d14ab488dc3eeee1dcb4693c0b43d7d572b8d832591d3f8798759ce"}},{"message":{"text":"XStream, when in its default configuration or operating without a sufficient blacklist / whitelist configuration, is vulnerable to an arbitrary file deletion issue. This is due to how XStream can potentially create new instances of dangerous objects that are not blocked based on the contents of the input stream. The potentially dangerous types in this case are  `sun.awt.datatransfer.DataTransferer$IndexOrderComparator` and `java.io.FileInputStream`.\n\nAn attacker could supply a crafted input to XStream in order deletion arbitrary files on the local host."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2021-21343 xstream 1.4.5: com.thoughtworks.xstream","partialFingerprints":{"ruleIdLocationHash/v1":"7e41be43fec311759f87f9ec3a340ad403973407f56b6180364d1f2dad1ee4f6"}},{"message":{"text":"XStream is vulnerable to denial-of-service (DoS). An attacker could exploit this by manipulating the processed input stream by injecting a highly recursive collection or map."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2021-43859 xstream 1.4.5: com.thoughtworks.xstream","partialFingerprints":{"ruleIdLocationHash/v1":"5076b464e78f869357c05d169a5c7567ce023eeeca09ad3f33d2750064dd704b"}},{"message":{"text":"XStream contains a stack overflow vulnerability. An attacker could exploit this by providing crafted content in order to cause a denial-of-service (DoS) condition via a crash."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2022-40151 xstream 1.4.5: com.thoughtworks.xstream","partialFingerprints":{"ruleIdLocationHash/v1":"353f33f200e0f8b2c53b2ba6df5033eb0114f25e06de05c2cdabe2300b26a206"}},{"message":{"text":"XStream is vulnerable to denial-of-service due to a stack overflow that exists due to a recursive hash set calculation. A remote attacker could cause a vulnerable application to crash by causing that application to process a maliciously crafted input stream."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2022-41966 xstream 1.4.5: com.thoughtworks.xstream","partialFingerprints":{"ruleIdLocationHash/v1":"ac5f2ded8810f684b7729279e1cfecbb7c04356b0e426b5a896cd157e5f067bd"}},{"message":{"text":"A flaw exists within (de)seralization functionality within XStream. Sending a carefully crafted object data will crash the Java process and cause a DoS *(Denial of Service)*. In order to exploit this vulnerability, users require the ability to manipulate the incoming stream of data."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2017-7957 xstream 1.4.5: com.thoughtworks.xstream","partialFingerprints":{"ruleIdLocationHash/v1":"80cb4aa6eb1e5dd46f07c59e192adb99310ddc2ec08fc0ad1f1acb0f895b363e"}},{"message":{"text":"Xstream is vulnerable to regular expression denial-of-service (ReDoS) by a remote attacker who can supply a specially crafted input stream. This allows the attacker to occupy a thread that consumes maximum CPU time, making it unavailable for service."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2021-21348 xstream 1.4.5: com.thoughtworks.xstream","partialFingerprints":{"ruleIdLocationHash/v1":"24c52e0e0dbf082b04bb0981f2d11dc2ec5af2075ee36abd7f84c88e1835fa8a"}},{"message":{"text":"Pivotal Spring Framework through 5.3.16 suffers from a potential remote code execution (RCE) issue if used for Java deserialization of untrusted data. Depending on how the library is implemented within a product, this issue may or not occur, and authentication may be required. NOTE: the vendor's position is that untrusted data is not an intended use case. The product's behavior will not be changed because some users rely on deserialization of trusted data."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2016-1000027 spring-expression 5.2.2.RELEASE: spring-security-test 4.1.3.RELEASE: org.springframework","partialFingerprints":{"ruleIdLocationHash/v1":"5abea283dfbb708ac036aa85be71dfb6c30d2e153afe73054086d584a0b630d2"}},{"message":{"text":"Spring Framework is vulnerable to a flaw in the access restrictions to the security sensitive `ClassLoader` property. The restrictions can be bypassed through alternative paths available with Java9 and later. An attacker can leverage this vulnerability to cause remote code execution (RCE).\n\n**Note** this issue exists because the restrictions that were introduced to prevent exploitation of BDSA-2010-0001 (CVE-2010-1622) can be bypassed on platforms where Java9 and later are in use.\n\nThis vulnerability is listed as exploitable by the Cybersecurity \u0026 Infrastructure Security Agency in their [Known Exploited Vulnerabilities Catalog](https://www.cisa.gov/known-exploited-vulnerabilities-catalog)."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2022-22965 spring-expression 5.2.2.RELEASE: spring-security-test 4.1.3.RELEASE: org.springframework","partialFingerprints":{"ruleIdLocationHash/v1":"a08e530144cea99108d3d9cd643852c849ef207d170aa3b4b3d5941e37fbaaed"}},{"message":{"text":"Spring Framework is vulnerable to cross-site request forgery (CSRF) attacks via CORS preflight requests which target Spring MVC or Spring WebFlux endpoints."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2020-5397 spring-expression 5.2.2.RELEASE: spring-security-test 4.1.3.RELEASE: org.springframework","partialFingerprints":{"ruleIdLocationHash/v1":"1955e9f20d1e753760a2e71bd8bfa98573eb6cefb4451575328374b8754e7359"}},{"message":{"text":"Software systems using Spring Framework may be vulnerable to unsafe deserialization if they employ unsafe use of certain provided deserialization functionality. A remote attacker could potentially execute arbitrary code on a vulnerable endpoint by passing a maliciously crafted serialized object to that endpoint.\n\n**Note**: This issue only affects software that has been written to leverage specific deserialization functionality provided by the Spring Framework without sanitization."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"BDSA-2022-0847 spring-expression 5.2.2.RELEASE: spring-security-test 4.1.3.RELEASE: org.springframework","partialFingerprints":{"ruleIdLocationHash/v1":"1bce764e33f684df9e6ed6449a6abfcc8eb65759d5d370ce001bd45dd369d96e"}},{"message":{"text":"Spring Framework is vulnerable to a reflected file download (RFD) attack via improper input validation on filenames in a `Content-Disposition` header."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2020-5398 spring-expression 5.2.2.RELEASE: spring-security-test 4.1.3.RELEASE: org.springframework","partialFingerprints":{"ruleIdLocationHash/v1":"2cff81afaf70a5deb263b5987d1c0714dd3a479c5550c641e26864dc48ed219d"}},{"message":{"text":"Spring Framework is vulnerable to log file injection due to the insufficient validation of user input in an undisclosed component. An attacker could leverage this issue in order to add arbitrary entries to a log file which could impact both the integrity issues and performance issues.\n\n**Note**: a follow-up to this issue was disclosed as **CVE-2021-22060** (**BDSA-2021-3236**), with further fixed releases that protect against additional types of input and in more places of the Spring Framework codebase."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2021-22096 spring-expression 5.2.2.RELEASE: spring-security-test 4.1.3.RELEASE: org.springframework","partialFingerprints":{"ruleIdLocationHash/v1":"be240ba297ac234b61d5d298f9d16f9f65e1dff794a53c436b8d8660d37b76d1"}},{"message":{"text":"Spring Framework is vulnerable to log file injection due to the insufficient validation of user input in an undisclosed component. An attacker could leverage this issue in order to add arbitrary entries to a log file which could impact both the integrity issues and performance issues.\n\n**Note**: the vendor states this issue exists as a follow up to CVE-2021-22096 (BDSA-2022-0011) that protects against additional types of input and in more places of the Spring Framework codebase."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2021-22060 spring-expression 5.2.2.RELEASE: spring-security-test 4.1.3.RELEASE: org.springframework","partialFingerprints":{"ruleIdLocationHash/v1":"33b84238898277b63f2aa5e1a64f8e49806b3700c8645101afabb105ee22cb02"}},{"message":{"text":"Spring-Framework's spring-expression is vulnerable to a denial-of-service (DoS) condition. This allows an attacker to use crafted input to cause the spring-expression process to crash due to an exception."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2022-22950 spring-expression 5.2.2.RELEASE: spring-security-test 4.1.3.RELEASE: org.springframework","partialFingerprints":{"ruleIdLocationHash/v1":"bcfca474b68988e5a2790acf39135fe76bf0a514782db48d0f3e149055e8b733"}},{"message":{"text":"Spring Framework is vulnerable to privilege escalation due to the creation of unsafe temporary directories by the WebFlux component. A local authenticated attacker could modify arbitrary files via maliciously crafted `multipart` requests. \n\nThis vulnerability does not affect Spring MVC applications, or applications that do not handle `multipart` file requests."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2021-22118 spring-expression 5.2.2.RELEASE: spring-security-test 4.1.3.RELEASE: org.springframework","partialFingerprints":{"ruleIdLocationHash/v1":"37c0c52d3713e19d25d8f6de424a987b7d846202bb69dca73d056dd00571cd69"}},{"message":{"text":"Spring Framework is vulnerable to denial-of-service (DoS) due to the improper implementation of data binding functionality. A remote attacker could cause a vulnerable server to crash if that server provides file upload functionality."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2022-22970 spring-expression 5.2.2.RELEASE: spring-security-test 4.1.3.RELEASE: org.springframework","partialFingerprints":{"ruleIdLocationHash/v1":"34990d8decbfe4cff2e059b3b08706ad3c5b1a2083ac2029fa602e2a9b2a68a3"}},{"message":{"text":"Spring Framework is vulnerable to denial-of-service (DoS) due to the improper handling of the STOMP protocol for websockets. A remote authenticated attacker could leverage this issue in order to cause a server to crash."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2022-22971 spring-expression 5.2.2.RELEASE: spring-security-test 4.1.3.RELEASE: org.springframework","partialFingerprints":{"ruleIdLocationHash/v1":"17c5e340209f4337a3ec0a7d4d63626e0b04053fd22bbf0f2786c1b0b5e64967"}},{"message":{"text":"Spring Framework is vulnerable to denial-of-service (DoS) via specially crafted SpEL expressions. An attacker could exploit this issue by passing a crafted SpEL expression to the application which may result in a crash."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2023-20861 spring-expression 5.2.2.RELEASE: spring-security-test 4.1.3.RELEASE: org.springframework","partialFingerprints":{"ruleIdLocationHash/v1":"8e6a372d24d1cccb04b63d177a8b6958c7323a5c0271009935ceccd6d5411953"}},{"message":{"text":"Spring Framework is vulnerable to denial-of-service (DoS) via specially crafted SpEL expressions."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2023-20863 spring-expression 5.2.2.RELEASE: spring-security-test 4.1.3.RELEASE: org.springframework","partialFingerprints":{"ruleIdLocationHash/v1":"61d6010f2152085b7ff672612a0d965a0d0ee7e3e050b7a1f8c4794b181827e6"}},{"message":{"text":"It was discovered that Spring Framework was vulnerable to RFD protection bypass. In some instances, depending on the browser used, an attacker could bypass the RFD attack protections via the use of a `jsessionid` path parameter."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2020-5421 spring-expression 5.2.2.RELEASE: spring-security-test 4.1.3.RELEASE: org.springframework","partialFingerprints":{"ruleIdLocationHash/v1":"4f176b18a617c73668b174c389eae58471972c213d454057cb80186b4060cafe"}},{"message":{"text":"Spring Framework is vulnerable to data binding protection bypass due to improper validation of specified disallowed fields in `DataBinders`. This could be leveraged by an attacker to bypass the suggested workaround to **CVE-2022-22965** (**BDSA-2022-0858**) if it is improperly implemented."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2022-22968 spring-expression 5.2.2.RELEASE: spring-security-test 4.1.3.RELEASE: org.springframework","partialFingerprints":{"ruleIdLocationHash/v1":"67cadd433a2006c44857589b89313498b870ad49e195383541915c961c78301a"}},{"message":{"text":"Spring Security contains a path traversal vulnerability. This could be exploited by a remote attacker to bypass security constraints when handling URL path parameters."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2016-9879 spring-security-test 4.1.3.RELEASE: org.springframework.security","partialFingerprints":{"ruleIdLocationHash/v1":"58c33a130ab909f64f6f98a677d0ca1259f457dfebf7b389c86ed185c8be6a9f"}},{"message":{"text":"Spring Security contains a flaw when dealing with OAuth2 access token empty scope list  responses. A remote attacker could leverage this to escalate their privileges under **all** the following conditions being met:\n\n* They act as the role of a Login Client (e.g. uses `http.oauth2Login()`).\n* They use one or more authorization rules with authorities mapped from authorized scopes (e.g. `anyRequest().hasAuthority(\"SCOPE_message.write\")`) in the client application.\n* An authorization server that responds with empty scopes list is registered (RFC 6749, Section 5.1).\n\n**Note:** The role of Resource Servers (`http.oauth2ResourceServer()`) and applications that do not map authorization rules from authorized scopes (eg. `anyRequest().hasAuthority(\"ROLE_USER\")`) cannot be exploited by this vulnerability."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"BDSA-2022-3109 spring-security-test 4.1.3.RELEASE: org.springframework.security","partialFingerprints":{"ruleIdLocationHash/v1":"a4b0e9a09cacdd5dcae15790570755f79b8a5f1f27909a79a970a4741927ad36"}},{"message":{"text":"Spring Security is vulnerable to the bypassing of an authorization mechanism due to improperly implemented regular expression matching. A remote attacker could perform unauthorized actions on a vulnerable server by sending maliciously crafted requests to that server."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2022-22978 spring-security-test 4.1.3.RELEASE: org.springframework.security","partialFingerprints":{"ruleIdLocationHash/v1":"71a45467fab6f2b215f287e47eb2aac6832d25c7683b46b9ce9a14e9d0d27f7c"}},{"message":{"text":"Spring Security contains a vulnerability that allows authentication bypass. An attacker could exploit this to gain unauthorized access to the application."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2019-11272 spring-security-test 4.1.3.RELEASE: org.springframework.security","partialFingerprints":{"ruleIdLocationHash/v1":"49c0d07661ef47420b4112cf27cb3cd5055c4b1c5f506d06b44f777c1455c18d"}},{"message":{"text":"Spring Security is vulnerable to privilege escalation due to a failure to correctly save security context information. An attacker who is allowed to use elevated privileges in a small portion of a program could extend those privileges to the entire program by sending maliciously crafted requests to the application.\n\nIt should be noted that the vulnerability is not present by default, and must be programmed in by an application developer."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2021-22112 spring-security-test 4.1.3.RELEASE: org.springframework.security","partialFingerprints":{"ruleIdLocationHash/v1":"6017af8ac7c98acfd4d43853b058bc2a4bea1607a9edbed3e120a9c3a7baddb5"}},{"message":{"text":"Spring Security contains an uncontrolled resource consumption vulnerability. Attackers could exploit this to create an `OutOfMemory` error and exhaust  system resources, triggering a denial-of-service (DoS) condition."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"BDSA-2021-2310 spring-security-test 4.1.3.RELEASE: org.springframework.security","partialFingerprints":{"ruleIdLocationHash/v1":"47bf8e8b4ee3d58b0891291251e5f93d4e7a82b0c67ed972346bc283b8460708"}},{"message":{"text":"Spring Security is vulnerable to the weakening of bcrypt-generated password hashes due to an integer overflow. An attacker that is able to obtain weak password hashes that have been produced by a vulnerable application could potentially retrieve the plaintext password. It should be noted that the `BCryptPasswordEncoder` class must have been configured to use the maximum work factor (31) in order for the vulnerability to manifest. This is a non-default value."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2022-22976 spring-security-test 4.1.3.RELEASE: org.springframework.security","partialFingerprints":{"ruleIdLocationHash/v1":"44d27a94150600f019d7ae552a777a32b1db193df37d11b8dd111ee3d5ab16dd"}},{"message":{"text":"Spring Security is vulnerable to a remote attacker supplying path name components with different character encodings that bypass the security restraints of Spring MVC static resource URLs."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2018-1199 spring-security-test 4.1.3.RELEASE: org.springframework.security","partialFingerprints":{"ruleIdLocationHash/v1":"c13731daead5b3ccb467f3eecaa2e5584601ccbf8fadc3e53f6810fd62464856"}},{"message":{"text":"Spring Security versions 5.3.x prior to 5.3.2, 5.2.x prior to 5.2.4, 5.1.x prior to 5.1.10, 5.0.x prior to 5.0.16 and 4.2.x prior to 4.2.16 use a fixed null initialization vector with CBC Mode in the implementation of the queryable text encryptor. A malicious user with access to the data that has been encrypted using such an encryptor may be able to derive the unencrypted values using a dictionary attack."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2020-5408 spring-security-test 4.1.3.RELEASE: org.springframework.security","partialFingerprints":{"ruleIdLocationHash/v1":"6aa7df74efb93fc5f15c18e9bca61d94f137f8003c1f27df60fdc7b69412963b"}},{"message":{"text":"logback does not verify the SSL hostname as part of the certificate verification process. A remote attacker could leverage this to perform man-in-the-middle (MitM) attacks against applications using logback."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"BDSA-2021-3401 logback-core 1.2.3: spring-boot-starter-test 2.2.2.RELEASE: ch.qos.logback","partialFingerprints":{"ruleIdLocationHash/v1":"065a671c2adf4c1c73bfae83ebe8695db16107f24aa4b7fbc24b01acaa410f84"}},{"message":{"text":"Logback is vulnerable to remote code execution (RCE) due to missing restrictions on JNDI locations provided in the configuration file. An attacker with an access to `logback.xml` configuration file could provide a JNDI location that would load and execute malicious code from an LDAP server.\n\n**Note:** In addition to high privileges required to access `logback.xml`, successful exploitation requires reloading poisoned configuration data. This can be achieved by an application restart or `scan=\"true\"` set prior to the attack."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2021-42550 logback-core 1.2.3: spring-boot-starter-test 2.2.2.RELEASE: ch.qos.logback","partialFingerprints":{"ruleIdLocationHash/v1":"3e6a4a032cfaa8ea660af33bf15bd5edf58094854d63ace9930e67d3f99e92a8"}},{"message":{"text":"Logback contains a denial-of-service (DoS) vulnerability. An attacker could exploit this issue by connecting to a receiver and sending maliciously crafted data, which could in turn allow them to slow the logging of events or crash the application.\n\nSuccessful exploitation of this vulnerability requires that logback-receiver component is enabled and also reachable by the attacker."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2023-6378 logback-core 1.2.3: spring-boot-starter-test 2.2.2.RELEASE: ch.qos.logback","partialFingerprints":{"ruleIdLocationHash/v1":"c0a2b46840445311d77a4bfe9d58c7e1433b4ce9d07b50970c8dc1643268d288"}},{"message":{"text":"Logback contains a denial-of-service (DoS) vulnerability. An attacker could exploit this issue by connecting to a receiver and sending maliciously crafted data, which could in turn allow them to slow the logging of events or crash the application.\n\nSuccessful exploitation of this vulnerability requires that logback-receiver component is enabled and also reachable by the attacker."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"BDSA-2023-3341 logback-core 1.2.3: spring-boot-starter-test 2.2.2.RELEASE: ch.qos.logback","partialFingerprints":{"ruleIdLocationHash/v1":"db319694f065cb39fc03736e0c35661ec521dbf3c69d61bca8d5799878976b19"}},{"message":{"text":"Apache Log4j, as used in many popular services, is vulnerable to improperly allowing lightweight directory access protocol (LDAP) access via Java naming and directory interface (JNDI). A remote attacker able to supply the end application with specially crafted input that is then processed by the Log4j subcomponent could cause the execution of arbitrary Java code.\n\n**Note** \n\n- log4j-api packages by themselves do not contain the vulnerable functionality and are therefore unaffected. log4j-core packages and the upstream overarching source repository are affected.\n\n- A previously suggested mitigation of setting environment variable `LOG4J_FORMAT_MSG_NO_LOOKUPS=true` is not recommended. This mitigation has been proven inadequate against this vulnerability. \n\n- This vulnerability is partially fixed in [**2.15.0-rc2**](https://github.com/apache/logging-log4j2/releases/tag/log4j-2.15.0-rc2) by [this](https://github.com/apache/logging-log4j2/commit/001aaada7dab82c3c09cde5f8e14245dc9d8b454) commit and [this](https://github.com/apache/logging-log4j2/commit/bac0d8a35c7e354a0d3f706569116dff6c6bd658) commit. These fixes were deemed incomplete. See BDSA-2021-3779 (CVE-2021-45046) for more details.\n\nThis vulnerability is listed as exploitable by the Cybersecurity \u0026 Infrastructure Security Agency in their [Known Exploited Vulnerabilities Catalog](https://www.cisa.gov/known-exploited-vulnerabilities-catalog)."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"BDSA-2021-3731 spring-boot-starter-json 2.2.2.RELEASE: spring-boot-starter-web 2.2.2.RELEASE: org.springframework.boot","partialFingerprints":{"ruleIdLocationHash/v1":"892112de12e084e30f02178691a4cb2cfbb54d9202645a627569c17cd6fdb68a"}},{"message":{"text":"Spring Framework is vulnerable to a flaw in the access restrictions to the security sensitive `ClassLoader` property. The restrictions can be bypassed through alternative paths available with Java9 and later. An attacker can leverage this vulnerability to cause remote code execution (RCE).\n\n**Note** this issue exists because the restrictions that were introduced to prevent exploitation of BDSA-2010-0001 (CVE-2010-1622) can be bypassed on platforms where Java9 and later are in use.\n\nThis vulnerability is listed as exploitable by the Cybersecurity \u0026 Infrastructure Security Agency in their [Known Exploited Vulnerabilities Catalog](https://www.cisa.gov/known-exploited-vulnerabilities-catalog)."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2022-22965 spring-boot-starter-json 2.2.2.RELEASE: spring-boot-starter-web 2.2.2.RELEASE: org.springframework.boot","partialFingerprints":{"ruleIdLocationHash/v1":"b97da7bcb58c3673b94f199e8bea4f960d3c3ee62456263c84906ea349daee7f"}},{"message":{"text":"Spring framework contains a security bypass vulnerability when `/**` is used as a pattern in Spring Security configuration with the `/cloudfoundryapplication/**` component. The potential for security bypass exists due to the mismatch in pattern matching between Spring Security and Cloud Foundry.\n\n**Note**: The vendor has stated in their [advisory](https://spring.io/security/cve-2023-20873) that this application is not vulnerable if any of the following is true:\n* The application is not deployed to Cloud Foundry.\n* You have disabled Cloud Foundry actuator endpoints with `management.cloudfoundry.enabled` set to `false`.\n* Your application does not have handler mappings that can handle requests to `/cloudfoundryapplication/**`."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2023-20873 spring-boot-starter-json 2.2.2.RELEASE: spring-boot-starter-web 2.2.2.RELEASE: org.springframework.boot","partialFingerprints":{"ruleIdLocationHash/v1":"54d989c16290017f93d241adcd0f60ac6bc3e7c193101aa0b14334d0a376c85e"}},{"message":{"text":"Apache log4j is vulnerable to a denial-of-service (DoS) when uncontrolled recursion occurs through a self-referencing lookup.  An attacker can trigger a DoS with malicious input data that generates a recursive lookup  and consequent application crash.\n\nSuccessful attacks require the attacker to have access to Thread Context Map (MDC) input, and for log4j configured with non-default pattern layout with a Context Lookup.\n\nOnly the log4j-core JAR file is impacted by this vulnerability. Applications using only the log4j-api JAR file without the log4j-core JAR file are not impacted.\n\nApache Log4j is the only Logging Services subproject affected by this vulnerability. Other projects like Log4net  are not impacted."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"BDSA-2021-3817 spring-boot-starter-json 2.2.2.RELEASE: spring-boot-starter-web 2.2.2.RELEASE: org.springframework.boot","partialFingerprints":{"ruleIdLocationHash/v1":"b412bae34b129e06bc6ec379af3bddd39161e5e594043ae53d670ed9d536e6a5"}},{"message":{"text":"Apache Log4j contains a remote code execution (RCE) vulnerability. This allows an attacker that has permissions to modify the logging configuration files to input a malicious JDBC Appender with a data source referencing a JDNI URI. This can then lead to RCE.\n\n**Note:** This vulnerability impacts log4j-core."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"BDSA-2021-3887 spring-boot-starter-json 2.2.2.RELEASE: spring-boot-starter-web 2.2.2.RELEASE: org.springframework.boot","partialFingerprints":{"ruleIdLocationHash/v1":"4c4ce6515a75e59eb7827f0c4bdc19c7f54392609cff0776d8321f885fcd7f6c"}},{"message":{"text":"Spring Boot is vulnerable to privilege escalation due to a race condition which occurs during the creation of a temporary directory. A local attacker could create their own temporary directory by racing against Spring Boot and supply their own configuration files which would allow for the full takeover of the application."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2022-27772 spring-boot-starter-json 2.2.2.RELEASE: spring-boot-starter-web 2.2.2.RELEASE: org.springframework.boot","partialFingerprints":{"ruleIdLocationHash/v1":"13ad1199839bc21f3448b999ebf59fab49b3f5b3c6c2c9323a126c272a094062"}},{"message":{"text":"Spring Boot is vulnerable to denial-of-service (DoS) via the welcome page when used to serve an application behind a reverse proxy cache. This will cause users to continuously be served a 404 response, preventing standard application use.\n\n\n**Note:** Spring have provided the following guidance for vulnerable criteria. \nAn application is vulnerable if all of the following are true:\n\n- \"The application has Spring MVC auto-configuration enabled. This is the case by default if Spring MVC is on the classpath.\"\n- \"The application makes use of Spring Boot's welcome page support, either static or templated.\"\n- \"Your application is deployed behind a proxy which caches 404 responses.\"\n\nThe application is not vulnerable if any of the following are true:\n\n- \"Spring MVC auto-configuration is disabled. This is true if `WebMvcAutoConfiguration` is explicitly excluded, if Spring MVC is not on the classpath, or if `spring.main.web-application-type` is set to a value other than `SERVLET`.\"\n- \"The application does not use Spring Boot's welcome page support.\"\n- \"You do not have a proxy which caches 404 responses.\""},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2023-20883 spring-boot-starter-json 2.2.2.RELEASE: spring-boot-starter-web 2.2.2.RELEASE: org.springframework.boot","partialFingerprints":{"ruleIdLocationHash/v1":"ba72053837ef5adfa9ee96f385f1e0805be3444a11eb6a21beac87a935a46af8"}},{"message":{"text":"Spring Boot is vulnerable to denial-of-service (DoS). An unauthenticated user could trigger the vulnerability by providing specially crafted HTTP requests to a web metrics endpoint."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2023-34055 spring-boot-starter-json 2.2.2.RELEASE: spring-boot-starter-web 2.2.2.RELEASE: org.springframework.boot","partialFingerprints":{"ruleIdLocationHash/v1":"6fb23ab4711898aae25cef48d11d009c2d2949714da4e1cb551f14d034dc3bb9"}},{"message":{"text":"Jackson Databind is vulnerable to XML external entities (XXE) due to insecure entity expansion in the `DOMDeserializer` component.  An attacker could exploit this vulnerability via a crafted request in order to execute an XML external entities (XXE) attack against the application."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2020-25649 jackson-databind 2.10.1: wiremock 2.8.0: com.fasterxml.jackson.core","partialFingerprints":{"ruleIdLocationHash/v1":"e63fb93408749550fb3a9f1b15ddd50cd2da4a088b02d7f28372bf96687436ac"}},{"message":{"text":"jackson-databind is vulnerable to a Java `StackOverflow` exception within its implementation of `UntypedObjectDeserializer` due to how deeply nested objects are handled. An attacker could exploit this in order to cause a denial-of-service (DoS) condition."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2020-36518 jackson-databind 2.10.1: wiremock 2.8.0: com.fasterxml.jackson.core","partialFingerprints":{"ruleIdLocationHash/v1":"da8c3d5e3fa6e8c9a85a00c98cb62692f74cdef9a6ccaf1b87de69e3540fe5e7"}},{"message":{"text":"jackson-databind contains a flaw in it's handling of JsonNode JDK Serialization where excessive heap memory can be consumed. An attacker that is able to supply specially crafted data for JDK deserialization may be able to exhaust the application of available memory, resulting in a denial-of-service (DoS) of the application."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2021-46877 jackson-databind 2.10.1: wiremock 2.8.0: com.fasterxml.jackson.core","partialFingerprints":{"ruleIdLocationHash/v1":"bff1b2110ba133d10ee7866543e849f277aaf35b1dd6fadae148cdd2d5712b68"}},{"message":{"text":"Jackson Databind is vulnerable to denial-of-service (DoS) due to the improper management of system resources within its primitive value deserialization functionality. A remote attacker could leverage this issue in order to cause a vulnerable system to crash."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2022-42003 jackson-databind 2.10.1: wiremock 2.8.0: com.fasterxml.jackson.core","partialFingerprints":{"ruleIdLocationHash/v1":"792d44b793ccb310e8ef5bcdd9fd2c550c9fc7ab5f9409af5a2463b6afc51ed5"}},{"message":{"text":"Jackson Databind is vulnerable to denial-of-service (DoS) due to the improper management of system resources within its `BeanDeserializer` component. A remote attacker could cause a vulnerable server to crash by causing that server to process a maliciously crafted serialized object.\n\n**Note:** As per discussion [here](https://github.com/FasterXML/jackson-databind/issues/3582#issuecomment-1242153562), this vulnerability is not applicable in the default setting of `ObjectMapper`, only in specific `DeserializationFeature` configurations."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2022-42004 jackson-databind 2.10.1: wiremock 2.8.0: com.fasterxml.jackson.core","partialFingerprints":{"ruleIdLocationHash/v1":"950b42a704e96a830aeaaa1c11b6db474b613299148859467df361c11b058d79"}},{"message":{"text":"jackson-databind through 2.15.2 allows attackers to cause a denial of service or other unspecified impact via a crafted object that uses cyclic dependencies. NOTE: the vendor's perspective is that this is not a valid vulnerability report, because the steps of constructing a cyclic data structure and trying to serialize it cannot be achieved by an external attacker."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2023-35116 jackson-databind 2.10.1: wiremock 2.8.0: com.fasterxml.jackson.core","partialFingerprints":{"ruleIdLocationHash/v1":"65279a5b859d860dd6524238138784dddaaf872e48c49653985e6478d3cf52f2"}},{"message":{"text":"thymeleaf-spring is vulnerable to template injection. This can lead to remote code execution (RCE) through double evaluation of certain parameters.\n\n**Note** the vendor states:\n\u003e Just in order to reduce anxiety around this issue, I'd like to explain that CVE-2021-43466 only affects those applications that contain controllers or controller configurations that take a request parameter and directly use it, without previous filtering, as the name of the view to be rendered — which is something IMHO no one should be doing, as it is a bit like voluntarily providing a way for code injection."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2021-43466 thymeleaf-spring5 3.0.11.RELEASE: spring-boot-starter-thymeleaf 2.2.2.RELEASE: org.thymeleaf","partialFingerprints":{"ruleIdLocationHash/v1":"a1882e27410c45955a186a8055f30707475f250e4df8e62fbd37907b09be68ec"}},{"message":{"text":"Pivotal Spring Framework through 5.3.16 suffers from a potential remote code execution (RCE) issue if used for Java deserialization of untrusted data. Depending on how the library is implemented within a product, this issue may or not occur, and authentication may be required. NOTE: the vendor's position is that untrusted data is not an intended use case. The product's behavior will not be changed because some users rely on deserialization of trusted data."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2016-1000027 spring-test 5.2.2.RELEASE: spring-boot-starter-test 2.2.2.RELEASE: org.springframework","partialFingerprints":{"ruleIdLocationHash/v1":"7705831a701600198c31c310cb58cfaa0d6b21d4f38669ef5849f1d059361452"}},{"message":{"text":"Spring Framework is vulnerable to a flaw in the access restrictions to the security sensitive `ClassLoader` property. The restrictions can be bypassed through alternative paths available with Java9 and later. An attacker can leverage this vulnerability to cause remote code execution (RCE).\n\n**Note** this issue exists because the restrictions that were introduced to prevent exploitation of BDSA-2010-0001 (CVE-2010-1622) can be bypassed on platforms where Java9 and later are in use.\n\nThis vulnerability is listed as exploitable by the Cybersecurity \u0026 Infrastructure Security Agency in their [Known Exploited Vulnerabilities Catalog](https://www.cisa.gov/known-exploited-vulnerabilities-catalog)."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2022-22965 spring-test 5.2.2.RELEASE: spring-boot-starter-test 2.2.2.RELEASE: org.springframework","partialFingerprints":{"ruleIdLocationHash/v1":"bb7c894c68fbffe9dde6dab0f34d838aae5824d3c8c785c15ac9fa50c28fa66e"}},{"message":{"text":"Spring Framework is vulnerable to cross-site request forgery (CSRF) attacks via CORS preflight requests which target Spring MVC or Spring WebFlux endpoints."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2020-5397 spring-test 5.2.2.RELEASE: spring-boot-starter-test 2.2.2.RELEASE: org.springframework","partialFingerprints":{"ruleIdLocationHash/v1":"f6307256678b68223e5aafb477ec946c9322f37f9ab1050857444159a5450600"}},{"message":{"text":"Software systems using Spring Framework may be vulnerable to unsafe deserialization if they employ unsafe use of certain provided deserialization functionality. A remote attacker could potentially execute arbitrary code on a vulnerable endpoint by passing a maliciously crafted serialized object to that endpoint.\n\n**Note**: This issue only affects software that has been written to leverage specific deserialization functionality provided by the Spring Framework without sanitization."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"BDSA-2022-0847 spring-test 5.2.2.RELEASE: spring-boot-starter-test 2.2.2.RELEASE: org.springframework","partialFingerprints":{"ruleIdLocationHash/v1":"3138d3ce7914631bff24fe7ca9b1debe6ee2d084f4fc922d306fbb590bf2cea7"}},{"message":{"text":"Spring Framework is vulnerable to a reflected file download (RFD) attack via improper input validation on filenames in a `Content-Disposition` header."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2020-5398 spring-test 5.2.2.RELEASE: spring-boot-starter-test 2.2.2.RELEASE: org.springframework","partialFingerprints":{"ruleIdLocationHash/v1":"859a26050884b6f4bae3ab457049c3c24c265fceee25a5d718f038c3c527e000"}},{"message":{"text":"Spring Framework is vulnerable to log file injection due to the insufficient validation of user input in an undisclosed component. An attacker could leverage this issue in order to add arbitrary entries to a log file which could impact both the integrity issues and performance issues.\n\n**Note**: a follow-up to this issue was disclosed as **CVE-2021-22060** (**BDSA-2021-3236**), with further fixed releases that protect against additional types of input and in more places of the Spring Framework codebase."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2021-22096 spring-test 5.2.2.RELEASE: spring-boot-starter-test 2.2.2.RELEASE: org.springframework","partialFingerprints":{"ruleIdLocationHash/v1":"223bbe6c774eb002649fe1277e111528dc6fe6187e2020de2af7061eda52ce9b"}},{"message":{"text":"Spring Framework is vulnerable to log file injection due to the insufficient validation of user input in an undisclosed component. An attacker could leverage this issue in order to add arbitrary entries to a log file which could impact both the integrity issues and performance issues.\n\n**Note**: the vendor states this issue exists as a follow up to CVE-2021-22096 (BDSA-2022-0011) that protects against additional types of input and in more places of the Spring Framework codebase."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2021-22060 spring-test 5.2.2.RELEASE: spring-boot-starter-test 2.2.2.RELEASE: org.springframework","partialFingerprints":{"ruleIdLocationHash/v1":"0f7f1c79f2fee86b6ef83c27e49162899fce8cb4caee9fe369bf281ee795371c"}},{"message":{"text":"Spring-Framework's spring-expression is vulnerable to a denial-of-service (DoS) condition. This allows an attacker to use crafted input to cause the spring-expression process to crash due to an exception."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2022-22950 spring-test 5.2.2.RELEASE: spring-boot-starter-test 2.2.2.RELEASE: org.springframework","partialFingerprints":{"ruleIdLocationHash/v1":"5ba7e929e6aa4ebaa766debf6e519ac64e33e2c769d825d884df7b65cdd61643"}},{"message":{"text":"Spring Framework is vulnerable to privilege escalation due to the creation of unsafe temporary directories by the WebFlux component. A local authenticated attacker could modify arbitrary files via maliciously crafted `multipart` requests. \n\nThis vulnerability does not affect Spring MVC applications, or applications that do not handle `multipart` file requests."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2021-22118 spring-test 5.2.2.RELEASE: spring-boot-starter-test 2.2.2.RELEASE: org.springframework","partialFingerprints":{"ruleIdLocationHash/v1":"06a9719a5579621f09c85106ce5f35e7a48578ffac6ce4e2939ca2d1f32842a0"}},{"message":{"text":"Spring Framework is vulnerable to denial-of-service (DoS) due to the improper implementation of data binding functionality. A remote attacker could cause a vulnerable server to crash if that server provides file upload functionality."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2022-22970 spring-test 5.2.2.RELEASE: spring-boot-starter-test 2.2.2.RELEASE: org.springframework","partialFingerprints":{"ruleIdLocationHash/v1":"fc1b48fae743ceeba3a7755b10caaa1cc48d12044ef6509188be58bff5722df9"}},{"message":{"text":"Spring Framework is vulnerable to denial-of-service (DoS) due to the improper handling of the STOMP protocol for websockets. A remote authenticated attacker could leverage this issue in order to cause a server to crash."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2022-22971 spring-test 5.2.2.RELEASE: spring-boot-starter-test 2.2.2.RELEASE: org.springframework","partialFingerprints":{"ruleIdLocationHash/v1":"fe93492108a45a85b97f1c81c8690333d4325f89ef61b8837b395e94a8f2fe9b"}},{"message":{"text":"Spring Framework is vulnerable to denial-of-service (DoS) via specially crafted SpEL expressions. An attacker could exploit this issue by passing a crafted SpEL expression to the application which may result in a crash."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2023-20861 spring-test 5.2.2.RELEASE: spring-boot-starter-test 2.2.2.RELEASE: org.springframework","partialFingerprints":{"ruleIdLocationHash/v1":"a12f7e9398cd03561c2b8c47d5764e136532c6ce158961b3bc4de2a299442137"}},{"message":{"text":"Spring Framework is vulnerable to denial-of-service (DoS) via specially crafted SpEL expressions."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2023-20863 spring-test 5.2.2.RELEASE: spring-boot-starter-test 2.2.2.RELEASE: org.springframework","partialFingerprints":{"ruleIdLocationHash/v1":"bde19bd36646656318f79a61c9546d7658557f14693a699808bc31d171d39420"}},{"message":{"text":"It was discovered that Spring Framework was vulnerable to RFD protection bypass. In some instances, depending on the browser used, an attacker could bypass the RFD attack protections via the use of a `jsessionid` path parameter."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2020-5421 spring-test 5.2.2.RELEASE: spring-boot-starter-test 2.2.2.RELEASE: org.springframework","partialFingerprints":{"ruleIdLocationHash/v1":"876a0faf4dcae4e79e96b3847631eaff4b8310f82a0a47908a6d9093c6f69dfe"}},{"message":{"text":"Spring Framework is vulnerable to data binding protection bypass due to improper validation of specified disallowed fields in `DataBinders`. This could be leveraged by an attacker to bypass the suggested workaround to **CVE-2022-22965** (**BDSA-2022-0858**) if it is improperly implemented."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2022-22968 spring-test 5.2.2.RELEASE: spring-boot-starter-test 2.2.2.RELEASE: org.springframework","partialFingerprints":{"ruleIdLocationHash/v1":"c127de87dc76bce9782d55628988eeee49072eecd794e2e1b3eca6f8dd35c1e8"}},{"message":{"text":"Jetty is vulnerable to temporary directory Hijacking via a race condition. If code is executed from this temporary directory it can lead to local privilege escalation."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2020-27216 jetty-continuation 9.4.24.v20191120: wiremock 2.8.0: org.eclipse.jetty","partialFingerprints":{"ruleIdLocationHash/v1":"cedb6d80c69d05f9518f48ad4025b8848174a361b44599a0d17507c33e8ef933"}},{"message":{"text":"The HTTP/2 protocol contains a flaw related to the stream multiplexing feature that can allow for excessive resource consumption on servers operating implementations of the HTTP/2 protocol. \n\nThe HTTP/2 protocol allows clients to signal to a server to cancel a previously opened stream by sending an `RST_STREAM` frame. Attackers can abuse this stream canceling ability by opening a large number of streams at once immediately followed by `RST_STREAM` frames. In most HTTP/2 implementations this bypasses concurrent open stream limits and causes servers to spend processing time first handling request frames and then performing stream tear downs. For the server, these operations can pile up whereas the attacker client paid minuscule bandwidth and processing costs.\n\n[Amazon](https://aws.amazon.com/security/security-bulletins/AWS-2023-011/), [Cloudflare](https://blog.cloudflare.com/technical-breakdown-http2-rapid-reset-ddos-attack/) and [Google](https://cloud.google.com/blog/products/identity-security/google-cloud-mitigated-largest-ddos-attack-peaking-above-398-million-rps/) have reported that this vulnerability has been exploited in the wild from August to October 2023.\n\nThis vulnerability is listed as exploitable by the Cybersecurity \u0026 Infrastructure Security Agency in their [Known Exploited Vulnerabilities Catalog](https://www.cisa.gov/known-exploited-vulnerabilities-catalog)."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2023-44487 jetty-continuation 9.4.24.v20191120: wiremock 2.8.0: org.eclipse.jetty","partialFingerprints":{"ruleIdLocationHash/v1":"941459782fc6934b155af45915c95e8229a006c298312a03ac847261cba8d59b"}},{"message":{"text":"Jetty is vulnerable to denial-of-service (DoS) due to the use of an exponential algorithm that can have excessive resource requirements. A remote attacker could cause a vulnerable server to become unresponsive by sending maliciously crafted HTTP requests to that server."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2020-27223 jetty-continuation 9.4.24.v20191120: wiremock 2.8.0: org.eclipse.jetty","partialFingerprints":{"ruleIdLocationHash/v1":"cd23d7824c4ef4b3ad34d6cb926dfa1ff6e3a1e4fa8ba9595f11f8417cae2417"}},{"message":{"text":"Eclipse Jetty is vulnerable to Denial-of-Service (DoS) via invalid TLS frames. An attacker could exploit this by sending a TLS frame with a size in excess of 17408 resulting in excessive resource consumption leading to a DoS condition."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2021-28165 jetty-continuation 9.4.24.v20191120: wiremock 2.8.0: org.eclipse.jetty","partialFingerprints":{"ruleIdLocationHash/v1":"b2e76c422521832ccfe51c447e943da2ab55c86a6f0f8d813b59120f7abcf2b4"}},{"message":{"text":"Jetty is vulnerable to information disclosure due to improper requested path verification. This allows crafted requests to access protected resources of the web application which, depending on the implementation, might reveal sensitive information."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2021-28169 jetty-continuation 9.4.24.v20191120: wiremock 2.8.0: org.eclipse.jetty","partialFingerprints":{"ruleIdLocationHash/v1":"bee96a55c9db01cd98efcd965a68f46ec7a456a89ea07766819ac5908db3e0d1"}},{"message":{"text":"Eclipse Jetty is vulnerable to a denial-of-service (DoS) issue due to presence of a user input validation flaw in the HTTP/2 HPACK functionality that can lead to an integer overflow and allow HPACK headers to exceed their expected size limits.\n\nAn attacker could submit crafted HTTP messages that trigger the integer overflow flaw and cause large buffers to be allocated on the server, consuming memory resources in a manner that could cause the server to run out of memory."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2023-36478 jetty-continuation 9.4.24.v20191120: wiremock 2.8.0: org.eclipse.jetty","partialFingerprints":{"ruleIdLocationHash/v1":"d262cfb674f989d707e9524ce0c0b57377ee65492a67850ae5e149b0821d02ca"}},{"message":{"text":"Eclipse Jetty does not correctly handle invalid HTTP/2 requests. An attacker could exploit this flaw to exhaust the HTTP/2 flow control window or TCP congest the connection. This will cause the relevant selector threads to be blocked and it will lead to a denial-of-service (DoS)."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2022-2048 jetty-continuation 9.4.24.v20191120: wiremock 2.8.0: org.eclipse.jetty","partialFingerprints":{"ruleIdLocationHash/v1":"87f165a38ee5994539594f518de6f22fb917f8dc13a7fa6fe352df7a5a58bf59"}},{"message":{"text":"Eclipse Jetty contains a vulnerability that allows a remote attacker to inject data into other client's requests. This vulnerability only exists when GZIP request body inflation is enabled, and requests from different clients are multiplexed onto a single connection."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2020-27218 jetty-continuation 9.4.24.v20191120: wiremock 2.8.0: org.eclipse.jetty","partialFingerprints":{"ruleIdLocationHash/v1":"673d0eda689a03a3c922b4cc2d4d9329ba7fabcdc4c3df458bd272fa0725624d"}},{"message":{"text":"Eclipse Jetty contains a vulnerability in its multipart request parsing mechanism that can lead to an out-of-memory error due to insufficient limiting measures. An attacker can exploit this flaw by supplying a request containing a large multipart without a filename in order to cause a denial-of-service (DoS)."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2023-26048 jetty-continuation 9.4.24.v20191120: wiremock 2.8.0: org.eclipse.jetty","partialFingerprints":{"ruleIdLocationHash/v1":"997432db167efc3892aa0df841b051a9f973d9ff6f745d8fc08877833f3f9be4"}},{"message":{"text":"Eclipse Jetty does not properly parse quoted values in cookies. This could allow an attacker to smuggle cookies within other cookies into the application. The attacker can also tamper with the cookie parsing mechanism and cause other unintended behavior."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2023-26049 jetty-continuation 9.4.24.v20191120: wiremock 2.8.0: org.eclipse.jetty","partialFingerprints":{"ruleIdLocationHash/v1":"b0e2d877c59bc0d20151b50e1ed17563ddf4b95c34002d7b82e1397d2f2f4f27"}},{"message":{"text":"Eclipse Jetty is vulnerable to HTTP request smuggling due to the improper parsing of HTTP requests. An attacker could exploit this vulnerability by sending maliciously crafted HTTP requests to a vulnerable endpoint with multiple requests included inside the body by manipulating the `Content-Length` of the request. The smuggling of HTTP requests may allow for the bypass of security tools such as web application firewalls (WAFs) and intrusion detection systems (IDSs)."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2023-40167 jetty-continuation 9.4.24.v20191120: wiremock 2.8.0: org.eclipse.jetty","partialFingerprints":{"ruleIdLocationHash/v1":"c260f14fdf354584e529d64c399624639a43249e05889b695e4a3281bdd61b47"}},{"message":{"text":"Eclipse Jetty contains an improper neutralization of quoting syntax issue within the CGI servlet. This could allow an authenticated attacker to send a request to the CGI Servlet for a binary with a space in its name in order to manipulate the command structure and execute incorrect commands."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2023-36479 jetty-continuation 9.4.24.v20191120: wiremock 2.8.0: org.eclipse.jetty","partialFingerprints":{"ruleIdLocationHash/v1":"c08a5fa4cfcefa0c5c854462d550b9df27f734a6d4db90e4c490d7afd2d34829"}},{"message":{"text":"Eclipse Jetty contains an improper authentication vulnerability. This could allow an authenticated attacker to bypass authentication after it has been rejected or revoked by the `LoginService` and make a request as if authenticated.\n\n**Note:** The vendor has stated that this issue impacts usages of the `jetty-openid` which have configured a nested `LoginService` and where that `LoginService` is capable of rejecting previously authenticated users."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2023-41900 jetty-continuation 9.4.24.v20191120: wiremock 2.8.0: org.eclipse.jetty","partialFingerprints":{"ruleIdLocationHash/v1":"3161b8e1732d23fcac0850fcc23787ebbe0e5100a15368bcd66cb602ca833a98"}},{"message":{"text":"Eclipse Jetty is vulnerable to insufficient session expiry. This may result in sessions used on a shared computer persisting for longer than intended."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2021-34428 jetty-continuation 9.4.24.v20191120: wiremock 2.8.0: org.eclipse.jetty","partialFingerprints":{"ruleIdLocationHash/v1":"939cbc20918dd44d59e07ce7571c53f4cec41295eb901532611724ce7fa51d69"}},{"message":{"text":"Eclipse Jetty does not correctly handle invalid authority segments of HTTP URIs. An authenticated attacker could exploit this flaw by passing an invalid URI that contains an improper authority with no host so that it is interpreted as one with a host."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2022-2047 jetty-continuation 9.4.24.v20191120: wiremock 2.8.0: org.eclipse.jetty","partialFingerprints":{"ruleIdLocationHash/v1":"7ab6780e45176af929800fb501a939119eb5a5653acd3b20472c1aad1cfa837c"}},{"message":{"text":"Pivotal Spring Framework through 5.3.16 suffers from a potential remote code execution (RCE) issue if used for Java deserialization of untrusted data. Depending on how the library is implemented within a product, this issue may or not occur, and authentication may be required. NOTE: the vendor's position is that untrusted data is not an intended use case. The product's behavior will not be changed because some users rely on deserialization of trusted data."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2016-1000027 spring-context 5.2.2.RELEASE: spring-security-test 4.1.3.RELEASE: org.springframework","partialFingerprints":{"ruleIdLocationHash/v1":"232df40651790f841e945976c2299136fde7a67d0cdd618f2d5d5d101b0a55d9"}},{"message":{"text":"Spring Framework is vulnerable to a flaw in the access restrictions to the security sensitive `ClassLoader` property. The restrictions can be bypassed through alternative paths available with Java9 and later. An attacker can leverage this vulnerability to cause remote code execution (RCE).\n\n**Note** this issue exists because the restrictions that were introduced to prevent exploitation of BDSA-2010-0001 (CVE-2010-1622) can be bypassed on platforms where Java9 and later are in use.\n\nThis vulnerability is listed as exploitable by the Cybersecurity \u0026 Infrastructure Security Agency in their [Known Exploited Vulnerabilities Catalog](https://www.cisa.gov/known-exploited-vulnerabilities-catalog)."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2022-22965 spring-context 5.2.2.RELEASE: spring-security-test 4.1.3.RELEASE: org.springframework","partialFingerprints":{"ruleIdLocationHash/v1":"0b5815caea164e69ce92286837510d9e535cf123b3b865269ce37a032606c3fd"}},{"message":{"text":"Spring Framework is vulnerable to cross-site request forgery (CSRF) attacks via CORS preflight requests which target Spring MVC or Spring WebFlux endpoints."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2020-5397 spring-context 5.2.2.RELEASE: spring-security-test 4.1.3.RELEASE: org.springframework","partialFingerprints":{"ruleIdLocationHash/v1":"9cd5a80dc276314be831d0e634cb2eced2272544cd6ae89911e1199a11fb2000"}},{"message":{"text":"Software systems using Spring Framework may be vulnerable to unsafe deserialization if they employ unsafe use of certain provided deserialization functionality. A remote attacker could potentially execute arbitrary code on a vulnerable endpoint by passing a maliciously crafted serialized object to that endpoint.\n\n**Note**: This issue only affects software that has been written to leverage specific deserialization functionality provided by the Spring Framework without sanitization."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"BDSA-2022-0847 spring-context 5.2.2.RELEASE: spring-security-test 4.1.3.RELEASE: org.springframework","partialFingerprints":{"ruleIdLocationHash/v1":"30241a2d7a573e2c7bb496ec4bd1a659bb62040f219b8dfc8c0c9e2d66441a89"}},{"message":{"text":"Spring Framework is vulnerable to a reflected file download (RFD) attack via improper input validation on filenames in a `Content-Disposition` header."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2020-5398 spring-context 5.2.2.RELEASE: spring-security-test 4.1.3.RELEASE: org.springframework","partialFingerprints":{"ruleIdLocationHash/v1":"6afc371848a2ecb4a688b95da574bea8c6219e74643349a5f09b2472ee08dc11"}},{"message":{"text":"Spring Framework is vulnerable to log file injection due to the insufficient validation of user input in an undisclosed component. An attacker could leverage this issue in order to add arbitrary entries to a log file which could impact both the integrity issues and performance issues.\n\n**Note**: a follow-up to this issue was disclosed as **CVE-2021-22060** (**BDSA-2021-3236**), with further fixed releases that protect against additional types of input and in more places of the Spring Framework codebase."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2021-22096 spring-context 5.2.2.RELEASE: spring-security-test 4.1.3.RELEASE: org.springframework","partialFingerprints":{"ruleIdLocationHash/v1":"1f97eaf7a2da7ec949c61aa3a1ef4ce0976a54ae7864a77767c56ef9688b34b4"}},{"message":{"text":"Spring Framework is vulnerable to log file injection due to the insufficient validation of user input in an undisclosed component. An attacker could leverage this issue in order to add arbitrary entries to a log file which could impact both the integrity issues and performance issues.\n\n**Note**: the vendor states this issue exists as a follow up to CVE-2021-22096 (BDSA-2022-0011) that protects against additional types of input and in more places of the Spring Framework codebase."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2021-22060 spring-context 5.2.2.RELEASE: spring-security-test 4.1.3.RELEASE: org.springframework","partialFingerprints":{"ruleIdLocationHash/v1":"a157495e2147ec222dcb0df1c4065b646ebcfaa0befce5c6cb6d56debedac979"}},{"message":{"text":"Spring-Framework's spring-expression is vulnerable to a denial-of-service (DoS) condition. This allows an attacker to use crafted input to cause the spring-expression process to crash due to an exception."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2022-22950 spring-context 5.2.2.RELEASE: spring-security-test 4.1.3.RELEASE: org.springframework","partialFingerprints":{"ruleIdLocationHash/v1":"f5ec54717c462e3cb112a46feade8f2b169f4710cb0d8de9cd7bcbdaf2d2865f"}},{"message":{"text":"Spring Framework is vulnerable to privilege escalation due to the creation of unsafe temporary directories by the WebFlux component. A local authenticated attacker could modify arbitrary files via maliciously crafted `multipart` requests. \n\nThis vulnerability does not affect Spring MVC applications, or applications that do not handle `multipart` file requests."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2021-22118 spring-context 5.2.2.RELEASE: spring-security-test 4.1.3.RELEASE: org.springframework","partialFingerprints":{"ruleIdLocationHash/v1":"18a0c24ac214a8cfcf5c50af1042f51c5cc4de963c5b87eb0e821f9ef43006bc"}},{"message":{"text":"Spring Framework is vulnerable to denial-of-service (DoS) due to the improper implementation of data binding functionality. A remote attacker could cause a vulnerable server to crash if that server provides file upload functionality."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2022-22970 spring-context 5.2.2.RELEASE: spring-security-test 4.1.3.RELEASE: org.springframework","partialFingerprints":{"ruleIdLocationHash/v1":"b8ad73a3afbbae6f1e01c4dcb563b3f51cd5b0952e2cce3229f436d0131147b7"}},{"message":{"text":"Spring Framework is vulnerable to denial-of-service (DoS) due to the improper handling of the STOMP protocol for websockets. A remote authenticated attacker could leverage this issue in order to cause a server to crash."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2022-22971 spring-context 5.2.2.RELEASE: spring-security-test 4.1.3.RELEASE: org.springframework","partialFingerprints":{"ruleIdLocationHash/v1":"53b6a10fc3e70a3b818fdbd18e818fedea7b370ab962715639ebeec9f48ccd11"}},{"message":{"text":"Spring Framework is vulnerable to denial-of-service (DoS) via specially crafted SpEL expressions. An attacker could exploit this issue by passing a crafted SpEL expression to the application which may result in a crash."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2023-20861 spring-context 5.2.2.RELEASE: spring-security-test 4.1.3.RELEASE: org.springframework","partialFingerprints":{"ruleIdLocationHash/v1":"46fa7673e389a2942be59b169c821561cbb03c9226aa8cdd1cd3b5b9f0b144cf"}},{"message":{"text":"Spring Framework is vulnerable to denial-of-service (DoS) via specially crafted SpEL expressions."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2023-20863 spring-context 5.2.2.RELEASE: spring-security-test 4.1.3.RELEASE: org.springframework","partialFingerprints":{"ruleIdLocationHash/v1":"204a5e200e9537a8d1da8e1b146c8a14c8b02932328b90bffdcb7c19e3ff54ce"}},{"message":{"text":"It was discovered that Spring Framework was vulnerable to RFD protection bypass. In some instances, depending on the browser used, an attacker could bypass the RFD attack protections via the use of a `jsessionid` path parameter."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2020-5421 spring-context 5.2.2.RELEASE: spring-security-test 4.1.3.RELEASE: org.springframework","partialFingerprints":{"ruleIdLocationHash/v1":"6e2c81c0bbc0164684fdf056e43d371df792b66974f73efb5bc83afd9e800249"}},{"message":{"text":"Spring Framework is vulnerable to data binding protection bypass due to improper validation of specified disallowed fields in `DataBinders`. This could be leveraged by an attacker to bypass the suggested workaround to **CVE-2022-22965** (**BDSA-2022-0858**) if it is improperly implemented."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2022-22968 spring-context 5.2.2.RELEASE: spring-security-test 4.1.3.RELEASE: org.springframework","partialFingerprints":{"ruleIdLocationHash/v1":"b658c1fff76d6de9c364f129c9da2b2dcf437969b96e1087f8478218051e5f7f"}},{"message":{"text":"Jetty is vulnerable to temporary directory Hijacking via a race condition. If code is executed from this temporary directory it can lead to local privilege escalation."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2020-27216 jetty-servlet 9.4.24.v20191120: wiremock 2.8.0: org.eclipse.jetty","partialFingerprints":{"ruleIdLocationHash/v1":"104977e89e9988e831d4776f327c56e34997240ce653ccc1f486762d393872e5"}},{"message":{"text":"The HTTP/2 protocol contains a flaw related to the stream multiplexing feature that can allow for excessive resource consumption on servers operating implementations of the HTTP/2 protocol. \n\nThe HTTP/2 protocol allows clients to signal to a server to cancel a previously opened stream by sending an `RST_STREAM` frame. Attackers can abuse this stream canceling ability by opening a large number of streams at once immediately followed by `RST_STREAM` frames. In most HTTP/2 implementations this bypasses concurrent open stream limits and causes servers to spend processing time first handling request frames and then performing stream tear downs. For the server, these operations can pile up whereas the attacker client paid minuscule bandwidth and processing costs.\n\n[Amazon](https://aws.amazon.com/security/security-bulletins/AWS-2023-011/), [Cloudflare](https://blog.cloudflare.com/technical-breakdown-http2-rapid-reset-ddos-attack/) and [Google](https://cloud.google.com/blog/products/identity-security/google-cloud-mitigated-largest-ddos-attack-peaking-above-398-million-rps/) have reported that this vulnerability has been exploited in the wild from August to October 2023.\n\nThis vulnerability is listed as exploitable by the Cybersecurity \u0026 Infrastructure Security Agency in their [Known Exploited Vulnerabilities Catalog](https://www.cisa.gov/known-exploited-vulnerabilities-catalog)."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2023-44487 jetty-servlet 9.4.24.v20191120: wiremock 2.8.0: org.eclipse.jetty","partialFingerprints":{"ruleIdLocationHash/v1":"cc8f7ed5d058023a3555d41ed18e9ade40ceb2ea65a3c1a3df52e8fb37a8918e"}},{"message":{"text":"Jetty is vulnerable to denial-of-service (DoS) due to the use of an exponential algorithm that can have excessive resource requirements. A remote attacker could cause a vulnerable server to become unresponsive by sending maliciously crafted HTTP requests to that server."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2020-27223 jetty-servlet 9.4.24.v20191120: wiremock 2.8.0: org.eclipse.jetty","partialFingerprints":{"ruleIdLocationHash/v1":"175a61c1dd6a641a7ad4fb0f450d3be3b89f94c4994f2abe17017e48e91583e9"}},{"message":{"text":"Eclipse Jetty is vulnerable to Denial-of-Service (DoS) via invalid TLS frames. An attacker could exploit this by sending a TLS frame with a size in excess of 17408 resulting in excessive resource consumption leading to a DoS condition."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2021-28165 jetty-servlet 9.4.24.v20191120: wiremock 2.8.0: org.eclipse.jetty","partialFingerprints":{"ruleIdLocationHash/v1":"f9a32fd6a116cff631f34e110acd1228e14e54ef00c715840b6a531a04e80707"}},{"message":{"text":"Jetty is vulnerable to information disclosure due to improper requested path verification. This allows crafted requests to access protected resources of the web application which, depending on the implementation, might reveal sensitive information."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2021-28169 jetty-servlet 9.4.24.v20191120: wiremock 2.8.0: org.eclipse.jetty","partialFingerprints":{"ruleIdLocationHash/v1":"aa750799ac30ecb91dea15dfc2f1b826f2e6e4a1cf04c2a0918a21e31bcd9f02"}},{"message":{"text":"Eclipse Jetty is vulnerable to a denial-of-service (DoS) issue due to presence of a user input validation flaw in the HTTP/2 HPACK functionality that can lead to an integer overflow and allow HPACK headers to exceed their expected size limits.\n\nAn attacker could submit crafted HTTP messages that trigger the integer overflow flaw and cause large buffers to be allocated on the server, consuming memory resources in a manner that could cause the server to run out of memory."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2023-36478 jetty-servlet 9.4.24.v20191120: wiremock 2.8.0: org.eclipse.jetty","partialFingerprints":{"ruleIdLocationHash/v1":"279e23aafcc8674991c97c83b268417bdf6c6de7fc7283cb3229ce09771b1c57"}},{"message":{"text":"Eclipse Jetty does not correctly handle invalid HTTP/2 requests. An attacker could exploit this flaw to exhaust the HTTP/2 flow control window or TCP congest the connection. This will cause the relevant selector threads to be blocked and it will lead to a denial-of-service (DoS)."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2022-2048 jetty-servlet 9.4.24.v20191120: wiremock 2.8.0: org.eclipse.jetty","partialFingerprints":{"ruleIdLocationHash/v1":"5364ccb3716f95e6d06b460705fdf5ac22c3f9a8a62814a23bd471dcf3aadab0"}},{"message":{"text":"Eclipse Jetty contains a vulnerability that allows a remote attacker to inject data into other client's requests. This vulnerability only exists when GZIP request body inflation is enabled, and requests from different clients are multiplexed onto a single connection."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2020-27218 jetty-servlet 9.4.24.v20191120: wiremock 2.8.0: org.eclipse.jetty","partialFingerprints":{"ruleIdLocationHash/v1":"9dd77ac23a2db17994721f5817911fada2bb8e82ee537405bbcab222a11b4d50"}},{"message":{"text":"Eclipse Jetty contains a vulnerability in its multipart request parsing mechanism that can lead to an out-of-memory error due to insufficient limiting measures. An attacker can exploit this flaw by supplying a request containing a large multipart without a filename in order to cause a denial-of-service (DoS)."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2023-26048 jetty-servlet 9.4.24.v20191120: wiremock 2.8.0: org.eclipse.jetty","partialFingerprints":{"ruleIdLocationHash/v1":"64274167d70eee40a37b06235bb40f3756b3873d18c45d0c89a1b95fb2a1d36e"}},{"message":{"text":"Eclipse Jetty does not properly parse quoted values in cookies. This could allow an attacker to smuggle cookies within other cookies into the application. The attacker can also tamper with the cookie parsing mechanism and cause other unintended behavior."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2023-26049 jetty-servlet 9.4.24.v20191120: wiremock 2.8.0: org.eclipse.jetty","partialFingerprints":{"ruleIdLocationHash/v1":"73d1dd061ce1f7cb6d9593272b1ff7f30ace764202b07d774e69b43e76b65863"}},{"message":{"text":"Eclipse Jetty is vulnerable to HTTP request smuggling due to the improper parsing of HTTP requests. An attacker could exploit this vulnerability by sending maliciously crafted HTTP requests to a vulnerable endpoint with multiple requests included inside the body by manipulating the `Content-Length` of the request. The smuggling of HTTP requests may allow for the bypass of security tools such as web application firewalls (WAFs) and intrusion detection systems (IDSs)."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2023-40167 jetty-servlet 9.4.24.v20191120: wiremock 2.8.0: org.eclipse.jetty","partialFingerprints":{"ruleIdLocationHash/v1":"6c79e95d226939f22fde95656b459175de94d90317f1472dff3d3fbb0aca0065"}},{"message":{"text":"Eclipse Jetty contains an improper neutralization of quoting syntax issue within the CGI servlet. This could allow an authenticated attacker to send a request to the CGI Servlet for a binary with a space in its name in order to manipulate the command structure and execute incorrect commands."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2023-36479 jetty-servlet 9.4.24.v20191120: wiremock 2.8.0: org.eclipse.jetty","partialFingerprints":{"ruleIdLocationHash/v1":"0ca11f47bca7e327bdc95f6853e26a2c3114073b78a1057f0e105a25b6818cb1"}},{"message":{"text":"Eclipse Jetty contains an improper authentication vulnerability. This could allow an authenticated attacker to bypass authentication after it has been rejected or revoked by the `LoginService` and make a request as if authenticated.\n\n**Note:** The vendor has stated that this issue impacts usages of the `jetty-openid` which have configured a nested `LoginService` and where that `LoginService` is capable of rejecting previously authenticated users."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2023-41900 jetty-servlet 9.4.24.v20191120: wiremock 2.8.0: org.eclipse.jetty","partialFingerprints":{"ruleIdLocationHash/v1":"eb4a4cfd1d18cde91e77e3ec3a147c8e4398004f6d046ba1409faa60aad5d23c"}},{"message":{"text":"Eclipse Jetty is vulnerable to insufficient session expiry. This may result in sessions used on a shared computer persisting for longer than intended."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2021-34428 jetty-servlet 9.4.24.v20191120: wiremock 2.8.0: org.eclipse.jetty","partialFingerprints":{"ruleIdLocationHash/v1":"66d9d1b7746820e48dff8751f05a554d0adb344006dbec906b36cc8e312de701"}},{"message":{"text":"Eclipse Jetty does not correctly handle invalid authority segments of HTTP URIs. An authenticated attacker could exploit this flaw by passing an invalid URI that contains an improper authority with no host so that it is interpreted as one with a host."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2022-2047 jetty-servlet 9.4.24.v20191120: wiremock 2.8.0: org.eclipse.jetty","partialFingerprints":{"ruleIdLocationHash/v1":"ffcff2ee1f645b95166dc05a743b0a268d813218f4d40e2cc9ee63393457a471"}},{"message":{"text":"Bootstrap is vulnerable to cross-site scripting (XSS) due to the insufficient sanitization of user-provided input. An attacker could execute malicious scripts within a victim's browser by tricking them into clicking on a crafted link. This could allow the attacker to obtain sensitive information such as browser cookies."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2016-10735 bootstrap 3.3.7: org.webjars","partialFingerprints":{"ruleIdLocationHash/v1":"e1f5f378866fb8cc3fbd064fdb2db6cb0595d0a05102d4dbec0dc305a4a04c9b"}},{"message":{"text":"A stored cross-site scripting (XSS) vulnerability has been discovered in Bootstrap. An attacker could exploit this vulnerability by distributing  a crafted link that executes malicious scripts in the victims browser."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2018-20677 bootstrap 3.3.7: org.webjars","partialFingerprints":{"ruleIdLocationHash/v1":"d5f599a1197905ad0018494898794394457d12f0d049dc3dbb30baea4d2df57f"}},{"message":{"text":"A reflected cross-site scripting (XSS) vulnerability has been discovered in Bootstrap. An attacker could exploit this vulnerability by distributing  a crafted link that executes malicious scripts on the victims browser."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2018-20676 bootstrap 3.3.7: org.webjars","partialFingerprints":{"ruleIdLocationHash/v1":"426320bb92cf1fe59637b7bc321399b8f711e8115d7ceebd6ba3b20970e3d098"}},{"message":{"text":"bootstrap is vulnerable to cross-site scripting (XSS) due to an absence of sanitation in the `data-template`, `data-content` and `data-title` properties for tooltips and popovers plugin content."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2019-8331 bootstrap 3.3.7: org.webjars","partialFingerprints":{"ruleIdLocationHash/v1":"bfe01e6eb58cf5a98a3e05171433d33d5974c45bbf32ce0767073738f9eaa34a"}},{"message":{"text":"In Bootstrap before 4.1.2, XSS is possible in the collapse data-parent attribute."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2018-14040 bootstrap 3.3.7: org.webjars","partialFingerprints":{"ruleIdLocationHash/v1":"49effb856049bd30fff02a97ea57b11e1eb92630cd80f4431903eb59af7240ad"}},{"message":{"text":"In Bootstrap before 4.1.2, XSS is possible in the data-container property of tooltip."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2018-14042 bootstrap 3.3.7: org.webjars","partialFingerprints":{"ruleIdLocationHash/v1":"188d306c7e1f38a95478a6eab7d6a007615f530bd6945d618e4b1327baac0c85"}},{"message":{"text":"HyperSQL DataBase is vulnerable to remote code execution (RCE) due to improper input validation thus allowing unsafe reflection. An authenticated attacker could exploit this by supplying a crafted input to potentially execute code on the application."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2022-41853 hsqldb 2.5.0: org.hsqldb","partialFingerprints":{"ruleIdLocationHash/v1":"6e1abc84e87191765d1edaf0b6a66acf86e508b64a15667cad44151d24d44f87"}},{"message":{"text":"Apache Log4j, as used in many popular services, is vulnerable to improperly allowing lightweight directory access protocol (LDAP) access via Java naming and directory interface (JNDI). A remote attacker able to supply the end application with specially crafted input that is then processed by the Log4j subcomponent could cause the execution of arbitrary Java code.\n\n**Note** \n\n- log4j-api packages by themselves do not contain the vulnerable functionality and are therefore unaffected. log4j-core packages and the upstream overarching source repository are affected.\n\n- A previously suggested mitigation of setting environment variable `LOG4J_FORMAT_MSG_NO_LOOKUPS=true` is not recommended. This mitigation has been proven inadequate against this vulnerability. \n\n- This vulnerability is partially fixed in [**2.15.0-rc2**](https://github.com/apache/logging-log4j2/releases/tag/log4j-2.15.0-rc2) by [this](https://github.com/apache/logging-log4j2/commit/001aaada7dab82c3c09cde5f8e14245dc9d8b454) commit and [this](https://github.com/apache/logging-log4j2/commit/bac0d8a35c7e354a0d3f706569116dff6c6bd658) commit. These fixes were deemed incomplete. See BDSA-2021-3779 (CVE-2021-45046) for more details.\n\nThis vulnerability is listed as exploitable by the Cybersecurity \u0026 Infrastructure Security Agency in their [Known Exploited Vulnerabilities Catalog](https://www.cisa.gov/known-exploited-vulnerabilities-catalog)."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"BDSA-2021-3731 spring-boot 2.2.2.RELEASE: spring-boot-devtools 2.2.2.RELEASE: org.springframework.boot","partialFingerprints":{"ruleIdLocationHash/v1":"6b06b85d47c7b35bd0150554d7d47e0437f777fad42a037075c6b88f7a8f177c"}},{"message":{"text":"Spring Framework is vulnerable to a flaw in the access restrictions to the security sensitive `ClassLoader` property. The restrictions can be bypassed through alternative paths available with Java9 and later. An attacker can leverage this vulnerability to cause remote code execution (RCE).\n\n**Note** this issue exists because the restrictions that were introduced to prevent exploitation of BDSA-2010-0001 (CVE-2010-1622) can be bypassed on platforms where Java9 and later are in use.\n\nThis vulnerability is listed as exploitable by the Cybersecurity \u0026 Infrastructure Security Agency in their [Known Exploited Vulnerabilities Catalog](https://www.cisa.gov/known-exploited-vulnerabilities-catalog)."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2022-22965 spring-boot 2.2.2.RELEASE: spring-boot-devtools 2.2.2.RELEASE: org.springframework.boot","partialFingerprints":{"ruleIdLocationHash/v1":"c82a6a3d174f1f667d07b3845077bd0e23cd17b86344d8d11a9b9e3e55666dfe"}},{"message":{"text":"Spring framework contains a security bypass vulnerability when `/**` is used as a pattern in Spring Security configuration with the `/cloudfoundryapplication/**` component. The potential for security bypass exists due to the mismatch in pattern matching between Spring Security and Cloud Foundry.\n\n**Note**: The vendor has stated in their [advisory](https://spring.io/security/cve-2023-20873) that this application is not vulnerable if any of the following is true:\n* The application is not deployed to Cloud Foundry.\n* You have disabled Cloud Foundry actuator endpoints with `management.cloudfoundry.enabled` set to `false`.\n* Your application does not have handler mappings that can handle requests to `/cloudfoundryapplication/**`."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2023-20873 spring-boot 2.2.2.RELEASE: spring-boot-devtools 2.2.2.RELEASE: org.springframework.boot","partialFingerprints":{"ruleIdLocationHash/v1":"ec48520703cc1bf89b7f099c941783c86d0c3e8ed787d5457e5ca0f11acaa101"}},{"message":{"text":"Apache log4j is vulnerable to a denial-of-service (DoS) when uncontrolled recursion occurs through a self-referencing lookup.  An attacker can trigger a DoS with malicious input data that generates a recursive lookup  and consequent application crash.\n\nSuccessful attacks require the attacker to have access to Thread Context Map (MDC) input, and for log4j configured with non-default pattern layout with a Context Lookup.\n\nOnly the log4j-core JAR file is impacted by this vulnerability. Applications using only the log4j-api JAR file without the log4j-core JAR file are not impacted.\n\nApache Log4j is the only Logging Services subproject affected by this vulnerability. Other projects like Log4net  are not impacted."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"BDSA-2021-3817 spring-boot 2.2.2.RELEASE: spring-boot-devtools 2.2.2.RELEASE: org.springframework.boot","partialFingerprints":{"ruleIdLocationHash/v1":"9c4d678173add86b294dfb7adf3209b044bb0ed2cddf0fd85e41966d02da95f3"}},{"message":{"text":"Apache Log4j contains a remote code execution (RCE) vulnerability. This allows an attacker that has permissions to modify the logging configuration files to input a malicious JDBC Appender with a data source referencing a JDNI URI. This can then lead to RCE.\n\n**Note:** This vulnerability impacts log4j-core."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"BDSA-2021-3887 spring-boot 2.2.2.RELEASE: spring-boot-devtools 2.2.2.RELEASE: org.springframework.boot","partialFingerprints":{"ruleIdLocationHash/v1":"9744949b19c075df98c1451e8dcadd9f07bac19a1e9f0c5aed12127a8bb04f69"}},{"message":{"text":"Spring Boot is vulnerable to privilege escalation due to a race condition which occurs during the creation of a temporary directory. A local attacker could create their own temporary directory by racing against Spring Boot and supply their own configuration files which would allow for the full takeover of the application."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2022-27772 spring-boot 2.2.2.RELEASE: spring-boot-devtools 2.2.2.RELEASE: org.springframework.boot","partialFingerprints":{"ruleIdLocationHash/v1":"2d9a613df136d05e6c8adbdd2fc241f7a422a0077ac908c8bf16c828bca70abc"}},{"message":{"text":"Spring Boot is vulnerable to denial-of-service (DoS) via the welcome page when used to serve an application behind a reverse proxy cache. This will cause users to continuously be served a 404 response, preventing standard application use.\n\n\n**Note:** Spring have provided the following guidance for vulnerable criteria. \nAn application is vulnerable if all of the following are true:\n\n- \"The application has Spring MVC auto-configuration enabled. This is the case by default if Spring MVC is on the classpath.\"\n- \"The application makes use of Spring Boot's welcome page support, either static or templated.\"\n- \"Your application is deployed behind a proxy which caches 404 responses.\"\n\nThe application is not vulnerable if any of the following are true:\n\n- \"Spring MVC auto-configuration is disabled. This is true if `WebMvcAutoConfiguration` is explicitly excluded, if Spring MVC is not on the classpath, or if `spring.main.web-application-type` is set to a value other than `SERVLET`.\"\n- \"The application does not use Spring Boot's welcome page support.\"\n- \"You do not have a proxy which caches 404 responses.\""},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2023-20883 spring-boot 2.2.2.RELEASE: spring-boot-devtools 2.2.2.RELEASE: org.springframework.boot","partialFingerprints":{"ruleIdLocationHash/v1":"3f19f1fb339221800201796b491fb7dd635b797f050b4e2b2aa36a348ae37c8f"}},{"message":{"text":"Spring Boot is vulnerable to denial-of-service (DoS). An unauthenticated user could trigger the vulnerability by providing specially crafted HTTP requests to a web metrics endpoint."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2023-34055 spring-boot 2.2.2.RELEASE: spring-boot-devtools 2.2.2.RELEASE: org.springframework.boot","partialFingerprints":{"ruleIdLocationHash/v1":"f90c6ee8c15b8a7c9628d1ce2822d965d62186380550e8424e7c8f1874c74814"}},{"message":{"text":"Apache Log4j, as used in many popular services, is vulnerable to improperly allowing lightweight directory access protocol (LDAP) access via Java naming and directory interface (JNDI). A remote attacker able to supply the end application with specially crafted input that is then processed by the Log4j subcomponent could cause the execution of arbitrary Java code.\n\n**Note** \n\n- log4j-api packages by themselves do not contain the vulnerable functionality and are therefore unaffected. log4j-core packages and the upstream overarching source repository are affected.\n\n- A previously suggested mitigation of setting environment variable `LOG4J_FORMAT_MSG_NO_LOOKUPS=true` is not recommended. This mitigation has been proven inadequate against this vulnerability. \n\n- This vulnerability is partially fixed in [**2.15.0-rc2**](https://github.com/apache/logging-log4j2/releases/tag/log4j-2.15.0-rc2) by [this](https://github.com/apache/logging-log4j2/commit/001aaada7dab82c3c09cde5f8e14245dc9d8b454) commit and [this](https://github.com/apache/logging-log4j2/commit/bac0d8a35c7e354a0d3f706569116dff6c6bd658) commit. These fixes were deemed incomplete. See BDSA-2021-3779 (CVE-2021-45046) for more details.\n\nThis vulnerability is listed as exploitable by the Cybersecurity \u0026 Infrastructure Security Agency in their [Known Exploited Vulnerabilities Catalog](https://www.cisa.gov/known-exploited-vulnerabilities-catalog)."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"BDSA-2021-3731 spring-boot-starter-aop 2.2.2.RELEASE: spring-boot-starter-data-jpa 2.2.2.RELEASE: org.springframework.boot","partialFingerprints":{"ruleIdLocationHash/v1":"12b26b4c632be0af1dc161416e42e6cc1bcabf19c36f78fb88322d0f77dfbd74"}},{"message":{"text":"Spring Framework is vulnerable to a flaw in the access restrictions to the security sensitive `ClassLoader` property. The restrictions can be bypassed through alternative paths available with Java9 and later. An attacker can leverage this vulnerability to cause remote code execution (RCE).\n\n**Note** this issue exists because the restrictions that were introduced to prevent exploitation of BDSA-2010-0001 (CVE-2010-1622) can be bypassed on platforms where Java9 and later are in use.\n\nThis vulnerability is listed as exploitable by the Cybersecurity \u0026 Infrastructure Security Agency in their [Known Exploited Vulnerabilities Catalog](https://www.cisa.gov/known-exploited-vulnerabilities-catalog)."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2022-22965 spring-boot-starter-aop 2.2.2.RELEASE: spring-boot-starter-data-jpa 2.2.2.RELEASE: org.springframework.boot","partialFingerprints":{"ruleIdLocationHash/v1":"f450d6371e247346a2337cd69d481f262173fb67e04a609777b3f22d8daa6bf6"}},{"message":{"text":"Spring framework contains a security bypass vulnerability when `/**` is used as a pattern in Spring Security configuration with the `/cloudfoundryapplication/**` component. The potential for security bypass exists due to the mismatch in pattern matching between Spring Security and Cloud Foundry.\n\n**Note**: The vendor has stated in their [advisory](https://spring.io/security/cve-2023-20873) that this application is not vulnerable if any of the following is true:\n* The application is not deployed to Cloud Foundry.\n* You have disabled Cloud Foundry actuator endpoints with `management.cloudfoundry.enabled` set to `false`.\n* Your application does not have handler mappings that can handle requests to `/cloudfoundryapplication/**`."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2023-20873 spring-boot-starter-aop 2.2.2.RELEASE: spring-boot-starter-data-jpa 2.2.2.RELEASE: org.springframework.boot","partialFingerprints":{"ruleIdLocationHash/v1":"52ffe6011c945c14f40dff0f5a2c788662ef18d2173ac8fef4cab87f1d898fc4"}},{"message":{"text":"Apache log4j is vulnerable to a denial-of-service (DoS) when uncontrolled recursion occurs through a self-referencing lookup.  An attacker can trigger a DoS with malicious input data that generates a recursive lookup  and consequent application crash.\n\nSuccessful attacks require the attacker to have access to Thread Context Map (MDC) input, and for log4j configured with non-default pattern layout with a Context Lookup.\n\nOnly the log4j-core JAR file is impacted by this vulnerability. Applications using only the log4j-api JAR file without the log4j-core JAR file are not impacted.\n\nApache Log4j is the only Logging Services subproject affected by this vulnerability. Other projects like Log4net  are not impacted."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"BDSA-2021-3817 spring-boot-starter-aop 2.2.2.RELEASE: spring-boot-starter-data-jpa 2.2.2.RELEASE: org.springframework.boot","partialFingerprints":{"ruleIdLocationHash/v1":"290f4bd809fa318efa489dcd78a13d58843472510832382d0d9eebff76a78640"}},{"message":{"text":"Apache Log4j contains a remote code execution (RCE) vulnerability. This allows an attacker that has permissions to modify the logging configuration files to input a malicious JDBC Appender with a data source referencing a JDNI URI. This can then lead to RCE.\n\n**Note:** This vulnerability impacts log4j-core."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"BDSA-2021-3887 spring-boot-starter-aop 2.2.2.RELEASE: spring-boot-starter-data-jpa 2.2.2.RELEASE: org.springframework.boot","partialFingerprints":{"ruleIdLocationHash/v1":"406ea75aa2845d2e92f1bed0475fc8d5490e513113a6a0a48a58b745478b1ad2"}},{"message":{"text":"Spring Boot is vulnerable to privilege escalation due to a race condition which occurs during the creation of a temporary directory. A local attacker could create their own temporary directory by racing against Spring Boot and supply their own configuration files which would allow for the full takeover of the application."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2022-27772 spring-boot-starter-aop 2.2.2.RELEASE: spring-boot-starter-data-jpa 2.2.2.RELEASE: org.springframework.boot","partialFingerprints":{"ruleIdLocationHash/v1":"e39acec6b5b784d2539a1553487dd8508330b67aca131909b2f4157612581c2e"}},{"message":{"text":"Spring Boot is vulnerable to denial-of-service (DoS) via the welcome page when used to serve an application behind a reverse proxy cache. This will cause users to continuously be served a 404 response, preventing standard application use.\n\n\n**Note:** Spring have provided the following guidance for vulnerable criteria. \nAn application is vulnerable if all of the following are true:\n\n- \"The application has Spring MVC auto-configuration enabled. This is the case by default if Spring MVC is on the classpath.\"\n- \"The application makes use of Spring Boot's welcome page support, either static or templated.\"\n- \"Your application is deployed behind a proxy which caches 404 responses.\"\n\nThe application is not vulnerable if any of the following are true:\n\n- \"Spring MVC auto-configuration is disabled. This is true if `WebMvcAutoConfiguration` is explicitly excluded, if Spring MVC is not on the classpath, or if `spring.main.web-application-type` is set to a value other than `SERVLET`.\"\n- \"The application does not use Spring Boot's welcome page support.\"\n- \"You do not have a proxy which caches 404 responses.\""},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2023-20883 spring-boot-starter-aop 2.2.2.RELEASE: spring-boot-starter-data-jpa 2.2.2.RELEASE: org.springframework.boot","partialFingerprints":{"ruleIdLocationHash/v1":"54223b09c97ab77a11bbb19a4421c3583f088c0c2af8630b3b595094b3f8cdd0"}},{"message":{"text":"Spring Boot is vulnerable to denial-of-service (DoS). An unauthenticated user could trigger the vulnerability by providing specially crafted HTTP requests to a web metrics endpoint."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2023-34055 spring-boot-starter-aop 2.2.2.RELEASE: spring-boot-starter-data-jpa 2.2.2.RELEASE: org.springframework.boot","partialFingerprints":{"ruleIdLocationHash/v1":"bbbff4742600e822fd1343a9473700f5af9eb862ed48c9d7181c657f81f1376f"}},{"message":{"text":"Pivotal Spring Framework through 5.3.16 suffers from a potential remote code execution (RCE) issue if used for Java deserialization of untrusted data. Depending on how the library is implemented within a product, this issue may or not occur, and authentication may be required. NOTE: the vendor's position is that untrusted data is not an intended use case. The product's behavior will not be changed because some users rely on deserialization of trusted data."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2016-1000027 spring-orm 5.2.2.RELEASE: spring-boot-starter-data-jpa 2.2.2.RELEASE: org.springframework","partialFingerprints":{"ruleIdLocationHash/v1":"78b35ef622daeafabb6d2a199418206eb1d12dd259555b49a4036f7160112cba"}},{"message":{"text":"Spring Framework is vulnerable to a flaw in the access restrictions to the security sensitive `ClassLoader` property. The restrictions can be bypassed through alternative paths available with Java9 and later. An attacker can leverage this vulnerability to cause remote code execution (RCE).\n\n**Note** this issue exists because the restrictions that were introduced to prevent exploitation of BDSA-2010-0001 (CVE-2010-1622) can be bypassed on platforms where Java9 and later are in use.\n\nThis vulnerability is listed as exploitable by the Cybersecurity \u0026 Infrastructure Security Agency in their [Known Exploited Vulnerabilities Catalog](https://www.cisa.gov/known-exploited-vulnerabilities-catalog)."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2022-22965 spring-orm 5.2.2.RELEASE: spring-boot-starter-data-jpa 2.2.2.RELEASE: org.springframework","partialFingerprints":{"ruleIdLocationHash/v1":"3539fe3f02ff0176e745fa00402609b4a62e83df57ed89553f5ddf4744be324c"}},{"message":{"text":"Spring Framework is vulnerable to cross-site request forgery (CSRF) attacks via CORS preflight requests which target Spring MVC or Spring WebFlux endpoints."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2020-5397 spring-orm 5.2.2.RELEASE: spring-boot-starter-data-jpa 2.2.2.RELEASE: org.springframework","partialFingerprints":{"ruleIdLocationHash/v1":"cbceda0eab8b3eb9fc34973ccaa49b065a2905e9b4da73bd502ab4a68b66d7b8"}},{"message":{"text":"Software systems using Spring Framework may be vulnerable to unsafe deserialization if they employ unsafe use of certain provided deserialization functionality. A remote attacker could potentially execute arbitrary code on a vulnerable endpoint by passing a maliciously crafted serialized object to that endpoint.\n\n**Note**: This issue only affects software that has been written to leverage specific deserialization functionality provided by the Spring Framework without sanitization."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"BDSA-2022-0847 spring-orm 5.2.2.RELEASE: spring-boot-starter-data-jpa 2.2.2.RELEASE: org.springframework","partialFingerprints":{"ruleIdLocationHash/v1":"d24f580613dd728682f2b29403c7d6004028b6dd2625a1442610b6635b2bf2ac"}},{"message":{"text":"Spring Framework is vulnerable to a reflected file download (RFD) attack via improper input validation on filenames in a `Content-Disposition` header."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2020-5398 spring-orm 5.2.2.RELEASE: spring-boot-starter-data-jpa 2.2.2.RELEASE: org.springframework","partialFingerprints":{"ruleIdLocationHash/v1":"e85a899c73cf6be6307ae2f170a8fb2191d9568bd84e5e0c315aec80d6ea9dc9"}},{"message":{"text":"Spring Framework is vulnerable to log file injection due to the insufficient validation of user input in an undisclosed component. An attacker could leverage this issue in order to add arbitrary entries to a log file which could impact both the integrity issues and performance issues.\n\n**Note**: a follow-up to this issue was disclosed as **CVE-2021-22060** (**BDSA-2021-3236**), with further fixed releases that protect against additional types of input and in more places of the Spring Framework codebase."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2021-22096 spring-orm 5.2.2.RELEASE: spring-boot-starter-data-jpa 2.2.2.RELEASE: org.springframework","partialFingerprints":{"ruleIdLocationHash/v1":"666a45674ed78cdd60c843154e19a0d86d67c870aa7519b2f499d3e797ed948b"}},{"message":{"text":"Spring Framework is vulnerable to log file injection due to the insufficient validation of user input in an undisclosed component. An attacker could leverage this issue in order to add arbitrary entries to a log file which could impact both the integrity issues and performance issues.\n\n**Note**: the vendor states this issue exists as a follow up to CVE-2021-22096 (BDSA-2022-0011) that protects against additional types of input and in more places of the Spring Framework codebase."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2021-22060 spring-orm 5.2.2.RELEASE: spring-boot-starter-data-jpa 2.2.2.RELEASE: org.springframework","partialFingerprints":{"ruleIdLocationHash/v1":"f50da2677434c8a97111dc931f51d1c7b74a4b9b8d98ee94ca7039d82a89f2b0"}},{"message":{"text":"Spring-Framework's spring-expression is vulnerable to a denial-of-service (DoS) condition. This allows an attacker to use crafted input to cause the spring-expression process to crash due to an exception."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2022-22950 spring-orm 5.2.2.RELEASE: spring-boot-starter-data-jpa 2.2.2.RELEASE: org.springframework","partialFingerprints":{"ruleIdLocationHash/v1":"e23b3ea8fcf70acc14b7077a067f84132d9dbcb62d1c30f14b5e70ae45e93430"}},{"message":{"text":"Spring Framework is vulnerable to privilege escalation due to the creation of unsafe temporary directories by the WebFlux component. A local authenticated attacker could modify arbitrary files via maliciously crafted `multipart` requests. \n\nThis vulnerability does not affect Spring MVC applications, or applications that do not handle `multipart` file requests."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2021-22118 spring-orm 5.2.2.RELEASE: spring-boot-starter-data-jpa 2.2.2.RELEASE: org.springframework","partialFingerprints":{"ruleIdLocationHash/v1":"658cfbd7b2fdef323d28e8f65f0a9fca018528ef15a06dd2b729ad837ee88e68"}},{"message":{"text":"Spring Framework is vulnerable to denial-of-service (DoS) due to the improper implementation of data binding functionality. A remote attacker could cause a vulnerable server to crash if that server provides file upload functionality."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2022-22970 spring-orm 5.2.2.RELEASE: spring-boot-starter-data-jpa 2.2.2.RELEASE: org.springframework","partialFingerprints":{"ruleIdLocationHash/v1":"0cc3a5428998165d0cbcd0a09f2a47d1b5ac6eeafbbc26d04e4139aa2fe0a9d7"}},{"message":{"text":"Spring Framework is vulnerable to denial-of-service (DoS) due to the improper handling of the STOMP protocol for websockets. A remote authenticated attacker could leverage this issue in order to cause a server to crash."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2022-22971 spring-orm 5.2.2.RELEASE: spring-boot-starter-data-jpa 2.2.2.RELEASE: org.springframework","partialFingerprints":{"ruleIdLocationHash/v1":"4076fef7e7056abc3d87a9ad6fff37261daa26b314644a4711c677d5db6409a7"}},{"message":{"text":"Spring Framework is vulnerable to denial-of-service (DoS) via specially crafted SpEL expressions. An attacker could exploit this issue by passing a crafted SpEL expression to the application which may result in a crash."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2023-20861 spring-orm 5.2.2.RELEASE: spring-boot-starter-data-jpa 2.2.2.RELEASE: org.springframework","partialFingerprints":{"ruleIdLocationHash/v1":"efee05c64b1cd2982185c3341217d5e9c66b5934513d59b97d3a3e1a43f36ed1"}},{"message":{"text":"Spring Framework is vulnerable to denial-of-service (DoS) via specially crafted SpEL expressions."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2023-20863 spring-orm 5.2.2.RELEASE: spring-boot-starter-data-jpa 2.2.2.RELEASE: org.springframework","partialFingerprints":{"ruleIdLocationHash/v1":"4aa0ce735c34de658a2e6d101579dec4903a9d9b36f014c13ff3f1474202b55b"}},{"message":{"text":"It was discovered that Spring Framework was vulnerable to RFD protection bypass. In some instances, depending on the browser used, an attacker could bypass the RFD attack protections via the use of a `jsessionid` path parameter."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2020-5421 spring-orm 5.2.2.RELEASE: spring-boot-starter-data-jpa 2.2.2.RELEASE: org.springframework","partialFingerprints":{"ruleIdLocationHash/v1":"28ae1c2bffcc4c8efdd1401420e4735d8684cf781d070fd3ac42cbe57e7dba82"}},{"message":{"text":"Spring Framework is vulnerable to data binding protection bypass due to improper validation of specified disallowed fields in `DataBinders`. This could be leveraged by an attacker to bypass the suggested workaround to **CVE-2022-22965** (**BDSA-2022-0858**) if it is improperly implemented."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2022-22968 spring-orm 5.2.2.RELEASE: spring-boot-starter-data-jpa 2.2.2.RELEASE: org.springframework","partialFingerprints":{"ruleIdLocationHash/v1":"f7991ec6c17487b54349f259a710fa8d3bba9c8c185f8bffc0ff5cad9f08918e"}},{"message":{"text":"Apache Log4j, as used in many popular services, is vulnerable to improperly allowing lightweight directory access protocol (LDAP) access via Java naming and directory interface (JNDI). A remote attacker able to supply the end application with specially crafted input that is then processed by the Log4j subcomponent could cause the execution of arbitrary Java code.\n\n**Note** \n\n- log4j-api packages by themselves do not contain the vulnerable functionality and are therefore unaffected. log4j-core packages and the upstream overarching source repository are affected.\n\n- A previously suggested mitigation of setting environment variable `LOG4J_FORMAT_MSG_NO_LOOKUPS=true` is not recommended. This mitigation has been proven inadequate against this vulnerability. \n\n- This vulnerability is partially fixed in [**2.15.0-rc2**](https://github.com/apache/logging-log4j2/releases/tag/log4j-2.15.0-rc2) by [this](https://github.com/apache/logging-log4j2/commit/001aaada7dab82c3c09cde5f8e14245dc9d8b454) commit and [this](https://github.com/apache/logging-log4j2/commit/bac0d8a35c7e354a0d3f706569116dff6c6bd658) commit. These fixes were deemed incomplete. See BDSA-2021-3779 (CVE-2021-45046) for more details.\n\nThis vulnerability is listed as exploitable by the Cybersecurity \u0026 Infrastructure Security Agency in their [Known Exploited Vulnerabilities Catalog](https://www.cisa.gov/known-exploited-vulnerabilities-catalog)."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"BDSA-2021-3731 spring-boot-starter-data-jpa 2.2.2.RELEASE: org.springframework.boot","partialFingerprints":{"ruleIdLocationHash/v1":"6b83f46266f587401e916ba6a1591d02dd39d8ed86a45077250e0091edb6dc46"}},{"message":{"text":"Spring Framework is vulnerable to a flaw in the access restrictions to the security sensitive `ClassLoader` property. The restrictions can be bypassed through alternative paths available with Java9 and later. An attacker can leverage this vulnerability to cause remote code execution (RCE).\n\n**Note** this issue exists because the restrictions that were introduced to prevent exploitation of BDSA-2010-0001 (CVE-2010-1622) can be bypassed on platforms where Java9 and later are in use.\n\nThis vulnerability is listed as exploitable by the Cybersecurity \u0026 Infrastructure Security Agency in their [Known Exploited Vulnerabilities Catalog](https://www.cisa.gov/known-exploited-vulnerabilities-catalog)."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2022-22965 spring-boot-starter-data-jpa 2.2.2.RELEASE: org.springframework.boot","partialFingerprints":{"ruleIdLocationHash/v1":"151b1898dad9b22ef9fde7b8b93b8c3ce4048544bb8d31868d5a4d0cee45c1a9"}},{"message":{"text":"Spring framework contains a security bypass vulnerability when `/**` is used as a pattern in Spring Security configuration with the `/cloudfoundryapplication/**` component. The potential for security bypass exists due to the mismatch in pattern matching between Spring Security and Cloud Foundry.\n\n**Note**: The vendor has stated in their [advisory](https://spring.io/security/cve-2023-20873) that this application is not vulnerable if any of the following is true:\n* The application is not deployed to Cloud Foundry.\n* You have disabled Cloud Foundry actuator endpoints with `management.cloudfoundry.enabled` set to `false`.\n* Your application does not have handler mappings that can handle requests to `/cloudfoundryapplication/**`."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2023-20873 spring-boot-starter-data-jpa 2.2.2.RELEASE: org.springframework.boot","partialFingerprints":{"ruleIdLocationHash/v1":"4979868859eb8b1303f0786db68ce944564df9cec00670726abe4474e1521bb0"}},{"message":{"text":"Apache log4j is vulnerable to a denial-of-service (DoS) when uncontrolled recursion occurs through a self-referencing lookup.  An attacker can trigger a DoS with malicious input data that generates a recursive lookup  and consequent application crash.\n\nSuccessful attacks require the attacker to have access to Thread Context Map (MDC) input, and for log4j configured with non-default pattern layout with a Context Lookup.\n\nOnly the log4j-core JAR file is impacted by this vulnerability. Applications using only the log4j-api JAR file without the log4j-core JAR file are not impacted.\n\nApache Log4j is the only Logging Services subproject affected by this vulnerability. Other projects like Log4net  are not impacted."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"BDSA-2021-3817 spring-boot-starter-data-jpa 2.2.2.RELEASE: org.springframework.boot","partialFingerprints":{"ruleIdLocationHash/v1":"266c3351e956e862dfaab801a9dcf9e8714c157f397669ccf6e1ad2b9533fe2d"}},{"message":{"text":"Apache Log4j contains a remote code execution (RCE) vulnerability. This allows an attacker that has permissions to modify the logging configuration files to input a malicious JDBC Appender with a data source referencing a JDNI URI. This can then lead to RCE.\n\n**Note:** This vulnerability impacts log4j-core."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"BDSA-2021-3887 spring-boot-starter-data-jpa 2.2.2.RELEASE: org.springframework.boot","partialFingerprints":{"ruleIdLocationHash/v1":"34c79376bc2c83759fd579865122164da952de0c5f571dc524f3ad8a12bf63cc"}},{"message":{"text":"Spring Boot is vulnerable to privilege escalation due to a race condition which occurs during the creation of a temporary directory. A local attacker could create their own temporary directory by racing against Spring Boot and supply their own configuration files which would allow for the full takeover of the application."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2022-27772 spring-boot-starter-data-jpa 2.2.2.RELEASE: org.springframework.boot","partialFingerprints":{"ruleIdLocationHash/v1":"7a44fa1c3dd60c3c9ac34d962b621218fd5a20bf0f45072c275ae1ba74124787"}},{"message":{"text":"Spring Boot is vulnerable to denial-of-service (DoS) via the welcome page when used to serve an application behind a reverse proxy cache. This will cause users to continuously be served a 404 response, preventing standard application use.\n\n\n**Note:** Spring have provided the following guidance for vulnerable criteria. \nAn application is vulnerable if all of the following are true:\n\n- \"The application has Spring MVC auto-configuration enabled. This is the case by default if Spring MVC is on the classpath.\"\n- \"The application makes use of Spring Boot's welcome page support, either static or templated.\"\n- \"Your application is deployed behind a proxy which caches 404 responses.\"\n\nThe application is not vulnerable if any of the following are true:\n\n- \"Spring MVC auto-configuration is disabled. This is true if `WebMvcAutoConfiguration` is explicitly excluded, if Spring MVC is not on the classpath, or if `spring.main.web-application-type` is set to a value other than `SERVLET`.\"\n- \"The application does not use Spring Boot's welcome page support.\"\n- \"You do not have a proxy which caches 404 responses.\""},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2023-20883 spring-boot-starter-data-jpa 2.2.2.RELEASE: org.springframework.boot","partialFingerprints":{"ruleIdLocationHash/v1":"afd17d542e5278b5f637de9a5b910121e8e3082366cc8805dfa1ecd80c00c7ae"}},{"message":{"text":"Spring Boot is vulnerable to denial-of-service (DoS). An unauthenticated user could trigger the vulnerability by providing specially crafted HTTP requests to a web metrics endpoint."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2023-34055 spring-boot-starter-data-jpa 2.2.2.RELEASE: org.springframework.boot","partialFingerprints":{"ruleIdLocationHash/v1":"6c269fa93b7d400e94abf4e51885a624c81d8e5056c9a4b9c10240db3491de64"}},{"message":{"text":"Apache Log4j, as used in many popular services, is vulnerable to improperly allowing lightweight directory access protocol (LDAP) access via Java naming and directory interface (JNDI). A remote attacker able to supply the end application with specially crafted input that is then processed by the Log4j subcomponent could cause the execution of arbitrary Java code.\n\n**Note** \n\n- log4j-api packages by themselves do not contain the vulnerable functionality and are therefore unaffected. log4j-core packages and the upstream overarching source repository are affected.\n\n- A previously suggested mitigation of setting environment variable `LOG4J_FORMAT_MSG_NO_LOOKUPS=true` is not recommended. This mitigation has been proven inadequate against this vulnerability. \n\n- This vulnerability is partially fixed in [**2.15.0-rc2**](https://github.com/apache/logging-log4j2/releases/tag/log4j-2.15.0-rc2) by [this](https://github.com/apache/logging-log4j2/commit/001aaada7dab82c3c09cde5f8e14245dc9d8b454) commit and [this](https://github.com/apache/logging-log4j2/commit/bac0d8a35c7e354a0d3f706569116dff6c6bd658) commit. These fixes were deemed incomplete. See BDSA-2021-3779 (CVE-2021-45046) for more details.\n\nThis vulnerability is listed as exploitable by the Cybersecurity \u0026 Infrastructure Security Agency in their [Known Exploited Vulnerabilities Catalog](https://www.cisa.gov/known-exploited-vulnerabilities-catalog)."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"BDSA-2021-3731 spring-boot-starter-test 2.2.2.RELEASE: org.springframework.boot","partialFingerprints":{"ruleIdLocationHash/v1":"e3be1c697d70cf62911a783f7c9d7a2403447d3c7c1616631f4209a27a92cfd7"}},{"message":{"text":"Spring Framework is vulnerable to a flaw in the access restrictions to the security sensitive `ClassLoader` property. The restrictions can be bypassed through alternative paths available with Java9 and later. An attacker can leverage this vulnerability to cause remote code execution (RCE).\n\n**Note** this issue exists because the restrictions that were introduced to prevent exploitation of BDSA-2010-0001 (CVE-2010-1622) can be bypassed on platforms where Java9 and later are in use.\n\nThis vulnerability is listed as exploitable by the Cybersecurity \u0026 Infrastructure Security Agency in their [Known Exploited Vulnerabilities Catalog](https://www.cisa.gov/known-exploited-vulnerabilities-catalog)."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2022-22965 spring-boot-starter-test 2.2.2.RELEASE: org.springframework.boot","partialFingerprints":{"ruleIdLocationHash/v1":"246e357a168f1c00cfaa30f327ab45e1dfd61061ac03cda55f8473611aa22240"}},{"message":{"text":"Spring framework contains a security bypass vulnerability when `/**` is used as a pattern in Spring Security configuration with the `/cloudfoundryapplication/**` component. The potential for security bypass exists due to the mismatch in pattern matching between Spring Security and Cloud Foundry.\n\n**Note**: The vendor has stated in their [advisory](https://spring.io/security/cve-2023-20873) that this application is not vulnerable if any of the following is true:\n* The application is not deployed to Cloud Foundry.\n* You have disabled Cloud Foundry actuator endpoints with `management.cloudfoundry.enabled` set to `false`.\n* Your application does not have handler mappings that can handle requests to `/cloudfoundryapplication/**`."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2023-20873 spring-boot-starter-test 2.2.2.RELEASE: org.springframework.boot","partialFingerprints":{"ruleIdLocationHash/v1":"33dcc7449c38671994c9d5996b59fcf75f9e91f544ca13abe0a7d17a44d45083"}},{"message":{"text":"Apache log4j is vulnerable to a denial-of-service (DoS) when uncontrolled recursion occurs through a self-referencing lookup.  An attacker can trigger a DoS with malicious input data that generates a recursive lookup  and consequent application crash.\n\nSuccessful attacks require the attacker to have access to Thread Context Map (MDC) input, and for log4j configured with non-default pattern layout with a Context Lookup.\n\nOnly the log4j-core JAR file is impacted by this vulnerability. Applications using only the log4j-api JAR file without the log4j-core JAR file are not impacted.\n\nApache Log4j is the only Logging Services subproject affected by this vulnerability. Other projects like Log4net  are not impacted."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"BDSA-2021-3817 spring-boot-starter-test 2.2.2.RELEASE: org.springframework.boot","partialFingerprints":{"ruleIdLocationHash/v1":"ece58a3322ea495d301b272f3449d58e205646e34f3fc07813ffbbe73d669ec9"}},{"message":{"text":"Apache Log4j contains a remote code execution (RCE) vulnerability. This allows an attacker that has permissions to modify the logging configuration files to input a malicious JDBC Appender with a data source referencing a JDNI URI. This can then lead to RCE.\n\n**Note:** This vulnerability impacts log4j-core."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"BDSA-2021-3887 spring-boot-starter-test 2.2.2.RELEASE: org.springframework.boot","partialFingerprints":{"ruleIdLocationHash/v1":"279d72c9c1863914d27cd1ff2b4b10f18a3795c649d00e6fdb5351ee639bb359"}},{"message":{"text":"Spring Boot is vulnerable to privilege escalation due to a race condition which occurs during the creation of a temporary directory. A local attacker could create their own temporary directory by racing against Spring Boot and supply their own configuration files which would allow for the full takeover of the application."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2022-27772 spring-boot-starter-test 2.2.2.RELEASE: org.springframework.boot","partialFingerprints":{"ruleIdLocationHash/v1":"bb492687046404766010bd5b62560880e9e7ca18c7fd4b33b00247666a17e89d"}},{"message":{"text":"Spring Boot is vulnerable to denial-of-service (DoS) via the welcome page when used to serve an application behind a reverse proxy cache. This will cause users to continuously be served a 404 response, preventing standard application use.\n\n\n**Note:** Spring have provided the following guidance for vulnerable criteria. \nAn application is vulnerable if all of the following are true:\n\n- \"The application has Spring MVC auto-configuration enabled. This is the case by default if Spring MVC is on the classpath.\"\n- \"The application makes use of Spring Boot's welcome page support, either static or templated.\"\n- \"Your application is deployed behind a proxy which caches 404 responses.\"\n\nThe application is not vulnerable if any of the following are true:\n\n- \"Spring MVC auto-configuration is disabled. This is true if `WebMvcAutoConfiguration` is explicitly excluded, if Spring MVC is not on the classpath, or if `spring.main.web-application-type` is set to a value other than `SERVLET`.\"\n- \"The application does not use Spring Boot's welcome page support.\"\n- \"You do not have a proxy which caches 404 responses.\""},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2023-20883 spring-boot-starter-test 2.2.2.RELEASE: org.springframework.boot","partialFingerprints":{"ruleIdLocationHash/v1":"a77218272633ee2800779323d553b3518f94a849b1c5500af8ea2656bce0eedc"}},{"message":{"text":"Spring Boot is vulnerable to denial-of-service (DoS). An unauthenticated user could trigger the vulnerability by providing specially crafted HTTP requests to a web metrics endpoint."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2023-34055 spring-boot-starter-test 2.2.2.RELEASE: org.springframework.boot","partialFingerprints":{"ruleIdLocationHash/v1":"7a5f7bc293fc2ecdd4e0dd659ccd233d66dd13b9f76eab89391b0ce21e75e1c7"}},{"message":{"text":"Hibernate Validator is vulnerable to incorrectly validating certain expression language (EL) expressions. A remote attacker could leverage this to bypass input sanitization"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2020-10693 hibernate-validator 6.0.18.Final: spring-boot-starter-web 2.2.2.RELEASE: org.hibernate.validator","partialFingerprints":{"ruleIdLocationHash/v1":"f9aa9077804d3167b2a1db0131b16a4ce8d541b6613ef85f79174a6b27d15ff1"}},{"message":{"text":"Spring Security contains a flaw when dealing with OAuth2 access token empty scope list  responses. A remote attacker could leverage this to escalate their privileges under **all** the following conditions being met:\n\n* They act as the role of a Login Client (e.g. uses `http.oauth2Login()`).\n* They use one or more authorization rules with authorities mapped from authorized scopes (e.g. `anyRequest().hasAuthority(\"SCOPE_message.write\")`) in the client application.\n* An authorization server that responds with empty scopes list is registered (RFC 6749, Section 5.1).\n\n**Note:** The role of Resource Servers (`http.oauth2ResourceServer()`) and applications that do not map authorization rules from authorized scopes (eg. `anyRequest().hasAuthority(\"ROLE_USER\")`) cannot be exploited by this vulnerability."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"BDSA-2022-3109 spring-security-config 5.2.1.RELEASE: spring-boot-starter-security 2.2.2.RELEASE: org.springframework.security","partialFingerprints":{"ruleIdLocationHash/v1":"9e957d78aeb4ffb6905395ccc7d7cbd8ed1f3a63205c3752b6e6644a38c7bd81"}},{"message":{"text":"Spring Security used with Spring WebFlux performs incorrect parsing when using `**` as a pattern in Spring Security configuration due to inconsistent pattern matching between the two components. This could lead to bypassing of security mechanisms configured by Spring Security."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"BDSA-2023-1825 spring-security-config 5.2.1.RELEASE: spring-boot-starter-security 2.2.2.RELEASE: org.springframework.security","partialFingerprints":{"ruleIdLocationHash/v1":"119290cfe8576affedeb85d949afcb1a160ed847161f08b9c688b021c02d07de"}},{"message":{"text":"Spring Security is vulnerable to the bypassing of an authorization mechanism due to improperly implemented regular expression matching. A remote attacker could perform unauthorized actions on a vulnerable server by sending maliciously crafted requests to that server."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2022-22978 spring-security-config 5.2.1.RELEASE: spring-boot-starter-security 2.2.2.RELEASE: org.springframework.security","partialFingerprints":{"ruleIdLocationHash/v1":"5d32febe98a54f98e0008f7c6f97fc8e397789880813272e03d34be8feea5a47"}},{"message":{"text":"Spring Security is vulnerable to privilege escalation due to a failure to correctly save security context information. An attacker who is allowed to use elevated privileges in a small portion of a program could extend those privileges to the entire program by sending maliciously crafted requests to the application.\n\nIt should be noted that the vulnerability is not present by default, and must be programmed in by an application developer."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2021-22112 spring-security-config 5.2.1.RELEASE: spring-boot-starter-security 2.2.2.RELEASE: org.springframework.security","partialFingerprints":{"ruleIdLocationHash/v1":"c7c2be9bd47ab779253dba35229ae44ed3091259e8c3009689dff8c91cc7390e"}},{"message":{"text":"Spring Security contains an uncontrolled resource consumption vulnerability. Attackers could exploit this to create an `OutOfMemory` error and exhaust  system resources, triggering a denial-of-service (DoS) condition."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2021-22119 spring-security-config 5.2.1.RELEASE: spring-boot-starter-security 2.2.2.RELEASE: org.springframework.security","partialFingerprints":{"ruleIdLocationHash/v1":"889975fb6c901ee3a4b22ed0be8d16bf081d32007d5f1eeaaa65ce5b2a2848c3"}},{"message":{"text":"Spring Security is vulnerable to the weakening of bcrypt-generated password hashes due to an integer overflow. An attacker that is able to obtain weak password hashes that have been produced by a vulnerable application could potentially retrieve the plaintext password. It should be noted that the `BCryptPasswordEncoder` class must have been configured to use the maximum work factor (31) in order for the vulnerability to manifest. This is a non-default value."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2022-22976 spring-security-config 5.2.1.RELEASE: spring-boot-starter-security 2.2.2.RELEASE: org.springframework.security","partialFingerprints":{"ruleIdLocationHash/v1":"64e065bc1eccd5f07e6a7c456c747a19bd0e3495ab7b9ae85847db483052e927"}},{"message":{"text":"Spring Security is vulnerable to authentication abuse due to the improper handling of SAML response validation. This could allow an attacker to inject arbitrary assertions into SAML responses."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2020-5407 spring-security-config 5.2.1.RELEASE: spring-boot-starter-security 2.2.2.RELEASE: org.springframework.security","partialFingerprints":{"ruleIdLocationHash/v1":"1e028064e4ee808a061be7454d685916634a9cd75b31ff333718d7168238d0b8"}},{"message":{"text":"Spring Security is vulnerable to information exposure due to an insecure cryptographic mechanism in the queryable text encryptor. This could be leveraged by an attacker to derive sensitive information from encrypted text using dictionary attacks."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2020-5408 spring-security-config 5.2.1.RELEASE: spring-boot-starter-security 2.2.2.RELEASE: org.springframework.security","partialFingerprints":{"ruleIdLocationHash/v1":"b48d317d39f5d73ac3069fc287c7b3546ed07d2d1c35588f0a1875137294c912"}},{"message":{"text":"jsoup is vulnerable to denial-of-service (DoS) due to flaws in its parsing component. A remote attacker could impact the performance of the application, or cause it to crash, by sending maliciously crafted HTML or XML documents to a vulnerable endpoint."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2021-37714 jsoup 1.11.3: org.jsoup","partialFingerprints":{"ruleIdLocationHash/v1":"277018a27055ad19a5092e9200d5af143489fc95cee7a5d145eaec66d9a2d9bd"}},{"message":{"text":"Jsoup has a cross-site scripting (XSS) vulnerability due to an absence of correct parameter input validation. A remote attacker could insert JavaScript code into dynamically generated content in order to steal a victim's session tokens, cookies, or other sensitive information.\n\n**Note** This vulnerability applies to installations where the non-default `SafeList.preserveRelativeLinks` option is enabled and the HTML site does not have a Content Security Policy is in place."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2022-36033 jsoup 1.11.3: org.jsoup","partialFingerprints":{"ruleIdLocationHash/v1":"6c25dd552d4d9b7f601a359ff20a41ce4f35e290cbffc65945839562d2ab4b0d"}},{"message":{"text":"Pivotal Spring Framework through 5.3.16 suffers from a potential remote code execution (RCE) issue if used for Java deserialization of untrusted data. Depending on how the library is implemented within a product, this issue may or not occur, and authentication may be required. NOTE: the vendor's position is that untrusted data is not an intended use case. The product's behavior will not be changed because some users rely on deserialization of trusted data."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2016-1000027 spring-aop 5.2.2.RELEASE: spring-boot-starter-security 2.2.2.RELEASE: org.springframework","partialFingerprints":{"ruleIdLocationHash/v1":"ec28a51ec07603748eb5dc3738277f177cd0ff9a001289933e64634586646997"}},{"message":{"text":"Spring Framework is vulnerable to a flaw in the access restrictions to the security sensitive `ClassLoader` property. The restrictions can be bypassed through alternative paths available with Java9 and later. An attacker can leverage this vulnerability to cause remote code execution (RCE).\n\n**Note** this issue exists because the restrictions that were introduced to prevent exploitation of BDSA-2010-0001 (CVE-2010-1622) can be bypassed on platforms where Java9 and later are in use.\n\nThis vulnerability is listed as exploitable by the Cybersecurity \u0026 Infrastructure Security Agency in their [Known Exploited Vulnerabilities Catalog](https://www.cisa.gov/known-exploited-vulnerabilities-catalog)."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2022-22965 spring-aop 5.2.2.RELEASE: spring-boot-starter-security 2.2.2.RELEASE: org.springframework","partialFingerprints":{"ruleIdLocationHash/v1":"ff6b2a05bb6493ffe56fcd1deb84117d85c5626b4d7ff620e6f2534dcdb31d4d"}},{"message":{"text":"Spring Framework is vulnerable to cross-site request forgery (CSRF) attacks via CORS preflight requests which target Spring MVC or Spring WebFlux endpoints."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2020-5397 spring-aop 5.2.2.RELEASE: spring-boot-starter-security 2.2.2.RELEASE: org.springframework","partialFingerprints":{"ruleIdLocationHash/v1":"18a9d319bd1e07fd42ff49725ff9aa3c705a37473075b03ce5c13cf4437ae391"}},{"message":{"text":"Software systems using Spring Framework may be vulnerable to unsafe deserialization if they employ unsafe use of certain provided deserialization functionality. A remote attacker could potentially execute arbitrary code on a vulnerable endpoint by passing a maliciously crafted serialized object to that endpoint.\n\n**Note**: This issue only affects software that has been written to leverage specific deserialization functionality provided by the Spring Framework without sanitization."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"BDSA-2022-0847 spring-aop 5.2.2.RELEASE: spring-boot-starter-security 2.2.2.RELEASE: org.springframework","partialFingerprints":{"ruleIdLocationHash/v1":"e2ca673f5ac1707b8e22fdc202b67df26554be4d00a5d03192f75a9f4350c839"}},{"message":{"text":"Spring Framework is vulnerable to a reflected file download (RFD) attack via improper input validation on filenames in a `Content-Disposition` header."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2020-5398 spring-aop 5.2.2.RELEASE: spring-boot-starter-security 2.2.2.RELEASE: org.springframework","partialFingerprints":{"ruleIdLocationHash/v1":"201445a5e0b199b07b14f2a6f7a003d30f38457c65c67eece64dbd9f0a68d486"}},{"message":{"text":"Spring Framework is vulnerable to log file injection due to the insufficient validation of user input in an undisclosed component. An attacker could leverage this issue in order to add arbitrary entries to a log file which could impact both the integrity issues and performance issues.\n\n**Note**: a follow-up to this issue was disclosed as **CVE-2021-22060** (**BDSA-2021-3236**), with further fixed releases that protect against additional types of input and in more places of the Spring Framework codebase."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2021-22096 spring-aop 5.2.2.RELEASE: spring-boot-starter-security 2.2.2.RELEASE: org.springframework","partialFingerprints":{"ruleIdLocationHash/v1":"1b0451a661faa7fc345d6f89f15f8cb951ca9c5f6d47c9a0bbfb593467d97bdc"}},{"message":{"text":"Spring Framework is vulnerable to log file injection due to the insufficient validation of user input in an undisclosed component. An attacker could leverage this issue in order to add arbitrary entries to a log file which could impact both the integrity issues and performance issues.\n\n**Note**: the vendor states this issue exists as a follow up to CVE-2021-22096 (BDSA-2022-0011) that protects against additional types of input and in more places of the Spring Framework codebase."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2021-22060 spring-aop 5.2.2.RELEASE: spring-boot-starter-security 2.2.2.RELEASE: org.springframework","partialFingerprints":{"ruleIdLocationHash/v1":"6deddf89ccdfe1595f4c3e8dca1d8973258c953cd4363ecbc9b6a3539b845b15"}},{"message":{"text":"Spring-Framework's spring-expression is vulnerable to a denial-of-service (DoS) condition. This allows an attacker to use crafted input to cause the spring-expression process to crash due to an exception."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2022-22950 spring-aop 5.2.2.RELEASE: spring-boot-starter-security 2.2.2.RELEASE: org.springframework","partialFingerprints":{"ruleIdLocationHash/v1":"0524ca6e2e7f53adb623ac73330b0509fc4988a38445784faf893b2df90bd2b5"}},{"message":{"text":"Spring Framework is vulnerable to privilege escalation due to the creation of unsafe temporary directories by the WebFlux component. A local authenticated attacker could modify arbitrary files via maliciously crafted `multipart` requests. \n\nThis vulnerability does not affect Spring MVC applications, or applications that do not handle `multipart` file requests."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2021-22118 spring-aop 5.2.2.RELEASE: spring-boot-starter-security 2.2.2.RELEASE: org.springframework","partialFingerprints":{"ruleIdLocationHash/v1":"5b4a863ef15ccc61825bfef61b926b6deeb9aa6a195095fc01ab12e307c602e2"}},{"message":{"text":"Spring Framework is vulnerable to denial-of-service (DoS) due to the improper implementation of data binding functionality. A remote attacker could cause a vulnerable server to crash if that server provides file upload functionality."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2022-22970 spring-aop 5.2.2.RELEASE: spring-boot-starter-security 2.2.2.RELEASE: org.springframework","partialFingerprints":{"ruleIdLocationHash/v1":"29f20249e898e676ff51edd586a9dae7be2d6124a1f838881791ddd413ca0e54"}},{"message":{"text":"Spring Framework is vulnerable to denial-of-service (DoS) due to the improper handling of the STOMP protocol for websockets. A remote authenticated attacker could leverage this issue in order to cause a server to crash."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2022-22971 spring-aop 5.2.2.RELEASE: spring-boot-starter-security 2.2.2.RELEASE: org.springframework","partialFingerprints":{"ruleIdLocationHash/v1":"0a39eedb2a67520d6e0e7e17b6799d57a22e478a528527a1d91cac57fc275bd3"}},{"message":{"text":"Spring Framework is vulnerable to denial-of-service (DoS) via specially crafted SpEL expressions. An attacker could exploit this issue by passing a crafted SpEL expression to the application which may result in a crash."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2023-20861 spring-aop 5.2.2.RELEASE: spring-boot-starter-security 2.2.2.RELEASE: org.springframework","partialFingerprints":{"ruleIdLocationHash/v1":"3e17f5f0b778c9519f087d2f60631907f9f0a8ff34ce0eb4ed40f4a80b66c055"}},{"message":{"text":"Spring Framework is vulnerable to denial-of-service (DoS) via specially crafted SpEL expressions."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2023-20863 spring-aop 5.2.2.RELEASE: spring-boot-starter-security 2.2.2.RELEASE: org.springframework","partialFingerprints":{"ruleIdLocationHash/v1":"551280147a655559a77cd4fc52e8f7652cc52014ce03be0c3ce13750acf0b04d"}},{"message":{"text":"It was discovered that Spring Framework was vulnerable to RFD protection bypass. In some instances, depending on the browser used, an attacker could bypass the RFD attack protections via the use of a `jsessionid` path parameter."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2020-5421 spring-aop 5.2.2.RELEASE: spring-boot-starter-security 2.2.2.RELEASE: org.springframework","partialFingerprints":{"ruleIdLocationHash/v1":"6fc4d4d2b9cc87b65c2019bab0671471a7a3ec2de601661a103563e94a8b1bfd"}},{"message":{"text":"Spring Framework is vulnerable to data binding protection bypass due to improper validation of specified disallowed fields in `DataBinders`. This could be leveraged by an attacker to bypass the suggested workaround to **CVE-2022-22965** (**BDSA-2022-0858**) if it is improperly implemented."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2022-22968 spring-aop 5.2.2.RELEASE: spring-boot-starter-security 2.2.2.RELEASE: org.springframework","partialFingerprints":{"ruleIdLocationHash/v1":"95e526247550152bc775d1d3368eea78f40d96beb6d2cce0924696959d1d2a43"}},{"message":{"text":"Apache Log4j, as used in many popular services, is vulnerable to improperly allowing lightweight directory access protocol (LDAP) access via Java naming and directory interface (JNDI). A remote attacker able to supply the end application with specially crafted input that is then processed by the Log4j subcomponent could cause the execution of arbitrary Java code.\n\n**Note** \n\n- log4j-api packages by themselves do not contain the vulnerable functionality and are therefore unaffected. log4j-core packages and the upstream overarching source repository are affected.\n\n- A previously suggested mitigation of setting environment variable `LOG4J_FORMAT_MSG_NO_LOOKUPS=true` is not recommended. This mitigation has been proven inadequate against this vulnerability. \n\n- This vulnerability is partially fixed in [**2.15.0-rc2**](https://github.com/apache/logging-log4j2/releases/tag/log4j-2.15.0-rc2) by [this](https://github.com/apache/logging-log4j2/commit/001aaada7dab82c3c09cde5f8e14245dc9d8b454) commit and [this](https://github.com/apache/logging-log4j2/commit/bac0d8a35c7e354a0d3f706569116dff6c6bd658) commit. These fixes were deemed incomplete. See BDSA-2021-3779 (CVE-2021-45046) for more details.\n\nThis vulnerability is listed as exploitable by the Cybersecurity \u0026 Infrastructure Security Agency in their [Known Exploited Vulnerabilities Catalog](https://www.cisa.gov/known-exploited-vulnerabilities-catalog)."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"BDSA-2021-3731 spring-boot-starter-thymeleaf 2.2.2.RELEASE: org.springframework.boot","partialFingerprints":{"ruleIdLocationHash/v1":"3eed2edce7f41512549f8773012eab70ef63b2e4f21f0d8040fa9181bb61355f"}},{"message":{"text":"Spring Framework is vulnerable to a flaw in the access restrictions to the security sensitive `ClassLoader` property. The restrictions can be bypassed through alternative paths available with Java9 and later. An attacker can leverage this vulnerability to cause remote code execution (RCE).\n\n**Note** this issue exists because the restrictions that were introduced to prevent exploitation of BDSA-2010-0001 (CVE-2010-1622) can be bypassed on platforms where Java9 and later are in use.\n\nThis vulnerability is listed as exploitable by the Cybersecurity \u0026 Infrastructure Security Agency in their [Known Exploited Vulnerabilities Catalog](https://www.cisa.gov/known-exploited-vulnerabilities-catalog)."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2022-22965 spring-boot-starter-thymeleaf 2.2.2.RELEASE: org.springframework.boot","partialFingerprints":{"ruleIdLocationHash/v1":"aba7e698239eb4fee99a325e698f64bf71b93bfab63bfbf74e0cb6fe966cbe02"}},{"message":{"text":"Spring framework contains a security bypass vulnerability when `/**` is used as a pattern in Spring Security configuration with the `/cloudfoundryapplication/**` component. The potential for security bypass exists due to the mismatch in pattern matching between Spring Security and Cloud Foundry.\n\n**Note**: The vendor has stated in their [advisory](https://spring.io/security/cve-2023-20873) that this application is not vulnerable if any of the following is true:\n* The application is not deployed to Cloud Foundry.\n* You have disabled Cloud Foundry actuator endpoints with `management.cloudfoundry.enabled` set to `false`.\n* Your application does not have handler mappings that can handle requests to `/cloudfoundryapplication/**`."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2023-20873 spring-boot-starter-thymeleaf 2.2.2.RELEASE: org.springframework.boot","partialFingerprints":{"ruleIdLocationHash/v1":"82ece598b808c122fe61291992153a596f5ac2adeb31a8e8a463d9a3ef51610e"}},{"message":{"text":"Apache log4j is vulnerable to a denial-of-service (DoS) when uncontrolled recursion occurs through a self-referencing lookup.  An attacker can trigger a DoS with malicious input data that generates a recursive lookup  and consequent application crash.\n\nSuccessful attacks require the attacker to have access to Thread Context Map (MDC) input, and for log4j configured with non-default pattern layout with a Context Lookup.\n\nOnly the log4j-core JAR file is impacted by this vulnerability. Applications using only the log4j-api JAR file without the log4j-core JAR file are not impacted.\n\nApache Log4j is the only Logging Services subproject affected by this vulnerability. Other projects like Log4net  are not impacted."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"BDSA-2021-3817 spring-boot-starter-thymeleaf 2.2.2.RELEASE: org.springframework.boot","partialFingerprints":{"ruleIdLocationHash/v1":"0b520e6b7770cea25e6ed28e8a537254057291def1be765ae0363cc510564255"}},{"message":{"text":"Apache Log4j contains a remote code execution (RCE) vulnerability. This allows an attacker that has permissions to modify the logging configuration files to input a malicious JDBC Appender with a data source referencing a JDNI URI. This can then lead to RCE.\n\n**Note:** This vulnerability impacts log4j-core."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"BDSA-2021-3887 spring-boot-starter-thymeleaf 2.2.2.RELEASE: org.springframework.boot","partialFingerprints":{"ruleIdLocationHash/v1":"0979b31b0b9e9fb069b7a8e052743317232b7aa6387d8057623323f7fc01ba44"}},{"message":{"text":"Spring Boot is vulnerable to privilege escalation due to a race condition which occurs during the creation of a temporary directory. A local attacker could create their own temporary directory by racing against Spring Boot and supply their own configuration files which would allow for the full takeover of the application."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2022-27772 spring-boot-starter-thymeleaf 2.2.2.RELEASE: org.springframework.boot","partialFingerprints":{"ruleIdLocationHash/v1":"bd393ecd8cd098da6aac1790b20b84f8b2273e6203f8f1fa2ddf3e0a7b1f832c"}},{"message":{"text":"Spring Boot is vulnerable to denial-of-service (DoS) via the welcome page when used to serve an application behind a reverse proxy cache. This will cause users to continuously be served a 404 response, preventing standard application use.\n\n\n**Note:** Spring have provided the following guidance for vulnerable criteria. \nAn application is vulnerable if all of the following are true:\n\n- \"The application has Spring MVC auto-configuration enabled. This is the case by default if Spring MVC is on the classpath.\"\n- \"The application makes use of Spring Boot's welcome page support, either static or templated.\"\n- \"Your application is deployed behind a proxy which caches 404 responses.\"\n\nThe application is not vulnerable if any of the following are true:\n\n- \"Spring MVC auto-configuration is disabled. This is true if `WebMvcAutoConfiguration` is explicitly excluded, if Spring MVC is not on the classpath, or if `spring.main.web-application-type` is set to a value other than `SERVLET`.\"\n- \"The application does not use Spring Boot's welcome page support.\"\n- \"You do not have a proxy which caches 404 responses.\""},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2023-20883 spring-boot-starter-thymeleaf 2.2.2.RELEASE: org.springframework.boot","partialFingerprints":{"ruleIdLocationHash/v1":"d9733134b9462fb066d0c5f52aca25bfea66104b2ad524d7ae8eea3c94b3735c"}},{"message":{"text":"Spring Boot is vulnerable to denial-of-service (DoS). An unauthenticated user could trigger the vulnerability by providing specially crafted HTTP requests to a web metrics endpoint."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2023-34055 spring-boot-starter-thymeleaf 2.2.2.RELEASE: org.springframework.boot","partialFingerprints":{"ruleIdLocationHash/v1":"0ddcbfb181cd57d4c27ebdc539a8f67408523802e826333975d3e84bbe3420a7"}},{"message":{"text":"Jetty is vulnerable to temporary directory Hijacking via a race condition. If code is executed from this temporary directory it can lead to local privilege escalation."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2020-27216 jetty-security 9.4.24.v20191120: wiremock 2.8.0: org.eclipse.jetty","partialFingerprints":{"ruleIdLocationHash/v1":"669b63c83dfaae3219940a5a1b277226e98c840ccbbc4bf5a2b7823a64a26e41"}},{"message":{"text":"The HTTP/2 protocol contains a flaw related to the stream multiplexing feature that can allow for excessive resource consumption on servers operating implementations of the HTTP/2 protocol. \n\nThe HTTP/2 protocol allows clients to signal to a server to cancel a previously opened stream by sending an `RST_STREAM` frame. Attackers can abuse this stream canceling ability by opening a large number of streams at once immediately followed by `RST_STREAM` frames. In most HTTP/2 implementations this bypasses concurrent open stream limits and causes servers to spend processing time first handling request frames and then performing stream tear downs. For the server, these operations can pile up whereas the attacker client paid minuscule bandwidth and processing costs.\n\n[Amazon](https://aws.amazon.com/security/security-bulletins/AWS-2023-011/), [Cloudflare](https://blog.cloudflare.com/technical-breakdown-http2-rapid-reset-ddos-attack/) and [Google](https://cloud.google.com/blog/products/identity-security/google-cloud-mitigated-largest-ddos-attack-peaking-above-398-million-rps/) have reported that this vulnerability has been exploited in the wild from August to October 2023.\n\nThis vulnerability is listed as exploitable by the Cybersecurity \u0026 Infrastructure Security Agency in their [Known Exploited Vulnerabilities Catalog](https://www.cisa.gov/known-exploited-vulnerabilities-catalog)."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2023-44487 jetty-security 9.4.24.v20191120: wiremock 2.8.0: org.eclipse.jetty","partialFingerprints":{"ruleIdLocationHash/v1":"e8f6d3732954a201a773ef0a2f010ae307bfa0f47f5b88f3b8989038ecde98f9"}},{"message":{"text":"Jetty is vulnerable to denial-of-service (DoS) due to the use of an exponential algorithm that can have excessive resource requirements. A remote attacker could cause a vulnerable server to become unresponsive by sending maliciously crafted HTTP requests to that server."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2020-27223 jetty-security 9.4.24.v20191120: wiremock 2.8.0: org.eclipse.jetty","partialFingerprints":{"ruleIdLocationHash/v1":"4353935692c557a45652818ec93cf72b24f5efc998ee793fc04f933fea5a5490"}},{"message":{"text":"Eclipse Jetty is vulnerable to Denial-of-Service (DoS) via invalid TLS frames. An attacker could exploit this by sending a TLS frame with a size in excess of 17408 resulting in excessive resource consumption leading to a DoS condition."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2021-28165 jetty-security 9.4.24.v20191120: wiremock 2.8.0: org.eclipse.jetty","partialFingerprints":{"ruleIdLocationHash/v1":"540e59d45d572964e6fcf2b26420f7753912cf43cf991fc0421c856be9e42cd8"}},{"message":{"text":"Jetty is vulnerable to information disclosure due to improper requested path verification. This allows crafted requests to access protected resources of the web application which, depending on the implementation, might reveal sensitive information."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2021-28169 jetty-security 9.4.24.v20191120: wiremock 2.8.0: org.eclipse.jetty","partialFingerprints":{"ruleIdLocationHash/v1":"ea8ec26fd947f47c388f997e0df94017ad1dfd62b7d115281341160348c5838a"}},{"message":{"text":"Eclipse Jetty is vulnerable to a denial-of-service (DoS) issue due to presence of a user input validation flaw in the HTTP/2 HPACK functionality that can lead to an integer overflow and allow HPACK headers to exceed their expected size limits.\n\nAn attacker could submit crafted HTTP messages that trigger the integer overflow flaw and cause large buffers to be allocated on the server, consuming memory resources in a manner that could cause the server to run out of memory."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2023-36478 jetty-security 9.4.24.v20191120: wiremock 2.8.0: org.eclipse.jetty","partialFingerprints":{"ruleIdLocationHash/v1":"cbe066b62374bc5d1b0a1c3ec0b7efa084a05198037d02781dd24f9048784520"}},{"message":{"text":"Eclipse Jetty does not correctly handle invalid HTTP/2 requests. An attacker could exploit this flaw to exhaust the HTTP/2 flow control window or TCP congest the connection. This will cause the relevant selector threads to be blocked and it will lead to a denial-of-service (DoS)."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2022-2048 jetty-security 9.4.24.v20191120: wiremock 2.8.0: org.eclipse.jetty","partialFingerprints":{"ruleIdLocationHash/v1":"81a8e252181244f597ded10d27b9e56aa336ac31d7bd994380cc7f5ddef52f80"}},{"message":{"text":"Eclipse Jetty contains a vulnerability that allows a remote attacker to inject data into other client's requests. This vulnerability only exists when GZIP request body inflation is enabled, and requests from different clients are multiplexed onto a single connection."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2020-27218 jetty-security 9.4.24.v20191120: wiremock 2.8.0: org.eclipse.jetty","partialFingerprints":{"ruleIdLocationHash/v1":"ae19d56f55791fbce509128ebf950ca6d3b31b17042b3eb253889753d18a76ee"}},{"message":{"text":"Eclipse Jetty contains a vulnerability in its multipart request parsing mechanism that can lead to an out-of-memory error due to insufficient limiting measures. An attacker can exploit this flaw by supplying a request containing a large multipart without a filename in order to cause a denial-of-service (DoS)."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2023-26048 jetty-security 9.4.24.v20191120: wiremock 2.8.0: org.eclipse.jetty","partialFingerprints":{"ruleIdLocationHash/v1":"b25e179e35350222a5037f93fe8e23d32cdcb1bc89560e243708782fea243a89"}},{"message":{"text":"Eclipse Jetty does not properly parse quoted values in cookies. This could allow an attacker to smuggle cookies within other cookies into the application. The attacker can also tamper with the cookie parsing mechanism and cause other unintended behavior."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2023-26049 jetty-security 9.4.24.v20191120: wiremock 2.8.0: org.eclipse.jetty","partialFingerprints":{"ruleIdLocationHash/v1":"17529ee4210e9ef6d75e4a1e86845c712fce122e1150678d7dd792ea46d51133"}},{"message":{"text":"Eclipse Jetty is vulnerable to HTTP request smuggling due to the improper parsing of HTTP requests. An attacker could exploit this vulnerability by sending maliciously crafted HTTP requests to a vulnerable endpoint with multiple requests included inside the body by manipulating the `Content-Length` of the request. The smuggling of HTTP requests may allow for the bypass of security tools such as web application firewalls (WAFs) and intrusion detection systems (IDSs)."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2023-40167 jetty-security 9.4.24.v20191120: wiremock 2.8.0: org.eclipse.jetty","partialFingerprints":{"ruleIdLocationHash/v1":"bb6acd0f5ee0eefec6af45b0aa884bcf75c349f2c3f17843301de10f7f1353f0"}},{"message":{"text":"Eclipse Jetty contains an improper neutralization of quoting syntax issue within the CGI servlet. This could allow an authenticated attacker to send a request to the CGI Servlet for a binary with a space in its name in order to manipulate the command structure and execute incorrect commands."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2023-36479 jetty-security 9.4.24.v20191120: wiremock 2.8.0: org.eclipse.jetty","partialFingerprints":{"ruleIdLocationHash/v1":"222640871ad25d5d9bbf40fcb3a131f9ca9d3559d48180d02f06d601aa484db7"}},{"message":{"text":"Eclipse Jetty contains an improper authentication vulnerability. This could allow an authenticated attacker to bypass authentication after it has been rejected or revoked by the `LoginService` and make a request as if authenticated.\n\n**Note:** The vendor has stated that this issue impacts usages of the `jetty-openid` which have configured a nested `LoginService` and where that `LoginService` is capable of rejecting previously authenticated users."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2023-41900 jetty-security 9.4.24.v20191120: wiremock 2.8.0: org.eclipse.jetty","partialFingerprints":{"ruleIdLocationHash/v1":"bcde5d1195c5bf15352db5c47d6a38aa0b85a1a0a06766406c45ad203618edb9"}},{"message":{"text":"Eclipse Jetty is vulnerable to insufficient session expiry. This may result in sessions used on a shared computer persisting for longer than intended."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2021-34428 jetty-security 9.4.24.v20191120: wiremock 2.8.0: org.eclipse.jetty","partialFingerprints":{"ruleIdLocationHash/v1":"5e9ccd4b45488a856ca6e675814822fa1f1b8ad4dfb4cbb79eaeaaa52c6778a2"}},{"message":{"text":"Eclipse Jetty does not correctly handle invalid authority segments of HTTP URIs. An authenticated attacker could exploit this flaw by passing an invalid URI that contains an improper authority with no host so that it is interpreted as one with a host."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2022-2047 jetty-security 9.4.24.v20191120: wiremock 2.8.0: org.eclipse.jetty","partialFingerprints":{"ruleIdLocationHash/v1":"f5134274f9703e429c9e8ca4911872d68801ed9a27bfb1da0d85e013e700ce26"}},{"message":{"text":"Spring Security contains a flaw when dealing with OAuth2 access token empty scope list  responses. A remote attacker could leverage this to escalate their privileges under **all** the following conditions being met:\n\n* They act as the role of a Login Client (e.g. uses `http.oauth2Login()`).\n* They use one or more authorization rules with authorities mapped from authorized scopes (e.g. `anyRequest().hasAuthority(\"SCOPE_message.write\")`) in the client application.\n* An authorization server that responds with empty scopes list is registered (RFC 6749, Section 5.1).\n\n**Note:** The role of Resource Servers (`http.oauth2ResourceServer()`) and applications that do not map authorization rules from authorized scopes (eg. `anyRequest().hasAuthority(\"ROLE_USER\")`) cannot be exploited by this vulnerability."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"BDSA-2022-3109 spring-security-test 5.2.1.RELEASE: org.springframework.security","partialFingerprints":{"ruleIdLocationHash/v1":"b711a6f61a600b7517375f7b7f7491c3a812969c2e0b8e972fdd90668b271055"}},{"message":{"text":"Spring Security used with Spring WebFlux performs incorrect parsing when using `**` as a pattern in Spring Security configuration due to inconsistent pattern matching between the two components. This could lead to bypassing of security mechanisms configured by Spring Security."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"BDSA-2023-1825 spring-security-test 5.2.1.RELEASE: org.springframework.security","partialFingerprints":{"ruleIdLocationHash/v1":"2a2b49b39380d93a6ffadd87cb36a1ec4cbb684134ee74ffb8d5efcb78941e52"}},{"message":{"text":"Spring Security is vulnerable to the bypassing of an authorization mechanism due to improperly implemented regular expression matching. A remote attacker could perform unauthorized actions on a vulnerable server by sending maliciously crafted requests to that server."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2022-22978 spring-security-test 5.2.1.RELEASE: org.springframework.security","partialFingerprints":{"ruleIdLocationHash/v1":"d7b16bb33a9680ca6195eda5c3a1964c7d0f676b4dadbd21ea3743b3e5ebcb81"}},{"message":{"text":"Spring Security is vulnerable to privilege escalation due to a failure to correctly save security context information. An attacker who is allowed to use elevated privileges in a small portion of a program could extend those privileges to the entire program by sending maliciously crafted requests to the application.\n\nIt should be noted that the vulnerability is not present by default, and must be programmed in by an application developer."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2021-22112 spring-security-test 5.2.1.RELEASE: org.springframework.security","partialFingerprints":{"ruleIdLocationHash/v1":"db71ba27303a7024d99dee13a4463848cec14c5cf67fde5e45007ae813ab0f2b"}},{"message":{"text":"Spring Security contains an uncontrolled resource consumption vulnerability. Attackers could exploit this to create an `OutOfMemory` error and exhaust  system resources, triggering a denial-of-service (DoS) condition."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2021-22119 spring-security-test 5.2.1.RELEASE: org.springframework.security","partialFingerprints":{"ruleIdLocationHash/v1":"6295ff7b7e6818c412b7cf9166cbc8523572ac8ca8e282cd47faeb328b7184f8"}},{"message":{"text":"Spring Security is vulnerable to the weakening of bcrypt-generated password hashes due to an integer overflow. An attacker that is able to obtain weak password hashes that have been produced by a vulnerable application could potentially retrieve the plaintext password. It should be noted that the `BCryptPasswordEncoder` class must have been configured to use the maximum work factor (31) in order for the vulnerability to manifest. This is a non-default value."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2022-22976 spring-security-test 5.2.1.RELEASE: org.springframework.security","partialFingerprints":{"ruleIdLocationHash/v1":"4ea9bf94eb90da73d5545fc35b94743c638e84bb36a7208b7eb58cbf94a0b8f6"}},{"message":{"text":"Spring Security is vulnerable to authentication abuse due to the improper handling of SAML response validation. This could allow an attacker to inject arbitrary assertions into SAML responses."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2020-5407 spring-security-test 5.2.1.RELEASE: org.springframework.security","partialFingerprints":{"ruleIdLocationHash/v1":"8f9c4ba5c7915efdc2843590870c22b5846728cda49be483b8847b4e80bcff62"}},{"message":{"text":"Spring Security is vulnerable to information exposure due to an insecure cryptographic mechanism in the queryable text encryptor. This could be leveraged by an attacker to derive sensitive information from encrypted text using dictionary attacks."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2020-5408 spring-security-test 5.2.1.RELEASE: org.springframework.security","partialFingerprints":{"ruleIdLocationHash/v1":"c7213bc4f9c4774c0f4e07086933d94b5e6f90c108696811abc062a145fcbb88"}},{"message":{"text":"Wiremock is vulnerable to XML external entity (XXE) attacks due to weak configuration of XML parsing. An attacker can retrieve files outside the web root, execute arbitrary code or cause a denial-of-service (DoS) condition."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2018-9116 wiremock 2.8.0: com.github.tomakehurst","partialFingerprints":{"ruleIdLocationHash/v1":"578b3986a45fc56f7c717fa7ee5cf88b0d6d9ec459b63038a0e491fbb5545706"}},{"message":{"text":"WireMock contains an absolute path traversal vulnerability where an attacker is able to access local files and potentially disclose sensitive information."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2018-9117 wiremock 2.8.0: com.github.tomakehurst","partialFingerprints":{"ruleIdLocationHash/v1":"ae0deb46574f38a899d662df916b98aa53e845e88eebc35973364a808b38c510"}},{"message":{"text":"WireMock is vulnerable to a server-side request forgery (SSRF) due to improper restrictive configuration of the DNS resolver within the processing of webhooks. Successful exploitation of this issue could allow an unauthenticated attacker to trick a user into initiating a POST request via an arbitrary webhook to an outbound network, in order to obtain access to internal resources."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2023-41327 wiremock 2.8.0: com.github.tomakehurst","partialFingerprints":{"ruleIdLocationHash/v1":"6f06085349fd91a0aedca9a7e1b966f2b8e9873ad449fdf1d738ca97e582c913"}},{"message":{"text":"WireMock contains a domain restriction bypass vulnerability due to insufficient validation of allowed address rules. Successful exploitation of this issue enables a highly privileged attacker that has control over a DNS service to bypass domain restriction and gain unauthorized access."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2023-41329 wiremock 2.8.0: com.github.tomakehurst","partialFingerprints":{"ruleIdLocationHash/v1":"9ac032ce693ee4172fcb236e87fd2b5d84a1203b580a5f8ce07c3e69b1d87885"}},{"message":{"text":"Pivotal Spring Framework through 5.3.16 suffers from a potential remote code execution (RCE) issue if used for Java deserialization of untrusted data. Depending on how the library is implemented within a product, this issue may or not occur, and authentication may be required. NOTE: the vendor's position is that untrusted data is not an intended use case. The product's behavior will not be changed because some users rely on deserialization of trusted data."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2016-1000027 spring-jdbc 5.2.2.RELEASE: spring-boot-starter-data-jpa 2.2.2.RELEASE: org.springframework","partialFingerprints":{"ruleIdLocationHash/v1":"34fbb8702095bd36365b6a074ea6614223a9f237b24debf4aad7ff795bf6117b"}},{"message":{"text":"Spring Framework is vulnerable to a flaw in the access restrictions to the security sensitive `ClassLoader` property. The restrictions can be bypassed through alternative paths available with Java9 and later. An attacker can leverage this vulnerability to cause remote code execution (RCE).\n\n**Note** this issue exists because the restrictions that were introduced to prevent exploitation of BDSA-2010-0001 (CVE-2010-1622) can be bypassed on platforms where Java9 and later are in use.\n\nThis vulnerability is listed as exploitable by the Cybersecurity \u0026 Infrastructure Security Agency in their [Known Exploited Vulnerabilities Catalog](https://www.cisa.gov/known-exploited-vulnerabilities-catalog)."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2022-22965 spring-jdbc 5.2.2.RELEASE: spring-boot-starter-data-jpa 2.2.2.RELEASE: org.springframework","partialFingerprints":{"ruleIdLocationHash/v1":"ae87c6a8689127ff540a33e6cab65785c25c08f4dca4376cef02282cbeec9d5d"}},{"message":{"text":"Spring Framework is vulnerable to cross-site request forgery (CSRF) attacks via CORS preflight requests which target Spring MVC or Spring WebFlux endpoints."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2020-5397 spring-jdbc 5.2.2.RELEASE: spring-boot-starter-data-jpa 2.2.2.RELEASE: org.springframework","partialFingerprints":{"ruleIdLocationHash/v1":"ff5f9d73eced346bd9d3e91bc47e923090c62294986d5f3d44e2aea82ed97114"}},{"message":{"text":"Software systems using Spring Framework may be vulnerable to unsafe deserialization if they employ unsafe use of certain provided deserialization functionality. A remote attacker could potentially execute arbitrary code on a vulnerable endpoint by passing a maliciously crafted serialized object to that endpoint.\n\n**Note**: This issue only affects software that has been written to leverage specific deserialization functionality provided by the Spring Framework without sanitization."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"BDSA-2022-0847 spring-jdbc 5.2.2.RELEASE: spring-boot-starter-data-jpa 2.2.2.RELEASE: org.springframework","partialFingerprints":{"ruleIdLocationHash/v1":"e5ae0c704426079f155f449f4354b7b0551cba231291922e6f47a1914c1d6ee8"}},{"message":{"text":"Spring Framework is vulnerable to a reflected file download (RFD) attack via improper input validation on filenames in a `Content-Disposition` header."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2020-5398 spring-jdbc 5.2.2.RELEASE: spring-boot-starter-data-jpa 2.2.2.RELEASE: org.springframework","partialFingerprints":{"ruleIdLocationHash/v1":"dfb005c50c67d3df1f84b04a0c919f1f096f0e19fd205376f72a7613d37697b5"}},{"message":{"text":"Spring Framework is vulnerable to log file injection due to the insufficient validation of user input in an undisclosed component. An attacker could leverage this issue in order to add arbitrary entries to a log file which could impact both the integrity issues and performance issues.\n\n**Note**: a follow-up to this issue was disclosed as **CVE-2021-22060** (**BDSA-2021-3236**), with further fixed releases that protect against additional types of input and in more places of the Spring Framework codebase."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2021-22096 spring-jdbc 5.2.2.RELEASE: spring-boot-starter-data-jpa 2.2.2.RELEASE: org.springframework","partialFingerprints":{"ruleIdLocationHash/v1":"e67e96e95bbd8044d3c375b22338812ec1c8883641db66e55465bbbd686652b3"}},{"message":{"text":"Spring Framework is vulnerable to log file injection due to the insufficient validation of user input in an undisclosed component. An attacker could leverage this issue in order to add arbitrary entries to a log file which could impact both the integrity issues and performance issues.\n\n**Note**: the vendor states this issue exists as a follow up to CVE-2021-22096 (BDSA-2022-0011) that protects against additional types of input and in more places of the Spring Framework codebase."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2021-22060 spring-jdbc 5.2.2.RELEASE: spring-boot-starter-data-jpa 2.2.2.RELEASE: org.springframework","partialFingerprints":{"ruleIdLocationHash/v1":"e763f1574b12c858f81e1d610f2b06be1e4ada897e4c1c0d44e2442fa14d3b76"}},{"message":{"text":"Spring-Framework's spring-expression is vulnerable to a denial-of-service (DoS) condition. This allows an attacker to use crafted input to cause the spring-expression process to crash due to an exception."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2022-22950 spring-jdbc 5.2.2.RELEASE: spring-boot-starter-data-jpa 2.2.2.RELEASE: org.springframework","partialFingerprints":{"ruleIdLocationHash/v1":"67415028cec9c463c01cbd6285bdf0b12b56642ef3e76e5af2413bc00efd2243"}},{"message":{"text":"Spring Framework is vulnerable to privilege escalation due to the creation of unsafe temporary directories by the WebFlux component. A local authenticated attacker could modify arbitrary files via maliciously crafted `multipart` requests. \n\nThis vulnerability does not affect Spring MVC applications, or applications that do not handle `multipart` file requests."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2021-22118 spring-jdbc 5.2.2.RELEASE: spring-boot-starter-data-jpa 2.2.2.RELEASE: org.springframework","partialFingerprints":{"ruleIdLocationHash/v1":"16db1bd5b18b5293c32a674026568bb1e73cae9f781e62db4c854f2ff5627f55"}},{"message":{"text":"Spring Framework is vulnerable to denial-of-service (DoS) due to the improper implementation of data binding functionality. A remote attacker could cause a vulnerable server to crash if that server provides file upload functionality."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2022-22970 spring-jdbc 5.2.2.RELEASE: spring-boot-starter-data-jpa 2.2.2.RELEASE: org.springframework","partialFingerprints":{"ruleIdLocationHash/v1":"9d922bd004f99c580648229aa265c6c54a9a2bbc42805f9a173c908ec01fad52"}},{"message":{"text":"Spring Framework is vulnerable to denial-of-service (DoS) due to the improper handling of the STOMP protocol for websockets. A remote authenticated attacker could leverage this issue in order to cause a server to crash."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2022-22971 spring-jdbc 5.2.2.RELEASE: spring-boot-starter-data-jpa 2.2.2.RELEASE: org.springframework","partialFingerprints":{"ruleIdLocationHash/v1":"c7e1f0cd801cd7b7f71c3ebefebfc5c30b6588e686a98c0a34ecb9471f779fed"}},{"message":{"text":"Spring Framework is vulnerable to denial-of-service (DoS) via specially crafted SpEL expressions. An attacker could exploit this issue by passing a crafted SpEL expression to the application which may result in a crash."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2023-20861 spring-jdbc 5.2.2.RELEASE: spring-boot-starter-data-jpa 2.2.2.RELEASE: org.springframework","partialFingerprints":{"ruleIdLocationHash/v1":"382b33323c34d737d49dede87f185c6b6b06b39ae27203c97660afbade40fa52"}},{"message":{"text":"Spring Framework is vulnerable to denial-of-service (DoS) via specially crafted SpEL expressions."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2023-20863 spring-jdbc 5.2.2.RELEASE: spring-boot-starter-data-jpa 2.2.2.RELEASE: org.springframework","partialFingerprints":{"ruleIdLocationHash/v1":"22c7be5f6b25c7eefd51bdf0a149d210f3f888dce72f8443457c2bedfab6ef97"}},{"message":{"text":"It was discovered that Spring Framework was vulnerable to RFD protection bypass. In some instances, depending on the browser used, an attacker could bypass the RFD attack protections via the use of a `jsessionid` path parameter."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2020-5421 spring-jdbc 5.2.2.RELEASE: spring-boot-starter-data-jpa 2.2.2.RELEASE: org.springframework","partialFingerprints":{"ruleIdLocationHash/v1":"1d64f1f85d126943b363b3f53692f6451aaea07301bccd23ee3ddf6692b538b0"}},{"message":{"text":"Spring Framework is vulnerable to data binding protection bypass due to improper validation of specified disallowed fields in `DataBinders`. This could be leveraged by an attacker to bypass the suggested workaround to **CVE-2022-22965** (**BDSA-2022-0858**) if it is improperly implemented."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2022-22968 spring-jdbc 5.2.2.RELEASE: spring-boot-starter-data-jpa 2.2.2.RELEASE: org.springframework","partialFingerprints":{"ruleIdLocationHash/v1":"daa30b2dcd5301a4cb5e5ae4b52f54750af48385099e561ef5b61801552d675a"}},{"message":{"text":"PgJDBC is vulnerable to XML external entity injection (XXE). A remote attacker could leverage this to cause a variety of impacts. These include:\n* Disclosure of confidential data\n* Denial-of-service (DoS)\n* Server Side Request Forgery (SSRF)\n* Port scanning"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2020-13692 postgresql 42.2.8: org.postgresql","partialFingerprints":{"ruleIdLocationHash/v1":"77be8c9c16acd593bc0c48beb8d8efdb28905bf77c475e4850760c4124e163aa"}},{"message":{"text":"pgjdbc is vulnerable to remote code execution (RCE) due to the insufficient validation of classes that are to be instantiated. An attacker could potentially execute arbitrary code on a vulnerable server by causing that server to load a dangerous class."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2022-21724 postgresql 42.2.8: org.postgresql","partialFingerprints":{"ruleIdLocationHash/v1":"c8172ac5acbcd438ca41d1101e37a8ed792701b457bdfacf2b1dc13069ea9bfa"}},{"message":{"text":"pgjdbc is vulnerable to remote code execution (RCE) due to an arbitrary file write issue in the Connection Properties settings. An attacker could potentially exploit this by creating an executable `.JSP` file under a Tomcat web root.\n\n**Note:** The vendor disputes that the issue lies within pgjdbc, instead suggesting that the issue lies with how the driver can be allowed to run with untrusted connection properties within an application."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2022-26520 postgresql 42.2.8: org.postgresql","partialFingerprints":{"ruleIdLocationHash/v1":"f430307e5c3b5197b910b726a2133d3face1ecfab28edcc8ca6e5ef7c4238623"}},{"message":{"text":"The PostgreSQL JDBC driver is vulnerable to SQL injection due to missing sanitization of supplied column names in the `java.sql.ResultRow.refreshRow()` implementation. With applications that invoke this method, this could allow an attacker to execute malicious SQL statements within the privileges of the JDBC user. An attacker could exploit this by specifying a column name containing crafted SQL and tricking a victim into executing SQL against the table containing the target column."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2022-31197 postgresql 42.2.8: org.postgresql","partialFingerprints":{"ruleIdLocationHash/v1":"975db64fc9a8c998d8d64ed3b414677a2dd3c2801f36f9349dbb732e59305519"}},{"message":{"text":"PostgreSQL JDBC Driver is vulnerable to information disclosure within the file system. This could allow an authenticated but unauthorized local attacker to access sensitive data within files created in the TemporaryFolder.\n\n**Note:** \n* This vulnerability only affects Unix like systems.\n* For users running **Java 1.6 and lower**, there is no patch available, please follow the workaround provided. A patch is available for users running Java 1.7 and above."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2022-41946 postgresql 42.2.8: org.postgresql","partialFingerprints":{"ruleIdLocationHash/v1":"a5d5a833efa13d68baa6d657a75f6889e75652aed8be2935fe973cc86eb2cd79"}},{"message":{"text":"Pivotal Spring Framework through 5.3.16 suffers from a potential remote code execution (RCE) issue if used for Java deserialization of untrusted data. Depending on how the library is implemented within a product, this issue may or not occur, and authentication may be required. NOTE: the vendor's position is that untrusted data is not an intended use case. The product's behavior will not be changed because some users rely on deserialization of trusted data."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2016-1000027 spring-webmvc 5.2.2.RELEASE: spring-boot-starter-web 2.2.2.RELEASE: org.springframework","partialFingerprints":{"ruleIdLocationHash/v1":"36e477472931cc516173a035a73a60204c6921a376eac6fdd162e355922cacfd"}},{"message":{"text":"Spring Framework is vulnerable to a flaw in the access restrictions to the security sensitive `ClassLoader` property. The restrictions can be bypassed through alternative paths available with Java9 and later. An attacker can leverage this vulnerability to cause remote code execution (RCE).\n\n**Note** this issue exists because the restrictions that were introduced to prevent exploitation of BDSA-2010-0001 (CVE-2010-1622) can be bypassed on platforms where Java9 and later are in use.\n\nThis vulnerability is listed as exploitable by the Cybersecurity \u0026 Infrastructure Security Agency in their [Known Exploited Vulnerabilities Catalog](https://www.cisa.gov/known-exploited-vulnerabilities-catalog)."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2022-22965 spring-webmvc 5.2.2.RELEASE: spring-boot-starter-web 2.2.2.RELEASE: org.springframework","partialFingerprints":{"ruleIdLocationHash/v1":"da1204820594991f4c50a928bb54a03d7ece1d9e8df601d9397180e4460507f3"}},{"message":{"text":"Spring Framework is vulnerable to cross-site request forgery (CSRF) attacks via CORS preflight requests which target Spring MVC or Spring WebFlux endpoints."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2020-5397 spring-webmvc 5.2.2.RELEASE: spring-boot-starter-web 2.2.2.RELEASE: org.springframework","partialFingerprints":{"ruleIdLocationHash/v1":"34e28f30972773caa5626690accd7dd2abb1e9c2642f94157666e9f44f5bb946"}},{"message":{"text":"Software systems using Spring Framework may be vulnerable to unsafe deserialization if they employ unsafe use of certain provided deserialization functionality. A remote attacker could potentially execute arbitrary code on a vulnerable endpoint by passing a maliciously crafted serialized object to that endpoint.\n\n**Note**: This issue only affects software that has been written to leverage specific deserialization functionality provided by the Spring Framework without sanitization."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"BDSA-2022-0847 spring-webmvc 5.2.2.RELEASE: spring-boot-starter-web 2.2.2.RELEASE: org.springframework","partialFingerprints":{"ruleIdLocationHash/v1":"bd65eb14c7da62391bb62a00296c129811b87b4e62843cf6373a49f42639c82c"}},{"message":{"text":"Spring Framework is vulnerable to a reflected file download (RFD) attack via improper input validation on filenames in a `Content-Disposition` header."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2020-5398 spring-webmvc 5.2.2.RELEASE: spring-boot-starter-web 2.2.2.RELEASE: org.springframework","partialFingerprints":{"ruleIdLocationHash/v1":"d9ca43fb86999bc5adb22c23d8d026846edc857b648344c673b7071df6ffa017"}},{"message":{"text":"Spring Framework is vulnerable to log file injection due to the insufficient validation of user input in an undisclosed component. An attacker could leverage this issue in order to add arbitrary entries to a log file which could impact both the integrity issues and performance issues.\n\n**Note**: a follow-up to this issue was disclosed as **CVE-2021-22060** (**BDSA-2021-3236**), with further fixed releases that protect against additional types of input and in more places of the Spring Framework codebase."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2021-22096 spring-webmvc 5.2.2.RELEASE: spring-boot-starter-web 2.2.2.RELEASE: org.springframework","partialFingerprints":{"ruleIdLocationHash/v1":"f4e753e2423be807c84bbfcf5b16940ea9496f6f81a3dc69a78ae77accee66eb"}},{"message":{"text":"Spring Framework is vulnerable to log file injection due to the insufficient validation of user input in an undisclosed component. An attacker could leverage this issue in order to add arbitrary entries to a log file which could impact both the integrity issues and performance issues.\n\n**Note**: the vendor states this issue exists as a follow up to CVE-2021-22096 (BDSA-2022-0011) that protects against additional types of input and in more places of the Spring Framework codebase."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2021-22060 spring-webmvc 5.2.2.RELEASE: spring-boot-starter-web 2.2.2.RELEASE: org.springframework","partialFingerprints":{"ruleIdLocationHash/v1":"9278fa568324c35a9a2c692b4dec3a41aab98843a64e2a4980d6df84f5e97489"}},{"message":{"text":"Spring-Framework's spring-expression is vulnerable to a denial-of-service (DoS) condition. This allows an attacker to use crafted input to cause the spring-expression process to crash due to an exception."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2022-22950 spring-webmvc 5.2.2.RELEASE: spring-boot-starter-web 2.2.2.RELEASE: org.springframework","partialFingerprints":{"ruleIdLocationHash/v1":"a4f175043aa446e8fbccc28ed64504d268c566458bab0f17e2248c359fcd9052"}},{"message":{"text":"Spring Framework is vulnerable to privilege escalation due to the creation of unsafe temporary directories by the WebFlux component. A local authenticated attacker could modify arbitrary files via maliciously crafted `multipart` requests. \n\nThis vulnerability does not affect Spring MVC applications, or applications that do not handle `multipart` file requests."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2021-22118 spring-webmvc 5.2.2.RELEASE: spring-boot-starter-web 2.2.2.RELEASE: org.springframework","partialFingerprints":{"ruleIdLocationHash/v1":"5e62cc07b5127f74df4736c36d31f48e01972b853e29ba1539c850a828fe2184"}},{"message":{"text":"Spring Framework is vulnerable to denial-of-service (DoS) due to the improper implementation of data binding functionality. A remote attacker could cause a vulnerable server to crash if that server provides file upload functionality."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2022-22970 spring-webmvc 5.2.2.RELEASE: spring-boot-starter-web 2.2.2.RELEASE: org.springframework","partialFingerprints":{"ruleIdLocationHash/v1":"1906870b6bc983a36bea6c14f75218a3cfabff89fd93adc561112557123cbfce"}},{"message":{"text":"Spring Framework is vulnerable to denial-of-service (DoS) due to the improper handling of the STOMP protocol for websockets. A remote authenticated attacker could leverage this issue in order to cause a server to crash."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2022-22971 spring-webmvc 5.2.2.RELEASE: spring-boot-starter-web 2.2.2.RELEASE: org.springframework","partialFingerprints":{"ruleIdLocationHash/v1":"61429bd9d213182feaf10a678951c65c20d26a5dee4f8156bc81d2daa288f0ac"}},{"message":{"text":"Spring Framework is vulnerable to denial-of-service (DoS) via specially crafted SpEL expressions. An attacker could exploit this issue by passing a crafted SpEL expression to the application which may result in a crash."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2023-20861 spring-webmvc 5.2.2.RELEASE: spring-boot-starter-web 2.2.2.RELEASE: org.springframework","partialFingerprints":{"ruleIdLocationHash/v1":"063d3343bec21122306dbfb44dfc0bd5532fcfe046c9f28a3ff7f7159fb00370"}},{"message":{"text":"Spring Framework is vulnerable to denial-of-service (DoS) via specially crafted SpEL expressions."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2023-20863 spring-webmvc 5.2.2.RELEASE: spring-boot-starter-web 2.2.2.RELEASE: org.springframework","partialFingerprints":{"ruleIdLocationHash/v1":"86c49aeace89db7b9a903bef61bb6999ebd35cbd7f68c53965be9343a665a6bd"}},{"message":{"text":"It was discovered that Spring Framework was vulnerable to RFD protection bypass. In some instances, depending on the browser used, an attacker could bypass the RFD attack protections via the use of a `jsessionid` path parameter."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2020-5421 spring-webmvc 5.2.2.RELEASE: spring-boot-starter-web 2.2.2.RELEASE: org.springframework","partialFingerprints":{"ruleIdLocationHash/v1":"8364a82ce1f7da2b526dfddb90d68b81469f6cdfa91efcc85ad25a95213b214e"}},{"message":{"text":"Spring Framework is vulnerable to data binding protection bypass due to improper validation of specified disallowed fields in `DataBinders`. This could be leveraged by an attacker to bypass the suggested workaround to **CVE-2022-22965** (**BDSA-2022-0858**) if it is improperly implemented."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2022-22968 spring-webmvc 5.2.2.RELEASE: spring-boot-starter-web 2.2.2.RELEASE: org.springframework","partialFingerprints":{"ruleIdLocationHash/v1":"18423a58e842a7dc737c4776a0069be44d3d5a12ebd97fca3c0aa440bd9c3eef"}},{"message":{"text":"Apache Log4j, as used in many popular services, is vulnerable to improperly allowing lightweight directory access protocol (LDAP) access via Java naming and directory interface (JNDI). A remote attacker able to supply the end application with specially crafted input that is then processed by the Log4j subcomponent could cause the execution of arbitrary Java code.\n\n**Note** \n\n- log4j-api packages by themselves do not contain the vulnerable functionality and are therefore unaffected. log4j-core packages and the upstream overarching source repository are affected.\n\n- A previously suggested mitigation of setting environment variable `LOG4J_FORMAT_MSG_NO_LOOKUPS=true` is not recommended. This mitigation has been proven inadequate against this vulnerability. \n\n- This vulnerability is partially fixed in [**2.15.0-rc2**](https://github.com/apache/logging-log4j2/releases/tag/log4j-2.15.0-rc2) by [this](https://github.com/apache/logging-log4j2/commit/001aaada7dab82c3c09cde5f8e14245dc9d8b454) commit and [this](https://github.com/apache/logging-log4j2/commit/bac0d8a35c7e354a0d3f706569116dff6c6bd658) commit. These fixes were deemed incomplete. See BDSA-2021-3779 (CVE-2021-45046) for more details.\n\nThis vulnerability is listed as exploitable by the Cybersecurity \u0026 Infrastructure Security Agency in their [Known Exploited Vulnerabilities Catalog](https://www.cisa.gov/known-exploited-vulnerabilities-catalog)."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"BDSA-2021-3731 spring-boot-starter 2.2.2.RELEASE: spring-boot-starter-test 2.2.2.RELEASE: org.springframework.boot","partialFingerprints":{"ruleIdLocationHash/v1":"7b9f7ae21d9b75f40b1441aed101d1ad1b9cc0a0ccc079adee3730f35717dad9"}},{"message":{"text":"Spring Framework is vulnerable to a flaw in the access restrictions to the security sensitive `ClassLoader` property. The restrictions can be bypassed through alternative paths available with Java9 and later. An attacker can leverage this vulnerability to cause remote code execution (RCE).\n\n**Note** this issue exists because the restrictions that were introduced to prevent exploitation of BDSA-2010-0001 (CVE-2010-1622) can be bypassed on platforms where Java9 and later are in use.\n\nThis vulnerability is listed as exploitable by the Cybersecurity \u0026 Infrastructure Security Agency in their [Known Exploited Vulnerabilities Catalog](https://www.cisa.gov/known-exploited-vulnerabilities-catalog)."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2022-22965 spring-boot-starter 2.2.2.RELEASE: spring-boot-starter-test 2.2.2.RELEASE: org.springframework.boot","partialFingerprints":{"ruleIdLocationHash/v1":"0fde4b38821033c02bea987538831bec3f963ff29dce02ac03ec0132fe388483"}},{"message":{"text":"Spring framework contains a security bypass vulnerability when `/**` is used as a pattern in Spring Security configuration with the `/cloudfoundryapplication/**` component. The potential for security bypass exists due to the mismatch in pattern matching between Spring Security and Cloud Foundry.\n\n**Note**: The vendor has stated in their [advisory](https://spring.io/security/cve-2023-20873) that this application is not vulnerable if any of the following is true:\n* The application is not deployed to Cloud Foundry.\n* You have disabled Cloud Foundry actuator endpoints with `management.cloudfoundry.enabled` set to `false`.\n* Your application does not have handler mappings that can handle requests to `/cloudfoundryapplication/**`."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2023-20873 spring-boot-starter 2.2.2.RELEASE: spring-boot-starter-test 2.2.2.RELEASE: org.springframework.boot","partialFingerprints":{"ruleIdLocationHash/v1":"3da62d7a1ab58149f6c8666fa0599f0153d29e968d24127ec30d0da1b6959d2f"}},{"message":{"text":"Apache log4j is vulnerable to a denial-of-service (DoS) when uncontrolled recursion occurs through a self-referencing lookup.  An attacker can trigger a DoS with malicious input data that generates a recursive lookup  and consequent application crash.\n\nSuccessful attacks require the attacker to have access to Thread Context Map (MDC) input, and for log4j configured with non-default pattern layout with a Context Lookup.\n\nOnly the log4j-core JAR file is impacted by this vulnerability. Applications using only the log4j-api JAR file without the log4j-core JAR file are not impacted.\n\nApache Log4j is the only Logging Services subproject affected by this vulnerability. Other projects like Log4net  are not impacted."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"BDSA-2021-3817 spring-boot-starter 2.2.2.RELEASE: spring-boot-starter-test 2.2.2.RELEASE: org.springframework.boot","partialFingerprints":{"ruleIdLocationHash/v1":"09fa7050de73c94edcffb32978a374f7cedc758719b9ac6cc884a523e92b104d"}},{"message":{"text":"Apache Log4j contains a remote code execution (RCE) vulnerability. This allows an attacker that has permissions to modify the logging configuration files to input a malicious JDBC Appender with a data source referencing a JDNI URI. This can then lead to RCE.\n\n**Note:** This vulnerability impacts log4j-core."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"BDSA-2021-3887 spring-boot-starter 2.2.2.RELEASE: spring-boot-starter-test 2.2.2.RELEASE: org.springframework.boot","partialFingerprints":{"ruleIdLocationHash/v1":"a07e5d7d3b34595bbb3610cff6d83948e7be371fd245855876cc5767c03bc46e"}},{"message":{"text":"Spring Boot is vulnerable to privilege escalation due to a race condition which occurs during the creation of a temporary directory. A local attacker could create their own temporary directory by racing against Spring Boot and supply their own configuration files which would allow for the full takeover of the application."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2022-27772 spring-boot-starter 2.2.2.RELEASE: spring-boot-starter-test 2.2.2.RELEASE: org.springframework.boot","partialFingerprints":{"ruleIdLocationHash/v1":"d8bb273d4b01f0cdca39ddf938ca4313a9ee180611719340ab03ebfc244ec7f3"}},{"message":{"text":"Spring Boot is vulnerable to denial-of-service (DoS) via the welcome page when used to serve an application behind a reverse proxy cache. This will cause users to continuously be served a 404 response, preventing standard application use.\n\n\n**Note:** Spring have provided the following guidance for vulnerable criteria. \nAn application is vulnerable if all of the following are true:\n\n- \"The application has Spring MVC auto-configuration enabled. This is the case by default if Spring MVC is on the classpath.\"\n- \"The application makes use of Spring Boot's welcome page support, either static or templated.\"\n- \"Your application is deployed behind a proxy which caches 404 responses.\"\n\nThe application is not vulnerable if any of the following are true:\n\n- \"Spring MVC auto-configuration is disabled. This is true if `WebMvcAutoConfiguration` is explicitly excluded, if Spring MVC is not on the classpath, or if `spring.main.web-application-type` is set to a value other than `SERVLET`.\"\n- \"The application does not use Spring Boot's welcome page support.\"\n- \"You do not have a proxy which caches 404 responses.\""},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2023-20883 spring-boot-starter 2.2.2.RELEASE: spring-boot-starter-test 2.2.2.RELEASE: org.springframework.boot","partialFingerprints":{"ruleIdLocationHash/v1":"36765d0057ae6554d15ba6c8205ee23a2e4f6466e7a3a657f019870387a1c46d"}},{"message":{"text":"Spring Boot is vulnerable to denial-of-service (DoS). An unauthenticated user could trigger the vulnerability by providing specially crafted HTTP requests to a web metrics endpoint."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2023-34055 spring-boot-starter 2.2.2.RELEASE: spring-boot-starter-test 2.2.2.RELEASE: org.springframework.boot","partialFingerprints":{"ruleIdLocationHash/v1":"64d2592b5a77bbc289ef9339bfdb2c1d606b0bf59d0a1077ab34ba32da92fdc4"}},{"message":{"text":"Pivotal Spring Framework through 5.3.16 suffers from a potential remote code execution (RCE) issue if used for Java deserialization of untrusted data. Depending on how the library is implemented within a product, this issue may or not occur, and authentication may be required. NOTE: the vendor's position is that untrusted data is not an intended use case. The product's behavior will not be changed because some users rely on deserialization of trusted data."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2016-1000027 spring-core 5.2.2.RELEASE: spring-boot-starter-test 2.2.2.RELEASE: org.springframework","partialFingerprints":{"ruleIdLocationHash/v1":"9f753d257a57f10b511e22a4b7e35669c84ed3fcf0f1465fb282af1c1ee9c86e"}},{"message":{"text":"Spring Framework is vulnerable to a flaw in the access restrictions to the security sensitive `ClassLoader` property. The restrictions can be bypassed through alternative paths available with Java9 and later. An attacker can leverage this vulnerability to cause remote code execution (RCE).\n\n**Note** this issue exists because the restrictions that were introduced to prevent exploitation of BDSA-2010-0001 (CVE-2010-1622) can be bypassed on platforms where Java9 and later are in use.\n\nThis vulnerability is listed as exploitable by the Cybersecurity \u0026 Infrastructure Security Agency in their [Known Exploited Vulnerabilities Catalog](https://www.cisa.gov/known-exploited-vulnerabilities-catalog)."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2022-22965 spring-core 5.2.2.RELEASE: spring-boot-starter-test 2.2.2.RELEASE: org.springframework","partialFingerprints":{"ruleIdLocationHash/v1":"b578b71cbc003853cea9bd018d4a427a08bfa84fb24f6ac8f548971d954fbdce"}},{"message":{"text":"Spring Framework is vulnerable to cross-site request forgery (CSRF) attacks via CORS preflight requests which target Spring MVC or Spring WebFlux endpoints."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2020-5397 spring-core 5.2.2.RELEASE: spring-boot-starter-test 2.2.2.RELEASE: org.springframework","partialFingerprints":{"ruleIdLocationHash/v1":"f909d995c033b76bfb323c5d6cea461db06eee15c9f96c6dea9f9cf890dfb001"}},{"message":{"text":"Software systems using Spring Framework may be vulnerable to unsafe deserialization if they employ unsafe use of certain provided deserialization functionality. A remote attacker could potentially execute arbitrary code on a vulnerable endpoint by passing a maliciously crafted serialized object to that endpoint.\n\n**Note**: This issue only affects software that has been written to leverage specific deserialization functionality provided by the Spring Framework without sanitization."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"BDSA-2022-0847 spring-core 5.2.2.RELEASE: spring-boot-starter-test 2.2.2.RELEASE: org.springframework","partialFingerprints":{"ruleIdLocationHash/v1":"4a73a97abff3b09bef851ff0652bddc0c6efacbfff4d60db55960a1783d31903"}},{"message":{"text":"Spring Framework is vulnerable to a reflected file download (RFD) attack via improper input validation on filenames in a `Content-Disposition` header."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2020-5398 spring-core 5.2.2.RELEASE: spring-boot-starter-test 2.2.2.RELEASE: org.springframework","partialFingerprints":{"ruleIdLocationHash/v1":"b03300cfa5a3f2f65fbf54cb768752a8a8866d84ef787840f93d187abe9f9419"}},{"message":{"text":"Spring Framework is vulnerable to log file injection due to the insufficient validation of user input in an undisclosed component. An attacker could leverage this issue in order to add arbitrary entries to a log file which could impact both the integrity issues and performance issues.\n\n**Note**: a follow-up to this issue was disclosed as **CVE-2021-22060** (**BDSA-2021-3236**), with further fixed releases that protect against additional types of input and in more places of the Spring Framework codebase."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2021-22096 spring-core 5.2.2.RELEASE: spring-boot-starter-test 2.2.2.RELEASE: org.springframework","partialFingerprints":{"ruleIdLocationHash/v1":"62d9a29496c2a886452158e3a8fe112703697ddd4ce48b173152bc0e18da1a86"}},{"message":{"text":"Spring Framework is vulnerable to log file injection due to the insufficient validation of user input in an undisclosed component. An attacker could leverage this issue in order to add arbitrary entries to a log file which could impact both the integrity issues and performance issues.\n\n**Note**: the vendor states this issue exists as a follow up to CVE-2021-22096 (BDSA-2022-0011) that protects against additional types of input and in more places of the Spring Framework codebase."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2021-22060 spring-core 5.2.2.RELEASE: spring-boot-starter-test 2.2.2.RELEASE: org.springframework","partialFingerprints":{"ruleIdLocationHash/v1":"e53ecf12b7a835b2970fc2bc898d8bc9280156abdc8bb2081d9378136b1f4f57"}},{"message":{"text":"Spring-Framework's spring-expression is vulnerable to a denial-of-service (DoS) condition. This allows an attacker to use crafted input to cause the spring-expression process to crash due to an exception."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2022-22950 spring-core 5.2.2.RELEASE: spring-boot-starter-test 2.2.2.RELEASE: org.springframework","partialFingerprints":{"ruleIdLocationHash/v1":"a769caae4bc136182732f4c2decaf7258e02239722585a2f8ffd2347a40e297e"}},{"message":{"text":"Spring Framework is vulnerable to privilege escalation due to the creation of unsafe temporary directories by the WebFlux component. A local authenticated attacker could modify arbitrary files via maliciously crafted `multipart` requests. \n\nThis vulnerability does not affect Spring MVC applications, or applications that do not handle `multipart` file requests."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2021-22118 spring-core 5.2.2.RELEASE: spring-boot-starter-test 2.2.2.RELEASE: org.springframework","partialFingerprints":{"ruleIdLocationHash/v1":"560bdff2b143c23defa641876c65f2ec5b69457cc9cb9538a0679f0ad0ed9f5d"}},{"message":{"text":"Spring Framework is vulnerable to denial-of-service (DoS) due to the improper implementation of data binding functionality. A remote attacker could cause a vulnerable server to crash if that server provides file upload functionality."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2022-22970 spring-core 5.2.2.RELEASE: spring-boot-starter-test 2.2.2.RELEASE: org.springframework","partialFingerprints":{"ruleIdLocationHash/v1":"81832c1aa33a4b34f83d2f154f21a48eaf6fec24ca65c9732815693afe08f1c9"}},{"message":{"text":"Spring Framework is vulnerable to denial-of-service (DoS) due to the improper handling of the STOMP protocol for websockets. A remote authenticated attacker could leverage this issue in order to cause a server to crash."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2022-22971 spring-core 5.2.2.RELEASE: spring-boot-starter-test 2.2.2.RELEASE: org.springframework","partialFingerprints":{"ruleIdLocationHash/v1":"d1c19fa450ab320c2b836091da963db5d924d9370ecf02f80977fade87ccac08"}},{"message":{"text":"Spring Framework is vulnerable to denial-of-service (DoS) via specially crafted SpEL expressions. An attacker could exploit this issue by passing a crafted SpEL expression to the application which may result in a crash."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2023-20861 spring-core 5.2.2.RELEASE: spring-boot-starter-test 2.2.2.RELEASE: org.springframework","partialFingerprints":{"ruleIdLocationHash/v1":"eeef17b2a3b4098d91cd0223be2b2b925862df99da8abe904f5cca6ac2fcd523"}},{"message":{"text":"Spring Framework is vulnerable to denial-of-service (DoS) via specially crafted SpEL expressions."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2023-20863 spring-core 5.2.2.RELEASE: spring-boot-starter-test 2.2.2.RELEASE: org.springframework","partialFingerprints":{"ruleIdLocationHash/v1":"793347c2f072ef90a2db49e4126b778a0901f6e3566d9f7649a1cea00b166fd8"}},{"message":{"text":"It was discovered that Spring Framework was vulnerable to RFD protection bypass. In some instances, depending on the browser used, an attacker could bypass the RFD attack protections via the use of a `jsessionid` path parameter."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2020-5421 spring-core 5.2.2.RELEASE: spring-boot-starter-test 2.2.2.RELEASE: org.springframework","partialFingerprints":{"ruleIdLocationHash/v1":"be49874cb5cf40eafb40a799215f321f61695124d414c2fac245460cf541a162"}},{"message":{"text":"Spring Framework is vulnerable to data binding protection bypass due to improper validation of specified disallowed fields in `DataBinders`. This could be leveraged by an attacker to bypass the suggested workaround to **CVE-2022-22965** (**BDSA-2022-0858**) if it is improperly implemented."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2022-22968 spring-core 5.2.2.RELEASE: spring-boot-starter-test 2.2.2.RELEASE: org.springframework","partialFingerprints":{"ruleIdLocationHash/v1":"5f14d4e943ba2f73f1c20bfbabed4f1ed86ca98c2786e7b0204ebf328807753c"}},{"message":{"text":"Spring Boot is vulnerable to privilege escalation due to a race condition which occurs during the creation of a temporary directory. A local attacker could create their own temporary directory by racing against Spring Boot and supply their own configuration files which would allow for the full takeover of the application."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"BDSA-2022-0856 spring-boot-devtools 2.2.2.RELEASE: org.springframework.boot","partialFingerprints":{"ruleIdLocationHash/v1":"aa691c7af33ea6325e2ac8f242ec7bad2bdd06b1e71e424a2f09c7650dfec15a"}},{"message":{"text":"Apache Groovy is vulnerable to privilege escalation and information exposure due to inappropriate use of an insecure JDK method. A local attacker could exploit this vulnerability by supplying a system with maliciously crafted input."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2020-17521 groovy 2.5.8: rest-assured 3.3.0: org.codehaus.groovy","partialFingerprints":{"ruleIdLocationHash/v1":"3b981f7aa159eb27843e81f394e95e3d8227ad69b970d4320f76329dde84d053"}},{"message":{"text":"Undertow is vulnerable to a remote file inclusion vulnerability. An attacker could potentially exploit this to cause remote code execution (RCE)."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2020-1745 undertow-core 2.0.28.Final: spring-boot-starter-undertow 2.2.2.RELEASE: io.undertow","partialFingerprints":{"ruleIdLocationHash/v1":"f62cb74d6089453dfea09f3eab7dc75251c732339b7d491aef4faab37e679603"}},{"message":{"text":"It was found that a previously known HTTP request smuggling issue (`CVE-2017-2666`) in Undertow was not fully fixed. It is still possible to abuse this vulnerability by including invalid characters in HTTP/1.x and [HTTP/2](https://en.wikipedia.org/wiki/HTTP/2) requests. This flaw can result in cache-poisoning, cross-site scripting (XSS) attacks and information disclosure."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2020-10687 undertow-core 2.0.28.Final: spring-boot-starter-undertow 2.2.2.RELEASE: io.undertow","partialFingerprints":{"ruleIdLocationHash/v1":"08a1a37dc7f937c653f365dbf6d9548857ba81b624d961c9c2199d9f3be71599"}},{"message":{"text":"A flaw was found in Undertow. For an AJP 400 response, EAP 7 is improperly sending two response packets, and those packets have the reuse flag set even though JBoss EAP closes the connection. A failure occurs when the connection is reused after a 400 by CPING since it reads in the second SEND_HEADERS response packet instead of a CPONG."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2022-1319 undertow-core 2.0.28.Final: spring-boot-starter-undertow 2.2.2.RELEASE: io.undertow","partialFingerprints":{"ruleIdLocationHash/v1":"1a56be95b225e2c42d0296675c40156ebc0234c139d99cd54f6041ad5e76e191"}},{"message":{"text":"Undertow is vulnerable to HTTP request smuggling due to a possible regression in the fix for `CVE-2020-10687` (`BDSA-2020-2102`). This flaw can result in cache-poisoning, cross-site scripting (XSS) attacks and information disclosure."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2021-20220 undertow-core 2.0.28.Final: spring-boot-starter-undertow 2.2.2.RELEASE: io.undertow","partialFingerprints":{"ruleIdLocationHash/v1":"213fb260bf990481ee5b74332b5250d6a48c309daf7555cff10e54549dc63186"}},{"message":{"text":"Undertow contains a flaw with how certain calls are made over HTTP2. Invocation of an EJB can fail on the client side which will result in the invocation-timeout being hit. Successfully exploiting this can allow an attacker to trigger a denial-of-service (DoS)."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2021-3859 undertow-core 2.0.28.Final: spring-boot-starter-undertow 2.2.2.RELEASE: io.undertow","partialFingerprints":{"ruleIdLocationHash/v1":"6bd58462dfd4c6c8a5ddf4da8cf2166655a053326a2067e44730da072a36b85a"}},{"message":{"text":"Undertow is vulnerable to denial-of-service (DoS) due to the improper handling of certain characters. An attacker could exploit this vulnerability via a maliciously crafted request in order to trigger a denial-of-service (DoS) condition."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2020-27782 undertow-core 2.0.28.Final: spring-boot-starter-undertow 2.2.2.RELEASE: io.undertow","partialFingerprints":{"ruleIdLocationHash/v1":"92fd7533cd19918d6c3f1bb6fe3fd4dc66a41370c2867c9a5b55fa4531719647"}},{"message":{"text":"Undertow is vulnerable to denial-of-service (DoS) due to the improper management of system memory resources. A remote attacker could cause a vulnerable server to crash by sending maliciously crafted web requests to that server."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2020-10705 undertow-core 2.0.28.Final: spring-boot-starter-undertow 2.2.2.RELEASE: io.undertow","partialFingerprints":{"ruleIdLocationHash/v1":"0f16753d735fda2f127eefa686f67dd9e05255c355397dab0d60561ae81d8b09"}},{"message":{"text":"undertow is vulnerable to denial-of-service (DoS) due to improper processing of incoming WebSocket PONG messages. An attacker could exploit this vulnerability by supplying a system with maliciously crafted requests."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2021-3690 undertow-core 2.0.28.Final: spring-boot-starter-undertow 2.2.2.RELEASE: io.undertow","partialFingerprints":{"ruleIdLocationHash/v1":"c16412c57317a741183add9884cbee180a1c1d45acf58d394dcd0ce0b81047a8"}},{"message":{"text":"Undertow contains a flaw with its `HTTP2SourceChannel` implementation where in some circumstances it fails to write a final frame. Successfully exploiting this could allow an attacker to cause a denial-of-service (DoS) condition."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2021-3597 undertow-core 2.0.28.Final: spring-boot-starter-undertow 2.2.2.RELEASE: io.undertow","partialFingerprints":{"ruleIdLocationHash/v1":"2c6cc0bd86952c43a8450ccffc5b6fd30e8a7280549efcf94dfd52a1fa2b36bb"}},{"message":{"text":"Undertow is vulnerable to denial-of-service (DoS) due to the flawed implementation of flow controls during HTTP/2 exchanges. A remote attacker could impact the performance of a vulnerable server, or potentially cause it to crash, by sending maliciously crafted network traffic to that server.\n\n**Note:** It has been found that this vulnerability is an incomplete fix and a new CVE has been assigned **CVE-2022-1259**. This has been addressed by **BDSA-2022-2100**."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2021-3629 undertow-core 2.0.28.Final: spring-boot-starter-undertow 2.2.2.RELEASE: io.undertow","partialFingerprints":{"ruleIdLocationHash/v1":"824e663f5d2f8533c959d7764bc33d13bec3a9304081246868204184cc1173d1"}},{"message":{"text":"Undertow is vulnerable to denial-of-service (DoS) due to a buffer overflow in the HTTPS functionality. A remote attacker could crash a victim's instance of the application by connecting to a HTTP2 port."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2019-14888 undertow-core 2.0.28.Final: spring-boot-starter-undertow 2.2.2.RELEASE: io.undertow","partialFingerprints":{"ruleIdLocationHash/v1":"f366838d0bc5a5629fb1a81bf81afe51da247cd215b1f7d48952d069b8b81695"}},{"message":{"text":"Undertow contains a flaw in its handling of AJP requests that exceed the maximum header size. This results in mod_proxy_cluster marking backend JBoss EAP instances as an error workers. A remote unauthenticated attacker could leverage this to cause a denial-of-service (DoS)."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2022-2053 undertow-core 2.0.28.Final: spring-boot-starter-undertow 2.2.2.RELEASE: io.undertow","partialFingerprints":{"ruleIdLocationHash/v1":"4375202abf3954497d1bc8c3e2f82b6d0a71ab7fa97117adedcca7e07c5852de"}},{"message":{"text":"Undertow is vulnerable to denial-of-service (DoS) due to the flawed implementation of flow controls during HTTP/2 exchanges. A remote attacker could impact the performance of a vulnerable server, or potentially cause it to crash, by sending maliciously crafted network traffic to that server.\n\n**Note:** This vulnerability is a result of an incomplete fix for **CVE-2021-3629** (**BDSA-2021-3463**)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2022-1259 undertow-core 2.0.28.Final: spring-boot-starter-undertow 2.2.2.RELEASE: io.undertow","partialFingerprints":{"ruleIdLocationHash/v1":"12c9bc714845b71b5230d7f23b58430b917aaecfc5bb2ac9545e46a3cb52f921"}},{"message":{"text":"A flaw was found in Undertow in versions before 2.1.1.Final, regarding the processing of invalid HTTP requests with large chunk sizes. This flaw allows an attacker to take advantage of HTTP request smuggling."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2020-10719 undertow-core 2.0.28.Final: spring-boot-starter-undertow 2.2.2.RELEASE: io.undertow","partialFingerprints":{"ruleIdLocationHash/v1":"9a5ea83b0dbef7b36a04a5120e98a548d5fb13da877a3da6196acfcb6a0a2694"}},{"message":{"text":"Undertow contains a server identity spoofing vulnerability. This issue exists due to the Undertow client not checking the server identity presented by the server certificate in HTTPS connections, leading it to accept certificates with arbitrary subjects."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"BDSA-2022-4041 undertow-core 2.0.28.Final: spring-boot-starter-undertow 2.2.2.RELEASE: io.undertow","partialFingerprints":{"ruleIdLocationHash/v1":"719d41ec23d7560213a4cc5b1e9ea38a326937c75f451144fee876a61619caa5"}},{"message":{"text":"Undertow is vulnerable to an infinite loop condition. A remote unauthenticated attacker could exploit this vulnerability in order to cause a denial-of-service (DoS)."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2023-1108 undertow-core 2.0.28.Final: spring-boot-starter-undertow 2.2.2.RELEASE: io.undertow","partialFingerprints":{"ruleIdLocationHash/v1":"c5aeb627f420d55498f2945c1418be56b153808886bf08849f9816cd33918ded"}},{"message":{"text":"Undertow contains a denial-of-service (DoS) vulnerability. An unauthenticated attacker could exploit this by manipulating Servlet annotations to exhaust system resources and cause a system crash."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2023-3223 undertow-core 2.0.28.Final: spring-boot-starter-undertow 2.2.2.RELEASE: io.undertow","partialFingerprints":{"ruleIdLocationHash/v1":"0d743d5ef002783e8fd25775dba28c02c1263641c856b28c78cdfb3363cf5880"}},{"message":{"text":"Undertow is vulnerable to the smuggling or spoofing of cookies as a result of insufficient validation within the Undertow cookie parsing functionality.\n\nAn attacker could submit crafted requests to Undertow that include cookies with improper quote formatting in order to bypass existing cookie validation checks."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"BDSA-2024-0321 undertow-core 2.0.28.Final: spring-boot-starter-undertow 2.2.2.RELEASE: io.undertow","partialFingerprints":{"ruleIdLocationHash/v1":"316768092a6e6fc3e568b65655e82e24691ef430a781c084723f68aadd5a56bd"}},{"message":{"text":"Undertow contains a path traversal vulnerability. An attacker could exploit this issue by making a request with a crafted, appended sequence to a JBoss EAP application. This may potentially result in unauthorized access to restricted files/directories and lead to the loss of sensitive information."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"BDSA-2024-0322 undertow-core 2.0.28.Final: spring-boot-starter-undertow 2.2.2.RELEASE: io.undertow","partialFingerprints":{"ruleIdLocationHash/v1":"414dcecbb45d50db7a145a129e8347dcb05667b5b4a974b9e27f3c828177b0bf"}},{"message":{"text":"Undertow is vulnerable to improperly normalizing servlet paths. A remote attacker may be able to leverage this to bypass specific URL-based security checks."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2020-1757 undertow-core 2.0.28.Final: spring-boot-starter-undertow 2.2.2.RELEASE: io.undertow","partialFingerprints":{"ruleIdLocationHash/v1":"c24c3322314eee9f93569d18c4a3689a43c49fbaf0aa35d5f44dabf22c69e3a8"}},{"message":{"text":"Undertow contains a denial-of-service (DoS) vulnerability. An authenticated attacker can exploit this via EJB invocations to exhaust system resources and cause a system crash."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2022-2764 undertow-core 2.0.28.Final: spring-boot-starter-undertow 2.2.2.RELEASE: io.undertow","partialFingerprints":{"ruleIdLocationHash/v1":"ae47e9ef0c9644b18d39a1d121996470cdfc4993c8e37b6398468555191b59ad"}},{"message":{"text":"Guava is vulnerable to authorization bypass due to the use of an insecure temporary directory for certain file creation operations. A local attacker that has access to the default Java temporary directory could access files created by the `FileBackedOutputStream` class, even when they are not intended to be able to do so."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2023-2976 guava 20.0: wiremock 2.8.0: com.google.guava","partialFingerprints":{"ruleIdLocationHash/v1":"60846cb99356b7738bf945d9086f95e612199de6a6fa60c6302647c0ead1a4ce"}},{"message":{"text":"Servers that depend on the Guava libraries are vulnerable to denial-of-service (DoS) conditions because certain classes allocate memory without proper checks. Potential attackers can leverage this flaw to crash the software repeatedly rendering it unusable."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2018-10237 guava 20.0: wiremock 2.8.0: com.google.guava","partialFingerprints":{"ruleIdLocationHash/v1":"93236b7a0c425bcd617ed969ba53fe699f1929acf92077b8d8c63f3cde15196c"}},{"message":{"text":"Guava creates temporary files and directories with insecure default permissions. A local attacker on the machine could learn the contents of sensitive temporary files.\n\n**Note:** It was determined that the initial patch in version [**30.0**](https://github.com/google/guava/releases/tag/v30.0) by [this](https://github.com/google/guava/commit/fec0dbc4634006a6162cfd4d0d09c962073ddf40) commit was inadequate to fully remove the problem of insecure temporary files from Guava. It only marked a function as deprecated, but the functionality still persisted. A new solution has been released."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2020-8908 guava 20.0: wiremock 2.8.0: com.google.guava","partialFingerprints":{"ruleIdLocationHash/v1":"2ebfe455b6cbff8ca6f3e62a5b6057894bdf463e9673ee81fbb482af8d0f659b"}},{"message":{"text":"Jetty is vulnerable to temporary directory Hijacking via a race condition. If code is executed from this temporary directory it can lead to local privilege escalation."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2020-27216 jetty-io 9.4.24.v20191120: wiremock 2.8.0: org.eclipse.jetty","partialFingerprints":{"ruleIdLocationHash/v1":"6701dd5820272686126c0870b5c1db61a4ad299767cc9d465e74084696572e5b"}},{"message":{"text":"The HTTP/2 protocol contains a flaw related to the stream multiplexing feature that can allow for excessive resource consumption on servers operating implementations of the HTTP/2 protocol. \n\nThe HTTP/2 protocol allows clients to signal to a server to cancel a previously opened stream by sending an `RST_STREAM` frame. Attackers can abuse this stream canceling ability by opening a large number of streams at once immediately followed by `RST_STREAM` frames. In most HTTP/2 implementations this bypasses concurrent open stream limits and causes servers to spend processing time first handling request frames and then performing stream tear downs. For the server, these operations can pile up whereas the attacker client paid minuscule bandwidth and processing costs.\n\n[Amazon](https://aws.amazon.com/security/security-bulletins/AWS-2023-011/), [Cloudflare](https://blog.cloudflare.com/technical-breakdown-http2-rapid-reset-ddos-attack/) and [Google](https://cloud.google.com/blog/products/identity-security/google-cloud-mitigated-largest-ddos-attack-peaking-above-398-million-rps/) have reported that this vulnerability has been exploited in the wild from August to October 2023.\n\nThis vulnerability is listed as exploitable by the Cybersecurity \u0026 Infrastructure Security Agency in their [Known Exploited Vulnerabilities Catalog](https://www.cisa.gov/known-exploited-vulnerabilities-catalog)."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2023-44487 jetty-io 9.4.24.v20191120: wiremock 2.8.0: org.eclipse.jetty","partialFingerprints":{"ruleIdLocationHash/v1":"74718cc27a09bad9c90dc6e8946b3b061a7ae2bedce9e5bc749fd9a6041dd2aa"}},{"message":{"text":"Jetty is vulnerable to denial-of-service (DoS) due to the use of an exponential algorithm that can have excessive resource requirements. A remote attacker could cause a vulnerable server to become unresponsive by sending maliciously crafted HTTP requests to that server."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2020-27223 jetty-io 9.4.24.v20191120: wiremock 2.8.0: org.eclipse.jetty","partialFingerprints":{"ruleIdLocationHash/v1":"a6e6fb141eb27075bdf42ec70b2d355ef3130cb040b167fe42a187ac8a504d4a"}},{"message":{"text":"Eclipse Jetty is vulnerable to Denial-of-Service (DoS) via invalid TLS frames. An attacker could exploit this by sending a TLS frame with a size in excess of 17408 resulting in excessive resource consumption leading to a DoS condition."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2021-28165 jetty-io 9.4.24.v20191120: wiremock 2.8.0: org.eclipse.jetty","partialFingerprints":{"ruleIdLocationHash/v1":"f7f1d9e96c416cb8511564e9c5d9f948b90ea6b0b6ded1f0ef41e8b7af797d0a"}},{"message":{"text":"Jetty is vulnerable to information disclosure due to improper requested path verification. This allows crafted requests to access protected resources of the web application which, depending on the implementation, might reveal sensitive information."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2021-28169 jetty-io 9.4.24.v20191120: wiremock 2.8.0: org.eclipse.jetty","partialFingerprints":{"ruleIdLocationHash/v1":"79b6b775ed89aa17f2e63b4ca9d4f3193b5884eec51eb26eda83b84222c4e5ac"}},{"message":{"text":"Eclipse Jetty is vulnerable to a denial-of-service (DoS) issue due to presence of a user input validation flaw in the HTTP/2 HPACK functionality that can lead to an integer overflow and allow HPACK headers to exceed their expected size limits.\n\nAn attacker could submit crafted HTTP messages that trigger the integer overflow flaw and cause large buffers to be allocated on the server, consuming memory resources in a manner that could cause the server to run out of memory."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2023-36478 jetty-io 9.4.24.v20191120: wiremock 2.8.0: org.eclipse.jetty","partialFingerprints":{"ruleIdLocationHash/v1":"24c54ffaa81065fe59f73ff6ca518404a626d5409c08fd996b37b506a19b90c8"}},{"message":{"text":"Eclipse Jetty does not correctly handle invalid HTTP/2 requests. An attacker could exploit this flaw to exhaust the HTTP/2 flow control window or TCP congest the connection. This will cause the relevant selector threads to be blocked and it will lead to a denial-of-service (DoS)."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2022-2048 jetty-io 9.4.24.v20191120: wiremock 2.8.0: org.eclipse.jetty","partialFingerprints":{"ruleIdLocationHash/v1":"2658d22a5801706c201263b100401b9a1fe3ec9e62cd210f15b92c8c6240dd5b"}},{"message":{"text":"Eclipse Jetty contains a vulnerability that allows a remote attacker to inject data into other client's requests. This vulnerability only exists when GZIP request body inflation is enabled, and requests from different clients are multiplexed onto a single connection."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2020-27218 jetty-io 9.4.24.v20191120: wiremock 2.8.0: org.eclipse.jetty","partialFingerprints":{"ruleIdLocationHash/v1":"b67d0d120df18d86b2f2cb3dd5d7df4401ecc9660c34ac04e1b2d074ddad0588"}},{"message":{"text":"Eclipse Jetty contains a vulnerability in its multipart request parsing mechanism that can lead to an out-of-memory error due to insufficient limiting measures. An attacker can exploit this flaw by supplying a request containing a large multipart without a filename in order to cause a denial-of-service (DoS)."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2023-26048 jetty-io 9.4.24.v20191120: wiremock 2.8.0: org.eclipse.jetty","partialFingerprints":{"ruleIdLocationHash/v1":"b27b9c279210464ed84092ffba25aa899e510c126b505aa5cb37d87578834f20"}},{"message":{"text":"Eclipse Jetty does not properly parse quoted values in cookies. This could allow an attacker to smuggle cookies within other cookies into the application. The attacker can also tamper with the cookie parsing mechanism and cause other unintended behavior."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2023-26049 jetty-io 9.4.24.v20191120: wiremock 2.8.0: org.eclipse.jetty","partialFingerprints":{"ruleIdLocationHash/v1":"a9fd8d54834ce1ae22b267b75d7874ffce77187577d8487424898c42483d8197"}},{"message":{"text":"Eclipse Jetty is vulnerable to HTTP request smuggling due to the improper parsing of HTTP requests. An attacker could exploit this vulnerability by sending maliciously crafted HTTP requests to a vulnerable endpoint with multiple requests included inside the body by manipulating the `Content-Length` of the request. The smuggling of HTTP requests may allow for the bypass of security tools such as web application firewalls (WAFs) and intrusion detection systems (IDSs)."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2023-40167 jetty-io 9.4.24.v20191120: wiremock 2.8.0: org.eclipse.jetty","partialFingerprints":{"ruleIdLocationHash/v1":"6c5619d7ee9f4e06e89f75afaac86a0dca322b391ed907f30e9b8179267778b5"}},{"message":{"text":"Eclipse Jetty contains an improper neutralization of quoting syntax issue within the CGI servlet. This could allow an authenticated attacker to send a request to the CGI Servlet for a binary with a space in its name in order to manipulate the command structure and execute incorrect commands."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2023-36479 jetty-io 9.4.24.v20191120: wiremock 2.8.0: org.eclipse.jetty","partialFingerprints":{"ruleIdLocationHash/v1":"d65882bc6387d4c9334ebb0d096e3049a874e6e1f238db7d32726c95ef228541"}},{"message":{"text":"Eclipse Jetty contains an improper authentication vulnerability. This could allow an authenticated attacker to bypass authentication after it has been rejected or revoked by the `LoginService` and make a request as if authenticated.\n\n**Note:** The vendor has stated that this issue impacts usages of the `jetty-openid` which have configured a nested `LoginService` and where that `LoginService` is capable of rejecting previously authenticated users."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2023-41900 jetty-io 9.4.24.v20191120: wiremock 2.8.0: org.eclipse.jetty","partialFingerprints":{"ruleIdLocationHash/v1":"9088fd428aa02c2af188cbfa2a46fff84b16e3aa868cc0244fc2accba7aaf85f"}},{"message":{"text":"Eclipse Jetty is vulnerable to insufficient session expiry. This may result in sessions used on a shared computer persisting for longer than intended."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2021-34428 jetty-io 9.4.24.v20191120: wiremock 2.8.0: org.eclipse.jetty","partialFingerprints":{"ruleIdLocationHash/v1":"554a63d7a74cb9c5e9c7d07138e7b145b3c117aa5cb25e4b4d6b1d147b0dca75"}},{"message":{"text":"Eclipse Jetty does not correctly handle invalid authority segments of HTTP URIs. An authenticated attacker could exploit this flaw by passing an invalid URI that contains an improper authority with no host so that it is interpreted as one with a host."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2022-2047 jetty-io 9.4.24.v20191120: wiremock 2.8.0: org.eclipse.jetty","partialFingerprints":{"ruleIdLocationHash/v1":"e18a22f4709a0ad22d87df6981c5d4056f09928286d5c37813393c98f4e647ef"}},{"message":{"text":"Pivotal Spring Framework through 5.3.16 suffers from a potential remote code execution (RCE) issue if used for Java deserialization of untrusted data. Depending on how the library is implemented within a product, this issue may or not occur, and authentication may be required. NOTE: the vendor's position is that untrusted data is not an intended use case. The product's behavior will not be changed because some users rely on deserialization of trusted data."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2016-1000027 spring-beans 5.2.2.RELEASE: spring-security-test 4.1.3.RELEASE: org.springframework","partialFingerprints":{"ruleIdLocationHash/v1":"8597cdf0449063c79778723ab597c74b1ad84db5cb64235fd521e26cfe70778d"}},{"message":{"text":"Spring Framework is vulnerable to a flaw in the access restrictions to the security sensitive `ClassLoader` property. The restrictions can be bypassed through alternative paths available with Java9 and later. An attacker can leverage this vulnerability to cause remote code execution (RCE).\n\n**Note** this issue exists because the restrictions that were introduced to prevent exploitation of BDSA-2010-0001 (CVE-2010-1622) can be bypassed on platforms where Java9 and later are in use.\n\nThis vulnerability is listed as exploitable by the Cybersecurity \u0026 Infrastructure Security Agency in their [Known Exploited Vulnerabilities Catalog](https://www.cisa.gov/known-exploited-vulnerabilities-catalog)."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2022-22965 spring-beans 5.2.2.RELEASE: spring-security-test 4.1.3.RELEASE: org.springframework","partialFingerprints":{"ruleIdLocationHash/v1":"8fa3b74baefc0acf92a0c3c2d5cd30bfb12a2e3ae8640d772e195593850e7f8f"}},{"message":{"text":"Spring Framework is vulnerable to cross-site request forgery (CSRF) attacks via CORS preflight requests which target Spring MVC or Spring WebFlux endpoints."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2020-5397 spring-beans 5.2.2.RELEASE: spring-security-test 4.1.3.RELEASE: org.springframework","partialFingerprints":{"ruleIdLocationHash/v1":"243d3d68f1325cc5350b9a3ffebfdbfaafced0995945750d91f35a3f47a3ddff"}},{"message":{"text":"Software systems using Spring Framework may be vulnerable to unsafe deserialization if they employ unsafe use of certain provided deserialization functionality. A remote attacker could potentially execute arbitrary code on a vulnerable endpoint by passing a maliciously crafted serialized object to that endpoint.\n\n**Note**: This issue only affects software that has been written to leverage specific deserialization functionality provided by the Spring Framework without sanitization."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"BDSA-2022-0847 spring-beans 5.2.2.RELEASE: spring-security-test 4.1.3.RELEASE: org.springframework","partialFingerprints":{"ruleIdLocationHash/v1":"399d75e4b1976af13f8e6f32e7f30cc1ca7290889daaecaa94fefe0f589a6e35"}},{"message":{"text":"Spring Framework is vulnerable to a reflected file download (RFD) attack via improper input validation on filenames in a `Content-Disposition` header."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2020-5398 spring-beans 5.2.2.RELEASE: spring-security-test 4.1.3.RELEASE: org.springframework","partialFingerprints":{"ruleIdLocationHash/v1":"190107382f173f2e634740799ddc85492cbd1ccbc45996113b874a6d83c82240"}},{"message":{"text":"Spring Framework is vulnerable to log file injection due to the insufficient validation of user input in an undisclosed component. An attacker could leverage this issue in order to add arbitrary entries to a log file which could impact both the integrity issues and performance issues.\n\n**Note**: a follow-up to this issue was disclosed as **CVE-2021-22060** (**BDSA-2021-3236**), with further fixed releases that protect against additional types of input and in more places of the Spring Framework codebase."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2021-22096 spring-beans 5.2.2.RELEASE: spring-security-test 4.1.3.RELEASE: org.springframework","partialFingerprints":{"ruleIdLocationHash/v1":"85813955e8819e6d9546e4de99747805756d4e54bd270e42f09c6cd3732dba3c"}},{"message":{"text":"Spring Framework is vulnerable to log file injection due to the insufficient validation of user input in an undisclosed component. An attacker could leverage this issue in order to add arbitrary entries to a log file which could impact both the integrity issues and performance issues.\n\n**Note**: the vendor states this issue exists as a follow up to CVE-2021-22096 (BDSA-2022-0011) that protects against additional types of input and in more places of the Spring Framework codebase."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2021-22060 spring-beans 5.2.2.RELEASE: spring-security-test 4.1.3.RELEASE: org.springframework","partialFingerprints":{"ruleIdLocationHash/v1":"7a1d4db9c135315c608726403a1b3b7ab7e589eebd7bb7b79d41e9a68f2247a0"}},{"message":{"text":"Spring-Framework's spring-expression is vulnerable to a denial-of-service (DoS) condition. This allows an attacker to use crafted input to cause the spring-expression process to crash due to an exception."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2022-22950 spring-beans 5.2.2.RELEASE: spring-security-test 4.1.3.RELEASE: org.springframework","partialFingerprints":{"ruleIdLocationHash/v1":"6a48ab672aa68ead45260dbbcbf378fc4ff80a333363dbeed206b8959731aef8"}},{"message":{"text":"Spring Framework is vulnerable to privilege escalation due to the creation of unsafe temporary directories by the WebFlux component. A local authenticated attacker could modify arbitrary files via maliciously crafted `multipart` requests. \n\nThis vulnerability does not affect Spring MVC applications, or applications that do not handle `multipart` file requests."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2021-22118 spring-beans 5.2.2.RELEASE: spring-security-test 4.1.3.RELEASE: org.springframework","partialFingerprints":{"ruleIdLocationHash/v1":"07f7ee9d40110ca49cf37516659d54bab4954553d8c94551b726e68adf432ccc"}},{"message":{"text":"Spring Framework is vulnerable to denial-of-service (DoS) due to the improper implementation of data binding functionality. A remote attacker could cause a vulnerable server to crash if that server provides file upload functionality."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2022-22970 spring-beans 5.2.2.RELEASE: spring-security-test 4.1.3.RELEASE: org.springframework","partialFingerprints":{"ruleIdLocationHash/v1":"99523833bf5499ad2e6135f9e0f244c513d4ab030606ba2ea24a3ba449eab2c5"}},{"message":{"text":"Spring Framework is vulnerable to denial-of-service (DoS) due to the improper handling of the STOMP protocol for websockets. A remote authenticated attacker could leverage this issue in order to cause a server to crash."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2022-22971 spring-beans 5.2.2.RELEASE: spring-security-test 4.1.3.RELEASE: org.springframework","partialFingerprints":{"ruleIdLocationHash/v1":"29ae1bd47c2adba0a86f4b8a4b9eaf843476f47aca2a35d3257bf563721c75f0"}},{"message":{"text":"Spring Framework is vulnerable to denial-of-service (DoS) via specially crafted SpEL expressions. An attacker could exploit this issue by passing a crafted SpEL expression to the application which may result in a crash."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2023-20861 spring-beans 5.2.2.RELEASE: spring-security-test 4.1.3.RELEASE: org.springframework","partialFingerprints":{"ruleIdLocationHash/v1":"2f4022cb84b8327cd50e92fae9eec11e093ee69cb9393a672159ebdae1adfe15"}},{"message":{"text":"Spring Framework is vulnerable to denial-of-service (DoS) via specially crafted SpEL expressions."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2023-20863 spring-beans 5.2.2.RELEASE: spring-security-test 4.1.3.RELEASE: org.springframework","partialFingerprints":{"ruleIdLocationHash/v1":"26305981b555499b1422c30f525eb57db5e10630a978d75cceb7b06552a85bea"}},{"message":{"text":"It was discovered that Spring Framework was vulnerable to RFD protection bypass. In some instances, depending on the browser used, an attacker could bypass the RFD attack protections via the use of a `jsessionid` path parameter."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2020-5421 spring-beans 5.2.2.RELEASE: spring-security-test 4.1.3.RELEASE: org.springframework","partialFingerprints":{"ruleIdLocationHash/v1":"27f81e2fb139317d9a28826ea801c1c9dce14f5804f2be3cb3180a8b5b66de6d"}},{"message":{"text":"Spring Framework is vulnerable to data binding protection bypass due to improper validation of specified disallowed fields in `DataBinders`. This could be leveraged by an attacker to bypass the suggested workaround to **CVE-2022-22965** (**BDSA-2022-0858**) if it is improperly implemented."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2022-22968 spring-beans 5.2.2.RELEASE: spring-security-test 4.1.3.RELEASE: org.springframework","partialFingerprints":{"ruleIdLocationHash/v1":"eaedf8280a2e8dee88a0287387dc35057e27fa37c94978a881be14198bdad581"}},{"message":{"text":"A flaw was found in XNIO, specifically in the notifyReadClosed method. The issue revealed this method was logging a message to another expected end. This flaw allows an attacker to send flawed requests to a server, possibly causing log contention-related performance concerns or an unwanted disk fill-up."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2022-0084 xnio-api 3.3.8.Final: spring-boot-starter-undertow 2.2.2.RELEASE: org.jboss.xnio","partialFingerprints":{"ruleIdLocationHash/v1":"a6bce99a772657f2eac56ec358c578a461566713b0bbcc19d6d2af3030a8e1b5"}},{"message":{"text":"Apache Log4j, as used in many popular services, is vulnerable to improperly allowing lightweight directory access protocol (LDAP) access via Java naming and directory interface (JNDI). A remote attacker able to supply the end application with specially crafted input that is then processed by the Log4j subcomponent could cause the execution of arbitrary Java code.\n\n**Note** \n\n- log4j-api packages by themselves do not contain the vulnerable functionality and are therefore unaffected. log4j-core packages and the upstream overarching source repository are affected.\n\n- A previously suggested mitigation of setting environment variable `LOG4J_FORMAT_MSG_NO_LOOKUPS=true` is not recommended. This mitigation has been proven inadequate against this vulnerability. \n\n- This vulnerability is partially fixed in [**2.15.0-rc2**](https://github.com/apache/logging-log4j2/releases/tag/log4j-2.15.0-rc2) by [this](https://github.com/apache/logging-log4j2/commit/001aaada7dab82c3c09cde5f8e14245dc9d8b454) commit and [this](https://github.com/apache/logging-log4j2/commit/bac0d8a35c7e354a0d3f706569116dff6c6bd658) commit. These fixes were deemed incomplete. See BDSA-2021-3779 (CVE-2021-45046) for more details.\n\nThis vulnerability is listed as exploitable by the Cybersecurity \u0026 Infrastructure Security Agency in their [Known Exploited Vulnerabilities Catalog](https://www.cisa.gov/known-exploited-vulnerabilities-catalog)."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"BDSA-2021-3731 spring-boot-starter-validation 2.2.2.RELEASE: spring-boot-starter-web 2.2.2.RELEASE: org.springframework.boot","partialFingerprints":{"ruleIdLocationHash/v1":"3e34af4571ef4b595695c720bec0369728956cef0b5ce3f858a55703d0ce00bb"}},{"message":{"text":"Spring Framework is vulnerable to a flaw in the access restrictions to the security sensitive `ClassLoader` property. The restrictions can be bypassed through alternative paths available with Java9 and later. An attacker can leverage this vulnerability to cause remote code execution (RCE).\n\n**Note** this issue exists because the restrictions that were introduced to prevent exploitation of BDSA-2010-0001 (CVE-2010-1622) can be bypassed on platforms where Java9 and later are in use.\n\nThis vulnerability is listed as exploitable by the Cybersecurity \u0026 Infrastructure Security Agency in their [Known Exploited Vulnerabilities Catalog](https://www.cisa.gov/known-exploited-vulnerabilities-catalog)."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2022-22965 spring-boot-starter-validation 2.2.2.RELEASE: spring-boot-starter-web 2.2.2.RELEASE: org.springframework.boot","partialFingerprints":{"ruleIdLocationHash/v1":"50b599fd1bd45ba8a48f4337cfeb228d198363fc81401ff2a984b765858e95f5"}},{"message":{"text":"Spring framework contains a security bypass vulnerability when `/**` is used as a pattern in Spring Security configuration with the `/cloudfoundryapplication/**` component. The potential for security bypass exists due to the mismatch in pattern matching between Spring Security and Cloud Foundry.\n\n**Note**: The vendor has stated in their [advisory](https://spring.io/security/cve-2023-20873) that this application is not vulnerable if any of the following is true:\n* The application is not deployed to Cloud Foundry.\n* You have disabled Cloud Foundry actuator endpoints with `management.cloudfoundry.enabled` set to `false`.\n* Your application does not have handler mappings that can handle requests to `/cloudfoundryapplication/**`."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2023-20873 spring-boot-starter-validation 2.2.2.RELEASE: spring-boot-starter-web 2.2.2.RELEASE: org.springframework.boot","partialFingerprints":{"ruleIdLocationHash/v1":"cfc138bd3154ec1e265fe89e6236b72ee1ef69fc0442079e82712c6adf0d9c04"}},{"message":{"text":"Apache log4j is vulnerable to a denial-of-service (DoS) when uncontrolled recursion occurs through a self-referencing lookup.  An attacker can trigger a DoS with malicious input data that generates a recursive lookup  and consequent application crash.\n\nSuccessful attacks require the attacker to have access to Thread Context Map (MDC) input, and for log4j configured with non-default pattern layout with a Context Lookup.\n\nOnly the log4j-core JAR file is impacted by this vulnerability. Applications using only the log4j-api JAR file without the log4j-core JAR file are not impacted.\n\nApache Log4j is the only Logging Services subproject affected by this vulnerability. Other projects like Log4net  are not impacted."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"BDSA-2021-3817 spring-boot-starter-validation 2.2.2.RELEASE: spring-boot-starter-web 2.2.2.RELEASE: org.springframework.boot","partialFingerprints":{"ruleIdLocationHash/v1":"1883db23afdd89c3eb3d7876d3dc5f4b38229e4be2d8ea3e4a77153485ab547c"}},{"message":{"text":"Apache Log4j contains a remote code execution (RCE) vulnerability. This allows an attacker that has permissions to modify the logging configuration files to input a malicious JDBC Appender with a data source referencing a JDNI URI. This can then lead to RCE.\n\n**Note:** This vulnerability impacts log4j-core."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"BDSA-2021-3887 spring-boot-starter-validation 2.2.2.RELEASE: spring-boot-starter-web 2.2.2.RELEASE: org.springframework.boot","partialFingerprints":{"ruleIdLocationHash/v1":"ca57ea34649593e34823723afb22753c3462fb272c8bb3c13d4ccecab0dcf952"}},{"message":{"text":"Spring Boot is vulnerable to privilege escalation due to a race condition which occurs during the creation of a temporary directory. A local attacker could create their own temporary directory by racing against Spring Boot and supply their own configuration files which would allow for the full takeover of the application."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2022-27772 spring-boot-starter-validation 2.2.2.RELEASE: spring-boot-starter-web 2.2.2.RELEASE: org.springframework.boot","partialFingerprints":{"ruleIdLocationHash/v1":"bcff25d2d44b8515dd1380c5c261413181b2ac06a09b198ebbfd0bb82666522f"}},{"message":{"text":"Spring Boot is vulnerable to denial-of-service (DoS) via the welcome page when used to serve an application behind a reverse proxy cache. This will cause users to continuously be served a 404 response, preventing standard application use.\n\n\n**Note:** Spring have provided the following guidance for vulnerable criteria. \nAn application is vulnerable if all of the following are true:\n\n- \"The application has Spring MVC auto-configuration enabled. This is the case by default if Spring MVC is on the classpath.\"\n- \"The application makes use of Spring Boot's welcome page support, either static or templated.\"\n- \"Your application is deployed behind a proxy which caches 404 responses.\"\n\nThe application is not vulnerable if any of the following are true:\n\n- \"Spring MVC auto-configuration is disabled. This is true if `WebMvcAutoConfiguration` is explicitly excluded, if Spring MVC is not on the classpath, or if `spring.main.web-application-type` is set to a value other than `SERVLET`.\"\n- \"The application does not use Spring Boot's welcome page support.\"\n- \"You do not have a proxy which caches 404 responses.\""},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2023-20883 spring-boot-starter-validation 2.2.2.RELEASE: spring-boot-starter-web 2.2.2.RELEASE: org.springframework.boot","partialFingerprints":{"ruleIdLocationHash/v1":"8df0f64efbe0f5fd4de1d612ad3ebbeb38f917398e03f8abe9cb0b75d5f9266b"}},{"message":{"text":"Spring Boot is vulnerable to denial-of-service (DoS). An unauthenticated user could trigger the vulnerability by providing specially crafted HTTP requests to a web metrics endpoint."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2023-34055 spring-boot-starter-validation 2.2.2.RELEASE: spring-boot-starter-web 2.2.2.RELEASE: org.springframework.boot","partialFingerprints":{"ruleIdLocationHash/v1":"9d2f52cfd17105b92bde3988e9a832ba5e542ac5bd13c97dc43fdd7d754e0aba"}},{"message":{"text":"Apache Log4j, as used in many popular services, is vulnerable to improperly allowing lightweight directory access protocol (LDAP) access via Java naming and directory interface (JNDI). A remote attacker able to supply the end application with specially crafted input that is then processed by the Log4j subcomponent could cause the execution of arbitrary Java code.\n\n**Note** \n\n- log4j-api packages by themselves do not contain the vulnerable functionality and are therefore unaffected. log4j-core packages and the upstream overarching source repository are affected.\n\n- A previously suggested mitigation of setting environment variable `LOG4J_FORMAT_MSG_NO_LOOKUPS=true` is not recommended. This mitigation has been proven inadequate against this vulnerability. \n\n- This vulnerability is partially fixed in [**2.15.0-rc2**](https://github.com/apache/logging-log4j2/releases/tag/log4j-2.15.0-rc2) by [this](https://github.com/apache/logging-log4j2/commit/001aaada7dab82c3c09cde5f8e14245dc9d8b454) commit and [this](https://github.com/apache/logging-log4j2/commit/bac0d8a35c7e354a0d3f706569116dff6c6bd658) commit. These fixes were deemed incomplete. See BDSA-2021-3779 (CVE-2021-45046) for more details.\n\nThis vulnerability is listed as exploitable by the Cybersecurity \u0026 Infrastructure Security Agency in their [Known Exploited Vulnerabilities Catalog](https://www.cisa.gov/known-exploited-vulnerabilities-catalog)."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"BDSA-2021-3731 spring-boot-starter-logging 2.2.2.RELEASE: spring-boot-starter-test 2.2.2.RELEASE: org.springframework.boot","partialFingerprints":{"ruleIdLocationHash/v1":"99e21bc1f8a0301613925ab7d2cd66dae8430a2e5cc9d23a03e167e8e3ded64b"}},{"message":{"text":"Spring Framework is vulnerable to a flaw in the access restrictions to the security sensitive `ClassLoader` property. The restrictions can be bypassed through alternative paths available with Java9 and later. An attacker can leverage this vulnerability to cause remote code execution (RCE).\n\n**Note** this issue exists because the restrictions that were introduced to prevent exploitation of BDSA-2010-0001 (CVE-2010-1622) can be bypassed on platforms where Java9 and later are in use.\n\nThis vulnerability is listed as exploitable by the Cybersecurity \u0026 Infrastructure Security Agency in their [Known Exploited Vulnerabilities Catalog](https://www.cisa.gov/known-exploited-vulnerabilities-catalog)."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2022-22965 spring-boot-starter-logging 2.2.2.RELEASE: spring-boot-starter-test 2.2.2.RELEASE: org.springframework.boot","partialFingerprints":{"ruleIdLocationHash/v1":"ec22e0af27d7d699a2cd57711c449f2a9d26138083bb59dcef701a49d47cba17"}},{"message":{"text":"Spring framework contains a security bypass vulnerability when `/**` is used as a pattern in Spring Security configuration with the `/cloudfoundryapplication/**` component. The potential for security bypass exists due to the mismatch in pattern matching between Spring Security and Cloud Foundry.\n\n**Note**: The vendor has stated in their [advisory](https://spring.io/security/cve-2023-20873) that this application is not vulnerable if any of the following is true:\n* The application is not deployed to Cloud Foundry.\n* You have disabled Cloud Foundry actuator endpoints with `management.cloudfoundry.enabled` set to `false`.\n* Your application does not have handler mappings that can handle requests to `/cloudfoundryapplication/**`."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2023-20873 spring-boot-starter-logging 2.2.2.RELEASE: spring-boot-starter-test 2.2.2.RELEASE: org.springframework.boot","partialFingerprints":{"ruleIdLocationHash/v1":"94166153b0243cd5573dc08253876cc225a783d150a12e44d6a989bbd0895562"}},{"message":{"text":"Apache log4j is vulnerable to a denial-of-service (DoS) when uncontrolled recursion occurs through a self-referencing lookup.  An attacker can trigger a DoS with malicious input data that generates a recursive lookup  and consequent application crash.\n\nSuccessful attacks require the attacker to have access to Thread Context Map (MDC) input, and for log4j configured with non-default pattern layout with a Context Lookup.\n\nOnly the log4j-core JAR file is impacted by this vulnerability. Applications using only the log4j-api JAR file without the log4j-core JAR file are not impacted.\n\nApache Log4j is the only Logging Services subproject affected by this vulnerability. Other projects like Log4net  are not impacted."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"BDSA-2021-3817 spring-boot-starter-logging 2.2.2.RELEASE: spring-boot-starter-test 2.2.2.RELEASE: org.springframework.boot","partialFingerprints":{"ruleIdLocationHash/v1":"87fbcff7cf611885a7ce2b4e91b101853711b22f9868592ccfa38fac1d08bc83"}},{"message":{"text":"Apache Log4j contains a remote code execution (RCE) vulnerability. This allows an attacker that has permissions to modify the logging configuration files to input a malicious JDBC Appender with a data source referencing a JDNI URI. This can then lead to RCE.\n\n**Note:** This vulnerability impacts log4j-core."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"BDSA-2021-3887 spring-boot-starter-logging 2.2.2.RELEASE: spring-boot-starter-test 2.2.2.RELEASE: org.springframework.boot","partialFingerprints":{"ruleIdLocationHash/v1":"4b1cf8a52ad1d9e7ce20a9682b43adfc6bc352b19501cd590f90662892855917"}},{"message":{"text":"Spring Boot is vulnerable to privilege escalation due to a race condition which occurs during the creation of a temporary directory. A local attacker could create their own temporary directory by racing against Spring Boot and supply their own configuration files which would allow for the full takeover of the application."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2022-27772 spring-boot-starter-logging 2.2.2.RELEASE: spring-boot-starter-test 2.2.2.RELEASE: org.springframework.boot","partialFingerprints":{"ruleIdLocationHash/v1":"7b4c02d3eee84afafebf647b379ff6c829706f75dbc0ebfde242177dfe0b0f82"}},{"message":{"text":"Spring Boot is vulnerable to denial-of-service (DoS) via the welcome page when used to serve an application behind a reverse proxy cache. This will cause users to continuously be served a 404 response, preventing standard application use.\n\n\n**Note:** Spring have provided the following guidance for vulnerable criteria. \nAn application is vulnerable if all of the following are true:\n\n- \"The application has Spring MVC auto-configuration enabled. This is the case by default if Spring MVC is on the classpath.\"\n- \"The application makes use of Spring Boot's welcome page support, either static or templated.\"\n- \"Your application is deployed behind a proxy which caches 404 responses.\"\n\nThe application is not vulnerable if any of the following are true:\n\n- \"Spring MVC auto-configuration is disabled. This is true if `WebMvcAutoConfiguration` is explicitly excluded, if Spring MVC is not on the classpath, or if `spring.main.web-application-type` is set to a value other than `SERVLET`.\"\n- \"The application does not use Spring Boot's welcome page support.\"\n- \"You do not have a proxy which caches 404 responses.\""},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2023-20883 spring-boot-starter-logging 2.2.2.RELEASE: spring-boot-starter-test 2.2.2.RELEASE: org.springframework.boot","partialFingerprints":{"ruleIdLocationHash/v1":"4e84b98c6a0774823856ff90120489986dfed45a41e8bd39e88838a4fea1c2ff"}},{"message":{"text":"Spring Boot is vulnerable to denial-of-service (DoS). An unauthenticated user could trigger the vulnerability by providing specially crafted HTTP requests to a web metrics endpoint."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2023-34055 spring-boot-starter-logging 2.2.2.RELEASE: spring-boot-starter-test 2.2.2.RELEASE: org.springframework.boot","partialFingerprints":{"ruleIdLocationHash/v1":"61d56a14ea0404a4a4e21280f1ace0c49a99f559456a97a916b9e72340e9abe2"}},{"message":{"text":"Spring Security contains a flaw when dealing with OAuth2 access token empty scope list  responses. A remote attacker could leverage this to escalate their privileges under **all** the following conditions being met:\n\n* They act as the role of a Login Client (e.g. uses `http.oauth2Login()`).\n* They use one or more authorization rules with authorities mapped from authorized scopes (e.g. `anyRequest().hasAuthority(\"SCOPE_message.write\")`) in the client application.\n* An authorization server that responds with empty scopes list is registered (RFC 6749, Section 5.1).\n\n**Note:** The role of Resource Servers (`http.oauth2ResourceServer()`) and applications that do not map authorization rules from authorized scopes (eg. `anyRequest().hasAuthority(\"ROLE_USER\")`) cannot be exploited by this vulnerability."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"BDSA-2022-3109 spring-security-core 5.2.1.RELEASE: spring-security-test 4.1.3.RELEASE: org.springframework.security","partialFingerprints":{"ruleIdLocationHash/v1":"d827cc0e97ac9a92a5317544aab252b2f3f4987f339385d08ba5cc9e979519c6"}},{"message":{"text":"Spring Security used with Spring WebFlux performs incorrect parsing when using `**` as a pattern in Spring Security configuration due to inconsistent pattern matching between the two components. This could lead to bypassing of security mechanisms configured by Spring Security."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"BDSA-2023-1825 spring-security-core 5.2.1.RELEASE: spring-security-test 4.1.3.RELEASE: org.springframework.security","partialFingerprints":{"ruleIdLocationHash/v1":"66d47814c1aeec3cba7b46ef2fa22c0a0e0858ae11d57abef12e992566fbf19d"}},{"message":{"text":"Spring Security is vulnerable to the bypassing of an authorization mechanism due to improperly implemented regular expression matching. A remote attacker could perform unauthorized actions on a vulnerable server by sending maliciously crafted requests to that server."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2022-22978 spring-security-core 5.2.1.RELEASE: spring-security-test 4.1.3.RELEASE: org.springframework.security","partialFingerprints":{"ruleIdLocationHash/v1":"f5d5a1d67b40b09d26634a737e9ebe7148d2de3ea28a8b46687fa6080ed6f383"}},{"message":{"text":"Spring Security is vulnerable to privilege escalation due to a failure to correctly save security context information. An attacker who is allowed to use elevated privileges in a small portion of a program could extend those privileges to the entire program by sending maliciously crafted requests to the application.\n\nIt should be noted that the vulnerability is not present by default, and must be programmed in by an application developer."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2021-22112 spring-security-core 5.2.1.RELEASE: spring-security-test 4.1.3.RELEASE: org.springframework.security","partialFingerprints":{"ruleIdLocationHash/v1":"2b0e8d1131349d7aef95bf8b7aca4626137d8d1c1a146905dd652cfecca06288"}},{"message":{"text":"Spring Security contains an uncontrolled resource consumption vulnerability. Attackers could exploit this to create an `OutOfMemory` error and exhaust  system resources, triggering a denial-of-service (DoS) condition."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2021-22119 spring-security-core 5.2.1.RELEASE: spring-security-test 4.1.3.RELEASE: org.springframework.security","partialFingerprints":{"ruleIdLocationHash/v1":"ca304aeefbb2046e1c33f9e846980466ecbadd7c22d973e6ea675f7bd75dbdb8"}},{"message":{"text":"Spring Security is vulnerable to the weakening of bcrypt-generated password hashes due to an integer overflow. An attacker that is able to obtain weak password hashes that have been produced by a vulnerable application could potentially retrieve the plaintext password. It should be noted that the `BCryptPasswordEncoder` class must have been configured to use the maximum work factor (31) in order for the vulnerability to manifest. This is a non-default value."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2022-22976 spring-security-core 5.2.1.RELEASE: spring-security-test 4.1.3.RELEASE: org.springframework.security","partialFingerprints":{"ruleIdLocationHash/v1":"5ef8f1d860ee548286601eef165a76cb77c542bc7a9994f021b9a8ea2ce14896"}},{"message":{"text":"Spring Security is vulnerable to authentication abuse due to the improper handling of SAML response validation. This could allow an attacker to inject arbitrary assertions into SAML responses."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2020-5407 spring-security-core 5.2.1.RELEASE: spring-security-test 4.1.3.RELEASE: org.springframework.security","partialFingerprints":{"ruleIdLocationHash/v1":"27d47c0beba3348f4f6f87a764a8ab123cdc77b5914973efd697ce5d7a45612d"}},{"message":{"text":"Spring Security is vulnerable to information exposure due to an insecure cryptographic mechanism in the queryable text encryptor. This could be leveraged by an attacker to derive sensitive information from encrypted text using dictionary attacks."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2020-5408 spring-security-core 5.2.1.RELEASE: spring-security-test 4.1.3.RELEASE: org.springframework.security","partialFingerprints":{"ruleIdLocationHash/v1":"65af58e0b591d67a63236655f50b9c0d93cf765ddbdd1246bd4bcffd5a22fe88"}},{"message":{"text":"Pivotal Spring Framework through 5.3.16 suffers from a potential remote code execution (RCE) issue if used for Java deserialization of untrusted data. Depending on how the library is implemented within a product, this issue may or not occur, and authentication may be required. NOTE: the vendor's position is that untrusted data is not an intended use case. The product's behavior will not be changed because some users rely on deserialization of trusted data."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2016-1000027 spring-aspects 5.2.2.RELEASE: spring-boot-starter-data-jpa 2.2.2.RELEASE: org.springframework","partialFingerprints":{"ruleIdLocationHash/v1":"1735dd0bd003e4453364dc88b51f32b3ba53992c4098974b8a4d7d93bd03d63a"}},{"message":{"text":"Spring Framework is vulnerable to a flaw in the access restrictions to the security sensitive `ClassLoader` property. The restrictions can be bypassed through alternative paths available with Java9 and later. An attacker can leverage this vulnerability to cause remote code execution (RCE).\n\n**Note** this issue exists because the restrictions that were introduced to prevent exploitation of BDSA-2010-0001 (CVE-2010-1622) can be bypassed on platforms where Java9 and later are in use.\n\nThis vulnerability is listed as exploitable by the Cybersecurity \u0026 Infrastructure Security Agency in their [Known Exploited Vulnerabilities Catalog](https://www.cisa.gov/known-exploited-vulnerabilities-catalog)."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2022-22965 spring-aspects 5.2.2.RELEASE: spring-boot-starter-data-jpa 2.2.2.RELEASE: org.springframework","partialFingerprints":{"ruleIdLocationHash/v1":"f06f8acf3810d798280967f79707f0c50d964245d27829385f94738ff557e727"}},{"message":{"text":"Spring Framework is vulnerable to cross-site request forgery (CSRF) attacks via CORS preflight requests which target Spring MVC or Spring WebFlux endpoints."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2020-5397 spring-aspects 5.2.2.RELEASE: spring-boot-starter-data-jpa 2.2.2.RELEASE: org.springframework","partialFingerprints":{"ruleIdLocationHash/v1":"42217e5cc79fdd4ee31ee3c0862ab56ee23cbea67a3fda248eafe648a0fef7a4"}},{"message":{"text":"Software systems using Spring Framework may be vulnerable to unsafe deserialization if they employ unsafe use of certain provided deserialization functionality. A remote attacker could potentially execute arbitrary code on a vulnerable endpoint by passing a maliciously crafted serialized object to that endpoint.\n\n**Note**: This issue only affects software that has been written to leverage specific deserialization functionality provided by the Spring Framework without sanitization."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"BDSA-2022-0847 spring-aspects 5.2.2.RELEASE: spring-boot-starter-data-jpa 2.2.2.RELEASE: org.springframework","partialFingerprints":{"ruleIdLocationHash/v1":"fb982a340f5f0537ffe0d4633b99e3931e8916a6831ffb54824d8ffec53504f7"}},{"message":{"text":"Spring Framework is vulnerable to a reflected file download (RFD) attack via improper input validation on filenames in a `Content-Disposition` header."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2020-5398 spring-aspects 5.2.2.RELEASE: spring-boot-starter-data-jpa 2.2.2.RELEASE: org.springframework","partialFingerprints":{"ruleIdLocationHash/v1":"82bed543f12ce81677ee0b0a2774429daf6c5aaececd329dccbfc64a9bc70c0a"}},{"message":{"text":"Spring Framework is vulnerable to log file injection due to the insufficient validation of user input in an undisclosed component. An attacker could leverage this issue in order to add arbitrary entries to a log file which could impact both the integrity issues and performance issues.\n\n**Note**: a follow-up to this issue was disclosed as **CVE-2021-22060** (**BDSA-2021-3236**), with further fixed releases that protect against additional types of input and in more places of the Spring Framework codebase."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2021-22096 spring-aspects 5.2.2.RELEASE: spring-boot-starter-data-jpa 2.2.2.RELEASE: org.springframework","partialFingerprints":{"ruleIdLocationHash/v1":"8b52828b27517e75d917986b95b55c558f6615e94073e3e2bc61790e67cbb54c"}},{"message":{"text":"Spring Framework is vulnerable to log file injection due to the insufficient validation of user input in an undisclosed component. An attacker could leverage this issue in order to add arbitrary entries to a log file which could impact both the integrity issues and performance issues.\n\n**Note**: the vendor states this issue exists as a follow up to CVE-2021-22096 (BDSA-2022-0011) that protects against additional types of input and in more places of the Spring Framework codebase."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2021-22060 spring-aspects 5.2.2.RELEASE: spring-boot-starter-data-jpa 2.2.2.RELEASE: org.springframework","partialFingerprints":{"ruleIdLocationHash/v1":"d9bce966eed3836c52bfa9a86eee44a8ce66afce51aebe07ef9e2e6c883de32d"}},{"message":{"text":"Spring-Framework's spring-expression is vulnerable to a denial-of-service (DoS) condition. This allows an attacker to use crafted input to cause the spring-expression process to crash due to an exception."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2022-22950 spring-aspects 5.2.2.RELEASE: spring-boot-starter-data-jpa 2.2.2.RELEASE: org.springframework","partialFingerprints":{"ruleIdLocationHash/v1":"73b8716ad24ac1a0964f65175e2e6f917c93536a9320a943529c06e2fff5f4d4"}},{"message":{"text":"Spring Framework is vulnerable to privilege escalation due to the creation of unsafe temporary directories by the WebFlux component. A local authenticated attacker could modify arbitrary files via maliciously crafted `multipart` requests. \n\nThis vulnerability does not affect Spring MVC applications, or applications that do not handle `multipart` file requests."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2021-22118 spring-aspects 5.2.2.RELEASE: spring-boot-starter-data-jpa 2.2.2.RELEASE: org.springframework","partialFingerprints":{"ruleIdLocationHash/v1":"09ef3e603f89f92b4af89cd234955778f7e7a5e4fbc3ea34d40913d7c070415b"}},{"message":{"text":"Spring Framework is vulnerable to denial-of-service (DoS) due to the improper implementation of data binding functionality. A remote attacker could cause a vulnerable server to crash if that server provides file upload functionality."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2022-22970 spring-aspects 5.2.2.RELEASE: spring-boot-starter-data-jpa 2.2.2.RELEASE: org.springframework","partialFingerprints":{"ruleIdLocationHash/v1":"d179ea48a64b21fe4ce68fda13c33de91953d48c933415ea9b8b3bf9bf2fab50"}},{"message":{"text":"Spring Framework is vulnerable to denial-of-service (DoS) due to the improper handling of the STOMP protocol for websockets. A remote authenticated attacker could leverage this issue in order to cause a server to crash."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2022-22971 spring-aspects 5.2.2.RELEASE: spring-boot-starter-data-jpa 2.2.2.RELEASE: org.springframework","partialFingerprints":{"ruleIdLocationHash/v1":"84ead3c6d9d4a3867b7e20ad6825a4ac0c4313eafae0c1964d7ef4c6fe3d17cc"}},{"message":{"text":"Spring Framework is vulnerable to denial-of-service (DoS) via specially crafted SpEL expressions. An attacker could exploit this issue by passing a crafted SpEL expression to the application which may result in a crash."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2023-20861 spring-aspects 5.2.2.RELEASE: spring-boot-starter-data-jpa 2.2.2.RELEASE: org.springframework","partialFingerprints":{"ruleIdLocationHash/v1":"b138f476b9734485763232be6f5faa43a1bb9fd20a7b83bc7edf49ef7e7483b2"}},{"message":{"text":"Spring Framework is vulnerable to denial-of-service (DoS) via specially crafted SpEL expressions."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2023-20863 spring-aspects 5.2.2.RELEASE: spring-boot-starter-data-jpa 2.2.2.RELEASE: org.springframework","partialFingerprints":{"ruleIdLocationHash/v1":"9a462827ac716f3f3ed735f7e860aef5fe596eaf06f69878275287af3ea19689"}},{"message":{"text":"It was discovered that Spring Framework was vulnerable to RFD protection bypass. In some instances, depending on the browser used, an attacker could bypass the RFD attack protections via the use of a `jsessionid` path parameter."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2020-5421 spring-aspects 5.2.2.RELEASE: spring-boot-starter-data-jpa 2.2.2.RELEASE: org.springframework","partialFingerprints":{"ruleIdLocationHash/v1":"18ef1a0ebf75b2ea41dcd0a0829bc73bb5a5fe2f3e6f11d2921470b7a3a910af"}},{"message":{"text":"Spring Framework is vulnerable to data binding protection bypass due to improper validation of specified disallowed fields in `DataBinders`. This could be leveraged by an attacker to bypass the suggested workaround to **CVE-2022-22965** (**BDSA-2022-0858**) if it is improperly implemented."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2022-22968 spring-aspects 5.2.2.RELEASE: spring-boot-starter-data-jpa 2.2.2.RELEASE: org.springframework","partialFingerprints":{"ruleIdLocationHash/v1":"32ebc7869337bf49894f02ec755962f8c935aaeff8a27e664392868f4454638c"}},{"message":{"text":"Guava is vulnerable to authorization bypass due to the use of an insecure temporary directory for certain file creation operations. A local attacker that has access to the default Java temporary directory could access files created by the `FileBackedOutputStream` class, even when they are not intended to be able to do so."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2023-2976 guava 18.0: com.google.guava","partialFingerprints":{"ruleIdLocationHash/v1":"465939872a1b045906c1ce7fe2449ba67e5d709381e6dc98a661c7d3901fceab"}},{"message":{"text":"Servers that depend on the Guava libraries are vulnerable to denial-of-service (DoS) conditions because certain classes allocate memory without proper checks. Potential attackers can leverage this flaw to crash the software repeatedly rendering it unusable."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2018-10237 guava 18.0: com.google.guava","partialFingerprints":{"ruleIdLocationHash/v1":"865b95ba7b0ef92fe2dcbf71bb66935cde9471d836431792fd2aacbff05d6a22"}},{"message":{"text":"Guava creates temporary files and directories with insecure default permissions. A local attacker on the machine could learn the contents of sensitive temporary files.\n\n**Note:** It was determined that the initial patch in version [**30.0**](https://github.com/google/guava/releases/tag/v30.0) by [this](https://github.com/google/guava/commit/fec0dbc4634006a6162cfd4d0d09c962073ddf40) commit was inadequate to fully remove the problem of insecure temporary files from Guava. It only marked a function as deprecated, but the functionality still persisted. A new solution has been released."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2020-8908 guava 18.0: com.google.guava","partialFingerprints":{"ruleIdLocationHash/v1":"4b3c623f2712089d4ddfaff8967a49365d4c05f35e57619d2adf92fd17945652"}},{"message":{"text":"Jetty is vulnerable to temporary directory Hijacking via a race condition. If code is executed from this temporary directory it can lead to local privilege escalation."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2020-27216 jetty-server 9.4.24.v20191120: wiremock 2.8.0: org.eclipse.jetty","partialFingerprints":{"ruleIdLocationHash/v1":"d524304b04b3826fd9f1aaaea3e243d1b42122fa7824d49e51d4ab9f79035f99"}},{"message":{"text":"The HTTP/2 protocol contains a flaw related to the stream multiplexing feature that can allow for excessive resource consumption on servers operating implementations of the HTTP/2 protocol. \n\nThe HTTP/2 protocol allows clients to signal to a server to cancel a previously opened stream by sending an `RST_STREAM` frame. Attackers can abuse this stream canceling ability by opening a large number of streams at once immediately followed by `RST_STREAM` frames. In most HTTP/2 implementations this bypasses concurrent open stream limits and causes servers to spend processing time first handling request frames and then performing stream tear downs. For the server, these operations can pile up whereas the attacker client paid minuscule bandwidth and processing costs.\n\n[Amazon](https://aws.amazon.com/security/security-bulletins/AWS-2023-011/), [Cloudflare](https://blog.cloudflare.com/technical-breakdown-http2-rapid-reset-ddos-attack/) and [Google](https://cloud.google.com/blog/products/identity-security/google-cloud-mitigated-largest-ddos-attack-peaking-above-398-million-rps/) have reported that this vulnerability has been exploited in the wild from August to October 2023.\n\nThis vulnerability is listed as exploitable by the Cybersecurity \u0026 Infrastructure Security Agency in their [Known Exploited Vulnerabilities Catalog](https://www.cisa.gov/known-exploited-vulnerabilities-catalog)."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2023-44487 jetty-server 9.4.24.v20191120: wiremock 2.8.0: org.eclipse.jetty","partialFingerprints":{"ruleIdLocationHash/v1":"ac575a31b2bb35208a17caa972a011a92ea60f5f0b94d33c42ecaf2a8fe4b130"}},{"message":{"text":"Jetty is vulnerable to denial-of-service (DoS) due to the use of an exponential algorithm that can have excessive resource requirements. A remote attacker could cause a vulnerable server to become unresponsive by sending maliciously crafted HTTP requests to that server."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2020-27223 jetty-server 9.4.24.v20191120: wiremock 2.8.0: org.eclipse.jetty","partialFingerprints":{"ruleIdLocationHash/v1":"eb41d388cf85ea5d5a3aee7df45c99e22e1b53e3da26280550eeef328b6dda1f"}},{"message":{"text":"Eclipse Jetty is vulnerable to Denial-of-Service (DoS) via invalid TLS frames. An attacker could exploit this by sending a TLS frame with a size in excess of 17408 resulting in excessive resource consumption leading to a DoS condition."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2021-28165 jetty-server 9.4.24.v20191120: wiremock 2.8.0: org.eclipse.jetty","partialFingerprints":{"ruleIdLocationHash/v1":"01b7cad80fd823dd631906d3d7231d0f4a6a681dd60c63a31e06b7055ec54d3f"}},{"message":{"text":"Jetty is vulnerable to information disclosure due to improper requested path verification. This allows crafted requests to access protected resources of the web application which, depending on the implementation, might reveal sensitive information."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2021-28169 jetty-server 9.4.24.v20191120: wiremock 2.8.0: org.eclipse.jetty","partialFingerprints":{"ruleIdLocationHash/v1":"fb6720e195b17e45a2367c1e5a4bc86f701b5e06d3f7a5cdd2adad297de69271"}},{"message":{"text":"Eclipse Jetty is vulnerable to a denial-of-service (DoS) issue due to presence of a user input validation flaw in the HTTP/2 HPACK functionality that can lead to an integer overflow and allow HPACK headers to exceed their expected size limits.\n\nAn attacker could submit crafted HTTP messages that trigger the integer overflow flaw and cause large buffers to be allocated on the server, consuming memory resources in a manner that could cause the server to run out of memory."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2023-36478 jetty-server 9.4.24.v20191120: wiremock 2.8.0: org.eclipse.jetty","partialFingerprints":{"ruleIdLocationHash/v1":"eab4d14e7fc3eb80e7030a19d649faddcce3b70a32c96a9f6d9fc29137b36ab0"}},{"message":{"text":"Eclipse Jetty does not correctly handle invalid HTTP/2 requests. An attacker could exploit this flaw to exhaust the HTTP/2 flow control window or TCP congest the connection. This will cause the relevant selector threads to be blocked and it will lead to a denial-of-service (DoS)."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2022-2048 jetty-server 9.4.24.v20191120: wiremock 2.8.0: org.eclipse.jetty","partialFingerprints":{"ruleIdLocationHash/v1":"bbba961b7dfe3dc9bc6cd84beb12324b5f6387ff9a854f4245a850ccb825ecf1"}},{"message":{"text":"Eclipse Jetty contains a vulnerability that allows a remote attacker to inject data into other client's requests. This vulnerability only exists when GZIP request body inflation is enabled, and requests from different clients are multiplexed onto a single connection."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2020-27218 jetty-server 9.4.24.v20191120: wiremock 2.8.0: org.eclipse.jetty","partialFingerprints":{"ruleIdLocationHash/v1":"011ca22b4c555bcb89ca4707d515092d57580972c800a659f59d6b8900635cb1"}},{"message":{"text":"Eclipse Jetty contains a vulnerability in its multipart request parsing mechanism that can lead to an out-of-memory error due to insufficient limiting measures. An attacker can exploit this flaw by supplying a request containing a large multipart without a filename in order to cause a denial-of-service (DoS)."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2023-26048 jetty-server 9.4.24.v20191120: wiremock 2.8.0: org.eclipse.jetty","partialFingerprints":{"ruleIdLocationHash/v1":"51792ad4ccef9fad05565405a0116c68fd6475c831e36d4b3034b834e48534ce"}},{"message":{"text":"Eclipse Jetty does not properly parse quoted values in cookies. This could allow an attacker to smuggle cookies within other cookies into the application. The attacker can also tamper with the cookie parsing mechanism and cause other unintended behavior."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2023-26049 jetty-server 9.4.24.v20191120: wiremock 2.8.0: org.eclipse.jetty","partialFingerprints":{"ruleIdLocationHash/v1":"207d03bf7f6618f019a1799f6108419a2c73ac31142eb14ec32d7724a51644bf"}},{"message":{"text":"Eclipse Jetty is vulnerable to HTTP request smuggling due to the improper parsing of HTTP requests. An attacker could exploit this vulnerability by sending maliciously crafted HTTP requests to a vulnerable endpoint with multiple requests included inside the body by manipulating the `Content-Length` of the request. The smuggling of HTTP requests may allow for the bypass of security tools such as web application firewalls (WAFs) and intrusion detection systems (IDSs)."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2023-40167 jetty-server 9.4.24.v20191120: wiremock 2.8.0: org.eclipse.jetty","partialFingerprints":{"ruleIdLocationHash/v1":"b4258de6ebf6238134d83a7e0c570cc4122305b73cf7277a9bec1f47a1c2e2de"}},{"message":{"text":"Eclipse Jetty contains an improper neutralization of quoting syntax issue within the CGI servlet. This could allow an authenticated attacker to send a request to the CGI Servlet for a binary with a space in its name in order to manipulate the command structure and execute incorrect commands."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2023-36479 jetty-server 9.4.24.v20191120: wiremock 2.8.0: org.eclipse.jetty","partialFingerprints":{"ruleIdLocationHash/v1":"3cd7648f9efb50b8023e99e3f112ac67ef9fae6d94b2a70f9d494c7e6548d7e3"}},{"message":{"text":"Eclipse Jetty contains an improper authentication vulnerability. This could allow an authenticated attacker to bypass authentication after it has been rejected or revoked by the `LoginService` and make a request as if authenticated.\n\n**Note:** The vendor has stated that this issue impacts usages of the `jetty-openid` which have configured a nested `LoginService` and where that `LoginService` is capable of rejecting previously authenticated users."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2023-41900 jetty-server 9.4.24.v20191120: wiremock 2.8.0: org.eclipse.jetty","partialFingerprints":{"ruleIdLocationHash/v1":"92e42652a5b3f2a20937ba6e905c1e5321f54cc1b9edf2a9658dd9cc6a9b4eae"}},{"message":{"text":"Eclipse Jetty is vulnerable to insufficient session expiry. This may result in sessions used on a shared computer persisting for longer than intended."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2021-34428 jetty-server 9.4.24.v20191120: wiremock 2.8.0: org.eclipse.jetty","partialFingerprints":{"ruleIdLocationHash/v1":"b989387ee7edb433120786d46338d84e78c4f18c9f43b842e3bca848fc703b32"}},{"message":{"text":"Eclipse Jetty does not correctly handle invalid authority segments of HTTP URIs. An authenticated attacker could exploit this flaw by passing an invalid URI that contains an improper authority with no host so that it is interpreted as one with a host."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2022-2047 jetty-server 9.4.24.v20191120: wiremock 2.8.0: org.eclipse.jetty","partialFingerprints":{"ruleIdLocationHash/v1":"24d209bd0986ed91ca44309cade8f7980e7c1f68c70255fea19f60dc84b25fe2"}},{"message":{"text":"Apache Log4j, as used in many popular services, is vulnerable to improperly allowing lightweight directory access protocol (LDAP) access via Java naming and directory interface (JNDI). A remote attacker able to supply the end application with specially crafted input that is then processed by the Log4j subcomponent could cause the execution of arbitrary Java code.\n\n**Note** \n\n- log4j-api packages by themselves do not contain the vulnerable functionality and are therefore unaffected. log4j-core packages and the upstream overarching source repository are affected.\n\n- A previously suggested mitigation of setting environment variable `LOG4J_FORMAT_MSG_NO_LOOKUPS=true` is not recommended. This mitigation has been proven inadequate against this vulnerability. \n\n- This vulnerability is partially fixed in [**2.15.0-rc2**](https://github.com/apache/logging-log4j2/releases/tag/log4j-2.15.0-rc2) by [this](https://github.com/apache/logging-log4j2/commit/001aaada7dab82c3c09cde5f8e14245dc9d8b454) commit and [this](https://github.com/apache/logging-log4j2/commit/bac0d8a35c7e354a0d3f706569116dff6c6bd658) commit. These fixes were deemed incomplete. See BDSA-2021-3779 (CVE-2021-45046) for more details.\n\nThis vulnerability is listed as exploitable by the Cybersecurity \u0026 Infrastructure Security Agency in their [Known Exploited Vulnerabilities Catalog](https://www.cisa.gov/known-exploited-vulnerabilities-catalog)."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"BDSA-2021-3731 spring-boot-starter-web 2.2.2.RELEASE: org.springframework.boot","partialFingerprints":{"ruleIdLocationHash/v1":"80efcf30724bfff18be7a9835db5776f01abe2385a9ecba4d811aa87f9c9ca58"}},{"message":{"text":"Spring Framework is vulnerable to a flaw in the access restrictions to the security sensitive `ClassLoader` property. The restrictions can be bypassed through alternative paths available with Java9 and later. An attacker can leverage this vulnerability to cause remote code execution (RCE).\n\n**Note** this issue exists because the restrictions that were introduced to prevent exploitation of BDSA-2010-0001 (CVE-2010-1622) can be bypassed on platforms where Java9 and later are in use.\n\nThis vulnerability is listed as exploitable by the Cybersecurity \u0026 Infrastructure Security Agency in their [Known Exploited Vulnerabilities Catalog](https://www.cisa.gov/known-exploited-vulnerabilities-catalog)."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2022-22965 spring-boot-starter-web 2.2.2.RELEASE: org.springframework.boot","partialFingerprints":{"ruleIdLocationHash/v1":"62f8672ff6b8a1f697b84ca37eb2d8c82880901c9dd7a7ad5461c12d3f7f4859"}},{"message":{"text":"Spring framework contains a security bypass vulnerability when `/**` is used as a pattern in Spring Security configuration with the `/cloudfoundryapplication/**` component. The potential for security bypass exists due to the mismatch in pattern matching between Spring Security and Cloud Foundry.\n\n**Note**: The vendor has stated in their [advisory](https://spring.io/security/cve-2023-20873) that this application is not vulnerable if any of the following is true:\n* The application is not deployed to Cloud Foundry.\n* You have disabled Cloud Foundry actuator endpoints with `management.cloudfoundry.enabled` set to `false`.\n* Your application does not have handler mappings that can handle requests to `/cloudfoundryapplication/**`."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2023-20873 spring-boot-starter-web 2.2.2.RELEASE: org.springframework.boot","partialFingerprints":{"ruleIdLocationHash/v1":"f8adea409154fc527d1ac082097a0e387c1f71266a2a7ea536d31cb33a9deda5"}},{"message":{"text":"Apache log4j is vulnerable to a denial-of-service (DoS) when uncontrolled recursion occurs through a self-referencing lookup.  An attacker can trigger a DoS with malicious input data that generates a recursive lookup  and consequent application crash.\n\nSuccessful attacks require the attacker to have access to Thread Context Map (MDC) input, and for log4j configured with non-default pattern layout with a Context Lookup.\n\nOnly the log4j-core JAR file is impacted by this vulnerability. Applications using only the log4j-api JAR file without the log4j-core JAR file are not impacted.\n\nApache Log4j is the only Logging Services subproject affected by this vulnerability. Other projects like Log4net  are not impacted."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"BDSA-2021-3817 spring-boot-starter-web 2.2.2.RELEASE: org.springframework.boot","partialFingerprints":{"ruleIdLocationHash/v1":"3ce7141c710cbe921c9458529c1eb4cae1129cf10669c9f33336d60110340748"}},{"message":{"text":"Apache Log4j contains a remote code execution (RCE) vulnerability. This allows an attacker that has permissions to modify the logging configuration files to input a malicious JDBC Appender with a data source referencing a JDNI URI. This can then lead to RCE.\n\n**Note:** This vulnerability impacts log4j-core."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"BDSA-2021-3887 spring-boot-starter-web 2.2.2.RELEASE: org.springframework.boot","partialFingerprints":{"ruleIdLocationHash/v1":"d1410b84f73c5504192ac9de6084246a80c41bb3d0154c84fd7c184cd19c2ae1"}},{"message":{"text":"Spring Boot is vulnerable to privilege escalation due to a race condition which occurs during the creation of a temporary directory. A local attacker could create their own temporary directory by racing against Spring Boot and supply their own configuration files which would allow for the full takeover of the application."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2022-27772 spring-boot-starter-web 2.2.2.RELEASE: org.springframework.boot","partialFingerprints":{"ruleIdLocationHash/v1":"ad059110c98677cad89832cbdba2117f23af034521c949bb5a6da4a22452ddd7"}},{"message":{"text":"Spring Boot is vulnerable to denial-of-service (DoS) via the welcome page when used to serve an application behind a reverse proxy cache. This will cause users to continuously be served a 404 response, preventing standard application use.\n\n\n**Note:** Spring have provided the following guidance for vulnerable criteria. \nAn application is vulnerable if all of the following are true:\n\n- \"The application has Spring MVC auto-configuration enabled. This is the case by default if Spring MVC is on the classpath.\"\n- \"The application makes use of Spring Boot's welcome page support, either static or templated.\"\n- \"Your application is deployed behind a proxy which caches 404 responses.\"\n\nThe application is not vulnerable if any of the following are true:\n\n- \"Spring MVC auto-configuration is disabled. This is true if `WebMvcAutoConfiguration` is explicitly excluded, if Spring MVC is not on the classpath, or if `spring.main.web-application-type` is set to a value other than `SERVLET`.\"\n- \"The application does not use Spring Boot's welcome page support.\"\n- \"You do not have a proxy which caches 404 responses.\""},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2023-20883 spring-boot-starter-web 2.2.2.RELEASE: org.springframework.boot","partialFingerprints":{"ruleIdLocationHash/v1":"d5e397faaa4befb5d77056df0ecb9709104a57a0cbf6a65cfea5e3ceb19bcd89"}},{"message":{"text":"Spring Boot is vulnerable to denial-of-service (DoS). An unauthenticated user could trigger the vulnerability by providing specially crafted HTTP requests to a web metrics endpoint."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2023-34055 spring-boot-starter-web 2.2.2.RELEASE: org.springframework.boot","partialFingerprints":{"ruleIdLocationHash/v1":"64d9324523a7418f10fc6c9c1c3260599b2cbb74f0c57b90cc508474bbe343b4"}},{"message":{"text":"Apache Groovy is vulnerable to privilege escalation and information exposure due to inappropriate use of an insecure JDK method. A local attacker could exploit this vulnerability by supplying a system with maliciously crafted input."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2020-17521 groovy-xml 2.5.8: rest-assured 3.3.0: org.codehaus.groovy","partialFingerprints":{"ruleIdLocationHash/v1":"67c663f3c320387d5a2f314c58bb12c298b80357e1766e2ecddc8df10d744479"}},{"message":{"text":"Apache Log4j, as used in many popular services, is vulnerable to improperly allowing lightweight directory access protocol (LDAP) access via Java naming and directory interface (JNDI). A remote attacker able to supply the end application with specially crafted input that is then processed by the Log4j subcomponent could cause the execution of arbitrary Java code.\n\n**Note** \n\n- log4j-api packages by themselves do not contain the vulnerable functionality and are therefore unaffected. log4j-core packages and the upstream overarching source repository are affected.\n\n- A previously suggested mitigation of setting environment variable `LOG4J_FORMAT_MSG_NO_LOOKUPS=true` is not recommended. This mitigation has been proven inadequate against this vulnerability. \n\n- This vulnerability is partially fixed in [**2.15.0-rc2**](https://github.com/apache/logging-log4j2/releases/tag/log4j-2.15.0-rc2) by [this](https://github.com/apache/logging-log4j2/commit/001aaada7dab82c3c09cde5f8e14245dc9d8b454) commit and [this](https://github.com/apache/logging-log4j2/commit/bac0d8a35c7e354a0d3f706569116dff6c6bd658) commit. These fixes were deemed incomplete. See BDSA-2021-3779 (CVE-2021-45046) for more details.\n\nThis vulnerability is listed as exploitable by the Cybersecurity \u0026 Infrastructure Security Agency in their [Known Exploited Vulnerabilities Catalog](https://www.cisa.gov/known-exploited-vulnerabilities-catalog)."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"BDSA-2021-3731 spring-boot-starter-actuator 2.2.2.RELEASE: org.springframework.boot","partialFingerprints":{"ruleIdLocationHash/v1":"2211b8d47b0605bc031e8486866d7c9e442a05b63a29bbc3ef8eb50058ad2a60"}},{"message":{"text":"Spring Framework is vulnerable to a flaw in the access restrictions to the security sensitive `ClassLoader` property. The restrictions can be bypassed through alternative paths available with Java9 and later. An attacker can leverage this vulnerability to cause remote code execution (RCE).\n\n**Note** this issue exists because the restrictions that were introduced to prevent exploitation of BDSA-2010-0001 (CVE-2010-1622) can be bypassed on platforms where Java9 and later are in use.\n\nThis vulnerability is listed as exploitable by the Cybersecurity \u0026 Infrastructure Security Agency in their [Known Exploited Vulnerabilities Catalog](https://www.cisa.gov/known-exploited-vulnerabilities-catalog)."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2022-22965 spring-boot-starter-actuator 2.2.2.RELEASE: org.springframework.boot","partialFingerprints":{"ruleIdLocationHash/v1":"920067efd7ea49b470f14a1125fd591f0c5ca6ae8f0d72e6cf51a50d1703a42f"}},{"message":{"text":"Spring framework contains a security bypass vulnerability when `/**` is used as a pattern in Spring Security configuration with the `/cloudfoundryapplication/**` component. The potential for security bypass exists due to the mismatch in pattern matching between Spring Security and Cloud Foundry.\n\n**Note**: The vendor has stated in their [advisory](https://spring.io/security/cve-2023-20873) that this application is not vulnerable if any of the following is true:\n* The application is not deployed to Cloud Foundry.\n* You have disabled Cloud Foundry actuator endpoints with `management.cloudfoundry.enabled` set to `false`.\n* Your application does not have handler mappings that can handle requests to `/cloudfoundryapplication/**`."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2023-20873 spring-boot-starter-actuator 2.2.2.RELEASE: org.springframework.boot","partialFingerprints":{"ruleIdLocationHash/v1":"668af6efcd0b28c9d7316ce28696d771e35975e3a6a4b326b34fb78602eaeaf3"}},{"message":{"text":"Apache log4j is vulnerable to a denial-of-service (DoS) when uncontrolled recursion occurs through a self-referencing lookup.  An attacker can trigger a DoS with malicious input data that generates a recursive lookup  and consequent application crash.\n\nSuccessful attacks require the attacker to have access to Thread Context Map (MDC) input, and for log4j configured with non-default pattern layout with a Context Lookup.\n\nOnly the log4j-core JAR file is impacted by this vulnerability. Applications using only the log4j-api JAR file without the log4j-core JAR file are not impacted.\n\nApache Log4j is the only Logging Services subproject affected by this vulnerability. Other projects like Log4net  are not impacted."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"BDSA-2021-3817 spring-boot-starter-actuator 2.2.2.RELEASE: org.springframework.boot","partialFingerprints":{"ruleIdLocationHash/v1":"e3526f7c03bf593b3ecb499f7694e28192e98084da220f81510d8605b8ce1fd4"}},{"message":{"text":"Apache Log4j contains a remote code execution (RCE) vulnerability. This allows an attacker that has permissions to modify the logging configuration files to input a malicious JDBC Appender with a data source referencing a JDNI URI. This can then lead to RCE.\n\n**Note:** This vulnerability impacts log4j-core."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"BDSA-2021-3887 spring-boot-starter-actuator 2.2.2.RELEASE: org.springframework.boot","partialFingerprints":{"ruleIdLocationHash/v1":"406fa1a2eff2af3558f27520b03c92cbf2075156d8f73f64961d9e99c4268a1f"}},{"message":{"text":"Spring Boot is vulnerable to privilege escalation due to a race condition which occurs during the creation of a temporary directory. A local attacker could create their own temporary directory by racing against Spring Boot and supply their own configuration files which would allow for the full takeover of the application."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2022-27772 spring-boot-starter-actuator 2.2.2.RELEASE: org.springframework.boot","partialFingerprints":{"ruleIdLocationHash/v1":"7f9da27e168fd9438189d645632e47ba1e810fc365e71e75c494014f4f6edabd"}},{"message":{"text":"Spring Boot is vulnerable to denial-of-service (DoS) via the welcome page when used to serve an application behind a reverse proxy cache. This will cause users to continuously be served a 404 response, preventing standard application use.\n\n\n**Note:** Spring have provided the following guidance for vulnerable criteria. \nAn application is vulnerable if all of the following are true:\n\n- \"The application has Spring MVC auto-configuration enabled. This is the case by default if Spring MVC is on the classpath.\"\n- \"The application makes use of Spring Boot's welcome page support, either static or templated.\"\n- \"Your application is deployed behind a proxy which caches 404 responses.\"\n\nThe application is not vulnerable if any of the following are true:\n\n- \"Spring MVC auto-configuration is disabled. This is true if `WebMvcAutoConfiguration` is explicitly excluded, if Spring MVC is not on the classpath, or if `spring.main.web-application-type` is set to a value other than `SERVLET`.\"\n- \"The application does not use Spring Boot's welcome page support.\"\n- \"You do not have a proxy which caches 404 responses.\""},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2023-20883 spring-boot-starter-actuator 2.2.2.RELEASE: org.springframework.boot","partialFingerprints":{"ruleIdLocationHash/v1":"e3a2c9c00ecbd3d139f7c7231d46f10d71b887f4d64e1d4b1cd4b84c34b22bf7"}},{"message":{"text":"Spring Boot is vulnerable to denial-of-service (DoS). An unauthenticated user could trigger the vulnerability by providing specially crafted HTTP requests to a web metrics endpoint."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"file://unknown-file"},"region":{"startLine":1}}}],"ruleId":"CVE-2023-34055 spring-boot-starter-actuator 2.2.2.RELEASE: org.springframework.boot","partialFingerprints":{"ruleIdLocationHash/v1":"46d3a30aef08f8255ef5b1e274287ba1e67e64e5c67f38b0ab25625e86b46c8a"}},{"message":{"text":"[See in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/issues/B5EFEB94C10E39E5B6378880985126F2?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026filter=issueType%3Alocalized-name%3DOmitted%20Break%20Statement%20in%20Switch%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dwebgoat-container%2Ftarget%2Fclasses%2Fstatic%2Fjs%2Flibs%2Face.js)\n\nMissing break statement between cases in switch statement"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"webgoat-container/target/classes/static/js/libs/ace.js"},"region":{"startLine":6785}}}],"ruleId":"missing_break:logic_error|javascript","partialFingerprints":{"ruleIdLocationHash/v1":"9555ca401e8bb62ab74c9dbcd58335d9cdff7c01af11c4eff1494eea3586740c"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-container/target/classes/static/js/libs/ace.js"},"region":{"startLine":6785}},"message":{"text":"The case for \"this.$behaviours\" is not terminated by a \"break\" statement."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-container/target/classes/static/js/libs/ace.js"},"region":{"startLine":6787}},"message":{"text":"The above case falls through to this one."}}}]}]}]},{"message":{"text":"[See in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/issues/38DF728BFECE32A324D5F85AA096D8AD?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026filter=issueType%3Alocalized-name%3DUse%20of%20a%20One-Way%20Hash%20with%20a%20Predictable%20Salt%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dwebgoat-lessons%2Fcrypto%2Fsrc%2Fmain%2Fjava%2Forg%2Fowasp%2Fwebgoat%2Fcrypto%2FHashingAssignment.java)\n\nHashing a password without using a random and unique salt as part of the input."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/crypto/src/main/java/org/owasp/webgoat/crypto/HashingAssignment.java"},"region":{"startLine":75}}}],"ruleId":"weak_password_hash:weak_salt|java","partialFingerprints":{"ruleIdLocationHash/v1":"4795f2a647c49b45999804edeaf73bc8cafa7f9cfee59667f3bdb7d0a6acc641"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/crypto/src/main/java/org/owasp/webgoat/crypto/EncodingAssignment.java"},"region":{"startLine":48}},"message":{"text":"Calling at a later point \"getBasicAuth\". This call taints \"SECRETS\"."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/crypto/src/main/java/org/owasp/webgoat/crypto/HashingAssignment.java"},"region":{"startLine":70}},"message":{"text":"Hashing a password without using a salt as part of the input. If password hashes leak to an attacker, they can use readily-available hash lookup tables to recover large numbers of passwords with little effort."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/crypto/src/main/java/org/owasp/webgoat/crypto/HashingAssignment.java"},"region":{"startLine":74}},"message":{"text":"Assigning: \"secret\" = \"org.owasp.webgoat.crypto.HashingAssignment.SECRETS[(new java.util.Random()).nextInt(org.owasp.webgoat.crypto.HashingAssignment.SECRETS.length)]\". Now \"secret\" is equal to \"SECRETS\"."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/crypto/src/main/java/org/owasp/webgoat/crypto/HashingAssignment.java"},"region":{"startLine":75}},"message":{"text":"Calling \"getHash\". This call uses \"secret\" for sensitive computation."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/crypto/src/main/java/org/owasp/webgoat/crypto/HashingAssignment.java"},"region":{"startLine":75}},"message":{"text":"The recommended method of hashing sensitive password data is to generate a random sequence of bytes (a \"salt\") for each password to hash, hash the password and the salt with an adaptive hash function such as bcrypt, scrypt, and PBKDF2 (Password-Based Key Derivation Function 2), and then store the hash and the salt for subsequent password checks."}}}]}]}]},{"message":{"text":"[See in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/issues/C0030A7E497440BFB5A883DEFF71665A?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026filter=issueType%3Alocalized-name%3DSQL%20Injection%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dwebgoat-lessons%2Fsql-injection%2Fsrc%2Fmain%2Fjava%2Forg%2Fowasp%2Fwebgoat%2Fsql_injection%2Fintroduction%2FSqlInjectionLesson4.java)\n\nUntrusted user-supplied data is inserted into a SQL statement without adequate validation, escaping, or filtering."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson4.java"},"region":{"startLine":53}}}],"ruleId":"sql_injection:sink|java","partialFingerprints":{"ruleIdLocationHash/v1":"090979cb94b7da042c011b945bc30a37544c22ef644d7bcb3031f5ad313a9f36"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson4.java"},"region":{"startLine":52}},"message":{"text":"\"completed\" is an entry point function."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson4.java"},"region":{"startLine":52}},"message":{"text":"The \"query\" is tainted."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson4.java"},"region":{"startLine":53}},"message":{"text":"Calling \"injectableQuery\". Passing the tainted value \"query\" to the SQL API may allow an attacker to inject SQL. (The virtual call resolves to \"org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson4.injectableQuery(java.lang.String)\".)"}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson4.java"},"region":{"startLine":53}},"message":{"text":"Use one of the following methods:\n* Use a query-preparation API to safely construct the SQL query containing user-supplied values.\n* Only concatenate a user-supplied value into a query if it has been checked against a whitelist of safe string values, or if it must be a Boolean or numeric type.\n"}}}]}]}]},{"message":{"text":"[See in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/issues/DCB08B882F99C6E7FF9F7E9479CD758F?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026filter=issueType%3Alocalized-name%3DImproper%20Access%20Control%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dgoat-with-reverseproxy.yaml)\n\nThe Docker container is not configured to drop all default capabilities and then add only required one. Thus the container may be granted excessive privileges which violate the least privilege principle."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"goat-with-reverseproxy.yaml"},"region":{"startLine":6}}}],"ruleId":"sigma.least_privilege_violation:docker_compose|text","partialFingerprints":{"ruleIdLocationHash/v1":"136d9e64c8eff51c85ab05650c7815d8e9178a956f351f40ba45744bdac00c32"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"goat-with-reverseproxy.yaml"},"region":{"startLine":6}},"message":{"text":"The Docker container is not configured to drop all default capabilities and then add only required one. Thus the container may be granted excessive privileges which violate the least privilege principle."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"goat-with-reverseproxy.yaml"},"region":{"startLine":6}},"message":{"text":"Remove all the default capabilities from the list of capabilities by setting the `cap_drop` value to `ALL` and then add only specific capabilities needed by a container."}}}]}]}]},{"message":{"text":"[See in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/issues/6C40615D00770C6FB6386B58FC2AE43E?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026filter=issueType%3Alocalized-name%3DUnreachable%252C%20Unused%20or%20Dead%20Code%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dwebgoat-container%2Ftarget%2Fclasses%2Fstatic%2Fjs%2Flibs%2Face.js)\n\nAn expression is useless because it has no side effects and its result is ignored."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"webgoat-container/target/classes/static/js/libs/ace.js"},"region":{"startLine":11090}}}],"ruleId":"no_effect|javascript","partialFingerprints":{"ruleIdLocationHash/v1":"5e8e25479c35488d4b6d144360e776ebe4b92d15e9362f3e3a4fdd9fe1f4282b"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-container/target/classes/static/js/libs/ace.js"},"region":{"startLine":11090}},"message":{"text":"Reading variable \"split\" and discarding the result. What was this code intended to accomplish?"}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-container/target/classes/static/js/libs/ace.js"},"region":{"startLine":11090}},"message":{"text":"Perhaps this code is incomplete or mistyped in some way."}}}]}]}]},{"message":{"text":"[See in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/issues/C2137BCAD8B7CF87B9B2BB0C9623B5B7?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026filter=issueType%3Alocalized-name%3DAssignment%20to%20Variable%20without%20Use%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dwebgoat-integration-tests%2Fsrc%2Ftest%2Fjava%2Forg%2Fowasp%2Fwebgoat%2FJWTLessonTest.java)\n\nThis instruction assigns a value to a local variable, but the value is not read or used in any subsequent instruction. (\u003ca href=\"/doc/en/spotbugs/sb_checker_ref.html#FB.DLS_DEAD_LOCAL_STORE\" target=\"_blank\"\u003eFrom SpotBugs description\u003c/a\u003e)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"webgoat-integration-tests/src/test/java/org/owasp/webgoat/JWTLessonTest.java"},"region":{"startLine":68}}}],"ruleId":"FB.DLS_DEAD_LOCAL_STORE|java","partialFingerprints":{"ruleIdLocationHash/v1":"b4963440501133a48acc803b4d613d800355156765a84a98d6b73a5cf823e9f9"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-integration-tests/src/test/java/org/owasp/webgoat/JWTLessonTest.java"},"region":{"startLine":68}},"message":{"text":"Dead store to $L6."}}}]}]}]},{"message":{"text":"[See in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/issues/3DE261F5111892B93F16EFB7B13D2C45?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026filter=issueType%3Alocalized-name%3DImproper%20Verification%20of%20Cryptographic%20Signature%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dwebgoat-lessons%2Fjwt%2Fsrc%2Fmain%2Fjava%2Forg%2Fowasp%2Fwebgoat%2Fjwt%2FJWTVotesEndpoint.java)\n\nThe application uses the `io.jsonwebtoken.JwtParser` package's `parse()`, `parsePlaintextJwt()`, or `parseClaimsJwt()` method to parse a JWT without first verifying the token's signature, allowing an attacker to forge the token claims and perform attacks such as impersonating other users."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/jwt/src/main/java/org/owasp/webgoat/jwt/JWTVotesEndpoint.java"},"region":{"startLine":163}}}],"ruleId":"sigma.jwt_untrusted_decode:io_jsonwebtoken|java","partialFingerprints":{"ruleIdLocationHash/v1":"ce1a52786eb6b12102b673cba51c5a82b56fd3cd0c70fcd2b7e8fee9748e2f88"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/jwt/src/main/java/org/owasp/webgoat/jwt/JWTVotesEndpoint.java"},"region":{"startLine":163}},"message":{"text":"The application uses the `io.jsonwebtoken.JwtParser` package's `parse()`, `parsePlaintextJwt()`, or `parseClaimsJwt()` method to parse a JWT without first verifying the token's signature, allowing an attacker to forge the token claims and perform attacks such as impersonating other users."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/jwt/src/main/java/org/owasp/webgoat/jwt/JWTVotesEndpoint.java"},"region":{"startLine":163}},"message":{"text":"Modify the application to use `parseClaimsJws()` or `parsePlaintextJws()` instead, since these methods will automatically verify the token signature."}}}]}]}]},{"message":{"text":"[See in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/issues/D074B691812C8B396C64437CFB213070?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026filter=issueType%3Alocalized-name%3DSQL%20Injection%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dwebgoat-lessons%2Fsql-injection%2Fsrc%2Fmain%2Fjava%2Forg%2Fowasp%2Fwebgoat%2Fsql_injection%2Fintroduction%2FSqlInjectionLesson2.java)\n\nUntrusted user-supplied data is inserted into a SQL statement without adequate validation, escaping, or filtering."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson2.java"},"region":{"startLine":56}}}],"ruleId":"sql_injection:sink|java","partialFingerprints":{"ruleIdLocationHash/v1":"0b6535bfb17c152bc0b473ad610115f4d368e22bae2060f58e498d53ba101d2e"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson2.java"},"region":{"startLine":55}},"message":{"text":"\"completed\" is an entry point function."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson2.java"},"region":{"startLine":55}},"message":{"text":"The \"query\" is tainted."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson2.java"},"region":{"startLine":56}},"message":{"text":"Calling \"injectableQuery\". Passing the tainted value \"query\" to the SQL API may allow an attacker to inject SQL. (The virtual call resolves to \"org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson2.injectableQuery(java.lang.String)\".)"}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson2.java"},"region":{"startLine":56}},"message":{"text":"Use one of the following methods:\n* Use a query-preparation API to safely construct the SQL query containing user-supplied values.\n* Only concatenate a user-supplied value into a query if it has been checked against a whitelist of safe string values, or if it must be a Boolean or numeric type.\n"}}}]}]}]},{"message":{"text":"[See in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/issues/0B81899E6D4588FF106044B8AA90F5C4?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026filter=issueType%3Alocalized-name%3DImproper%20Privilege%20Management%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dgoat-with-reverseproxy.yaml)\n\nThe Docker Compose file sets the `no-new-privileges` attribute to `false` or omits it as the default value is `false`. This doesn't restrict the container from acquiring additional privileges via SUID or SGID bits. This allows privilege escalation, meaning a user can set the security context of the container and can perform root-level operations."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"goat-with-reverseproxy.yaml"},"region":{"startLine":36}}}],"ruleId":"sigma.container_privilege_escalation_allowed:docker_compose|text","partialFingerprints":{"ruleIdLocationHash/v1":"f6184ac34ea9cb2dcc518f51d60ee020840c43c6ab5a359d674d81a1a5e1fdb1"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"goat-with-reverseproxy.yaml"},"region":{"startLine":36}},"message":{"text":"The Docker Compose file sets the `no-new-privileges` attribute to `false` or omits it as the default value is `false`. This doesn't restrict the container from acquiring additional privileges via SUID or SGID bits. This allows privilege escalation, meaning a user can set the security context of the container and can perform root-level operations."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"goat-with-reverseproxy.yaml"},"region":{"startLine":36}},"message":{"text":"Disable container privilege escalation by explicitly setting `no-new-privileges` to `true`."}}}]}]}]},{"message":{"text":"[See in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/issues/50D9112CCFBE7F06ED4F1E8C3EB66FDC?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026filter=issueType%3Alocalized-name%3DServer-Side%20Request%20Forgery%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dwebgoat-lessons%2Fpassword-reset%2Fsrc%2Fmain%2Fjava%2Forg%2Fowasp%2Fwebgoat%2Fpassword_reset%2FResetLinkAssignmentForgotPassword.java)\n\nA user-controllable string is used to specify a URL that is used in a connection. An attacker can modify the URL scheme to access a local file. An attacker can also mount a phishing attack by modifying the URL value to point to a malicious website."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/password-reset/src/main/java/org/owasp/webgoat/password_reset/ResetLinkAssignmentForgotPassword.java"},"region":{"startLine":66}}}],"ruleId":"url_manipulation:bad_web_uri|java","partialFingerprints":{"ruleIdLocationHash/v1":"c40457b0b0eb285a1bac11723ec0781802340a93abd7eaa7084cab8ff9ebace8"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/password-reset/src/main/java/org/owasp/webgoat/password_reset/ResetLinkAssignmentForgotPassword.java"},"region":{"startLine":59}},"message":{"text":"\"sendPasswordResetLink\" is an entry point function."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/password-reset/src/main/java/org/owasp/webgoat/password_reset/ResetLinkAssignmentForgotPassword.java"},"region":{"startLine":62}},"message":{"text":"Calling \"getHeader\". Reading data from an HTTP header, which is considered tainted (The virtual call resolves to \"javax.servlet.http.HttpServletRequest.getHeader(java.lang.String)\".)"}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/password-reset/src/main/java/org/owasp/webgoat/password_reset/ResetLinkAssignmentForgotPassword.java"},"region":{"startLine":62}},"message":{"text":"Assigning: \"host\" = \"request.getHeader(\"host\")\"."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/password-reset/src/main/java/org/owasp/webgoat/password_reset/ResetLinkAssignmentForgotPassword.java"},"region":{"startLine":66}},"message":{"text":"Calling \"fakeClickingLinkEmail\". This call uses \"host\" for sensitive computation."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/password-reset/src/main/java/org/owasp/webgoat/password_reset/ResetLinkAssignmentForgotPassword.java"},"region":{"startLine":66}},"message":{"text":"URL manipulation vulnerabilities can be addressed by proper input validation. Allow listing the allowed scheme and authority, and deny listing characters that allow unsafe path traversal in the path and query parts of the URL can improve security."}}}]}]}]},{"message":{"text":"[See in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/issues/6656671B93AEB75A3955EC203FD0D7F8?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026filter=issueType%3Alocalized-name%3DMissing%20Synchronization%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dwebgoat-container%2Fsrc%2Fmain%2Fjava%2Forg%2Fowasp%2Fwebgoat%2Fservice%2FLabelDebugService.java)\n\nAttempt to write a shared variable without holding a lock."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"webgoat-container/src/main/java/org/owasp/webgoat/service/LabelDebugService.java"},"region":{"startLine":87}}}],"ruleId":"unlocked_access:unlocked_write|java","partialFingerprints":{"ruleIdLocationHash/v1":"a41331d3b19a195853391e46b416897084a5c3ee8660341e7b883960feba01ba"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-container/src/main/java/org/owasp/webgoat/service/LabelDebugService.java"},"region":{"startLine":55}},"message":{"text":"\"org.owasp.webgoat.service.LabelDebugService\" is thread-shared because it is annotated with \"Controller\"."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-container/src/main/java/org/owasp/webgoat/service/LabelDebugService.java"},"region":{"startLine":84}},"message":{"text":"\"setDebuggingStatus\" is an entry point because it is annotated with \"RequestMapping\"."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-container/src/main/java/org/owasp/webgoat/service/LabelDebugService.java"},"region":{"startLine":87}},"message":{"text":"\"this\" is thread-shared because it has type \"org.owasp.webgoat.service.LabelDebugService\"."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-container/src/main/java/org/owasp/webgoat/service/LabelDebugService.java"},"region":{"startLine":87}},"message":{"text":"Thread-shared \"labelDebugger\" is modified in a concurrent context without any synchronization."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-container/src/main/java/org/owasp/webgoat/service/LabelDebugService.java"},"region":{"startLine":87}},"message":{"text":"To avoid data races, make the data thread-local, or add locking to all the concurrent accesses to the data, including the reads."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-container/src/main/java/org/owasp/webgoat/service/LabelDebugService.java"},"region":{"startLine":87}},"message":{"text":"\"labelDebugger\" is modified in call to \"setEnabled\"."}}}]}]}]},{"message":{"text":"[See in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/issues/013D323B7BB054C52E643D4D83F6619C?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026filter=issueType%3Alocalized-name%3DPI:%20Do%20not%20reuse%20public%20identifiers%20from%20Java%20Standard%20Library%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dwebgoat-container%2Fsrc%2Fmain%2Fjava%2Forg%2Fowasp%2Fwebgoat%2Fi18n%2FMessages.java)\n\nIt's essential to avoid reusing public identifiers from the Java Standard Library as class names. (\u003ca href=\"/doc/en/spotbugs/sb_checker_ref.html#FB.PI_DO_NOT_REUSE_PUBLIC_IDENTIFIERS_CLASS_NAMES\" target=\"_blank\"\u003eFrom SpotBugs description\u003c/a\u003e)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"webgoat-container/src/main/java/org/owasp/webgoat/i18n/Messages.java"},"region":{"startLine":39}}}],"ruleId":"FB.PI_DO_NOT_REUSE_PUBLIC_IDENTIFIERS_CLASS_NAMES|java","partialFingerprints":{"ruleIdLocationHash/v1":"785f9697b1db396bb19d5937b7f01da0009ab30cf630717de27d0f2a21ce07bf"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-container/src/main/java/org/owasp/webgoat/i18n/Messages.java"},"region":{"startLine":39}},"message":{"text":"Class name ?\u003e?1/1??? in source file ?\u003e?2/1??? shadows the publicly available identifier from the Java Standard Library."}}}]}]}]},{"message":{"text":"[See in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/issues/B741155F429842906B4CB94DAAB2AD93?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026filter=issueType%3Alocalized-name%3DCross-site%20Scripting%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dwebgoat-lessons%2Fjwt%2Fsrc%2Fmain%2Fjava%2Forg%2Fowasp%2Fwebgoat%2Fjwt%2FJWTFinalEndpoint.java)\n\nUntrusted user-supplied data is inserted into a context that can execute JavaScript without adequate validation, escaping, or filtering."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/jwt/src/main/java/org/owasp/webgoat/jwt/JWTFinalEndpoint.java"},"region":{"startLine":138}}}],"ruleId":"xss|java","partialFingerprints":{"ruleIdLocationHash/v1":"c864b369c73191c4b576a61c9a009ad27f1659fb9e847b688f14772fc2e5cc4f"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/jwt/src/main/java/org/owasp/webgoat/jwt/JWTFinalEndpoint.java"},"region":{"startLine":132}},"message":{"text":"Entering this function as a framework entry point. Parameter \"jwtToken\" is tainted because it comes from an HTTP request."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/jwt/src/main/java/org/owasp/webgoat/jwt/JWTFinalEndpoint.java"},"region":{"startLine":132}},"message":{"text":"Parameter \"jwtToken\" receives the tainted data."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/jwt/src/main/java/org/owasp/webgoat/jwt/JWTFinalEndpoint.java"},"region":{"startLine":134}},"message":{"text":"Passing the tainted data through \"java.lang.String.substring(int, int)\"."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/jwt/src/main/java/org/owasp/webgoat/jwt/JWTFinalEndpoint.java"},"region":{"startLine":136}},"message":{"text":"Passing the tainted data through \"io.jsonwebtoken.impl.TextCodec.decodeToString(java.lang.String)\"."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/jwt/src/main/java/org/owasp/webgoat/jwt/JWTFinalEndpoint.java"},"region":{"startLine":138}},"message":{"text":"Passing the tainted data through \"java.lang.String.replace(java.lang.CharSequence, java.lang.CharSequence)\"."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/jwt/src/main/java/org/owasp/webgoat/jwt/JWTFinalEndpoint.java"},"region":{"startLine":138}},"message":{"text":"Concatenating \"jsonHeader.replace(\"\\\"\", \"\\\\\\\"\")\" to an HTML page allows cross-site scripting, because it was not properly sanitized for context HTML PCDATA block."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/jwt/src/main/java/org/owasp/webgoat/jwt/JWTFinalEndpoint.java"},"region":{"startLine":138}},"message":{"text":"Perform the following escaping in the following order to guard against cross-site scripting attacks with Java.\n\nFor example: \"Encode.forHtml(jsonHeader)\"\n\n\n* Use the \"Encode.forHtml\" function from the OWASP Java Encoder. This escapes the output for HTML.\n\n"}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/jwt/src/main/java/org/owasp/webgoat/jwt/JWTFinalEndpoint.java"},"region":{"startLine":138}},"message":{"text":"Printing to HTML output."}}}]}]}]},{"message":{"text":"[See in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/issues/4DBF6A405D208BC0D47B723BFC11218C?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026filter=issueType%3Alocalized-name%3DSQL%20Injection%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dwebgoat-lessons%2Fsql-injection%2Fsrc%2Fmain%2Fjava%2Forg%2Fowasp%2Fwebgoat%2Fsql_injection%2Fintroduction%2FSqlInjectionLesson5b.java)\n\nUntrusted user-supplied data is inserted into a SQL statement without adequate validation, escaping, or filtering."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson5b.java"},"region":{"startLine":52}}}],"ruleId":"sql_injection:sink|java","partialFingerprints":{"ruleIdLocationHash/v1":"999304cdc8a4bfe3976e1b8b47ee773398919c23cdaaf00ff94d7c009c641942"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson5b.java"},"region":{"startLine":51}},"message":{"text":"\"completed\" is an entry point function."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson5b.java"},"region":{"startLine":51}},"message":{"text":"The \"userid\" is tainted."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson5b.java"},"region":{"startLine":52}},"message":{"text":"Calling \"injectableQuery\". Passing the tainted value \"userid\" to the SQL API may allow an attacker to inject SQL. (The virtual call resolves to \"org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5b.injectableQuery(java.lang.String, java.lang.String)\".)"}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson5b.java"},"region":{"startLine":52}},"message":{"text":"Use one of the following methods:\n* Use a query-preparation API to safely construct the SQL query containing user-supplied values.\n* Only concatenate a user-supplied value into a query if it has been checked against a whitelist of safe string values, or if it must be a Boolean or numeric type.\n"}}}]}]}]},{"message":{"text":"[See in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/issues/D1AE9A7E0681113FE9B24FAD88D3C114?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026filter=issueType%3Alocalized-name%3DGeneration%20of%20Error%20Message%20Containing%20Sensitive%20Information%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dwebwolf%2Fsrc%2Fmain%2Fresources%2Fapplication-webwolf.properties)\n\nThe Spring Boot main application server is configured to allow stack traces to be displayed in an error page. The stack traces might contain sensitive information and should not be displayed."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"webwolf/src/main/resources/application-webwolf.properties"},"region":{"startLine":1}}}],"ruleId":"sigma.verbose_error_message:spring_boot_stacktrace_properties|text","partialFingerprints":{"ruleIdLocationHash/v1":"ef18c72b7c466cf3e8981d494f618dadc2bab81ece4b505490a56582528b35fa"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"webwolf/src/main/resources/application-webwolf.properties"},"region":{"startLine":1}},"message":{"text":"The Spring Boot main application server is configured to allow stack traces to be displayed in an error page. The stack traces might contain sensitive information and should not be displayed."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webwolf/src/main/resources/application-webwolf.properties"},"region":{"startLine":1}},"message":{"text":"Set `server.error.include-stacktrace` to `never` or omit it as the default value is `never`."}}}]}]}]},{"message":{"text":"[See in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/issues/3A37B6125B5105D9F08265DBDA92727A?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026filter=issueType%3Alocalized-name%3DDirectory%20Traversal%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dwebgoat-lessons%2Fpath-traversal%2Fsrc%2Fmain%2Fjava%2Forg%2Fowasp%2Fwebgoat%2Fpath_traversal%2FProfileUploadRetrieval.java)\n\nA user-controllable string is used as part or all of a filesystem path, filename, or URI (uniform resource identifier)."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/path-traversal/src/main/java/org/owasp/webgoat/path_traversal/ProfileUploadRetrieval.java"},"region":{"startLine":89}}}],"ruleId":"path_manipulation|java","partialFingerprints":{"ruleIdLocationHash/v1":"269c52115f435bf8bed0582557a29b1730e5874ec81ecd7e5ab68c38661a284a"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/path-traversal/src/main/java/org/owasp/webgoat/path_traversal/ProfileUploadRetrieval.java"},"region":{"startLine":75}},"message":{"text":"\"getProfilePicture\" is an entry point function."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/path-traversal/src/main/java/org/owasp/webgoat/path_traversal/ProfileUploadRetrieval.java"},"region":{"startLine":81}},"message":{"text":"Calling \"getParameter\". Reading data from an HTTP request, which is considered tainted (The virtual call resolves to \"javax.servlet.ServletRequest.getParameter(java.lang.String)\".)"}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/path-traversal/src/main/java/org/owasp/webgoat/path_traversal/ProfileUploadRetrieval.java"},"region":{"startLine":81}},"message":{"text":"Assigning: \"id\" = \"request.getParameter(\"id\")\"."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/path-traversal/src/main/java/org/owasp/webgoat/path_traversal/ProfileUploadRetrieval.java"},"region":{"startLine":82}},"message":{"text":"Creating a tainted string using \"(id == null) ? org.apache.commons.lang3.RandomUtils.nextInt(1, 11) : id\"."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/path-traversal/src/main/java/org/owasp/webgoat/path_traversal/ProfileUploadRetrieval.java"},"region":{"startLine":82}},"message":{"text":"Calling \"File\". This call assigns a tainted string to \"\u003cstorage from new\u003e\"."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/path-traversal/src/main/java/org/owasp/webgoat/path_traversal/ProfileUploadRetrieval.java"},"region":{"startLine":82}},"message":{"text":"Assigning: \"catPicture\" = \"new java.io.File(catPicturesDirectory, ((id == null) ? org.apache.commons.lang3.RandomUtils.nextInt(1, 11) : id) + \".jpg\")\"."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/path-traversal/src/main/java/org/owasp/webgoat/path_traversal/ProfileUploadRetrieval.java"},"region":{"startLine":89}},"message":{"text":"Passing \"catPicture\" to \"exists\"."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/path-traversal/src/main/java/org/owasp/webgoat/path_traversal/ProfileUploadRetrieval.java"},"region":{"startLine":89}},"message":{"text":"Constructing a path or URI using the tainted value in \"catPicture\". This may allow an attacker to access, modify, or test the existence of critical or sensitive files."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/path-traversal/src/main/java/org/owasp/webgoat/path_traversal/ProfileUploadRetrieval.java"},"region":{"startLine":89}},"message":{"text":"Path manipulation vulnerabilities can be addressed by proper input validation. Disallowing directory traversal characters (using a deny list) can improve the safety of the input, but the recommended approach is to restrict to a specific set of allowed characters (using an allow list). This should exclude absolute paths and upward directory traversal."}}}]}]}]},{"message":{"text":"[See in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/issues/BA97FDC1BA2831959C2E5B653D654FE7?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026filter=issueType%3Alocalized-name%3DSQL%20Injection%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dwebgoat-lessons%2Fsql-injection%2Fsrc%2Fmain%2Fjava%2Forg%2Fowasp%2Fwebgoat%2Fsql_injection%2Fintroduction%2FSqlInjectionLesson9.java)\n\nUntrusted user-supplied data is inserted into a SQL statement without adequate validation, escaping, or filtering."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson9.java"},"region":{"startLine":56}}}],"ruleId":"sql_injection:sink|java","partialFingerprints":{"ruleIdLocationHash/v1":"13e29b4c8b1d10d65bc613f60e9d72d55c84fc1d6a56c777dc63154a3f0983ff"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson9.java"},"region":{"startLine":55}},"message":{"text":"\"completed\" is an entry point function."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson9.java"},"region":{"startLine":55}},"message":{"text":"The \"name\" is tainted."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson9.java"},"region":{"startLine":56}},"message":{"text":"Calling \"injectableQueryIntegrity\". Passing the tainted value \"name\" to the SQL API may allow an attacker to inject SQL. (The virtual call resolves to \"org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson9.injectableQueryIntegrity(java.lang.String, java.lang.String)\".)"}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson9.java"},"region":{"startLine":56}},"message":{"text":"Use one of the following methods:\n* Use a query-preparation API to safely construct the SQL query containing user-supplied values.\n* Only concatenate a user-supplied value into a query if it has been checked against a whitelist of safe string values, or if it must be a Boolean or numeric type.\n"}}}]}]}]},{"message":{"text":"[See in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/issues/7CBD34ACDE7FD32CCDE967E42D2BEE72?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026filter=issueType%3Alocalized-name%3DUnreachable%252C%20Unused%20or%20Dead%20Code%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dwebgoat-container%2Ftarget%2Fclasses%2Fstatic%2Fjs%2Flibs%2Face.js)\n\nAn expression is useless because it has no side effects and its result is ignored."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"webgoat-container/target/classes/static/js/libs/ace.js"},"region":{"startLine":15272}}}],"ruleId":"no_effect|javascript","partialFingerprints":{"ruleIdLocationHash/v1":"f66146721d14e9383c5e773737af53bfc26ad18163cbb50349038777700aa149"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-container/target/classes/static/js/libs/ace.js"},"region":{"startLine":15272}},"message":{"text":"Discarding the result of operator \"==\" in \"point.bias == -1\". What was this code intended to accomplish?"}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-container/target/classes/static/js/libs/ace.js"},"region":{"startLine":15272}},"message":{"text":"Did you intend to make an assertion or assignment?"}}}]}]}]},{"message":{"text":"[See in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/issues/0101350AD6034E649369A1C063CD93D7?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026filter=issueType%3Alocalized-name%3DImproper%20Resource%20Shutdown%20or%20Release%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dwebgoat-lessons%2Fsql-injection%2Fsrc%2Fmain%2Fjava%2Forg%2Fowasp%2Fwebgoat%2Fsql_injection%2Fadvanced%2FSqlInjectionChallenge.java)\n\nLeak of a system resource"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/advanced/SqlInjectionChallenge.java"},"region":{"startLine":83}}}],"ruleId":"resource_leak|java","partialFingerprints":{"ruleIdLocationHash/v1":"be2b44837b98e06b024603b41f7b1a38925cb7da16c4f74b7c7833195e24331d"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/advanced/SqlInjectionChallenge.java"},"region":{"startLine":59}},"message":{"text":"Condition \"attackResult == null\", taking true branch."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/advanced/SqlInjectionChallenge.java"},"region":{"startLine":64}},"message":{"text":"A new resource is returned from allocation method \"createStatement\"."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/advanced/SqlInjectionChallenge.java"},"region":{"startLine":64}},"message":{"text":"Assigning: \"statement\" = resource returned from \"connection.createStatement()\"."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/advanced/SqlInjectionChallenge.java"},"region":{"startLine":65}},"message":{"text":"Resource \"statement\" is not closed or saved in \"executeQuery\"."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/advanced/SqlInjectionChallenge.java"},"region":{"startLine":67}},"message":{"text":"Condition \"resultSet.next()\", taking true branch."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/advanced/SqlInjectionChallenge.java"},"region":{"startLine":68}},"message":{"text":"Condition \"username_reg.contains(\"tom'\")\", taking true branch."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/advanced/SqlInjectionChallenge.java"},"region":{"startLine":70}},"message":{"text":"Falling through to end of if statement."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/advanced/SqlInjectionChallenge.java"},"region":{"startLine":73}},"message":{"text":"Falling through to end of if statement."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/advanced/SqlInjectionChallenge.java"},"region":{"startLine":83}},"message":{"text":"Variable \"statement\" going out of scope leaks the resource it refers to."}}}]}]}]},{"message":{"text":"[See in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/issues/2DDAA902E25660F62690F146F54DCF5F?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026filter=issueType%3Alocalized-name%3DImproper%20Resource%20Shutdown%20or%20Release%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dwebgoat-lessons%2Finsecure-deserialization%2Fsrc%2Fmain%2Fjava%2Forg%2Fdummy%2Finsecure%2Fframework%2FVulnerableTaskHolder.java)\n\nLeak of a system resource"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/insecure-deserialization/src/main/java/org/dummy/insecure/framework/VulnerableTaskHolder.java"},"region":{"startLine":66}}}],"ruleId":"resource_leak|java","partialFingerprints":{"ruleIdLocationHash/v1":"85747dc919d96f08efc2c0b54645297f81ee4058b92f4578d816d692558af5eb"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/insecure-deserialization/src/main/java/org/dummy/insecure/framework/VulnerableTaskHolder.java"},"region":{"startLine":46}},"message":{"text":"Condition \"requestedExecutionTime != null\", taking true branch."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/insecure-deserialization/src/main/java/org/dummy/insecure/framework/VulnerableTaskHolder.java"},"region":{"startLine":46}},"message":{"text":"Condition \"requestedExecutionTime.isBefore(java.time.LocalDateTime.now().minusMinutes(10))\", taking false branch."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/insecure-deserialization/src/main/java/org/dummy/insecure/framework/VulnerableTaskHolder.java"},"region":{"startLine":46}},"message":{"text":"Condition \"requestedExecutionTime.isAfter(java.time.LocalDateTime.now())\", taking false branch."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/insecure-deserialization/src/main/java/org/dummy/insecure/framework/VulnerableTaskHolder.java"},"region":{"startLine":55}},"message":{"text":"Condition \"taskAction.startsWith(\"sleep\")\", taking true branch."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/insecure-deserialization/src/main/java/org/dummy/insecure/framework/VulnerableTaskHolder.java"},"region":{"startLine":55}},"message":{"text":"Condition \"taskAction.length() \u003c 22\", taking true branch."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/insecure-deserialization/src/main/java/org/dummy/insecure/framework/VulnerableTaskHolder.java"},"region":{"startLine":60}},"message":{"text":"A new resource is returned from allocation method \"getInputStream\"."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/insecure-deserialization/src/main/java/org/dummy/insecure/framework/VulnerableTaskHolder.java"},"region":{"startLine":60}},"message":{"text":"Assigning: \"in\" = resource returned from \"new java.io.BufferedReader(new java.io.InputStreamReader(p.getInputStream()))\"."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/insecure-deserialization/src/main/java/org/dummy/insecure/framework/VulnerableTaskHolder.java"},"region":{"startLine":63}},"message":{"text":"Resource \"in\" is not closed or saved in \"readLine\"."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/insecure-deserialization/src/main/java/org/dummy/insecure/framework/VulnerableTaskHolder.java"},"region":{"startLine":63}},"message":{"text":"Condition \"(line = in.readLine()) != null\", taking false branch."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/insecure-deserialization/src/main/java/org/dummy/insecure/framework/VulnerableTaskHolder.java"},"region":{"startLine":66}},"message":{"text":"Variable \"in\" going out of scope leaks the resource it refers to."}}}]}]}]},{"message":{"text":"[See in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/issues/CA23406479137527BB8585EC6C0EFD0C?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026filter=issueType%3Alocalized-name%3DCleartext%20Storage%20of%20Sensitive%20Information%20in%20GUI%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dwebgoat-lessons%2Fjwt%2Fsrc%2Fmain%2Fjava%2Forg%2Fowasp%2Fwebgoat%2Fjwt%2FJWTRefreshEndpoint.java)\n\nDisplaying sensitive data in the user interface."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/jwt/src/main/java/org/owasp/webgoat/jwt/JWTRefreshEndpoint.java"},"region":{"startLine":95}}}],"ruleId":"sensitive_data_leak:cleartext_in_gui|java","partialFingerprints":{"ruleIdLocationHash/v1":"d353b801ecd84e5eae09ec3537560f6b00e276ad542062d6570d585f5fcd864d"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/jwt/src/main/java/org/owasp/webgoat/jwt/JWTRefreshEndpoint.java"},"region":{"startLine":86}},"message":{"text":"\"checkout\" is an entry point function."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/jwt/src/main/java/org/owasp/webgoat/jwt/JWTRefreshEndpoint.java"},"region":{"startLine":95}},"message":{"text":"Calling \"build\". This call stores sensitive data in \"(\u003creturn value\u003e).assignment\". (The virtual call resolves to \"org.owasp.webgoat.assignments.AttackResult.AttackResultBuilder.build()\".)"}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/jwt/src/main/java/org/owasp/webgoat/jwt/JWTRefreshEndpoint.java"},"region":{"startLine":95}},"message":{"text":"Calling \"ok\". This shows the sensitive data \"success(this).build()\" in a user interface. It may be exposed to unintended individuals."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/jwt/src/main/java/org/owasp/webgoat/jwt/JWTRefreshEndpoint.java"},"region":{"startLine":95}},"message":{"text":"Do not leak this data to a user interface."}}}]}]}]},{"message":{"text":"[See in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/issues/8AC0941C16DB92BB1A9425AF7BE264C4?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026filter=issueType%3Alocalized-name%3DDirectory%20Traversal%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dwebgoat-lessons%2Fpath-traversal%2Fsrc%2Fmain%2Fjava%2Forg%2Fowasp%2Fwebgoat%2Fpath_traversal%2FProfileUploadRetrieval.java)\n\nA user-controllable string is used as part or all of a filesystem path, filename, or URI (uniform resource identifier)."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/path-traversal/src/main/java/org/owasp/webgoat/path_traversal/ProfileUploadRetrieval.java"},"region":{"startLine":95}}}],"ruleId":"path_manipulation|java","partialFingerprints":{"ruleIdLocationHash/v1":"9af5794eedd87704179f416d76b00428ea5c9f1d7854c1dd0c4e0b2a235c2603"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/path-traversal/src/main/java/org/owasp/webgoat/path_traversal/ProfileUploadRetrieval.java"},"region":{"startLine":75}},"message":{"text":"\"getProfilePicture\" is an entry point function."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/path-traversal/src/main/java/org/owasp/webgoat/path_traversal/ProfileUploadRetrieval.java"},"region":{"startLine":81}},"message":{"text":"Calling \"getParameter\". Reading data from an HTTP request, which is considered tainted (The virtual call resolves to \"javax.servlet.ServletRequest.getParameter(java.lang.String)\".)"}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/path-traversal/src/main/java/org/owasp/webgoat/path_traversal/ProfileUploadRetrieval.java"},"region":{"startLine":81}},"message":{"text":"Assigning: \"id\" = \"request.getParameter(\"id\")\"."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/path-traversal/src/main/java/org/owasp/webgoat/path_traversal/ProfileUploadRetrieval.java"},"region":{"startLine":82}},"message":{"text":"Creating a tainted string using \"(id == null) ? org.apache.commons.lang3.RandomUtils.nextInt(1, 11) : id\"."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/path-traversal/src/main/java/org/owasp/webgoat/path_traversal/ProfileUploadRetrieval.java"},"region":{"startLine":82}},"message":{"text":"Calling \"File\". This call assigns a tainted string to \"\u003cstorage from new\u003e\"."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/path-traversal/src/main/java/org/owasp/webgoat/path_traversal/ProfileUploadRetrieval.java"},"region":{"startLine":82}},"message":{"text":"Assigning: \"catPicture\" = \"new java.io.File(catPicturesDirectory, ((id == null) ? org.apache.commons.lang3.RandomUtils.nextInt(1, 11) : id) + \".jpg\")\"."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/path-traversal/src/main/java/org/owasp/webgoat/path_traversal/ProfileUploadRetrieval.java"},"region":{"startLine":95}},"message":{"text":"Calling \"getParentFile\". This call assigns \"catPicture\" to \"\u003creturn value\u003e\". Now \"\u003creturn value\u003e\" is tainted. (The virtual call resolves to \"java.io.File.getParentFile()\".)"}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/path-traversal/src/main/java/org/owasp/webgoat/path_traversal/ProfileUploadRetrieval.java"},"region":{"startLine":95}},"message":{"text":"Passing \"catPicture.getParentFile()\" to \"listFiles\"."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/path-traversal/src/main/java/org/owasp/webgoat/path_traversal/ProfileUploadRetrieval.java"},"region":{"startLine":95}},"message":{"text":"Constructing a path or URI using the tainted value in \"catPicture.getParentFile()\". This may allow an attacker to access, modify, or test the existence of critical or sensitive files."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/path-traversal/src/main/java/org/owasp/webgoat/path_traversal/ProfileUploadRetrieval.java"},"region":{"startLine":95}},"message":{"text":"Path manipulation vulnerabilities can be addressed by proper input validation. Disallowing directory traversal characters (using a deny list) can improve the safety of the input, but the recommended approach is to restrict to a specific set of allowed characters (using an allow list). This should exclude absolute paths and upward directory traversal."}}}]}]}]},{"message":{"text":"[See in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/issues/6AD899D520CF690D58630927473B7A28?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026filter=issueType%3Alocalized-name%3DDm:%20Dubious%20method%20used%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dwebgoat-integration-tests%2Fsrc%2Ftest%2Fjava%2Forg%2Fowasp%2Fwebgoat%2FJWTLessonTest.java)\n\nFound a call to a method which will perform a byte to String (or String to byte) conversion, and will assume that the default platform encoding is suitable. (\u003ca href=\"/doc/en/spotbugs/sb_checker_ref.html#FB.DM_DEFAULT_ENCODING\" target=\"_blank\"\u003eFrom SpotBugs description\u003c/a\u003e)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"webgoat-integration-tests/src/test/java/org/owasp/webgoat/JWTLessonTest.java"},"region":{"startLine":112}}}],"ruleId":"FB.DM_DEFAULT_ENCODING|java","partialFingerprints":{"ruleIdLocationHash/v1":"6eaee5d337e35ade077818ad77518c848363079879ee32fe66f7eddec866040c"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-integration-tests/src/test/java/org/owasp/webgoat/JWTLessonTest.java"},"region":{"startLine":112}},"message":{"text":"Found reliance on default encoding: new String(byte[])."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-integration-tests/src/test/java/org/owasp/webgoat/JWTLessonTest.java"},"region":{"startLine":115}},"message":{"text":"Another occurrence here"}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-integration-tests/src/test/java/org/owasp/webgoat/JWTLessonTest.java"},"region":{"startLine":124}},"message":{"text":"Another occurrence here"}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-integration-tests/src/test/java/org/owasp/webgoat/JWTLessonTest.java"},"region":{"startLine":126}},"message":{"text":"Another occurrence here"}}}]}]}]},{"message":{"text":"[See in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/issues/B496098D3ECB3ABA4FFD2F76DDBE8ECC?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026filter=issueType%3Alocalized-name%3DInclusion%20of%20Functionality%20from%20Untrusted%20Control%20Sphere%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Ddocker-compose.yml)\n\nThe Docker Compose file does not explicitly set `image` attribute with a specific stable version. Pinning the version of the base image will make the container being built more predictable. Relying on the latest version may silently inherit newer packages, which in the best case may affect application reliability and in the worst case may introduce vulnerabilities."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"docker-compose.yml"},"region":{"startLine":17}}}],"ruleId":"sigma.unspecified_software_version:docker_compose|text","partialFingerprints":{"ruleIdLocationHash/v1":"79b550688d5d06a76a37384b92cb1be069fc568cebc0a21201dca3f7a104aee9"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"docker-compose.yml"},"region":{"startLine":17}},"message":{"text":"The Docker Compose file does not explicitly set `image` attribute with a specific stable version. Pinning the version of the base image will make the container being built more predictable. Relying on the latest version may silently inherit newer packages, which in the best case may affect application reliability and in the worst case may introduce vulnerabilities."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"docker-compose.yml"},"region":{"startLine":17}},"message":{"text":"Explicitly set the `image` attribute to a specific stable version."}}}]}]}]},{"message":{"text":"[See in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/issues/531ACA507204DCC5BDCECEAF6ECDB30C?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026filter=issueType%3Alocalized-name%3DServer-Side%20Request%20Forgery%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dwebgoat-lessons%2Fpath-traversal%2Fsrc%2Fmain%2Fjava%2Forg%2Fowasp%2Fwebgoat%2Fpath_traversal%2FProfileUploadRetrieval.java)\n\nA user-controllable string is used to specify a URL that is used in a connection. An attacker can modify the URL scheme to access a local file. An attacker can also mount a phishing attack by modifying the URL value to point to a malicious website."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/path-traversal/src/main/java/org/owasp/webgoat/path_traversal/ProfileUploadRetrieval.java"},"region":{"startLine":90}}}],"ruleId":"url_manipulation:bad_web_uri|java","partialFingerprints":{"ruleIdLocationHash/v1":"1c0be62e4040174e70fececbabcf0ec3119c1fd6adc212f8b0a26b0603bfbc23"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/path-traversal/src/main/java/org/owasp/webgoat/path_traversal/ProfileUploadRetrieval.java"},"region":{"startLine":75}},"message":{"text":"\"getProfilePicture\" is an entry point function."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/path-traversal/src/main/java/org/owasp/webgoat/path_traversal/ProfileUploadRetrieval.java"},"region":{"startLine":81}},"message":{"text":"Calling \"getParameter\". Reading data from an HTTP request, which is considered tainted (The virtual call resolves to \"javax.servlet.ServletRequest.getParameter(java.lang.String)\".)"}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/path-traversal/src/main/java/org/owasp/webgoat/path_traversal/ProfileUploadRetrieval.java"},"region":{"startLine":81}},"message":{"text":"Assigning: \"id\" = \"request.getParameter(\"id\")\"."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/path-traversal/src/main/java/org/owasp/webgoat/path_traversal/ProfileUploadRetrieval.java"},"region":{"startLine":82}},"message":{"text":"Creating a tainted string using \"(id == null) ? org.apache.commons.lang3.RandomUtils.nextInt(1, 11) : id\"."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/path-traversal/src/main/java/org/owasp/webgoat/path_traversal/ProfileUploadRetrieval.java"},"region":{"startLine":82}},"message":{"text":"Calling \"File\". This call assigns a tainted string to \"\u003cstorage from new\u003e\"."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/path-traversal/src/main/java/org/owasp/webgoat/path_traversal/ProfileUploadRetrieval.java"},"region":{"startLine":82}},"message":{"text":"Assigning: \"catPicture\" = \"new java.io.File(catPicturesDirectory, ((id == null) ? org.apache.commons.lang3.RandomUtils.nextInt(1, 11) : id) + \".jpg\")\"."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/path-traversal/src/main/java/org/owasp/webgoat/path_traversal/ProfileUploadRetrieval.java"},"region":{"startLine":90}},"message":{"text":"Calling \"getName\". This call assigns \"catPicture\" to \"\u003creturn value\u003e\". Now \"\u003creturn value\u003e\" is tainted. (The virtual call resolves to \"java.io.File.getName()\".)"}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/path-traversal/src/main/java/org/owasp/webgoat/path_traversal/ProfileUploadRetrieval.java"},"region":{"startLine":90}},"message":{"text":"Creating a tainted string using \"catPicture.getName()\"."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/path-traversal/src/main/java/org/owasp/webgoat/path_traversal/ProfileUploadRetrieval.java"},"region":{"startLine":90}},"message":{"text":"Calling \"URI\". This call assigns a tainted string to \"\u003cstorage from new\u003e\"."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/path-traversal/src/main/java/org/owasp/webgoat/path_traversal/ProfileUploadRetrieval.java"},"region":{"startLine":90}},"message":{"text":"Passing \"new java.net.URI(\"/PathTraversal/random-picture?id=\" + catPicture.getName())\" to \"location\u003corg.springframework.http.ResponseEntity.BodyBuilder\u003e\"."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/path-traversal/src/main/java/org/owasp/webgoat/path_traversal/ProfileUploadRetrieval.java"},"region":{"startLine":90}},"message":{"text":"Constructing a URL using the tainted value \"new java.net.URI(\"/PathTraversal/random-picture?id=\" + catPicture.getName())\". This may allow an attacker to access or modify critical or sensitive files, or redirect to a malicious website."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/path-traversal/src/main/java/org/owasp/webgoat/path_traversal/ProfileUploadRetrieval.java"},"region":{"startLine":90}},"message":{"text":"URL manipulation vulnerabilities can be addressed by proper input validation. Allow listing the allowed scheme and authority, and deny listing characters that allow unsafe path traversal in the path and query parts of the URL can improve security."}}}]}]}]},{"message":{"text":"[See in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/issues/CA40F03D38C1A04061F3EFCA5C465379?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026filter=issueType%3Alocalized-name%3DNULL%20Pointer%20Dereference%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dwebgoat-container%2Ftarget%2Fclasses%2Fstatic%2Fjs%2Flibs%2Face.js)\n\nUsing the return value of a function that can return null or undefined without checking it for null or undefined."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"webgoat-container/target/classes/static/js/libs/ace.js"},"region":{"startLine":13435}}}],"ruleId":"null_pointer_dereference_exception:return_value|javascript","partialFingerprints":{"ruleIdLocationHash/v1":"a4edf0b3b6c712fd3c765811e219cb154122b52edaea4f7673bd0b9f46a7e707"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-container/target/classes/static/js/libs/ace.js"},"region":{"startLine":7473}},"message":{"text":"Example 2 (cont.): \"token\" has its value checked in \"token\"."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-container/target/classes/static/js/libs/ace.js"},"region":{"startLine":7481}},"message":{"text":"Example 2: Assigning: \"token\" = return value from \"iterator.stepBackward()\"."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-container/target/classes/static/js/libs/ace.js"},"region":{"startLine":9474}},"message":{"text":"Example 3 (cont.): \"token\" has its value checked in \"token\"."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-container/target/classes/static/js/libs/ace.js"},"region":{"startLine":9475}},"message":{"text":"Example 3: Assigning: \"token\" = return value from \"iterator.stepBackward()\"."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-container/target/classes/static/js/libs/ace.js"},"region":{"startLine":9833}},"message":{"text":"Example 1 (cont.): \"token\" has its value checked in \"token\"."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-container/target/classes/static/js/libs/ace.js"},"region":{"startLine":9834}},"message":{"text":"Example 1: Assigning: \"token\" = return value from \"iterator.stepBackward()\"."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-container/target/classes/static/js/libs/ace.js"},"region":{"startLine":13393}},"message":{"text":"Condition \"!session\", taking false branch."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-container/target/classes/static/js/libs/ace.js"},"region":{"startLine":13393}},"message":{"text":"Condition \"!session.bgTokenizer\", taking false branch."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-container/target/classes/static/js/libs/ace.js"},"region":{"startLine":13399}},"message":{"text":"Condition \"!token\", taking false branch."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-container/target/classes/static/js/libs/ace.js"},"region":{"startLine":13399}},"message":{"text":"Condition \"!/\\b(?:tag-open|tag-name)/.test(token.type)\", taking false branch."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-container/target/classes/static/js/libs/ace.js"},"region":{"startLine":13405}},"message":{"text":"Condition \"token.type.indexOf(\"tag-open\") != -1\", taking true branch."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-container/target/classes/static/js/libs/ace.js"},"region":{"startLine":13407}},"message":{"text":"Condition \"!token\", taking false branch."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-container/target/classes/static/js/libs/ace.js"},"region":{"startLine":13413}},"message":{"text":"Example 5: Assigning: \"prevToken\" = return value from \"iterator.stepBackward()\"."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-container/target/classes/static/js/libs/ace.js"},"region":{"startLine":13415}},"message":{"text":"Condition \"prevToken.value == \"\u003c\"\", taking false branch."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-container/target/classes/static/js/libs/ace.js"},"region":{"startLine":13430}},"message":{"text":"Condition \"prevToken\", taking true branch."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-container/target/classes/static/js/libs/ace.js"},"region":{"startLine":13430}},"message":{"text":"Condition \"depth \u003c= 0\", taking true branch."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-container/target/classes/static/js/libs/ace.js"},"region":{"startLine":13431}},"message":{"text":"Example 5 (cont.): Assigning: \"token\" = \"prevToken\".  Both are now equal to the return value from \"iterator.stepBackward()\"."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-container/target/classes/static/js/libs/ace.js"},"region":{"startLine":13432}},"message":{"text":"\"iterator.stepBackward\" returns \"null\" or \"undefined\" (checked 6 out of 7 times)."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-container/target/classes/static/js/libs/ace.js"},"region":{"startLine":13432}},"message":{"text":"Assigning \"prevToken\" to the \"null\" or \"undefined\" return value from \"iterator.stepBackward\"."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-container/target/classes/static/js/libs/ace.js"},"region":{"startLine":13434}},"message":{"text":"Condition \"token\", taking false branch."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-container/target/classes/static/js/libs/ace.js"},"region":{"startLine":13434}},"message":{"text":"Example 5 (cont.): \"token\" has its value checked in \"token\"."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-container/target/classes/static/js/libs/ace.js"},"region":{"startLine":13434}},"message":{"text":"Condition \"token\", taking true branch."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-container/target/classes/static/js/libs/ace.js"},"region":{"startLine":13434}},"message":{"text":"Condition \"token.value === tag\", taking true branch."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-container/target/classes/static/js/libs/ace.js"},"region":{"startLine":13434}},"message":{"text":"Condition \"token.type.indexOf(\"tag-name\") !== -1\", taking true branch."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-container/target/classes/static/js/libs/ace.js"},"region":{"startLine":13435}},"message":{"text":"Accessing a property of null-like value \"prevToken\"."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-container/target/classes/static/js/libs/ace.js"},"region":{"startLine":14569}},"message":{"text":"Example 4: Assigning: \"prevToken\" = return value from \"iterator.stepBackward()\"."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-container/target/classes/static/js/libs/ace.js"},"region":{"startLine":14571}},"message":{"text":"Example 4 (cont.): \"prevToken\" has its value checked in \"prevToken\"."}}}]}]}]},{"message":{"text":"[See in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/issues/4094E0E461D8401BB007C8BE535C0930?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026filter=issueType%3Alocalized-name%3DImproper%20Resource%20Shutdown%20or%20Release%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dwebgoat-lessons%2Fchallenge%2Fsrc%2Fmain%2Fjava%2Forg%2Fowasp%2Fwebgoat%2Fchallenges%2Fchallenge7%2FMD5.java)\n\nLeak of a system resource on an exception path (probably error handling)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/challenge/src/main/java/org/owasp/webgoat/challenges/challenge7/MD5.java"},"region":{"startLine":169}}}],"ruleId":"resource_leak:exceptional_path|java","partialFingerprints":{"ruleIdLocationHash/v1":"a42dab6e3de93d88540bea42eb262b599fc17328e9a8c6b9ab9ce06682b1e381"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/challenge/src/main/java/org/owasp/webgoat/challenges/challenge7/MD5.java"},"region":{"startLine":168}},"message":{"text":"\"new java.io.FileInputStream(f)\" creates a new resource."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/challenge/src/main/java/org/owasp/webgoat/challenges/challenge7/MD5.java"},"region":{"startLine":168}},"message":{"text":"Assigning: \"is\" = resource returned from \"new java.io.FileInputStream(f)\"."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/challenge/src/main/java/org/owasp/webgoat/challenges/challenge7/MD5.java"},"region":{"startLine":169}},"message":{"text":"Resource \"is\" is not closed or saved in \"getHash\"."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/challenge/src/main/java/org/owasp/webgoat/challenges/challenge7/MD5.java"},"region":{"startLine":169}},"message":{"text":"Throwing \"java.io.IOException\" (or subclass) from call to \"getHash\"; exiting method with uncaught exception."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/challenge/src/main/java/org/owasp/webgoat/challenges/challenge7/MD5.java"},"region":{"startLine":169}},"message":{"text":"Variable \"is\" going out of scope leaks the resource it refers to."}}}]}]}]},{"message":{"text":"[See in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/issues/66BEC5CA5E673FEAD1F57AE7AA943C03?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026filter=issueType%3Alocalized-name%3DInclusion%20of%20Functionality%20from%20Untrusted%20Control%20Sphere%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Ddocker-compose-local.yml)\n\nThe Docker Compose file does not explicitly set `image` attribute with a specific stable version. Pinning the version of the base image will make the container being built more predictable. Relying on the latest version may silently inherit newer packages, which in the best case may affect application reliability and in the worst case may introduce vulnerabilities."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"docker-compose-local.yml"},"region":{"startLine":5}}}],"ruleId":"sigma.unspecified_software_version:docker_compose|text","partialFingerprints":{"ruleIdLocationHash/v1":"7a53cb9f8badccda257296194eff1836a56c4a6ebc3803166c31dd33bbafdb6c"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"docker-compose-local.yml"},"region":{"startLine":5}},"message":{"text":"The Docker Compose file does not explicitly set `image` attribute with a specific stable version. Pinning the version of the base image will make the container being built more predictable. Relying on the latest version may silently inherit newer packages, which in the best case may affect application reliability and in the worst case may introduce vulnerabilities."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"docker-compose-local.yml"},"region":{"startLine":5}},"message":{"text":"Explicitly set the `image` attribute to a specific stable version."}}}]}]}]},{"message":{"text":"[See in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/issues/B8097D65BA7E6719E28C8A3B679C74C1?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026filter=issueType%3Alocalized-name%3DSQL%20Injection%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dwebgoat-lessons%2Fsql-injection%2Fsrc%2Fmain%2Fjava%2Forg%2Fowasp%2Fwebgoat%2Fsql_injection%2Fintroduction%2FSqlInjectionLesson3.java)\n\nUntrusted user-supplied data is inserted into a SQL statement without adequate validation, escaping, or filtering."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson3.java"},"region":{"startLine":57}}}],"ruleId":"sql_injection:sink|java","partialFingerprints":{"ruleIdLocationHash/v1":"96cd9e4edad1e8a7268afd03dcb43aabb8d6325869df04decc11eedfc462d988"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson3.java"},"region":{"startLine":56}},"message":{"text":"\"completed\" is an entry point function."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson3.java"},"region":{"startLine":56}},"message":{"text":"The \"query\" is tainted."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson3.java"},"region":{"startLine":57}},"message":{"text":"Calling \"injectableQuery\". Passing the tainted value \"query\" to the SQL API may allow an attacker to inject SQL. (The virtual call resolves to \"org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson3.injectableQuery(java.lang.String)\".)"}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson3.java"},"region":{"startLine":57}},"message":{"text":"Use one of the following methods:\n* Use a query-preparation API to safely construct the SQL query containing user-supplied values.\n* Only concatenate a user-supplied value into a query if it has been checked against a whitelist of safe string values, or if it must be a Boolean or numeric type.\n"}}}]}]}]},{"message":{"text":"[See in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/issues/3E21534B1FF42243A248819BAE76BB7A?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026filter=issueType%3Alocalized-name%3DUnsalted%20Password%20Hashes%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dwebgoat-lessons%2Fcrypto%2Fsrc%2Fmain%2Fjava%2Forg%2Fowasp%2Fwebgoat%2Fcrypto%2FHashingAssignment.java)\n\nHashing a password using a scheme that is not computationally intensive, and without using any salt as part of the input."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/crypto/src/main/java/org/owasp/webgoat/crypto/HashingAssignment.java"},"region":{"startLine":59}}}],"ruleId":"weak_password_hash:weak_hash_no_salt|java","partialFingerprints":{"ruleIdLocationHash/v1":"83108212e054d52571dd2b4c6282f76993a024621de031659a6f0a7dffe94cfa"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/crypto/src/main/java/org/owasp/webgoat/crypto/EncodingAssignment.java"},"region":{"startLine":48}},"message":{"text":"Calling at a later point \"getBasicAuth\". This call taints \"SECRETS\"."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/crypto/src/main/java/org/owasp/webgoat/crypto/HashingAssignment.java"},"region":{"startLine":50}},"message":{"text":"Hashing a password using a computationally cheap cryptographic hash function and no salt. If password hashes leak to an attacker, they can use readily-available hash lookup tables to recover large numbers of passwords with little effort."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/crypto/src/main/java/org/owasp/webgoat/crypto/HashingAssignment.java"},"region":{"startLine":55}},"message":{"text":"Assigning: \"secret\" = \"org.owasp.webgoat.crypto.HashingAssignment.SECRETS[(new java.util.Random()).nextInt(org.owasp.webgoat.crypto.HashingAssignment.SECRETS.length)]\"."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/crypto/src/main/java/org/owasp/webgoat/crypto/HashingAssignment.java"},"region":{"startLine":57}},"message":{"text":"\n* \"java.security.MessageDigest.getInstance(\"MD5\")\" uses the MD5 algorithm. \n"}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/crypto/src/main/java/org/owasp/webgoat/crypto/HashingAssignment.java"},"region":{"startLine":57}},"message":{"text":"Assigning: \"md\" = \"java.security.MessageDigest.getInstance(\"MD5\")\"."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/crypto/src/main/java/org/owasp/webgoat/crypto/HashingAssignment.java"},"region":{"startLine":58}},"message":{"text":"Calling \"getBytes\". This call assigns \"secret\" to \"\u003creturn value\u003e\". (The virtual call resolves to \"java.lang.String.getBytes()\".)"}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/crypto/src/main/java/org/owasp/webgoat/crypto/HashingAssignment.java"},"region":{"startLine":58}},"message":{"text":"Calling \"getBytes\". This call returns a reference to \"\u003creturn value\u003e\". (The virtual call resolves to \"java.lang.String.getBytes()\".)"}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/crypto/src/main/java/org/owasp/webgoat/crypto/HashingAssignment.java"},"region":{"startLine":58}},"message":{"text":"\n* \"md\" takes \"secret.getBytes()\" as input. \n"}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/crypto/src/main/java/org/owasp/webgoat/crypto/HashingAssignment.java"},"region":{"startLine":59}},"message":{"text":"Use of password hash with insufficient computational effort."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/crypto/src/main/java/org/owasp/webgoat/crypto/HashingAssignment.java"},"region":{"startLine":59}},"message":{"text":"The recommended method of hashing sensitive password data is to generate a random sequence of bytes (a \"salt\") for each password to hash, hash the password and the salt with an adaptive hash function such as bcrypt, scrypt, and PBKDF2 (Password-Based Key Derivation Function 2), and then store the hash and the salt for subsequent password checks."}}}]}]}]},{"message":{"text":"[See in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/issues/2E3DE0679CE899B2C715D836A58DAE63?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026filter=issueType%3Alocalized-name%3DImproper%20Privilege%20Management%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dgoat-with-reverseproxy.yaml)\n\nThe Docker container requests the `NET_RAW` capability, either explicitly or by default, granting access to the host's network interfaces."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"goat-with-reverseproxy.yaml"},"region":{"startLine":23}}}],"ruleId":"sigma.container_requesting_net_raw:docker_compose|text","partialFingerprints":{"ruleIdLocationHash/v1":"4c48921ba2dd32de866ae6a04deaf54ee62d9a02116a1f166406c3b4d00d4089"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"goat-with-reverseproxy.yaml"},"region":{"startLine":23}},"message":{"text":"The Docker container requests the `NET_RAW` capability, either explicitly or by default, granting access to the host's network interfaces."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"goat-with-reverseproxy.yaml"},"region":{"startLine":23}},"message":{"text":"Explicitly remove the `NET_RAW` capability by adding either `NET_RAW` or `ALL` to the `cap_drop` list and avoiding the `NET_RAW` capability in the `cap_add` list."}}}]}]}]},{"message":{"text":"[See in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/issues/C5B03E63AD8A9C0A23D2B97549D7EC31?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026filter=issueType%3Alocalized-name%3DImproper%20Verification%20of%20Cryptographic%20Signature%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dwebgoat-lessons%2Fjwt%2Fsrc%2Fmain%2Fjava%2Forg%2Fowasp%2Fwebgoat%2Fjwt%2FJWTSecretKeyEndpoint.java)\n\nThe application uses the `io.jsonwebtoken.JwtParser` package's `parse()`, `parsePlaintextJwt()`, or `parseClaimsJwt()` method to parse a JWT without first verifying the token's signature, allowing an attacker to forge the token claims and perform attacks such as impersonating other users."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/jwt/src/main/java/org/owasp/webgoat/jwt/JWTSecretKeyEndpoint.java"},"region":{"startLine":74}}}],"ruleId":"sigma.jwt_untrusted_decode:io_jsonwebtoken|java","partialFingerprints":{"ruleIdLocationHash/v1":"f195446988a54778046ea19649a612b336098f86c50989b40445da0d6a329977"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/jwt/src/main/java/org/owasp/webgoat/jwt/JWTSecretKeyEndpoint.java"},"region":{"startLine":74}},"message":{"text":"The application uses the `io.jsonwebtoken.JwtParser` package's `parse()`, `parsePlaintextJwt()`, or `parseClaimsJwt()` method to parse a JWT without first verifying the token's signature, allowing an attacker to forge the token claims and perform attacks such as impersonating other users."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/jwt/src/main/java/org/owasp/webgoat/jwt/JWTSecretKeyEndpoint.java"},"region":{"startLine":74}},"message":{"text":"Modify the application to use `parseClaimsJws()` or `parsePlaintextJws()` instead, since these methods will automatically verify the token signature."}}}]}]}]},{"message":{"text":"[See in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/issues/F2E729964555B508B494D43102803FA3?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026filter=issueType%3Alocalized-name%3DCross-Site%20Request%20Forgery%20%28CSRF%29%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dwebgoat-lessons%2Fsql-injection%2Fsrc%2Fmain%2Fjava%2Forg%2Fowasp%2Fwebgoat%2Fsql_injection%2Fintroduction%2FSqlInjectionLesson3.java)\n\nThe web application controller modifies data or state and is unprotected from cross-site request forgery."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson3.java"},"region":{"startLine":56}}}],"ruleId":"csrf:database_update|java","partialFingerprints":{"ruleIdLocationHash/v1":"d4dd55b47133934290bb5e834584c04711c6b08366bf9c3bb11d3ca49abcd7ae"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson3.java"},"region":{"startLine":56}},"message":{"text":"\"org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson3.completed\" is a web-app entry point that requires protection from cross-site request forgery (CSRF)."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson3.java"},"region":{"startLine":56}},"message":{"text":"Use the CSRF validator method \"org.owasp.webgoat.CSRFTest.checkAssignment3\" to protect against CSRF. Please refer to the examples of its use elsewhere."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson3.java"},"region":{"startLine":57}},"message":{"text":"Calling \"injectableQuery\" updates the database."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-integration-tests/src/test/java/org/owasp/webgoat/CSRFTest.java"},"region":{"startLine":70}},"message":{"text":"Example 1: Examples of CSRF validator calls."}}}]}]}]},{"message":{"text":"[See in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/issues/56C255E8E452DF10A768FB66A5EEA3B6?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026filter=issueType%3Alocalized-name%3DUse%20of%20Hard-coded%20Credentials%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dwebgoat-integration-tests%2Fsrc%2Ftest%2Fjava%2Forg%2Fowasp%2Fwebgoat%2FPasswordResetLessonTest.java)\n\nA secret, such as a password, cryptographic key, or token is stored in plaintext directly in the source code, in an application's properties, or configuration file. Users with access to the secret may then use the secret to access resources that they otherwise would not have access to."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"webgoat-integration-tests/src/test/java/org/owasp/webgoat/PasswordResetLessonTest.java"},"region":{"startLine":56}}}],"ruleId":"sigma.hardcoded_secret:pattern|java","partialFingerprints":{"ruleIdLocationHash/v1":"e1af18cbb0f9c978d6fc6c37147a218cee03fd3787f5d8d160cb9b2a74b6da21"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-integration-tests/src/test/java/org/owasp/webgoat/PasswordResetLessonTest.java"},"region":{"startLine":56}},"message":{"text":"A secret, such as a password, cryptographic key, or token is stored in plaintext directly in the source code, in an application's properties, or configuration file. Users with access to the secret may then use the secret to access resources that they otherwise would not have access to. Secret type: Password (generic)."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-integration-tests/src/test/java/org/owasp/webgoat/PasswordResetLessonTest.java"},"region":{"startLine":56}},"message":{"text":"Avoid setting sensitive configuration values as string literals. Instead, these values should be set using variables with the sensitive data loaded from an encrypted file or a secret store."}}}]}]}]},{"message":{"text":"[See in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/issues/C0D60C7FA5827D37DF55F7BDE5E9BD1E?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026filter=issueType%3Alocalized-name%3DUse%20of%20Hard-coded%20Credentials%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dwebwolf%2Fsrc%2Ftest%2Fjava%2Forg%2Fowasp%2Fwebwolf%2Fuser%2FUserServiceTest.java)\n\nA secret, such as a password, cryptographic key, or token is stored in plaintext directly in the source code, in an application's properties, or configuration file. Users with access to the secret may then use the secret to access resources that they otherwise would not have access to."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"webwolf/src/test/java/org/owasp/webwolf/user/UserServiceTest.java"},"region":{"startLine":48}}}],"ruleId":"sigma.hardcoded_secret:pattern|java","partialFingerprints":{"ruleIdLocationHash/v1":"4fccb9a8bd3ea833d0f7de9452fca9162b69d9be43d3b7f7d292baf095971a29"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"webwolf/src/test/java/org/owasp/webwolf/user/UserServiceTest.java"},"region":{"startLine":48}},"message":{"text":"A secret, such as a password, cryptographic key, or token is stored in plaintext directly in the source code, in an application's properties, or configuration file. Users with access to the secret may then use the secret to access resources that they otherwise would not have access to. Secret type: Password (generic)."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webwolf/src/test/java/org/owasp/webwolf/user/UserServiceTest.java"},"region":{"startLine":48}},"message":{"text":"Avoid setting sensitive configuration values as string literals. Instead, these values should be set using variables with the sensitive data loaded from an encrypted file or a secret store."}}}]}]}]},{"message":{"text":"[See in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/issues/C3881D83B07CEEE3404CDE0BFD60DB7A?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026filter=issueType%3Alocalized-name%3DWeak%20Hash%20Function%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dwebgoat-integration-tests%2Fsrc%2Ftest%2Fjava%2Forg%2Fowasp%2Fwebgoat%2FCryptoTest.java)\n\nA risky hashing function was used. This may allow an attacker to produce collisions on the hash or execute length extension attacks."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"webgoat-integration-tests/src/test/java/org/owasp/webgoat/CryptoTest.java"},"region":{"startLine":87}}}],"ruleId":"risky_crypto:hashing|java","partialFingerprints":{"ruleIdLocationHash/v1":"31a9864f246718e096ea4020d83bce99d534fa2c7d002d08380b79d22dc58ae3"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-integration-tests/src/test/java/org/owasp/webgoat/CryptoTest.java"},"region":{"startLine":86}},"message":{"text":"Iterating over another element of \"org.owasp.webgoat.crypto.HashingAssignment.SECRETS\"."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-integration-tests/src/test/java/org/owasp/webgoat/CryptoTest.java"},"region":{"startLine":87}},"message":{"text":"Using a weak hashing algorithm. The RIPEMD, MD2, MD4, MD5, SHA0 and SHA1 cryptographic hashing algorithms are not collision resistant. Furthermore, these algorithms suffer from length extension attacks: without knowing the original unhashed message, an attacker can generate a valid hash for messages that have the original message as a prefix."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-integration-tests/src/test/java/org/owasp/webgoat/CryptoTest.java"},"region":{"startLine":87}},"message":{"text":"1) Use a strong, well-vetted cryptographic hash function that is currently not known to suffer these weaknesses, such as a SHA-2 family hash like SHA-256.\n2) Use a hashed message authenticated code (HMAC) when comparing the output of the hash to a value provided by a user, such as to ensure a value has not been tampered with.\n3) Use a password-based key derivative function such as PBKDF2, scrypt, or bcrypt for deriving the key, when the data going into the hash function is a user-provided password or passphrase."}}}]}]}]},{"message":{"text":"[See in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/issues/21B53CBCF346B2CF43C2177CF45F878B?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026filter=issueType%3Alocalized-name%3DIncomplete%20Comparison%20with%20Missing%20Factors%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dwebgoat-container%2Fsrc%2Fmain%2Fjava%2Forg%2Fowasp%2Fwebgoat%2Flessons%2FAssignment.java)\n\nThe result of equals() depends on an entity's primary database key"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"webgoat-container/src/main/java/org/owasp/webgoat/lessons/Assignment.java"},"region":{"startLine":39}}}],"ruleId":"hibernate_equals_depends_on_primary_key|java","partialFingerprints":{"ruleIdLocationHash/v1":"d9c003ac9c61c405fb0e0cb7ff86d9c5412e621e58b4020aa8c0d04ff59ad608"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-container/src/main/java/org/owasp/webgoat/lessons/Assignment.java"},"region":{"startLine":39}},"message":{"text":"Result depends on \"org.owasp.webgoat.lessons.Assignment.getId()\", which is a Hibernate identifier."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-container/src/main/java/org/owasp/webgoat/lessons/Assignment.java"},"region":{"startLine":45}},"message":{"text":"Member \"id\" is annotated with \"@javax.persistence.Id\"."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-container/src/test/java/org/owasp/webgoat/session/LessonTrackerTest.java"},"region":{"startLine":60}},"message":{"text":"Constructing new transient instance \"a1\" of entity type \"org.owasp.webgoat.lessons.Assignment\"."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-container/src/test/java/org/owasp/webgoat/session/LessonTrackerTest.java"},"region":{"startLine":68}},"message":{"text":"Accessing a collection that calls \"equals\" and \"hashCode\" on \"a1\" before its Hibernate identifier has been set."}}}]}]}]},{"message":{"text":"[See in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/issues/5ABBCB02355C65D2A09B8557FCE02D48?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026filter=issueType%3Alocalized-name%3DExpected%20Behavior%20Violation%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dwebgoat-lessons%2Fcrypto%2Fsrc%2Fmain%2Fjava%2Forg%2Fowasp%2Fwebgoat%2Fcrypto%2FEncodingAssignment.java)\n\nThis code creates a java.util.Random object, uses it to generate one random number, and then discards the Random object. (\u003ca href=\"/doc/en/spotbugs/sb_checker_ref.html#FB.DMI_RANDOM_USED_ONLY_ONCE\" target=\"_blank\"\u003eFrom SpotBugs description\u003c/a\u003e)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/crypto/src/main/java/org/owasp/webgoat/crypto/EncodingAssignment.java"},"region":{"startLine":53}}}],"ruleId":"FB.DMI_RANDOM_USED_ONLY_ONCE|java","partialFingerprints":{"ruleIdLocationHash/v1":"3dee761850b962cb1b85d80abf0a77ebdd61c19ad0bc63a968f14250d083d418"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/crypto/src/main/java/org/owasp/webgoat/crypto/EncodingAssignment.java"},"region":{"startLine":53}},"message":{"text":"Random object created and used only once."}}}]}]}]},{"message":{"text":"[See in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/issues/69ED81ED662B9B71A35838C28F8A2C10?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026filter=issueType%3Alocalized-name%3DIncorrect%20Check%20of%20Function%20Return%20Value%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dwebwolf%2Fsrc%2Fmain%2Fjava%2Forg%2Fowasp%2Fwebwolf%2FMvcConfiguration.java)\n\nThis method returns a value that is not checked. (\u003ca href=\"/doc/en/spotbugs/sb_checker_ref.html#FB.RV_RETURN_VALUE_IGNORED_BAD_PRACTICE\" target=\"_blank\"\u003eFrom SpotBugs description\u003c/a\u003e)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"webwolf/src/main/java/org/owasp/webwolf/MvcConfiguration.java"},"region":{"startLine":64}}}],"ruleId":"FB.RV_RETURN_VALUE_IGNORED_BAD_PRACTICE|java","partialFingerprints":{"ruleIdLocationHash/v1":"c2a1aef29b600b8de7aa85bfee4b77c1c5fd9e61b7b689e89ff64e64e0724009"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"webwolf/src/main/java/org/owasp/webwolf/MvcConfiguration.java"},"region":{"startLine":64}},"message":{"text":"Exceptional return value of java.io.File.mkdirs() ignored."}}}]}]}]},{"message":{"text":"[See in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/issues/78EEAC4529B77C205E77A0B6B04CB81A?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026filter=issueType%3Alocalized-name%3DSQL%20Injection%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dwebgoat-lessons%2Fsql-injection%2Fsrc%2Fmain%2Fjava%2Forg%2Fowasp%2Fwebgoat%2Fsql_injection%2Fadvanced%2FSqlInjectionChallenge.java)\n\nUntrusted user-supplied data is inserted into a SQL statement without adequate validation, escaping, or filtering."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/advanced/SqlInjectionChallenge.java"},"region":{"startLine":65}}}],"ruleId":"sql_injection:sink|java","partialFingerprints":{"ruleIdLocationHash/v1":"192f36fe42c1c14fd5fd8722c9995406fa3d552c73e266575132205d07b59ec2"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/advanced/SqlInjectionChallenge.java"},"region":{"startLine":56}},"message":{"text":"\"registerNewUser\" is an entry point function."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/advanced/SqlInjectionChallenge.java"},"region":{"startLine":56}},"message":{"text":"The \"username_reg\" is tainted."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/advanced/SqlInjectionChallenge.java"},"region":{"startLine":63}},"message":{"text":"Creating a tainted string using \"username_reg\"."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/advanced/SqlInjectionChallenge.java"},"region":{"startLine":63}},"message":{"text":"Assigning a tainted string to \"checkUserQuery\"."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/advanced/SqlInjectionChallenge.java"},"region":{"startLine":65}},"message":{"text":"Calling \"executeQuery\". Passing the tainted value \"checkUserQuery\" to the SQL API may allow an attacker to inject SQL. (The virtual call resolves to \"java.sql.Statement.executeQuery(java.lang.String)\".)"}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/advanced/SqlInjectionChallenge.java"},"region":{"startLine":65}},"message":{"text":"Use one of the following methods:\n* Use a query-preparation API to safely construct the SQL query containing user-supplied values.\n* Only concatenate a user-supplied value into a query if it has been checked against a whitelist of safe string values, or if it must be a Boolean or numeric type.\n"}}}]}]}]},{"message":{"text":"[See in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/issues/9E07206D4ED8071923A6188EC96E2099?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026filter=issueType%3Alocalized-name%3DDm:%20Dubious%20method%20used%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dwebgoat-lessons%2Fpath-traversal%2Fsrc%2Fmain%2Fjava%2Forg%2Fowasp%2Fwebgoat%2Fpath_traversal%2FProfileUploadRetrieval.java)\n\nFound a call to a method which will perform a byte to String (or String to byte) conversion, and will assume that the default platform encoding is suitable. (\u003ca href=\"/doc/en/spotbugs/sb_checker_ref.html#FB.DM_DEFAULT_ENCODING\" target=\"_blank\"\u003eFrom SpotBugs description\u003c/a\u003e)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/path-traversal/src/main/java/org/owasp/webgoat/path_traversal/ProfileUploadRetrieval.java"},"region":{"startLine":97}}}],"ruleId":"FB.DM_DEFAULT_ENCODING|java","partialFingerprints":{"ruleIdLocationHash/v1":"a0b251f3bd7ce6df6b861e64ad1b82718d01fa738a28cfbc9d244b045552bcbe"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/path-traversal/src/main/java/org/owasp/webgoat/path_traversal/ProfileUploadRetrieval.java"},"region":{"startLine":97}},"message":{"text":"Found reliance on default encoding: String.getBytes()."}}}]}]}]},{"message":{"text":"[See in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/issues/A3C5CC77D36CCC31BD13738876A8A764?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026filter=issueType%3Alocalized-name%3DSIC:%20Inner%20class%20could%20be%20made%20static%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dwebgoat-lessons%2Fsql-injection%2Fsrc%2Fmain%2Fjava%2Forg%2Fowasp%2Fwebgoat%2Fsql_injection%2Fmitigation%2FSqlInjectionLesson10b.java)\n\nThis class is an inner class, but does not use its embedded reference to the object which created it. (\u003ca href=\"/doc/en/spotbugs/sb_checker_ref.html#FB.SIC_INNER_SHOULD_BE_STATIC\" target=\"_blank\"\u003eFrom SpotBugs description\u003c/a\u003e)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/mitigation/SqlInjectionLesson10b.java"},"region":{"startLine":108}}}],"ruleId":"FB.SIC_INNER_SHOULD_BE_STATIC|java","partialFingerprints":{"ruleIdLocationHash/v1":"f097c9c98294598250a62d636464b75771a63c5a5de2d358e93d02a03fa1d53c"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/mitigation/SqlInjectionLesson10b.java"},"region":{"startLine":108}},"message":{"text":"Should org.owasp.webgoat.sql_injection.mitigation.SqlInjectionLesson10b$JavaObjectFromString be a _static_ inner class?"}}}]}]}]},{"message":{"text":"[See in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/issues/7A1C00300F0A757BAEEA157AFD60C792?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026filter=issueType%3Alocalized-name%3DUnreachable%252C%20Unused%20or%20Dead%20Code%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dwebgoat-container%2Ftarget%2Fclasses%2Fstatic%2Fjs%2Flibs%2Face.js)\n\nAn expression is useless because it has no side effects and its result is ignored."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"webgoat-container/target/classes/static/js/libs/ace.js"},"region":{"startLine":325}}}],"ruleId":"no_effect|javascript","partialFingerprints":{"ruleIdLocationHash/v1":"b422acbd59997699aae4ef162f6762b56bef8c74a99d85ac852dc15ad4fa6e51"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-container/target/classes/static/js/libs/ace.js"},"region":{"startLine":325}},"message":{"text":"Discarding the result of operator \"==\" in \"lengthBefore + 1 == array.length\". What was this code intended to accomplish?"}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-container/target/classes/static/js/libs/ace.js"},"region":{"startLine":325}},"message":{"text":"Did you intend to make an assertion or assignment?"}}}]}]}]},{"message":{"text":"[See in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/issues/11A831379A95A6C33D9188F5CDFC7DC0?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026filter=issueType%3Alocalized-name%3DSQL:%20Potential%20SQL%20Problem%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dwebgoat-lessons%2Fmissing-function-ac%2Fsrc%2Fmain%2Fjava%2Forg%2Fowasp%2Fwebgoat%2Fmissing_ac%2FUsers.java)\n\nA call to getXXX or updateXXX methods of a result set was made where the field index is 0. (\u003ca href=\"/doc/en/spotbugs/sb_checker_ref.html#FB.SQL_BAD_RESULTSET_ACCESS\" target=\"_blank\"\u003eFrom SpotBugs description\u003c/a\u003e)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/missing-function-ac/src/main/java/org/owasp/webgoat/missing_ac/Users.java"},"region":{"startLine":68}}}],"ruleId":"FB.SQL_BAD_RESULTSET_ACCESS|java","partialFingerprints":{"ruleIdLocationHash/v1":"3b4807df993ff4ae8ed3e983026eecc28fb039d32164e71755a361cc040cd9b6"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/missing-function-ac/src/main/java/org/owasp/webgoat/missing_ac/Users.java"},"region":{"startLine":68}},"message":{"text":"org.owasp.webgoat.missing_ac.Users.getUsers() attempts to access a result set field with index 0."}}}]}]}]},{"message":{"text":"[See in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/issues/2DCD24EEA2AB47E88477D8C6763CBD06?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026filter=issueType%3Alocalized-name%3DImproper%20Resource%20Shutdown%20or%20Release%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dwebgoat-lessons%2Fsql-injection%2Fsrc%2Fmain%2Fjava%2Forg%2Fowasp%2Fwebgoat%2Fsql_injection%2Fintroduction%2FSqlInjectionLesson10.java)\n\nLeak of a system resource"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson10.java"},"region":{"startLine":73}}}],"ruleId":"resource_leak|java","partialFingerprints":{"ruleIdLocationHash/v1":"2a2524ba6d50fc57035a4d625953760957808e8dd70bf4bf4a6e84fbf02b7e12"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson10.java"},"region":{"startLine":62}},"message":{"text":"A new resource is returned from allocation method \"createStatement\"."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson10.java"},"region":{"startLine":62}},"message":{"text":"Assigning: \"statement\" = resource returned from \"connection.createStatement(1004, 1007)\"."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson10.java"},"region":{"startLine":63}},"message":{"text":"Resource \"statement\" is not closed or saved in \"executeQuery\"."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson10.java"},"region":{"startLine":65}},"message":{"text":"Condition \"results.getStatement() != null\", taking false branch."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson10.java"},"region":{"startLine":70}},"message":{"text":"Condition \"tableExists(connection)\", taking false branch."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson10.java"},"region":{"startLine":73}},"message":{"text":"Variable \"statement\" going out of scope leaks the resource it refers to."}}}]}]}]},{"message":{"text":"[See in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/issues/F2FAA14E383EFE0F35E8E0E8EEC1C164?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026filter=issueType%3Alocalized-name%3DSIC:%20Inner%20class%20could%20be%20made%20static%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dwebgoat-lessons%2Fwebgoat-lesson-template%2Fsrc%2Fmain%2Fjava%2Forg%2Fowasp%2Fwebgoat%2Ftemplate%2FSampleAttack.java)\n\nThis class is an inner class, but does not use its embedded reference to the object which created it. (\u003ca href=\"/doc/en/spotbugs/sb_checker_ref.html#FB.SIC_INNER_SHOULD_BE_STATIC\" target=\"_blank\"\u003eFrom SpotBugs description\u003c/a\u003e)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/webgoat-lesson-template/src/main/java/org/owasp/webgoat/template/SampleAttack.java"},"region":{"startLine":80}}}],"ruleId":"FB.SIC_INNER_SHOULD_BE_STATIC|java","partialFingerprints":{"ruleIdLocationHash/v1":"ba5ae801e6a9258b690d42931b8f6a87a7b6ae928661101a50f7a74085c2abd0"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/webgoat-lesson-template/src/main/java/org/owasp/webgoat/template/SampleAttack.java"},"region":{"startLine":80}},"message":{"text":"Should org.owasp.webgoat.template.SampleAttack$Item be a _static_ inner class?"}}}]}]}]},{"message":{"text":"[See in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/issues/45E6C8561A4DBB8668CE9C734B53605E?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026filter=issueType%3Alocalized-name%3DImproper%20Access%20Control%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Ddocker-compose.yml)\n\nThe Docker container is not configured to drop all default capabilities and then add only required one. Thus the container may be granted excessive privileges which violate the least privilege principle."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"docker-compose.yml"},"region":{"startLine":5}}}],"ruleId":"sigma.least_privilege_violation:docker_compose|text","partialFingerprints":{"ruleIdLocationHash/v1":"913aca9ec9a18181d2fcadd8a0301fe193fe6594c99a92287c79bd1450c20af2"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"docker-compose.yml"},"region":{"startLine":5}},"message":{"text":"The Docker container is not configured to drop all default capabilities and then add only required one. Thus the container may be granted excessive privileges which violate the least privilege principle."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"docker-compose.yml"},"region":{"startLine":5}},"message":{"text":"Remove all the default capabilities from the list of capabilities by setting the `cap_drop` value to `ALL` and then add only specific capabilities needed by a container."}}}]}]}]},{"message":{"text":"[See in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/issues/581C65374FF4CB5BC59CED4C54F02326?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026filter=issueType%3Alocalized-name%3DDeclaration%20of%20Catch%20for%20Generic%20Exception%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dwebgoat-lessons%2Fjwt%2Fsrc%2Fmain%2Fjava%2Forg%2Fowasp%2Fwebgoat%2Fjwt%2FJWTFinalEndpoint.java)\n\nThis catch block for Exception also catches any RuntimeException, which could mask programming errors. (\u003ca href=\"/doc/en/spotbugs/sb_checker_ref.html#FB.REC_CATCH_EXCEPTION\" target=\"_blank\"\u003eFrom SpotBugs description\u003c/a\u003e)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/jwt/src/main/java/org/owasp/webgoat/jwt/JWTFinalEndpoint.java"},"region":{"startLine":107}}}],"ruleId":"FB.REC_CATCH_EXCEPTION|java","partialFingerprints":{"ruleIdLocationHash/v1":"ad559d493018b5a9589b2329123ee44f599d58b41a5a7cbaf5738c4655a8b289"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/jwt/src/main/java/org/owasp/webgoat/jwt/JWTFinalEndpoint.java"},"region":{"startLine":107}},"message":{"text":"Catching RuntimeExceptions, perhaps unintentionally, with a catch block for Exception."}}}]}]}]},{"message":{"text":"[See in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/issues/38B7919D83382EAA3F2B48901F08F782?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026filter=issueType%3Alocalized-name%3DImproper%20Privilege%20Management%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Ddocker-compose.yml)\n\nThe Docker container requests the `NET_RAW` capability, either explicitly or by default, granting access to the host's network interfaces."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"docker-compose.yml"},"region":{"startLine":5}}}],"ruleId":"sigma.container_requesting_net_raw:docker_compose|text","partialFingerprints":{"ruleIdLocationHash/v1":"219d4e25f54531b1cff474fc6ab24584edbd1b9521b37dd35ed3785867e4a334"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"docker-compose.yml"},"region":{"startLine":5}},"message":{"text":"The Docker container requests the `NET_RAW` capability, either explicitly or by default, granting access to the host's network interfaces."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"docker-compose.yml"},"region":{"startLine":5}},"message":{"text":"Explicitly remove the `NET_RAW` capability by adding either `NET_RAW` or `ALL` to the `cap_drop` list and avoiding the `NET_RAW` capability in the `cap_add` list."}}}]}]}]},{"message":{"text":"[See in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/issues/2EF81EC516874F09817380E4EF9D396E?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026filter=issueType%3Alocalized-name%3DImproper%20Verification%20of%20Cryptographic%20Signature%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dwebgoat-lessons%2Fjwt%2Fsrc%2Fmain%2Fjava%2Forg%2Fowasp%2Fwebgoat%2Fjwt%2FJWTRefreshEndpoint.java)\n\nThe application uses the `io.jsonwebtoken.JwtParser` package's `parse()`, `parsePlaintextJwt()`, or `parseClaimsJwt()` method to parse a JWT without first verifying the token's signature, allowing an attacker to forge the token claims and perform attacks such as impersonating other users."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/jwt/src/main/java/org/owasp/webgoat/jwt/JWTRefreshEndpoint.java"},"region":{"startLine":91}}}],"ruleId":"sigma.jwt_untrusted_decode:io_jsonwebtoken|java","partialFingerprints":{"ruleIdLocationHash/v1":"792f4be8dc37509d881763f79b79af7ec5db2151550c8210ef5573e5d664ba7e"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/jwt/src/main/java/org/owasp/webgoat/jwt/JWTRefreshEndpoint.java"},"region":{"startLine":91}},"message":{"text":"The application uses the `io.jsonwebtoken.JwtParser` package's `parse()`, `parsePlaintextJwt()`, or `parseClaimsJwt()` method to parse a JWT without first verifying the token's signature, allowing an attacker to forge the token claims and perform attacks such as impersonating other users."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/jwt/src/main/java/org/owasp/webgoat/jwt/JWTRefreshEndpoint.java"},"region":{"startLine":91}},"message":{"text":"Modify the application to use `parseClaimsJws()` or `parsePlaintextJws()` instead, since these methods will automatically verify the token signature."}}}]}]}]},{"message":{"text":"[See in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/issues/9E16AF5AE863DBD6C48999004D5BC826?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026filter=issueType%3Alocalized-name%3DPseudo-Random%20Number%20Generator%20Initialized%20with%20Insecure%20Seed%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dwebgoat-lessons%2Fpath-traversal%2Fsrc%2Fmain%2Fjava%2Forg%2Fowasp%2Fwebgoat%2Fpath_traversal%2FProfileUploadRetrieval.java)\n\nRandom value generated using a cryptographically insecure pseudo-random number generator, and used in a security-sensitive context"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/path-traversal/src/main/java/org/owasp/webgoat/path_traversal/ProfileUploadRetrieval.java"},"region":{"startLine":82}}}],"ruleId":"insecure_random:insecure_random_used|java","partialFingerprints":{"ruleIdLocationHash/v1":"ec268f02050cd4bf10cf50773edb004ce9edda4bd2843cb8112bf38a076ee164"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/path-traversal/src/main/java/org/owasp/webgoat/path_traversal/ProfileUploadRetrieval.java"},"region":{"startLine":75}},"message":{"text":"\"getProfilePicture\" is an entry point function."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/path-traversal/src/main/java/org/owasp/webgoat/path_traversal/ProfileUploadRetrieval.java"},"region":{"startLine":82}},"message":{"text":"Calling \"nextInt\". Reading data from an insecure random value, which is considered tainted"}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/path-traversal/src/main/java/org/owasp/webgoat/path_traversal/ProfileUploadRetrieval.java"},"region":{"startLine":82}},"message":{"text":"Creating a tainted string using \"(id == null) ? org.apache.commons.lang3.RandomUtils.nextInt(1, 11) : id\"."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/path-traversal/src/main/java/org/owasp/webgoat/path_traversal/ProfileUploadRetrieval.java"},"region":{"startLine":82}},"message":{"text":"Calling \"File\". The random value \"((id == null) ? org.apache.commons.lang3.RandomUtils.nextInt(1, 11) : id) + \".jpg\"\" was generated using a cryptographically insecure pseudo-random number generator and is used in a security-sensitive context. An attacker may be able to predict the values generated by such a PRNG and gain access to sensitive information."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/path-traversal/src/main/java/org/owasp/webgoat/path_traversal/ProfileUploadRetrieval.java"},"region":{"startLine":82}},"message":{"text":"Use a cryptographically secure PRNG implementation such as \"java.security.SecureRandom\" to generate random values for security-sensitive contexts."}}}]}]}]},{"message":{"text":"[See in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/issues/CB5804A0919F8BD9C828BAA82F60B087?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026filter=issueType%3Alocalized-name%3DUrF:%20Unread%20field%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dwebgoat-lessons%2Fmissing-function-ac%2Fsrc%2Ftest%2Fjava%2Forg%2Fowasp%2Fwebgoat%2Fmissing_ac%2FMissingFunctionYourHashTest.java)\n\nThis field is never read. (\u003ca href=\"/doc/en/spotbugs/sb_checker_ref.html#FB.URF_UNREAD_FIELD\" target=\"_blank\"\u003eFrom SpotBugs description\u003c/a\u003e)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/missing-function-ac/src/test/java/org/owasp/webgoat/missing_ac/MissingFunctionYourHashTest.java"},"region":{"startLine":57}}}],"ruleId":"FB.URF_UNREAD_FIELD|java","partialFingerprints":{"ruleIdLocationHash/v1":"42dc03a263f096b8fe67cef43e531e2457047e29f2bc6fa07c4aff868544b566"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/missing-function-ac/src/test/java/org/owasp/webgoat/missing_ac/MissingFunctionYourHashTest.java"},"region":{"startLine":57}},"message":{"text":"Unread field: org.owasp.webgoat.missing_ac.MissingFunctionYourHashTest.mockDisplayUser."}}}]}]}]},{"message":{"text":"[See in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/issues/E672785C9465DC6EDB050A1C1F3AD3CB?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026filter=issueType%3Alocalized-name%3DDm:%20Dubious%20method%20used%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dwebgoat-lessons%2Fcsrf%2Fsrc%2Fmain%2Fjava%2Forg%2Fowasp%2Fwebgoat%2Fcsrf%2FCSRFFeedback.java)\n\nFound a call to a method which will perform a byte to String (or String to byte) conversion, and will assume that the default platform encoding is suitable. (\u003ca href=\"/doc/en/spotbugs/sb_checker_ref.html#FB.DM_DEFAULT_ENCODING\" target=\"_blank\"\u003eFrom SpotBugs description\u003c/a\u003e)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/csrf/src/main/java/org/owasp/webgoat/csrf/CSRFFeedback.java"},"region":{"startLine":65}}}],"ruleId":"FB.DM_DEFAULT_ENCODING|java","partialFingerprints":{"ruleIdLocationHash/v1":"85b6c439bdade414caa290fe0e228aa3d89c15eda63bbbeec32f1db9219fc1d9"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/csrf/src/main/java/org/owasp/webgoat/csrf/CSRFFeedback.java"},"region":{"startLine":65}},"message":{"text":"Found reliance on default encoding: String.getBytes()."}}}]}]}]},{"message":{"text":"[See in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/issues/FC5BEB0FAE28B31F8A71CE54DCA20037?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026filter=issueType%3Alocalized-name%3DCross-site%20Scripting%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dwebgoat-lessons%2Fjwt%2Fsrc%2Fmain%2Fjava%2Forg%2Fowasp%2Fwebgoat%2Fjwt%2FJWTFinalEndpoint.java)\n\nUntrusted user-supplied data is inserted into a context that can execute JavaScript without adequate validation, escaping, or filtering."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/jwt/src/main/java/org/owasp/webgoat/jwt/JWTFinalEndpoint.java"},"region":{"startLine":138}}}],"ruleId":"xss|java","partialFingerprints":{"ruleIdLocationHash/v1":"c864b369c73191c4b576a61c9a009ad27f1659fb9e847b688f14772fc2e5cc4f"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/jwt/src/main/java/org/owasp/webgoat/jwt/JWTFinalEndpoint.java"},"region":{"startLine":132}},"message":{"text":"Entering this function as a framework entry point. Parameter \"jwtToken\" is tainted because it comes from an HTTP request."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/jwt/src/main/java/org/owasp/webgoat/jwt/JWTFinalEndpoint.java"},"region":{"startLine":132}},"message":{"text":"Parameter \"jwtToken\" receives the tainted data."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/jwt/src/main/java/org/owasp/webgoat/jwt/JWTFinalEndpoint.java"},"region":{"startLine":135}},"message":{"text":"Passing the tainted data through \"java.lang.String.substring(int, int)\"."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/jwt/src/main/java/org/owasp/webgoat/jwt/JWTFinalEndpoint.java"},"region":{"startLine":137}},"message":{"text":"Passing the tainted data through \"io.jsonwebtoken.impl.TextCodec.decodeToString(java.lang.String)\"."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/jwt/src/main/java/org/owasp/webgoat/jwt/JWTFinalEndpoint.java"},"region":{"startLine":138}},"message":{"text":"Passing the tainted data through \"java.lang.String.replace(java.lang.CharSequence, java.lang.CharSequence)\"."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/jwt/src/main/java/org/owasp/webgoat/jwt/JWTFinalEndpoint.java"},"region":{"startLine":138}},"message":{"text":"Passing the tainted data through \"java.lang.String.replace(java.lang.CharSequence, java.lang.CharSequence)\"."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/jwt/src/main/java/org/owasp/webgoat/jwt/JWTFinalEndpoint.java"},"region":{"startLine":138}},"message":{"text":"Passing the tainted data through \"java.lang.String.replace(java.lang.CharSequence, java.lang.CharSequence)\"."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/jwt/src/main/java/org/owasp/webgoat/jwt/JWTFinalEndpoint.java"},"region":{"startLine":138}},"message":{"text":"Passing the tainted data through \"java.lang.String.replace(java.lang.CharSequence, java.lang.CharSequence)\"."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/jwt/src/main/java/org/owasp/webgoat/jwt/JWTFinalEndpoint.java"},"region":{"startLine":138}},"message":{"text":"Concatenating \"jsonPayload.replace(\"\\\"\", \"\\\\\\\"\").replace(\"\\t\", \"\").replace(\"\\r\", \"\").replace(\"\\n\", \"\")\" to an HTML page allows cross-site scripting, because it was not properly sanitized for context HTML PCDATA block."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/jwt/src/main/java/org/owasp/webgoat/jwt/JWTFinalEndpoint.java"},"region":{"startLine":138}},"message":{"text":"Perform the following escaping in the following order to guard against cross-site scripting attacks with Java.\n\nFor example: \"Encode.forHtml(jsonPayload)\"\n\n\n* Use the \"Encode.forHtml\" function from the OWASP Java Encoder. This escapes the output for HTML.\n\n"}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/jwt/src/main/java/org/owasp/webgoat/jwt/JWTFinalEndpoint.java"},"region":{"startLine":138}},"message":{"text":"Printing to HTML output."}}}]}]}]},{"message":{"text":"[See in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/issues/E9EFA9F89F44780AACC2929E9A934A0B?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026filter=issueType%3Alocalized-name%3DDm:%20Dubious%20method%20used%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dwebgoat-integration-tests%2Fsrc%2Ftest%2Fjava%2Forg%2Fowasp%2Fwebgoat%2FCryptoTest.java)\n\nFound a call to a method which will perform a byte to String (or String to byte) conversion, and will assume that the default platform encoding is suitable. (\u003ca href=\"/doc/en/spotbugs/sb_checker_ref.html#FB.DM_DEFAULT_ENCODING\" target=\"_blank\"\u003eFrom SpotBugs description\u003c/a\u003e)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"webgoat-integration-tests/src/test/java/org/owasp/webgoat/CryptoTest.java"},"region":{"startLine":125}}}],"ruleId":"FB.DM_DEFAULT_ENCODING|java","partialFingerprints":{"ruleIdLocationHash/v1":"fe810cba3e237f6e7580027df8c53f34f60ac5ebb3dba190e238ea60685e759c"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-integration-tests/src/test/java/org/owasp/webgoat/CryptoTest.java"},"region":{"startLine":125}},"message":{"text":"Found reliance on default encoding: new String(byte[])."}}}]}]}]},{"message":{"text":"[See in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/issues/3FF366121E5D389EE03AD0238BD3D264?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026filter=issueType%3Alocalized-name%3DImproper%20Access%20Control%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dgoat-with-reverseproxy.yaml)\n\nThe Docker container is not configured to drop all default capabilities and then add only required one. Thus the container may be granted excessive privileges which violate the least privilege principle."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"goat-with-reverseproxy.yaml"},"region":{"startLine":36}}}],"ruleId":"sigma.least_privilege_violation:docker_compose|text","partialFingerprints":{"ruleIdLocationHash/v1":"e3820e2a5e32d49d24ca8da4f41e638a4d88ee3da1f91b976059edca96505eb1"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"goat-with-reverseproxy.yaml"},"region":{"startLine":36}},"message":{"text":"The Docker container is not configured to drop all default capabilities and then add only required one. Thus the container may be granted excessive privileges which violate the least privilege principle."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"goat-with-reverseproxy.yaml"},"region":{"startLine":36}},"message":{"text":"Remove all the default capabilities from the list of capabilities by setting the `cap_drop` value to `ALL` and then add only specific capabilities needed by a container."}}}]}]}]},{"message":{"text":"[See in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/issues/9ACFC4C532FAAE094E6BC213B388DA38?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026filter=issueType%3Alocalized-name%3DSIC:%20Inner%20class%20could%20be%20made%20static%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dwebgoat-lessons%2Fchallenge%2Fsrc%2Fmain%2Fjava%2Forg%2Fowasp%2Fwebgoat%2Fchallenges%2Fchallenge7%2FMD5.java)\n\nThis class is an inner class, but does not use its embedded reference to the object which created it. (\u003ca href=\"/doc/en/spotbugs/sb_checker_ref.html#FB.SIC_INNER_SHOULD_BE_STATIC\" target=\"_blank\"\u003eFrom SpotBugs description\u003c/a\u003e)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/challenge/src/main/java/org/owasp/webgoat/challenges/challenge7/MD5.java"},"region":{"startLine":447}}}],"ruleId":"FB.SIC_INNER_SHOULD_BE_STATIC|java","partialFingerprints":{"ruleIdLocationHash/v1":"b241f13bcebcca535f5a36e5b06e2946d0643ac77aa94043f35910f0628174f3"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/challenge/src/main/java/org/owasp/webgoat/challenges/challenge7/MD5.java"},"region":{"startLine":447}},"message":{"text":"Should org.owasp.webgoat.challenges.challenge7.MD5$MD5State be a _static_ inner class?"}}}]}]}]},{"message":{"text":"[See in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/issues/C7F3903E448241356FBDC43B5D39B7E7?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026filter=issueType%3Alocalized-name%3DDm:%20Dubious%20method%20used%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dwebgoat-integration-tests%2Fsrc%2Ftest%2Fjava%2Forg%2Fowasp%2Fwebgoat%2FJWTLessonTest.java)\n\nFound a call to a method which will perform a byte to String (or String to byte) conversion, and will assume that the default platform encoding is suitable. (\u003ca href=\"/doc/en/spotbugs/sb_checker_ref.html#FB.DM_DEFAULT_ENCODING\" target=\"_blank\"\u003eFrom SpotBugs description\u003c/a\u003e)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"webgoat-integration-tests/src/test/java/org/owasp/webgoat/JWTLessonTest.java"},"region":{"startLine":143}}}],"ruleId":"FB.DM_DEFAULT_ENCODING|java","partialFingerprints":{"ruleIdLocationHash/v1":"8a11b6eec8ce6317c15de63d9491421b991a92306da805d7bf833737d918fed1"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-integration-tests/src/test/java/org/owasp/webgoat/JWTLessonTest.java"},"region":{"startLine":143}},"message":{"text":"Found reliance on default encoding: new String(byte[])."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-integration-tests/src/test/java/org/owasp/webgoat/JWTLessonTest.java"},"region":{"startLine":145}},"message":{"text":"Another occurrence here"}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-integration-tests/src/test/java/org/owasp/webgoat/JWTLessonTest.java"},"region":{"startLine":153}},"message":{"text":"Another occurrence here"}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-integration-tests/src/test/java/org/owasp/webgoat/JWTLessonTest.java"},"region":{"startLine":154}},"message":{"text":"Another occurrence here"}}}]}]}]},{"message":{"text":"[See in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/issues/0DFB89071B050108F0448DD74EDC6CBA?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026filter=issueType%3Alocalized-name%3DImproper%20Privilege%20Management%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Ddocker-compose-postgres.yml)\n\nThe Docker Compose file sets the `no-new-privileges` attribute to `false` or omits it as the default value is `false`. This doesn't restrict the container from acquiring additional privileges via SUID or SGID bits. This allows privilege escalation, meaning a user can set the security context of the container and can perform root-level operations."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"docker-compose-postgres.yml"},"region":{"startLine":20}}}],"ruleId":"sigma.container_privilege_escalation_allowed:docker_compose|text","partialFingerprints":{"ruleIdLocationHash/v1":"92dacfd92a3bd590fce8cbec4a2e275e587e868d8628886f7ed6844f2ff39bc1"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"docker-compose-postgres.yml"},"region":{"startLine":20}},"message":{"text":"The Docker Compose file sets the `no-new-privileges` attribute to `false` or omits it as the default value is `false`. This doesn't restrict the container from acquiring additional privileges via SUID or SGID bits. This allows privilege escalation, meaning a user can set the security context of the container and can perform root-level operations."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"docker-compose-postgres.yml"},"region":{"startLine":20}},"message":{"text":"Disable container privilege escalation by explicitly setting `no-new-privileges` to `true`."}}}]}]}]},{"message":{"text":"[See in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/issues/73B0556D7E8496B41112B8874E073ED5?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026filter=issueType%3Alocalized-name%3DUnreachable%252C%20Unused%20or%20Dead%20Code%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dwebgoat-lessons%2Fchallenge%2Fsrc%2Fmain%2Fjava%2Forg%2Fowasp%2Fwebgoat%2Fchallenges%2Fchallenge1%2FAssignment1.java)\n\nCode can never be reached because of a logical contradiction"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/challenge/src/main/java/org/owasp/webgoat/challenges/challenge1/Assignment1.java"},"region":{"startLine":53}}}],"ruleId":"deadcode:logical_contradiction|java","partialFingerprints":{"ruleIdLocationHash/v1":"f98bf66034a354c0638b947f97df77cc51178e2f971756207c29b29762f4f1b5"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/challenge/src/main/java/org/owasp/webgoat/challenges/challenge1/Assignment1.java"},"region":{"startLine":50}},"message":{"text":"Condition \"passwordCorrect\", taking false branch. Now the value of \"passwordCorrect\" is equal to 0."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/challenge/src/main/java/org/owasp/webgoat/challenges/challenge1/Assignment1.java"},"region":{"startLine":52}},"message":{"text":"At condition \"passwordCorrect\", the value of \"passwordCorrect\" must be equal to 0."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/challenge/src/main/java/org/owasp/webgoat/challenges/challenge1/Assignment1.java"},"region":{"startLine":52}},"message":{"text":"The condition \"passwordCorrect\" cannot be true."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/challenge/src/main/java/org/owasp/webgoat/challenges/challenge1/Assignment1.java"},"region":{"startLine":53}},"message":{"text":"Execution cannot reach this statement: \"return failed(this).feedbac...\"."}}}]}]}]},{"message":{"text":"[See in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/issues/3DA3DDCC4188C8E4D378A5E384663693?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026filter=issueType%3Alocalized-name%3DImproper%20Resource%20Shutdown%20or%20Release%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dwebgoat-lessons%2Fsql-injection%2Fsrc%2Fmain%2Fjava%2Forg%2Fowasp%2Fwebgoat%2Fsql_injection%2Fintroduction%2FSqlInjectionLesson9.java)\n\nLeak of a system resource"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson9.java"},"region":{"startLine":76}}}],"ruleId":"resource_leak|java","partialFingerprints":{"ruleIdLocationHash/v1":"57a9a54f1fae3d0d51300e065f4197dbb5a6b4f7e3a737cb9ebecef73325154c"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson9.java"},"region":{"startLine":64}},"message":{"text":"A new resource is returned from allocation method \"createStatement\"."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson9.java"},"region":{"startLine":64}},"message":{"text":"Assigning: \"statement\" = resource returned from \"connection.createStatement(1005, 1008)\"."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson9.java"},"region":{"startLine":66}},"message":{"text":"Resource \"statement\" is not closed or saved in \"executeQuery\"."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson9.java"},"region":{"startLine":68}},"message":{"text":"Condition \"results.getStatement() != null\", taking true branch."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson9.java"},"region":{"startLine":69}},"message":{"text":"Condition \"results.first()\", taking true branch."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson9.java"},"region":{"startLine":71}},"message":{"text":"Falling through to end of if statement."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson9.java"},"region":{"startLine":76}},"message":{"text":"Variable \"statement\" going out of scope leaks the resource it refers to."}}}]}]}]},{"message":{"text":"[See in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/issues/7E462837BB53C65614661F0C72764902?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026filter=issueType%3Alocalized-name%3DUse%20of%20Hard-coded%20Credentials%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dwebwolf%2Fsrc%2Ftest%2Fjava%2Forg%2Fowasp%2Fwebwolf%2Fuser%2FUserValidatorTest.java)\n\nA secret, such as a password, cryptographic key, or token is stored in plaintext directly in the source code, in an application's properties, or configuration file. Users with access to the secret may then use the secret to access resources that they otherwise would not have access to."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"webwolf/src/test/java/org/owasp/webwolf/user/UserValidatorTest.java"},"region":{"startLine":77}}}],"ruleId":"sigma.hardcoded_secret:pattern|java","partialFingerprints":{"ruleIdLocationHash/v1":"1b8f169bca6b3cc4875a64bf483397b9920073a41fc922f5f4e31345010bf672"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"webwolf/src/test/java/org/owasp/webwolf/user/UserValidatorTest.java"},"region":{"startLine":77}},"message":{"text":"A secret, such as a password, cryptographic key, or token is stored in plaintext directly in the source code, in an application's properties, or configuration file. Users with access to the secret may then use the secret to access resources that they otherwise would not have access to. Secret type: Password (generic)."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webwolf/src/test/java/org/owasp/webwolf/user/UserValidatorTest.java"},"region":{"startLine":77}},"message":{"text":"Avoid setting sensitive configuration values as string literals. Instead, these values should be set using variables with the sensitive data loaded from an encrypted file or a secret store."}}}]}]}]},{"message":{"text":"[See in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/issues/9E5CDE16DFEA356CF23BFF9924F7F475?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026filter=issueType%3Alocalized-name%3DDm:%20Dubious%20method%20used%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dwebgoat-lessons%2Fpath-traversal%2Fsrc%2Ftest%2Fjava%2Forg%2Fowasp%2Fwebgoat%2Fpath_traversal%2FProfileUploadFixTest.java)\n\nFound a call to a method which will perform a byte to String (or String to byte) conversion, and will assume that the default platform encoding is suitable. (\u003ca href=\"/doc/en/spotbugs/sb_checker_ref.html#FB.DM_DEFAULT_ENCODING\" target=\"_blank\"\u003eFrom SpotBugs description\u003c/a\u003e)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/path-traversal/src/test/java/org/owasp/webgoat/path_traversal/ProfileUploadFixTest.java"},"region":{"startLine":47}}}],"ruleId":"FB.DM_DEFAULT_ENCODING|java","partialFingerprints":{"ruleIdLocationHash/v1":"cdf119aa2290b5a3fbd8f83499773fed11484af0d7d586b1dcf6044570e20557"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/path-traversal/src/test/java/org/owasp/webgoat/path_traversal/ProfileUploadFixTest.java"},"region":{"startLine":47}},"message":{"text":"Found reliance on default encoding: String.getBytes()."}}}]}]}]},{"message":{"text":"[See in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/issues/3A27C0D713694F0A2C51C72BE8BCAF18?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026filter=issueType%3Alocalized-name%3DUse%20of%20Hard-coded%20Credentials%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dwebgoat-lessons%2Fjwt%2Fsrc%2Fmain%2Fresources%2Fhtml%2FJWT.html)\n\nA secret, such as a password, cryptographic key, or token is stored in plaintext directly in the source code, in an application's properties, or configuration file. Users with access to the secret may then use the secret to access resources that they otherwise would not have access to."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/jwt/src/main/resources/html/JWT.html"},"region":{"startLine":38}}}],"ruleId":"sigma.hardcoded_secret:pattern|html","partialFingerprints":{"ruleIdLocationHash/v1":"8a3d9a0052795204d18cbbc19ec855bf84657b550ce9aad7ebc12bc7bbd016ed"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/jwt/src/main/resources/html/JWT.html"},"region":{"startLine":38}},"message":{"text":"A secret, such as a password, cryptographic key, or token is stored in plaintext directly in the source code, in an application's properties, or configuration file. Users with access to the secret may then use the secret to access resources that they otherwise would not have access to. Secret type: Secret (generic)."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/jwt/src/main/resources/html/JWT.html"},"region":{"startLine":38}},"message":{"text":"Avoid setting sensitive configuration values as string literals. Instead, these values should be set using variables with the sensitive data loaded from an encrypted file or a secret store."}}}]}]}]},{"message":{"text":"[See in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/issues/E8A9811D3D96FC7B8B558BF36172E460?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026filter=issueType%3Alocalized-name%3DCleartext%20Storage%20in%20a%20File%20or%20on%20Disk%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dwebwolf%2Fsrc%2Fmain%2Fjava%2Forg%2Fowasp%2Fwebwolf%2Fuser%2FUserService.java)\n\nStoring unencrypted sensitive data to a database."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"webwolf/src/main/java/org/owasp/webwolf/user/UserService.java"},"region":{"startLine":57}}}],"ruleId":"sensitive_data_leak:cleartext_in_database|java","partialFingerprints":{"ruleIdLocationHash/v1":"dbee10e06e77dabefba64d75aa2c646fcbe787ccb982bcfe32e49e2050bdc0a3"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"webwolf/src/main/java/org/owasp/webwolf/user/UserService.java"},"region":{"startLine":57}},"message":{"text":"Calling \"WebGoatUser\". This call stores sensitive data in \"password\"."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webwolf/src/main/java/org/owasp/webwolf/user/UserService.java"},"region":{"startLine":57}},"message":{"text":"Calling \"save\u003corg.owasp.webwolf.user.WebGoatUser\u003e\". This stores the sensitive data \"new org.owasp.webwolf.user.WebGoatUser(username, password)\" to a database. It may be exposed to unintended individuals. (The virtual call resolves to \"org.springframework.data.repository.CrudRepository.save\u003cS\u003e(java.lang.Object)\".)"}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webwolf/src/main/java/org/owasp/webwolf/user/UserService.java"},"region":{"startLine":57}},"message":{"text":"Do not leak this data to a database."}}}]}]}]},{"message":{"text":"[See in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/issues/965C22D17B1FD58127CC7ECAB001E36A?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026filter=issueType%3Alocalized-name%3DImproper%20Resource%20Shutdown%20or%20Release%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dwebgoat-lessons%2Fchallenge%2Fsrc%2Fmain%2Fjava%2Forg%2Fowasp%2Fwebgoat%2Fchallenges%2Fchallenge7%2FMD5.java)\n\nLeak of a system resource on an exception path (probably error handling)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/challenge/src/main/java/org/owasp/webgoat/challenges/challenge7/MD5.java"},"region":{"startLine":184}}}],"ruleId":"resource_leak:exceptional_path|java","partialFingerprints":{"ruleIdLocationHash/v1":"683d49f61d56e86f45be3f984f154cde5809d0990f8fd1a14642189755595f23"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/challenge/src/main/java/org/owasp/webgoat/challenges/challenge7/MD5.java"},"region":{"startLine":183}},"message":{"text":"\"new java.io.FileInputStream(f)\" creates a new resource."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/challenge/src/main/java/org/owasp/webgoat/challenges/challenge7/MD5.java"},"region":{"startLine":183}},"message":{"text":"Assigning: \"is\" = resource returned from \"new java.io.FileInputStream(f)\"."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/challenge/src/main/java/org/owasp/webgoat/challenges/challenge7/MD5.java"},"region":{"startLine":184}},"message":{"text":"Resource \"is\" is not closed or saved in \"getHashString\"."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/challenge/src/main/java/org/owasp/webgoat/challenges/challenge7/MD5.java"},"region":{"startLine":184}},"message":{"text":"Throwing \"java.io.IOException\" (or subclass) from call to \"getHashString\"; exiting method with uncaught exception."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/challenge/src/main/java/org/owasp/webgoat/challenges/challenge7/MD5.java"},"region":{"startLine":184}},"message":{"text":"Variable \"is\" going out of scope leaks the resource it refers to."}}}]}]}]},{"message":{"text":"[See in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/issues/1DA9E36FE2825FCDD5F35A9B72C03D0E?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026filter=issueType%3Alocalized-name%3DUse%20of%20Hard-coded%20Cryptographic%20Key%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dwebgoat-lessons%2Fjwt%2Fsrc%2Fmain%2Fjava%2Forg%2Fowasp%2Fwebgoat%2Fjwt%2FJWTVotesEndpoint.java)\n\nA cryptographic key is stored directly in the source code."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/jwt/src/main/java/org/owasp/webgoat/jwt/JWTVotesEndpoint.java"},"region":{"startLine":112}}}],"ruleId":"hardcoded_credentials:cryptographic_key|java","partialFingerprints":{"ruleIdLocationHash/v1":"1cd0919d6f749490a4414aa997509059af6dea0b79bfd71372bedeff16c64423"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/jwt/src/main/java/org/owasp/webgoat/jwt/JWTVotesEndpoint.java"},"region":{"startLine":61}},"message":{"text":"Calling at a later point \"\u003cclinit\u003e\". This call assigns \"victory\" to \"JWT_PASSWORD\"."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/jwt/src/main/java/org/owasp/webgoat/jwt/JWTVotesEndpoint.java"},"region":{"startLine":61}},"message":{"text":"Calling at a later point \"\u003cclinit\u003e\". This call assigns a reference to \"JWT_PASSWORD\" to \"JWT_PASSWORD\"."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/jwt/src/main/java/org/owasp/webgoat/jwt/JWTVotesEndpoint.java"},"region":{"startLine":112}},"message":{"text":"Calling at a later point \"getVotes\". This call uses the constant string as a cryptographic key."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/jwt/src/main/java/org/owasp/webgoat/jwt/JWTVotesEndpoint.java"},"region":{"startLine":112}},"message":{"text":"Cryptographic keys should be stored in a Properties file in a location that is inaccessible to unauthorized users."}}}]}]}]},{"message":{"text":"[See in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/issues/555FD63CB488CC01255C9FAA047435B8?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026filter=issueType%3Alocalized-name%3DAssignment%20to%20Variable%20without%20Use%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dwebgoat-lessons%2Fjwt%2Fsrc%2Ftest%2Fjava%2Forg%2Fowasp%2Fwebgoat%2Fjwt%2FJWTFinalEndpointTest.java)\n\nThis instruction assigns a value to a local variable, but the value is not read or used in any subsequent instruction. (\u003ca href=\"/doc/en/spotbugs/sb_checker_ref.html#FB.DLS_DEAD_LOCAL_STORE\" target=\"_blank\"\u003eFrom SpotBugs description\u003c/a\u003e)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/jwt/src/test/java/org/owasp/webgoat/jwt/JWTFinalEndpointTest.java"},"region":{"startLine":94}}}],"ruleId":"FB.DLS_DEAD_LOCAL_STORE|java","partialFingerprints":{"ruleIdLocationHash/v1":"6e8c888c183ca1a0dd6c535a0415f93debf608e3986c152662fd7345a677be30"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/jwt/src/test/java/org/owasp/webgoat/jwt/JWTFinalEndpointTest.java"},"region":{"startLine":94}},"message":{"text":"Dead store to $L6."}}}]}]}]},{"message":{"text":"[See in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/issues/BDB792C15967DF25CD8AE6FE680A5154?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026filter=issueType%3Alocalized-name%3DDm:%20Dubious%20method%20used%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dwebgoat-lessons%2Fchallenge%2Fsrc%2Fmain%2Fjava%2Forg%2Fowasp%2Fwebgoat%2Fchallenges%2Fchallenge7%2FMD5.java)\n\nFound a call to a method which will perform a byte to String (or String to byte) conversion, and will assume that the default platform encoding is suitable. (\u003ca href=\"/doc/en/spotbugs/sb_checker_ref.html#FB.DM_DEFAULT_ENCODING\" target=\"_blank\"\u003eFrom SpotBugs description\u003c/a\u003e)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/challenge/src/main/java/org/owasp/webgoat/challenges/challenge7/MD5.java"},"region":{"startLine":385}}}],"ruleId":"FB.DM_DEFAULT_ENCODING|java","partialFingerprints":{"ruleIdLocationHash/v1":"b3891f64a155681f927a67e597c9b12bb19202937f75cbe2e5ae337ebd358551"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/challenge/src/main/java/org/owasp/webgoat/challenges/challenge7/MD5.java"},"region":{"startLine":385}},"message":{"text":"Found reliance on default encoding: String.getBytes()."}}}]}]}]},{"message":{"text":"[See in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/issues/605B9338CD0B069D05A82F51EEB79FA1?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026filter=issueType%3Alocalized-name%3DCross-Site%20Request%20Forgery%20%28CSRF%29%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dwebwolf%2Fsrc%2Fmain%2Fjava%2Forg%2Fowasp%2Fwebwolf%2FWebSecurityConfig.java)\n\nThe Spring Security CSRF protection is disabled. An attacker may trick a client into making an unintentional request to the web server which will be treated as an authentic request. It may result in unintended execution of sensitive functionality or in exposure of data if the CSRF protection is disabled."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"webwolf/src/main/java/org/owasp/webwolf/WebSecurityConfig.java"},"region":{"startLine":56}}}],"ruleId":"sigma.csrf_protection_disabled:spring_security_code|java","partialFingerprints":{"ruleIdLocationHash/v1":"9d8344853decde9fcb0d6670d7fab4748196bd63d8aa85a2ebb75bdf87735bb3"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"webwolf/src/main/java/org/owasp/webwolf/WebSecurityConfig.java"},"region":{"startLine":56}},"message":{"text":"The Spring Security CSRF protection is disabled. An attacker may trick a client into making an unintentional request to the web server which will be treated as an authentic request. It may result in unintended execution of sensitive functionality or in exposure of data if the CSRF protection is disabled."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webwolf/src/main/java/org/owasp/webwolf/WebSecurityConfig.java"},"region":{"startLine":56}},"message":{"text":"Enable the Spring Security CSRF protection by omitting the invocation of `disable()`."}}}]}]}]},{"message":{"text":"[See in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/issues/C37FE86941CB0DEA86428996BF26C253?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026filter=issueType%3Alocalized-name%3DUse%20of%20Hard-coded%20Credentials%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dwebgoat-container%2Fsrc%2Ftest%2Fjava%2Forg%2Fowasp%2Fwebgoat%2Fusers%2FUserValidatorTest.java)\n\nA secret, such as a password, cryptographic key, or token is stored in plaintext directly in the source code, in an application's properties, or configuration file. Users with access to the secret may then use the secret to access resources that they otherwise would not have access to."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"webgoat-container/src/test/java/org/owasp/webgoat/users/UserValidatorTest.java"},"region":{"startLine":53}}}],"ruleId":"sigma.hardcoded_secret:pattern|java","partialFingerprints":{"ruleIdLocationHash/v1":"af130e00db9c2ce40cda2ccff4be8d92683313428ded2bf81efb71618f13acd8"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-container/src/test/java/org/owasp/webgoat/users/UserValidatorTest.java"},"region":{"startLine":53}},"message":{"text":"A secret, such as a password, cryptographic key, or token is stored in plaintext directly in the source code, in an application's properties, or configuration file. Users with access to the secret may then use the secret to access resources that they otherwise would not have access to. Secret type: Password (generic)."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-container/src/test/java/org/owasp/webgoat/users/UserValidatorTest.java"},"region":{"startLine":53}},"message":{"text":"Avoid setting sensitive configuration values as string literals. Instead, these values should be set using variables with the sensitive data loaded from an encrypted file or a secret store."}}}]}]}]},{"message":{"text":"[See in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/issues/17DF56FBC0940027B53F69E96533A51B?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026filter=issueType%3Alocalized-name%3DUse%20of%20Hard-coded%20Credentials%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dwebgoat-lessons%2Fjwt%2Fsrc%2Ftest%2Fjava%2Forg%2Fowasp%2Fwebgoat%2Fjwt%2FJWTFinalEndpointTest.java)\n\nA secret, such as a password, cryptographic key, or token is stored in plaintext directly in the source code, in an application's properties, or configuration file. Users with access to the secret may then use the secret to access resources that they otherwise would not have access to."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/jwt/src/test/java/org/owasp/webgoat/jwt/JWTFinalEndpointTest.java"},"region":{"startLine":88}}}],"ruleId":"sigma.hardcoded_secret:pattern|java","partialFingerprints":{"ruleIdLocationHash/v1":"30f3efb613129ff973f3e4077a7ddb3f5f714ed7213db4222e008f236f455845"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/jwt/src/test/java/org/owasp/webgoat/jwt/JWTFinalEndpointTest.java"},"region":{"startLine":88}},"message":{"text":"A secret, such as a password, cryptographic key, or token is stored in plaintext directly in the source code, in an application's properties, or configuration file. Users with access to the secret may then use the secret to access resources that they otherwise would not have access to. Secret type: Secret (generic)."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/jwt/src/test/java/org/owasp/webgoat/jwt/JWTFinalEndpointTest.java"},"region":{"startLine":88}},"message":{"text":"Avoid setting sensitive configuration values as string literals. Instead, these values should be set using variables with the sensitive data loaded from an encrypted file or a secret store."}}}]}]}]},{"message":{"text":"[See in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/issues/F21DA81622566A7E3E3BC5A25DF0664F?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026filter=issueType%3Alocalized-name%3DTrust%20Boundary%20Violation%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dwebgoat-lessons%2Fcrypto%2Fsrc%2Fmain%2Fjava%2Forg%2Fowasp%2Fwebgoat%2Fcrypto%2FEncodingAssignment.java)\n\nA user-controllable string is stored in a trusted data structure."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/crypto/src/main/java/org/owasp/webgoat/crypto/EncodingAssignment.java"},"region":{"startLine":55}}}],"ruleId":"trust_boundary_violation|java","partialFingerprints":{"ruleIdLocationHash/v1":"49f31b699bce44a97b859ffe203990e68dd694a201c38ac6c300acdefcb42a73"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/crypto/src/main/java/org/owasp/webgoat/crypto/EncodingAssignment.java"},"region":{"startLine":48}},"message":{"text":"\"getBasicAuth\" is an entry point function."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/crypto/src/main/java/org/owasp/webgoat/crypto/EncodingAssignment.java"},"region":{"startLine":51}},"message":{"text":"Calling \"getUserPrincipal\". Reading data from an HTTP request, which is considered tainted (The virtual call resolves to \"javax.servlet.http.HttpServletRequest.getUserPrincipal()\".)"}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/crypto/src/main/java/org/owasp/webgoat/crypto/EncodingAssignment.java"},"region":{"startLine":51}},"message":{"text":"Calling \"getName\". This call assigns \"request.getUserPrincipal()\" to \"\u003creturn value\u003e\". Now \"\u003creturn value\u003e\" is tainted. (The virtual call resolves to \"java.security.Principal.getName()\".)"}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/crypto/src/main/java/org/owasp/webgoat/crypto/EncodingAssignment.java"},"region":{"startLine":51}},"message":{"text":"Assigning: \"username\" = \"request.getUserPrincipal().getName()\"."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/crypto/src/main/java/org/owasp/webgoat/crypto/EncodingAssignment.java"},"region":{"startLine":54}},"message":{"text":"Calling \"getBasicAuth\". This call assigns \"username\" to \"\u003creturn value\u003e\". Now \"\u003creturn value\u003e\" is tainted."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/crypto/src/main/java/org/owasp/webgoat/crypto/EncodingAssignment.java"},"region":{"startLine":54}},"message":{"text":"Assigning: \"basicAuth\" = \"org.owasp.webgoat.crypto.EncodingAssignment.getBasicAuth(username, password)\"."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/crypto/src/main/java/org/owasp/webgoat/crypto/EncodingAssignment.java"},"region":{"startLine":55}},"message":{"text":"Passing \"basicAuth\" to \"setAttribute\"."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/crypto/src/main/java/org/owasp/webgoat/crypto/EncodingAssignment.java"},"region":{"startLine":55}},"message":{"text":"Calling \"setAttribute\" with the tainted value in \"basicAuth\". Using the tainted data \"basicAuth\" in a context that is often assumed to be trustworthy. Because trusted data may not be validated or sanitized, this data could be mistakenly used in an insecure manner."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/crypto/src/main/java/org/owasp/webgoat/crypto/EncodingAssignment.java"},"region":{"startLine":55}},"message":{"text":"Check the user input against a list of acceptable strings (whitelisting). If the list must be dynamic, validate that the user input corresponds to expectations."}}}]}]}]},{"message":{"text":"[See in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/issues/15A27093160AA4B62AD71A3C0AB11338?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026filter=issueType%3Alocalized-name%3DSQL%20Injection%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dwebgoat-lessons%2Fsql-injection%2Fsrc%2Fmain%2Fjava%2Forg%2Fowasp%2Fwebgoat%2Fsql_injection%2Fintroduction%2FSqlInjectionLesson9.java)\n\nUntrusted user-supplied data is inserted into a SQL statement without adequate validation, escaping, or filtering."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson9.java"},"region":{"startLine":56}}}],"ruleId":"sql_injection:sink|java","partialFingerprints":{"ruleIdLocationHash/v1":"13e29b4c8b1d10d65bc613f60e9d72d55c84fc1d6a56c777dc63154a3f0983ff"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson9.java"},"region":{"startLine":55}},"message":{"text":"\"completed\" is an entry point function."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson9.java"},"region":{"startLine":55}},"message":{"text":"The \"auth_tan\" is tainted."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson9.java"},"region":{"startLine":56}},"message":{"text":"Calling \"injectableQueryIntegrity\". Passing the tainted value \"auth_tan\" to the SQL API may allow an attacker to inject SQL. (The virtual call resolves to \"org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson9.injectableQueryIntegrity(java.lang.String, java.lang.String)\".)"}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson9.java"},"region":{"startLine":56}},"message":{"text":"Use one of the following methods:\n* Use a query-preparation API to safely construct the SQL query containing user-supplied values.\n* Only concatenate a user-supplied value into a query if it has been checked against a whitelist of safe string values, or if it must be a Boolean or numeric type.\n"}}}]}]}]},{"message":{"text":"[See in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/issues/3426FCB1014EEF8D41F68AB38496A0A2?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026filter=issueType%3Alocalized-name%3DXML%20External%20Entity%20%28XXE%29%20Injection%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dwebgoat-lessons%2Fxxe%2Fsrc%2Fmain%2Fjava%2Forg%2Fowasp%2Fwebgoat%2Fxxe%2FComments.java)\n\nThe application parses XML using the `javax.xml.stream.XMLInputFactory` class which has not been configured to prevent expansion of external entities during XML parsing by disabling the XML external entities and DTD features. External entity expansion may cause a server-side request forgery, denial of service, exposure of sensitive data or unwanted server requests."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/xxe/src/main/java/org/owasp/webgoat/xxe/Comments.java"},"region":{"startLine":89}}}],"ruleId":"sigma.xml_external_entity_enabled:input_factory|java","partialFingerprints":{"ruleIdLocationHash/v1":"26f0a02713e3c8877737e5c5cf69b0351015e878c876529a32939f87e1aeba62"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/xxe/src/main/java/org/owasp/webgoat/xxe/Comments.java"},"region":{"startLine":89}},"message":{"text":"The application parses XML using the `javax.xml.stream.XMLInputFactory` class which has not been configured to prevent expansion of external entities during XML parsing by disabling the XML external entities and DTD features. External entity expansion may cause a server-side request forgery, denial of service, exposure of sensitive data or unwanted server requests."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/xxe/src/main/java/org/owasp/webgoat/xxe/Comments.java"},"region":{"startLine":89}},"message":{"text":"Disable external entities and DTDs by either: * setting the property `XMLInputFactory.SUPPORT_DTD` to `false`, or * by setting `XMLInputFactory.IS_SUPPORTING_EXTERNAL_ENTITIES` to `false` and `XMLConstants.ACCESS_EXTERNAL_DTD` to an empty string."}}}]}]}]},{"message":{"text":"[See in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/issues/2B0A8EFD289718E3DA786807C6BB1CA7?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026filter=issueType%3Alocalized-name%3DGeneration%20of%20Error%20Message%20Containing%20Sensitive%20Information%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dwebwolf%2Ftarget%2Fclasses%2Fapplication-webwolf.properties)\n\nThe Spring Boot main application server is configured to allow stack traces to be displayed in an error page. The stack traces might contain sensitive information and should not be displayed."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"webwolf/target/classes/application-webwolf.properties"},"region":{"startLine":1}}}],"ruleId":"sigma.verbose_error_message:spring_boot_stacktrace_properties|text","partialFingerprints":{"ruleIdLocationHash/v1":"315729bb7dfc0ee213fdf61370ec1aecf4c0e612c0754c2c86156483c35eeaa0"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"webwolf/target/classes/application-webwolf.properties"},"region":{"startLine":1}},"message":{"text":"The Spring Boot main application server is configured to allow stack traces to be displayed in an error page. The stack traces might contain sensitive information and should not be displayed."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webwolf/target/classes/application-webwolf.properties"},"region":{"startLine":1}},"message":{"text":"Set `server.error.include-stacktrace` to `never` or omit it as the default value is `never`."}}}]}]}]},{"message":{"text":"[See in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/issues/23C5352DEE78DBECF4A2CB67701CDC80?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026filter=issueType%3Alocalized-name%3DImproper%20Privilege%20Management%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Ddocker-compose-local.yml)\n\nThe Docker Compose file sets the `no-new-privileges` attribute to `false` or omits it as the default value is `false`. This doesn't restrict the container from acquiring additional privileges via SUID or SGID bits. This allows privilege escalation, meaning a user can set the security context of the container and can perform root-level operations."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"docker-compose-local.yml"},"region":{"startLine":10}}}],"ruleId":"sigma.container_privilege_escalation_allowed:docker_compose|text","partialFingerprints":{"ruleIdLocationHash/v1":"0fc8e46b4b6c0d5ffeac5361f77a3ebf62db545a8d2f3371734b67c99d2fecd7"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"docker-compose-local.yml"},"region":{"startLine":10}},"message":{"text":"The Docker Compose file sets the `no-new-privileges` attribute to `false` or omits it as the default value is `false`. This doesn't restrict the container from acquiring additional privileges via SUID or SGID bits. This allows privilege escalation, meaning a user can set the security context of the container and can perform root-level operations."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"docker-compose-local.yml"},"region":{"startLine":10}},"message":{"text":"Disable container privilege escalation by explicitly setting `no-new-privileges` to `true`."}}}]}]}]},{"message":{"text":"[See in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/issues/DCCA57BF932BEB41B4D75C90EB81A916?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026filter=issueType%3Alocalized-name%3DUse%20of%20Hard-coded%20Credentials%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dwebwolf%2Fsrc%2Ftest%2Fjava%2Forg%2Fowasp%2Fwebwolf%2Fuser%2FUserValidatorTest.java)\n\nA secret, such as a password, cryptographic key, or token is stored in plaintext directly in the source code, in an application's properties, or configuration file. Users with access to the secret may then use the secret to access resources that they otherwise would not have access to."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"webwolf/src/test/java/org/owasp/webwolf/user/UserValidatorTest.java"},"region":{"startLine":52}}}],"ruleId":"sigma.hardcoded_secret:pattern|java","partialFingerprints":{"ruleIdLocationHash/v1":"ba1cf5aa5adcd13f6638eb60cb353e4762a76f82d37f1d8a23cd3fb0bc4e8bfe"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"webwolf/src/test/java/org/owasp/webwolf/user/UserValidatorTest.java"},"region":{"startLine":52}},"message":{"text":"A secret, such as a password, cryptographic key, or token is stored in plaintext directly in the source code, in an application's properties, or configuration file. Users with access to the secret may then use the secret to access resources that they otherwise would not have access to. Secret type: Password (generic)."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webwolf/src/test/java/org/owasp/webwolf/user/UserValidatorTest.java"},"region":{"startLine":52}},"message":{"text":"Avoid setting sensitive configuration values as string literals. Instead, these values should be set using variables with the sensitive data loaded from an encrypted file or a secret store."}}}]}]}]},{"message":{"text":"[See in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/issues/70D4F5900C13458381B6CA0B7FCD5700?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026filter=issueType%3Alocalized-name%3DDm:%20Dubious%20method%20used%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dwebgoat-lessons%2Fpath-traversal%2Fsrc%2Ftest%2Fjava%2Forg%2Fowasp%2Fwebgoat%2Fpath_traversal%2FProfileUploadTest.java)\n\nFound a call to a method which will perform a byte to String (or String to byte) conversion, and will assume that the default platform encoding is suitable. (\u003ca href=\"/doc/en/spotbugs/sb_checker_ref.html#FB.DM_DEFAULT_ENCODING\" target=\"_blank\"\u003eFrom SpotBugs description\u003c/a\u003e)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/path-traversal/src/test/java/org/owasp/webgoat/path_traversal/ProfileUploadTest.java"},"region":{"startLine":37}}}],"ruleId":"FB.DM_DEFAULT_ENCODING|java","partialFingerprints":{"ruleIdLocationHash/v1":"32574d2474628bc894992c065a40e9e55ae4dc978027a165546752399c493bbf"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/path-traversal/src/test/java/org/owasp/webgoat/path_traversal/ProfileUploadTest.java"},"region":{"startLine":37}},"message":{"text":"Found reliance on default encoding: String.getBytes()."}}}]}]}]},{"message":{"text":"[See in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/issues/84A44B5BA5E647D897846D9972B9BAD8?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026filter=issueType%3Alocalized-name%3DDirectory%20Traversal%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dwebgoat-lessons%2Fpath-traversal%2Fsrc%2Fmain%2Fjava%2Forg%2Fowasp%2Fwebgoat%2Fpath_traversal%2FProfileUploadFix.java)\n\nA user-controllable string is used as part or all of a filesystem path, filename, or URI (uniform resource identifier)."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/path-traversal/src/main/java/org/owasp/webgoat/path_traversal/ProfileUploadFix.java"},"region":{"startLine":27}}}],"ruleId":"path_manipulation|java","partialFingerprints":{"ruleIdLocationHash/v1":"4ed165877c5f42e2a4edc6ec254fb621e9cf57f3b305040fea187c54e1f421ff"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/path-traversal/src/main/java/org/owasp/webgoat/path_traversal/ProfileUploadFix.java"},"region":{"startLine":24}},"message":{"text":"\"uploadFileHandler\" is an entry point function."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/path-traversal/src/main/java/org/owasp/webgoat/path_traversal/ProfileUploadFix.java"},"region":{"startLine":24}},"message":{"text":"The \"fullName\" is tainted."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/path-traversal/src/main/java/org/owasp/webgoat/path_traversal/ProfileUploadFix.java"},"region":{"startLine":27}},"message":{"text":"Calling \"replace\". This call assigns \"fullName\" to \"\u003creturn value\u003e\". Now \"\u003creturn value\u003e\" is tainted. (The virtual call resolves to \"java.lang.String.replace(java.lang.CharSequence, java.lang.CharSequence)\".)"}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/path-traversal/src/main/java/org/owasp/webgoat/path_traversal/ProfileUploadFix.java"},"region":{"startLine":27}},"message":{"text":"Calling \"execute\". Constructing a path or URI using the tainted value in \"(fullName != null) ? fullName.replace(\"../\", \"\") : \"\"\". This may allow an attacker to access, modify, or test the existence of critical or sensitive files."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/path-traversal/src/main/java/org/owasp/webgoat/path_traversal/ProfileUploadFix.java"},"region":{"startLine":27}},"message":{"text":"Path manipulation vulnerabilities can be addressed by proper input validation. Disallowing directory traversal characters (using a deny list) can improve the safety of the input, but the recommended approach is to restrict to a specific set of allowed characters (using an allow list). This should exclude absolute paths and upward directory traversal."}}}]}]}]},{"message":{"text":"[See in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/issues/FE989C95F45CCAF16AC76332F7027E1D?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026filter=issueType%3Alocalized-name%3DSIC:%20Inner%20class%20could%20be%20made%20static%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dwebgoat-lessons%2Fsql-injection%2Fsrc%2Fmain%2Fjava%2Forg%2Fowasp%2Fwebgoat%2Fsql_injection%2Fmitigation%2FServers.java)\n\nThis class is an inner class, but does not use its embedded reference to the object which created it. (\u003ca href=\"/doc/en/spotbugs/sb_checker_ref.html#FB.SIC_INNER_SHOULD_BE_STATIC\" target=\"_blank\"\u003eFrom SpotBugs description\u003c/a\u003e)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/mitigation/Servers.java"},"region":{"startLine":53}}}],"ruleId":"FB.SIC_INNER_SHOULD_BE_STATIC|java","partialFingerprints":{"ruleIdLocationHash/v1":"7c066b16eb8a57df92a16dcdc80db2f9196ae4c87e9d085d46b25a1bf9014871"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/mitigation/Servers.java"},"region":{"startLine":53}},"message":{"text":"Should org.owasp.webgoat.sql_injection.mitigation.Servers$Server be a _static_ inner class?"}}}]}]}]},{"message":{"text":"[See in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/issues/522FAE96FBC68D3B4CA292B374969848?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026filter=issueType%3Alocalized-name%3DUse%20of%20Hard-coded%20Credentials%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dwebwolf%2Fsrc%2Ftest%2Fjava%2Forg%2Fowasp%2Fwebwolf%2Fuser%2FUserValidatorTest.java)\n\nA secret, such as a password, cryptographic key, or token is stored in plaintext directly in the source code, in an application's properties, or configuration file. Users with access to the secret may then use the secret to access resources that they otherwise would not have access to."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"webwolf/src/test/java/org/owasp/webwolf/user/UserValidatorTest.java"},"region":{"startLine":53}}}],"ruleId":"sigma.hardcoded_secret:pattern|java","partialFingerprints":{"ruleIdLocationHash/v1":"f7c8971eb6c550c34c6c2d224fc75349e8e3c6a4571cecdd196847ccf8c10359"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"webwolf/src/test/java/org/owasp/webwolf/user/UserValidatorTest.java"},"region":{"startLine":53}},"message":{"text":"A secret, such as a password, cryptographic key, or token is stored in plaintext directly in the source code, in an application's properties, or configuration file. Users with access to the secret may then use the secret to access resources that they otherwise would not have access to. Secret type: Password (generic)."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webwolf/src/test/java/org/owasp/webwolf/user/UserValidatorTest.java"},"region":{"startLine":53}},"message":{"text":"Avoid setting sensitive configuration values as string literals. Instead, these values should be set using variables with the sensitive data loaded from an encrypted file or a secret store."}}}]}]}]},{"message":{"text":"[See in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/issues/E08425F121E195DFC2EB87D537D1920C?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026filter=issueType%3Alocalized-name%3DInsufficient%20Session%20Expiration%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dwebwolf%2Fsrc%2Fmain%2Fresources%2Fapplication-webwolf.properties)\n\nThe session is configured with an excessively long timeout value. Session-based attacks require an active session. Therefore, the longer a session persists, the more time an attacker has to hijack the session."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"webwolf/src/main/resources/application-webwolf.properties"},"region":{"startLine":8}}}],"ruleId":"sigma.excessive_session_lifetime:spring_boot_properties|text","partialFingerprints":{"ruleIdLocationHash/v1":"b8496dfbddf64b2d1853f280afd4843260aab1bc2c70395cfb24d194773a7e25"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"webwolf/src/main/resources/application-webwolf.properties"},"region":{"startLine":8}},"message":{"text":"The session is configured with an excessively long timeout value. Session-based attacks require an active session. Therefore, the longer a session persists, the more time an attacker has to hijack the session."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webwolf/src/main/resources/application-webwolf.properties"},"region":{"startLine":8}},"message":{"text":"Set the session expiration time to a value greater than or equal to 0, but less than 30 minutes in order to substantially reduce the window of opportunity for session-based attacks."}}}]}]}]},{"message":{"text":"[See in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/issues/975B1DBFAECEA4D399FC00C39C7B3A83?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026filter=issueType%3Alocalized-name%3DMissing%20Synchronization%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dwebgoat-container%2Fsrc%2Fmain%2Fjava%2Forg%2Fowasp%2Fwebgoat%2Fcontroller%2FStartLesson.java)\n\nAttempt to write a shared variable without holding a lock."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"webgoat-container/src/main/java/org/owasp/webgoat/controller/StartLesson.java"},"region":{"startLine":87}}}],"ruleId":"unlocked_access:unlocked_write|java","partialFingerprints":{"ruleIdLocationHash/v1":"ee4cb3a381fc5017d59e6a73ea28af678ca3340de6d27f3eaf0fe2e86dde9bfc"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-container/src/main/java/org/owasp/webgoat/controller/StartLesson.java"},"region":{"startLine":50}},"message":{"text":"\"org.owasp.webgoat.controller.StartLesson\" is thread-shared because it is annotated with \"Controller\"."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-container/src/main/java/org/owasp/webgoat/controller/StartLesson.java"},"region":{"startLine":76}},"message":{"text":"\"lessonPage\" is an entry point because it is annotated with \"RequestMapping\"."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-container/src/main/java/org/owasp/webgoat/controller/StartLesson.java"},"region":{"startLine":87}},"message":{"text":"\"this\" is thread-shared because it has type \"org.owasp.webgoat.controller.StartLesson\"."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-container/src/main/java/org/owasp/webgoat/controller/StartLesson.java"},"region":{"startLine":87}},"message":{"text":"Thread-shared \"ws\" is modified in a concurrent context without any synchronization."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-container/src/main/java/org/owasp/webgoat/controller/StartLesson.java"},"region":{"startLine":87}},"message":{"text":"To avoid data races, make the data thread-local, or add locking to all the concurrent accesses to the data, including the reads."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-container/src/main/java/org/owasp/webgoat/controller/StartLesson.java"},"region":{"startLine":87}},"message":{"text":"\"ws\" is modified in call to \"setCurrentLesson\"."}}}]}]}]},{"message":{"text":"[See in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/issues/321274385B2B47A5BC0CA9E19DEFA8AB?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026filter=issueType%3Alocalized-name%3DUse%20of%20Hard-coded%20Cryptographic%20Key%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dwebgoat-lessons%2Fjwt%2Fsrc%2Fmain%2Fjava%2Forg%2Fowasp%2Fwebgoat%2Fjwt%2FJWTRefreshEndpoint.java)\n\nA cryptographic key is stored directly in the source code."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/jwt/src/main/java/org/owasp/webgoat/jwt/JWTRefreshEndpoint.java"},"region":{"startLine":116}}}],"ruleId":"hardcoded_credentials:cryptographic_key|java","partialFingerprints":{"ruleIdLocationHash/v1":"21e7f5113fc93f06350945fced94e17a85cf4deabe697eb6df83b623698fc27b"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/jwt/src/main/java/org/owasp/webgoat/jwt/JWTRefreshEndpoint.java"},"region":{"startLine":116}},"message":{"text":"The constant string \"\"bm5n3SkxCX4kKRy4\"\" is a credential or key."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/jwt/src/main/java/org/owasp/webgoat/jwt/JWTRefreshEndpoint.java"},"region":{"startLine":116}},"message":{"text":"Calling \"setSigningKey\". This call uses the constant string as a cryptographic key. (The virtual call resolves to \"io.jsonwebtoken.JwtParser.setSigningKey(java.lang.String)\".)"}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/jwt/src/main/java/org/owasp/webgoat/jwt/JWTRefreshEndpoint.java"},"region":{"startLine":116}},"message":{"text":"Cryptographic keys should be stored in a Properties file in a location that is inaccessible to unauthorized users."}}}]}]}]},{"message":{"text":"[See in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/issues/88889EEB8263F14E22E9B33D226F786C?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026filter=issueType%3Alocalized-name%3DUse%20of%20Hard-coded%20Credentials%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dwebgoat-lessons%2Fjwt%2Fsrc%2Fmain%2Fresources%2Fjs%2Fjwt-refresh.js)\n\nA secret, such as a password, cryptographic key, or token is stored in plaintext directly in the source code, in an application's properties, or configuration file. Users with access to the secret may then use the secret to access resources that they otherwise would not have access to."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/jwt/src/main/resources/js/jwt-refresh.js"},"region":{"startLine":10}}}],"ruleId":"sigma.hardcoded_secret:pattern|javascript","partialFingerprints":{"ruleIdLocationHash/v1":"b93373edde4666d1800c94eb4cfd28fa383def3badb8a2e3c58b2b741ae6fb24"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/jwt/src/main/resources/js/jwt-refresh.js"},"region":{"startLine":10}},"message":{"text":"A secret, such as a password, cryptographic key, or token is stored in plaintext directly in the source code, in an application's properties, or configuration file. Users with access to the secret may then use the secret to access resources that they otherwise would not have access to. Secret type: Password (generic)."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/jwt/src/main/resources/js/jwt-refresh.js"},"region":{"startLine":10}},"message":{"text":"Avoid setting sensitive configuration values as string literals. Instead, these values should be set using variables with the sensitive data loaded from an encrypted file or a secret store."}}}]}]}]},{"message":{"text":"[See in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/issues/0FB1DA0710963236838EC1620B7FCE85?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026filter=issueType%3Alocalized-name%3DImproper%20Resource%20Shutdown%20or%20Release%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dwebgoat-lessons%2Fmissing-function-ac%2Fsrc%2Fmain%2Fjava%2Forg%2Fowasp%2Fwebgoat%2Fmissing_ac%2FUsers.java)\n\nLeak of a system resource"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/missing-function-ac/src/main/java/org/owasp/webgoat/missing_ac/Users.java"},"region":{"startLine":74}}}],"ruleId":"resource_leak|java","partialFingerprints":{"ruleIdLocationHash/v1":"aaa1136ab83a103d73a60e371f742ee3e83a8047d538c777cf3f14bcbe4d6a00"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/missing-function-ac/src/main/java/org/owasp/webgoat/missing_ac/Users.java"},"region":{"startLine":54}},"message":{"text":"A new resource is returned from allocation method \"createStatement\"."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/missing-function-ac/src/main/java/org/owasp/webgoat/missing_ac/Users.java"},"region":{"startLine":54}},"message":{"text":"Assigning: \"statement\" = resource returned from \"connection.createStatement(1004, 1007)\"."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/missing-function-ac/src/main/java/org/owasp/webgoat/missing_ac/Users.java"},"region":{"startLine":56}},"message":{"text":"Resource \"statement\" is not closed or saved in \"executeQuery\"."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/missing-function-ac/src/main/java/org/owasp/webgoat/missing_ac/Users.java"},"region":{"startLine":59}},"message":{"text":"Condition \"results != null\", taking true branch."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/missing-function-ac/src/main/java/org/owasp/webgoat/missing_ac/Users.java"},"region":{"startLine":59}},"message":{"text":"Condition \"results.first() == true\", taking false branch."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/missing-function-ac/src/main/java/org/owasp/webgoat/missing_ac/Users.java"},"region":{"startLine":74}},"message":{"text":"Variable \"statement\" going out of scope leaks the resource it refers to."}}}]}]}]},{"message":{"text":"[See in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/issues/24E0849625D46DDF29DC8EB793A87885?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026filter=issueType%3Alocalized-name%3DIncorrect%20Check%20of%20Function%20Return%20Value%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dwebgoat-lessons%2Fclient-side-filtering%2Fsrc%2Fmain%2Fjava%2Forg%2Fowasp%2Fwebgoat%2Fclient_side_filtering%2FSalaries.java)\n\nThis method returns a value that is not checked. (\u003ca href=\"/doc/en/spotbugs/sb_checker_ref.html#FB.RV_RETURN_VALUE_IGNORED_BAD_PRACTICE\" target=\"_blank\"\u003eFrom SpotBugs description\u003c/a\u003e)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/client-side-filtering/src/main/java/org/owasp/webgoat/client_side_filtering/Salaries.java"},"region":{"startLine":59}}}],"ruleId":"FB.RV_RETURN_VALUE_IGNORED_BAD_PRACTICE|java","partialFingerprints":{"ruleIdLocationHash/v1":"ef439878c7fa626a2993806eec1fe76dce318ed08aa0775e172ac6a01d11ceb9"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/client-side-filtering/src/main/java/org/owasp/webgoat/client_side_filtering/Salaries.java"},"region":{"startLine":59}},"message":{"text":"Exceptional return value of java.io.File.mkdir() ignored."}}}]}]}]},{"message":{"text":"[See in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/issues/04ADCF0A785A4FDF6BEA93929A522D87?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026filter=issueType%3Alocalized-name%3DOmitted%20Break%20Statement%20in%20Switch%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dwebgoat-container%2Ftarget%2Fclasses%2Fstatic%2Fjs%2Flibs%2Face.js)\n\nMissing break statement between cases in switch statement"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"webgoat-container/target/classes/static/js/libs/ace.js"},"region":{"startLine":13122}}}],"ruleId":"missing_break:logic_error|javascript","partialFingerprints":{"ruleIdLocationHash/v1":"f281bbb79e519748be749e2c8e36af2af7dca22c6e003dc86339e2e2457c5d79"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-container/target/classes/static/js/libs/ace.js"},"region":{"startLine":13122}},"message":{"text":"The case for value \"\"center-animate\"\" is not terminated by a \"break\" statement."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-container/target/classes/static/js/libs/ace.js"},"region":{"startLine":13124}},"message":{"text":"The above case falls through to this one."}}}]}]}]},{"message":{"text":"[See in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/issues/33EBD71095DAFD2144CCA82DD69DC7D9?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026filter=issueType%3Alocalized-name%3DDm:%20Dubious%20method%20used%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dwebgoat-lessons%2Finsecure-deserialization%2Fsrc%2Fmain%2Fjava%2Forg%2Fdummy%2Finsecure%2Fframework%2FVulnerableTaskHolder.java)\n\nFound a call to a method which will perform a byte to String (or String to byte) conversion, and will assume that the default platform encoding is suitable. (\u003ca href=\"/doc/en/spotbugs/sb_checker_ref.html#FB.DM_DEFAULT_ENCODING\" target=\"_blank\"\u003eFrom SpotBugs description\u003c/a\u003e)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/insecure-deserialization/src/main/java/org/dummy/insecure/framework/VulnerableTaskHolder.java"},"region":{"startLine":61}}}],"ruleId":"FB.DM_DEFAULT_ENCODING|java","partialFingerprints":{"ruleIdLocationHash/v1":"f1b1bed25f540d5837bcfd411281c713b5dbe51bb7040b9f7aa03584419ba9c0"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/insecure-deserialization/src/main/java/org/dummy/insecure/framework/VulnerableTaskHolder.java"},"region":{"startLine":61}},"message":{"text":"Found reliance on default encoding: new java.io.InputStreamReader(InputStream)."}}}]}]}]},{"message":{"text":"[See in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/issues/5D4021930890CE6998890051169539C0?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026filter=issueType%3Alocalized-name%3DSQL%20Injection%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dwebgoat-lessons%2Fsql-injection%2Fsrc%2Fmain%2Fjava%2Forg%2Fowasp%2Fwebgoat%2Fsql_injection%2Fintroduction%2FSqlInjectionLesson5a.java)\n\nUntrusted user-supplied data is inserted into a SQL statement without adequate validation, escaping, or filtering."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson5a.java"},"region":{"startLine":54}}}],"ruleId":"sql_injection:sink|java","partialFingerprints":{"ruleIdLocationHash/v1":"8648e5fb361172cccaa01dfc276b0458c9e451cfc7132fcfc9766e0981690a37"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson5a.java"},"region":{"startLine":53}},"message":{"text":"\"completed\" is an entry point function."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson5a.java"},"region":{"startLine":53}},"message":{"text":"The \"injection\" is tainted."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson5a.java"},"region":{"startLine":54}},"message":{"text":"Creating a tainted string using \"injection\"."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson5a.java"},"region":{"startLine":54}},"message":{"text":"Calling \"injectableQuery\". Passing the tainted value \"account + \" \" + operator + \" \" + injection\" to the SQL API may allow an attacker to inject SQL. (The virtual call resolves to \"org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5a.injectableQuery(java.lang.String)\".)"}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson5a.java"},"region":{"startLine":54}},"message":{"text":"Use one of the following methods:\n* Use a query-preparation API to safely construct the SQL query containing user-supplied values.\n* Only concatenate a user-supplied value into a query if it has been checked against a whitelist of safe string values, or if it must be a Boolean or numeric type.\n"}}}]}]}]},{"message":{"text":"[See in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/issues/DE7F11AD6B2E0053866D4EF51C90C62E?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026filter=issueType%3Alocalized-name%3DSQL%20Injection%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dwebgoat-lessons%2Fsql-injection%2Fsrc%2Fmain%2Fjava%2Forg%2Fowasp%2Fwebgoat%2Fsql_injection%2Fmitigation%2FSqlOnlyInputValidation.java)\n\nUntrusted user-supplied data is inserted into a SQL statement without adequate validation, escaping, or filtering."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/mitigation/SqlOnlyInputValidation.java"},"region":{"startLine":52}}}],"ruleId":"sql_injection:sink|java","partialFingerprints":{"ruleIdLocationHash/v1":"aae4e619ed14aab043fe5c62b9c3a1098eb00b0995ff10997560bc93f9aacebb"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/mitigation/SqlOnlyInputValidation.java"},"region":{"startLine":48}},"message":{"text":"\"attack\" is an entry point function."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/mitigation/SqlOnlyInputValidation.java"},"region":{"startLine":48}},"message":{"text":"The \"userId\" is tainted."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/mitigation/SqlOnlyInputValidation.java"},"region":{"startLine":52}},"message":{"text":"Calling \"injectableQuery\". Passing the tainted value \"userId\" to the SQL API may allow an attacker to inject SQL. (The virtual call resolves to \"org.owasp.webgoat.sql_injection.advanced.SqlInjectionLesson6a.injectableQuery(java.lang.String)\".)"}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/mitigation/SqlOnlyInputValidation.java"},"region":{"startLine":52}},"message":{"text":"Use one of the following methods:\n* Use a query-preparation API to safely construct the SQL query containing user-supplied values.\n* Only concatenate a user-supplied value into a query if it has been checked against a whitelist of safe string values, or if it must be a Boolean or numeric type.\n"}}}]}]}]},{"message":{"text":"[See in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/issues/0E0A28158BA5A7CB2C75C8FCEA0F6FFF?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026filter=issueType%3Alocalized-name%3DAssignment%20to%20Variable%20without%20Use%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dwebgoat-lessons%2Fidor%2Fsrc%2Fmain%2Fjava%2Forg%2Fowasp%2Fwebgoat%2Fidor%2FIDORViewOtherProfile.java)\n\nThis instruction assigns a value to a local variable, but the value is not read or used in any subsequent instruction. (\u003ca href=\"/doc/en/spotbugs/sb_checker_ref.html#FB.DLS_DEAD_LOCAL_STORE\" target=\"_blank\"\u003eFrom SpotBugs description\u003c/a\u003e)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/idor/src/main/java/org/owasp/webgoat/idor/IDORViewOtherProfile.java"},"region":{"startLine":49}}}],"ruleId":"FB.DLS_DEAD_LOCAL_STORE|java","partialFingerprints":{"ruleIdLocationHash/v1":"e47a97ffa8460681423df06d7834a5bb0ec4f94ff2a6b3458951661a8f217f32"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/idor/src/main/java/org/owasp/webgoat/idor/IDORViewOtherProfile.java"},"region":{"startLine":49}},"message":{"text":"Dead store to details."}}}]}]}]},{"message":{"text":"[See in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/issues/7F5EE4850E6D10EE2BAC745F3568AE8D?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026filter=issueType%3Alocalized-name%3DInadequate%20Encryption%20Strength%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dwebgoat-lessons%2Fcrypto%2Fsrc%2Fmain%2Fjava%2Forg%2Fowasp%2Fwebgoat%2Fcrypto%2FCryptoUtil.java)\n\nThe application uses an asymmetric algorithm with insufficient key size, making the ciphertext data vulnerable to brute force attacks."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/crypto/src/main/java/org/owasp/webgoat/crypto/CryptoUtil.java"},"region":{"startLine":36}}}],"ruleId":"sigma.insufficient_asymmetric_key_size:core_java|java","partialFingerprints":{"ruleIdLocationHash/v1":"91a35cae4b5c4e6cd10662b348d68fc8a6c06140597848dad5468ecdc3a0b1ad"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/crypto/src/main/java/org/owasp/webgoat/crypto/CryptoUtil.java"},"region":{"startLine":36}},"message":{"text":"The application uses an asymmetric algorithm with insufficient key size, making the ciphertext data vulnerable to brute force attacks."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/crypto/src/main/java/org/owasp/webgoat/crypto/CryptoUtil.java"},"region":{"startLine":36}},"message":{"text":"Modify the application to adhere to the following minimum key size requirements:\n* 3072 bit key and 283 bit modulus for Diffie-Hellman and DSA algorithms.\n* 3072 bit key for RSA algorithms.\n* 256 bit domain parameters for elliptic curve algorithms."}}}]}]}]},{"message":{"text":"[See in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/issues/761765D9BC41FD999927EBCA71834416?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026filter=issueType%3Alocalized-name%3DUnreachable%252C%20Unused%20or%20Dead%20Code%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dwebgoat-container%2Ftarget%2Fclasses%2Fstatic%2Fjs%2Flibs%2Face.js)\n\nAn expression is useless because it has no side effects and its result is ignored."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"webgoat-container/target/classes/static/js/libs/ace.js"},"region":{"startLine":9117}}}],"ruleId":"no_effect|javascript","partialFingerprints":{"ruleIdLocationHash/v1":"0d828a0d820570c0b339a2f9ef54048af62db4800723904c1f18e76018250eeb"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-container/target/classes/static/js/libs/ace.js"},"region":{"startLine":9117}},"message":{"text":"Reading variable \"i\" and discarding the result. What was this code intended to accomplish?"}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-container/target/classes/static/js/libs/ace.js"},"region":{"startLine":9117}},"message":{"text":"Perhaps this code is incomplete or mistyped in some way."}}}]}]}]},{"message":{"text":"[See in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/issues/EE546523E19622BF7ABFF2AADCC53FB5?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026filter=issueType%3Alocalized-name%3DInsecure%20Object%20Deserialization%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dwebgoat-lessons%2Finsecure-deserialization%2Fsrc%2Fmain%2Fjava%2Forg%2Fowasp%2Fwebgoat%2Fdeserialization%2FInsecureDeserializationTask.java)\n\nA user-controllable string is deserialized."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/insecure-deserialization/src/main/java/org/owasp/webgoat/deserialization/InsecureDeserializationTask.java"},"region":{"startLine":54}}}],"ruleId":"unsafe_deserialization|java","partialFingerprints":{"ruleIdLocationHash/v1":"2d4e0b781c6d1908e978bc33d8d09db6cbb60d580a4bc4eacafc5c68782d8079"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/insecure-deserialization/src/main/java/org/owasp/webgoat/deserialization/InsecureDeserializationTask.java"},"region":{"startLine":46}},"message":{"text":"\"completed\" is an entry point function."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/insecure-deserialization/src/main/java/org/owasp/webgoat/deserialization/InsecureDeserializationTask.java"},"region":{"startLine":46}},"message":{"text":"The \"token\" is tainted."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/insecure-deserialization/src/main/java/org/owasp/webgoat/deserialization/InsecureDeserializationTask.java"},"region":{"startLine":52}},"message":{"text":"Calling \"replace\". This call assigns \"token\" to \"\u003creturn value\u003e\". Now \"\u003creturn value\u003e\" is tainted. (The virtual call resolves to \"java.lang.String.replace(char, char)\".)"}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/insecure-deserialization/src/main/java/org/owasp/webgoat/deserialization/InsecureDeserializationTask.java"},"region":{"startLine":52}},"message":{"text":"Assigning: \"b64token\" = \"token.replace('-', '+').replace('_', '/')\"."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/insecure-deserialization/src/main/java/org/owasp/webgoat/deserialization/InsecureDeserializationTask.java"},"region":{"startLine":54}},"message":{"text":"Calling \"decode\". This call assigns \"b64token\" to \"\u003creturn value\u003e\". Now \"\u003creturn value\u003e\" is tainted. (The virtual call resolves to \"java.util.Base64.Decoder.decode(java.lang.String)\".)"}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/insecure-deserialization/src/main/java/org/owasp/webgoat/deserialization/InsecureDeserializationTask.java"},"region":{"startLine":54}},"message":{"text":"Calling \"ByteArrayInputStream\". This call assigns \"java.util.Base64.getDecoder().decode(b64token)\" to \"\u003cstorage from new\u003e\". Now \"\u003cstorage from new\u003e\" is tainted."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/insecure-deserialization/src/main/java/org/owasp/webgoat/deserialization/InsecureDeserializationTask.java"},"region":{"startLine":54}},"message":{"text":"Passing \"new java.io.ByteArrayInputStream(java.util.Base64.getDecoder().decode(b64token))\" to \"ObjectInputStream\"."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/insecure-deserialization/src/main/java/org/owasp/webgoat/deserialization/InsecureDeserializationTask.java"},"region":{"startLine":54}},"message":{"text":"Calling \"ObjectInputStream\" with the tainted value in \"new java.io.ByteArrayInputStream(java.util.Base64.getDecoder().decode(b64token))\". A tainted value \"new java.io.ByteArrayInputStream(java.util.Base64.getDecoder().decode(b64token))\" is deserialized. This may allow an attacker to bypass security checks or execute arbitrary code."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/insecure-deserialization/src/main/java/org/owasp/webgoat/deserialization/InsecureDeserializationTask.java"},"region":{"startLine":54}},"message":{"text":"If possible, use pure data formats such as JSON or XML to serialize and deserialize untrusted data.  Otherwise, if you must use native serialization methods, check the integrity of the data (for example with HMAC) before deserializing it."}}}]}]}]},{"message":{"text":"[See in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/issues/CE82FF8100C6A79DD2884D6CC769B52A?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026filter=issueType%3Alocalized-name%3DInclusion%20of%20Functionality%20from%20Untrusted%20Control%20Sphere%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Ddocker-compose-local.yml)\n\nThe Docker Compose file does not explicitly set `image` attribute with a specific stable version. Pinning the version of the base image will make the container being built more predictable. Relying on the latest version may silently inherit newer packages, which in the best case may affect application reliability and in the worst case may introduce vulnerabilities."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"docker-compose-local.yml"},"region":{"startLine":13}}}],"ruleId":"sigma.unspecified_software_version:docker_compose|text","partialFingerprints":{"ruleIdLocationHash/v1":"18df6b608ba2ea9923624b13147c9e60ccc276d459328fea6dcde0471fa97e8c"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"docker-compose-local.yml"},"region":{"startLine":13}},"message":{"text":"The Docker Compose file does not explicitly set `image` attribute with a specific stable version. Pinning the version of the base image will make the container being built more predictable. Relying on the latest version may silently inherit newer packages, which in the best case may affect application reliability and in the worst case may introduce vulnerabilities."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"docker-compose-local.yml"},"region":{"startLine":13}},"message":{"text":"Explicitly set the `image` attribute to a specific stable version."}}}]}]}]},{"message":{"text":"[See in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/issues/333125E292841ABC10C82D96BD48261E?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026filter=issueType%3Alocalized-name%3DImproper%20Access%20Control%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Ddocker-compose-local.yml)\n\nThe Docker container is not configured to drop all default capabilities and then add only required one. Thus the container may be granted excessive privileges which violate the least privilege principle."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"docker-compose-local.yml"},"region":{"startLine":5}}}],"ruleId":"sigma.least_privilege_violation:docker_compose|text","partialFingerprints":{"ruleIdLocationHash/v1":"99326a0f7ed62e0b8ce35abce9d1641211d912505e725681d732ac710e634d38"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"docker-compose-local.yml"},"region":{"startLine":5}},"message":{"text":"The Docker container is not configured to drop all default capabilities and then add only required one. Thus the container may be granted excessive privileges which violate the least privilege principle."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"docker-compose-local.yml"},"region":{"startLine":5}},"message":{"text":"Remove all the default capabilities from the list of capabilities by setting the `cap_drop` value to `ALL` and then add only specific capabilities needed by a container."}}}]}]}]},{"message":{"text":"[See in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/issues/F3AFB42DC833BA9958BC8ABD8880A9ED?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026filter=issueType%3Alocalized-name%3DUnreachable%252C%20Unused%20or%20Dead%20Code%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dwebgoat-container%2Ftarget%2Fclasses%2Fstatic%2Fplugins%2Fbootstrap-wysihtml5%2Fjs%2Fwysihtml5-0.3.0.js)\n\nCode can never be reached because of a logical contradiction"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"webgoat-container/target/classes/static/plugins/bootstrap-wysihtml5/js/wysihtml5-0.3.0.js"},"region":{"startLine":355}}}],"ruleId":"deadcode:logical_contradiction|javascript","partialFingerprints":{"ruleIdLocationHash/v1":"80ce0661380b887ae558fb51f0d499f873c6c30faadf65f58bac679c54908109"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-container/target/classes/static/plugins/bootstrap-wysihtml5/js/wysihtml5-0.3.0.js"},"region":{"startLine":355}},"message":{"text":"The condition \"[\"splitText\", \"deleteData\", \"insertData\", \"appendData\", \"cloneNode\"]\" must be true."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-container/target/classes/static/plugins/bootstrap-wysihtml5/js/wysihtml5-0.3.0.js"},"region":{"startLine":355}},"message":{"text":"Execution cannot reach the expression \"util.areHostObjects(el, [\"previousSibling\", \"nextSibling\", \"childNodes\", \"parentNode\"])\" inside this statement: \"if (!util.areHostMethods(te...\"."}}}]}]}]},{"message":{"text":"[See in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/issues/CAEAFDA8269A99FA6DC2586010B31D46?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026filter=issueType%3Alocalized-name%3DDm:%20Dubious%20method%20used%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dwebgoat-lessons%2Fcrypto%2Fsrc%2Fmain%2Fjava%2Forg%2Fowasp%2Fwebgoat%2Fcrypto%2FEncodingAssignment.java)\n\nFound a call to a method which will perform a byte to String (or String to byte) conversion, and will assume that the default platform encoding is suitable. (\u003ca href=\"/doc/en/spotbugs/sb_checker_ref.html#FB.DM_DEFAULT_ENCODING\" target=\"_blank\"\u003eFrom SpotBugs description\u003c/a\u003e)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/crypto/src/main/java/org/owasp/webgoat/crypto/EncodingAssignment.java"},"region":{"startLine":43}}}],"ruleId":"FB.DM_DEFAULT_ENCODING|java","partialFingerprints":{"ruleIdLocationHash/v1":"fca11d252e4e281f2caeb2cf90da08e4fa411b8a718983841f2627092de1e6a7"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/crypto/src/main/java/org/owasp/webgoat/crypto/EncodingAssignment.java"},"region":{"startLine":43}},"message":{"text":"Found reliance on default encoding: String.getBytes()."}}}]}]}]},{"message":{"text":"[See in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/issues/184438BF9B673C4512E86841C5F7AE16?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026filter=issueType%3Alocalized-name%3DExpected%20Behavior%20Violation%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dwebgoat-lessons%2Fcrypto%2Fsrc%2Fmain%2Fjava%2Forg%2Fowasp%2Fwebgoat%2Fcrypto%2FHashingAssignment.java)\n\nThis code creates a java.util.Random object, uses it to generate one random number, and then discards the Random object. (\u003ca href=\"/doc/en/spotbugs/sb_checker_ref.html#FB.DMI_RANDOM_USED_ONLY_ONCE\" target=\"_blank\"\u003eFrom SpotBugs description\u003c/a\u003e)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/crypto/src/main/java/org/owasp/webgoat/crypto/HashingAssignment.java"},"region":{"startLine":74}}}],"ruleId":"FB.DMI_RANDOM_USED_ONLY_ONCE|java","partialFingerprints":{"ruleIdLocationHash/v1":"804dcbf49663efb452a676da00e0da41a3da4d88ee1911abc0655e8ff148165b"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/crypto/src/main/java/org/owasp/webgoat/crypto/HashingAssignment.java"},"region":{"startLine":74}},"message":{"text":"Random object created and used only once."}}}]}]}]},{"message":{"text":"[See in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/issues/D67940195324C93D87EACA3E8BF29B9E?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026filter=issueType%3Alocalized-name%3DFiles%20or%20Directories%20Accessible%20to%20External%20Parties%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Ddocker-compose.yml)\n\nThe docker service container is configured to permit writing to the root filesystem. This makes some security attack vectors such as privilege escalation, denial-of-service or authorization bypass possible since the container instance's filesystem can be tampered with."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"docker-compose.yml"},"region":{"startLine":17}}}],"ruleId":"sigma.container_filesystem_write:docker_compose|text","partialFingerprints":{"ruleIdLocationHash/v1":"dfadc4d0cbf06196bcfc792c4cadd97fe6c9be7980851a4075c5a59196b74de8"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"docker-compose.yml"},"region":{"startLine":17}},"message":{"text":"The docker service container is configured to permit writing to the root filesystem. This makes some security attack vectors such as privilege escalation, denial-of-service or authorization bypass possible since the container instance's filesystem can be tampered with."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"docker-compose.yml"},"region":{"startLine":17}},"message":{"text":"Explicitly set the `read-only` attribute of the service to `true` to create a service container with a read-only filesystem."}}}]}]}]},{"message":{"text":"[See in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/issues/97B3EC800ED193C51BC171672DE229D2?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026filter=issueType%3Alocalized-name%3DInsufficient%20Session%20Expiration%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dwebgoat-lessons%2Fjwt%2Fsrc%2Ftest%2Fjava%2Forg%2Fowasp%2Fwebgoat%2Fjwt%2FJWTVotesEndpointTest.java)\n\nThe instance of `JwtBuilder` doesn't set the expiration time when generating the token. Ignoring the expiration time for a JSON web token means it is valid forever. Since the token never expires, an attacker has a longer window to brute-force or exploit the stolen the token."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/jwt/src/test/java/org/owasp/webgoat/jwt/JWTVotesEndpointTest.java"},"region":{"startLine":73}}}],"ruleId":"sigma.jwt_non_expiring_token:io_jsonwebtoken|java","partialFingerprints":{"ruleIdLocationHash/v1":"d3327d846ecdd738cb630fe7f2c8dad24614b553ab1eb81664670ec7a6a5af1c"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/jwt/src/test/java/org/owasp/webgoat/jwt/JWTVotesEndpointTest.java"},"region":{"startLine":73}},"message":{"text":"The instance of `JwtBuilder` doesn't set the expiration time when generating the token. Ignoring the expiration time for a JSON web token means it is valid forever. Since the token never expires, an attacker has a longer window to brute-force or exploit the stolen the token."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/jwt/src/test/java/org/owasp/webgoat/jwt/JWTVotesEndpointTest.java"},"region":{"startLine":73}},"message":{"text":"Set the expiration time of the token by invoking `JwtBuilder.setExpiration()` or `Claims.setExpiration()`."}}}]}]}]},{"message":{"text":"[See in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/issues/6EB998DA1874C19A64A01C91FBFFADE8?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026filter=issueType%3Alocalized-name%3DInsufficient%20Session%20Expiration%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dwebgoat-lessons%2Fjwt%2Fsrc%2Ftest%2Fjava%2Forg%2Fowasp%2Fwebgoat%2Fjwt%2FJWTFinalEndpointTest.java)\n\nThe instance of `JwtBuilder` doesn't set the expiration time when generating the token. Ignoring the expiration time for a JSON web token means it is valid forever. Since the token never expires, an attacker has a longer window to brute-force or exploit the stolen the token."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/jwt/src/test/java/org/owasp/webgoat/jwt/JWTFinalEndpointTest.java"},"region":{"startLine":50}}}],"ruleId":"sigma.jwt_non_expiring_token:io_jsonwebtoken|java","partialFingerprints":{"ruleIdLocationHash/v1":"3921267376ad92008438b7162aba3836d2ee9704f10bd54f3a1dc216d228f54c"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/jwt/src/test/java/org/owasp/webgoat/jwt/JWTFinalEndpointTest.java"},"region":{"startLine":50}},"message":{"text":"The instance of `JwtBuilder` doesn't set the expiration time when generating the token. Ignoring the expiration time for a JSON web token means it is valid forever. Since the token never expires, an attacker has a longer window to brute-force or exploit the stolen the token."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/jwt/src/test/java/org/owasp/webgoat/jwt/JWTFinalEndpointTest.java"},"region":{"startLine":50}},"message":{"text":"Set the expiration time of the token by invoking `JwtBuilder.setExpiration()` or `Claims.setExpiration()`."}}}]}]}]},{"message":{"text":"[See in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/issues/00C3A8A0D2F91849FA871438D27DA5E3?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026filter=issueType%3Alocalized-name%3DExpected%20Behavior%20Violation%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dwebgoat-lessons%2Fvulnerable-components%2Fsrc%2Ftest%2Fjava%2Forg%2Fowasp%2Fwebgoat%2Fvulnerable_components%2FVulnerableComponentsLessonTest.java)\n\nThis code calls a method and ignores the return value. (\u003ca href=\"/doc/en/spotbugs/sb_checker_ref.html#FB.RV_RETURN_VALUE_IGNORED_NO_SIDE_EFFECT\" target=\"_blank\"\u003eFrom SpotBugs description\u003c/a\u003e)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/vulnerable-components/src/test/java/org/owasp/webgoat/vulnerable_components/VulnerableComponentsLessonTest.java"},"region":{"startLine":75}}}],"ruleId":"FB.RV_RETURN_VALUE_IGNORED_NO_SIDE_EFFECT|java","partialFingerprints":{"ruleIdLocationHash/v1":"dc43cca55c0a96a9bc5b650fd5ad1f7622b09594348924947f79af786a8ae9bf"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/vulnerable-components/src/test/java/org/owasp/webgoat/vulnerable_components/VulnerableComponentsLessonTest.java"},"region":{"startLine":75}},"message":{"text":"Return value of Contact.getFirstName() ignored, but method has no side effect."}}}]}]}]},{"message":{"text":"[See in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/issues/AF42A73F8F99E1F1517D7C8704034567?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026filter=issueType%3Alocalized-name%3DAssignment%20to%20Variable%20without%20Use%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dwebgoat-lessons%2Fjwt%2Fsrc%2Ftest%2Fjava%2Forg%2Fowasp%2Fwebgoat%2Fjwt%2FTokenTest.java)\n\nThis instruction assigns a value to a local variable, but the value is not read or used in any subsequent instruction. (\u003ca href=\"/doc/en/spotbugs/sb_checker_ref.html#FB.DLS_DEAD_LOCAL_STORE\" target=\"_blank\"\u003eFrom SpotBugs description\u003c/a\u003e)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/jwt/src/test/java/org/owasp/webgoat/jwt/TokenTest.java"},"region":{"startLine":56}}}],"ruleId":"FB.DLS_DEAD_LOCAL_STORE|java","partialFingerprints":{"ruleIdLocationHash/v1":"b23ab2f165e97bc763ca5f58afb8a6a44a69a46a25784e7d91355f1e863401c3"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/jwt/src/test/java/org/owasp/webgoat/jwt/TokenTest.java"},"region":{"startLine":56}},"message":{"text":"Dead store to jwt."}}}]}]}]},{"message":{"text":"[See in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/issues/3464772B61BADE9FA5BC074B54D78659?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026filter=issueType%3Alocalized-name%3DSQL%20Injection%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dwebgoat-lessons%2Fsql-injection%2Fsrc%2Fmain%2Fjava%2Forg%2Fowasp%2Fwebgoat%2Fsql_injection%2Fintroduction%2FSqlInjectionLesson5a.java)\n\nUntrusted user-supplied data is inserted into a SQL statement without adequate validation, escaping, or filtering."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson5a.java"},"region":{"startLine":54}}}],"ruleId":"sql_injection:sink|java","partialFingerprints":{"ruleIdLocationHash/v1":"8648e5fb361172cccaa01dfc276b0458c9e451cfc7132fcfc9766e0981690a37"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson5a.java"},"region":{"startLine":53}},"message":{"text":"\"completed\" is an entry point function."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson5a.java"},"region":{"startLine":53}},"message":{"text":"The \"operator\" is tainted."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson5a.java"},"region":{"startLine":54}},"message":{"text":"Creating a tainted string using \"operator\"."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson5a.java"},"region":{"startLine":54}},"message":{"text":"Calling \"injectableQuery\". Passing the tainted value \"account + \" \" + operator + \" \" + injection\" to the SQL API may allow an attacker to inject SQL. (The virtual call resolves to \"org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5a.injectableQuery(java.lang.String)\".)"}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson5a.java"},"region":{"startLine":54}},"message":{"text":"Use one of the following methods:\n* Use a query-preparation API to safely construct the SQL query containing user-supplied values.\n* Only concatenate a user-supplied value into a query if it has been checked against a whitelist of safe string values, or if it must be a Boolean or numeric type.\n"}}}]}]}]},{"message":{"text":"[See in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/issues/7C52A07B769F85A376B2148620788565?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026filter=issueType%3Alocalized-name%3DCross-site%20Scripting%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dwebgoat-lessons%2Fcrypto%2Fsrc%2Fmain%2Fjava%2Forg%2Fowasp%2Fwebgoat%2Fcrypto%2FEncodingAssignment.java)\n\nUntrusted user-supplied data is inserted into a context that can execute JavaScript without adequate validation, escaping, or filtering."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/crypto/src/main/java/org/owasp/webgoat/crypto/EncodingAssignment.java"},"region":{"startLine":57}}}],"ruleId":"xss|java","partialFingerprints":{"ruleIdLocationHash/v1":"aab165f6bbca83880e7f69f460d9fd78b9556465b436b69bd13d9a1d83a36e4d"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/crypto/src/main/java/org/owasp/webgoat/crypto/EncodingAssignment.java"},"region":{"startLine":42}},"message":{"text":"Parameter \"username\" receives the tainted data."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/crypto/src/main/java/org/owasp/webgoat/crypto/EncodingAssignment.java"},"region":{"startLine":43}},"message":{"text":"Concatenating the tainted data."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/crypto/src/main/java/org/owasp/webgoat/crypto/EncodingAssignment.java"},"region":{"startLine":43}},"message":{"text":"Concatenating the tainted data."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/crypto/src/main/java/org/owasp/webgoat/crypto/EncodingAssignment.java"},"region":{"startLine":43}},"message":{"text":"Passing the tainted data through \"java.lang.String.getBytes()\"."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/crypto/src/main/java/org/owasp/webgoat/crypto/EncodingAssignment.java"},"region":{"startLine":43}},"message":{"text":"Passing the tainted data through \"java.util.Base64$Encoder.encodeToString(byte[])\"."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/crypto/src/main/java/org/owasp/webgoat/crypto/EncodingAssignment.java"},"region":{"startLine":43}},"message":{"text":"Returning the tainted data."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/crypto/src/main/java/org/owasp/webgoat/crypto/EncodingAssignment.java"},"region":{"startLine":51}},"message":{"text":"Reading data from an HTTP request, which is considered tainted."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/crypto/src/main/java/org/owasp/webgoat/crypto/EncodingAssignment.java"},"region":{"startLine":51}},"message":{"text":"Passing the tainted data through \"java.security.Principal.getName()\"."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/crypto/src/main/java/org/owasp/webgoat/crypto/EncodingAssignment.java"},"region":{"startLine":54}},"message":{"text":"Passing the tainted data, \"username\", to \"org.owasp.webgoat.crypto.EncodingAssignment.getBasicAuth(java.lang.String, java.lang.String)\"."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/crypto/src/main/java/org/owasp/webgoat/crypto/EncodingAssignment.java"},"region":{"startLine":54}},"message":{"text":"\"org.owasp.webgoat.crypto.EncodingAssignment.getBasicAuth(java.lang.String, java.lang.String)\" returns the tainted data."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/crypto/src/main/java/org/owasp/webgoat/crypto/EncodingAssignment.java"},"region":{"startLine":57}},"message":{"text":"Concatenating \"basicAuth\" to an HTML page allows cross-site scripting, because it was not properly sanitized for context HTML PCDATA block."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/crypto/src/main/java/org/owasp/webgoat/crypto/EncodingAssignment.java"},"region":{"startLine":57}},"message":{"text":"Perform the following escaping in the following order to guard against cross-site scripting attacks with Java.\n\nFor example: \"Encode.forHtml(basicAuth)\"\n\n\n* Use the \"Encode.forHtml\" function from the OWASP Java Encoder. This escapes the output for HTML.\n\n"}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/crypto/src/main/java/org/owasp/webgoat/crypto/EncodingAssignment.java"},"region":{"startLine":57}},"message":{"text":"Printing to HTML output."}}}]}]}]},{"message":{"text":"[See in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/issues/27B9251A8B13C8A4AC3D3B4BA8D11DA0?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026filter=issueType%3Alocalized-name%3DSIC:%20Inner%20class%20could%20be%20made%20static%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dwebgoat-lessons%2Fchallenge%2Fsrc%2Fmain%2Fjava%2Forg%2Fowasp%2Fwebgoat%2Fchallenges%2FFlag.java)\n\nThis class is an inner class, but does not use its embedded reference to the object which created it. (\u003ca href=\"/doc/en/spotbugs/sb_checker_ref.html#FB.SIC_INNER_SHOULD_BE_STATIC\" target=\"_blank\"\u003eFrom SpotBugs description\u003c/a\u003e)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/challenge/src/main/java/org/owasp/webgoat/challenges/Flag.java"},"region":{"startLine":62}}}],"ruleId":"FB.SIC_INNER_SHOULD_BE_STATIC|java","partialFingerprints":{"ruleIdLocationHash/v1":"48bc06d7eaf8932d5d0fa451585ee830ecea0842d4a5753cf32ed77f383dff5d"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/challenge/src/main/java/org/owasp/webgoat/challenges/Flag.java"},"region":{"startLine":62}},"message":{"text":"Should org.owasp.webgoat.challenges.Flag$FlagPosted be a _static_ inner class?"}}}]}]}]},{"message":{"text":"[See in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/issues/13452FE84E3AC9E7181772A849765422?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026filter=issueType%3Alocalized-name%3DWeak%20Encoding%20for%20Password%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dwebgoat-container%2Fsrc%2Fmain%2Fjava%2Forg%2Fowasp%2Fwebgoat%2FWebSecurityConfig.java)\n\nSpring Security framework uses weak hashing algorithm in the PasswordEncoder interface. Weak hashing algorithm does not adequately protect the password. In case of a data leak from a password storage, attackers will easily be able to obtain the original password values."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"webgoat-container/src/main/java/org/owasp/webgoat/WebSecurityConfig.java"},"region":{"startLine":98}}}],"ruleId":"sigma.weak_password_hash:spring_security_code|java","partialFingerprints":{"ruleIdLocationHash/v1":"ac342bf3e74d8d82a0b2cb0e2de93f64ef3d0e9df2cbab88ba0471ab7b66918c"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-container/src/main/java/org/owasp/webgoat/WebSecurityConfig.java"},"region":{"startLine":98}},"message":{"text":"Spring Security framework uses weak hashing algorithm in the PasswordEncoder interface. Weak hashing algorithm does not adequately protect the password. In case of a data leak from a password storage, attackers will easily be able to obtain the original password values."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-container/src/main/java/org/owasp/webgoat/WebSecurityConfig.java"},"region":{"startLine":98}},"message":{"text":"Audit the use of password encoder with the weak password hashing algorithm. Instead, use a stronger password encoder in production such as `org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder`."}}}]}]}]},{"message":{"text":"[See in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/issues/700ADEF4FF80F45AD5D6DF7BE734C0D2?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026filter=issueType%3Alocalized-name%3DInsufficient%20Session%20Expiration%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dwebgoat-lessons%2Fjwt%2Fsrc%2Ftest%2Fjava%2Forg%2Fowasp%2Fwebgoat%2Fjwt%2FJWTSecretKeyEndpointTest.java)\n\nThe instance of `JwtBuilder` doesn't set the expiration time when generating the token. Ignoring the expiration time for a JSON web token means it is valid forever. Since the token never expires, an attacker has a longer window to brute-force or exploit the stolen the token."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/jwt/src/test/java/org/owasp/webgoat/jwt/JWTSecretKeyEndpointTest.java"},"region":{"startLine":90}}}],"ruleId":"sigma.jwt_non_expiring_token:io_jsonwebtoken|java","partialFingerprints":{"ruleIdLocationHash/v1":"ed204ec82dea6691e217d4371cfac89c03d5b9603a8597f14ef20f6dac5683bc"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/jwt/src/test/java/org/owasp/webgoat/jwt/JWTSecretKeyEndpointTest.java"},"region":{"startLine":90}},"message":{"text":"The instance of `JwtBuilder` doesn't set the expiration time when generating the token. Ignoring the expiration time for a JSON web token means it is valid forever. Since the token never expires, an attacker has a longer window to brute-force or exploit the stolen the token."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/jwt/src/test/java/org/owasp/webgoat/jwt/JWTSecretKeyEndpointTest.java"},"region":{"startLine":90}},"message":{"text":"Set the expiration time of the token by invoking `JwtBuilder.setExpiration()` or `Claims.setExpiration()`."}}}]}]}]},{"message":{"text":"[See in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/issues/53518333BA48241BC91F7DB3708C5C9B?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026filter=issueType%3Alocalized-name%3DDm:%20Dubious%20method%20used%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dwebgoat-lessons%2Fpath-traversal%2Fsrc%2Ftest%2Fjava%2Forg%2Fowasp%2Fwebgoat%2Fpath_traversal%2FProfileUploadFixTest.java)\n\nFound a call to a method which will perform a byte to String (or String to byte) conversion, and will assume that the default platform encoding is suitable. (\u003ca href=\"/doc/en/spotbugs/sb_checker_ref.html#FB.DM_DEFAULT_ENCODING\" target=\"_blank\"\u003eFrom SpotBugs description\u003c/a\u003e)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/path-traversal/src/test/java/org/owasp/webgoat/path_traversal/ProfileUploadFixTest.java"},"region":{"startLine":35}}}],"ruleId":"FB.DM_DEFAULT_ENCODING|java","partialFingerprints":{"ruleIdLocationHash/v1":"e4db2522ff0955312c64f0c37c5fb3f4aed6b89a04816fc2986cec235309bbb3"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/path-traversal/src/test/java/org/owasp/webgoat/path_traversal/ProfileUploadFixTest.java"},"region":{"startLine":35}},"message":{"text":"Found reliance on default encoding: String.getBytes()."}}}]}]}]},{"message":{"text":"[See in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/issues/521E08A7A13447E09B6223387F923D0A?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026filter=issueType%3Alocalized-name%3DImproper%20Privilege%20Management%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Ddocker-compose-postgres.yml)\n\nThe Docker container requests the `NET_RAW` capability, either explicitly or by default, granting access to the host's network interfaces."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"docker-compose-postgres.yml"},"region":{"startLine":5}}}],"ruleId":"sigma.container_requesting_net_raw:docker_compose|text","partialFingerprints":{"ruleIdLocationHash/v1":"9e68741242d8fd61541605e63a9006761bec50424d4e1025b55cb9b7f87631d7"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"docker-compose-postgres.yml"},"region":{"startLine":5}},"message":{"text":"The Docker container requests the `NET_RAW` capability, either explicitly or by default, granting access to the host's network interfaces."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"docker-compose-postgres.yml"},"region":{"startLine":5}},"message":{"text":"Explicitly remove the `NET_RAW` capability by adding either `NET_RAW` or `ALL` to the `cap_drop` list and avoiding the `NET_RAW` capability in the `cap_add` list."}}}]}]}]},{"message":{"text":"[See in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/issues/B59FD2C696E92C53A86A9145B95C4118?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026filter=issueType%3Alocalized-name%3DImproper%20Resource%20Shutdown%20or%20Release%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dwebgoat-lessons%2Fsql-injection%2Fsrc%2Fmain%2Fjava%2Forg%2Fowasp%2Fwebgoat%2Fsql_injection%2Fintroduction%2FSqlInjectionLesson8.java)\n\nLeak of a system resource"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson8.java"},"region":{"startLine":138}}}],"ruleId":"resource_leak|java","partialFingerprints":{"ruleIdLocationHash/v1":"6655d461b5a761be3a3f7df7a9c679be4f9a2a97a713e0b0ee4d7f1ed0ceea81"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson8.java"},"region":{"startLine":136}},"message":{"text":"A new resource is returned from allocation method \"createStatement\"."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson8.java"},"region":{"startLine":136}},"message":{"text":"Assigning: \"statement\" = resource returned from \"connection.createStatement(1005, 1008)\"."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson8.java"},"region":{"startLine":137}},"message":{"text":"Resource \"statement\" is not closed or saved in \"executeUpdate\"."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson8.java"},"region":{"startLine":138}},"message":{"text":"Variable \"statement\" going out of scope leaks the resource it refers to."}}}]}]}]},{"message":{"text":"[See in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/issues/F4C340BD57E838513F8AFF3F91BC060F?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026filter=issueType%3Alocalized-name%3DIncorrect%20Check%20of%20Function%20Return%20Value%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dwebgoat-lessons%2Fpath-traversal%2Fsrc%2Fmain%2Fjava%2Forg%2Fowasp%2Fwebgoat%2Fpath_traversal%2FProfileUploadRetrieval.java)\n\nThis method returns a value that is not checked. (\u003ca href=\"/doc/en/spotbugs/sb_checker_ref.html#FB.RV_RETURN_VALUE_IGNORED_BAD_PRACTICE\" target=\"_blank\"\u003eFrom SpotBugs description\u003c/a\u003e)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/path-traversal/src/main/java/org/owasp/webgoat/path_traversal/ProfileUploadRetrieval.java"},"region":{"startLine":44}}}],"ruleId":"FB.RV_RETURN_VALUE_IGNORED_BAD_PRACTICE|java","partialFingerprints":{"ruleIdLocationHash/v1":"4bd9be03f3dc7ee56ad19a37f97e98858df5279684a8f1af51fbdce691178dff"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/path-traversal/src/main/java/org/owasp/webgoat/path_traversal/ProfileUploadRetrieval.java"},"region":{"startLine":44}},"message":{"text":"Exceptional return value of java.io.File.mkdirs() ignored."}}}]}]}]},{"message":{"text":"[See in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/issues/7435F68A4EA6989321BDC82B1A2733FF?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026filter=issueType%3Alocalized-name%3DSBSC:%20String%20concatenation%20in%20loop%20using%20+%20operator%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dwebgoat-lessons%2Fsql-injection%2Fsrc%2Fmain%2Fjava%2Forg%2Fowasp%2Fwebgoat%2Fsql_injection%2Fmitigation%2FSqlInjectionLesson10b.java)\n\nThe method seems to be building a String using concatenation in a loop. (\u003ca href=\"/doc/en/spotbugs/sb_checker_ref.html#FB.SBSC_USE_STRINGBUFFER_CONCATENATION\" target=\"_blank\"\u003eFrom SpotBugs description\u003c/a\u003e)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/mitigation/SqlInjectionLesson10b.java"},"region":{"startLine":74}}}],"ruleId":"FB.SBSC_USE_STRINGBUFFER_CONCATENATION|java","partialFingerprints":{"ruleIdLocationHash/v1":"88aab95711087a9426e1f2c12aaf877ce4264f12c5755ab59b8dcd74b9ed0b34"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/mitigation/SqlInjectionLesson10b.java"},"region":{"startLine":74}},"message":{"text":"org.owasp.webgoat.sql_injection.mitigation.SqlInjectionLesson10b.completed(String) concatenates strings using + in a loop."}}}]}]}]},{"message":{"text":"[See in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/issues/59BD6433FC409D616CB84EBC279AE76C?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026filter=issueType%3Alocalized-name%3DInsufficient%20Session%20Expiration%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dwebwolf%2Ftarget%2Fclasses%2Fapplication-webwolf.properties)\n\nThe session is configured with an excessively long timeout value. Session-based attacks require an active session. Therefore, the longer a session persists, the more time an attacker has to hijack the session."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"webwolf/target/classes/application-webwolf.properties"},"region":{"startLine":8}}}],"ruleId":"sigma.excessive_session_lifetime:spring_boot_properties|text","partialFingerprints":{"ruleIdLocationHash/v1":"6559149886ea52fa622aa5758856e77f1c46809d71467f777586e1b37158f7af"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"webwolf/target/classes/application-webwolf.properties"},"region":{"startLine":8}},"message":{"text":"The session is configured with an excessively long timeout value. Session-based attacks require an active session. Therefore, the longer a session persists, the more time an attacker has to hijack the session."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webwolf/target/classes/application-webwolf.properties"},"region":{"startLine":8}},"message":{"text":"Set the session expiration time to a value greater than or equal to 0, but less than 30 minutes in order to substantially reduce the window of opportunity for session-based attacks."}}}]}]}]},{"message":{"text":"[See in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/issues/C61FEE69ED8434072FD5AC0E8269E53F?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026filter=issueType%3Alocalized-name%3DFiles%20or%20Directories%20Accessible%20to%20External%20Parties%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dgoat-with-reverseproxy.yaml)\n\nThe docker service container is configured to permit writing to the root filesystem. This makes some security attack vectors such as privilege escalation, denial-of-service or authorization bypass possible since the container instance's filesystem can be tampered with."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"goat-with-reverseproxy.yaml"},"region":{"startLine":23}}}],"ruleId":"sigma.container_filesystem_write:docker_compose|text","partialFingerprints":{"ruleIdLocationHash/v1":"a7e344ae94e9fdb01f3648654238eb3e4711a9d73abea7e112624c191d11648f"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"goat-with-reverseproxy.yaml"},"region":{"startLine":23}},"message":{"text":"The docker service container is configured to permit writing to the root filesystem. This makes some security attack vectors such as privilege escalation, denial-of-service or authorization bypass possible since the container instance's filesystem can be tampered with."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"goat-with-reverseproxy.yaml"},"region":{"startLine":23}},"message":{"text":"Explicitly set the `read-only` attribute of the service to `true` to create a service container with a read-only filesystem."}}}]}]}]},{"message":{"text":"[See in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/issues/E467ADB1BE5E6D165CE3CBDD5B10E918?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026filter=issueType%3Alocalized-name%3DPI:%20Do%20not%20reuse%20public%20identifiers%20from%20Java%20Standard%20Library%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dwebgoat-container%2Fsrc%2Fmain%2Fjava%2Forg%2Fowasp%2Fwebgoat%2Flessons%2FCategory.java)\n\nIt's essential to avoid reusing public identifiers from the Java Standard Library as class names. (\u003ca href=\"/doc/en/spotbugs/sb_checker_ref.html#FB.PI_DO_NOT_REUSE_PUBLIC_IDENTIFIERS_CLASS_NAMES\" target=\"_blank\"\u003eFrom SpotBugs description\u003c/a\u003e)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"webgoat-container/src/main/java/org/owasp/webgoat/lessons/Category.java"},"region":{"startLine":37}}}],"ruleId":"FB.PI_DO_NOT_REUSE_PUBLIC_IDENTIFIERS_CLASS_NAMES|java","partialFingerprints":{"ruleIdLocationHash/v1":"cd141f69b7741c9d614243ced7a09cb2562506e8e2954c8bc191abdfedbcd8bc"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-container/src/main/java/org/owasp/webgoat/lessons/Category.java"},"region":{"startLine":37}},"message":{"text":"Class name ?\u003e?1/1??? in source file ?\u003e?2/1??? shadows the publicly available identifier from the Java Standard Library."}}}]}]}]},{"message":{"text":"[See in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/issues/87223317FD71C15663866B2123E5D0EB?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026filter=issueType%3Alocalized-name%3DInsecure%20Encryption%20Algorithm%20in%20Use%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dwebgoat-lessons%2Fcrypto%2Fsrc%2Fmain%2Fjava%2Forg%2Fowasp%2Fwebgoat%2Fcrypto%2FHashingAssignment.java)\n\nThis application uses a weak algorithm to create a `MessageDigest`, which may lead to collision attacks."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/crypto/src/main/java/org/owasp/webgoat/crypto/HashingAssignment.java"},"region":{"startLine":57}}}],"ruleId":"sigma.weak_hash:core_java|java","partialFingerprints":{"ruleIdLocationHash/v1":"5c6333d756927d8275fd26e6ef7b69e9adbdd4f508f3c666ce24419e6b0c218d"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/crypto/src/main/java/org/owasp/webgoat/crypto/HashingAssignment.java"},"region":{"startLine":57}},"message":{"text":"This application uses a weak algorithm to create a `MessageDigest`, which may lead to collision attacks."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/crypto/src/main/java/org/owasp/webgoat/crypto/HashingAssignment.java"},"region":{"startLine":57}},"message":{"text":"Use strong algorithms such as `SHA-256` to prevent collision attacks."}}}]}]}]},{"message":{"text":"[See in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/issues/A246463175A6AC90F4FB305D1AD91BB6?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026filter=issueType%3Alocalized-name%3DHttpOnly%20Cookie%20Attribute%20Not%20Set%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dwebgoat-lessons%2Fjwt%2Fsrc%2Ftest%2Fjava%2Forg%2Fowasp%2Fwebgoat%2Fjwt%2FJWTVotesEndpointTest.java)\n\nThe `HttpOnly` flag is not enabled for cookies.\nEnabling the `HttpOnly` flag prevents an attacker from stealing or modifying cookie data via cross-site scripting attacks executed against vulnerable client-side applications."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/jwt/src/test/java/org/owasp/webgoat/jwt/JWTVotesEndpointTest.java"},"region":{"startLine":204}}}],"ruleId":"sigma.missing_httponly_attribute:servlet|java","partialFingerprints":{"ruleIdLocationHash/v1":"54fcf3685f2ce576e34e6d8cad81c208c3b83372e57677b9b430a001baf09bb8"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/jwt/src/test/java/org/owasp/webgoat/jwt/JWTVotesEndpointTest.java"},"region":{"startLine":204}},"message":{"text":"The `HttpOnly` flag is not enabled for cookies.\nEnabling the `HttpOnly` flag prevents an attacker from stealing or modifying cookie data via cross-site scripting attacks executed against vulnerable client-side applications."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/jwt/src/test/java/org/owasp/webgoat/jwt/JWTVotesEndpointTest.java"},"region":{"startLine":204}},"message":{"text":"Enable the `HttpOnly` attribute by calling `Cookie.setHttpOnly(true)` to prevent the cookie from being read by client-side code."}}}]}]}]},{"message":{"text":"[See in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/issues/0D75D4A4E290E6753921EA0884173E61?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026filter=issueType%3Alocalized-name%3DImproper%20Access%20Control%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Ddocker-compose-postgres.yml)\n\nThe Docker container is not configured to drop all default capabilities and then add only required one. Thus the container may be granted excessive privileges which violate the least privilege principle."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"docker-compose-postgres.yml"},"region":{"startLine":30}}}],"ruleId":"sigma.least_privilege_violation:docker_compose|text","partialFingerprints":{"ruleIdLocationHash/v1":"6e42384fd24530bc041b624c8f6510c0a0d2142cc6410e1384180f0941859be9"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"docker-compose-postgres.yml"},"region":{"startLine":30}},"message":{"text":"The Docker container is not configured to drop all default capabilities and then add only required one. Thus the container may be granted excessive privileges which violate the least privilege principle."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"docker-compose-postgres.yml"},"region":{"startLine":30}},"message":{"text":"Remove all the default capabilities from the list of capabilities by setting the `cap_drop` value to `ALL` and then add only specific capabilities needed by a container."}}}]}]}]},{"message":{"text":"[See in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/issues/DBBAB662251E38C8B1990F10F7765215?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026filter=issueType%3Alocalized-name%3DExpected%20Behavior%20Violation%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dwebgoat-lessons%2Fvulnerable-components%2Fsrc%2Ftest%2Fjava%2Forg%2Fowasp%2Fwebgoat%2Fvulnerable_components%2FVulnerableComponentsLessonTest.java)\n\nThis code calls a method and ignores the return value. (\u003ca href=\"/doc/en/spotbugs/sb_checker_ref.html#FB.RV_RETURN_VALUE_IGNORED_NO_SIDE_EFFECT\" target=\"_blank\"\u003eFrom SpotBugs description\u003c/a\u003e)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/vulnerable-components/src/test/java/org/owasp/webgoat/vulnerable_components/VulnerableComponentsLessonTest.java"},"region":{"startLine":65}}}],"ruleId":"FB.RV_RETURN_VALUE_IGNORED_NO_SIDE_EFFECT|java","partialFingerprints":{"ruleIdLocationHash/v1":"1b610ee744c4368336f31693deafa2d501802d38c42e398eb39b70ceb63d419d"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/vulnerable-components/src/test/java/org/owasp/webgoat/vulnerable_components/VulnerableComponentsLessonTest.java"},"region":{"startLine":65}},"message":{"text":"Return value of Contact.getFirstName() ignored, but method has no side effect."}}}]}]}]},{"message":{"text":"[See in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/issues/09BDAC9E2D9221C9573DD0AD44802C68?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026filter=issueType%3Alocalized-name%3DCross-Site%20Request%20Forgery%20%28CSRF%29%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dwebgoat-lessons%2Fcsrf%2Fsrc%2Fmain%2Fjava%2Forg%2Fowasp%2Fwebgoat%2Fcsrf%2FCSRFLogin.java)\n\nThe web application controller modifies data or state and is unprotected from cross-site request forgery."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/csrf/src/main/java/org/owasp/webgoat/csrf/CSRFLogin.java"},"region":{"startLine":53}}}],"ruleId":"csrf:database_update|java","partialFingerprints":{"ruleIdLocationHash/v1":"b0f2225150aa74219db958c18bd0038c51709f453cd5bb0febdd3171abf824d5"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/csrf/src/main/java/org/owasp/webgoat/csrf/CSRFLogin.java"},"region":{"startLine":53}},"message":{"text":"\"org.owasp.webgoat.csrf.CSRFLogin.completed\" is a web-app entry point that requires protection from cross-site request forgery (CSRF)."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/csrf/src/main/java/org/owasp/webgoat/csrf/CSRFLogin.java"},"region":{"startLine":53}},"message":{"text":"Use the CSRF validator method \"org.owasp.webgoat.CSRFTest.checkAssignment3\" to protect against CSRF. Please refer to the examples of its use elsewhere."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/csrf/src/main/java/org/owasp/webgoat/csrf/CSRFLogin.java"},"region":{"startLine":55}},"message":{"text":"Condition \"userName.startsWith(\"csrf\")\", taking true branch."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/csrf/src/main/java/org/owasp/webgoat/csrf/CSRFLogin.java"},"region":{"startLine":56}},"message":{"text":"Calling \"markAssignmentSolvedWithRealUser\" updates the database."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-integration-tests/src/test/java/org/owasp/webgoat/CSRFTest.java"},"region":{"startLine":70}},"message":{"text":"Example 1: Examples of CSRF validator calls."}}}]}]}]},{"message":{"text":"[See in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/issues/68D8C0C53A1380F5F9418CAAACCACBF5?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026filter=issueType%3Alocalized-name%3DSIC:%20Inner%20class%20could%20be%20made%20static%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dwebgoat-container%2Fsrc%2Fmain%2Fjava%2Forg%2Fowasp%2Fwebgoat%2Fusers%2FScoreboard.java)\n\nThis class is an inner class, but does not use its embedded reference to the object which created it. (\u003ca href=\"/doc/en/spotbugs/sb_checker_ref.html#FB.SIC_INNER_SHOULD_BE_STATIC\" target=\"_blank\"\u003eFrom SpotBugs description\u003c/a\u003e)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"webgoat-container/src/main/java/org/owasp/webgoat/users/Scoreboard.java"},"region":{"startLine":31}}}],"ruleId":"FB.SIC_INNER_SHOULD_BE_STATIC|java","partialFingerprints":{"ruleIdLocationHash/v1":"cc03f0292b21d9c028e33c809108772e7ffe78fa85761ff2afe15a55e2b60345"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-container/src/main/java/org/owasp/webgoat/users/Scoreboard.java"},"region":{"startLine":31}},"message":{"text":"Should org.owasp.webgoat.users.Scoreboard$Ranking be a _static_ inner class?"}}}]}]}]},{"message":{"text":"[See in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/issues/2C0C3B7189F33617C45406A1B80FEDEC?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026filter=issueType%3Alocalized-name%3DInsufficient%20Session%20Expiration%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dwebgoat-lessons%2Fjwt%2Fsrc%2Fmain%2Fjava%2Forg%2Fowasp%2Fwebgoat%2Fjwt%2FJWTRefreshEndpoint.java)\n\nThe instance of `JwtBuilder` doesn't set the expiration time when generating the token. Ignoring the expiration time for a JSON web token means it is valid forever. Since the token never expires, an attacker has a longer window to brute-force or exploit the stolen the token."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/jwt/src/main/java/org/owasp/webgoat/jwt/JWTRefreshEndpoint.java"},"region":{"startLine":71}}}],"ruleId":"sigma.jwt_non_expiring_token:io_jsonwebtoken|java","partialFingerprints":{"ruleIdLocationHash/v1":"eeba7b584637a74239b856c8ba1f1234d570ef9d6816e15c8ff861b1af13d162"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/jwt/src/main/java/org/owasp/webgoat/jwt/JWTRefreshEndpoint.java"},"region":{"startLine":71}},"message":{"text":"The instance of `JwtBuilder` doesn't set the expiration time when generating the token. Ignoring the expiration time for a JSON web token means it is valid forever. Since the token never expires, an attacker has a longer window to brute-force or exploit the stolen the token."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/jwt/src/main/java/org/owasp/webgoat/jwt/JWTRefreshEndpoint.java"},"region":{"startLine":71}},"message":{"text":"Set the expiration time of the token by invoking `JwtBuilder.setExpiration()` or `Claims.setExpiration()`."}}}]}]}]},{"message":{"text":"[See in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/issues/2BAEAC6CB2E10AC144C8531F46CAB201?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026filter=issueType%3Alocalized-name%3DUse%20of%20Hard-coded%20Credentials%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dwebgoat-lessons%2Fsecure-passwords%2Fsrc%2Fmain%2Fjava%2Forg%2Fowasp%2Fwebgoat%2Fsecure_password%2FSecurePasswords.java)\n\nA secret, such as a password, cryptographic key, or token is stored in plaintext directly in the source code, in an application's properties, or configuration file. Users with access to the secret may then use the secret to access resources that they otherwise would not have access to."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/secure-passwords/src/main/java/org/owasp/webgoat/secure_password/SecurePasswords.java"},"region":{"startLine":43}}}],"ruleId":"sigma.hardcoded_secret:pattern|java","partialFingerprints":{"ruleIdLocationHash/v1":"59fdcdfe709f1220131ffef1ff83e6014541474124bd6e4210f857d04da4e3cb"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/secure-passwords/src/main/java/org/owasp/webgoat/secure_password/SecurePasswords.java"},"region":{"startLine":43}},"message":{"text":"A secret, such as a password, cryptographic key, or token is stored in plaintext directly in the source code, in an application's properties, or configuration file. Users with access to the secret may then use the secret to access resources that they otherwise would not have access to. Secret type: Password (generic)."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/secure-passwords/src/main/java/org/owasp/webgoat/secure_password/SecurePasswords.java"},"region":{"startLine":43}},"message":{"text":"Avoid setting sensitive configuration values as string literals. Instead, these values should be set using variables with the sensitive data loaded from an encrypted file or a secret store."}}}]}]}]},{"message":{"text":"[See in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/issues/88EAB5D681118C24090B7B98C951D798?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026filter=issueType%3Alocalized-name%3DDm:%20Dubious%20method%20used%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dwebgoat-integration-tests%2Fsrc%2Ftest%2Fjava%2Forg%2Fowasp%2Fwebgoat%2FCSRFTest.java)\n\nFound a call to a method which will perform a byte to String (or String to byte) conversion, and will assume that the default platform encoding is suitable. (\u003ca href=\"/doc/en/spotbugs/sb_checker_ref.html#FB.DM_DEFAULT_ENCODING\" target=\"_blank\"\u003eFrom SpotBugs description\u003c/a\u003e)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"webgoat-integration-tests/src/test/java/org/owasp/webgoat/CSRFTest.java"},"region":{"startLine":98}}}],"ruleId":"FB.DM_DEFAULT_ENCODING|java","partialFingerprints":{"ruleIdLocationHash/v1":"e9d046edfdd91f2ee31fb66c0419c9797e465b8dc1da4073bf6d2ccd0956cbda"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-integration-tests/src/test/java/org/owasp/webgoat/CSRFTest.java"},"region":{"startLine":98}},"message":{"text":"Found reliance on default encoding: String.getBytes()."}}}]}]}]},{"message":{"text":"[See in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/issues/969160172F04FDDEF281B315972D57AE?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026filter=issueType%3Alocalized-name%3DImproper%20Control%20of%20Document%20Type%20Definition%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dwebgoat-lessons%2Fxxe%2Fsrc%2Fmain%2Fjava%2Forg%2Fowasp%2Fwebgoat%2Fxxe%2FBlindSendFileAssignment.java)\n\nPassing tainted input data with possibly arbitrary DTDs to a weakly configured XML parser."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/xxe/src/main/java/org/owasp/webgoat/xxe/BlindSendFileAssignment.java"},"region":{"startLine":85}}}],"ruleId":"xml_external_entity:unrestricted_dtds|java","partialFingerprints":{"ruleIdLocationHash/v1":"3c11e91e282d20f4490183ab7bb36c286fd83d32fade96ffb37bbe1ed76abaae"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/xxe/src/main/java/org/owasp/webgoat/xxe/BlindSendFileAssignment.java"},"region":{"startLine":78}},"message":{"text":"\"addComment\" is an entry point function."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/xxe/src/main/java/org/owasp/webgoat/xxe/BlindSendFileAssignment.java"},"region":{"startLine":78}},"message":{"text":"The \"commentStr\" is tainted."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/xxe/src/main/java/org/owasp/webgoat/xxe/BlindSendFileAssignment.java"},"region":{"startLine":85}},"message":{"text":"Calling \"parseXml\". Passing the tainted value \"commentStr\" to a weakly configured XML parser. (The virtual call resolves to \"org.owasp.webgoat.xxe.Comments.parseXml(java.lang.String)\".) An attacker-controlled DTD may include external entity URLs, and the resolution of external entities may expose sensitive data or result in unwanted server requests. Processing an attacker-controlled DTD may also result in an overwhelming number of entity expansions, causing denial of service."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/xxe/src/main/java/org/owasp/webgoat/xxe/BlindSendFileAssignment.java"},"region":{"startLine":85}},"message":{"text":"The recommended and strongest prevention against both external entity and entity expansion attacks is to disable DTD processing in the parser. A \"javax.xml.stream.XMLInputFactory\" instance \"xiFactory\" can be configured to disable DTD processing by calling \"xiFactory.setProperty(XMLInputFactory.SUPPORT_DTD, false)\"."}}}]}]}]},{"message":{"text":"[See in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/issues/F04865B5759DA60B6988DC0A171A3AF4?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026filter=issueType%3Alocalized-name%3DCross-site%20Scripting%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dwebgoat-lessons%2Fjwt%2Fsrc%2Fmain%2Fjava%2Forg%2Fowasp%2Fwebgoat%2Fjwt%2FJWTFinalEndpoint.java)\n\nUntrusted user-supplied data is inserted into a context that can execute JavaScript without adequate validation, escaping, or filtering."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/jwt/src/main/java/org/owasp/webgoat/jwt/JWTFinalEndpoint.java"},"region":{"startLine":112}}}],"ruleId":"xss|java","partialFingerprints":{"ruleIdLocationHash/v1":"d2f1d99f2c348503a079df65697513615b472f07339163b676161493267f438d"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/jwt/src/main/java/org/owasp/webgoat/jwt/JWTFinalEndpoint.java"},"region":{"startLine":91}},"message":{"text":"Entering this function as a framework entry point. Parameter \"jsonPayload\" is tainted because it comes from an HTTP request."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/jwt/src/main/java/org/owasp/webgoat/jwt/JWTFinalEndpoint.java"},"region":{"startLine":91}},"message":{"text":"Parameter \"jsonPayload\" receives the tainted data."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/jwt/src/main/java/org/owasp/webgoat/jwt/JWTFinalEndpoint.java"},"region":{"startLine":101}},"message":{"text":"Passing the tainted data through \"io.jsonwebtoken.impl.TextCodec.encode(java.lang.String)\"."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/jwt/src/main/java/org/owasp/webgoat/jwt/JWTFinalEndpoint.java"},"region":{"startLine":112}},"message":{"text":"Concatenating \"encodedPayload\" to an HTML page allows cross-site scripting, because it was not properly sanitized for context HTML PCDATA block."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/jwt/src/main/java/org/owasp/webgoat/jwt/JWTFinalEndpoint.java"},"region":{"startLine":112}},"message":{"text":"Perform the following escaping in the following order to guard against cross-site scripting attacks with Java.\n\nFor example: \"Encode.forHtml(encodedPayload)\"\n\n\n* Use the \"Encode.forHtml\" function from the OWASP Java Encoder. This escapes the output for HTML.\n\n"}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/jwt/src/main/java/org/owasp/webgoat/jwt/JWTFinalEndpoint.java"},"region":{"startLine":114}},"message":{"text":"Printing to HTML output."}}}]}]}]},{"message":{"text":"[See in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/issues/E8FB63F5D9157BBD70FE0DDB59D1B6D7?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026filter=issueType%3Alocalized-name%3DUseless%20Call%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dwebgoat-lessons%2Fvulnerable-components%2Fsrc%2Ftest%2Fjava%2Forg%2Fowasp%2Fwebgoat%2Fvulnerable_components%2FVulnerableComponentsLessonTest.java)\n\nA function is called that is only useful for its return value, and this value is ignored."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/vulnerable-components/src/test/java/org/owasp/webgoat/vulnerable_components/VulnerableComponentsLessonTest.java"},"region":{"startLine":65}}}],"ruleId":"useless_call|java","partialFingerprints":{"ruleIdLocationHash/v1":"39c24cec870372029f69b20ca99852645d80477b058ae05e8fb3a003c055a31a"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/vulnerable-components/src/test/java/org/owasp/webgoat/vulnerable_components/VulnerableComponentsLessonTest.java"},"region":{"startLine":65}},"message":{"text":"Calling \"((org.owasp.webgoat.vulnerable_components.Contact)xstream.fromXML(strangeContact)).getFirstName()\" is only useful for its return value, which is ignored. (The virtual call resolves to \"org.owasp.webgoat.vulnerable_components.ContactImpl.getFirstName\".)"}}}]}]}]},{"message":{"text":"[See in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/issues/1043863D28706D260DFCF03358513C63?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026filter=issueType%3Alocalized-name%3DCleartext%20Transmission%20of%20Sensitive%20Information%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dwebgoat-container%2Ftarget%2Ftest-classes%2Fapplication-test.properties)\n\nThe Spring Boot application's data source is configured to disable SSL by setting the `spring.datasource.url` attribute to a value without `useSSL=true`. Thus, sensitive data transmitted over an insecure communication channel could be read and modified by attackers."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"webgoat-container/target/test-classes/application-test.properties"},"region":{"startLine":3}}}],"ruleId":"sigma.missing_tls:spring_boot_datasource_properties|text","partialFingerprints":{"ruleIdLocationHash/v1":"f3a0693167e1e6c59d933f474d16998d74e66fd96b3eeb1009656190ef585802"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-container/target/test-classes/application-test.properties"},"region":{"startLine":3}},"message":{"text":"The Spring Boot application's data source is configured to disable SSL by setting the `spring.datasource.url` attribute to a value without `useSSL=true`. Thus, sensitive data transmitted over an insecure communication channel could be read and modified by attackers."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-container/target/test-classes/application-test.properties"},"region":{"startLine":3}},"message":{"text":"Explicitly enable SSL by setting the `spring.datasource.url` attribute to a value that contains `useSSL=true`."}}}]}]}]},{"message":{"text":"[See in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/issues/29B9CC3D8BCCF41B17F2ABFCAD2682D0?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026filter=issueType%3Alocalized-name%3DUse%20of%20Potentially%20Dangerous%20Function%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dwebgoat-server%2Fsrc%2Fmain%2Fdocker_rpi3%2FDockerfile)\n\nThe Dockerfile uses the `ADD` command to add a local non-tar file or to fetch a remote file into the Docker container. The best use for the `ADD` command is to extract local tar files into Docker containers."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"webgoat-server/src/main/docker_rpi3/Dockerfile"},"region":{"startLine":8}}}],"ruleId":"sigma.improper_use_of_add_command:dockerfile|text","partialFingerprints":{"ruleIdLocationHash/v1":"14b2a3c607740f4eec4663496da526fa8f3b2364ee6fb991be0399189aa61fb1"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-server/src/main/docker_rpi3/Dockerfile"},"region":{"startLine":8}},"message":{"text":"The Dockerfile uses the `ADD` command to add a local non-tar file or to fetch a remote file into the Docker container. The best use for the `ADD` command is to extract local tar files into Docker containers."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-server/src/main/docker_rpi3/Dockerfile"},"region":{"startLine":8}},"message":{"text":"For local non-tar files use the `COPY` command. For remote URLs use `curl` or `wget` to manually download the file and then use the `COPY` command to copy the file to the correct location."}}}]}]}]},{"message":{"text":"[See in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/issues/BDC6E8E97AF9FE7C0A1F2F7C854CDEF3?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026filter=issueType%3Alocalized-name%3DUse%20of%20Hard-coded%20Credentials%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dwebgoat-lessons%2Fjwt%2Fsrc%2Ftest%2Fjava%2Forg%2Fowasp%2Fwebgoat%2Fjwt%2FJWTFinalEndpointTest.java)\n\nA secret, such as a password, cryptographic key, or token is stored in plaintext directly in the source code, in an application's properties, or configuration file. Users with access to the secret may then use the secret to access resources that they otherwise would not have access to."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/jwt/src/test/java/org/owasp/webgoat/jwt/JWTFinalEndpointTest.java"},"region":{"startLine":31}}}],"ruleId":"sigma.hardcoded_secret:pattern|java","partialFingerprints":{"ruleIdLocationHash/v1":"25f24b243481ec030d8b46bbd10312db120bb7c1afd300932fade2b8772932b2"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/jwt/src/test/java/org/owasp/webgoat/jwt/JWTFinalEndpointTest.java"},"region":{"startLine":31}},"message":{"text":"A secret, such as a password, cryptographic key, or token is stored in plaintext directly in the source code, in an application's properties, or configuration file. Users with access to the secret may then use the secret to access resources that they otherwise would not have access to. Secret type: JWT token."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/jwt/src/test/java/org/owasp/webgoat/jwt/JWTFinalEndpointTest.java"},"region":{"startLine":31}},"message":{"text":"Avoid setting sensitive configuration values as string literals. Instead, these values should be set using variables with the sensitive data loaded from an encrypted file or a secret store."}}}]}]}]},{"message":{"text":"[See in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/issues/69B7AD597723773A0BD5C77263B20A52?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026filter=issueType%3Alocalized-name%3DUse%20of%20Hard-coded%20Credentials%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dwebgoat-lessons%2Fchallenge%2Fsrc%2Fmain%2Fjava%2Forg%2Fowasp%2Fwebgoat%2Fchallenges%2Fchallenge7%2FAssignment7.java)\n\nA secret, such as a password, cryptographic key, or token is stored in plaintext directly in the source code, in an application's properties, or configuration file. Users with access to the secret may then use the secret to access resources that they otherwise would not have access to."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/challenge/src/main/java/org/owasp/webgoat/challenges/challenge7/Assignment7.java"},"region":{"startLine":66}}}],"ruleId":"sigma.hardcoded_secret:pattern|java","partialFingerprints":{"ruleIdLocationHash/v1":"3fe0827c25b90e7864d1179b91dca16bd7a161322740ee0bb36221e48cea5d41"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/challenge/src/main/java/org/owasp/webgoat/challenges/challenge7/Assignment7.java"},"region":{"startLine":66}},"message":{"text":"A secret, such as a password, cryptographic key, or token is stored in plaintext directly in the source code, in an application's properties, or configuration file. Users with access to the secret may then use the secret to access resources that they otherwise would not have access to. Secret type: Password (generic)."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/challenge/src/main/java/org/owasp/webgoat/challenges/challenge7/Assignment7.java"},"region":{"startLine":66}},"message":{"text":"Avoid setting sensitive configuration values as string literals. Instead, these values should be set using variables with the sensitive data loaded from an encrypted file or a secret store."}}}]}]}]},{"message":{"text":"[See in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/issues/8CD34D861A1FF71962F1524573E80246?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026filter=issueType%3Alocalized-name%3DDm:%20Dubious%20method%20used%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dwebgoat-lessons%2Fcrypto%2Fsrc%2Fmain%2Fjava%2Forg%2Fowasp%2Fwebgoat%2Fcrypto%2FHashingAssignment.java)\n\nFound a call to a method which will perform a byte to String (or String to byte) conversion, and will assume that the default platform encoding is suitable. (\u003ca href=\"/doc/en/spotbugs/sb_checker_ref.html#FB.DM_DEFAULT_ENCODING\" target=\"_blank\"\u003eFrom SpotBugs description\u003c/a\u003e)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/crypto/src/main/java/org/owasp/webgoat/crypto/HashingAssignment.java"},"region":{"startLine":105}}}],"ruleId":"FB.DM_DEFAULT_ENCODING|java","partialFingerprints":{"ruleIdLocationHash/v1":"9632f79a78403781f79bcdd4dc2ab91557088ae88c28802e611dc7c39516fe43"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/crypto/src/main/java/org/owasp/webgoat/crypto/HashingAssignment.java"},"region":{"startLine":105}},"message":{"text":"Found reliance on default encoding: String.getBytes()."}}}]}]}]},{"message":{"text":"[See in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/issues/1E3EFA85A5A80F4A56C9BF1DD9951613?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026filter=issueType%3Alocalized-name%3DUse%20of%20Password%20System%20for%20Primary%20Authentication%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Ddocker-compose-postgres.yml)\n\nThe `POSTGRES_HOST_AUTH_METHOD` property is set to a weak authentication mechanism (such as `md5`, `password`, or `ident`) or omitted as the default value is `md5` when the PostgreSQL image version is prior to 14, then the connection is vulnerable to password \"sniffing\" attacks or to be compromised."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"docker-compose-postgres.yml"},"region":{"startLine":35}}}],"ruleId":"sigma.weak_auth_mechanism:docker_compose_postgres|text","partialFingerprints":{"ruleIdLocationHash/v1":"c20629b6c07dee2147db24f1977e5b1e0db4f2f5c813832eac551d4e8717fa5e"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"docker-compose-postgres.yml"},"region":{"startLine":35}},"message":{"text":"The `POSTGRES_HOST_AUTH_METHOD` property is set to a weak authentication mechanism (such as `md5`, `password`, or `ident`) or omitted as the default value is `md5` when the PostgreSQL image version is prior to 14, then the connection is vulnerable to password \"sniffing\" attacks or to be compromised."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"docker-compose-postgres.yml"},"region":{"startLine":35}},"message":{"text":"Set the `POSTGRES_HOST_AUTH_METHOD` property to a stronger authentication mechanism (such as `scram-sha-256`, `gss`) based on the usage or omit it when the PostgreSQL image version is 14 or later as the default value is `scram-sha-256`."}}}]}]}]},{"message":{"text":"[See in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/issues/B6ACC5FBDCB7A31479A029FBD6F2FFAD?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026filter=issueType%3Alocalized-name%3DImproper%20Resource%20Shutdown%20or%20Release%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dwebgoat-lessons%2Fpath-traversal%2Fsrc%2Fmain%2Fjava%2Forg%2Fowasp%2Fwebgoat%2Fpath_traversal%2FProfileUploadBase.java)\n\nLeak of a system resource"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/path-traversal/src/main/java/org/owasp/webgoat/path_traversal/ProfileUploadBase.java"},"region":{"startLine":86}}}],"ruleId":"resource_leak|java","partialFingerprints":{"ruleIdLocationHash/v1":"9011209d4dfd27f292a87e3dd0f01bc8977425ccbfab8b81fcf76eb1fc611bcc"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/path-traversal/src/main/java/org/owasp/webgoat/path_traversal/ProfileUploadBase.java"},"region":{"startLine":85}},"message":{"text":"A new resource is returned from allocation method \"getResourceAsStream\"."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/path-traversal/src/main/java/org/owasp/webgoat/path_traversal/ProfileUploadBase.java"},"region":{"startLine":85}},"message":{"text":"Assigning: \"inputStream\" = resource returned from \"(java.lang.Class)getClass().getResourceAsStream(\"/images/account.png\")\"."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/path-traversal/src/main/java/org/owasp/webgoat/path_traversal/ProfileUploadBase.java"},"region":{"startLine":86}},"message":{"text":"Resource \"inputStream\" is not closed or saved in \"copyToByteArray\"."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/path-traversal/src/main/java/org/owasp/webgoat/path_traversal/ProfileUploadBase.java"},"region":{"startLine":86}},"message":{"text":"Variable \"inputStream\" going out of scope leaks the resource it refers to."}}}]}]}]},{"message":{"text":"[See in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/issues/1517C628ED7B193A043237DAADDC46F1?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026filter=issueType%3Alocalized-name%3DUse%20of%20Hard-coded%20Credentials%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dwebgoat-lessons%2Fjwt%2Fsrc%2Fmain%2Fjava%2Forg%2Fowasp%2Fwebgoat%2Fjwt%2FJWTRefreshEndpoint.java)\n\nA secret, such as a password, cryptographic key, or token is stored in plaintext directly in the source code, in an application's properties, or configuration file. Users with access to the secret may then use the secret to access resources that they otherwise would not have access to."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/jwt/src/main/java/org/owasp/webgoat/jwt/JWTRefreshEndpoint.java"},"region":{"startLine":49}}}],"ruleId":"sigma.hardcoded_secret:pattern|java","partialFingerprints":{"ruleIdLocationHash/v1":"d2eca994b64ef10a6825f2440e5ad35f85d0d6188a13a2d6155491fcb7332e72"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/jwt/src/main/java/org/owasp/webgoat/jwt/JWTRefreshEndpoint.java"},"region":{"startLine":49}},"message":{"text":"A secret, such as a password, cryptographic key, or token is stored in plaintext directly in the source code, in an application's properties, or configuration file. Users with access to the secret may then use the secret to access resources that they otherwise would not have access to. Secret type: Password (generic)."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/jwt/src/main/java/org/owasp/webgoat/jwt/JWTRefreshEndpoint.java"},"region":{"startLine":49}},"message":{"text":"Avoid setting sensitive configuration values as string literals. Instead, these values should be set using variables with the sensitive data loaded from an encrypted file or a secret store."}}}]}]}]},{"message":{"text":"[See in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/issues/D908CE4A03247A1F3C9A1598DFC6FAB2?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026filter=issueType%3Alocalized-name%3DSQL%20Injection%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dwebgoat-lessons%2Fsql-injection%2Fsrc%2Fmain%2Fjava%2Forg%2Fowasp%2Fwebgoat%2Fsql_injection%2Fintroduction%2FSqlInjectionLesson5a.java)\n\nUntrusted user-supplied data is inserted into a SQL statement without adequate validation, escaping, or filtering."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson5a.java"},"region":{"startLine":54}}}],"ruleId":"sql_injection:sink|java","partialFingerprints":{"ruleIdLocationHash/v1":"8648e5fb361172cccaa01dfc276b0458c9e451cfc7132fcfc9766e0981690a37"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson5a.java"},"region":{"startLine":53}},"message":{"text":"\"completed\" is an entry point function."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson5a.java"},"region":{"startLine":53}},"message":{"text":"The \"account\" is tainted."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson5a.java"},"region":{"startLine":54}},"message":{"text":"Creating a tainted string using \"account\"."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson5a.java"},"region":{"startLine":54}},"message":{"text":"Calling \"injectableQuery\". Passing the tainted value \"account + \" \" + operator + \" \" + injection\" to the SQL API may allow an attacker to inject SQL. (The virtual call resolves to \"org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5a.injectableQuery(java.lang.String)\".)"}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson5a.java"},"region":{"startLine":54}},"message":{"text":"Use one of the following methods:\n* Use a query-preparation API to safely construct the SQL query containing user-supplied values.\n* Only concatenate a user-supplied value into a query if it has been checked against a whitelist of safe string values, or if it must be a Boolean or numeric type.\n"}}}]}]}]},{"message":{"text":"[See in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/issues/DBDB213346279FEEE157E9142CBAE688?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026filter=issueType%3Alocalized-name%3DUnreachable%252C%20Unused%20or%20Dead%20Code%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dwebgoat-container%2Ftarget%2Fclasses%2Fstatic%2Fjs%2Flibs%2Face.js)\n\nAn expression is useless because it has no side effects and its result is ignored."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"webgoat-container/target/classes/static/js/libs/ace.js"},"region":{"startLine":8534}}}],"ruleId":"no_effect|javascript","partialFingerprints":{"ruleIdLocationHash/v1":"9127827fbbbd67a4ec3264d437195304c1fcd3699a70566c311af3d64953fa5e"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-container/target/classes/static/js/libs/ace.js"},"region":{"startLine":8534}},"message":{"text":"Reading variable \"i\" and discarding the result. What was this code intended to accomplish?"}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-container/target/classes/static/js/libs/ace.js"},"region":{"startLine":8534}},"message":{"text":"Perhaps this code is incomplete or mistyped in some way."}}}]}]}]},{"message":{"text":"[See in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/issues/5CCBF1B53121255FC2BE81258B76B59C?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026filter=issueType%3Alocalized-name%3DServer-Side%20Request%20Forgery%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dwebgoat-lessons%2Fssrf%2Fsrc%2Fmain%2Fjava%2Forg%2Fowasp%2Fwebgoat%2Fssrf%2FSSRFTask2.java)\n\nA user-controllable string is used to specify a URL that is used in a connection. An attacker can modify the URL scheme to access a local file. An attacker can also mount a phishing attack by modifying the URL value to point to a malicious website."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/ssrf/src/main/java/org/owasp/webgoat/ssrf/SSRFTask2.java"},"region":{"startLine":46}}}],"ruleId":"url_manipulation:bad_web_uri|java","partialFingerprints":{"ruleIdLocationHash/v1":"a83c272a644f05edcdf41798d7f92675a9e14ce9116dbc6ab0e244de343ab357"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/ssrf/src/main/java/org/owasp/webgoat/ssrf/SSRFTask2.java"},"region":{"startLine":45}},"message":{"text":"\"completed\" is an entry point function."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/ssrf/src/main/java/org/owasp/webgoat/ssrf/SSRFTask2.java"},"region":{"startLine":45}},"message":{"text":"The \"url\" is tainted."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/ssrf/src/main/java/org/owasp/webgoat/ssrf/SSRFTask2.java"},"region":{"startLine":46}},"message":{"text":"Calling \"furBall\". This call uses \"url\" for sensitive computation. (The virtual call resolves to \"org.owasp.webgoat.ssrf.SSRFTask2.furBall(java.lang.String)\".)"}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/ssrf/src/main/java/org/owasp/webgoat/ssrf/SSRFTask2.java"},"region":{"startLine":46}},"message":{"text":"URL manipulation vulnerabilities can be addressed by proper input validation. Allow listing the allowed scheme and authority, and deny listing characters that allow unsafe path traversal in the path and query parts of the URL can improve security."}}}]}]}]},{"message":{"text":"[See in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/issues/7C65ADCB91C5FDAEED71D64C1B012890?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026filter=issueType%3Alocalized-name%3DUse%20of%20Hard-coded%20Credentials%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dwebgoat-lessons%2Fjwt%2Fsrc%2Fmain%2Fjava%2Forg%2Fowasp%2Fwebgoat%2Fjwt%2FJWTRefreshEndpoint.java)\n\nA secret, such as a password, cryptographic key, or token is stored in plaintext directly in the source code, in an application's properties, or configuration file. Users with access to the secret may then use the secret to access resources that they otherwise would not have access to."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/jwt/src/main/java/org/owasp/webgoat/jwt/JWTRefreshEndpoint.java"},"region":{"startLine":48}}}],"ruleId":"sigma.hardcoded_secret:pattern|java","partialFingerprints":{"ruleIdLocationHash/v1":"4766030c4eefe994d067035cadc597bd8c733a8d46472fc06276c0f025b8ca04"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/jwt/src/main/java/org/owasp/webgoat/jwt/JWTRefreshEndpoint.java"},"region":{"startLine":48}},"message":{"text":"A secret, such as a password, cryptographic key, or token is stored in plaintext directly in the source code, in an application's properties, or configuration file. Users with access to the secret may then use the secret to access resources that they otherwise would not have access to. Secret type: Password (generic)."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/jwt/src/main/java/org/owasp/webgoat/jwt/JWTRefreshEndpoint.java"},"region":{"startLine":48}},"message":{"text":"Avoid setting sensitive configuration values as string literals. Instead, these values should be set using variables with the sensitive data loaded from an encrypted file or a secret store."}}}]}]}]},{"message":{"text":"[See in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/issues/0CDEB5CB2E14CBEEA15E92BF0F87F517?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026filter=issueType%3Alocalized-name%3DImproper%20Verification%20of%20Cryptographic%20Signature%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dwebgoat-integration-tests%2Fsrc%2Ftest%2Fjava%2Forg%2Fowasp%2Fwebgoat%2FJWTLessonTest.java)\n\nThe application uses the `io.jsonwebtoken.JwtParser` package's `parse()`, `parsePlaintextJwt()`, or `parseClaimsJwt()` method to parse a JWT without first verifying the token's signature, allowing an attacker to forge the token claims and perform attacks such as impersonating other users."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"webgoat-integration-tests/src/test/java/org/owasp/webgoat/JWTLessonTest.java"},"region":{"startLine":68}}}],"ruleId":"sigma.jwt_untrusted_decode:io_jsonwebtoken|java","partialFingerprints":{"ruleIdLocationHash/v1":"190b659e00161db46323be7791a70e7bb734805cdc5a553eb3d0535c3f301af5"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-integration-tests/src/test/java/org/owasp/webgoat/JWTLessonTest.java"},"region":{"startLine":68}},"message":{"text":"The application uses the `io.jsonwebtoken.JwtParser` package's `parse()`, `parsePlaintextJwt()`, or `parseClaimsJwt()` method to parse a JWT without first verifying the token's signature, allowing an attacker to forge the token claims and perform attacks such as impersonating other users."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-integration-tests/src/test/java/org/owasp/webgoat/JWTLessonTest.java"},"region":{"startLine":68}},"message":{"text":"Modify the application to use `parseClaimsJws()` or `parsePlaintextJws()` instead, since these methods will automatically verify the token signature."}}}]}]}]},{"message":{"text":"[See in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/issues/7A9D2F8298AF47969C2FC9D7BF282E72?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026filter=issueType%3Alocalized-name%3DDOM-Based%20Cross-Site%20Scripting%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dwebgoat-lessons%2Fjwt%2Ftarget%2Fclasses%2Fhtml%2FJWT.html)\n\nUntrusted user-supplied data is inserted into a context that can execute JavaScript."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/jwt/target/classes/html/JWT.html"},"region":{"startLine":351}}}],"ruleId":"xss:dom_xss|javascript","partialFingerprints":{"ruleIdLocationHash/v1":"2780b437487de4b1bcd0b746a3daa01f811544ab9d08305856b00d077aeaa7ea"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/jwt/target/classes/html/JWT.html"},"region":{"startLine":351}},"message":{"text":"Calling the function \"$.post\" registers argument 3 as an event handler."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/jwt/target/classes/html/JWT.html"},"region":{"startLine":351}},"message":{"text":"Parameter \"data\" and all its properties or fields are tainted when the callback function is called."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/jwt/target/classes/html/JWT.html"},"region":{"startLine":351}},"message":{"text":"Calling at a later point \"\u003canonymous\u003e\". This call uses \"data.encodedSignature\" for sensitive computation."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/jwt/target/classes/html/JWT.html"},"region":{"startLine":351}},"message":{"text":"The untrusted data reaches a sink that can either lead to HTML injection, JavaScript code execution, or the manipulation of a URL starting with the \"javascript:\" or \"data:\" schemes. Any of these can lead to a DOM XSS vulnerability.\n* HTML injection: Either escape properly the untrusted data or use a safe API to insert this data to the DOM; direct HTML manipulation as text should be avoided.\n* JavaScript code execution: Validate any untrusted data against a whitelist so it's not possible for an attacker to have its supplied code executing.\n* URL manipulation: Make sure the scheme is whitelisted and doesn't allow for the injection of a URL like: \"data:text/html;,\u003cimg/src/onerror=alert(1)\u003e\".\n"}}}]}]}]},{"message":{"text":"[See in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/issues/8D7D7451DAEFAF7AEDCEDFE5A3326241?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026filter=issueType%3Alocalized-name%3DImproper%20Privilege%20Management%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dgoat-with-reverseproxy.yaml)\n\nThe Docker Compose file sets the `no-new-privileges` attribute to `false` or omits it as the default value is `false`. This doesn't restrict the container from acquiring additional privileges via SUID or SGID bits. This allows privilege escalation, meaning a user can set the security context of the container and can perform root-level operations."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"goat-with-reverseproxy.yaml"},"region":{"startLine":6}}}],"ruleId":"sigma.container_privilege_escalation_allowed:docker_compose|text","partialFingerprints":{"ruleIdLocationHash/v1":"9e6b0cfb3caec77e42f9056d7f05d2a9d4b282e100294832abcadd4bcc27a938"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"goat-with-reverseproxy.yaml"},"region":{"startLine":6}},"message":{"text":"The Docker Compose file sets the `no-new-privileges` attribute to `false` or omits it as the default value is `false`. This doesn't restrict the container from acquiring additional privileges via SUID or SGID bits. This allows privilege escalation, meaning a user can set the security context of the container and can perform root-level operations."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"goat-with-reverseproxy.yaml"},"region":{"startLine":6}},"message":{"text":"Disable container privilege escalation by explicitly setting `no-new-privileges` to `true`."}}}]}]}]},{"message":{"text":"[See in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/issues/3CE24B55B244715646245FFA855BCB4D?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026filter=issueType%3Alocalized-name%3DFiles%20or%20Directories%20Accessible%20to%20External%20Parties%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dgoat-with-reverseproxy.yaml)\n\nThe docker service container is configured to permit writing to the root filesystem. This makes some security attack vectors such as privilege escalation, denial-of-service or authorization bypass possible since the container instance's filesystem can be tampered with."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"goat-with-reverseproxy.yaml"},"region":{"startLine":6}}}],"ruleId":"sigma.container_filesystem_write:docker_compose|text","partialFingerprints":{"ruleIdLocationHash/v1":"df60a044dcec9391635cd4708e81e636384bf789c08ffc7563e0bbbb66c8e3c2"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"goat-with-reverseproxy.yaml"},"region":{"startLine":6}},"message":{"text":"The docker service container is configured to permit writing to the root filesystem. This makes some security attack vectors such as privilege escalation, denial-of-service or authorization bypass possible since the container instance's filesystem can be tampered with."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"goat-with-reverseproxy.yaml"},"region":{"startLine":6}},"message":{"text":"Explicitly set the `read-only` attribute of the service to `true` to create a service container with a read-only filesystem."}}}]}]}]},{"message":{"text":"[See in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/issues/7F6B89555D4888DE3536EC9BE560B533?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026filter=issueType%3Alocalized-name%3DImproper%20Verification%20of%20Cryptographic%20Signature%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dwebgoat-lessons%2Fjwt%2Fsrc%2Fmain%2Fjava%2Forg%2Fowasp%2Fwebgoat%2Fjwt%2FJWTRefreshEndpoint.java)\n\nThe application uses the `io.jsonwebtoken.JwtParser` package's `parse()`, `parsePlaintextJwt()`, or `parseClaimsJwt()` method to parse a JWT without first verifying the token's signature, allowing an attacker to forge the token claims and perform attacks such as impersonating other users."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/jwt/src/main/java/org/owasp/webgoat/jwt/JWTRefreshEndpoint.java"},"region":{"startLine":116}}}],"ruleId":"sigma.jwt_untrusted_decode:io_jsonwebtoken|java","partialFingerprints":{"ruleIdLocationHash/v1":"144677c86d3f5e8a1b941fb6535d84f109f3a2d89bf8726fc7b542be9f73b8ec"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/jwt/src/main/java/org/owasp/webgoat/jwt/JWTRefreshEndpoint.java"},"region":{"startLine":116}},"message":{"text":"The application uses the `io.jsonwebtoken.JwtParser` package's `parse()`, `parsePlaintextJwt()`, or `parseClaimsJwt()` method to parse a JWT without first verifying the token's signature, allowing an attacker to forge the token claims and perform attacks such as impersonating other users."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/jwt/src/main/java/org/owasp/webgoat/jwt/JWTRefreshEndpoint.java"},"region":{"startLine":116}},"message":{"text":"Modify the application to use `parseClaimsJws()` or `parsePlaintextJws()` instead, since these methods will automatically verify the token signature."}}}]}]}]},{"message":{"text":"[See in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/issues/642611F38999D63A3D5DA2271E23628B?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026filter=issueType%3Alocalized-name%3DUse%20of%20Hard-coded%20Credentials%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dwebgoat-lessons%2Fcrypto%2Fsrc%2Fmain%2Fjava%2Forg%2Fowasp%2Fwebgoat%2Fcrypto%2FXOREncodingAssignment.java)\n\nA secret, such as a password, cryptographic key, or token is stored in plaintext directly in the source code, in an application's properties, or configuration file. Users with access to the secret may then use the secret to access resources that they otherwise would not have access to."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/crypto/src/main/java/org/owasp/webgoat/crypto/XOREncodingAssignment.java"},"region":{"startLine":40}}}],"ruleId":"sigma.hardcoded_secret:pattern|java","partialFingerprints":{"ruleIdLocationHash/v1":"252091ead0debe06eee0481498dd459dc0097925e12e0ad3ca0ecb1455e48da2"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/crypto/src/main/java/org/owasp/webgoat/crypto/XOREncodingAssignment.java"},"region":{"startLine":40}},"message":{"text":"A secret, such as a password, cryptographic key, or token is stored in plaintext directly in the source code, in an application's properties, or configuration file. Users with access to the secret may then use the secret to access resources that they otherwise would not have access to. Secret type: Password (generic)."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/crypto/src/main/java/org/owasp/webgoat/crypto/XOREncodingAssignment.java"},"region":{"startLine":40}},"message":{"text":"Avoid setting sensitive configuration values as string literals. Instead, these values should be set using variables with the sensitive data loaded from an encrypted file or a secret store."}}}]}]}]},{"message":{"text":"[See in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/issues/4E5FF2AD07FD3BBABD090ADE83A0FE16?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026filter=issueType%3Alocalized-name%3DPI:%20Do%20not%20reuse%20public%20identifiers%20from%20Java%20Standard%20Library%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dwebgoat-lessons%2Fchallenge%2Fsrc%2Fmain%2Fjava%2Forg%2Fowasp%2Fwebgoat%2Fchallenges%2FFlag.java)\n\nIt's essential to avoid reusing public identifiers from the Java Standard Library as class names. (\u003ca href=\"/doc/en/spotbugs/sb_checker_ref.html#FB.PI_DO_NOT_REUSE_PUBLIC_IDENTIFIERS_CLASS_NAMES\" target=\"_blank\"\u003eFrom SpotBugs description\u003c/a\u003e)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/challenge/src/main/java/org/owasp/webgoat/challenges/Flag.java"},"region":{"startLine":53}}}],"ruleId":"FB.PI_DO_NOT_REUSE_PUBLIC_IDENTIFIERS_CLASS_NAMES|java","partialFingerprints":{"ruleIdLocationHash/v1":"d4560862d30a5c1d9099a184dbd66004c262a6b4e5e994eb28f36dacbc4daa52"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/challenge/src/main/java/org/owasp/webgoat/challenges/Flag.java"},"region":{"startLine":53}},"message":{"text":"Class name ?\u003e?1/1??? in source file ?\u003e?2/1??? shadows the publicly available identifier from the Java Standard Library."}}}]}]}]},{"message":{"text":"[See in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/issues/89C1595CEAAD92F093CC7EF8B8E5E985?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026filter=issueType%3Alocalized-name%3DInclusion%20of%20Functionality%20from%20Untrusted%20Control%20Sphere%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Ddocker-compose.yml)\n\nThe Docker Compose file does not explicitly set `image` attribute with a specific stable version. Pinning the version of the base image will make the container being built more predictable. Relying on the latest version may silently inherit newer packages, which in the best case may affect application reliability and in the worst case may introduce vulnerabilities."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"docker-compose.yml"},"region":{"startLine":5}}}],"ruleId":"sigma.unspecified_software_version:docker_compose|text","partialFingerprints":{"ruleIdLocationHash/v1":"898bbf201207e33413d67a7b301de3f35590c91703486a9393a8c6729aa2779f"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"docker-compose.yml"},"region":{"startLine":5}},"message":{"text":"The Docker Compose file does not explicitly set `image` attribute with a specific stable version. Pinning the version of the base image will make the container being built more predictable. Relying on the latest version may silently inherit newer packages, which in the best case may affect application reliability and in the worst case may introduce vulnerabilities."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"docker-compose.yml"},"region":{"startLine":5}},"message":{"text":"Explicitly set the `image` attribute to a specific stable version."}}}]}]}]},{"message":{"text":"[See in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/issues/8930B0709956B33734EA6F970B797B7C?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026filter=issueType%3Alocalized-name%3DNULL%20Pointer%20Dereference%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dwebgoat-container%2Fsrc%2Ftest%2Fjava%2Forg%2Fowasp%2Fwebgoat%2Fusers%2FUserValidatorTest.java)\n\nReturn value of function which returns null is dereferenced without checking"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"webgoat-container/src/test/java/org/owasp/webgoat/users/UserValidatorTest.java"},"region":{"startLine":58}}}],"ruleId":"null_pointer_dereference_exception:return_value|java","partialFingerprints":{"ruleIdLocationHash/v1":"77e72dfc74f2c1bae1794da698c759f5e3f19f01506c0585ea29b8ac5be9f642"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-container/src/test/java/org/owasp/webgoat/users/UserValidatorTest.java"},"region":{"startLine":58}},"message":{"text":"\"getFieldError\" returns \"null\" (checked 0 out of 3 times). (The virtual call resolves to \"org.springframework.validation.AbstractBindingResult.getFieldError\".)"}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-container/src/test/java/org/owasp/webgoat/users/UserValidatorTest.java"},"region":{"startLine":58}},"message":{"text":"Calling a method on null object \"errors.getFieldError(\"username\")\"."}}}]}]}]},{"message":{"text":"[See in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/issues/30CE0E5F670951E779D5BAC4D40BAF54?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026filter=issueType%3Alocalized-name%3DUse%20of%20Hard-coded%20Credentials%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dwebgoat-container%2Fsrc%2Ftest%2Fjava%2Forg%2Fowasp%2Fwebgoat%2Fusers%2FUserValidatorTest.java)\n\nA secret, such as a password, cryptographic key, or token is stored in plaintext directly in the source code, in an application's properties, or configuration file. Users with access to the secret may then use the secret to access resources that they otherwise would not have access to."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"webgoat-container/src/test/java/org/owasp/webgoat/users/UserValidatorTest.java"},"region":{"startLine":39}}}],"ruleId":"sigma.hardcoded_secret:pattern|java","partialFingerprints":{"ruleIdLocationHash/v1":"0ad2f7c22949d156b31019af3c7c01636d2318ef7cbc89c74424c8aed3d95d25"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-container/src/test/java/org/owasp/webgoat/users/UserValidatorTest.java"},"region":{"startLine":39}},"message":{"text":"A secret, such as a password, cryptographic key, or token is stored in plaintext directly in the source code, in an application's properties, or configuration file. Users with access to the secret may then use the secret to access resources that they otherwise would not have access to. Secret type: Password (generic)."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-container/src/test/java/org/owasp/webgoat/users/UserValidatorTest.java"},"region":{"startLine":39}},"message":{"text":"Avoid setting sensitive configuration values as string literals. Instead, these values should be set using variables with the sensitive data loaded from an encrypted file or a secret store."}}}]}]}]},{"message":{"text":"[See in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/issues/AD9178FB6A734878D70AA7974EC39B20?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026filter=issueType%3Alocalized-name%3DUse%20of%20Hard-coded%20Credentials%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dwebgoat-lessons%2Fpath-traversal%2Fsrc%2Fmain%2Fresources%2Fhtml%2FPathTraversal.html)\n\nA secret, such as a password, cryptographic key, or token is stored in plaintext directly in the source code, in an application's properties, or configuration file. Users with access to the secret may then use the secret to access resources that they otherwise would not have access to."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/path-traversal/src/main/resources/html/PathTraversal.html"},"region":{"startLine":50}}}],"ruleId":"sigma.hardcoded_secret:pattern|html","partialFingerprints":{"ruleIdLocationHash/v1":"3314eb7fbe3e74dcb48d98cbb8eddf8ce040440dc27f4d88de47ab302649dff9"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/path-traversal/src/main/resources/html/PathTraversal.html"},"region":{"startLine":50}},"message":{"text":"A secret, such as a password, cryptographic key, or token is stored in plaintext directly in the source code, in an application's properties, or configuration file. Users with access to the secret may then use the secret to access resources that they otherwise would not have access to. Secret type: Password (generic)."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/path-traversal/src/main/resources/html/PathTraversal.html"},"region":{"startLine":50}},"message":{"text":"Avoid setting sensitive configuration values as string literals. Instead, these values should be set using variables with the sensitive data loaded from an encrypted file or a secret store."}}}]}]}]},{"message":{"text":"[See in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/issues/AB52C168EE25C511226666D931008158?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026filter=issueType%3Alocalized-name%3DImproper%20Privilege%20Management%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Ddocker-compose-local.yml)\n\nThe Docker Compose file sets the `no-new-privileges` attribute to `false` or omits it as the default value is `false`. This doesn't restrict the container from acquiring additional privileges via SUID or SGID bits. This allows privilege escalation, meaning a user can set the security context of the container and can perform root-level operations."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"docker-compose-local.yml"},"region":{"startLine":5}}}],"ruleId":"sigma.container_privilege_escalation_allowed:docker_compose|text","partialFingerprints":{"ruleIdLocationHash/v1":"33a5423d0cba365abd5d5b399ddb49eb987e5eaf6105bdcdffc1db901fbcd47b"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"docker-compose-local.yml"},"region":{"startLine":5}},"message":{"text":"The Docker Compose file sets the `no-new-privileges` attribute to `false` or omits it as the default value is `false`. This doesn't restrict the container from acquiring additional privileges via SUID or SGID bits. This allows privilege escalation, meaning a user can set the security context of the container and can perform root-level operations."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"docker-compose-local.yml"},"region":{"startLine":5}},"message":{"text":"Disable container privilege escalation by explicitly setting `no-new-privileges` to `true`."}}}]}]}]},{"message":{"text":"[See in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/issues/7758F69CDFB7BAA647B36CCBE5916235?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026filter=issueType%3Alocalized-name%3DImproper%20Resource%20Shutdown%20or%20Release%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dwebgoat-lessons%2Fsql-injection%2Fsrc%2Fmain%2Fjava%2Forg%2Fowasp%2Fwebgoat%2Fsql_injection%2Fintroduction%2FSqlInjectionLesson10.java)\n\nLeak of a system resource"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson10.java"},"region":{"startLine":94}}}],"ruleId":"resource_leak|java","partialFingerprints":{"ruleIdLocationHash/v1":"b8fc33a7ff0280b7a75ca88af60797684eae4b2c4fbfdb9d95432e6069a41b8d"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson10.java"},"region":{"startLine":91}},"message":{"text":"A new resource is returned from allocation method \"createStatement\"."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson10.java"},"region":{"startLine":91}},"message":{"text":"Assigning: \"stmt\" = resource returned from \"connection.createStatement(1004, 1007)\"."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson10.java"},"region":{"startLine":92}},"message":{"text":"Resource \"stmt\" is not closed or saved in \"executeQuery\"."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson10.java"},"region":{"startLine":94}},"message":{"text":"Condition \"cols \u003e 0\", taking true branch."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson10.java"},"region":{"startLine":94}},"message":{"text":"Variable \"stmt\" going out of scope leaks the resource it refers to."}}}]}]}]},{"message":{"text":"[See in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/issues/E0F187F268FBC90A7F3F95EF83A6FB38?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026filter=issueType%3Alocalized-name%3DUse%20of%20Hard-coded%20Credentials%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dwebgoat-lessons%2Fjwt%2Fsrc%2Ftest%2Fjava%2Forg%2Fowasp%2Fwebgoat%2Fjwt%2FJWTRefreshEndpointTest.java)\n\nA secret, such as a password, cryptographic key, or token is stored in plaintext directly in the source code, in an application's properties, or configuration file. Users with access to the secret may then use the secret to access resources that they otherwise would not have access to."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/jwt/src/test/java/org/owasp/webgoat/jwt/JWTRefreshEndpointTest.java"},"region":{"startLine":106}}}],"ruleId":"sigma.hardcoded_secret:pattern|java","partialFingerprints":{"ruleIdLocationHash/v1":"c4bf59b7b567f34ca6dbf6671a77ed0a79a479d9cd3efe92a8015d76ea99b407"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/jwt/src/test/java/org/owasp/webgoat/jwt/JWTRefreshEndpointTest.java"},"region":{"startLine":106}},"message":{"text":"A secret, such as a password, cryptographic key, or token is stored in plaintext directly in the source code, in an application's properties, or configuration file. Users with access to the secret may then use the secret to access resources that they otherwise would not have access to. Secret type: Access token (generic)."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/jwt/src/test/java/org/owasp/webgoat/jwt/JWTRefreshEndpointTest.java"},"region":{"startLine":106}},"message":{"text":"Avoid setting sensitive configuration values as string literals. Instead, these values should be set using variables with the sensitive data loaded from an encrypted file or a secret store."}}}]}]}]},{"message":{"text":"[See in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/issues/AD017BD20A7E92F6B35269411430C955?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026filter=issueType%3Alocalized-name%3DSIC:%20Inner%20class%20could%20be%20made%20static%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dwebgoat-lessons%2Fclient-side-filtering%2Fsrc%2Fmain%2Fjava%2Forg%2Fowasp%2Fwebgoat%2Fclient_side_filtering%2FShopEndpoint.java)\n\nThis class is an inner class, but does not use its embedded reference to the object which created it. (\u003ca href=\"/doc/en/spotbugs/sb_checker_ref.html#FB.SIC_INNER_SHOULD_BE_STATIC\" target=\"_blank\"\u003eFrom SpotBugs description\u003c/a\u003e)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/client-side-filtering/src/main/java/org/owasp/webgoat/client_side_filtering/ShopEndpoint.java"},"region":{"startLine":60}}}],"ruleId":"FB.SIC_INNER_SHOULD_BE_STATIC|java","partialFingerprints":{"ruleIdLocationHash/v1":"736c780eb9be539fbaeca0ac551202ebb86dd78a15405e2de4fbc3707d8e81ae"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/client-side-filtering/src/main/java/org/owasp/webgoat/client_side_filtering/ShopEndpoint.java"},"region":{"startLine":60}},"message":{"text":"Should org.owasp.webgoat.client_side_filtering.ShopEndpoint$CheckoutCode be a _static_ inner class?"}}}]}]}]},{"message":{"text":"[See in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/issues/603E0BBCBFBA1E8979BEB8C3DF4E3301?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026filter=issueType%3Alocalized-name%3DUse%20of%20Hard-coded%20Credentials%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dwebgoat-lessons%2Finsecure-deserialization%2Fsrc%2Ftest%2Fjava%2Forg%2Fowasp%2Fwebgoat%2Fdeserialization%2FDeserializeTest.java)\n\nA secret, such as a password, cryptographic key, or token is stored in plaintext directly in the source code, in an application's properties, or configuration file. Users with access to the secret may then use the secret to access resources that they otherwise would not have access to."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/insecure-deserialization/src/test/java/org/owasp/webgoat/deserialization/DeserializeTest.java"},"region":{"startLine":58}}}],"ruleId":"sigma.hardcoded_secret:pattern|java","partialFingerprints":{"ruleIdLocationHash/v1":"0217d993ca54edc02cc4e710c03177fb57055aac713272c8c53bdc64a6939bd6"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/insecure-deserialization/src/test/java/org/owasp/webgoat/deserialization/DeserializeTest.java"},"region":{"startLine":58}},"message":{"text":"A secret, such as a password, cryptographic key, or token is stored in plaintext directly in the source code, in an application's properties, or configuration file. Users with access to the secret may then use the secret to access resources that they otherwise would not have access to. Secret type: Token (generic)."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/insecure-deserialization/src/test/java/org/owasp/webgoat/deserialization/DeserializeTest.java"},"region":{"startLine":58}},"message":{"text":"Avoid setting sensitive configuration values as string literals. Instead, these values should be set using variables with the sensitive data loaded from an encrypted file or a secret store."}}}]}]}]},{"message":{"text":"[See in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/issues/A66F8B73918C462927BE9BF56B65277D?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026filter=issueType%3Alocalized-name%3DImproper%20Access%20Control%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Ddocker-compose.yml)\n\nThe Docker container is not configured to drop all default capabilities and then add only required one. Thus the container may be granted excessive privileges which violate the least privilege principle."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"docker-compose.yml"},"region":{"startLine":17}}}],"ruleId":"sigma.least_privilege_violation:docker_compose|text","partialFingerprints":{"ruleIdLocationHash/v1":"c458cdc735bcaa55f597ecd52fbd7d08f5193cdd205be9ad9873b28a122726c7"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"docker-compose.yml"},"region":{"startLine":17}},"message":{"text":"The Docker container is not configured to drop all default capabilities and then add only required one. Thus the container may be granted excessive privileges which violate the least privilege principle."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"docker-compose.yml"},"region":{"startLine":17}},"message":{"text":"Remove all the default capabilities from the list of capabilities by setting the `cap_drop` value to `ALL` and then add only specific capabilities needed by a container."}}}]}]}]},{"message":{"text":"[See in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/issues/57BB4085DAE18E382FE982D635F0E60D?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026filter=issueType%3Alocalized-name%3DCross-Site%20Request%20Forgery%20%28CSRF%29%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dwebgoat-container%2Fsrc%2Fmain%2Fjava%2Forg%2Fowasp%2Fwebgoat%2FWebSecurityConfig.java)\n\nThe Spring Security CSRF protection is disabled. An attacker may trick a client into making an unintentional request to the web server which will be treated as an authentic request. It may result in unintended execution of sensitive functionality or in exposure of data if the CSRF protection is disabled."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"webgoat-container/src/main/java/org/owasp/webgoat/WebSecurityConfig.java"},"region":{"startLine":72}}}],"ruleId":"sigma.csrf_protection_disabled:spring_security_code|java","partialFingerprints":{"ruleIdLocationHash/v1":"75634825a27c2f1d44cc945bb3530e940a7165a5f2a7ea9b8e6b5eee47df744e"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-container/src/main/java/org/owasp/webgoat/WebSecurityConfig.java"},"region":{"startLine":72}},"message":{"text":"The Spring Security CSRF protection is disabled. An attacker may trick a client into making an unintentional request to the web server which will be treated as an authentic request. It may result in unintended execution of sensitive functionality or in exposure of data if the CSRF protection is disabled."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-container/src/main/java/org/owasp/webgoat/WebSecurityConfig.java"},"region":{"startLine":72}},"message":{"text":"Enable the Spring Security CSRF protection by omitting the invocation of `disable()`."}}}]}]}]},{"message":{"text":"[See in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/issues/37898D1EDF7AACA1A689C6F7BD684771?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026filter=issueType%3Alocalized-name%3DSQL%20Injection%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dwebgoat-lessons%2Fsql-injection%2Fsrc%2Fmain%2Fjava%2Forg%2Fowasp%2Fwebgoat%2Fsql_injection%2Fintroduction%2FSqlInjectionLesson8.java)\n\nUntrusted user-supplied data is inserted into a SQL statement without adequate validation, escaping, or filtering."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson8.java"},"region":{"startLine":54}}}],"ruleId":"sql_injection:sink|java","partialFingerprints":{"ruleIdLocationHash/v1":"d3f92c9816e1f05d76f1160c7167dacb03800cda7e614bf7a8208a8a2a384e00"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson8.java"},"region":{"startLine":53}},"message":{"text":"\"completed\" is an entry point function."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson8.java"},"region":{"startLine":53}},"message":{"text":"The \"name\" is tainted."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson8.java"},"region":{"startLine":54}},"message":{"text":"Calling \"injectableQueryConfidentiality\". Passing the tainted value \"name\" to the SQL API may allow an attacker to inject SQL. (The virtual call resolves to \"org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson8.injectableQueryConfidentiality(java.lang.String, java.lang.String)\".)"}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson8.java"},"region":{"startLine":54}},"message":{"text":"Use one of the following methods:\n* Use a query-preparation API to safely construct the SQL query containing user-supplied values.\n* Only concatenate a user-supplied value into a query if it has been checked against a whitelist of safe string values, or if it must be a Boolean or numeric type.\n"}}}]}]}]},{"message":{"text":"[See in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/issues/3CEFC81799B30F5806B5BC9DCA45CA48?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026filter=issueType%3Alocalized-name%3DImproper%20Resource%20Shutdown%20or%20Release%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dwebgoat-lessons%2Fchallenge%2Fsrc%2Fmain%2Fjava%2Forg%2Fowasp%2Fwebgoat%2Fchallenges%2Fchallenge5%2FAssignment5.java)\n\nLeak of a system resource"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/challenge/src/main/java/org/owasp/webgoat/challenges/challenge5/Assignment5.java"},"region":{"startLine":65}}}],"ruleId":"resource_leak|java","partialFingerprints":{"ruleIdLocationHash/v1":"b8de5bff4d1208b0a353ffb716361b7d65dc72b631cc6a7cd11f1612c3d7c6b7"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/challenge/src/main/java/org/owasp/webgoat/challenges/challenge5/Assignment5.java"},"region":{"startLine":55}},"message":{"text":"Starting defect path here."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/challenge/src/main/java/org/owasp/webgoat/challenges/challenge5/Assignment5.java"},"region":{"startLine":55}},"message":{"text":"Condition \"!\"Larry\".equals(username_login)\", taking false branch."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/challenge/src/main/java/org/owasp/webgoat/challenges/challenge5/Assignment5.java"},"region":{"startLine":59}},"message":{"text":"A new resource is returned from allocation method \"prepareStatement\"."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/challenge/src/main/java/org/owasp/webgoat/challenges/challenge5/Assignment5.java"},"region":{"startLine":59}},"message":{"text":"Assigning: \"statement\" = resource returned from \"connection.prepareStatement(\"select password from challenge_users where userid = '\" + username_login + \"' and password = '\" + password_login + \"'\")\"."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/challenge/src/main/java/org/owasp/webgoat/challenges/challenge5/Assignment5.java"},"region":{"startLine":60}},"message":{"text":"Resource \"statement\" is not closed or saved in \"executeQuery\"."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/challenge/src/main/java/org/owasp/webgoat/challenges/challenge5/Assignment5.java"},"region":{"startLine":62}},"message":{"text":"Condition \"resultSet.next()\", taking false branch."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/challenge/src/main/java/org/owasp/webgoat/challenges/challenge5/Assignment5.java"},"region":{"startLine":65}},"message":{"text":"Variable \"statement\" going out of scope leaks the resource it refers to."}}}]}]}]},{"message":{"text":"[See in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/issues/CA86F1B3C9FCF663C30ACD1C55BD8458?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026filter=issueType%3Alocalized-name%3DDm:%20Dubious%20method%20used%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dwebgoat-container%2Fsrc%2Fmain%2Fjava%2Forg%2Fowasp%2Fwebgoat%2FAsciiDoctorTemplateResolver.java)\n\nFound a call to a method which will perform a byte to String (or String to byte) conversion, and will assume that the default platform encoding is suitable. (\u003ca href=\"/doc/en/spotbugs/sb_checker_ref.html#FB.DM_DEFAULT_ENCODING\" target=\"_blank\"\u003eFrom SpotBugs description\u003c/a\u003e)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"webgoat-container/src/main/java/org/owasp/webgoat/AsciiDoctorTemplateResolver.java"},"region":{"startLine":89}}}],"ruleId":"FB.DM_DEFAULT_ENCODING|java","partialFingerprints":{"ruleIdLocationHash/v1":"1c0634d2c1da142897fe7f80e3749872a5e681c6b0fcea657cd65cd9cbe3d469"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-container/src/main/java/org/owasp/webgoat/AsciiDoctorTemplateResolver.java"},"region":{"startLine":89}},"message":{"text":"Found reliance on default encoding: new java.io.InputStreamReader(InputStream)."}}}]}]}]},{"message":{"text":"[See in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/issues/C26F25FB04C186EB92F4BC5E643ABA27?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026filter=issueType%3Alocalized-name%3DAssignment%20to%20Variable%20without%20Use%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dwebgoat-lessons%2Fjwt%2Fsrc%2Ftest%2Fjava%2Forg%2Fowasp%2Fwebgoat%2Fjwt%2FJWTFinalEndpointTest.java)\n\nThis instruction assigns a value to a local variable, but the value is not read or used in any subsequent instruction. (\u003ca href=\"/doc/en/spotbugs/sb_checker_ref.html#FB.DLS_DEAD_LOCAL_STORE_SHADOWS_FIELD\" target=\"_blank\"\u003eFrom SpotBugs description\u003c/a\u003e)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/jwt/src/test/java/org/owasp/webgoat/jwt/JWTFinalEndpointTest.java"},"region":{"startLine":93}}}],"ruleId":"FB.DLS_DEAD_LOCAL_STORE_SHADOWS_FIELD|java","partialFingerprints":{"ruleIdLocationHash/v1":"f5cbd19bee01b74f7d50d88faa3f7841ec53e59eae3a0b90afa052feb58264b9"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/jwt/src/test/java/org/owasp/webgoat/jwt/JWTFinalEndpointTest.java"},"region":{"startLine":93}},"message":{"text":"Dead store to jwt rather than field with same name."}}}]}]}]},{"message":{"text":"[See in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/issues/1BCA047F1EA34238B32CD5E46038FF7F?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026filter=issueType%3Alocalized-name%3DDirectory%20Traversal%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dwebgoat-lessons%2Fpath-traversal%2Fsrc%2Fmain%2Fjava%2Forg%2Fowasp%2Fwebgoat%2Fpath_traversal%2FProfileUpload.java)\n\nA user-controllable string is used as part or all of a filesystem path, filename, or URI (uniform resource identifier)."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/path-traversal/src/main/java/org/owasp/webgoat/path_traversal/ProfileUpload.java"},"region":{"startLine":32}}}],"ruleId":"path_manipulation|java","partialFingerprints":{"ruleIdLocationHash/v1":"f6050064ac27f643ed1f976589c4eced97066860ac329b2026841d2d91a8ba83"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/path-traversal/src/main/java/org/owasp/webgoat/path_traversal/ProfileUpload.java"},"region":{"startLine":31}},"message":{"text":"\"uploadFileHandler\" is an entry point function."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/path-traversal/src/main/java/org/owasp/webgoat/path_traversal/ProfileUpload.java"},"region":{"startLine":31}},"message":{"text":"The \"fullName\" is tainted."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/path-traversal/src/main/java/org/owasp/webgoat/path_traversal/ProfileUpload.java"},"region":{"startLine":32}},"message":{"text":"Calling \"execute\". Constructing a path or URI using the tainted value in \"fullName\". This may allow an attacker to access, modify, or test the existence of critical or sensitive files."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/path-traversal/src/main/java/org/owasp/webgoat/path_traversal/ProfileUpload.java"},"region":{"startLine":32}},"message":{"text":"Path manipulation vulnerabilities can be addressed by proper input validation. Disallowing directory traversal characters (using a deny list) can improve the safety of the input, but the recommended approach is to restrict to a specific set of allowed characters (using an allow list). This should exclude absolute paths and upward directory traversal."}}}]}]}]},{"message":{"text":"[See in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/issues/6467046AE1ED3C5470B2958C374F75C4?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026filter=issueType%3Alocalized-name%3DWeak%20Encoding%20for%20Password%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dwebwolf%2Fsrc%2Fmain%2Fjava%2Forg%2Fowasp%2Fwebwolf%2FWebSecurityConfig.java)\n\nSpring Security framework uses weak hashing algorithm in the PasswordEncoder interface. Weak hashing algorithm does not adequately protect the password. In case of a data leak from a password storage, attackers will easily be able to obtain the original password values."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"webwolf/src/main/java/org/owasp/webwolf/WebSecurityConfig.java"},"region":{"startLine":87}}}],"ruleId":"sigma.weak_password_hash:spring_security_code|java","partialFingerprints":{"ruleIdLocationHash/v1":"b5667c9e830f9591187a96522e490a5ce53db58b23b192b9974e9cf988300922"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"webwolf/src/main/java/org/owasp/webwolf/WebSecurityConfig.java"},"region":{"startLine":87}},"message":{"text":"Spring Security framework uses weak hashing algorithm in the PasswordEncoder interface. Weak hashing algorithm does not adequately protect the password. In case of a data leak from a password storage, attackers will easily be able to obtain the original password values."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webwolf/src/main/java/org/owasp/webwolf/WebSecurityConfig.java"},"region":{"startLine":87}},"message":{"text":"Audit the use of password encoder with the weak password hashing algorithm. Instead, use a stronger password encoder in production such as `org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder`."}}}]}]}]},{"message":{"text":"[See in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/issues/B383ACED62DE3F5B3E12243EF54E8919?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026filter=issueType%3Alocalized-name%3DCleartext%20Storage%20of%20Sensitive%20Information%20in%20GUI%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dwebgoat-lessons%2Fjwt%2Fsrc%2Fmain%2Fjava%2Forg%2Fowasp%2Fwebgoat%2Fjwt%2FJWTRefreshEndpoint.java)\n\nDisplaying sensitive data in the user interface."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/jwt/src/main/java/org/owasp/webgoat/jwt/JWTRefreshEndpoint.java"},"region":{"startLine":128}}}],"ruleId":"sensitive_data_leak:cleartext_in_gui|java","partialFingerprints":{"ruleIdLocationHash/v1":"3d212b00a88ddc849fcf97453fb52387338840a74ea24d9848ec981c11de098c"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/jwt/src/main/java/org/owasp/webgoat/jwt/JWTRefreshEndpoint.java"},"region":{"startLine":107}},"message":{"text":"\"newToken\" is an entry point function."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/jwt/src/main/java/org/owasp/webgoat/jwt/JWTRefreshEndpoint.java"},"region":{"startLine":128}},"message":{"text":"Calling \"createNewTokens\". This call stores sensitive data in \"\u003creturn value\u003e.access_token\"."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/jwt/src/main/java/org/owasp/webgoat/jwt/JWTRefreshEndpoint.java"},"region":{"startLine":128}},"message":{"text":"Calling \"ok\". This shows the sensitive data \"createNewTokens(user)\" in a user interface. It may be exposed to unintended individuals."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/jwt/src/main/java/org/owasp/webgoat/jwt/JWTRefreshEndpoint.java"},"region":{"startLine":128}},"message":{"text":"Do not leak this data to a user interface."}}}]}]}]},{"message":{"text":"[See in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/issues/DBBBC76B374318A79087BBF9730817DE?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026filter=issueType%3Alocalized-name%3DInclusion%20of%20Functionality%20from%20Untrusted%20Control%20Sphere%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dgoat-with-reverseproxy.yaml)\n\nThe Docker Compose file does not explicitly set `image` attribute with a specific stable version. Pinning the version of the base image will make the container being built more predictable. Relying on the latest version may silently inherit newer packages, which in the best case may affect application reliability and in the worst case may introduce vulnerabilities."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"goat-with-reverseproxy.yaml"},"region":{"startLine":37}}}],"ruleId":"sigma.unspecified_software_version:docker_compose|text","partialFingerprints":{"ruleIdLocationHash/v1":"f6251ed159f2571279e150e6c1b4076b54d2857ae334f192204fc8a5837e8c2a"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"goat-with-reverseproxy.yaml"},"region":{"startLine":37}},"message":{"text":"The Docker Compose file does not explicitly set `image` attribute with a specific stable version. Pinning the version of the base image will make the container being built more predictable. Relying on the latest version may silently inherit newer packages, which in the best case may affect application reliability and in the worst case may introduce vulnerabilities."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"goat-with-reverseproxy.yaml"},"region":{"startLine":37}},"message":{"text":"Explicitly set the `image` attribute to a specific stable version."}}}]}]}]},{"message":{"text":"[See in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/issues/64E76DD212D3060CB14DB6228310BBB1?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026filter=issueType%3Alocalized-name%3DImproper%20Access%20Control%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Ddocker-compose-postgres.yml)\n\nThe Docker container is not configured to drop all default capabilities and then add only required one. Thus the container may be granted excessive privileges which violate the least privilege principle."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"docker-compose-postgres.yml"},"region":{"startLine":20}}}],"ruleId":"sigma.least_privilege_violation:docker_compose|text","partialFingerprints":{"ruleIdLocationHash/v1":"ff5e280a0c0fbdab21edb14280a5c071874b0824b45cc9f07cd807ceebffc130"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"docker-compose-postgres.yml"},"region":{"startLine":20}},"message":{"text":"The Docker container is not configured to drop all default capabilities and then add only required one. Thus the container may be granted excessive privileges which violate the least privilege principle."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"docker-compose-postgres.yml"},"region":{"startLine":20}},"message":{"text":"Remove all the default capabilities from the list of capabilities by setting the `cap_drop` value to `ALL` and then add only specific capabilities needed by a container."}}}]}]}]},{"message":{"text":"[See in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/issues/88B095DBCDDF1C2AA401140993ADF7A1?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026filter=issueType%3Alocalized-name%3DUse%20of%20Hard-coded%20Credentials%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dwebgoat-lessons%2Fwebgoat-lesson-template%2Fsrc%2Fmain%2Fjava%2Forg%2Fowasp%2Fwebgoat%2Ftemplate%2FSampleAttack.java)\n\nA secret, such as a password, cryptographic key, or token is stored in plaintext directly in the source code, in an application's properties, or configuration file. Users with access to the secret may then use the secret to access resources that they otherwise would not have access to."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/webgoat-lesson-template/src/main/java/org/owasp/webgoat/template/SampleAttack.java"},"region":{"startLine":43}}}],"ruleId":"sigma.hardcoded_secret:pattern|java","partialFingerprints":{"ruleIdLocationHash/v1":"ecec06d7a73a49e3b14492d72423a2ebb9519dee271dbcba9fbbc253a45d7ca7"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/webgoat-lesson-template/src/main/java/org/owasp/webgoat/template/SampleAttack.java"},"region":{"startLine":43}},"message":{"text":"A secret, such as a password, cryptographic key, or token is stored in plaintext directly in the source code, in an application's properties, or configuration file. Users with access to the secret may then use the secret to access resources that they otherwise would not have access to. Secret type: Secret (generic)."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/webgoat-lesson-template/src/main/java/org/owasp/webgoat/template/SampleAttack.java"},"region":{"startLine":43}},"message":{"text":"Avoid setting sensitive configuration values as string literals. Instead, these values should be set using variables with the sensitive data loaded from an encrypted file or a secret store."}}}]}]}]},{"message":{"text":"[See in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/issues/C53C6CB6A7B2224BC22E932540CBA161?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026filter=issueType%3Alocalized-name%3DGeneration%20of%20Error%20Message%20Containing%20Sensitive%20Information%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dwebgoat-container%2Fsrc%2Fmain%2Fresources%2Fapplication-webgoat.properties)\n\nThe Spring Boot main application server is configured to allow stack traces to be displayed in an error page. The stack traces might contain sensitive information and should not be displayed."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"webgoat-container/src/main/resources/application-webgoat.properties"},"region":{"startLine":1}}}],"ruleId":"sigma.verbose_error_message:spring_boot_stacktrace_properties|text","partialFingerprints":{"ruleIdLocationHash/v1":"a7fee73e35ebf86b63ab8ac7231ba23bc3a1ba214df3083a3c3fcded8ed271cb"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-container/src/main/resources/application-webgoat.properties"},"region":{"startLine":1}},"message":{"text":"The Spring Boot main application server is configured to allow stack traces to be displayed in an error page. The stack traces might contain sensitive information and should not be displayed."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-container/src/main/resources/application-webgoat.properties"},"region":{"startLine":1}},"message":{"text":"Set `server.error.include-stacktrace` to `never` or omit it as the default value is `never`."}}}]}]}]},{"message":{"text":"[See in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/issues/5600009E3B7FF5861F2B39424D79946C?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026filter=issueType%3Alocalized-name%3DImproper%20Resource%20Shutdown%20or%20Release%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dwebgoat-lessons%2Fsql-injection%2Fsrc%2Fmain%2Fjava%2Forg%2Fowasp%2Fwebgoat%2Fsql_injection%2Fintroduction%2FSqlInjectionLesson8.java)\n\nLeak of a system resource"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson8.java"},"region":{"startLine":85}}}],"ruleId":"resource_leak|java","partialFingerprints":{"ruleIdLocationHash/v1":"01fe4782109305cfc9f76ff389adfc6f27adc494c77ef3da209e8bc3991ca742"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson8.java"},"region":{"startLine":63}},"message":{"text":"A new resource is returned from allocation method \"createStatement\"."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson8.java"},"region":{"startLine":63}},"message":{"text":"Assigning: \"statement\" = resource returned from \"connection.createStatement(1004, 1008)\"."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson8.java"},"region":{"startLine":65}},"message":{"text":"Resource \"statement\" is not closed or saved in \"executeQuery\"."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson8.java"},"region":{"startLine":67}},"message":{"text":"Condition \"results.getStatement() != null\", taking false branch."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson8.java"},"region":{"startLine":85}},"message":{"text":"Variable \"statement\" going out of scope leaks the resource it refers to."}}}]}]}]},{"message":{"text":"[See in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/issues/900CD34D6A72346F380E0D6FAF5200CA?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026filter=issueType%3Alocalized-name%3DInclusion%20of%20Functionality%20from%20Untrusted%20Control%20Sphere%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Ddocker-compose-postgres.yml)\n\nThe Docker Compose file does not explicitly set `image` attribute with a specific stable version. Pinning the version of the base image will make the container being built more predictable. Relying on the latest version may silently inherit newer packages, which in the best case may affect application reliability and in the worst case may introduce vulnerabilities."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"docker-compose-postgres.yml"},"region":{"startLine":20}}}],"ruleId":"sigma.unspecified_software_version:docker_compose|text","partialFingerprints":{"ruleIdLocationHash/v1":"f09df6952303fc80f1d071c2e975999e5a8e0b97263d42b342cd2539573d766b"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"docker-compose-postgres.yml"},"region":{"startLine":20}},"message":{"text":"The Docker Compose file does not explicitly set `image` attribute with a specific stable version. Pinning the version of the base image will make the container being built more predictable. Relying on the latest version may silently inherit newer packages, which in the best case may affect application reliability and in the worst case may introduce vulnerabilities."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"docker-compose-postgres.yml"},"region":{"startLine":20}},"message":{"text":"Explicitly set the `image` attribute to a specific stable version."}}}]}]}]},{"message":{"text":"[See in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/issues/B734C1FE45F7DA04CEE679E88DF6F58C?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026filter=issueType%3Alocalized-name%3DSQL%20Injection%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dwebgoat-lessons%2Fsql-injection%2Fsrc%2Fmain%2Fjava%2Forg%2Fowasp%2Fwebgoat%2Fsql_injection%2Fintroduction%2FSqlInjectionLesson8.java)\n\nUntrusted user-supplied data is inserted into a SQL statement without adequate validation, escaping, or filtering."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson8.java"},"region":{"startLine":54}}}],"ruleId":"sql_injection:sink|java","partialFingerprints":{"ruleIdLocationHash/v1":"d3f92c9816e1f05d76f1160c7167dacb03800cda7e614bf7a8208a8a2a384e00"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson8.java"},"region":{"startLine":53}},"message":{"text":"\"completed\" is an entry point function."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson8.java"},"region":{"startLine":53}},"message":{"text":"The \"auth_tan\" is tainted."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson8.java"},"region":{"startLine":54}},"message":{"text":"Calling \"injectableQueryConfidentiality\". Passing the tainted value \"auth_tan\" to the SQL API may allow an attacker to inject SQL. (The virtual call resolves to \"org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson8.injectableQueryConfidentiality(java.lang.String, java.lang.String)\".)"}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson8.java"},"region":{"startLine":54}},"message":{"text":"Use one of the following methods:\n* Use a query-preparation API to safely construct the SQL query containing user-supplied values.\n* Only concatenate a user-supplied value into a query if it has been checked against a whitelist of safe string values, or if it must be a Boolean or numeric type.\n"}}}]}]}]},{"message":{"text":"[See in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/issues/5210CCD7A505D757C7C71A7B219392FE?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026filter=issueType%3Alocalized-name%3DImproper%20Resource%20Shutdown%20or%20Release%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dwebgoat-lessons%2Fpath-traversal%2Fsrc%2Fmain%2Fjava%2Forg%2Fowasp%2Fwebgoat%2Fpath_traversal%2FProfileUploadRetrieval.java)\n\nLeak of a system resource"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/path-traversal/src/main/java/org/owasp/webgoat/path_traversal/ProfileUploadRetrieval.java"},"region":{"startLine":51}}}],"ruleId":"resource_leak|java","partialFingerprints":{"ruleIdLocationHash/v1":"ee89267799f7c6889aa575766063651a555a54c453fc109fb1a95ba30ec1c075"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/path-traversal/src/main/java/org/owasp/webgoat/path_traversal/ProfileUploadRetrieval.java"},"region":{"startLine":49}},"message":{"text":"Condition \"i \u003c= 10\", taking true branch."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/path-traversal/src/main/java/org/owasp/webgoat/path_traversal/ProfileUploadRetrieval.java"},"region":{"startLine":51}},"message":{"text":"\"new java.io.FileOutputStream(new java.io.File(catPicturesDirectory, i + \".jpg\"))\" creates a new resource."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/path-traversal/src/main/java/org/owasp/webgoat/path_traversal/ProfileUploadRetrieval.java"},"region":{"startLine":51}},"message":{"text":"Resource \"new java.io.FileOutputStream(new java.io.File(catPicturesDirectory, i + \".jpg\"))\" is not closed or saved in \"copy\"."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/path-traversal/src/main/java/org/owasp/webgoat/path_traversal/ProfileUploadRetrieval.java"},"region":{"startLine":51}},"message":{"text":"Failing to save or close resource created by \"new java.io.FileOutputStream(new java.io.File(catPicturesDirectory, i + \".jpg\"))\" leaks it."}}}]}]}]},{"message":{"text":"[See in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/issues/47717022A6C598918A731F4E610CDFE4?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026filter=issueType%3Alocalized-name%3DSIC:%20Inner%20class%20could%20be%20made%20static%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dwebgoat-integration-tests%2Fsrc%2Ftest%2Fjava%2Forg%2Fowasp%2Fwebgoat%2FAccessControlTest.java)\n\nThis class is an inner class, but does not use its embedded reference to the object which created it. (\u003ca href=\"/doc/en/spotbugs/sb_checker_ref.html#FB.SIC_INNER_SHOULD_BE_STATIC\" target=\"_blank\"\u003eFrom SpotBugs description\u003c/a\u003e)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"webgoat-integration-tests/src/test/java/org/owasp/webgoat/AccessControlTest.java"},"region":{"startLine":48}}}],"ruleId":"FB.SIC_INNER_SHOULD_BE_STATIC|java","partialFingerprints":{"ruleIdLocationHash/v1":"68cac4d5253f5502a601646c05b92ca8c077dc4b64316518b9c926fd173a63af"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-integration-tests/src/test/java/org/owasp/webgoat/AccessControlTest.java"},"region":{"startLine":48}},"message":{"text":"Should org.owasp.webgoat.AccessControlTest$Item be a _static_ inner class?"}}}]}]}]},{"message":{"text":"[See in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/issues/31607E744D7DCA3883635E6B0192F470?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026filter=issueType%3Alocalized-name%3DInsufficient%20Session%20Expiration%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dwebgoat-lessons%2Fjwt%2Fsrc%2Fmain%2Fjava%2Forg%2Fowasp%2Fwebgoat%2Fjwt%2FJWTVotesEndpoint.java)\n\nThe instance of `JwtBuilder` doesn't set the expiration time when generating the token. Ignoring the expiration time for a JSON web token means it is valid forever. Since the token never expires, an attacker has a longer window to brute-force or exploit the stolen the token."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/jwt/src/main/java/org/owasp/webgoat/jwt/JWTVotesEndpoint.java"},"region":{"startLine":94}}}],"ruleId":"sigma.jwt_non_expiring_token:io_jsonwebtoken|java","partialFingerprints":{"ruleIdLocationHash/v1":"a10040ec75df79f6c57aefe5222feb3a8a654741210560553fe4c945de08e7d8"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/jwt/src/main/java/org/owasp/webgoat/jwt/JWTVotesEndpoint.java"},"region":{"startLine":94}},"message":{"text":"The instance of `JwtBuilder` doesn't set the expiration time when generating the token. Ignoring the expiration time for a JSON web token means it is valid forever. Since the token never expires, an attacker has a longer window to brute-force or exploit the stolen the token."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/jwt/src/main/java/org/owasp/webgoat/jwt/JWTVotesEndpoint.java"},"region":{"startLine":94}},"message":{"text":"Set the expiration time of the token by invoking `JwtBuilder.setExpiration()` or `Claims.setExpiration()`."}}}]}]}]},{"message":{"text":"[See in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/issues/9F43181F0616C0AC80C22BCB79003BEF?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026filter=issueType%3Alocalized-name%3DUnsafe%20Dependence%20On%20Database%20Key%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dwebgoat-container%2Fsrc%2Fmain%2Fjava%2Forg%2Fowasp%2Fwebgoat%2Flessons%2FAssignment.java)\n\nThe result of hashCode() depends on an entity's primary database key"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"webgoat-container/src/main/java/org/owasp/webgoat/lessons/Assignment.java"},"region":{"startLine":39}}}],"ruleId":"hibernate_hashcode_depends_on_primary_key|java","partialFingerprints":{"ruleIdLocationHash/v1":"2db73153fbd367f3a6c116021497c9759123e64b0fbc22f00d8e94b459316f6a"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-container/src/test/java/org/owasp/webgoat/session/LessonTrackerTest.java"},"region":{"startLine":60}},"message":{"text":"Constructing new transient instance \"a1\" of entity type \"org.owasp.webgoat.lessons.Assignment\"."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-container/src/test/java/org/owasp/webgoat/session/LessonTrackerTest.java"},"region":{"startLine":68}},"message":{"text":"Accessing a collection that calls \"equals\" and \"hashCode\" on \"a1\" before its Hibernate identifier has been set."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-container/src/main/java/org/owasp/webgoat/lessons/Assignment.java"},"region":{"startLine":39}},"message":{"text":"Result depends on \"org.owasp.webgoat.lessons.Assignment.getId()\", which is a Hibernate identifier."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-container/src/main/java/org/owasp/webgoat/lessons/Assignment.java"},"region":{"startLine":45}},"message":{"text":"Member \"id\" is annotated with \"@javax.persistence.Id\"."}}}]}]}]},{"message":{"text":"[See in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/issues/3D42B425ACE6D0D842ED2A3BD2F37226?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026filter=issueType%3Alocalized-name%3DInclusion%20of%20Functionality%20from%20Untrusted%20Control%20Sphere%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Ddocker-compose-postgres.yml)\n\nThe Docker Compose file does not explicitly set `image` attribute with a specific stable version. Pinning the version of the base image will make the container being built more predictable. Relying on the latest version may silently inherit newer packages, which in the best case may affect application reliability and in the worst case may introduce vulnerabilities."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"docker-compose-postgres.yml"},"region":{"startLine":5}}}],"ruleId":"sigma.unspecified_software_version:docker_compose|text","partialFingerprints":{"ruleIdLocationHash/v1":"f2c8ef04336bfe54d28d1db6c2e29a574593a1913941c08fd2fdaa098d146f80"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"docker-compose-postgres.yml"},"region":{"startLine":5}},"message":{"text":"The Docker Compose file does not explicitly set `image` attribute with a specific stable version. Pinning the version of the base image will make the container being built more predictable. Relying on the latest version may silently inherit newer packages, which in the best case may affect application reliability and in the worst case may introduce vulnerabilities."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"docker-compose-postgres.yml"},"region":{"startLine":5}},"message":{"text":"Explicitly set the `image` attribute to a specific stable version."}}}]}]}]},{"message":{"text":"[See in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/issues/62F2BB93FB588F8B7818964F4697EF0C?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026filter=issueType%3Alocalized-name%3DInsecure%20Link%20Target%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Ddocker%2Findex.html)\n\nThe application uses an anchor tag whose `target` attribute is set to `_blank`, but the `rel` attribute is not set with the `noopener` value. The page opened from that target link may have the access to the `location` object of the original page through `window.opener.location`. A malicious page associated with this link will be able to navigate the original page to an arbitrary site, such as a phishing site, and thus, execute a reverse tabnabbing attack.\nNote that most contemporary browsers add the `noopener` value to the `rel` automatically by default. Thus, only users with older versions of browsers are targets for this phishing attack."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"docker/index.html"},"region":{"startLine":19}}}],"ruleId":"sigma.reverse_tabnabbing:html|html","partialFingerprints":{"ruleIdLocationHash/v1":"095591655fd326e17116e7b71e7cb5533de2180ed4e55b5afe2b822359c29e0b"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"docker/index.html"},"region":{"startLine":19}},"message":{"text":"The application uses an anchor tag whose `target` attribute is set to `_blank`, but the `rel` attribute is not set with the `noopener` value. The page opened from that target link may have the access to the `location` object of the original page through `window.opener.location`. A malicious page associated with this link will be able to navigate the original page to an arbitrary site, such as a phishing site, and thus, execute a reverse tabnabbing attack.\nNote that most contemporary browsers add the `noopener` value to the `rel` automatically by default. Thus, only users with older versions of browsers are targets for this phishing attack."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"docker/index.html"},"region":{"startLine":19}},"message":{"text":"Set the `rel` attribute to include the `noopener` value, thus disallowing the linked page to access the original page through the `window.opener` object."}}}]}]}]},{"message":{"text":"[See in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/issues/BF82023CEA96910E1D35BA2A3FA558A7?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026filter=issueType%3Alocalized-name%3DSIC:%20Inner%20class%20could%20be%20made%20static%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dwebgoat-container%2Fsrc%2Fmain%2Fjava%2Forg%2Fowasp%2Fwebgoat%2Fservice%2FReportCardService.java)\n\nThis class is an inner class, but does not use its embedded reference to the object which created it. (\u003ca href=\"/doc/en/spotbugs/sb_checker_ref.html#FB.SIC_INNER_SHOULD_BE_STATIC\" target=\"_blank\"\u003eFrom SpotBugs description\u003c/a\u003e)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"webgoat-container/src/main/java/org/owasp/webgoat/service/ReportCardService.java"},"region":{"startLine":102}}}],"ruleId":"FB.SIC_INNER_SHOULD_BE_STATIC|java","partialFingerprints":{"ruleIdLocationHash/v1":"1c6e6c318371b9745f62f4b814e9e8ac55990b6c633c8f31478db712f611cbaf"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-container/src/main/java/org/owasp/webgoat/service/ReportCardService.java"},"region":{"startLine":102}},"message":{"text":"Should org.owasp.webgoat.service.ReportCardService$LessonStatistics be a _static_ inner class?"}}}]}]}]},{"message":{"text":"[See in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/issues/1E372A706B3E57DF134CA9BB4D7335EF?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026filter=issueType%3Alocalized-name%3DImproper%20Privilege%20Management%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Ddocker-compose.yml)\n\nThe Docker Compose file sets the `no-new-privileges` attribute to `false` or omits it as the default value is `false`. This doesn't restrict the container from acquiring additional privileges via SUID or SGID bits. This allows privilege escalation, meaning a user can set the security context of the container and can perform root-level operations."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"docker-compose.yml"},"region":{"startLine":17}}}],"ruleId":"sigma.container_privilege_escalation_allowed:docker_compose|text","partialFingerprints":{"ruleIdLocationHash/v1":"503b8206efb3de4bc5e1ba49ea9258b910466972a77c0ada2b1f7328266e6437"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"docker-compose.yml"},"region":{"startLine":17}},"message":{"text":"The Docker Compose file sets the `no-new-privileges` attribute to `false` or omits it as the default value is `false`. This doesn't restrict the container from acquiring additional privileges via SUID or SGID bits. This allows privilege escalation, meaning a user can set the security context of the container and can perform root-level operations."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"docker-compose.yml"},"region":{"startLine":17}},"message":{"text":"Disable container privilege escalation by explicitly setting `no-new-privileges` to `true`."}}}]}]}]},{"message":{"text":"[See in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/issues/A781FB7DFF5392DDDEEFE7A46980F34F?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026filter=issueType%3Alocalized-name%3DDirectory%20Traversal%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dwebgoat-lessons%2Fpath-traversal%2Fsrc%2Fmain%2Fjava%2Forg%2Fowasp%2Fwebgoat%2Fpath_traversal%2FProfileUploadRemoveUserInput.java)\n\nA user-controllable string is used as part or all of a filesystem path, filename, or URI (uniform resource identifier)."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/path-traversal/src/main/java/org/owasp/webgoat/path_traversal/ProfileUploadRemoveUserInput.java"},"region":{"startLine":27}}}],"ruleId":"path_manipulation|java","partialFingerprints":{"ruleIdLocationHash/v1":"e451c4e4b0b4a778eb146c60a7cad86e0228fa0b0b5b4e7b6993fa07af373046"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/path-traversal/src/main/java/org/owasp/webgoat/path_traversal/ProfileUploadRemoveUserInput.java"},"region":{"startLine":26}},"message":{"text":"\"uploadFileHandler\" is an entry point function."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/path-traversal/src/main/java/org/owasp/webgoat/path_traversal/ProfileUploadRemoveUserInput.java"},"region":{"startLine":27}},"message":{"text":"Calling \"getOriginalFilename\". Reading data from an HTTP request, which is considered tainted (The virtual call resolves to \"org.springframework.mock.web.MockMultipartFile.getOriginalFilename()\".)"}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/path-traversal/src/main/java/org/owasp/webgoat/path_traversal/ProfileUploadRemoveUserInput.java"},"region":{"startLine":27}},"message":{"text":"Calling \"execute\". Constructing a path or URI using the tainted value in \"file.getOriginalFilename()\". This may allow an attacker to access, modify, or test the existence of critical or sensitive files."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/path-traversal/src/main/java/org/owasp/webgoat/path_traversal/ProfileUploadRemoveUserInput.java"},"region":{"startLine":27}},"message":{"text":"Path manipulation vulnerabilities can be addressed by proper input validation. Disallowing directory traversal characters (using a deny list) can improve the safety of the input, but the recommended approach is to restrict to a specific set of allowed characters (using an allow list). This should exclude absolute paths and upward directory traversal."}}}]}]}]},{"message":{"text":"[See in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/issues/C3695C7AB857FA6274C111E660D38066?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026filter=issueType%3Alocalized-name%3DDm:%20Dubious%20method%20used%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dwebgoat-lessons%2Fssrf%2Fsrc%2Fmain%2Fjava%2Forg%2Fowasp%2Fwebgoat%2Fssrf%2FSSRFTask2.java)\n\nFound a call to a method which will perform a byte to String (or String to byte) conversion, and will assume that the default platform encoding is suitable. (\u003ca href=\"/doc/en/spotbugs/sb_checker_ref.html#FB.DM_DEFAULT_ENCODING\" target=\"_blank\"\u003eFrom SpotBugs description\u003c/a\u003e)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/ssrf/src/main/java/org/owasp/webgoat/ssrf/SSRFTask2.java"},"region":{"startLine":56}}}],"ruleId":"FB.DM_DEFAULT_ENCODING|java","partialFingerprints":{"ruleIdLocationHash/v1":"3a6cb2f846855a784e6c8351794b009d59ce36d918efcd0c9b62899b3d747660"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/ssrf/src/main/java/org/owasp/webgoat/ssrf/SSRFTask2.java"},"region":{"startLine":56}},"message":{"text":"Found reliance on default encoding: new java.io.InputStreamReader(InputStream)."}}}]}]}]},{"message":{"text":"[See in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/issues/46A8ECC19A230D7DD2CA7FC731CC8851?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026filter=issueType%3Alocalized-name%3DCleartext%20Transmission%20of%20Sensitive%20Information%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dwebgoat-container%2Fsrc%2Fmain%2Fresources%2Fapplication-webgoat.properties)\n\nThe Spring Boot application's data source is configured to disable SSL by setting the `spring.datasource.url` attribute to a value without `useSSL=true`. Thus, sensitive data transmitted over an insecure communication channel could be read and modified by attackers."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"webgoat-container/src/main/resources/application-webgoat.properties"},"region":{"startLine":16}}}],"ruleId":"sigma.missing_tls:spring_boot_datasource_properties|text","partialFingerprints":{"ruleIdLocationHash/v1":"8b79460eda1c4bf3f1327e8df7d3b186aa9767c0a30b96e0b08770c2cef4f878"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-container/src/main/resources/application-webgoat.properties"},"region":{"startLine":16}},"message":{"text":"The Spring Boot application's data source is configured to disable SSL by setting the `spring.datasource.url` attribute to a value without `useSSL=true`. Thus, sensitive data transmitted over an insecure communication channel could be read and modified by attackers."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-container/src/main/resources/application-webgoat.properties"},"region":{"startLine":16}},"message":{"text":"Explicitly enable SSL by setting the `spring.datasource.url` attribute to a value that contains `useSSL=true`."}}}]}]}]},{"message":{"text":"[See in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/issues/24D6F118D79F6C43A34E51BFF7ED15C8?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026filter=issueType%3Alocalized-name%3DSQL%20Injection%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dwebgoat-lessons%2Fsql-injection%2Fsrc%2Fmain%2Fjava%2Forg%2Fowasp%2Fwebgoat%2Fsql_injection%2Fadvanced%2FSqlInjectionLesson6a.java)\n\nUntrusted user-supplied data is inserted into a SQL statement without adequate validation, escaping, or filtering."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/advanced/SqlInjectionLesson6a.java"},"region":{"startLine":52}}}],"ruleId":"sql_injection:sink|java","partialFingerprints":{"ruleIdLocationHash/v1":"28d5a24e00afc25dd86458c5f68bafa22aec67487f4157edf239e049e4237c3f"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/advanced/SqlInjectionLesson6a.java"},"region":{"startLine":51}},"message":{"text":"\"completed\" is an entry point function."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/advanced/SqlInjectionLesson6a.java"},"region":{"startLine":51}},"message":{"text":"The \"userid_6a\" is tainted."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/advanced/SqlInjectionLesson6a.java"},"region":{"startLine":52}},"message":{"text":"Calling \"injectableQuery\". Passing the tainted value \"userid_6a\" to the SQL API may allow an attacker to inject SQL. (The virtual call resolves to \"org.owasp.webgoat.sql_injection.advanced.SqlInjectionLesson6a.injectableQuery(java.lang.String)\".)"}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/advanced/SqlInjectionLesson6a.java"},"region":{"startLine":52}},"message":{"text":"Use one of the following methods:\n* Use a query-preparation API to safely construct the SQL query containing user-supplied values.\n* Only concatenate a user-supplied value into a query if it has been checked against a whitelist of safe string values, or if it must be a Boolean or numeric type.\n"}}}]}]}]},{"message":{"text":"[See in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/issues/DB5C310D8930A5942DC127E29FBBCF94?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026filter=issueType%3Alocalized-name%3DExpected%20Behavior%20Violation%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dwebgoat-lessons%2Fcsrf%2Fsrc%2Fmain%2Fjava%2Forg%2Fowasp%2Fwebgoat%2Fcsrf%2FCSRFGetFlag.java)\n\nThis code creates a java.util.Random object, uses it to generate one random number, and then discards the Random object. (\u003ca href=\"/doc/en/spotbugs/sb_checker_ref.html#FB.DMI_RANDOM_USED_ONLY_ONCE\" target=\"_blank\"\u003eFrom SpotBugs description\u003c/a\u003e)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/csrf/src/main/java/org/owasp/webgoat/csrf/CSRFGetFlag.java"},"region":{"startLine":63}}}],"ruleId":"FB.DMI_RANDOM_USED_ONLY_ONCE|java","partialFingerprints":{"ruleIdLocationHash/v1":"0da47f2adbe3f7e6d3790334912b6b6b5672368189c34ab44780cb86ba95a262"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/csrf/src/main/java/org/owasp/webgoat/csrf/CSRFGetFlag.java"},"region":{"startLine":63}},"message":{"text":"Random object created and used only once."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/csrf/src/main/java/org/owasp/webgoat/csrf/CSRFGetFlag.java"},"region":{"startLine":69}},"message":{"text":"Another occurrence here"}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/csrf/src/main/java/org/owasp/webgoat/csrf/CSRFGetFlag.java"},"region":{"startLine":80}},"message":{"text":"Another occurrence here"}}}]}]}]},{"message":{"text":"[See in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/issues/B9A11A697BB6398EC1F1BD9C6B6CCBEB?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026filter=issueType%3Alocalized-name%3DSIC:%20Inner%20class%20could%20be%20made%20static%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dwebwolf%2Fsrc%2Fmain%2Fjava%2Forg%2Fowasp%2Fwebwolf%2Frequests%2FRequests.java)\n\nThis class is an inner class, but does not use its embedded reference to the object which created it. (\u003ca href=\"/doc/en/spotbugs/sb_checker_ref.html#FB.SIC_INNER_SHOULD_BE_STATIC\" target=\"_blank\"\u003eFrom SpotBugs description\u003c/a\u003e)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"webwolf/src/main/java/org/owasp/webwolf/requests/Requests.java"},"region":{"startLine":64}}}],"ruleId":"FB.SIC_INNER_SHOULD_BE_STATIC|java","partialFingerprints":{"ruleIdLocationHash/v1":"b2cce2a05b0a5a77107322d5424a99f1e7254a14b823f586e551c333ccf9aa88"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"webwolf/src/main/java/org/owasp/webwolf/requests/Requests.java"},"region":{"startLine":64}},"message":{"text":"Should org.owasp.webwolf.requests.Requests$Tracert be a _static_ inner class?"}}}]}]}]},{"message":{"text":"[See in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/issues/ABABA4E2B4F4BF679911C4A8283E5A94?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026filter=issueType%3Alocalized-name%3DUnreachable%252C%20Unused%20or%20Dead%20Code%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dwebgoat-container%2Ftarget%2Fclasses%2Fstatic%2Fjs%2Flibs%2Face.js)\n\nAn expression is useless because it has no side effects and its result is ignored."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"webgoat-container/target/classes/static/js/libs/ace.js"},"region":{"startLine":4315}}}],"ruleId":"no_effect|javascript","partialFingerprints":{"ruleIdLocationHash/v1":"f15ae500d37f16207042e990cd5ef75eeec57269aa149664720af65aa859ed77"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-container/target/classes/static/js/libs/ace.js"},"region":{"startLine":4315}},"message":{"text":"Discarding the programmer-written value \"\"no use strict\"\". What was this code intended to accomplish?"}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-container/target/classes/static/js/libs/ace.js"},"region":{"startLine":4315}},"message":{"text":"Perhaps this code is incomplete or mistyped in some way."}}}]}]}]},{"message":{"text":"[See in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/issues/D6973DEE3269239A5C093F0CCC4B6DE0?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026filter=issueType%3Alocalized-name%3DPI:%20Do%20not%20reuse%20public%20identifiers%20from%20Java%20Standard%20Library%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dwebgoat-lessons%2Fxxe%2Fsrc%2Fmain%2Fjava%2Forg%2Fowasp%2Fwebgoat%2Fxxe%2FComment.java)\n\nIt's essential to avoid reusing public identifiers from the Java Standard Library as class names. (\u003ca href=\"/doc/en/spotbugs/sb_checker_ref.html#FB.PI_DO_NOT_REUSE_PUBLIC_IDENTIFIERS_CLASS_NAMES\" target=\"_blank\"\u003eFrom SpotBugs description\u003c/a\u003e)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/xxe/src/main/java/org/owasp/webgoat/xxe/Comment.java"},"region":{"startLine":37}}}],"ruleId":"FB.PI_DO_NOT_REUSE_PUBLIC_IDENTIFIERS_CLASS_NAMES|java","partialFingerprints":{"ruleIdLocationHash/v1":"23577758acff75dc5a5eabf8d821d1fc0336ed782e9803afb7d5663ddd458847"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/xxe/src/main/java/org/owasp/webgoat/xxe/Comment.java"},"region":{"startLine":37}},"message":{"text":"Class name ?\u003e?1/1??? in source file ?\u003e?2/1??? shadows the publicly available identifier from the Java Standard Library."}}}]}]}]},{"message":{"text":"[See in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/issues/854964A873D24762B8CBA3DF2FC8527D?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026filter=issueType%3Alocalized-name%3DImproper%20Privilege%20Management%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Ddocker-compose-postgres.yml)\n\nThe Docker container requests the `NET_RAW` capability, either explicitly or by default, granting access to the host's network interfaces."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"docker-compose-postgres.yml"},"region":{"startLine":20}}}],"ruleId":"sigma.container_requesting_net_raw:docker_compose|text","partialFingerprints":{"ruleIdLocationHash/v1":"03bb78f64b06ff5995ec24ba2ddbaec989656513460e13509de091c350981bf4"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"docker-compose-postgres.yml"},"region":{"startLine":20}},"message":{"text":"The Docker container requests the `NET_RAW` capability, either explicitly or by default, granting access to the host's network interfaces."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"docker-compose-postgres.yml"},"region":{"startLine":20}},"message":{"text":"Explicitly remove the `NET_RAW` capability by adding either `NET_RAW` or `ALL` to the `cap_drop` list and avoiding the `NET_RAW` capability in the `cap_add` list."}}}]}]}]},{"message":{"text":"[See in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/issues/05D7EFC9ACCDF8FBEBA414E1563071A3?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026filter=issueType%3Alocalized-name%3DNULL%20Pointer%20Dereference%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dwebgoat-container%2Ftarget%2Fclasses%2Fstatic%2Fjs%2Flibs%2Ftext.js)\n\nUsing the return value of a function that can return null or undefined without checking it for null or undefined."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"webgoat-container/target/classes/static/js/libs/text.js"},"region":{"startLine":270}}}],"ruleId":"null_pointer_dereference_exception:return_value|javascript","partialFingerprints":{"ruleIdLocationHash/v1":"214927947aaf58af9e9dcf36d014c62e4a19c6fc233c918f2ca014c654eafa5d"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-container/target/classes/static/js/libs/text.js"},"region":{"startLine":266}},"message":{"text":"Example 1: \"text.createXhr()\" has its value checked in \"(masterConfig.env === \"xhr\") || (!masterConfig.env \u0026\u0026 text.createXhr())\"."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-container/target/classes/static/js/libs/text.js"},"region":{"startLine":269}},"message":{"text":"\"text.createXhr\" returns \"null\" or \"undefined\" (checked 1 out of 2 times)."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-container/target/classes/static/js/libs/text.js"},"region":{"startLine":269}},"message":{"text":"Assigning \"xhr\" to the \"null\" or \"undefined\" return value from \"text.createXhr\"."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-container/target/classes/static/js/libs/text.js"},"region":{"startLine":270}},"message":{"text":"Accessing a property of null-like value \"xhr\"."}}}]}]}]},{"message":{"text":"[See in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/issues/49E59107509D1BECA1E213A31EAFAA9F?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026filter=issueType%3Alocalized-name%3DFiles%20or%20Directories%20Accessible%20to%20External%20Parties%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Ddocker-compose-postgres.yml)\n\nThe docker service container is configured to permit writing to the root filesystem. This makes some security attack vectors such as privilege escalation, denial-of-service or authorization bypass possible since the container instance's filesystem can be tampered with."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"docker-compose-postgres.yml"},"region":{"startLine":20}}}],"ruleId":"sigma.container_filesystem_write:docker_compose|text","partialFingerprints":{"ruleIdLocationHash/v1":"8c8fd0f86a59241060de3483fa85086bef1243f6cbee1d4546d226945bb34a5f"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"docker-compose-postgres.yml"},"region":{"startLine":20}},"message":{"text":"The docker service container is configured to permit writing to the root filesystem. This makes some security attack vectors such as privilege escalation, denial-of-service or authorization bypass possible since the container instance's filesystem can be tampered with."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"docker-compose-postgres.yml"},"region":{"startLine":20}},"message":{"text":"Explicitly set the `read-only` attribute of the service to `true` to create a service container with a read-only filesystem."}}}]}]}]},{"message":{"text":"[See in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/issues/4E85BCE790CDB82D0A77E30BA74854E3?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026filter=issueType%3Alocalized-name%3DDm:%20Dubious%20method%20used%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dwebgoat-lessons%2Fxxe%2Fsrc%2Fmain%2Fjava%2Forg%2Fowasp%2Fwebgoat%2Fxxe%2FPing.java)\n\nFound a call to a method which will perform a byte to String (or String to byte) conversion, and will assume that the default platform encoding is suitable. (\u003ca href=\"/doc/en/spotbugs/sb_checker_ref.html#FB.DM_DEFAULT_ENCODING\" target=\"_blank\"\u003eFrom SpotBugs description\u003c/a\u003e)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/xxe/src/main/java/org/owasp/webgoat/xxe/Ping.java"},"region":{"startLine":50}}}],"ruleId":"FB.DM_DEFAULT_ENCODING|java","partialFingerprints":{"ruleIdLocationHash/v1":"8b03ee518c594c5d1f3b6a04d8899e28328b038b351865dd1e2ece1ed57b0d29"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/xxe/src/main/java/org/owasp/webgoat/xxe/Ping.java"},"region":{"startLine":50}},"message":{"text":"Found reliance on default encoding: new java.io.PrintWriter(File)."}}}]}]}]},{"message":{"text":"[See in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/issues/66DE127087CFDCFBED8EB56DEEF17D42?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026filter=issueType%3Alocalized-name%3DInclusion%20of%20Functionality%20from%20Untrusted%20Control%20Sphere%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dgoat-with-reverseproxy.yaml)\n\nThe Docker Compose file does not explicitly set `image` attribute with a specific stable version. Pinning the version of the base image will make the container being built more predictable. Relying on the latest version may silently inherit newer packages, which in the best case may affect application reliability and in the worst case may introduce vulnerabilities."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"goat-with-reverseproxy.yaml"},"region":{"startLine":7}}}],"ruleId":"sigma.unspecified_software_version:docker_compose|text","partialFingerprints":{"ruleIdLocationHash/v1":"ecdefa9744a38c5ead4b83056d01adfa8da5883c8ed30e7a8ea2e81a25799f81"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"goat-with-reverseproxy.yaml"},"region":{"startLine":7}},"message":{"text":"The Docker Compose file does not explicitly set `image` attribute with a specific stable version. Pinning the version of the base image will make the container being built more predictable. Relying on the latest version may silently inherit newer packages, which in the best case may affect application reliability and in the worst case may introduce vulnerabilities."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"goat-with-reverseproxy.yaml"},"region":{"startLine":7}},"message":{"text":"Explicitly set the `image` attribute to a specific stable version."}}}]}]}]},{"message":{"text":"[See in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/issues/C29E51E279F96EC30C587FBE019E6C2A?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026filter=issueType%3Alocalized-name%3DDm:%20Dubious%20method%20used%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dwebgoat-integration-tests%2Fsrc%2Ftest%2Fjava%2Forg%2Fowasp%2Fwebgoat%2FPathTraversalTest.java)\n\nFound a call to a method which will perform a byte to String (or String to byte) conversion, and will assume that the default platform encoding is suitable. (\u003ca href=\"/doc/en/spotbugs/sb_checker_ref.html#FB.DM_DEFAULT_ENCODING\" target=\"_blank\"\u003eFrom SpotBugs description\u003c/a\u003e)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"webgoat-integration-tests/src/test/java/org/owasp/webgoat/PathTraversalTest.java"},"region":{"startLine":37}}}],"ruleId":"FB.DM_DEFAULT_ENCODING|java","partialFingerprints":{"ruleIdLocationHash/v1":"3cb2c848296639d3192681080077b31dcf1b80d0024548f0c92ac4f55b557c55"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-integration-tests/src/test/java/org/owasp/webgoat/PathTraversalTest.java"},"region":{"startLine":37}},"message":{"text":"Found reliance on default encoding: String.getBytes()."}}}]}]}]},{"message":{"text":"[See in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/issues/6F5330B0EF4D9FBDF669B89BF6EF96DF?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026filter=issueType%3Alocalized-name%3DDirectory%20Traversal%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dwebwolf%2Fsrc%2Fmain%2Fjava%2Forg%2Fowasp%2Fwebwolf%2FFileServer.java)\n\nA user-controllable string is used as part or all of a filesystem path, filename, or URI (uniform resource identifier)."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"webwolf/src/main/java/org/owasp/webwolf/FileServer.java"},"region":{"startLine":74}}}],"ruleId":"path_manipulation|java","partialFingerprints":{"ruleIdLocationHash/v1":"21555b10e356e36f39113581431b730e0a732e4b4e787e69fb134e73f0735b78"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"webwolf/src/main/java/org/owasp/webwolf/FileServer.java"},"region":{"startLine":69}},"message":{"text":"\"importFile\" is an entry point function."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webwolf/src/main/java/org/owasp/webwolf/FileServer.java"},"region":{"startLine":74}},"message":{"text":"Calling \"getOriginalFilename\". Reading data from an HTTP request, which is considered tainted (The virtual call resolves to \"org.springframework.mock.web.MockMultipartFile.getOriginalFilename()\".)"}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webwolf/src/main/java/org/owasp/webwolf/FileServer.java"},"region":{"startLine":74}},"message":{"text":"Calling \"File\". Constructing a path or URI using the tainted value in \"myFile.getOriginalFilename()\". This may allow an attacker to access, modify, or test the existence of critical or sensitive files."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webwolf/src/main/java/org/owasp/webwolf/FileServer.java"},"region":{"startLine":74}},"message":{"text":"Path manipulation vulnerabilities can be addressed by proper input validation. Disallowing directory traversal characters (using a deny list) can improve the safety of the input, but the recommended approach is to restrict to a specific set of allowed characters (using an allow list). This should exclude absolute paths and upward directory traversal."}}}]}]}]},{"message":{"text":"[See in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/issues/5BAE6E8FED23153CD0279AB5776F27AE?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026filter=issueType%3Alocalized-name%3DBad%20Use%20Of%20Null-like%20Value%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dwebgoat-lessons%2Fclient-side-filtering%2Fsrc%2Fmain%2Fjava%2Forg%2Fowasp%2Fwebgoat%2Fclient_side_filtering%2FSalaries.java)\n\nDereference of an explicit null value"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/client-side-filtering/src/main/java/org/owasp/webgoat/client_side_filtering/Salaries.java"},"region":{"startLine":96}}}],"ruleId":"null_pointer_dereference_exception:constant_null|java","partialFingerprints":{"ruleIdLocationHash/v1":"c8103a49316a00eb9b8a9110ab8bd1f0e179edd6ceffdfa0db3a1ee223b34010"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/client-side-filtering/src/main/java/org/owasp/webgoat/client_side_filtering/Salaries.java"},"region":{"startLine":71}},"message":{"text":"Assigning: \"nodes\" = \"null\"."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/client-side-filtering/src/main/java/org/owasp/webgoat/client_side_filtering/Salaries.java"},"region":{"startLine":75}},"message":{"text":"Throwing \"java.io.FileNotFoundException\" (or subclass) from call to \"FileInputStream\"."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/client-side-filtering/src/main/java/org/owasp/webgoat/client_side_filtering/Salaries.java"},"region":{"startLine":90}},"message":{"text":"Catching exception."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/client-side-filtering/src/main/java/org/owasp/webgoat/client_side_filtering/Salaries.java"},"region":{"startLine":96}},"message":{"text":"Calling a method on null object \"nodes\"."}}}]}]}]},{"message":{"text":"[See in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/issues/A74B5BA19623617627AB4A26932C9920?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026filter=issueType%3Alocalized-name%3DImproper%20Access%20Control%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dgoat-with-reverseproxy.yaml)\n\nThe Docker container is not configured to drop all default capabilities and then add only required one. Thus the container may be granted excessive privileges which violate the least privilege principle."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"goat-with-reverseproxy.yaml"},"region":{"startLine":23}}}],"ruleId":"sigma.least_privilege_violation:docker_compose|text","partialFingerprints":{"ruleIdLocationHash/v1":"5c74a3debc29896ae46965572762db5c132d4362e5f005f72f6ecec0470b4fc0"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"goat-with-reverseproxy.yaml"},"region":{"startLine":23}},"message":{"text":"The Docker container is not configured to drop all default capabilities and then add only required one. Thus the container may be granted excessive privileges which violate the least privilege principle."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"goat-with-reverseproxy.yaml"},"region":{"startLine":23}},"message":{"text":"Remove all the default capabilities from the list of capabilities by setting the `cap_drop` value to `ALL` and then add only specific capabilities needed by a container."}}}]}]}]},{"message":{"text":"[See in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/issues/B8A477CCAA69765C57010A279D60A383?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026filter=issueType%3Alocalized-name%3DInsecure%20Object%20Deserialization%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dwebgoat-lessons%2Fcsrf%2Fsrc%2Fmain%2Fjava%2Forg%2Fowasp%2Fwebgoat%2Fcsrf%2FCSRFFeedback.java)\n\nA user-controllable string is deserialized."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/csrf/src/main/java/org/owasp/webgoat/csrf/CSRFFeedback.java"},"region":{"startLine":65}}}],"ruleId":"unsafe_deserialization|java","partialFingerprints":{"ruleIdLocationHash/v1":"9e631376f86fbc764f26875cd401fb22438e50687d5c2ce81a869e23bf000648"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/csrf/src/main/java/org/owasp/webgoat/csrf/CSRFFeedback.java"},"region":{"startLine":57}},"message":{"text":"\"completed\" is an entry point function."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/csrf/src/main/java/org/owasp/webgoat/csrf/CSRFFeedback.java"},"region":{"startLine":57}},"message":{"text":"The \"feedback\" is tainted."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/csrf/src/main/java/org/owasp/webgoat/csrf/CSRFFeedback.java"},"region":{"startLine":65}},"message":{"text":"Calling \"getBytes\". This call assigns \"feedback\" to \"\u003creturn value\u003e\". Now \"\u003creturn value\u003e\" is tainted. (The virtual call resolves to \"java.lang.String.getBytes()\".)"}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/csrf/src/main/java/org/owasp/webgoat/csrf/CSRFFeedback.java"},"region":{"startLine":65}},"message":{"text":"Calling \"readValue\u003cjava.util.Map\u003e\". This call uses \"feedback.getBytes()\" for sensitive computation. (The virtual call resolves to \"com.fasterxml.jackson.databind.ObjectMapper.readValue\u003cT\u003e(byte[], java.lang.Class)\".)"}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/csrf/src/main/java/org/owasp/webgoat/csrf/CSRFFeedback.java"},"region":{"startLine":65}},"message":{"text":"If possible, use pure data formats such as JSON or XML to serialize and deserialize untrusted data.  Otherwise, if you must use native serialization methods, check the integrity of the data (for example with HMAC) before deserializing it."}}}]}]}]},{"message":{"text":"[See in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/issues/96EC64453F3725AE5C9CF26747E340C2?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026filter=issueType%3Alocalized-name%3DDm:%20Dubious%20method%20used%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dwebgoat-lessons%2Fpath-traversal%2Fsrc%2Fmain%2Fjava%2Forg%2Fowasp%2Fwebgoat%2Fpath_traversal%2FProfileUploadRetrieval.java)\n\nFound a call to a method which will perform a byte to String (or String to byte) conversion, and will assume that the default platform encoding is suitable. (\u003ca href=\"/doc/en/spotbugs/sb_checker_ref.html#FB.DM_DEFAULT_ENCODING\" target=\"_blank\"\u003eFrom SpotBugs description\u003c/a\u003e)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/path-traversal/src/main/java/org/owasp/webgoat/path_traversal/ProfileUploadRetrieval.java"},"region":{"startLine":58}}}],"ruleId":"FB.DM_DEFAULT_ENCODING|java","partialFingerprints":{"ruleIdLocationHash/v1":"dae725d80e0e37bb53d1146b7a415eab1750e1db31f1bc53f3c3589dc070eb4b"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/path-traversal/src/main/java/org/owasp/webgoat/path_traversal/ProfileUploadRetrieval.java"},"region":{"startLine":58}},"message":{"text":"Found reliance on default encoding: java.nio.file.Files.writeString(Path, CharSequence, OpenOption[])."}}}]}]}]},{"message":{"text":"[See in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/issues/96ADDA3B04BBB9D63B82DD897F528281?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026filter=issueType%3Alocalized-name%3DIncorrect%20Check%20of%20Function%20Return%20Value%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dwebgoat-lessons%2Fxxe%2Fsrc%2Fmain%2Fjava%2Forg%2Fowasp%2Fwebgoat%2Fxxe%2FBlindSendFileAssignment.java)\n\nThis method returns a value that is not checked. (\u003ca href=\"/doc/en/spotbugs/sb_checker_ref.html#FB.RV_RETURN_VALUE_IGNORED_BAD_PRACTICE\" target=\"_blank\"\u003eFrom SpotBugs description\u003c/a\u003e)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/xxe/src/main/java/org/owasp/webgoat/xxe/BlindSendFileAssignment.java"},"region":{"startLine":67}}}],"ruleId":"FB.RV_RETURN_VALUE_IGNORED_BAD_PRACTICE|java","partialFingerprints":{"ruleIdLocationHash/v1":"79b01cb0828c0830fcb561effaeb4c761c29cbe265ac89400867f5e7a747e0be"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/xxe/src/main/java/org/owasp/webgoat/xxe/BlindSendFileAssignment.java"},"region":{"startLine":67}},"message":{"text":"Exceptional return value of java.io.File.mkdir() ignored."}}}]}]}]},{"message":{"text":"[See in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/issues/2BBBE54F6EF32E5915273453FD074E3C?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026filter=issueType%3Alocalized-name%3DImproper%20Access%20Control%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Ddocker-compose-local.yml)\n\nThe Docker container is not configured to drop all default capabilities and then add only required one. Thus the container may be granted excessive privileges which violate the least privilege principle."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"docker-compose-local.yml"},"region":{"startLine":10}}}],"ruleId":"sigma.least_privilege_violation:docker_compose|text","partialFingerprints":{"ruleIdLocationHash/v1":"010084149a39559914b53f5f23858a29c0722a705c26f84019ea04d71bb917ef"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"docker-compose-local.yml"},"region":{"startLine":10}},"message":{"text":"The Docker container is not configured to drop all default capabilities and then add only required one. Thus the container may be granted excessive privileges which violate the least privilege principle."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"docker-compose-local.yml"},"region":{"startLine":10}},"message":{"text":"Remove all the default capabilities from the list of capabilities by setting the `cap_drop` value to `ALL` and then add only specific capabilities needed by a container."}}}]}]}]},{"message":{"text":"[See in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/issues/4984EB956F04845E811575AC12C0B811?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026filter=issueType%3Alocalized-name%3DCross-Site%20Request%20Forgery%20%28CSRF%29%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dwebgoat-container%2Fsrc%2Fmain%2Fjava%2Forg%2Fowasp%2Fwebgoat%2Fservice%2FRestartLessonService.java)\n\nThe web application controller modifies data or state and is unprotected from cross-site request forgery."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"webgoat-container/src/main/java/org/owasp/webgoat/service/RestartLessonService.java"},"region":{"startLine":50}}}],"ruleId":"csrf:database_update|java","partialFingerprints":{"ruleIdLocationHash/v1":"8c8bad47834a4fc6c6a593b40267cb4ec9e101cb97bd7898b89f4a1ff8d6ebc5"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-container/src/main/java/org/owasp/webgoat/service/RestartLessonService.java"},"region":{"startLine":50}},"message":{"text":"\"org.owasp.webgoat.service.RestartLessonService.restartLesson\" is a web-app entry point that requires protection from cross-site request forgery (CSRF)."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-container/src/main/java/org/owasp/webgoat/service/RestartLessonService.java"},"region":{"startLine":50}},"message":{"text":"Use the CSRF validator method \"org.owasp.webgoat.CSRFTest.checkAssignment3\" to protect against CSRF. Please refer to the examples of its use elsewhere."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-container/src/main/java/org/owasp/webgoat/service/RestartLessonService.java"},"region":{"startLine":56}},"message":{"text":"Calling \"save\u003corg.owasp.webgoat.users.UserTracker\u003e\" updates the database."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-integration-tests/src/test/java/org/owasp/webgoat/CSRFTest.java"},"region":{"startLine":70}},"message":{"text":"Example 1: Examples of CSRF validator calls."}}}]}]}]},{"message":{"text":"[See in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/issues/17019D48812C5DF9DB7B4D44E306C3CB?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026filter=issueType%3Alocalized-name%3DPasswords%20Stored%20Using%20Cryptographically%20Weak%20Hash%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dwebgoat-lessons%2Fmissing-function-ac%2Fsrc%2Fmain%2Fjava%2Forg%2Fowasp%2Fwebgoat%2Fmissing_ac%2FDisplayUser.java)\n\nHashing a password using a scheme that is not computationally intensive."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/missing-function-ac/src/main/java/org/owasp/webgoat/missing_ac/DisplayUser.java"},"region":{"startLine":67}}}],"ruleId":"weak_password_hash:weak_hash|java","partialFingerprints":{"ruleIdLocationHash/v1":"73dbf591f31610d3f019c5b0c991bde0805178471eede7d0b7b42e5d55651509"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/missing-function-ac/src/main/java/org/owasp/webgoat/missing_ac/DisplayUser.java"},"region":{"startLine":62}},"message":{"text":"Expression \"password\" contains password data."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/missing-function-ac/src/main/java/org/owasp/webgoat/missing_ac/DisplayUser.java"},"region":{"startLine":63}},"message":{"text":"\n* \"java.security.MessageDigest.getInstance(\"SHA-256\")\" uses the SHA256 algorithm. \n"}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/missing-function-ac/src/main/java/org/owasp/webgoat/missing_ac/DisplayUser.java"},"region":{"startLine":63}},"message":{"text":"Assigning: \"md\" = \"java.security.MessageDigest.getInstance(\"SHA-256\")\"."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/missing-function-ac/src/main/java/org/owasp/webgoat/missing_ac/DisplayUser.java"},"region":{"startLine":65}},"message":{"text":"Creating a tainted string using \"password\"."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/missing-function-ac/src/main/java/org/owasp/webgoat/missing_ac/DisplayUser.java"},"region":{"startLine":65}},"message":{"text":"Assigning a tainted string to \"salted\"."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/missing-function-ac/src/main/java/org/owasp/webgoat/missing_ac/DisplayUser.java"},"region":{"startLine":67}},"message":{"text":"Calling \"getBytes\". This call assigns \"salted\" to \"\u003creturn value\u003e\". Now \"\u003creturn value\u003e\" is tainted. (The virtual call resolves to \"java.lang.String.getBytes(java.lang.String)\".)"}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/missing-function-ac/src/main/java/org/owasp/webgoat/missing_ac/DisplayUser.java"},"region":{"startLine":67}},"message":{"text":"\n* \"md\" takes \"salted.getBytes(\"UTF-8\")\" as input. \n"}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/missing-function-ac/src/main/java/org/owasp/webgoat/missing_ac/DisplayUser.java"},"region":{"startLine":67}},"message":{"text":"Hashing a password using a computationally cheap cryptographic hash function. An attacker can compute more hashes per second with a cheaper function than with a more expensive function; therefore, if such password hashes leak to an attacker, they can recover more passwords in less time."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/missing-function-ac/src/main/java/org/owasp/webgoat/missing_ac/DisplayUser.java"},"region":{"startLine":67}},"message":{"text":"The recommended method of hashing sensitive password data is to generate a random sequence of bytes (a \"salt\") for each password to hash, hash the password and the salt with an adaptive hash function such as bcrypt, scrypt, and PBKDF2 (Password-Based Key Derivation Function 2), and then store the hash and the salt for subsequent password checks."}}}]}]}]},{"message":{"text":"[See in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/issues/AF6A0D0454AFD7572F41AAC3909E0369?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026filter=issueType%3Alocalized-name%3DBad%20Use%20Of%20Null-like%20Value%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dwebgoat-container%2Fsrc%2Fmain%2Fjava%2Forg%2Fowasp%2Fwebgoat%2FLessonTemplateResolver.java)\n\nReference is checked against null but then dereferenced anyway"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"webgoat-container/src/main/java/org/owasp/webgoat/LessonTemplateResolver.java"},"region":{"startLine":78}}}],"ruleId":"null_pointer_dereference_exception:check_then_dereference|java","partialFingerprints":{"ruleIdLocationHash/v1":"bebced711d6d72fec4e8a33e8684fca890a04b2d1068b23eca210c4d1b930a15"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-container/src/main/java/org/owasp/webgoat/LessonTemplateResolver.java"},"region":{"startLine":70}},"message":{"text":"Condition \"resource == null\", taking true branch."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-container/src/main/java/org/owasp/webgoat/LessonTemplateResolver.java"},"region":{"startLine":70}},"message":{"text":"Comparing \"resource\" to null implies that \"resource\" might be null."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-container/src/main/java/org/owasp/webgoat/LessonTemplateResolver.java"},"region":{"startLine":72}},"message":{"text":"Throwing \"java.io.IOException\" (or subclass) from call to \"readAllBytes\"."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-container/src/main/java/org/owasp/webgoat/LessonTemplateResolver.java"},"region":{"startLine":73}},"message":{"text":"Catching exception."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-container/src/main/java/org/owasp/webgoat/LessonTemplateResolver.java"},"region":{"startLine":78}},"message":{"text":"Passing null pointer \"resource\" to \"String\", which dereferences it."}}}]}]}]},{"message":{"text":"[See in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/issues/EDE6ACDF6E2715F732AC0B27D669BC00?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026filter=issueType%3Alocalized-name%3DSQL%20Injection%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dwebgoat-lessons%2Fsql-injection%2Fsrc%2Fmain%2Fjava%2Forg%2Fowasp%2Fwebgoat%2Fsql_injection%2Fintroduction%2FSqlInjectionLesson10.java)\n\nUntrusted user-supplied data is inserted into a SQL statement without adequate validation, escaping, or filtering."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson10.java"},"region":{"startLine":53}}}],"ruleId":"sql_injection:sink|java","partialFingerprints":{"ruleIdLocationHash/v1":"ef93fae71b97d8ff1fd40dde8059212671232d584d91a10b9905a57e63727e93"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson10.java"},"region":{"startLine":52}},"message":{"text":"\"completed\" is an entry point function."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson10.java"},"region":{"startLine":52}},"message":{"text":"The \"action_string\" is tainted."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson10.java"},"region":{"startLine":53}},"message":{"text":"Calling \"injectableQueryAvailability\". Passing the tainted value \"action_string\" to the SQL API may allow an attacker to inject SQL. (The virtual call resolves to \"org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson10.injectableQueryAvailability(java.lang.String)\".)"}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson10.java"},"region":{"startLine":53}},"message":{"text":"Use one of the following methods:\n* Use a query-preparation API to safely construct the SQL query containing user-supplied values.\n* Only concatenate a user-supplied value into a query if it has been checked against a whitelist of safe string values, or if it must be a Boolean or numeric type.\n"}}}]}]}]},{"message":{"text":"[See in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/issues/B07B8727AD7490183BBEAE7CBE1DE2B4?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026filter=issueType%3Alocalized-name%3DImproper%20Privilege%20Management%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Ddocker-compose-postgres.yml)\n\nThe Docker Compose file sets the `no-new-privileges` attribute to `false` or omits it as the default value is `false`. This doesn't restrict the container from acquiring additional privileges via SUID or SGID bits. This allows privilege escalation, meaning a user can set the security context of the container and can perform root-level operations."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"docker-compose-postgres.yml"},"region":{"startLine":30}}}],"ruleId":"sigma.container_privilege_escalation_allowed:docker_compose|text","partialFingerprints":{"ruleIdLocationHash/v1":"c70b78ac9b64c3668069b286e161787d9d62c9478dc0ac97b1d0ae8ea4cfec99"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"docker-compose-postgres.yml"},"region":{"startLine":30}},"message":{"text":"The Docker Compose file sets the `no-new-privileges` attribute to `false` or omits it as the default value is `false`. This doesn't restrict the container from acquiring additional privileges via SUID or SGID bits. This allows privilege escalation, meaning a user can set the security context of the container and can perform root-level operations."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"docker-compose-postgres.yml"},"region":{"startLine":30}},"message":{"text":"Disable container privilege escalation by explicitly setting `no-new-privileges` to `true`."}}}]}]}]},{"message":{"text":"[See in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/issues/611E313E80F56333D91E349858BEE98E?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026filter=issueType%3Alocalized-name%3DCT:%20Constructor%20throws%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dwebgoat-lessons%2Fsql-injection%2Fsrc%2Fmain%2Fjava%2Forg%2Fowasp%2Fwebgoat%2Fsql_injection%2Fmitigation%2FSqlInjectionLesson10b.java)\n\nClasses that throw exceptions in their constructors are vulnerable to Finalizer attacks (\u003ca href=\"/doc/en/spotbugs/sb_checker_ref.html#FB.CT_CONSTRUCTOR_THROW\" target=\"_blank\"\u003eFrom SpotBugs description\u003c/a\u003e)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/mitigation/SqlInjectionLesson10b.java"},"region":{"startLine":114}}}],"ruleId":"FB.CT_CONSTRUCTOR_THROW|java","partialFingerprints":{"ruleIdLocationHash/v1":"8032e7de9d51760c12c786962ca8982203962c09e6237835960e8f9c71a33768"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/mitigation/SqlInjectionLesson10b.java"},"region":{"startLine":114}},"message":{"text":"Exception thrown in class org.owasp.webgoat.sql_injection.mitigation.SqlInjectionLesson10b$JavaObjectFromString at new org.owasp.webgoat.sql_injection.mitigation.SqlInjectionLesson10b$JavaObjectFromString(SqlInjectionLesson10b, String, String) will leave the constructor. The object under construction remains partially initialized and may be vulnerable to Finalizer attacks."}}}]}]}]},{"message":{"text":"[See in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/issues/06BEC32667643F91406AF2534C9741A0?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026filter=issueType%3Alocalized-name%3DFS:%20Format%20string%20problem%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dwebgoat-lessons%2Fpassword-reset%2Fsrc%2Fmain%2Fjava%2Forg%2Fowasp%2Fwebgoat%2Fpassword_reset%2FResetLinkAssignmentForgotPassword.java)\n\nThis format string includes a newline character (\\n). (\u003ca href=\"/doc/en/spotbugs/sb_checker_ref.html#FB.VA_FORMAT_STRING_USES_NEWLINE\" target=\"_blank\"\u003eFrom SpotBugs description\u003c/a\u003e)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/password-reset/src/main/java/org/owasp/webgoat/password_reset/ResetLinkAssignmentForgotPassword.java"},"region":{"startLine":83}}}],"ruleId":"FB.VA_FORMAT_STRING_USES_NEWLINE|java","partialFingerprints":{"ruleIdLocationHash/v1":"1f5abc41b1ac812a84ea123f6e2338144e410a8002c21de978ce407f4b9bdafc"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/password-reset/src/main/java/org/owasp/webgoat/password_reset/ResetLinkAssignmentForgotPassword.java"},"region":{"startLine":83}},"message":{"text":"Format string should use %n rather than \\n."}}}]}]}]},{"message":{"text":"[See in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/issues/8EE46BF551DD56454EA615BBC65D2850?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026filter=issueType%3Alocalized-name%3DCross-Site%20Request%20Forgery%20%28CSRF%29%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dwebgoat-lessons%2Fsql-injection%2Fsrc%2Fmain%2Fjava%2Forg%2Fowasp%2Fwebgoat%2Fsql_injection%2Fadvanced%2FSqlInjectionChallenge.java)\n\nThe web application controller modifies data or state and is unprotected from cross-site request forgery."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/advanced/SqlInjectionChallenge.java"},"region":{"startLine":56}}}],"ruleId":"csrf:database_update|java","partialFingerprints":{"ruleIdLocationHash/v1":"4c91f8740ad8685a3a3e90b4d40107ddfea98de27074f329262e04cd387961b4"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-integration-tests/src/test/java/org/owasp/webgoat/CSRFTest.java"},"region":{"startLine":70}},"message":{"text":"Example 1: Examples of CSRF validator calls."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/advanced/SqlInjectionChallenge.java"},"region":{"startLine":56}},"message":{"text":"\"org.owasp.webgoat.sql_injection.advanced.SqlInjectionChallenge.registerNewUser\" is a web-app entry point that requires protection from cross-site request forgery (CSRF)."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/advanced/SqlInjectionChallenge.java"},"region":{"startLine":56}},"message":{"text":"Use the CSRF validator method \"org.owasp.webgoat.CSRFTest.checkAssignment3\" to protect against CSRF. Please refer to the examples of its use elsewhere."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/advanced/SqlInjectionChallenge.java"},"region":{"startLine":59}},"message":{"text":"Condition \"attackResult == null\", taking true branch."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/advanced/SqlInjectionChallenge.java"},"region":{"startLine":67}},"message":{"text":"Condition \"resultSet.next()\", taking false branch."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/advanced/SqlInjectionChallenge.java"},"region":{"startLine":78}},"message":{"text":"Calling \"execute\" updates the database."}}}]}]}]},{"message":{"text":"[See in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/issues/E21FBFFE58959DC5A4558EBE43CB5A31?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026filter=issueType%3Alocalized-name%3DAssignment%20to%20Variable%20without%20Use%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dwebgoat-container%2Fsrc%2Ftest%2Fjava%2Forg%2Fowasp%2Fwebgoat%2Fusers%2FUserTrackerRepositoryTest.java)\n\nThis instruction assigns a value to a local variable, but the value is not read or used in any subsequent instruction. (\u003ca href=\"/doc/en/spotbugs/sb_checker_ref.html#FB.DLS_DEAD_LOCAL_STORE\" target=\"_blank\"\u003eFrom SpotBugs description\u003c/a\u003e)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"webgoat-container/src/test/java/org/owasp/webgoat/users/UserTrackerRepositoryTest.java"},"region":{"startLine":47}}}],"ruleId":"FB.DLS_DEAD_LOCAL_STORE|java","partialFingerprints":{"ruleIdLocationHash/v1":"c96c86f1c73b8a47f956cd1afb4b8fbe473ac9dab8333b17ce063db9114954bd"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-container/src/test/java/org/owasp/webgoat/users/UserTrackerRepositoryTest.java"},"region":{"startLine":47}},"message":{"text":"Dead store to lessonTracker."}}}]}]}]},{"message":{"text":"[See in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/issues/CC624BD99E3A19B0EB057A4D6FC4FCF9?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026filter=issueType%3Alocalized-name%3DNULL%20Pointer%20Dereference%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dwebgoat-container%2Fsrc%2Ftest%2Fjava%2Forg%2Fowasp%2Fwebgoat%2Fusers%2FUserValidatorTest.java)\n\nReturn value of function which returns null is dereferenced without checking"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"webgoat-container/src/test/java/org/owasp/webgoat/users/UserValidatorTest.java"},"region":{"startLine":44}}}],"ruleId":"null_pointer_dereference_exception:return_value|java","partialFingerprints":{"ruleIdLocationHash/v1":"74c37292f1b8980bf4ec973c1cf1e8079af894d5a92ac333ef330be4e1210575"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-container/src/test/java/org/owasp/webgoat/users/UserValidatorTest.java"},"region":{"startLine":44}},"message":{"text":"\"getFieldError\" returns \"null\" (checked 0 out of 3 times). (The virtual call resolves to \"org.springframework.validation.AbstractBindingResult.getFieldError\".)"}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-container/src/test/java/org/owasp/webgoat/users/UserValidatorTest.java"},"region":{"startLine":44}},"message":{"text":"Calling a method on null object \"errors.getFieldError(\"matchingPassword\")\"."}}}]}]}]},{"message":{"text":"[See in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/issues/C034A215D86E531B5F53A1B841A1C550?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026filter=issueType%3Alocalized-name%3DImproper%20Verification%20of%20Cryptographic%20Signature%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dwebgoat-lessons%2Fjwt%2Fsrc%2Ftest%2Fjava%2Forg%2Fowasp%2Fwebgoat%2Fjwt%2FTokenTest.java)\n\nThe application uses the `io.jsonwebtoken.JwtParser` package's `parse()`, `parsePlaintextJwt()`, or `parseClaimsJwt()` method to parse a JWT without first verifying the token's signature, allowing an attacker to forge the token claims and perform attacks such as impersonating other users."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/jwt/src/test/java/org/owasp/webgoat/jwt/TokenTest.java"},"region":{"startLine":51}}}],"ruleId":"sigma.jwt_untrusted_decode:io_jsonwebtoken|java","partialFingerprints":{"ruleIdLocationHash/v1":"10102e470e0d4d9f7b9c052195c8dbfe7ed3c75cabeebfd22305d1d93b7d9022"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/jwt/src/test/java/org/owasp/webgoat/jwt/TokenTest.java"},"region":{"startLine":51}},"message":{"text":"The application uses the `io.jsonwebtoken.JwtParser` package's `parse()`, `parsePlaintextJwt()`, or `parseClaimsJwt()` method to parse a JWT without first verifying the token's signature, allowing an attacker to forge the token claims and perform attacks such as impersonating other users."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/jwt/src/test/java/org/owasp/webgoat/jwt/TokenTest.java"},"region":{"startLine":51}},"message":{"text":"Modify the application to use `parseClaimsJws()` or `parsePlaintextJws()` instead, since these methods will automatically verify the token signature."}}}]}]}]},{"message":{"text":"[See in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/issues/2F86324EBF510EFF208E0A81B1784616?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026filter=issueType%3Alocalized-name%3DAssignment%20to%20Variable%20without%20Use%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dwebgoat-lessons%2Fsql-injection%2Fsrc%2Fmain%2Fjava%2Forg%2Fowasp%2Fwebgoat%2Fsql_injection%2Fmitigation%2FSqlInjectionLesson10b.java)\n\nThis instruction assigns a value to a local variable, but the value is not read or used in any subsequent instruction. (\u003ca href=\"/doc/en/spotbugs/sb_checker_ref.html#FB.DLS_DEAD_LOCAL_STORE\" target=\"_blank\"\u003eFrom SpotBugs description\u003c/a\u003e)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/mitigation/SqlInjectionLesson10b.java"},"region":{"startLine":92}}}],"ruleId":"FB.DLS_DEAD_LOCAL_STORE|java","partialFingerprints":{"ruleIdLocationHash/v1":"4cf73b74f9b86a2a834fcac51777c4b3e89d53cf0138589fc25a7e18acf73dd0"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/mitigation/SqlInjectionLesson10b.java"},"region":{"startLine":92}},"message":{"text":"Dead store to result."}}}]}]}]},{"message":{"text":"[See in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/issues/5C90E29E6F67C264EC8B896D49133BF2?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026filter=issueType%3Alocalized-name%3DUnreachable%252C%20Unused%20or%20Dead%20Code%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dwebgoat-container%2Ftarget%2Fclasses%2Fstatic%2Fjs%2Flibs%2Face.js)\n\nAn expression is useless because it has no side effects and its result is ignored."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"webgoat-container/target/classes/static/js/libs/ace.js"},"region":{"startLine":10929}}}],"ruleId":"no_effect|javascript","partialFingerprints":{"ruleIdLocationHash/v1":"51b49488c5ef38670bd33b7357e685b9c2dfeadf67976fd90993060204775af7"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-container/target/classes/static/js/libs/ace.js"},"region":{"startLine":10929}},"message":{"text":"Reading variable \"idx\" and discarding the result. What was this code intended to accomplish?"}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-container/target/classes/static/js/libs/ace.js"},"region":{"startLine":10929}},"message":{"text":"Perhaps this code is incomplete or mistyped in some way."}}}]}]}]},{"message":{"text":"[See in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/issues/A85A8DCD0B35831AE22FA6C691584F12?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026filter=issueType%3Alocalized-name%3DHttpOnly%20Cookie%20Attribute%20Not%20Set%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dwebgoat-lessons%2Fjwt%2Fsrc%2Ftest%2Fjava%2Forg%2Fowasp%2Fwebgoat%2Fjwt%2FJWTVotesEndpointTest.java)\n\nThe `HttpOnly` flag is not enabled for cookies.\nEnabling the `HttpOnly` flag prevents an attacker from stealing or modifying cookie data via cross-site scripting attacks executed against vulnerable client-side applications."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/jwt/src/test/java/org/owasp/webgoat/jwt/JWTVotesEndpointTest.java"},"region":{"startLine":78}}}],"ruleId":"sigma.missing_httponly_attribute:servlet|java","partialFingerprints":{"ruleIdLocationHash/v1":"ced1c53060594c9b0b9ed003703b9533aaa5527db8e570fbdae15212519e0cfe"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/jwt/src/test/java/org/owasp/webgoat/jwt/JWTVotesEndpointTest.java"},"region":{"startLine":78}},"message":{"text":"The `HttpOnly` flag is not enabled for cookies.\nEnabling the `HttpOnly` flag prevents an attacker from stealing or modifying cookie data via cross-site scripting attacks executed against vulnerable client-side applications."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/jwt/src/test/java/org/owasp/webgoat/jwt/JWTVotesEndpointTest.java"},"region":{"startLine":78}},"message":{"text":"Enable the `HttpOnly` attribute by calling `Cookie.setHttpOnly(true)` to prevent the cookie from being read by client-side code."}}}]}]}]},{"message":{"text":"[See in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/issues/E9F3BBAAD50220E0D4F1F5F841CB0250?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026filter=issueType%3Alocalized-name%3DExpected%20Behavior%20Violation%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dwebgoat-lessons%2Fcrypto%2Fsrc%2Fmain%2Fjava%2Forg%2Fowasp%2Fwebgoat%2Fcrypto%2FHashingAssignment.java)\n\nThis code creates a java.util.Random object, uses it to generate one random number, and then discards the Random object. (\u003ca href=\"/doc/en/spotbugs/sb_checker_ref.html#FB.DMI_RANDOM_USED_ONLY_ONCE\" target=\"_blank\"\u003eFrom SpotBugs description\u003c/a\u003e)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/crypto/src/main/java/org/owasp/webgoat/crypto/HashingAssignment.java"},"region":{"startLine":55}}}],"ruleId":"FB.DMI_RANDOM_USED_ONLY_ONCE|java","partialFingerprints":{"ruleIdLocationHash/v1":"045547aed5a846d51a1c0ba36119a10e6a09c320cf422de1cf2384ce7c0b9151"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/crypto/src/main/java/org/owasp/webgoat/crypto/HashingAssignment.java"},"region":{"startLine":55}},"message":{"text":"Random object created and used only once."}}}]}]}]},{"message":{"text":"[See in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/issues/E1E5FF930E5FAE559A763A92923A49A2?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026filter=issueType%3Alocalized-name%3DUse%20of%20Hard-coded%20Credentials%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dwebwolf%2Fsrc%2Ftest%2Fjava%2Forg%2Fowasp%2Fwebwolf%2Fuser%2FUserServiceTest.java)\n\nA secret, such as a password, cryptographic key, or token is stored in plaintext directly in the source code, in an application's properties, or configuration file. Users with access to the secret may then use the secret to access resources that they otherwise would not have access to."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"webwolf/src/test/java/org/owasp/webwolf/user/UserServiceTest.java"},"region":{"startLine":69}}}],"ruleId":"sigma.hardcoded_secret:pattern|java","partialFingerprints":{"ruleIdLocationHash/v1":"836ba6ec98e31957b354ab683fef2fe9289c39273e0cb41e273e04ce927d658d"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"webwolf/src/test/java/org/owasp/webwolf/user/UserServiceTest.java"},"region":{"startLine":69}},"message":{"text":"A secret, such as a password, cryptographic key, or token is stored in plaintext directly in the source code, in an application's properties, or configuration file. Users with access to the secret may then use the secret to access resources that they otherwise would not have access to. Secret type: Password (generic)."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webwolf/src/test/java/org/owasp/webwolf/user/UserServiceTest.java"},"region":{"startLine":69}},"message":{"text":"Avoid setting sensitive configuration values as string literals. Instead, these values should be set using variables with the sensitive data loaded from an encrypted file or a secret store."}}}]}]}]},{"message":{"text":"[See in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/issues/89DD75701AE1D43844ADDE001CFE10DB?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026filter=issueType%3Alocalized-name%3DCleartext%20Storage%20in%20a%20File%20or%20on%20Disk%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dwebgoat-container%2Fsrc%2Fmain%2Fjava%2Forg%2Fowasp%2Fwebgoat%2Fusers%2FUserService.java)\n\nStoring unencrypted sensitive data to a database."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"webgoat-container/src/main/java/org/owasp/webgoat/users/UserService.java"},"region":{"startLine":36}}}],"ruleId":"sensitive_data_leak:cleartext_in_database|java","partialFingerprints":{"ruleIdLocationHash/v1":"ae59e61c86ab40c3ed93a19e994bcb813e33957f0df4b68c8be0ef5148e1997a"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-container/src/main/java/org/owasp/webgoat/users/UserService.java"},"region":{"startLine":36}},"message":{"text":"Calling \"WebGoatUser\". This call stores sensitive data in \"password\"."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-container/src/main/java/org/owasp/webgoat/users/UserService.java"},"region":{"startLine":36}},"message":{"text":"Calling \"save\u003corg.owasp.webgoat.users.WebGoatUser\u003e\". This stores the sensitive data \"new org.owasp.webgoat.users.WebGoatUser(username, password)\" to a database. It may be exposed to unintended individuals. (The virtual call resolves to \"org.springframework.data.repository.CrudRepository.save\u003cS\u003e(java.lang.Object)\".)"}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-container/src/main/java/org/owasp/webgoat/users/UserService.java"},"region":{"startLine":36}},"message":{"text":"Do not leak this data to a database."}}}]}]}]},{"message":{"text":"[See in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/issues/EDA71CEBF543189F1BF69FBCE4A48A55?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026filter=issueType%3Alocalized-name%3DImproper%20Verification%20of%20Cryptographic%20Signature%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dwebgoat-lessons%2Fjwt%2Fsrc%2Fmain%2Fjava%2Forg%2Fowasp%2Fwebgoat%2Fjwt%2FJWTVotesEndpoint.java)\n\nThe application uses the `io.jsonwebtoken.JwtParser` package's `parse()`, `parsePlaintextJwt()`, or `parseClaimsJwt()` method to parse a JWT without first verifying the token's signature, allowing an attacker to forge the token claims and perform attacks such as impersonating other users."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/jwt/src/main/java/org/owasp/webgoat/jwt/JWTVotesEndpoint.java"},"region":{"startLine":141}}}],"ruleId":"sigma.jwt_untrusted_decode:io_jsonwebtoken|java","partialFingerprints":{"ruleIdLocationHash/v1":"3ac144326bc4f67e485d2eaf81a127b95dacdbae50f9cf4db83294c2bf8786fb"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/jwt/src/main/java/org/owasp/webgoat/jwt/JWTVotesEndpoint.java"},"region":{"startLine":141}},"message":{"text":"The application uses the `io.jsonwebtoken.JwtParser` package's `parse()`, `parsePlaintextJwt()`, or `parseClaimsJwt()` method to parse a JWT without first verifying the token's signature, allowing an attacker to forge the token claims and perform attacks such as impersonating other users."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/jwt/src/main/java/org/owasp/webgoat/jwt/JWTVotesEndpoint.java"},"region":{"startLine":141}},"message":{"text":"Modify the application to use `parseClaimsJws()` or `parsePlaintextJws()` instead, since these methods will automatically verify the token signature."}}}]}]}]},{"message":{"text":"[See in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/issues/1048907DF5488B24ED8620A840AA203F?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026filter=issueType%3Alocalized-name%3DHttpOnly%20Cookie%20Attribute%20Not%20Set%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dwebgoat-lessons%2Fjwt%2Fsrc%2Fmain%2Fjava%2Forg%2Fowasp%2Fwebgoat%2Fjwt%2FJWTVotesEndpoint.java)\n\nThe `HttpOnly` flag is not enabled for cookies.\nEnabling the `HttpOnly` flag prevents an attacker from stealing or modifying cookie data via cross-site scripting attacks executed against vulnerable client-side applications."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/jwt/src/main/java/org/owasp/webgoat/jwt/JWTVotesEndpoint.java"},"region":{"startLine":103}}}],"ruleId":"sigma.missing_httponly_attribute:servlet|java","partialFingerprints":{"ruleIdLocationHash/v1":"eec335976cdb3cb1938e958652fdc442bb67c1402cd2f9150acbdb438e028251"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/jwt/src/main/java/org/owasp/webgoat/jwt/JWTVotesEndpoint.java"},"region":{"startLine":103}},"message":{"text":"The `HttpOnly` flag is not enabled for cookies.\nEnabling the `HttpOnly` flag prevents an attacker from stealing or modifying cookie data via cross-site scripting attacks executed against vulnerable client-side applications."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/jwt/src/main/java/org/owasp/webgoat/jwt/JWTVotesEndpoint.java"},"region":{"startLine":103}},"message":{"text":"Enable the `HttpOnly` attribute by calling `Cookie.setHttpOnly(true)` to prevent the cookie from being read by client-side code."}}}]}]}]},{"message":{"text":"[See in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/issues/74D7AF89EA799EB0A7B88946651268BF?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026filter=issueType%3Alocalized-name%3DUse%20of%20Hard-coded%20Credentials%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dwebgoat-lessons%2Fsecure-passwords%2Fsrc%2Fmain%2Fjava%2Forg%2Fowasp%2Fwebgoat%2Fsecure_password%2FSecurePasswordsAssignment.java)\n\nA secret, such as a password, cryptographic key, or token is stored in plaintext directly in the source code, in an application's properties, or configuration file. Users with access to the secret may then use the secret to access resources that they otherwise would not have access to."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/secure-passwords/src/main/java/org/owasp/webgoat/secure_password/SecurePasswordsAssignment.java"},"region":{"startLine":90}}}],"ruleId":"sigma.hardcoded_secret:pattern|java","partialFingerprints":{"ruleIdLocationHash/v1":"d9527c49a2ee459502c3c33277f60d549de02f7fdc7c401ce3d94c4da0b7f03d"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/secure-passwords/src/main/java/org/owasp/webgoat/secure_password/SecurePasswordsAssignment.java"},"region":{"startLine":90}},"message":{"text":"A secret, such as a password, cryptographic key, or token is stored in plaintext directly in the source code, in an application's properties, or configuration file. Users with access to the secret may then use the secret to access resources that they otherwise would not have access to. Secret type: Password (generic)."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/secure-passwords/src/main/java/org/owasp/webgoat/secure_password/SecurePasswordsAssignment.java"},"region":{"startLine":90}},"message":{"text":"Avoid setting sensitive configuration values as string literals. Instead, these values should be set using variables with the sensitive data loaded from an encrypted file or a secret store."}}}]}]}]},{"message":{"text":"[See in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/issues/5D51C93627BF33485549825AFB578986?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026filter=issueType%3Alocalized-name%3DDm:%20Dubious%20method%20used%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dwebgoat-integration-tests%2Fsrc%2Ftest%2Fjava%2Forg%2Fowasp%2Fwebgoat%2FCryptoTest.java)\n\nFound a call to a method which will perform a byte to String (or String to byte) conversion, and will assume that the default platform encoding is suitable. (\u003ca href=\"/doc/en/spotbugs/sb_checker_ref.html#FB.DM_DEFAULT_ENCODING\" target=\"_blank\"\u003eFrom SpotBugs description\u003c/a\u003e)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"webgoat-integration-tests/src/test/java/org/owasp/webgoat/CryptoTest.java"},"region":{"startLine":58}}}],"ruleId":"FB.DM_DEFAULT_ENCODING|java","partialFingerprints":{"ruleIdLocationHash/v1":"2282681e40f65b71797442d53f1bb18fe7a5f793b817619e057cd1c76543286a"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-integration-tests/src/test/java/org/owasp/webgoat/CryptoTest.java"},"region":{"startLine":58}},"message":{"text":"Found reliance on default encoding: new String(byte[])."}}}]}]}]},{"message":{"text":"[See in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/issues/78BE479DCF454DE62478E02C17A6A0D0?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026filter=issueType%3Alocalized-name%3DCross-Site%20Request%20Forgery%20%28CSRF%29%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dwebgoat-lessons%2Fsql-injection%2Fsrc%2Fmain%2Fjava%2Forg%2Fowasp%2Fwebgoat%2Fsql_injection%2Fintroduction%2FSqlInjectionLesson4.java)\n\nThe web application controller modifies data or state and is unprotected from cross-site request forgery."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson4.java"},"region":{"startLine":52}}}],"ruleId":"csrf:database_update|java","partialFingerprints":{"ruleIdLocationHash/v1":"19a59f8d498e560a18127554085410c7be23872aad0afbb1cde830d2619126a4"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson4.java"},"region":{"startLine":52}},"message":{"text":"\"org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson4.completed\" is a web-app entry point that requires protection from cross-site request forgery (CSRF)."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson4.java"},"region":{"startLine":52}},"message":{"text":"Use the CSRF validator method \"org.owasp.webgoat.CSRFTest.checkAssignment3\" to protect against CSRF. Please refer to the examples of its use elsewhere."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson4.java"},"region":{"startLine":53}},"message":{"text":"Calling \"injectableQuery\" updates the database."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-integration-tests/src/test/java/org/owasp/webgoat/CSRFTest.java"},"region":{"startLine":70}},"message":{"text":"Example 1: Examples of CSRF validator calls."}}}]}]}]},{"message":{"text":"[See in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/issues/14976BCEE4C55FE3EA8BB2DD238C8A2C?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026filter=issueType%3Alocalized-name%3DCross-Site%20Request%20Forgery%20%28CSRF%29%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dwebgoat-container%2Fsrc%2Fmain%2Fjava%2Forg%2Fowasp%2Fwebgoat%2Fusers%2FRegistrationController.java)\n\nThe web application controller modifies data or state and is unprotected from cross-site request forgery."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"webgoat-container/src/main/java/org/owasp/webgoat/users/RegistrationController.java"},"region":{"startLine":36}}}],"ruleId":"csrf:database_update|java","partialFingerprints":{"ruleIdLocationHash/v1":"a438a491bc6582047588615eb8b997a9a3390b0b77de5b4b87ff9932cca6f709"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-container/src/main/java/org/owasp/webgoat/users/RegistrationController.java"},"region":{"startLine":36}},"message":{"text":"\"org.owasp.webgoat.users.RegistrationController.registration\" is a web-app entry point that requires protection from cross-site request forgery (CSRF)."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-container/src/main/java/org/owasp/webgoat/users/RegistrationController.java"},"region":{"startLine":36}},"message":{"text":"Use the CSRF validator method \"org.owasp.webgoat.CSRFTest.checkAssignment3\" to protect against CSRF. Please refer to the examples of its use elsewhere."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-container/src/main/java/org/owasp/webgoat/users/RegistrationController.java"},"region":{"startLine":39}},"message":{"text":"Condition \"bindingResult.hasErrors()\", taking false branch."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-container/src/main/java/org/owasp/webgoat/users/RegistrationController.java"},"region":{"startLine":42}},"message":{"text":"Calling \"addUser\" updates the database."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-integration-tests/src/test/java/org/owasp/webgoat/CSRFTest.java"},"region":{"startLine":70}},"message":{"text":"Example 1: Examples of CSRF validator calls."}}}]}]}]},{"message":{"text":"[See in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/issues/10840588436F958583435471540D0F00?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026filter=issueType%3Alocalized-name%3DImproper%20Access%20Control%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Ddocker-compose-postgres.yml)\n\nThe Docker container is not configured to drop all default capabilities and then add only required one. Thus the container may be granted excessive privileges which violate the least privilege principle."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"docker-compose-postgres.yml"},"region":{"startLine":5}}}],"ruleId":"sigma.least_privilege_violation:docker_compose|text","partialFingerprints":{"ruleIdLocationHash/v1":"12089097bb84e3d52f0fedee4b45ea69f202124904f91ea10ef9cdc25c8bd80a"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"docker-compose-postgres.yml"},"region":{"startLine":5}},"message":{"text":"The Docker container is not configured to drop all default capabilities and then add only required one. Thus the container may be granted excessive privileges which violate the least privilege principle."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"docker-compose-postgres.yml"},"region":{"startLine":5}},"message":{"text":"Remove all the default capabilities from the list of capabilities by setting the `cap_drop` value to `ALL` and then add only specific capabilities needed by a container."}}}]}]}]},{"message":{"text":"[See in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/issues/CB01B8DF9813596E0ADE049A7AA092FD?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026filter=issueType%3Alocalized-name%3DImproper%20Privilege%20Management%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Ddocker-compose-postgres.yml)\n\nThe Docker Compose file sets the `no-new-privileges` attribute to `false` or omits it as the default value is `false`. This doesn't restrict the container from acquiring additional privileges via SUID or SGID bits. This allows privilege escalation, meaning a user can set the security context of the container and can perform root-level operations."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"docker-compose-postgres.yml"},"region":{"startLine":5}}}],"ruleId":"sigma.container_privilege_escalation_allowed:docker_compose|text","partialFingerprints":{"ruleIdLocationHash/v1":"aecf218bfbfb3a379b35e2089c4546aef743cfb001f2a5ba93f1b61866f6a348"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"docker-compose-postgres.yml"},"region":{"startLine":5}},"message":{"text":"The Docker Compose file sets the `no-new-privileges` attribute to `false` or omits it as the default value is `false`. This doesn't restrict the container from acquiring additional privileges via SUID or SGID bits. This allows privilege escalation, meaning a user can set the security context of the container and can perform root-level operations."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"docker-compose-postgres.yml"},"region":{"startLine":5}},"message":{"text":"Disable container privilege escalation by explicitly setting `no-new-privileges` to `true`."}}}]}]}]},{"message":{"text":"[See in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/issues/BB4A8F420D3E4075CD466DBF55760538?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026filter=issueType%3Alocalized-name%3DHttpOnly%20Cookie%20Attribute%20Not%20Set%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dwebgoat-lessons%2Fjwt%2Fsrc%2Ftest%2Fjava%2Forg%2Fowasp%2Fwebgoat%2Fjwt%2FJWTVotesEndpointTest.java)\n\nThe `HttpOnly` flag is not enabled for cookies.\nEnabling the `HttpOnly` flag prevents an attacker from stealing or modifying cookie data via cross-site scripting attacks executed against vulnerable client-side applications."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/jwt/src/test/java/org/owasp/webgoat/jwt/JWTVotesEndpointTest.java"},"region":{"startLine":192}}}],"ruleId":"sigma.missing_httponly_attribute:servlet|java","partialFingerprints":{"ruleIdLocationHash/v1":"71b4a07efe2229588cde976adace7c6a62d9b87392d6b89bd0e0bb34935f56eb"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/jwt/src/test/java/org/owasp/webgoat/jwt/JWTVotesEndpointTest.java"},"region":{"startLine":192}},"message":{"text":"The `HttpOnly` flag is not enabled for cookies.\nEnabling the `HttpOnly` flag prevents an attacker from stealing or modifying cookie data via cross-site scripting attacks executed against vulnerable client-side applications."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/jwt/src/test/java/org/owasp/webgoat/jwt/JWTVotesEndpointTest.java"},"region":{"startLine":192}},"message":{"text":"Enable the `HttpOnly` attribute by calling `Cookie.setHttpOnly(true)` to prevent the cookie from being read by client-side code."}}}]}]}]},{"message":{"text":"[See in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/issues/B9C8523A29EDECB4815B61FC903369A0?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026filter=issueType%3Alocalized-name%3DImproper%20Privilege%20Management%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dgoat-with-reverseproxy.yaml)\n\nThe Docker container requests the `NET_RAW` capability, either explicitly or by default, granting access to the host's network interfaces."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"goat-with-reverseproxy.yaml"},"region":{"startLine":6}}}],"ruleId":"sigma.container_requesting_net_raw:docker_compose|text","partialFingerprints":{"ruleIdLocationHash/v1":"9f62e4b8174981d1b5a11aa5eac6f4186894431e674cb8b8b73eb57c5d17f4d0"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"goat-with-reverseproxy.yaml"},"region":{"startLine":6}},"message":{"text":"The Docker container requests the `NET_RAW` capability, either explicitly or by default, granting access to the host's network interfaces."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"goat-with-reverseproxy.yaml"},"region":{"startLine":6}},"message":{"text":"Explicitly remove the `NET_RAW` capability by adding either `NET_RAW` or `ALL` to the `cap_drop` list and avoiding the `NET_RAW` capability in the `cap_add` list."}}}]}]}]},{"message":{"text":"[See in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/issues/B9C8F4505E20F3773883918E0476850D?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026filter=issueType%3Alocalized-name%3DUncontrolled%20Resource%20Consumption%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3DplatformQuickStarts%2FGCP%2FGKE-Docker%2Fwebgoat_deployment_noDNSnoTLS.yml)\n\nThe Kubernetes container does not have a set CPU limit, allowing it to exhaust all CPU resources or cause excessive cloud usage bills."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"platformQuickStarts/GCP/GKE-Docker/webgoat_deployment_noDNSnoTLS.yml"},"region":{"startLine":33}}}],"ruleId":"sigma.container_missing_cpu_limit:kubernetes|text","partialFingerprints":{"ruleIdLocationHash/v1":"5ca7566fd584edf6239625fa9ba8cca02a2deea5a53d22740a27423b96699a6d"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"platformQuickStarts/GCP/GKE-Docker/webgoat_deployment_noDNSnoTLS.yml"},"region":{"startLine":33}},"message":{"text":"The Kubernetes container does not have a set CPU limit, allowing it to exhaust all CPU resources or cause excessive cloud usage bills."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"platformQuickStarts/GCP/GKE-Docker/webgoat_deployment_noDNSnoTLS.yml"},"region":{"startLine":33}},"message":{"text":"Each container defined in either the `containers` or `initContainers` blocks should have a `resources.limits.cpu` field to restrict CPU usage. Note that unlike the `requests.cpu` field that set the initial CPU allocated for a container, `limits.cpu` sets a hard limit for the maximum CPU that can be consumed by the container."}}}]}]}]},{"message":{"text":"[See in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/issues/7381BC2F0111CB55A668297A734C1E7A?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026filter=issueType%3Alocalized-name%3DUse%20of%20Hard-coded%20Credentials%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dwebgoat-lessons%2Fjwt%2Fsrc%2Ftest%2Fjava%2Forg%2Fowasp%2Fwebgoat%2Fjwt%2FJWTRefreshEndpointTest.java)\n\nA secret, such as a password, cryptographic key, or token is stored in plaintext directly in the source code, in an application's properties, or configuration file. Users with access to the secret may then use the secret to access resources that they otherwise would not have access to."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/jwt/src/test/java/org/owasp/webgoat/jwt/JWTRefreshEndpointTest.java"},"region":{"startLine":108}}}],"ruleId":"sigma.hardcoded_secret:pattern|java","partialFingerprints":{"ruleIdLocationHash/v1":"517dc4a8af271bc7b069b8e0eb4bc86642558b9ec76d969905354b608c3711d1"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/jwt/src/test/java/org/owasp/webgoat/jwt/JWTRefreshEndpointTest.java"},"region":{"startLine":108}},"message":{"text":"A secret, such as a password, cryptographic key, or token is stored in plaintext directly in the source code, in an application's properties, or configuration file. Users with access to the secret may then use the secret to access resources that they otherwise would not have access to. Secret type: Bearer token."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/jwt/src/test/java/org/owasp/webgoat/jwt/JWTRefreshEndpointTest.java"},"region":{"startLine":108}},"message":{"text":"Avoid setting sensitive configuration values as string literals. Instead, these values should be set using variables with the sensitive data loaded from an encrypted file or a secret store."}}}]}]}]},{"message":{"text":"[See in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/issues/791BF6F295CCBAFCB2E577A404572185?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026filter=issueType%3Alocalized-name%3DImproper%20Resource%20Shutdown%20or%20Release%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dwebgoat-lessons%2Fsql-injection%2Fsrc%2Fmain%2Fjava%2Forg%2Fowasp%2Fwebgoat%2Fsql_injection%2Fintroduction%2FSqlInjectionLesson5b.java)\n\nLeak of a system resource on an exception path (probably error handling)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson5b.java"},"region":{"startLine":64}}}],"ruleId":"resource_leak:exceptional_path|java","partialFingerprints":{"ruleIdLocationHash/v1":"bbd85ee881be5935748458cef70c40cf76df2083abc9c40d7ddf7638af399a40"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson5b.java"},"region":{"startLine":58}},"message":{"text":"A new resource is returned from allocation method \"prepareStatement\"."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson5b.java"},"region":{"startLine":58}},"message":{"text":"Assigning: \"query\" = resource returned from \"connection.prepareStatement(queryString, 1004, 1007)\"."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson5b.java"},"region":{"startLine":62}},"message":{"text":"Throwing \"java.lang.NumberFormatException\" from call to \"parseInt\"."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson5b.java"},"region":{"startLine":63}},"message":{"text":"Catching exception."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson5b.java"},"region":{"startLine":64}},"message":{"text":"Variable \"query\" going out of scope leaks the resource it refers to."}}}]}]}]},{"message":{"text":"[See in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/issues/8FC90BCEDEAE2EC77CB33B95A0860916?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026filter=issueType%3Alocalized-name%3DSQL%20Injection%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dwebgoat-lessons%2Fchallenge%2Fsrc%2Fmain%2Fjava%2Forg%2Fowasp%2Fwebgoat%2Fchallenges%2Fchallenge5%2FAssignment5.java)\n\nUntrusted user-supplied data is inserted into a SQL statement without adequate validation, escaping, or filtering."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/challenge/src/main/java/org/owasp/webgoat/challenges/challenge5/Assignment5.java"},"region":{"startLine":59}}}],"ruleId":"sql_injection:sink|java","partialFingerprints":{"ruleIdLocationHash/v1":"cb4cc38d7ade4c2e263ea2acd68c9599716f348436860e8c00919f64200541e7"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/challenge/src/main/java/org/owasp/webgoat/challenges/challenge5/Assignment5.java"},"region":{"startLine":51}},"message":{"text":"\"login\" is an entry point function."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/challenge/src/main/java/org/owasp/webgoat/challenges/challenge5/Assignment5.java"},"region":{"startLine":51}},"message":{"text":"The \"username_login\" is tainted."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/challenge/src/main/java/org/owasp/webgoat/challenges/challenge5/Assignment5.java"},"region":{"startLine":59}},"message":{"text":"Creating a tainted string using \"username_login\"."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/challenge/src/main/java/org/owasp/webgoat/challenges/challenge5/Assignment5.java"},"region":{"startLine":59}},"message":{"text":"Calling \"prepareStatement\". Passing the tainted value \"\"select password from challenge_users where userid = '\" + username_login + \"' and password = '\" + password_login + \"'\"\" to the SQL API may allow an attacker to inject SQL. (The virtual call resolves to \"java.sql.Connection.prepareStatement(java.lang.String)\".)"}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/challenge/src/main/java/org/owasp/webgoat/challenges/challenge5/Assignment5.java"},"region":{"startLine":59}},"message":{"text":"Use one of the following methods:\n* Use a query-preparation API to safely construct the SQL query containing user-supplied values.\n* Only concatenate a user-supplied value into a query if it has been checked against a whitelist of safe string values, or if it must be a Boolean or numeric type.\n"}}}]}]}]},{"message":{"text":"[See in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/issues/DE17A49B331D17D614B096E1E56B8544?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026filter=issueType%3Alocalized-name%3DCross-site%20Scripting%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dwebgoat-lessons%2Fjwt%2Fsrc%2Fmain%2Fjava%2Forg%2Fowasp%2Fwebgoat%2Fjwt%2FJWTFinalEndpoint.java)\n\nUntrusted user-supplied data is inserted into a context that can execute JavaScript without adequate validation, escaping, or filtering."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/jwt/src/main/java/org/owasp/webgoat/jwt/JWTFinalEndpoint.java"},"region":{"startLine":112}}}],"ruleId":"xss|java","partialFingerprints":{"ruleIdLocationHash/v1":"d2f1d99f2c348503a079df65697513615b472f07339163b676161493267f438d"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/jwt/src/main/java/org/owasp/webgoat/jwt/JWTFinalEndpoint.java"},"region":{"startLine":90}},"message":{"text":"Entering this function as a framework entry point. Parameter \"jsonHeader\" is tainted because it comes from an HTTP request."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/jwt/src/main/java/org/owasp/webgoat/jwt/JWTFinalEndpoint.java"},"region":{"startLine":90}},"message":{"text":"Parameter \"jsonHeader\" receives the tainted data."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/jwt/src/main/java/org/owasp/webgoat/jwt/JWTFinalEndpoint.java"},"region":{"startLine":100}},"message":{"text":"Passing the tainted data through \"io.jsonwebtoken.impl.TextCodec.encode(java.lang.String)\"."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/jwt/src/main/java/org/owasp/webgoat/jwt/JWTFinalEndpoint.java"},"region":{"startLine":112}},"message":{"text":"Concatenating \"encodedHeader\" to an HTML page allows cross-site scripting, because it was not properly sanitized for context HTML PCDATA block."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/jwt/src/main/java/org/owasp/webgoat/jwt/JWTFinalEndpoint.java"},"region":{"startLine":112}},"message":{"text":"Perform the following escaping in the following order to guard against cross-site scripting attacks with Java.\n\nFor example: \"Encode.forHtml(encodedHeader)\"\n\n\n* Use the \"Encode.forHtml\" function from the OWASP Java Encoder. This escapes the output for HTML.\n\n"}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/jwt/src/main/java/org/owasp/webgoat/jwt/JWTFinalEndpoint.java"},"region":{"startLine":114}},"message":{"text":"Printing to HTML output."}}}]}]}]},{"message":{"text":"[See in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/issues/38AEDA78BDEDB7B2CD99976F45BA10C0?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026filter=issueType%3Alocalized-name%3DImproper%20Resource%20Shutdown%20or%20Release%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dwebgoat-lessons%2Fsql-injection%2Fsrc%2Fmain%2Fjava%2Forg%2Fowasp%2Fwebgoat%2Fsql_injection%2Fintroduction%2FSqlInjectionLesson3.java)\n\nLeak of a system resource"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson3.java"},"region":{"startLine":75}}}],"ruleId":"resource_leak|java","partialFingerprints":{"ruleIdLocationHash/v1":"5e380bb0a290838ccb92b786e6ca8842525423ca7b003e861128a1e068181556"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson3.java"},"region":{"startLine":63}},"message":{"text":"A new resource is returned from allocation method \"createStatement\"."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson3.java"},"region":{"startLine":63}},"message":{"text":"Assigning: \"checkStatement\" = resource returned from \"connection.createStatement(1004, 1007)\"."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson3.java"},"region":{"startLine":66}},"message":{"text":"Resource \"checkStatement\" is not closed or saved in \"executeQuery\"."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson3.java"},"region":{"startLine":70}},"message":{"text":"Condition \"results.getString(\"department\").equals(\"Sales\")\", taking false branch."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson3.java"},"region":{"startLine":75}},"message":{"text":"Variable \"checkStatement\" going out of scope leaks the resource it refers to."}}}]}]}]},{"message":{"text":"[See in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/issues/6F453C95537AB28758F88B7BF5E1A031?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026filter=issueType%3Alocalized-name%3DUC:%20Useless%20code%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dwebgoat-lessons%2Fclient-side-filtering%2Fsrc%2Fmain%2Fjava%2Forg%2Fowasp%2Fwebgoat%2Fclient_side_filtering%2FSalaries.java)\n\nOur analysis shows that this object is useless. (\u003ca href=\"/doc/en/spotbugs/sb_checker_ref.html#FB.UC_USELESS_OBJECT\" target=\"_blank\"\u003eFrom SpotBugs description\u003c/a\u003e)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/client-side-filtering/src/main/java/org/owasp/webgoat/client_side_filtering/Salaries.java"},"region":{"startLine":95}}}],"ruleId":"FB.UC_USELESS_OBJECT|java","partialFingerprints":{"ruleIdLocationHash/v1":"00bd2ebdd985ee6e733fa091923d0e33acf7b0732af4c3986818198ca3e5e5d0"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/client-side-filtering/src/main/java/org/owasp/webgoat/client_side_filtering/Salaries.java"},"region":{"startLine":95}},"message":{"text":"Useless object stored in variable employeeJson of method org.owasp.webgoat.client_side_filtering.Salaries.invoke()."}}}]}]}]},{"message":{"text":"[See in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/issues/34472EF8E577314C2CBAB820CFAA0824?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026filter=issueType%3Alocalized-name%3DInsecure%20Target%20for%20%22Window.postMessage%28%29%22%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dwebgoat-container%2Ftarget%2Fclasses%2Fstatic%2Fjs%2Flibs%2Face.js)\n\nSending a cross-origin message without restricting the origin that can receive it."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"webgoat-container/target/classes/static/js/libs/ace.js"},"region":{"startLine":1740}}}],"ruleId":"unrestricted_cross_origin_message_target_event|javascript","partialFingerprints":{"ruleIdLocationHash/v1":"fdefc8f2a04347cafec8392519cdcf3dd5cebcb473851133c4f402c0c11c672e"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-container/target/classes/static/js/libs/ace.js"},"region":{"startLine":1728}},"message":{"text":"Assigning \"window\" to \"win\"."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-container/target/classes/static/js/libs/ace.js"},"region":{"startLine":1740}},"message":{"text":"Passing \"\"*\"\" to \"win.postMessage\"."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-container/target/classes/static/js/libs/ace.js"},"region":{"startLine":1740}},"message":{"text":"Calling the function \"win.postMessage\" with a \"targetOrigin\" argument of \"\"*\"\", rather than specifying an exact URI value."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-container/target/classes/static/js/libs/ace.js"},"region":{"startLine":1740}},"message":{"text":"Always specify an exact target origin or \"\"/\"\", not \"\"*\"\", when sending data to other windows. Using \"\"/\"\" will implicitly restrict to the same origin."}}}]}]}]},{"message":{"text":"[See in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/issues/45D504FD04BBE17EF430C4EECC3D4AE4?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026filter=issueType%3Alocalized-name%3DUse%20of%20Hard-coded%20Credentials%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dwebgoat-lessons%2Fjwt%2Fsrc%2Ftest%2Fjava%2Forg%2Fowasp%2Fwebgoat%2Fjwt%2FJWTRefreshEndpointTest.java)\n\nA secret, such as a password, cryptographic key, or token is stored in plaintext directly in the source code, in an application's properties, or configuration file. Users with access to the secret may then use the secret to access resources that they otherwise would not have access to."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/jwt/src/test/java/org/owasp/webgoat/jwt/JWTRefreshEndpointTest.java"},"region":{"startLine":99}}}],"ruleId":"sigma.hardcoded_secret:pattern|java","partialFingerprints":{"ruleIdLocationHash/v1":"7157bc53afd31bfde2013f61277f3709db4f15c3f0340bedc7ea0a26f3c5560f"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/jwt/src/test/java/org/owasp/webgoat/jwt/JWTRefreshEndpointTest.java"},"region":{"startLine":99}},"message":{"text":"A secret, such as a password, cryptographic key, or token is stored in plaintext directly in the source code, in an application's properties, or configuration file. Users with access to the secret may then use the secret to access resources that they otherwise would not have access to. Secret type: Bearer token."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/jwt/src/test/java/org/owasp/webgoat/jwt/JWTRefreshEndpointTest.java"},"region":{"startLine":99}},"message":{"text":"Avoid setting sensitive configuration values as string literals. Instead, these values should be set using variables with the sensitive data loaded from an encrypted file or a secret store."}}}]}]}]},{"message":{"text":"[See in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/issues/4162885DBDA692A5CB111113C3D75C8C?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026filter=issueType%3Alocalized-name%3DUnreachable%252C%20Unused%20or%20Dead%20Code%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dwebgoat-container%2Ftarget%2Fclasses%2Fstatic%2Fjs%2FgoatApp%2Fview%2FPaginationControlView.js)\n\nAn expression is useless because it has no side effects and its result is ignored."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"webgoat-container/target/classes/static/js/goatApp/view/PaginationControlView.js"},"region":{"startLine":147}}}],"ruleId":"no_effect|javascript","partialFingerprints":{"ruleIdLocationHash/v1":"77ac266e93fc0ac0835eb17c45c05884495b4124f01bc07aa2f0b9ce073fe8ae"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-container/target/classes/static/js/goatApp/view/PaginationControlView.js"},"region":{"startLine":147}},"message":{"text":"Accessing data with \"this.showPrevPageButton\" and discarding the result. What was this code intended to accomplish?"}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-container/target/classes/static/js/goatApp/view/PaginationControlView.js"},"region":{"startLine":147}},"message":{"text":"Perhaps this code is incomplete or mistyped in some way."}}}]}]}]},{"message":{"text":"[See in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/issues/46B35BF4F33486B5C91B093DC851C87A?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026filter=issueType%3Alocalized-name%3DIncorrect%20Check%20of%20Function%20Return%20Value%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dwebgoat-lessons%2Fpath-traversal%2Fsrc%2Fmain%2Fjava%2Forg%2Fowasp%2Fwebgoat%2Fpath_traversal%2FProfileUploadBase.java)\n\nThis method returns a value that is not checked. (\u003ca href=\"/doc/en/spotbugs/sb_checker_ref.html#FB.RV_RETURN_VALUE_IGNORED_BAD_PRACTICE\" target=\"_blank\"\u003eFrom SpotBugs description\u003c/a\u003e)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/path-traversal/src/main/java/org/owasp/webgoat/path_traversal/ProfileUploadBase.java"},"region":{"startLine":42}}}],"ruleId":"FB.RV_RETURN_VALUE_IGNORED_BAD_PRACTICE|java","partialFingerprints":{"ruleIdLocationHash/v1":"cdbd51bc26687d3b66e8788faa92c3a72231b13c60493200f22778b4427d865b"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/path-traversal/src/main/java/org/owasp/webgoat/path_traversal/ProfileUploadBase.java"},"region":{"startLine":42}},"message":{"text":"Exceptional return value of java.io.File.createNewFile() ignored."}}}]}]}]},{"message":{"text":"[See in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/issues/E3482E5A9592C82D95923C0A0290AD98?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026filter=issueType%3Alocalized-name%3DImproper%20Resource%20Shutdown%20or%20Release%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dwebgoat-lessons%2Fsql-injection%2Fsrc%2Fmain%2Fjava%2Forg%2Fowasp%2Fwebgoat%2Fsql_injection%2Fadvanced%2FSqlInjectionChallengeLogin.java)\n\nLeak of a system resource"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/advanced/SqlInjectionChallengeLogin.java"},"region":{"startLine":60}}}],"ruleId":"resource_leak|java","partialFingerprints":{"ruleIdLocationHash/v1":"93018671ecb6d376307f90c4178f81278a5f218340b4704cc9515384ab70afdb"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/advanced/SqlInjectionChallengeLogin.java"},"region":{"startLine":51}},"message":{"text":"A new resource is returned from allocation method \"prepareStatement\"."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/advanced/SqlInjectionChallengeLogin.java"},"region":{"startLine":51}},"message":{"text":"Assigning: \"statement\" = resource returned from \"connection.prepareStatement(\"select password from sql_challenge_users where userid = ? and password = ?\")\"."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/advanced/SqlInjectionChallengeLogin.java"},"region":{"startLine":52}},"message":{"text":"Resource \"statement\" is not closed or saved in \"setString\"."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/advanced/SqlInjectionChallengeLogin.java"},"region":{"startLine":53}},"message":{"text":"Resource \"statement\" is not closed or saved in \"setString\"."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/advanced/SqlInjectionChallengeLogin.java"},"region":{"startLine":54}},"message":{"text":"Resource \"statement\" is not closed or saved in \"executeQuery\"."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/advanced/SqlInjectionChallengeLogin.java"},"region":{"startLine":56}},"message":{"text":"Condition \"resultSet.next()\", taking false branch."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/advanced/SqlInjectionChallengeLogin.java"},"region":{"startLine":60}},"message":{"text":"Variable \"statement\" going out of scope leaks the resource it refers to."}}}]}]}]},{"message":{"text":"[See in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/issues/9393B3CAD8E1B7520512BB8404071566?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026filter=issueType%3Alocalized-name%3DFiles%20or%20Directories%20Accessible%20to%20External%20Parties%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dgoat-with-reverseproxy.yaml)\n\nThe docker service container is configured to permit writing to the root filesystem. This makes some security attack vectors such as privilege escalation, denial-of-service or authorization bypass possible since the container instance's filesystem can be tampered with."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"goat-with-reverseproxy.yaml"},"region":{"startLine":36}}}],"ruleId":"sigma.container_filesystem_write:docker_compose|text","partialFingerprints":{"ruleIdLocationHash/v1":"b68dfaffdc728f52807c58fc74d22045256b0c6d2ae5c6d3a65a919c78d9f154"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"goat-with-reverseproxy.yaml"},"region":{"startLine":36}},"message":{"text":"The docker service container is configured to permit writing to the root filesystem. This makes some security attack vectors such as privilege escalation, denial-of-service or authorization bypass possible since the container instance's filesystem can be tampered with."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"goat-with-reverseproxy.yaml"},"region":{"startLine":36}},"message":{"text":"Explicitly set the `read-only` attribute of the service to `true` to create a service container with a read-only filesystem."}}}]}]}]},{"message":{"text":"[See in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/issues/3A7A4737FC62C11A3F90AE643D350E23?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026filter=issueType%3Alocalized-name%3DUseless%20Call%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dwebgoat-lessons%2Fvulnerable-components%2Fsrc%2Fmain%2Fjava%2Forg%2Fowasp%2Fwebgoat%2Fvulnerable_components%2FVulnerableComponentsLesson.java)\n\nA function is called that is only useful for its return value, and this value is ignored."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/vulnerable-components/src/main/java/org/owasp/webgoat/vulnerable_components/VulnerableComponentsLesson.java"},"region":{"startLine":60}}}],"ruleId":"useless_call|java","partialFingerprints":{"ruleIdLocationHash/v1":"bea83548e8ba5d079d46a57a278221a7b868645e65c866580cdfd5eb9a809dbd"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/vulnerable-components/src/main/java/org/owasp/webgoat/vulnerable_components/VulnerableComponentsLesson.java"},"region":{"startLine":60}},"message":{"text":"Calling \"contact.getFirstName()\" is only useful for its return value, which is ignored. (The virtual call resolves to \"org.owasp.webgoat.vulnerable_components.ContactImpl.getFirstName\".)"}}}]}]}]},{"message":{"text":"[See in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/issues/C5C9B4BB9271234645ED636A3AAFC3A4?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026filter=issueType%3Alocalized-name%3DUncontrolled%20Resource%20Consumption%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3DplatformQuickStarts%2FGCP%2FGKE-Docker%2Fwebgoat_deployment_noDNSnoTLS.yml)\n\nThe Kubernetes container does not have a set memory limit, allowing it to exhaust all memory resources or cause excessive cloud usage bills."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"platformQuickStarts/GCP/GKE-Docker/webgoat_deployment_noDNSnoTLS.yml"},"region":{"startLine":33}}}],"ruleId":"sigma.container_missing_memory_limit:kubernetes|text","partialFingerprints":{"ruleIdLocationHash/v1":"b8657dd0179183f76aed66b7216f9fc01c8206af35b440bc9e075bed9bb31d7f"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"platformQuickStarts/GCP/GKE-Docker/webgoat_deployment_noDNSnoTLS.yml"},"region":{"startLine":33}},"message":{"text":"The Kubernetes container does not have a set memory limit, allowing it to exhaust all memory resources or cause excessive cloud usage bills."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"platformQuickStarts/GCP/GKE-Docker/webgoat_deployment_noDNSnoTLS.yml"},"region":{"startLine":33}},"message":{"text":"Each container defined in either the `containers` or `initContainers` blocks should have a `resources.limits.memory` field to restrict memory usage. Note that unlike the `requests.memory` field that sets the initial memory allocated for a container, `limits.memory` sets a hard limit for the maximum amount of memory that can be consumed by the container."}}}]}]}]},{"message":{"text":"[See in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/issues/13B60C0492341CFCB569257D015A146E?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026filter=issueType%3Alocalized-name%3DUse%20of%20Hard-coded%20Credentials%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dwebwolf%2Fsrc%2Ftest%2Fjava%2Forg%2Fowasp%2Fwebwolf%2Fuser%2FUserValidatorTest.java)\n\nA secret, such as a password, cryptographic key, or token is stored in plaintext directly in the source code, in an application's properties, or configuration file. Users with access to the secret may then use the secret to access resources that they otherwise would not have access to."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"webwolf/src/test/java/org/owasp/webwolf/user/UserValidatorTest.java"},"region":{"startLine":81}}}],"ruleId":"sigma.hardcoded_secret:pattern|java","partialFingerprints":{"ruleIdLocationHash/v1":"700ae634da23acdbc2557dbe1bc0dead18063c5b077e3556cdf70f75e8da8ade"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"webwolf/src/test/java/org/owasp/webwolf/user/UserValidatorTest.java"},"region":{"startLine":81}},"message":{"text":"A secret, such as a password, cryptographic key, or token is stored in plaintext directly in the source code, in an application's properties, or configuration file. Users with access to the secret may then use the secret to access resources that they otherwise would not have access to. Secret type: Password (generic)."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webwolf/src/test/java/org/owasp/webwolf/user/UserValidatorTest.java"},"region":{"startLine":81}},"message":{"text":"Avoid setting sensitive configuration values as string literals. Instead, these values should be set using variables with the sensitive data loaded from an encrypted file or a secret store."}}}]}]}]},{"message":{"text":"[See in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/issues/6FB4438FF9D0DD0DAF997FD911EA2295?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026filter=issueType%3Alocalized-name%3DInsufficient%20Session%20Expiration%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dwebgoat-lessons%2Fjwt%2Fsrc%2Ftest%2Fjava%2Forg%2Fowasp%2Fwebgoat%2Fjwt%2FTokenTest.java)\n\nThe instance of `JwtBuilder` doesn't set the expiration time when generating the token. Ignoring the expiration time for a JSON web token means it is valid forever. Since the token never expires, an attacker has a longer window to brute-force or exploit the stolen the token."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/jwt/src/test/java/org/owasp/webgoat/jwt/TokenTest.java"},"region":{"startLine":44}}}],"ruleId":"sigma.jwt_non_expiring_token:io_jsonwebtoken|java","partialFingerprints":{"ruleIdLocationHash/v1":"4439166749a01ea5793e131e0f8ccad72e2125cbe0f03974304d19d38a47740b"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/jwt/src/test/java/org/owasp/webgoat/jwt/TokenTest.java"},"region":{"startLine":44}},"message":{"text":"The instance of `JwtBuilder` doesn't set the expiration time when generating the token. Ignoring the expiration time for a JSON web token means it is valid forever. Since the token never expires, an attacker has a longer window to brute-force or exploit the stolen the token."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/jwt/src/test/java/org/owasp/webgoat/jwt/TokenTest.java"},"region":{"startLine":44}},"message":{"text":"Set the expiration time of the token by invoking `JwtBuilder.setExpiration()` or `Claims.setExpiration()`."}}}]}]}]},{"message":{"text":"[See in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/issues/9956C270A26817A86622B6D93779AE65?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026filter=issueType%3Alocalized-name%3DUse%20of%20Hard-coded%20Credentials%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dwebgoat-integration-tests%2Fsrc%2Ftest%2Fjava%2Forg%2Fowasp%2Fwebgoat%2FPasswordResetLessonTest.java)\n\nA secret, such as a password, cryptographic key, or token is stored in plaintext directly in the source code, in an application's properties, or configuration file. Users with access to the secret may then use the secret to access resources that they otherwise would not have access to."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"webgoat-integration-tests/src/test/java/org/owasp/webgoat/PasswordResetLessonTest.java"},"region":{"startLine":68}}}],"ruleId":"sigma.hardcoded_secret:pattern|java","partialFingerprints":{"ruleIdLocationHash/v1":"ec5258610f855b4de9d72b47bcec2518230385fe9623a6eaa99d9ebaff20d31d"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-integration-tests/src/test/java/org/owasp/webgoat/PasswordResetLessonTest.java"},"region":{"startLine":68}},"message":{"text":"A secret, such as a password, cryptographic key, or token is stored in plaintext directly in the source code, in an application's properties, or configuration file. Users with access to the secret may then use the secret to access resources that they otherwise would not have access to. Secret type: Password (generic)."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-integration-tests/src/test/java/org/owasp/webgoat/PasswordResetLessonTest.java"},"region":{"startLine":68}},"message":{"text":"Avoid setting sensitive configuration values as string literals. Instead, these values should be set using variables with the sensitive data loaded from an encrypted file or a secret store."}}}]}]}]},{"message":{"text":"[See in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/issues/7B38873182624B700876A4C6CEF3C7B9?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026filter=issueType%3Alocalized-name%3DAssignment%20to%20Variable%20without%20Use%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dwebgoat-lessons%2Fcross-site-scripting%2Fsrc%2Ftest%2Fjava%2Forg%2Fowasp%2Fwebgoat%2Fxss%2FDOMCrossSiteScriptingTest.java)\n\nThis instruction assigns a value to a local variable, but the value is not read or used in any subsequent instruction. (\u003ca href=\"/doc/en/spotbugs/sb_checker_ref.html#FB.DLS_DEAD_LOCAL_STORE\" target=\"_blank\"\u003eFrom SpotBugs description\u003c/a\u003e)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/cross-site-scripting/src/test/java/org/owasp/webgoat/xss/DOMCrossSiteScriptingTest.java"},"region":{"startLine":54}}}],"ruleId":"FB.DLS_DEAD_LOCAL_STORE|java","partialFingerprints":{"ruleIdLocationHash/v1":"fdb629b07d369309357833152965e6743c3eafd21880adc875528ea4ebeddea7"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/cross-site-scripting/src/test/java/org/owasp/webgoat/xss/DOMCrossSiteScriptingTest.java"},"region":{"startLine":54}},"message":{"text":"Dead store to xss."}}}]}]}]},{"message":{"text":"[See in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/issues/BAC1203C0C4B96478E3CF6A755046FF9?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026filter=issueType%3Alocalized-name%3DSQL%20Injection%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dwebgoat-lessons%2Fsql-injection%2Fsrc%2Fmain%2Fjava%2Forg%2Fowasp%2Fwebgoat%2Fsql_injection%2Fmitigation%2FSqlOnlyInputValidationOnKeywords.java)\n\nUntrusted user-supplied data is inserted into a SQL statement without adequate validation, escaping, or filtering."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/mitigation/SqlOnlyInputValidationOnKeywords.java"},"region":{"startLine":53}}}],"ruleId":"sql_injection:sink|java","partialFingerprints":{"ruleIdLocationHash/v1":"699460cd21f2d094f13e7ed302ae9ff42f50ffb5eec6668abceb135d6ae637d7"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/mitigation/SqlOnlyInputValidationOnKeywords.java"},"region":{"startLine":48}},"message":{"text":"\"attack\" is an entry point function."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/mitigation/SqlOnlyInputValidationOnKeywords.java"},"region":{"startLine":48}},"message":{"text":"The \"userId\" is tainted."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/mitigation/SqlOnlyInputValidationOnKeywords.java"},"region":{"startLine":49}},"message":{"text":"Calling \"toUpperCase\". This call assigns \"userId\" to \"\u003creturn value\u003e\". Now \"\u003creturn value\u003e\" is tainted. (The virtual call resolves to \"java.lang.String.toUpperCase()\".)"}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/mitigation/SqlOnlyInputValidationOnKeywords.java"},"region":{"startLine":49}},"message":{"text":"Calling \"replace\". This call assigns \"userId.toUpperCase()\" to \"\u003creturn value\u003e\". Now \"\u003creturn value\u003e\" is tainted. (The virtual call resolves to \"java.lang.String.replace(java.lang.CharSequence, java.lang.CharSequence)\".)"}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/mitigation/SqlOnlyInputValidationOnKeywords.java"},"region":{"startLine":49}},"message":{"text":"Assigning: \"userId\" = \"userId.toUpperCase().replace(\"FROM\", \"\").replace(\"SELECT\", \"\")\"."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/mitigation/SqlOnlyInputValidationOnKeywords.java"},"region":{"startLine":53}},"message":{"text":"Calling \"injectableQuery\". Passing the tainted value \"userId\" to the SQL API may allow an attacker to inject SQL. (The virtual call resolves to \"org.owasp.webgoat.sql_injection.advanced.SqlInjectionLesson6a.injectableQuery(java.lang.String)\".)"}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/mitigation/SqlOnlyInputValidationOnKeywords.java"},"region":{"startLine":53}},"message":{"text":"Use one of the following methods:\n* Use a query-preparation API to safely construct the SQL query containing user-supplied values.\n* Only concatenate a user-supplied value into a query if it has been checked against a whitelist of safe string values, or if it must be a Boolean or numeric type.\n"}}}]}]}]},{"message":{"text":"[See in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/issues/446B9A2D7ADEE4CBF65DDEC01E1EA724?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026filter=issueType%3Alocalized-name%3DSIC:%20Inner%20class%20could%20be%20made%20static%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dwebgoat-container%2Fsrc%2Ftest%2Fjava%2Forg%2Fowasp%2Fwebgoat%2Fusers%2FUserTrackerRepositoryTest.java)\n\nThis class is an inner class, but does not use its embedded reference to the object which created it. (\u003ca href=\"/doc/en/spotbugs/sb_checker_ref.html#FB.SIC_INNER_SHOULD_BE_STATIC\" target=\"_blank\"\u003eFrom SpotBugs description\u003c/a\u003e)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"webgoat-container/src/test/java/org/owasp/webgoat/users/UserTrackerRepositoryTest.java"},"region":{"startLine":22}}}],"ruleId":"FB.SIC_INNER_SHOULD_BE_STATIC|java","partialFingerprints":{"ruleIdLocationHash/v1":"8385617c528d9951e5b53f8d73d1fa6caf0f36bf7b28d71dc22a146d75eec98e"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-container/src/test/java/org/owasp/webgoat/users/UserTrackerRepositoryTest.java"},"region":{"startLine":22}},"message":{"text":"Should org.owasp.webgoat.users.UserTrackerRepositoryTest$TestLesson be a _static_ inner class?"}}}]}]}]},{"message":{"text":"[See in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/issues/C502F4F22F58DF142DB05C3571FBE0F4?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026filter=issueType%3Alocalized-name%3DDm:%20Dubious%20method%20used%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dwebgoat-integration-tests%2Fsrc%2Ftest%2Fjava%2Forg%2Fowasp%2Fwebgoat%2FXXETest.java)\n\nFound a call to a method which will perform a byte to String (or String to byte) conversion, and will assume that the default platform encoding is suitable. (\u003ca href=\"/doc/en/spotbugs/sb_checker_ref.html#FB.DM_DEFAULT_ENCODING\" target=\"_blank\"\u003eFrom SpotBugs description\u003c/a\u003e)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"webgoat-integration-tests/src/test/java/org/owasp/webgoat/XXETest.java"},"region":{"startLine":54}}}],"ruleId":"FB.DM_DEFAULT_ENCODING|java","partialFingerprints":{"ruleIdLocationHash/v1":"a7a0bb758f23af0d16201f04831dee8bf96e27f32f5880bd5271f8bda79f4767"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-integration-tests/src/test/java/org/owasp/webgoat/XXETest.java"},"region":{"startLine":54}},"message":{"text":"Found reliance on default encoding: String.getBytes()."}}}]}]}]},{"message":{"text":"[See in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/issues/02F77D7529824C60AF45DE05F2301A62?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026filter=issueType%3Alocalized-name%3DExpected%20Behavior%20Violation%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dwebgoat-lessons%2Fcrypto%2Fsrc%2Fmain%2Fjava%2Forg%2Fowasp%2Fwebgoat%2Fcrypto%2FCryptoUtil.java)\n\nThis code creates a java.util.Random object, uses it to generate one random number, and then discards the Random object. (\u003ca href=\"/doc/en/spotbugs/sb_checker_ref.html#FB.DMI_RANDOM_USED_ONLY_ONCE\" target=\"_blank\"\u003eFrom SpotBugs description\u003c/a\u003e)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/crypto/src/main/java/org/owasp/webgoat/crypto/CryptoUtil.java"},"region":{"startLine":36}}}],"ruleId":"FB.DMI_RANDOM_USED_ONLY_ONCE|java","partialFingerprints":{"ruleIdLocationHash/v1":"fe77706ee2467e34d43f4defe681421f5f89e426048ec860ff2d29642707df81"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/crypto/src/main/java/org/owasp/webgoat/crypto/CryptoUtil.java"},"region":{"startLine":36}},"message":{"text":"Random object created and used only once."}}}]}]}]},{"message":{"text":"[See in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/issues/823D34C87FA481D211FB1969E655E2BD?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026filter=issueType%3Alocalized-name%3DCross-Site%20Request%20Forgery%20%28CSRF%29%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dwebwolf%2Fsrc%2Fmain%2Fjava%2Forg%2Fowasp%2Fwebwolf%2Fuser%2FRegistrationController.java)\n\nThe web application controller modifies data or state and is unprotected from cross-site request forgery."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"webwolf/src/main/java/org/owasp/webwolf/user/RegistrationController.java"},"region":{"startLine":58}}}],"ruleId":"csrf:database_update|java","partialFingerprints":{"ruleIdLocationHash/v1":"186ec59f2254c5d0c90953652c48e9d610e2e3dc19e5e17c2362a70ea96e3dac"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-integration-tests/src/test/java/org/owasp/webgoat/CSRFTest.java"},"region":{"startLine":70}},"message":{"text":"Example 1: Examples of CSRF validator calls."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webwolf/src/main/java/org/owasp/webwolf/user/RegistrationController.java"},"region":{"startLine":58}},"message":{"text":"\"org.owasp.webwolf.user.RegistrationController.registration\" is a web-app entry point that requires protection from cross-site request forgery (CSRF)."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webwolf/src/main/java/org/owasp/webwolf/user/RegistrationController.java"},"region":{"startLine":58}},"message":{"text":"Use the CSRF validator method \"org.owasp.webgoat.CSRFTest.checkAssignment3\" to protect against CSRF. Please refer to the examples of its use elsewhere."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webwolf/src/main/java/org/owasp/webwolf/user/RegistrationController.java"},"region":{"startLine":61}},"message":{"text":"Condition \"bindingResult.hasErrors()\", taking false branch."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webwolf/src/main/java/org/owasp/webwolf/user/RegistrationController.java"},"region":{"startLine":64}},"message":{"text":"Calling \"addUser\" updates the database."}}}]}]}]},{"message":{"text":"[See in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/issues/920CDB62E6ED3D66B39B283501D39686?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026filter=issueType%3Alocalized-name%3DFiles%20or%20Directories%20Accessible%20to%20External%20Parties%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Ddocker-compose-local.yml)\n\nThe docker service container is configured to permit writing to the root filesystem. This makes some security attack vectors such as privilege escalation, denial-of-service or authorization bypass possible since the container instance's filesystem can be tampered with."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"docker-compose-local.yml"},"region":{"startLine":5}}}],"ruleId":"sigma.container_filesystem_write:docker_compose|text","partialFingerprints":{"ruleIdLocationHash/v1":"36beec5c0c53204ab2c64cfe5e31962d3686ab71dde874bbe1097fe4786a8700"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"docker-compose-local.yml"},"region":{"startLine":5}},"message":{"text":"The docker service container is configured to permit writing to the root filesystem. This makes some security attack vectors such as privilege escalation, denial-of-service or authorization bypass possible since the container instance's filesystem can be tampered with."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"docker-compose-local.yml"},"region":{"startLine":5}},"message":{"text":"Explicitly set the `read-only` attribute of the service to `true` to create a service container with a read-only filesystem."}}}]}]}]},{"message":{"text":"[See in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/issues/4EF5BE0B8AF107346376E1225036480B?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026filter=issueType%3Alocalized-name%3DUse%20of%20Hard-coded%20Cryptographic%20Key%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dwebgoat-lessons%2Fjwt%2Fsrc%2Fmain%2Fjava%2Forg%2Fowasp%2Fwebgoat%2Fjwt%2FJWTRefreshEndpoint.java)\n\nA cryptographic key is stored directly in the source code."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/jwt/src/main/java/org/owasp/webgoat/jwt/JWTRefreshEndpoint.java"},"region":{"startLine":91}}}],"ruleId":"hardcoded_credentials:cryptographic_key|java","partialFingerprints":{"ruleIdLocationHash/v1":"a59301ba05840765bdaf7dab250312f41a2c49a0a2a63423b5735b6e2703bd53"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/jwt/src/main/java/org/owasp/webgoat/jwt/JWTRefreshEndpoint.java"},"region":{"startLine":91}},"message":{"text":"The constant string \"\"bm5n3SkxCX4kKRy4\"\" is a credential or key."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/jwt/src/main/java/org/owasp/webgoat/jwt/JWTRefreshEndpoint.java"},"region":{"startLine":91}},"message":{"text":"Calling \"setSigningKey\". This call uses the constant string as a cryptographic key. (The virtual call resolves to \"io.jsonwebtoken.JwtParser.setSigningKey(java.lang.String)\".)"}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/jwt/src/main/java/org/owasp/webgoat/jwt/JWTRefreshEndpoint.java"},"region":{"startLine":91}},"message":{"text":"Cryptographic keys should be stored in a Properties file in a location that is inaccessible to unauthorized users."}}}]}]}]},{"message":{"text":"[See in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/issues/859A8A7EAF4EA155B51360A8C5971FAD?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026filter=issueType%3Alocalized-name%3DFiles%20or%20Directories%20Accessible%20to%20External%20Parties%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Ddocker-compose-postgres.yml)\n\nThe docker service container is configured to permit writing to the root filesystem. This makes some security attack vectors such as privilege escalation, denial-of-service or authorization bypass possible since the container instance's filesystem can be tampered with."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"docker-compose-postgres.yml"},"region":{"startLine":30}}}],"ruleId":"sigma.container_filesystem_write:docker_compose|text","partialFingerprints":{"ruleIdLocationHash/v1":"16a9521515ada1619c9b629f5d6b684d76f237601c1994da5a5aaaba9e5df217"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"docker-compose-postgres.yml"},"region":{"startLine":30}},"message":{"text":"The docker service container is configured to permit writing to the root filesystem. This makes some security attack vectors such as privilege escalation, denial-of-service or authorization bypass possible since the container instance's filesystem can be tampered with."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"docker-compose-postgres.yml"},"region":{"startLine":30}},"message":{"text":"Explicitly set the `read-only` attribute of the service to `true` to create a service container with a read-only filesystem."}}}]}]}]},{"message":{"text":"[See in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/issues/22ABAC494A64E23B44DE3296B5AE346D?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026filter=issueType%3Alocalized-name%3DCleartext%20Storage%20of%20Sensitive%20Information%20in%20GUI%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dwebgoat-lessons%2Fjwt%2Fsrc%2Fmain%2Fjava%2Forg%2Fowasp%2Fwebgoat%2Fjwt%2FJWTRefreshEndpoint.java)\n\nDisplaying sensitive data in the user interface."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/jwt/src/main/java/org/owasp/webgoat/jwt/JWTRefreshEndpoint.java"},"region":{"startLine":62}}}],"ruleId":"sensitive_data_leak:cleartext_in_gui|java","partialFingerprints":{"ruleIdLocationHash/v1":"c2754a6ee373f34b33b1fa4fbd35aa0abef942682ec3a66cd65315fbe7dfda1e"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/jwt/src/main/java/org/owasp/webgoat/jwt/JWTRefreshEndpoint.java"},"region":{"startLine":54}},"message":{"text":"\"follow\" is an entry point function."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/jwt/src/main/java/org/owasp/webgoat/jwt/JWTRefreshEndpoint.java"},"region":{"startLine":62}},"message":{"text":"Calling \"createNewTokens\". This call stores sensitive data in \"\u003creturn value\u003e.access_token\"."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/jwt/src/main/java/org/owasp/webgoat/jwt/JWTRefreshEndpoint.java"},"region":{"startLine":62}},"message":{"text":"Calling \"ok\". This shows the sensitive data \"createNewTokens(user)\" in a user interface. It may be exposed to unintended individuals."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/jwt/src/main/java/org/owasp/webgoat/jwt/JWTRefreshEndpoint.java"},"region":{"startLine":62}},"message":{"text":"Do not leak this data to a user interface."}}}]}]}]},{"message":{"text":"[See in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/issues/F812EF168682BE050E5AE364DB8AFB4E?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026filter=issueType%3Alocalized-name%3DUse%20of%20Hard-coded%20Credentials%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dwebgoat-lessons%2Fjwt%2Fsrc%2Ftest%2Fjava%2Forg%2Fowasp%2Fwebgoat%2Fjwt%2FJWTRefreshEndpointTest.java)\n\nA secret, such as a password, cryptographic key, or token is stored in plaintext directly in the source code, in an application's properties, or configuration file. Users with access to the secret may then use the secret to access resources that they otherwise would not have access to."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/jwt/src/test/java/org/owasp/webgoat/jwt/JWTRefreshEndpointTest.java"},"region":{"startLine":76}}}],"ruleId":"sigma.hardcoded_secret:pattern|java","partialFingerprints":{"ruleIdLocationHash/v1":"49f1f57414bf8ac3e7be06bd80dd557263ac5464f48c6f8cf41d1a5404e266ca"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/jwt/src/test/java/org/owasp/webgoat/jwt/JWTRefreshEndpointTest.java"},"region":{"startLine":76}},"message":{"text":"A secret, such as a password, cryptographic key, or token is stored in plaintext directly in the source code, in an application's properties, or configuration file. Users with access to the secret may then use the secret to access resources that they otherwise would not have access to. Secret type: Access token (generic)."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/jwt/src/test/java/org/owasp/webgoat/jwt/JWTRefreshEndpointTest.java"},"region":{"startLine":76}},"message":{"text":"Avoid setting sensitive configuration values as string literals. Instead, these values should be set using variables with the sensitive data loaded from an encrypted file or a secret store."}}}]}]}]},{"message":{"text":"[See in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/issues/AFC2C79A90630FDA6E342EF58C83ABBC?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026filter=issueType%3Alocalized-name%3DUnreachable%252C%20Unused%20or%20Dead%20Code%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dwebgoat-container%2Ftarget%2Fclasses%2Fstatic%2Fplugins%2Fbootstrap-slider%2Fjs%2Fbootstrap-slider.js)\n\nAn expression is useless because it has no side effects and its result is ignored."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"webgoat-container/target/classes/static/plugins/bootstrap-slider/js/bootstrap-slider.js"},"region":{"startLine":290}}}],"ruleId":"no_effect|javascript","partialFingerprints":{"ruleIdLocationHash/v1":"6954bfcef875652c92cbfd76ba689564602567c79686ddb4b23618d4cfbad977"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-container/target/classes/static/plugins/bootstrap-slider/js/bootstrap-slider.js"},"region":{"startLine":290}},"message":{"text":"Accessing data with \"this.element\" and discarding the result. What was this code intended to accomplish?"}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-container/target/classes/static/plugins/bootstrap-slider/js/bootstrap-slider.js"},"region":{"startLine":290}},"message":{"text":"Perhaps this code is incomplete or mistyped in some way."}}}]}]}]},{"message":{"text":"[See in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/issues/D6B6A284DC5459DE4996A07DAD36C75F?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026filter=issueType%3Alocalized-name%3DInsecure%20Link%20Target%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Ddocker%2Findex.html)\n\nThe application uses an anchor tag whose `target` attribute is set to `_blank`, but the `rel` attribute is not set with the `noopener` value. The page opened from that target link may have the access to the `location` object of the original page through `window.opener.location`. A malicious page associated with this link will be able to navigate the original page to an arbitrary site, such as a phishing site, and thus, execute a reverse tabnabbing attack.\nNote that most contemporary browsers add the `noopener` value to the `rel` automatically by default. Thus, only users with older versions of browsers are targets for this phishing attack."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"docker/index.html"},"region":{"startLine":39}}}],"ruleId":"sigma.reverse_tabnabbing:html|html","partialFingerprints":{"ruleIdLocationHash/v1":"7debc34d0ce9c0bd6b6375c8bb01488fcb52fa8e6e3e2c9f04bbba384e4d1e1b"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"docker/index.html"},"region":{"startLine":39}},"message":{"text":"The application uses an anchor tag whose `target` attribute is set to `_blank`, but the `rel` attribute is not set with the `noopener` value. The page opened from that target link may have the access to the `location` object of the original page through `window.opener.location`. A malicious page associated with this link will be able to navigate the original page to an arbitrary site, such as a phishing site, and thus, execute a reverse tabnabbing attack.\nNote that most contemporary browsers add the `noopener` value to the `rel` automatically by default. Thus, only users with older versions of browsers are targets for this phishing attack."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"docker/index.html"},"region":{"startLine":39}},"message":{"text":"Set the `rel` attribute to include the `noopener` value, thus disallowing the linked page to access the original page through the `window.opener` object."}}}]}]}]},{"message":{"text":"[See in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/issues/48A154151F0270C6906AE149136C9ECC?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026filter=issueType%3Alocalized-name%3DExpected%20Behavior%20Violation%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dwebgoat-lessons%2Fvulnerable-components%2Fsrc%2Fmain%2Fjava%2Forg%2Fowasp%2Fwebgoat%2Fvulnerable_components%2FVulnerableComponentsLesson.java)\n\nThis code calls a method and ignores the return value. (\u003ca href=\"/doc/en/spotbugs/sb_checker_ref.html#FB.RV_RETURN_VALUE_IGNORED_NO_SIDE_EFFECT\" target=\"_blank\"\u003eFrom SpotBugs description\u003c/a\u003e)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/vulnerable-components/src/main/java/org/owasp/webgoat/vulnerable_components/VulnerableComponentsLesson.java"},"region":{"startLine":60}}}],"ruleId":"FB.RV_RETURN_VALUE_IGNORED_NO_SIDE_EFFECT|java","partialFingerprints":{"ruleIdLocationHash/v1":"6eb459361ac375b517303d7545fabd46ee434dd640e3aba5d512d6e3c5cace52"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/vulnerable-components/src/main/java/org/owasp/webgoat/vulnerable_components/VulnerableComponentsLesson.java"},"region":{"startLine":60}},"message":{"text":"Return value of Contact.getFirstName() ignored, but method has no side effect."}}}]}]}]},{"message":{"text":"[See in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/issues/DD4B666FB90A47DC922427D56C7303AE?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026filter=issueType%3Alocalized-name%3DDm:%20Dubious%20method%20used%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dwebgoat-lessons%2Fpath-traversal%2Fsrc%2Ftest%2Fjava%2Forg%2Fowasp%2Fwebgoat%2Fpath_traversal%2FProfileUploadRemoveUserInputTest.java)\n\nFound a call to a method which will perform a byte to String (or String to byte) conversion, and will assume that the default platform encoding is suitable. (\u003ca href=\"/doc/en/spotbugs/sb_checker_ref.html#FB.DM_DEFAULT_ENCODING\" target=\"_blank\"\u003eFrom SpotBugs description\u003c/a\u003e)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/path-traversal/src/test/java/org/owasp/webgoat/path_traversal/ProfileUploadRemoveUserInputTest.java"},"region":{"startLine":35}}}],"ruleId":"FB.DM_DEFAULT_ENCODING|java","partialFingerprints":{"ruleIdLocationHash/v1":"199cd4c00172e7b5a7682c1f9d70cbe5b19f4392b4a275c7e32717fc8a4acacb"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/path-traversal/src/test/java/org/owasp/webgoat/path_traversal/ProfileUploadRemoveUserInputTest.java"},"region":{"startLine":35}},"message":{"text":"Found reliance on default encoding: String.getBytes()."}}}]}]}]},{"message":{"text":"[See in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/issues/08D6C10ADA5BE4463EF25CE21C051874?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026filter=issueType%3Alocalized-name%3DFiles%20or%20Directories%20Accessible%20to%20External%20Parties%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Ddocker-compose-postgres.yml)\n\nThe docker service container is configured to permit writing to the root filesystem. This makes some security attack vectors such as privilege escalation, denial-of-service or authorization bypass possible since the container instance's filesystem can be tampered with."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"docker-compose-postgres.yml"},"region":{"startLine":5}}}],"ruleId":"sigma.container_filesystem_write:docker_compose|text","partialFingerprints":{"ruleIdLocationHash/v1":"cbbcd39f5df918c95887d3f3f1748b100a3cded8aa6cc6e3148cbae0a13f2b40"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"docker-compose-postgres.yml"},"region":{"startLine":5}},"message":{"text":"The docker service container is configured to permit writing to the root filesystem. This makes some security attack vectors such as privilege escalation, denial-of-service or authorization bypass possible since the container instance's filesystem can be tampered with."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"docker-compose-postgres.yml"},"region":{"startLine":5}},"message":{"text":"Explicitly set the `read-only` attribute of the service to `true` to create a service container with a read-only filesystem."}}}]}]}]},{"message":{"text":"[See in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/issues/497E681E27C35FF1E18249232E465C35?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026filter=issueType%3Alocalized-name%3DIncorrect%20Check%20of%20Function%20Return%20Value%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dwebwolf%2Fsrc%2Fmain%2Fjava%2Forg%2Fowasp%2Fwebwolf%2FFileServer.java)\n\nThis method returns a value that is not checked. (\u003ca href=\"/doc/en/spotbugs/sb_checker_ref.html#FB.RV_RETURN_VALUE_IGNORED_BAD_PRACTICE\" target=\"_blank\"\u003eFrom SpotBugs description\u003c/a\u003e)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"webwolf/src/main/java/org/owasp/webwolf/FileServer.java"},"region":{"startLine":105}}}],"ruleId":"FB.RV_RETURN_VALUE_IGNORED_BAD_PRACTICE|java","partialFingerprints":{"ruleIdLocationHash/v1":"cae07a87a28a0778134fe342136d199c9054707143ca2556d61e76464efeb398"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"webwolf/src/main/java/org/owasp/webwolf/FileServer.java"},"region":{"startLine":105}},"message":{"text":"Exceptional return value of java.io.File.delete() ignored."}}}]}]}]},{"message":{"text":"[See in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/issues/2570FB8187832AD75561B74334162FBB?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026filter=issueType%3Alocalized-name%3DUse%20of%20Hard-coded%20Credentials%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dwebgoat-lessons%2Fsql-injection%2Fsrc%2Fmain%2Fjava%2Forg%2Fowasp%2Fwebgoat%2Fsql_injection%2Fadvanced%2FSqlInjectionLesson6b.java)\n\nA secret, such as a password, cryptographic key, or token is stored in plaintext directly in the source code, in an application's properties, or configuration file. Users with access to the secret may then use the secret to access resources that they otherwise would not have access to."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/advanced/SqlInjectionLesson6b.java"},"region":{"startLine":61}}}],"ruleId":"sigma.hardcoded_secret:pattern|java","partialFingerprints":{"ruleIdLocationHash/v1":"ed29976e6a0bddddc51ea49b245c655aa231c5635f45c3f78c324c56e30721f5"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/advanced/SqlInjectionLesson6b.java"},"region":{"startLine":61}},"message":{"text":"A secret, such as a password, cryptographic key, or token is stored in plaintext directly in the source code, in an application's properties, or configuration file. Users with access to the secret may then use the secret to access resources that they otherwise would not have access to. Secret type: Password (generic)."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/advanced/SqlInjectionLesson6b.java"},"region":{"startLine":61}},"message":{"text":"Avoid setting sensitive configuration values as string literals. Instead, these values should be set using variables with the sensitive data loaded from an encrypted file or a secret store."}}}]}]}]},{"message":{"text":"[See in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/issues/789FF9565648B759A8599A8930849535?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026filter=issueType%3Alocalized-name%3DDm:%20Dubious%20method%20used%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dwebgoat-lessons%2Fpath-traversal%2Fsrc%2Ftest%2Fjava%2Forg%2Fowasp%2Fwebgoat%2Fpath_traversal%2FProfileUploadTest.java)\n\nFound a call to a method which will perform a byte to String (or String to byte) conversion, and will assume that the default platform encoding is suitable. (\u003ca href=\"/doc/en/spotbugs/sb_checker_ref.html#FB.DM_DEFAULT_ENCODING\" target=\"_blank\"\u003eFrom SpotBugs description\u003c/a\u003e)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/path-traversal/src/test/java/org/owasp/webgoat/path_traversal/ProfileUploadTest.java"},"region":{"startLine":49}}}],"ruleId":"FB.DM_DEFAULT_ENCODING|java","partialFingerprints":{"ruleIdLocationHash/v1":"62fbcf77043c06b59c746e659921156da021f394e8c26a1bd8073fb245f9b416"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/path-traversal/src/test/java/org/owasp/webgoat/path_traversal/ProfileUploadTest.java"},"region":{"startLine":49}},"message":{"text":"Found reliance on default encoding: String.getBytes()."}}}]}]}]},{"message":{"text":"[See in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/issues/227F6180173B01D2A69515AD594C2F88?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026filter=issueType%3Alocalized-name%3DSe:%20Incorrect%20definition%20of%20Serializable%20class%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dwebgoat-container%2Fsrc%2Fmain%2Fjava%2Forg%2Fowasp%2Fwebgoat%2Fsession%2FWebSession.java)\n\nThis Serializable class defines a non-primitive instance field which is neither transient, Serializable, or \u003ccode\u003ejava.lang.Object\u003c/code\u003e, and does not appear to implement the \u003ccode\u003eExternalizable\u003c/code\u003e interface or the \u003ccode\u003ereadObject()\u003c/code\u003e and \u003ccode\u003ewriteObject()\u003c/code\u003e methods. (\u003ca href=\"/doc/en/spotbugs/sb_checker_ref.html#FB.SE_BAD_FIELD\" target=\"_blank\"\u003eFrom SpotBugs description\u003c/a\u003e)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"webgoat-container/src/main/java/org/owasp/webgoat/session/WebSession.java"},"region":{"startLine":44}}}],"ruleId":"FB.SE_BAD_FIELD|java","partialFingerprints":{"ruleIdLocationHash/v1":"b9072a7ee562c3ad22e41b8b4f25d9491e802bd800953984443404c3dd44c62f"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-container/src/main/java/org/owasp/webgoat/session/WebSession.java"},"region":{"startLine":44}},"message":{"text":"Class org.owasp.webgoat.session.WebSession defines non-transient non-serializable instance field currentLesson."}}}]}]}]},{"message":{"text":"[See in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/issues/3B9E01CAD2F399183D8C2328C830ED5E?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026filter=issueType%3Alocalized-name%3DFiles%20or%20Directories%20Accessible%20to%20External%20Parties%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Ddocker-compose-local.yml)\n\nThe docker service container is configured to permit writing to the root filesystem. This makes some security attack vectors such as privilege escalation, denial-of-service or authorization bypass possible since the container instance's filesystem can be tampered with."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"docker-compose-local.yml"},"region":{"startLine":10}}}],"ruleId":"sigma.container_filesystem_write:docker_compose|text","partialFingerprints":{"ruleIdLocationHash/v1":"65d7c977996f7bebe6e32511ec4f19bf5d022bb9f6dd8f726edc39c5f891abe1"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"docker-compose-local.yml"},"region":{"startLine":10}},"message":{"text":"The docker service container is configured to permit writing to the root filesystem. This makes some security attack vectors such as privilege escalation, denial-of-service or authorization bypass possible since the container instance's filesystem can be tampered with."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"docker-compose-local.yml"},"region":{"startLine":10}},"message":{"text":"Explicitly set the `read-only` attribute of the service to `true` to create a service container with a read-only filesystem."}}}]}]}]},{"message":{"text":"[See in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/issues/66DE03980F1B5A59B4067D163AD16B98?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026filter=issueType%3Alocalized-name%3DDm:%20Dubious%20method%20used%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dwebgoat-lessons%2Fpath-traversal%2Fsrc%2Ftest%2Fjava%2Forg%2Fowasp%2Fwebgoat%2Fpath_traversal%2FProfileUploadRemoveUserInputTest.java)\n\nFound a call to a method which will perform a byte to String (or String to byte) conversion, and will assume that the default platform encoding is suitable. (\u003ca href=\"/doc/en/spotbugs/sb_checker_ref.html#FB.DM_DEFAULT_ENCODING\" target=\"_blank\"\u003eFrom SpotBugs description\u003c/a\u003e)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/path-traversal/src/test/java/org/owasp/webgoat/path_traversal/ProfileUploadRemoveUserInputTest.java"},"region":{"startLine":47}}}],"ruleId":"FB.DM_DEFAULT_ENCODING|java","partialFingerprints":{"ruleIdLocationHash/v1":"dde677179f62bc35a1c2fa4e02e689a8c6a80f48d35ce8f78ee924235be07e13"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/path-traversal/src/test/java/org/owasp/webgoat/path_traversal/ProfileUploadRemoveUserInputTest.java"},"region":{"startLine":47}},"message":{"text":"Found reliance on default encoding: String.getBytes()."}}}]}]}]},{"message":{"text":"[See in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/issues/C89178A5606F1513B8DFD737093106E0?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026filter=issueType%3Alocalized-name%3DUse%20of%20Hard-coded%20Credentials%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dwebgoat-container%2Fsrc%2Ftest%2Fjava%2Forg%2Fowasp%2Fwebgoat%2Fusers%2FUserValidatorTest.java)\n\nA secret, such as a password, cryptographic key, or token is stored in plaintext directly in the source code, in an application's properties, or configuration file. Users with access to the secret may then use the secret to access resources that they otherwise would not have access to."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"webgoat-container/src/test/java/org/owasp/webgoat/users/UserValidatorTest.java"},"region":{"startLine":40}}}],"ruleId":"sigma.hardcoded_secret:pattern|java","partialFingerprints":{"ruleIdLocationHash/v1":"5e5a0e104078805975bec5e7b18eb055a9738800661d4d1dfbcaa2678a0396e8"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-container/src/test/java/org/owasp/webgoat/users/UserValidatorTest.java"},"region":{"startLine":40}},"message":{"text":"A secret, such as a password, cryptographic key, or token is stored in plaintext directly in the source code, in an application's properties, or configuration file. Users with access to the secret may then use the secret to access resources that they otherwise would not have access to. Secret type: Password (generic)."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-container/src/test/java/org/owasp/webgoat/users/UserValidatorTest.java"},"region":{"startLine":40}},"message":{"text":"Avoid setting sensitive configuration values as string literals. Instead, these values should be set using variables with the sensitive data loaded from an encrypted file or a secret store."}}}]}]}]},{"message":{"text":"[See in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/issues/66ECBC95591411F8562F2E998014A8EC?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026filter=issueType%3Alocalized-name%3DFiles%20or%20Directories%20Accessible%20to%20External%20Parties%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Ddocker-compose.yml)\n\nThe docker service container is configured to permit writing to the root filesystem. This makes some security attack vectors such as privilege escalation, denial-of-service or authorization bypass possible since the container instance's filesystem can be tampered with."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"docker-compose.yml"},"region":{"startLine":5}}}],"ruleId":"sigma.container_filesystem_write:docker_compose|text","partialFingerprints":{"ruleIdLocationHash/v1":"f67f811965e64c3c9707ca94137b421b2790b3775f4a21f94fe51d9becb55ce8"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"docker-compose.yml"},"region":{"startLine":5}},"message":{"text":"The docker service container is configured to permit writing to the root filesystem. This makes some security attack vectors such as privilege escalation, denial-of-service or authorization bypass possible since the container instance's filesystem can be tampered with."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"docker-compose.yml"},"region":{"startLine":5}},"message":{"text":"Explicitly set the `read-only` attribute of the service to `true` to create a service container with a read-only filesystem."}}}]}]}]},{"message":{"text":"[See in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/issues/2082E53AC015696FFDDC03F91513B1AC?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026filter=issueType%3Alocalized-name%3DHttpOnly%20Cookie%20Attribute%20Not%20Set%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dwebgoat-lessons%2Fcsrf%2Fsrc%2Ftest%2Fjava%2Forg%2Fowasp%2Fwebgoat%2Fcsrf%2FCSRFFeedbackTest.java)\n\nThe `HttpOnly` flag is not enabled for cookies.\nEnabling the `HttpOnly` flag prevents an attacker from stealing or modifying cookie data via cross-site scripting attacks executed against vulnerable client-side applications."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/csrf/src/test/java/org/owasp/webgoat/csrf/CSRFFeedbackTest.java"},"region":{"startLine":72}}}],"ruleId":"sigma.missing_httponly_attribute:servlet|java","partialFingerprints":{"ruleIdLocationHash/v1":"8d1db81822b4ebcd629889c3cde31820f7412902ef97ca1bb85996cb33a3757a"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/csrf/src/test/java/org/owasp/webgoat/csrf/CSRFFeedbackTest.java"},"region":{"startLine":72}},"message":{"text":"The `HttpOnly` flag is not enabled for cookies.\nEnabling the `HttpOnly` flag prevents an attacker from stealing or modifying cookie data via cross-site scripting attacks executed against vulnerable client-side applications."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/csrf/src/test/java/org/owasp/webgoat/csrf/CSRFFeedbackTest.java"},"region":{"startLine":72}},"message":{"text":"Enable the `HttpOnly` attribute by calling `Cookie.setHttpOnly(true)` to prevent the cookie from being read by client-side code."}}}]}]}]},{"message":{"text":"[See in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/issues/585A4D36BC9FB2A83FEA1B15627FAD1E?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026filter=issueType%3Alocalized-name%3DDOM-Based%20Cross-Site%20Scripting%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dwebgoat-lessons%2Fjwt%2Ftarget%2Fclasses%2Fjs%2Fjwt-final.js)\n\nUntrusted user-supplied data is inserted into a context that can execute JavaScript."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/jwt/target/classes/js/jwt-final.js"},"region":{"startLine":1}}}],"ruleId":"xss:dom_xss|javascript","partialFingerprints":{"ruleIdLocationHash/v1":"504bd6f73a0fa182fd40c622e85847023c875065dd204a68d794c46379030387"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/jwt/target/classes/js/jwt-final.js"},"region":{"startLine":1}},"message":{"text":"Calling at a later point \"follow\". This call registers an event handler (through \"$.ajax({\"type\" : \"POST\", \"url\"...\")."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/jwt/target/classes/js/jwt-final.js"},"region":{"startLine":1}},"message":{"text":"Calling at a later point \"\u003canonymous\u003e\". This call uses \"result\" for sensitive computation."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/jwt/target/classes/js/jwt-final.js"},"region":{"startLine":1}},"message":{"text":"The untrusted data reaches a sink that can either lead to HTML injection, JavaScript code execution, or the manipulation of a URL starting with the \"javascript:\" or \"data:\" schemes. Any of these can lead to a DOM XSS vulnerability.\n* HTML injection: Either escape properly the untrusted data or use a safe API to insert this data to the DOM; direct HTML manipulation as text should be avoided.\n* JavaScript code execution: Validate any untrusted data against a whitelist so it's not possible for an attacker to have its supplied code executing.\n* URL manipulation: Make sure the scheme is whitelisted and doesn't allow for the injection of a URL like: \"data:text/html;,\u003cimg/src/onerror=alert(1)\u003e\".\n"}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/jwt/target/classes/js/jwt-final.js"},"region":{"startLine":5}},"message":{"text":"Parameter \"result\" is tainted when the callback function is called."}}}]}]}]},{"message":{"text":"[See in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/issues/D093097D93272A80549685C867F2898A?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026filter=issueType%3Alocalized-name%3DNULL%20Pointer%20Dereference%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dwebgoat-container%2Ftarget%2Fclasses%2Fstatic%2Fjs%2Flibs%2Face.js)\n\nUsing the return value of a function that can return null or undefined without checking it for null or undefined."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"webgoat-container/target/classes/static/js/libs/ace.js"},"region":{"startLine":9502}}}],"ruleId":"null_pointer_dereference_exception:return_value|javascript","partialFingerprints":{"ruleIdLocationHash/v1":"a28709cbda299c1a1c272a737a1084b8ad704cf768b4859171ea3d0676ab39da"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-container/target/classes/static/js/libs/ace.js"},"region":{"startLine":7473}},"message":{"text":"Example 2 (cont.): \"token\" has its value checked in \"token\"."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-container/target/classes/static/js/libs/ace.js"},"region":{"startLine":7481}},"message":{"text":"Example 2: Assigning: \"token\" = return value from \"iterator.stepBackward()\"."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-container/target/classes/static/js/libs/ace.js"},"region":{"startLine":9467}},"message":{"text":"Condition \"token\", taking true branch."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-container/target/classes/static/js/libs/ace.js"},"region":{"startLine":9467}},"message":{"text":"Condition \"/^comment|string/.test(type)\", taking true branch."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-container/target/classes/static/js/libs/ace.js"},"region":{"startLine":9469}},"message":{"text":"Condition \"type == \"comment\"\", taking true branch."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-container/target/classes/static/js/libs/ace.js"},"region":{"startLine":9473}},"message":{"text":"Condition \"dir != 1\", taking true branch."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-container/target/classes/static/js/libs/ace.js"},"region":{"startLine":9474}},"message":{"text":"Condition \"token\", taking false branch."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-container/target/classes/static/js/libs/ace.js"},"region":{"startLine":9474}},"message":{"text":"Example 3 (cont.): \"token\" has its value checked in \"token\"."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-container/target/classes/static/js/libs/ace.js"},"region":{"startLine":9475}},"message":{"text":"Example 3: Assigning: \"token\" = return value from \"iterator.stepBackward()\"."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-container/target/classes/static/js/libs/ace.js"},"region":{"startLine":9485}},"message":{"text":"Condition \"dir != -1\", taking true branch."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-container/target/classes/static/js/libs/ace.js"},"region":{"startLine":9487}},"message":{"text":"Condition \"token\", taking false branch."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-container/target/classes/static/js/libs/ace.js"},"region":{"startLine":9489}},"message":{"text":"Condition \"lastRow == -1\", taking true branch."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-container/target/classes/static/js/libs/ace.js"},"region":{"startLine":9491}},"message":{"text":"Condition \"!re.test(state)\", taking true branch."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-container/target/classes/static/js/libs/ace.js"},"region":{"startLine":9493}},"message":{"text":"Falling through to end of if statement."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-container/target/classes/static/js/libs/ace.js"},"region":{"startLine":9497}},"message":{"text":"\"iterator.stepBackward\" returns \"null\" or \"undefined\" (checked 6 out of 7 times)."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-container/target/classes/static/js/libs/ace.js"},"region":{"startLine":9497}},"message":{"text":"Assigning \"token\" to the \"null\" or \"undefined\" return value from \"iterator.stepBackward\"."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-container/target/classes/static/js/libs/ace.js"},"region":{"startLine":9498}},"message":{"text":"Falling through to end of if statement."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-container/target/classes/static/js/libs/ace.js"},"region":{"startLine":9502}},"message":{"text":"Accessing a property of null-like value \"token\"."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-container/target/classes/static/js/libs/ace.js"},"region":{"startLine":9833}},"message":{"text":"Example 1 (cont.): \"token\" has its value checked in \"token\"."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-container/target/classes/static/js/libs/ace.js"},"region":{"startLine":9834}},"message":{"text":"Example 1: Assigning: \"token\" = return value from \"iterator.stepBackward()\"."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-container/target/classes/static/js/libs/ace.js"},"region":{"startLine":13413}},"message":{"text":"Example 5: Assigning: \"prevToken\" = return value from \"iterator.stepBackward()\"."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-container/target/classes/static/js/libs/ace.js"},"region":{"startLine":13431}},"message":{"text":"Example 5 (cont.): Assigning: \"token\" = \"prevToken\".  Both are now equal to the return value from \"iterator.stepBackward()\"."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-container/target/classes/static/js/libs/ace.js"},"region":{"startLine":13434}},"message":{"text":"Example 5 (cont.): \"token\" has its value checked in \"token\"."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-container/target/classes/static/js/libs/ace.js"},"region":{"startLine":14569}},"message":{"text":"Example 4: Assigning: \"prevToken\" = return value from \"iterator.stepBackward()\"."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-container/target/classes/static/js/libs/ace.js"},"region":{"startLine":14571}},"message":{"text":"Example 4 (cont.): \"prevToken\" has its value checked in \"prevToken\"."}}}]}]}]},{"message":{"text":"[See in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/issues/44A7D1A545AAD660C2BAF90970B350ED?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026filter=issueType%3Alocalized-name%3DInsufficient%20Session%20Expiration%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dwebgoat-lessons%2Fjwt%2Fsrc%2Ftest%2Fjava%2Forg%2Fowasp%2Fwebgoat%2Fjwt%2FJWTSecretKeyEndpointTest.java)\n\nThe instance of `JwtBuilder` doesn't set the expiration time when generating the token. Ignoring the expiration time for a JSON web token means it is valid forever. Since the token never expires, an attacker has a longer window to brute-force or exploit the stolen the token."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/jwt/src/test/java/org/owasp/webgoat/jwt/JWTSecretKeyEndpointTest.java"},"region":{"startLine":113}}}],"ruleId":"sigma.jwt_non_expiring_token:io_jsonwebtoken|java","partialFingerprints":{"ruleIdLocationHash/v1":"37730d10e8c4cb500b8840520758be4ea83df860912d5453a64098ef8f94b719"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/jwt/src/test/java/org/owasp/webgoat/jwt/JWTSecretKeyEndpointTest.java"},"region":{"startLine":113}},"message":{"text":"The instance of `JwtBuilder` doesn't set the expiration time when generating the token. Ignoring the expiration time for a JSON web token means it is valid forever. Since the token never expires, an attacker has a longer window to brute-force or exploit the stolen the token."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/jwt/src/test/java/org/owasp/webgoat/jwt/JWTSecretKeyEndpointTest.java"},"region":{"startLine":113}},"message":{"text":"Set the expiration time of the token by invoking `JwtBuilder.setExpiration()` or `Claims.setExpiration()`."}}}]}]}]},{"message":{"text":"[See in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/issues/9BF3AD672C92FBFC199CF1D1573A8859?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026filter=issueType%3Alocalized-name%3DCross-site%20Scripting%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dwebgoat-lessons%2Fpath-traversal%2Fsrc%2Fmain%2Fjava%2Forg%2Fowasp%2Fwebgoat%2Fpath_traversal%2FProfileUploadRetrieval.java)\n\nUntrusted user-supplied data is inserted into a context that can execute JavaScript without adequate validation, escaping, or filtering."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/path-traversal/src/main/java/org/owasp/webgoat/path_traversal/ProfileUploadRetrieval.java"},"region":{"startLine":82}}}],"ruleId":"xss|java","partialFingerprints":{"ruleIdLocationHash/v1":"ebbbbf65e9fd156b31e0e936537ef2cdac69ac550a32c1112fc6266ed08dec69"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/path-traversal/src/main/java/org/owasp/webgoat/path_traversal/ProfileUploadRetrieval.java"},"region":{"startLine":81}},"message":{"text":"Reading data from an HTTP request, which is considered tainted."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/path-traversal/src/main/java/org/owasp/webgoat/path_traversal/ProfileUploadRetrieval.java"},"region":{"startLine":82}},"message":{"text":"Concatenating \"(id == null) ? org.apache.commons.lang3.RandomUtils.nextInt(1, 11) : id\" to an HTML page allows cross-site scripting, because it was not properly sanitized for context HTML PCDATA block."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/path-traversal/src/main/java/org/owasp/webgoat/path_traversal/ProfileUploadRetrieval.java"},"region":{"startLine":82}},"message":{"text":"Perform the following escaping in the following order to guard against cross-site scripting attacks with Java.\n\nFor example: \"Encode.forHtml(id)\"\n\n\n* Use the \"Encode.forHtml\" function from the OWASP Java Encoder. This escapes the output for HTML.\n\n"}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/path-traversal/src/main/java/org/owasp/webgoat/path_traversal/ProfileUploadRetrieval.java"},"region":{"startLine":82}},"message":{"text":"Passing the tainted data through \"java.io.File.File(java.io.File, java.lang.String)\"."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/path-traversal/src/main/java/org/owasp/webgoat/path_traversal/ProfileUploadRetrieval.java"},"region":{"startLine":84}},"message":{"text":"Passing the tainted data through \"java.io.File.getName()\"."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/path-traversal/src/main/java/org/owasp/webgoat/path_traversal/ProfileUploadRetrieval.java"},"region":{"startLine":95}},"message":{"text":"Passing the tainted data through \"java.io.File.getName()\"."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/path-traversal/src/main/java/org/owasp/webgoat/path_traversal/ProfileUploadRetrieval.java"},"region":{"startLine":95}},"message":{"text":"Passing the tainted data through \"java.io.File.getParentFile()\"."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/path-traversal/src/main/java/org/owasp/webgoat/path_traversal/ProfileUploadRetrieval.java"},"region":{"startLine":95}},"message":{"text":"Passing the tainted data through \"java.io.File.listFiles()\"."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/path-traversal/src/main/java/org/owasp/webgoat/path_traversal/ProfileUploadRetrieval.java"},"region":{"startLine":95}},"message":{"text":"Passing the tainted data through \"org.springframework.util.StringUtils.arrayToCommaDelimitedString(java.lang.Object[])\"."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/path-traversal/src/main/java/org/owasp/webgoat/path_traversal/ProfileUploadRetrieval.java"},"region":{"startLine":95}},"message":{"text":"Passing the tainted data through \"java.lang.String.getBytes()\"."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/path-traversal/src/main/java/org/owasp/webgoat/path_traversal/ProfileUploadRetrieval.java"},"region":{"startLine":95}},"message":{"text":"Printing to HTML output."}}}]}]}]},{"message":{"text":"[See in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/issues/019509554894123469BAC87F12283E79?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026filter=issueType%3Alocalized-name%3DCT:%20Constructor%20throws%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dwebgoat-container%2Fsrc%2Fmain%2Fjava%2Forg%2Fowasp%2Fwebgoat%2Flessons%2FAssignment.java)\n\nClasses that throw exceptions in their constructors are vulnerable to Finalizer attacks (\u003ca href=\"/doc/en/spotbugs/sb_checker_ref.html#FB.CT_CONSTRUCTOR_THROW\" target=\"_blank\"\u003eFrom SpotBugs description\u003c/a\u003e)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"webgoat-container/src/main/java/org/owasp/webgoat/lessons/Assignment.java"},"region":{"startLine":62}}}],"ruleId":"FB.CT_CONSTRUCTOR_THROW|java","partialFingerprints":{"ruleIdLocationHash/v1":"f0be15549753be29550edcdf844b9b9cbdef5f7f2d509161441bc10819936180"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-container/src/main/java/org/owasp/webgoat/lessons/Assignment.java"},"region":{"startLine":62}},"message":{"text":"Exception thrown in class org.owasp.webgoat.lessons.Assignment at new org.owasp.webgoat.lessons.Assignment(String, String, List) will leave the constructor. The object under construction remains partially initialized and may be vulnerable to Finalizer attacks."}}}]}]}]},{"message":{"text":"[See in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/issues/7EA03AF5DF0EDB28E9B1683152497162?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026filter=issueType%3Alocalized-name%3DFS:%20Format%20string%20problem%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dwebgoat-lessons%2Fchallenge%2Fsrc%2Fmain%2Fjava%2Forg%2Fowasp%2Fwebgoat%2Fchallenges%2Fchallenge7%2FAssignment7.java)\n\nThis format string includes a newline character (\\n). (\u003ca href=\"/doc/en/spotbugs/sb_checker_ref.html#FB.VA_FORMAT_STRING_USES_NEWLINE\" target=\"_blank\"\u003eFrom SpotBugs description\u003c/a\u003e)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/challenge/src/main/java/org/owasp/webgoat/challenges/challenge7/Assignment7.java"},"region":{"startLine":66}}}],"ruleId":"FB.VA_FORMAT_STRING_USES_NEWLINE|java","partialFingerprints":{"ruleIdLocationHash/v1":"2de1ae7fa87186a6830590d09730fe2df62931aed9408cb5793c9123ed7b1a39"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/challenge/src/main/java/org/owasp/webgoat/challenges/challenge7/Assignment7.java"},"region":{"startLine":66}},"message":{"text":"Format string should use %n rather than \\n."}}}]}]}]},{"message":{"text":"[See in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/issues/361C987910EF9664802047973479A009?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026filter=issueType%3Alocalized-name%3DIncorrect%20Check%20of%20Function%20Return%20Value%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dwebwolf%2Fsrc%2Fmain%2Fjava%2Forg%2Fowasp%2Fwebwolf%2FFileServer.java)\n\nThis method returns a value that is not checked. (\u003ca href=\"/doc/en/spotbugs/sb_checker_ref.html#FB.RV_RETURN_VALUE_IGNORED_BAD_PRACTICE\" target=\"_blank\"\u003eFrom SpotBugs description\u003c/a\u003e)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"webwolf/src/main/java/org/owasp/webwolf/FileServer.java"},"region":{"startLine":72}}}],"ruleId":"FB.RV_RETURN_VALUE_IGNORED_BAD_PRACTICE|java","partialFingerprints":{"ruleIdLocationHash/v1":"f6a17b1e0ee9595ded9960db05a4f3a7c739be9c2efac4694402884085d1424b"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"webwolf/src/main/java/org/owasp/webwolf/FileServer.java"},"region":{"startLine":72}},"message":{"text":"Exceptional return value of java.io.File.mkdirs() ignored."}}}]}]}]},{"message":{"text":"[See in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/issues/EC98F16077272297D3671E196E2B757F?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026filter=issueType%3Alocalized-name%3DImproper%20Privilege%20Management%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dgoat-with-reverseproxy.yaml)\n\nThe Docker container requests the `NET_RAW` capability, either explicitly or by default, granting access to the host's network interfaces."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"goat-with-reverseproxy.yaml"},"region":{"startLine":36}}}],"ruleId":"sigma.container_requesting_net_raw:docker_compose|text","partialFingerprints":{"ruleIdLocationHash/v1":"137fb8eaefa709ec80624eeb8dedfff5d99e924b994d55605f8a54428ac5e12f"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"goat-with-reverseproxy.yaml"},"region":{"startLine":36}},"message":{"text":"The Docker container requests the `NET_RAW` capability, either explicitly or by default, granting access to the host's network interfaces."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"goat-with-reverseproxy.yaml"},"region":{"startLine":36}},"message":{"text":"Explicitly remove the `NET_RAW` capability by adding either `NET_RAW` or `ALL` to the `cap_drop` list and avoiding the `NET_RAW` capability in the `cap_add` list."}}}]}]}]},{"message":{"text":"[See in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/issues/F23DECA561BBA9DD35C03B1204E7C5A7?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026filter=issueType%3Alocalized-name%3DUse%20of%20Hard-coded%20Credentials%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dwebgoat-lessons%2Fpassword-reset%2Fsrc%2Fmain%2Fjava%2Forg%2Fowasp%2Fwebgoat%2Fpassword_reset%2FPasswordReset.java)\n\nA secret, such as a password, cryptographic key, or token is stored in plaintext directly in the source code, in an application's properties, or configuration file. Users with access to the secret may then use the secret to access resources that they otherwise would not have access to."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/password-reset/src/main/java/org/owasp/webgoat/password_reset/PasswordReset.java"},"region":{"startLine":38}}}],"ruleId":"sigma.hardcoded_secret:pattern|java","partialFingerprints":{"ruleIdLocationHash/v1":"4ec289f5339a7ce0db0cb47db72e2f585b2726be7c85096eeace084766bf2c14"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/password-reset/src/main/java/org/owasp/webgoat/password_reset/PasswordReset.java"},"region":{"startLine":38}},"message":{"text":"A secret, such as a password, cryptographic key, or token is stored in plaintext directly in the source code, in an application's properties, or configuration file. Users with access to the secret may then use the secret to access resources that they otherwise would not have access to. Secret type: Password (generic)."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/password-reset/src/main/java/org/owasp/webgoat/password_reset/PasswordReset.java"},"region":{"startLine":38}},"message":{"text":"Avoid setting sensitive configuration values as string literals. Instead, these values should be set using variables with the sensitive data loaded from an encrypted file or a secret store."}}}]}]}]},{"message":{"text":"[See in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/issues/B0C0CA3A59D1F37EA93DFE569139026E?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026filter=issueType%3Alocalized-name%3DInsufficient%20Session%20Expiration%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dwebgoat-lessons%2Fjwt%2Fsrc%2Ftest%2Fjava%2Forg%2Fowasp%2Fwebgoat%2Fjwt%2FJWTVotesEndpointTest.java)\n\nThe instance of `JwtBuilder` doesn't set the expiration time when generating the token. Ignoring the expiration time for a JSON web token means it is valid forever. Since the token never expires, an attacker has a longer window to brute-force or exploit the stolen the token."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/jwt/src/test/java/org/owasp/webgoat/jwt/JWTVotesEndpointTest.java"},"region":{"startLine":189}}}],"ruleId":"sigma.jwt_non_expiring_token:io_jsonwebtoken|java","partialFingerprints":{"ruleIdLocationHash/v1":"af79743a117af3ab953f4a91c937774199526b24969ef4563e41bdbca1b31f8a"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/jwt/src/test/java/org/owasp/webgoat/jwt/JWTVotesEndpointTest.java"},"region":{"startLine":189}},"message":{"text":"The instance of `JwtBuilder` doesn't set the expiration time when generating the token. Ignoring the expiration time for a JSON web token means it is valid forever. Since the token never expires, an attacker has a longer window to brute-force or exploit the stolen the token."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/jwt/src/test/java/org/owasp/webgoat/jwt/JWTVotesEndpointTest.java"},"region":{"startLine":189}},"message":{"text":"Set the expiration time of the token by invoking `JwtBuilder.setExpiration()` or `Claims.setExpiration()`."}}}]}]}]},{"message":{"text":"[See in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/issues/F041948F8E7C71C4AAC29480540014D9?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026filter=issueType%3Alocalized-name%3DHttpOnly%20Cookie%20Attribute%20Not%20Set%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dwebgoat-lessons%2Fjwt%2Fsrc%2Ftest%2Fjava%2Forg%2Fowasp%2Fwebgoat%2Fjwt%2FJWTVotesEndpointTest.java)\n\nThe `HttpOnly` flag is not enabled for cookies.\nEnabling the `HttpOnly` flag prevents an attacker from stealing or modifying cookie data via cross-site scripting attacks executed against vulnerable client-side applications."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/jwt/src/test/java/org/owasp/webgoat/jwt/JWTVotesEndpointTest.java"},"region":{"startLine":180}}}],"ruleId":"sigma.missing_httponly_attribute:servlet|java","partialFingerprints":{"ruleIdLocationHash/v1":"f456607dbf3f40ff11214bc6afa81f723e20ce93619868a4c072947a128646fb"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/jwt/src/test/java/org/owasp/webgoat/jwt/JWTVotesEndpointTest.java"},"region":{"startLine":180}},"message":{"text":"The `HttpOnly` flag is not enabled for cookies.\nEnabling the `HttpOnly` flag prevents an attacker from stealing or modifying cookie data via cross-site scripting attacks executed against vulnerable client-side applications."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/jwt/src/test/java/org/owasp/webgoat/jwt/JWTVotesEndpointTest.java"},"region":{"startLine":180}},"message":{"text":"Enable the `HttpOnly` attribute by calling `Cookie.setHttpOnly(true)` to prevent the cookie from being read by client-side code."}}}]}]}]},{"message":{"text":"[See in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/issues/91994F9864C0E38072CE93784F73E303?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026filter=issueType%3Alocalized-name%3DImproper%20Resource%20Shutdown%20or%20Release%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dwebgoat-lessons%2Fssrf%2Fsrc%2Fmain%2Fjava%2Forg%2Fowasp%2Fwebgoat%2Fssrf%2FSSRFTask2.java)\n\nLeak of a system resource on an exception path (probably error handling)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/ssrf/src/main/java/org/owasp/webgoat/ssrf/SSRFTask2.java"},"region":{"startLine":59}}}],"ruleId":"resource_leak:exceptional_path|java","partialFingerprints":{"ruleIdLocationHash/v1":"11dd94037a8794895a350360788075699783bd88208ac955dc74b053c31a9cb0"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/ssrf/src/main/java/org/owasp/webgoat/ssrf/SSRFTask2.java"},"region":{"startLine":53}},"message":{"text":"Condition \"url.matches(\"http://ifconfig.pro\")\", taking true branch."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/ssrf/src/main/java/org/owasp/webgoat/ssrf/SSRFTask2.java"},"region":{"startLine":56}},"message":{"text":"A new resource is returned from allocation method \"getInputStream\"."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/ssrf/src/main/java/org/owasp/webgoat/ssrf/SSRFTask2.java"},"region":{"startLine":56}},"message":{"text":"Assigning: \"in\" = resource returned from \"new java.io.BufferedReader(new java.io.InputStreamReader(urlConnection.getInputStream()))\"."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/ssrf/src/main/java/org/owasp/webgoat/ssrf/SSRFTask2.java"},"region":{"startLine":59}},"message":{"text":"Resource \"in\" is not closed or saved in \"readLine\"."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/ssrf/src/main/java/org/owasp/webgoat/ssrf/SSRFTask2.java"},"region":{"startLine":59}},"message":{"text":"Throwing \"java.io.IOException\" (or subclass) from call to \"readLine\"."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/ssrf/src/main/java/org/owasp/webgoat/ssrf/SSRFTask2.java"},"region":{"startLine":59}},"message":{"text":"Variable \"in\" going out of scope leaks the resource it refers to."}}}]}]}]},{"message":{"text":"[See in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/issues/DD9493F664982CB1A72B687B31F3AF82?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026filter=issueType%3Alocalized-name%3DDm:%20Dubious%20method%20used%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dwebgoat-lessons%2Fpath-traversal%2Fsrc%2Ftest%2Fjava%2Forg%2Fowasp%2Fwebgoat%2Fpath_traversal%2FProfileUploadTest.java)\n\nFound a call to a method which will perform a byte to String (or String to byte) conversion, and will assume that the default platform encoding is suitable. (\u003ca href=\"/doc/en/spotbugs/sb_checker_ref.html#FB.DM_DEFAULT_ENCODING\" target=\"_blank\"\u003eFrom SpotBugs description\u003c/a\u003e)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/path-traversal/src/test/java/org/owasp/webgoat/path_traversal/ProfileUploadTest.java"},"region":{"startLine":62}}}],"ruleId":"FB.DM_DEFAULT_ENCODING|java","partialFingerprints":{"ruleIdLocationHash/v1":"407e84c4207e155747f88779f0fa168a7ec8a0d62510730d4e68e6f236a46efc"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/path-traversal/src/test/java/org/owasp/webgoat/path_traversal/ProfileUploadTest.java"},"region":{"startLine":62}},"message":{"text":"Found reliance on default encoding: String.getBytes()."}}}]}]}]},{"message":{"text":"[See in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/issues/00AA979CF4C8A9D73B615C4B842FA6E0?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026filter=issueType%3Alocalized-name%3DUse%20of%20Hard-coded%20Credentials%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dwebgoat-container%2Fsrc%2Fmain%2Fjava%2Forg%2Fowasp%2Fwebgoat%2FWebSecurityConfig.java)\n\nA secret, such as a password, cryptographic key, or token is stored in plaintext directly in the source code, in an application's properties, or configuration file. Users with access to the secret may then use the secret to access resources that they otherwise would not have access to."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"webgoat-container/src/main/java/org/owasp/webgoat/WebSecurityConfig.java"},"region":{"startLine":68}}}],"ruleId":"sigma.hardcoded_secret:pattern|java","partialFingerprints":{"ruleIdLocationHash/v1":"64d089e4b32659b50a7e8ad578b7f5eaef277e4972985039a45c70e206e8d85c"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-container/src/main/java/org/owasp/webgoat/WebSecurityConfig.java"},"region":{"startLine":68}},"message":{"text":"A secret, such as a password, cryptographic key, or token is stored in plaintext directly in the source code, in an application's properties, or configuration file. Users with access to the secret may then use the secret to access resources that they otherwise would not have access to. Secret type: Password (generic)."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-container/src/main/java/org/owasp/webgoat/WebSecurityConfig.java"},"region":{"startLine":68}},"message":{"text":"Avoid setting sensitive configuration values as string literals. Instead, these values should be set using variables with the sensitive data loaded from an encrypted file or a secret store."}}}]}]}]},{"message":{"text":"[See in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/issues/57AC0B5C9CD2BFBA586F29C37622A110?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026filter=issueType%3Alocalized-name%3DNULL%20Pointer%20Dereference%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dwebgoat-lessons%2Fcross-site-scripting%2Fsrc%2Fmain%2Fjava%2Forg%2Fowasp%2Fwebgoat%2Fxss%2FCrossSiteScriptingLesson3.java)\n\nReturn value of function which returns null is dereferenced without checking"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/cross-site-scripting/src/main/java/org/owasp/webgoat/xss/CrossSiteScriptingLesson3.java"},"region":{"startLine":53}}}],"ruleId":"null_pointer_dereference_exception:return_value|java","partialFingerprints":{"ruleIdLocationHash/v1":"b8e97e8aabdb43b97cf5330615719eab7f6acd9f10b85c33916225f82d9bca72"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/cross-site-scripting/src/main/java/org/owasp/webgoat/xss/CrossSiteScriptingLesson3.java"},"region":{"startLine":47}},"message":{"text":"Condition \"editor.isEmpty()\", taking false branch."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/cross-site-scripting/src/main/java/org/owasp/webgoat/xss/CrossSiteScriptingLesson3.java"},"region":{"startLine":53}},"message":{"text":"\"first\" returns \"null\" (checked 0 out of 2 times)."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/cross-site-scripting/src/main/java/org/owasp/webgoat/xss/CrossSiteScriptingLesson3.java"},"region":{"startLine":53}},"message":{"text":"Calling a method on null object \"doc.select(\"body \u003e table \u003e tbody \u003e tr:nth-child(2) \u003e td:nth-child(2)\").first()\"."}}}]}]}]},{"message":{"text":"[See in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/issues/5B28F5164A2B7FED91DC0F860841DCA1?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026filter=issueType%3Alocalized-name%3DImproper%20Privilege%20Management%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Ddocker-compose-local.yml)\n\nThe Docker container requests the `NET_RAW` capability, either explicitly or by default, granting access to the host's network interfaces."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"docker-compose-local.yml"},"region":{"startLine":10}}}],"ruleId":"sigma.container_requesting_net_raw:docker_compose|text","partialFingerprints":{"ruleIdLocationHash/v1":"a7c5655fe48ebf493572274c341bc4f9e876aaaed88c316e6c92919df404b33d"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"docker-compose-local.yml"},"region":{"startLine":10}},"message":{"text":"The Docker container requests the `NET_RAW` capability, either explicitly or by default, granting access to the host's network interfaces."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"docker-compose-local.yml"},"region":{"startLine":10}},"message":{"text":"Explicitly remove the `NET_RAW` capability by adding either `NET_RAW` or `ALL` to the `cap_drop` list and avoiding the `NET_RAW` capability in the `cap_add` list."}}}]}]}]},{"message":{"text":"[See in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/issues/EE0E1070E9E0C13B37DD8C5B9924E034?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026filter=issueType%3Alocalized-name%3DImproper%20Resource%20Shutdown%20or%20Release%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dwebgoat-lessons%2Fsql-injection%2Fsrc%2Fmain%2Fjava%2Forg%2Fowasp%2Fwebgoat%2Fsql_injection%2Fadvanced%2FSqlInjectionLesson6b.java)\n\nLeak of a system resource"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/advanced/SqlInjectionLesson6b.java"},"region":{"startLine":72}}}],"ruleId":"resource_leak|java","partialFingerprints":{"ruleIdLocationHash/v1":"88c2f2b5169450ead5626d6c47edcf0549858937051f56dca9b4f1fd60078808"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/advanced/SqlInjectionLesson6b.java"},"region":{"startLine":65}},"message":{"text":"A new resource is returned from allocation method \"createStatement\"."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/advanced/SqlInjectionLesson6b.java"},"region":{"startLine":65}},"message":{"text":"Assigning: \"statement\" = resource returned from \"connection.createStatement(1004, 1007)\"."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/advanced/SqlInjectionLesson6b.java"},"region":{"startLine":67}},"message":{"text":"Resource \"statement\" is not closed or saved in \"executeQuery\"."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/advanced/SqlInjectionLesson6b.java"},"region":{"startLine":69}},"message":{"text":"Condition \"results != null\", taking true branch."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/advanced/SqlInjectionLesson6b.java"},"region":{"startLine":69}},"message":{"text":"Condition \"results.first()\", taking true branch."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/advanced/SqlInjectionLesson6b.java"},"region":{"startLine":72}},"message":{"text":"Variable \"statement\" going out of scope leaks the resource it refers to."}}}]}]}]},{"message":{"text":"[See in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/issues/16859643E717AE771DF1777BE2BC4ECA?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026filter=issueType%3Alocalized-name%3DHttpOnly%20Cookie%20Attribute%20Not%20Set%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dwebgoat-lessons%2Fjwt%2Fsrc%2Ftest%2Fjava%2Forg%2Fowasp%2Fwebgoat%2Fjwt%2FJWTVotesEndpointTest.java)\n\nThe `HttpOnly` flag is not enabled for cookies.\nEnabling the `HttpOnly` flag prevents an attacker from stealing or modifying cookie data via cross-site scripting attacks executed against vulnerable client-side applications."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/jwt/src/test/java/org/owasp/webgoat/jwt/JWTVotesEndpointTest.java"},"region":{"startLine":110}}}],"ruleId":"sigma.missing_httponly_attribute:servlet|java","partialFingerprints":{"ruleIdLocationHash/v1":"ee41fcd8ca1d133755c1253941550772d84f7b907703bd27765327f02880775f"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/jwt/src/test/java/org/owasp/webgoat/jwt/JWTVotesEndpointTest.java"},"region":{"startLine":110}},"message":{"text":"The `HttpOnly` flag is not enabled for cookies.\nEnabling the `HttpOnly` flag prevents an attacker from stealing or modifying cookie data via cross-site scripting attacks executed against vulnerable client-side applications."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/jwt/src/test/java/org/owasp/webgoat/jwt/JWTVotesEndpointTest.java"},"region":{"startLine":110}},"message":{"text":"Enable the `HttpOnly` attribute by calling `Cookie.setHttpOnly(true)` to prevent the cookie from being read by client-side code."}}}]}]}]},{"message":{"text":"[See in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/issues/7A2132464162C6A58B6CF2988636FD6F?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026filter=issueType%3Alocalized-name%3DAssignment%20to%20Variable%20without%20Use%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dwebgoat-lessons%2Fjwt%2Fsrc%2Ftest%2Fjava%2Forg%2Fowasp%2Fwebgoat%2Fjwt%2FJWTRefreshEndpointTest.java)\n\nThis instruction assigns a value to a local variable, but the value is not read or used in any subsequent instruction. (\u003ca href=\"/doc/en/spotbugs/sb_checker_ref.html#FB.DLS_DEAD_LOCAL_STORE\" target=\"_blank\"\u003eFrom SpotBugs description\u003c/a\u003e)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/jwt/src/test/java/org/owasp/webgoat/jwt/JWTRefreshEndpointTest.java"},"region":{"startLine":72}}}],"ruleId":"FB.DLS_DEAD_LOCAL_STORE|java","partialFingerprints":{"ruleIdLocationHash/v1":"b4188ea058b7cef4991adf66d653db47779d59f7277647aa09cde6f4c1442085"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/jwt/src/test/java/org/owasp/webgoat/jwt/JWTRefreshEndpointTest.java"},"region":{"startLine":72}},"message":{"text":"Dead store to accessToken."}}}]}]}]},{"message":{"text":"[See in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/issues/6FA7FEB8AC004359E9A8CF5320397CAD?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026filter=issueType%3Alocalized-name%3DHttpOnly%20Cookie%20Attribute%20Not%20Set%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dwebgoat-lessons%2Fjwt%2Fsrc%2Ftest%2Fjava%2Forg%2Fowasp%2Fwebgoat%2Fjwt%2FJWTVotesEndpointTest.java)\n\nThe `HttpOnly` flag is not enabled for cookies.\nEnabling the `HttpOnly` flag prevents an attacker from stealing or modifying cookie data via cross-site scripting attacks executed against vulnerable client-side applications."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/jwt/src/test/java/org/owasp/webgoat/jwt/JWTVotesEndpointTest.java"},"region":{"startLine":135}}}],"ruleId":"sigma.missing_httponly_attribute:servlet|java","partialFingerprints":{"ruleIdLocationHash/v1":"f44ec6e8921c78e92efa2531d5f00a39a68f2a4602defd562d14226081948b26"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/jwt/src/test/java/org/owasp/webgoat/jwt/JWTVotesEndpointTest.java"},"region":{"startLine":135}},"message":{"text":"The `HttpOnly` flag is not enabled for cookies.\nEnabling the `HttpOnly` flag prevents an attacker from stealing or modifying cookie data via cross-site scripting attacks executed against vulnerable client-side applications."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/jwt/src/test/java/org/owasp/webgoat/jwt/JWTVotesEndpointTest.java"},"region":{"startLine":135}},"message":{"text":"Enable the `HttpOnly` attribute by calling `Cookie.setHttpOnly(true)` to prevent the cookie from being read by client-side code."}}}]}]}]},{"message":{"text":"[See in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/issues/E4C0846748D2B64FB0419967A72AE53B?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026filter=issueType%3Alocalized-name%3DExpected%20Behavior%20Violation%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dwebgoat-lessons%2Fchallenge%2Fsrc%2Fmain%2Fjava%2Forg%2Fowasp%2Fwebgoat%2Fchallenges%2Fchallenge1%2FImageServlet.java)\n\nThis code creates a java.util.Random object, uses it to generate one random number, and then discards the Random object. (\u003ca href=\"/doc/en/spotbugs/sb_checker_ref.html#FB.DMI_RANDOM_USED_ONLY_ONCE\" target=\"_blank\"\u003eFrom SpotBugs description\u003c/a\u003e)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/challenge/src/main/java/org/owasp/webgoat/challenges/challenge1/ImageServlet.java"},"region":{"startLine":20}}}],"ruleId":"FB.DMI_RANDOM_USED_ONLY_ONCE|java","partialFingerprints":{"ruleIdLocationHash/v1":"7d9d6307566617bbe42ddc1f701cd20130bc9877cc894557e3050da5847f6c02"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/challenge/src/main/java/org/owasp/webgoat/challenges/challenge1/ImageServlet.java"},"region":{"startLine":20}},"message":{"text":"Random object created and used only once."}}}]}]}]},{"message":{"text":"[See in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/issues/E366B8857E98F4B5BD1B370FB63A0ACD?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026filter=issueType%3Alocalized-name%3DCross-Site%20Request%20Forgery%20%28CSRF%29%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dwebgoat-lessons%2Fsql-injection%2Fsrc%2Fmain%2Fjava%2Forg%2Fowasp%2Fwebgoat%2Fsql_injection%2Fintroduction%2FSqlInjectionLesson9.java)\n\nThe web application controller modifies data or state and is unprotected from cross-site request forgery."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson9.java"},"region":{"startLine":55}}}],"ruleId":"csrf:database_update|java","partialFingerprints":{"ruleIdLocationHash/v1":"3f7ce2ba778f522e2d790692e67abf018b2e4740a8caee5ddd9d0a62c0cf3e3f"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson9.java"},"region":{"startLine":55}},"message":{"text":"\"org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson9.completed\" is a web-app entry point that requires protection from cross-site request forgery (CSRF)."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson9.java"},"region":{"startLine":55}},"message":{"text":"Use the CSRF validator method \"org.owasp.webgoat.CSRFTest.checkAssignment3\" to protect against CSRF. Please refer to the examples of its use elsewhere."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson9.java"},"region":{"startLine":56}},"message":{"text":"Calling \"injectableQueryIntegrity\" updates the database."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-integration-tests/src/test/java/org/owasp/webgoat/CSRFTest.java"},"region":{"startLine":70}},"message":{"text":"Example 1: Examples of CSRF validator calls."}}}]}]}]},{"message":{"text":"[See in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/issues/806E3114459A5D4FFC7AA3C821E3F511?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026filter=issueType%3Alocalized-name%3DExpected%20Behavior%20Violation%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dwebgoat-lessons%2Fjwt%2Fsrc%2Fmain%2Fjava%2Forg%2Fowasp%2Fwebgoat%2Fjwt%2FJWTSecretKeyEndpoint.java)\n\nThis code creates a java.util.Random object, uses it to generate one random number, and then discards the Random object. (\u003ca href=\"/doc/en/spotbugs/sb_checker_ref.html#FB.DMI_RANDOM_USED_ONLY_ONCE\" target=\"_blank\"\u003eFrom SpotBugs description\u003c/a\u003e)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/jwt/src/main/java/org/owasp/webgoat/jwt/JWTSecretKeyEndpoint.java"},"region":{"startLine":51}}}],"ruleId":"FB.DMI_RANDOM_USED_ONLY_ONCE|java","partialFingerprints":{"ruleIdLocationHash/v1":"0b22a6b27595f5de6b4683028f027b3bca01f6b5b6b0ddf8b57fc3d001879062"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/jwt/src/main/java/org/owasp/webgoat/jwt/JWTSecretKeyEndpoint.java"},"region":{"startLine":51}},"message":{"text":"Random object created and used only once."}}}]}]}]},{"message":{"text":"[See in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/issues/B3088445946C342E0DB59047E5389947?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026filter=issueType%3Alocalized-name%3DCleartext%20Transmission%20of%20Sensitive%20Information%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dwebgoat-container%2Ftarget%2Fclasses%2Fapplication-webgoat.properties)\n\nThe Spring Boot application's data source is configured to disable SSL by setting the `spring.datasource.url` attribute to a value without `useSSL=true`. Thus, sensitive data transmitted over an insecure communication channel could be read and modified by attackers."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"webgoat-container/target/classes/application-webgoat.properties"},"region":{"startLine":16}}}],"ruleId":"sigma.missing_tls:spring_boot_datasource_properties|text","partialFingerprints":{"ruleIdLocationHash/v1":"ba7e15d4c7a1c5bec51491a539546b1ca01fb8ef8c3474eb19dfe41e0b266b0a"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-container/target/classes/application-webgoat.properties"},"region":{"startLine":16}},"message":{"text":"The Spring Boot application's data source is configured to disable SSL by setting the `spring.datasource.url` attribute to a value without `useSSL=true`. Thus, sensitive data transmitted over an insecure communication channel could be read and modified by attackers."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-container/target/classes/application-webgoat.properties"},"region":{"startLine":16}},"message":{"text":"Explicitly enable SSL by setting the `spring.datasource.url` attribute to a value that contains `useSSL=true`."}}}]}]}]},{"message":{"text":"[See in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/issues/656459A336E0662F35D54963803E1E58?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026filter=issueType%3Alocalized-name%3DImproper%20Privilege%20Management%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dgoat-with-reverseproxy.yaml)\n\nThe Docker Compose file sets the `no-new-privileges` attribute to `false` or omits it as the default value is `false`. This doesn't restrict the container from acquiring additional privileges via SUID or SGID bits. This allows privilege escalation, meaning a user can set the security context of the container and can perform root-level operations."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"goat-with-reverseproxy.yaml"},"region":{"startLine":23}}}],"ruleId":"sigma.container_privilege_escalation_allowed:docker_compose|text","partialFingerprints":{"ruleIdLocationHash/v1":"fa786c4543f83ce91488492e3ed1767e0f7be83f1aaafeee51d96bfd7ebb4e11"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"goat-with-reverseproxy.yaml"},"region":{"startLine":23}},"message":{"text":"The Docker Compose file sets the `no-new-privileges` attribute to `false` or omits it as the default value is `false`. This doesn't restrict the container from acquiring additional privileges via SUID or SGID bits. This allows privilege escalation, meaning a user can set the security context of the container and can perform root-level operations."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"goat-with-reverseproxy.yaml"},"region":{"startLine":23}},"message":{"text":"Disable container privilege escalation by explicitly setting `no-new-privileges` to `true`."}}}]}]}]},{"message":{"text":"[See in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/issues/80EE9894BDBD778545FA2A3609415890?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026filter=issueType%3Alocalized-name%3DInsufficient%20Session%20Expiration%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dwebgoat-lessons%2Fjwt%2Fsrc%2Ftest%2Fjava%2Forg%2Fowasp%2Fwebgoat%2Fjwt%2FJWTSecretKeyEndpointTest.java)\n\nThe instance of `JwtBuilder` doesn't set the expiration time when generating the token. Ignoring the expiration time for a JSON web token means it is valid forever. Since the token never expires, an attacker has a longer window to brute-force or exploit the stolen the token."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/jwt/src/test/java/org/owasp/webgoat/jwt/JWTSecretKeyEndpointTest.java"},"region":{"startLine":124}}}],"ruleId":"sigma.jwt_non_expiring_token:io_jsonwebtoken|java","partialFingerprints":{"ruleIdLocationHash/v1":"137f48b1c07bd6439db01bdf0a1e0344a4706d96342853ac6d76af9fc631110e"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/jwt/src/test/java/org/owasp/webgoat/jwt/JWTSecretKeyEndpointTest.java"},"region":{"startLine":124}},"message":{"text":"The instance of `JwtBuilder` doesn't set the expiration time when generating the token. Ignoring the expiration time for a JSON web token means it is valid forever. Since the token never expires, an attacker has a longer window to brute-force or exploit the stolen the token."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/jwt/src/test/java/org/owasp/webgoat/jwt/JWTSecretKeyEndpointTest.java"},"region":{"startLine":124}},"message":{"text":"Set the expiration time of the token by invoking `JwtBuilder.setExpiration()` or `Claims.setExpiration()`."}}}]}]}]},{"message":{"text":"[See in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/issues/597565BA1FBB75FC84DAAEEBC9FDAB83?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026filter=issueType%3Alocalized-name%3DInsufficient%20Session%20Expiration%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dwebgoat-lessons%2Fjwt%2Fsrc%2Ftest%2Fjava%2Forg%2Fowasp%2Fwebgoat%2Fjwt%2FJWTVotesEndpointTest.java)\n\nThe instance of `JwtBuilder` doesn't set the expiration time when generating the token. Ignoring the expiration time for a JSON web token means it is valid forever. Since the token never expires, an attacker has a longer window to brute-force or exploit the stolen the token."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/jwt/src/test/java/org/owasp/webgoat/jwt/JWTVotesEndpointTest.java"},"region":{"startLine":201}}}],"ruleId":"sigma.jwt_non_expiring_token:io_jsonwebtoken|java","partialFingerprints":{"ruleIdLocationHash/v1":"634cd6506455b1512021a96c3805a33b761ab47882d9b06a9a52c6723508bf77"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/jwt/src/test/java/org/owasp/webgoat/jwt/JWTVotesEndpointTest.java"},"region":{"startLine":201}},"message":{"text":"The instance of `JwtBuilder` doesn't set the expiration time when generating the token. Ignoring the expiration time for a JSON web token means it is valid forever. Since the token never expires, an attacker has a longer window to brute-force or exploit the stolen the token."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/jwt/src/test/java/org/owasp/webgoat/jwt/JWTVotesEndpointTest.java"},"region":{"startLine":201}},"message":{"text":"Set the expiration time of the token by invoking `JwtBuilder.setExpiration()` or `Claims.setExpiration()`."}}}]}]}]},{"message":{"text":"[See in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/issues/370BE643DD9AAD435AB21B7BE0952F54?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026filter=issueType%3Alocalized-name%3DGeneration%20of%20Error%20Message%20Containing%20Sensitive%20Information%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dwebgoat-container%2Ftarget%2Fclasses%2Fapplication-webgoat.properties)\n\nThe Spring Boot main application server is configured to allow stack traces to be displayed in an error page. The stack traces might contain sensitive information and should not be displayed."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"webgoat-container/target/classes/application-webgoat.properties"},"region":{"startLine":1}}}],"ruleId":"sigma.verbose_error_message:spring_boot_stacktrace_properties|text","partialFingerprints":{"ruleIdLocationHash/v1":"816b8fe96c6caa5bba441d57cc0022822da9ca81383d18c4a03f470f32d7e7c0"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-container/target/classes/application-webgoat.properties"},"region":{"startLine":1}},"message":{"text":"The Spring Boot main application server is configured to allow stack traces to be displayed in an error page. The stack traces might contain sensitive information and should not be displayed."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-container/target/classes/application-webgoat.properties"},"region":{"startLine":1}},"message":{"text":"Set `server.error.include-stacktrace` to `never` or omit it as the default value is `never`."}}}]}]}]},{"message":{"text":"[See in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/issues/AF3B2ED024947635E6EA0B7B9EB40FF9?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026filter=issueType%3Alocalized-name%3DImproper%20Verification%20of%20Cryptographic%20Signature%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dwebgoat-lessons%2Fjwt%2Fsrc%2Fmain%2Fjava%2Forg%2Fowasp%2Fwebgoat%2Fjwt%2FJWTVotesEndpoint.java)\n\nThe application uses the `io.jsonwebtoken.JwtParser` package's `parse()`, `parsePlaintextJwt()`, or `parseClaimsJwt()` method to parse a JWT without first verifying the token's signature, allowing an attacker to forge the token claims and perform attacks such as impersonating other users."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/jwt/src/main/java/org/owasp/webgoat/jwt/JWTVotesEndpoint.java"},"region":{"startLine":118}}}],"ruleId":"sigma.jwt_untrusted_decode:io_jsonwebtoken|java","partialFingerprints":{"ruleIdLocationHash/v1":"bd00a9403553ff97499edccbf29f13a9c15fdb667fe3e47f0ce43d13e0927fa7"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/jwt/src/main/java/org/owasp/webgoat/jwt/JWTVotesEndpoint.java"},"region":{"startLine":118}},"message":{"text":"The application uses the `io.jsonwebtoken.JwtParser` package's `parse()`, `parsePlaintextJwt()`, or `parseClaimsJwt()` method to parse a JWT without first verifying the token's signature, allowing an attacker to forge the token claims and perform attacks such as impersonating other users."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/jwt/src/main/java/org/owasp/webgoat/jwt/JWTVotesEndpoint.java"},"region":{"startLine":118}},"message":{"text":"Modify the application to use `parseClaimsJws()` or `parsePlaintextJws()` instead, since these methods will automatically verify the token signature."}}}]}]}]},{"message":{"text":"[See in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/issues/C55291D1555B1A923B460C68B45DF394?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026filter=issueType%3Alocalized-name%3DSIC:%20Inner%20class%20could%20be%20made%20static%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dwebwolf%2Fsrc%2Fmain%2Fjava%2Forg%2Fowasp%2Fwebwolf%2FFileServer.java)\n\nThis class is an inner class, but does not use its embedded reference to the object which created it. (\u003ca href=\"/doc/en/spotbugs/sb_checker_ref.html#FB.SIC_INNER_SHOULD_BE_STATIC\" target=\"_blank\"\u003eFrom SpotBugs description\u003c/a\u003e)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"webwolf/src/main/java/org/owasp/webwolf/FileServer.java"},"region":{"startLine":87}}}],"ruleId":"FB.SIC_INNER_SHOULD_BE_STATIC|java","partialFingerprints":{"ruleIdLocationHash/v1":"2a002df3070c565b870bd06a130bf9fce6cf022143d91fd23e9b4caa72262140"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"webwolf/src/main/java/org/owasp/webwolf/FileServer.java"},"region":{"startLine":87}},"message":{"text":"Should org.owasp.webwolf.FileServer$UploadedFile be a _static_ inner class?"}}}]}]}]},{"message":{"text":"[See in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/issues/DBB2542B356E15FB52C3C08DE28A7AAA?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026filter=issueType%3Alocalized-name%3DInsufficient%20Session%20Expiration%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dwebgoat-lessons%2Fjwt%2Fsrc%2Ftest%2Fjava%2Forg%2Fowasp%2Fwebgoat%2Fjwt%2FJWTSecretKeyEndpointTest.java)\n\nThe instance of `JwtBuilder` doesn't set the expiration time when generating the token. Ignoring the expiration time for a JSON web token means it is valid forever. Since the token never expires, an attacker has a longer window to brute-force or exploit the stolen the token."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/jwt/src/test/java/org/owasp/webgoat/jwt/JWTSecretKeyEndpointTest.java"},"region":{"startLine":102}}}],"ruleId":"sigma.jwt_non_expiring_token:io_jsonwebtoken|java","partialFingerprints":{"ruleIdLocationHash/v1":"136baaca419f2b8b1df052870fc2d5c502a923b781ee9b5e3ba7051d1ce0f28a"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/jwt/src/test/java/org/owasp/webgoat/jwt/JWTSecretKeyEndpointTest.java"},"region":{"startLine":102}},"message":{"text":"The instance of `JwtBuilder` doesn't set the expiration time when generating the token. Ignoring the expiration time for a JSON web token means it is valid forever. Since the token never expires, an attacker has a longer window to brute-force or exploit the stolen the token."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/jwt/src/test/java/org/owasp/webgoat/jwt/JWTSecretKeyEndpointTest.java"},"region":{"startLine":102}},"message":{"text":"Set the expiration time of the token by invoking `JwtBuilder.setExpiration()` or `Claims.setExpiration()`."}}}]}]}]},{"message":{"text":"[See in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/issues/B97A67BD1E16299F90D86CB92D9598F4?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026filter=issueType%3Alocalized-name%3DImproper%20Privilege%20Management%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Ddocker-compose-local.yml)\n\nThe Docker container requests the `NET_RAW` capability, either explicitly or by default, granting access to the host's network interfaces."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"docker-compose-local.yml"},"region":{"startLine":5}}}],"ruleId":"sigma.container_requesting_net_raw:docker_compose|text","partialFingerprints":{"ruleIdLocationHash/v1":"59cc756d8f31e1f15f54eb7daa2d8416ad1ee4b70d95fd768ddb0948a07fed2e"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"docker-compose-local.yml"},"region":{"startLine":5}},"message":{"text":"The Docker container requests the `NET_RAW` capability, either explicitly or by default, granting access to the host's network interfaces."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"docker-compose-local.yml"},"region":{"startLine":5}},"message":{"text":"Explicitly remove the `NET_RAW` capability by adding either `NET_RAW` or `ALL` to the `cap_drop` list and avoiding the `NET_RAW` capability in the `cap_add` list."}}}]}]}]},{"message":{"text":"[See in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/issues/4DAC54908F353C62A8F4CA9BA720EB24?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026filter=issueType%3Alocalized-name%3DUse%20of%20Hard-coded%20Credentials%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dwebgoat-container%2Fsrc%2Ftest%2Fjava%2Forg%2Fowasp%2Fwebgoat%2Fusers%2FUserValidatorTest.java)\n\nA secret, such as a password, cryptographic key, or token is stored in plaintext directly in the source code, in an application's properties, or configuration file. Users with access to the secret may then use the secret to access resources that they otherwise would not have access to."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"webgoat-container/src/test/java/org/owasp/webgoat/users/UserValidatorTest.java"},"region":{"startLine":27}}}],"ruleId":"sigma.hardcoded_secret:pattern|java","partialFingerprints":{"ruleIdLocationHash/v1":"4622775afb05a921ae0669f685d1d38246e44e722c488d4a2e9d985b6206e36d"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-container/src/test/java/org/owasp/webgoat/users/UserValidatorTest.java"},"region":{"startLine":27}},"message":{"text":"A secret, such as a password, cryptographic key, or token is stored in plaintext directly in the source code, in an application's properties, or configuration file. Users with access to the secret may then use the secret to access resources that they otherwise would not have access to. Secret type: Password (generic)."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-container/src/test/java/org/owasp/webgoat/users/UserValidatorTest.java"},"region":{"startLine":27}},"message":{"text":"Avoid setting sensitive configuration values as string literals. Instead, these values should be set using variables with the sensitive data loaded from an encrypted file or a secret store."}}}]}]}]},{"message":{"text":"[See in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/issues/6044BC6848D711C93ABF1B1145810905?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026filter=issueType%3Alocalized-name%3DDm:%20Dubious%20method%20used%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dwebgoat-integration-tests%2Fsrc%2Ftest%2Fjava%2Forg%2Fowasp%2Fwebgoat%2FChallengeTest.java)\n\nFound a call to a method which will perform a byte to String (or String to byte) conversion, and will assume that the default platform encoding is suitable. (\u003ca href=\"/doc/en/spotbugs/sb_checker_ref.html#FB.DM_DEFAULT_ENCODING\" target=\"_blank\"\u003eFrom SpotBugs description\u003c/a\u003e)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"webgoat-integration-tests/src/test/java/org/owasp/webgoat/ChallengeTest.java"},"region":{"startLine":33}}}],"ruleId":"FB.DM_DEFAULT_ENCODING|java","partialFingerprints":{"ruleIdLocationHash/v1":"20dbd10ab9c14745d6e9c98651c0a04119a790d3c67c58171d899a247b3026a4"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-integration-tests/src/test/java/org/owasp/webgoat/ChallengeTest.java"},"region":{"startLine":33}},"message":{"text":"Found reliance on default encoding: new String(byte[])."}}}]}]}]},{"message":{"text":"[See in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/issues/EB7BAE20DE66319DC86454636E3B266F?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026filter=issueType%3Alocalized-name%3DWeak%20Hash%20Function%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dwebgoat-lessons%2Fcrypto%2Fsrc%2Fmain%2Fjava%2Forg%2Fowasp%2Fwebgoat%2Fcrypto%2FHashingAssignment.java)\n\nA risky hashing function was used. This may allow an attacker to produce collisions on the hash or execute length extension attacks."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/crypto/src/main/java/org/owasp/webgoat/crypto/HashingAssignment.java"},"region":{"startLine":57}}}],"ruleId":"risky_crypto:hashing|java","partialFingerprints":{"ruleIdLocationHash/v1":"a98ae0789a071d52103c391bd28226d45b6641a4a68038fa214ad52b9b925a97"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/crypto/src/main/java/org/owasp/webgoat/crypto/HashingAssignment.java"},"region":{"startLine":53}},"message":{"text":"Condition \"md5Hash == null\", taking true branch."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/crypto/src/main/java/org/owasp/webgoat/crypto/HashingAssignment.java"},"region":{"startLine":57}},"message":{"text":"Using a weak hashing algorithm. The RIPEMD, MD2, MD4, MD5, SHA0 and SHA1 cryptographic hashing algorithms are not collision resistant. Furthermore, these algorithms suffer from length extension attacks: without knowing the original unhashed message, an attacker can generate a valid hash for messages that have the original message as a prefix."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/crypto/src/main/java/org/owasp/webgoat/crypto/HashingAssignment.java"},"region":{"startLine":57}},"message":{"text":"1) Use a strong, well-vetted cryptographic hash function that is currently not known to suffer these weaknesses, such as a SHA-2 family hash like SHA-256.\n2) Use a hashed message authenticated code (HMAC) when comparing the output of the hash to a value provided by a user, such as to ensure a value has not been tampered with.\n3) Use a password-based key derivative function such as PBKDF2, scrypt, or bcrypt for deriving the key, when the data going into the hash function is a user-provided password or passphrase."}}}]}]}]},{"message":{"text":"[See in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/issues/AE04206BE0286E9207AC767F4F64BCF2?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026filter=issueType%3Alocalized-name%3DImproper%20Control%20of%20Document%20Type%20Definition%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dwebgoat-lessons%2Fxxe%2Fsrc%2Fmain%2Fjava%2Forg%2Fowasp%2Fwebgoat%2Fxxe%2FSimpleXXE.java)\n\nPassing tainted input data with possibly arbitrary DTDs to a weakly configured XML parser."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/xxe/src/main/java/org/owasp/webgoat/xxe/SimpleXXE.java"},"region":{"startLine":69}}}],"ruleId":"xml_external_entity:unrestricted_dtds|java","partialFingerprints":{"ruleIdLocationHash/v1":"1a3a129198676bd362719706a532a5f71bab9b991f7ae778768c583ec687d651"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/xxe/src/main/java/org/owasp/webgoat/xxe/SimpleXXE.java"},"region":{"startLine":66}},"message":{"text":"\"createNewComment\" is an entry point function."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/xxe/src/main/java/org/owasp/webgoat/xxe/SimpleXXE.java"},"region":{"startLine":66}},"message":{"text":"The \"commentStr\" is tainted."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/xxe/src/main/java/org/owasp/webgoat/xxe/SimpleXXE.java"},"region":{"startLine":69}},"message":{"text":"Calling \"parseXml\". Passing the tainted value \"commentStr\" to a weakly configured XML parser. (The virtual call resolves to \"org.owasp.webgoat.xxe.Comments.parseXml(java.lang.String)\".) An attacker-controlled DTD may include external entity URLs, and the resolution of external entities may expose sensitive data or result in unwanted server requests. Processing an attacker-controlled DTD may also result in an overwhelming number of entity expansions, causing denial of service."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/xxe/src/main/java/org/owasp/webgoat/xxe/SimpleXXE.java"},"region":{"startLine":69}},"message":{"text":"The recommended and strongest prevention against both external entity and entity expansion attacks is to disable DTD processing in the parser. A \"javax.xml.stream.XMLInputFactory\" instance \"xiFactory\" can be configured to disable DTD processing by calling \"xiFactory.setProperty(XMLInputFactory.SUPPORT_DTD, false)\"."}}}]}]}]},{"message":{"text":"[See in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/issues/E9D47DA65C98834B5BCAF4408E0638E3?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026filter=issueType%3Alocalized-name%3DCopy-Paste%20Error%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dwebgoat-container%2Ftarget%2Fclasses%2Fstatic%2Fjs%2Flibs%2Face.js)\n\nA copied piece of code is inconsistent with the original"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"webgoat-container/target/classes/static/js/libs/ace.js"},"region":{"startLine":7159}}}],"ruleId":"copy_paste_error|javascript","partialFingerprints":{"ruleIdLocationHash/v1":"a8bfcdb9d3b5771e626d212e3e2b87e6b6c4bdac654e3f714f05768f1e0ee231"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-container/target/classes/static/js/libs/ace.js"},"region":{"startLine":7156}},"message":{"text":"\"cursor.column\" looks like the original copy."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-container/target/classes/static/js/libs/ace.js"},"region":{"startLine":7159}},"message":{"text":"\"column\" in \"cursor.column\" looks like a copy-paste error."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-container/target/classes/static/js/libs/ace.js"},"region":{"startLine":7159}},"message":{"text":"Should it say \"row\" instead?"}}}]}]}]},{"message":{"text":"[See in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/issues/33A50808414509700434C57006E5211C?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026filter=issueType%3Alocalized-name%3DCleartext%20Transmission%20of%20Sensitive%20Information%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dwebgoat-container%2Fsrc%2Ftest%2Fresources%2Fapplication-test.properties)\n\nThe Spring Boot application's data source is configured to disable SSL by setting the `spring.datasource.url` attribute to a value without `useSSL=true`. Thus, sensitive data transmitted over an insecure communication channel could be read and modified by attackers."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"webgoat-container/src/test/resources/application-test.properties"},"region":{"startLine":3}}}],"ruleId":"sigma.missing_tls:spring_boot_datasource_properties|text","partialFingerprints":{"ruleIdLocationHash/v1":"2b6aeaf3b1e6fc5d56f7309075cd867e1ee78eaf154cd108f10ef270546b4f4e"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-container/src/test/resources/application-test.properties"},"region":{"startLine":3}},"message":{"text":"The Spring Boot application's data source is configured to disable SSL by setting the `spring.datasource.url` attribute to a value without `useSSL=true`. Thus, sensitive data transmitted over an insecure communication channel could be read and modified by attackers."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-container/src/test/resources/application-test.properties"},"region":{"startLine":3}},"message":{"text":"Explicitly enable SSL by setting the `spring.datasource.url` attribute to a value that contains `useSSL=true`."}}}]}]}]},{"message":{"text":"[See in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/issues/787E3BB4FDC16A535C148BE4A15A7F56?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026filter=issueType%3Alocalized-name%3DImproper%20Verification%20of%20Cryptographic%20Signature%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dwebgoat-lessons%2Fjwt%2Fsrc%2Ftest%2Fjava%2Forg%2Fowasp%2Fwebgoat%2Fjwt%2FJWTFinalEndpointTest.java)\n\nThe application uses the `io.jsonwebtoken.JwtParser` package's `parse()`, `parsePlaintextJwt()`, or `parseClaimsJwt()` method to parse a JWT without first verifying the token's signature, allowing an attacker to forge the token claims and perform attacks such as impersonating other users."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/jwt/src/test/java/org/owasp/webgoat/jwt/JWTFinalEndpointTest.java"},"region":{"startLine":93}}}],"ruleId":"sigma.jwt_untrusted_decode:io_jsonwebtoken|java","partialFingerprints":{"ruleIdLocationHash/v1":"211c2757e426f7a8468076b1acb70d0919acfed62fab93474ad88da1a165b72c"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/jwt/src/test/java/org/owasp/webgoat/jwt/JWTFinalEndpointTest.java"},"region":{"startLine":93}},"message":{"text":"The application uses the `io.jsonwebtoken.JwtParser` package's `parse()`, `parsePlaintextJwt()`, or `parseClaimsJwt()` method to parse a JWT without first verifying the token's signature, allowing an attacker to forge the token claims and perform attacks such as impersonating other users."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/jwt/src/test/java/org/owasp/webgoat/jwt/JWTFinalEndpointTest.java"},"region":{"startLine":93}},"message":{"text":"Modify the application to use `parseClaimsJws()` or `parsePlaintextJws()` instead, since these methods will automatically verify the token signature."}}}]}]}]},{"message":{"text":"[See in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/issues/BF1BF01AB68F4FC47B8C24FB2B232EC1?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026filter=issueType%3Alocalized-name%3DInsecure%20Object%20Deserialization%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dwebgoat-lessons%2Fvulnerable-components%2Fsrc%2Fmain%2Fjava%2Forg%2Fowasp%2Fwebgoat%2Fvulnerable_components%2FVulnerableComponentsLesson.java)\n\nA user-controllable string is deserialized."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/vulnerable-components/src/main/java/org/owasp/webgoat/vulnerable_components/VulnerableComponentsLesson.java"},"region":{"startLine":53}}}],"ruleId":"unsafe_deserialization|java","partialFingerprints":{"ruleIdLocationHash/v1":"ada6a0a1cbf437696128783b4322d327a23a0a191c8198ea4e72eb50ff4de52e"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/vulnerable-components/src/main/java/org/owasp/webgoat/vulnerable_components/VulnerableComponentsLesson.java"},"region":{"startLine":42}},"message":{"text":"\"completed\" is an entry point function."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/vulnerable-components/src/main/java/org/owasp/webgoat/vulnerable_components/VulnerableComponentsLesson.java"},"region":{"startLine":42}},"message":{"text":"The \"payload\" is tainted."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/vulnerable-components/src/main/java/org/owasp/webgoat/vulnerable_components/VulnerableComponentsLesson.java"},"region":{"startLine":51}},"message":{"text":"Calling \"replace\". This call assigns \"payload\" to \"\u003creturn value\u003e\". Now \"\u003creturn value\u003e\" is tainted. (The virtual call resolves to \"java.lang.String.replace(java.lang.CharSequence, java.lang.CharSequence)\".)"}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/vulnerable-components/src/main/java/org/owasp/webgoat/vulnerable_components/VulnerableComponentsLesson.java"},"region":{"startLine":51}},"message":{"text":"Assigning: \"payload\" = \"payload.replace(\"+\", \"\").replace(\"\\r\", \"\").replace(\"\\n\", \"\").replace(\"\u003e \", \"\u003e\").replace(\" \u003c\", \"\u003c\")\"."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/vulnerable-components/src/main/java/org/owasp/webgoat/vulnerable_components/VulnerableComponentsLesson.java"},"region":{"startLine":53}},"message":{"text":"Calling \"fromXML\". This call uses \"payload\" for sensitive computation. (The virtual call resolves to \"com.thoughtworks.xstream.XStream.fromXML(java.lang.String)\".)"}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/vulnerable-components/src/main/java/org/owasp/webgoat/vulnerable_components/VulnerableComponentsLesson.java"},"region":{"startLine":53}},"message":{"text":"If possible, use pure data formats such as JSON or XML to serialize and deserialize untrusted data.  Otherwise, if you must use native serialization methods, check the integrity of the data (for example with HMAC) before deserializing it."}}}]}]}]},{"message":{"text":"[See in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/issues/8B2D2554065857DC153A733203FE4BD8?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026filter=issueType%3Alocalized-name%3DDm:%20Dubious%20method%20used%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dwebgoat-lessons%2Fcrypto%2Fsrc%2Fmain%2Fjava%2Forg%2Fowasp%2Fwebgoat%2Fcrypto%2FHashingAssignment.java)\n\nFound a call to a method which will perform a byte to String (or String to byte) conversion, and will assume that the default platform encoding is suitable. (\u003ca href=\"/doc/en/spotbugs/sb_checker_ref.html#FB.DM_DEFAULT_ENCODING\" target=\"_blank\"\u003eFrom SpotBugs description\u003c/a\u003e)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/crypto/src/main/java/org/owasp/webgoat/crypto/HashingAssignment.java"},"region":{"startLine":58}}}],"ruleId":"FB.DM_DEFAULT_ENCODING|java","partialFingerprints":{"ruleIdLocationHash/v1":"681c0cbd83d88517c3c6d39db1524ac13ceb21d6467804d42ef6ed59cd943c86"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/crypto/src/main/java/org/owasp/webgoat/crypto/HashingAssignment.java"},"region":{"startLine":58}},"message":{"text":"Found reliance on default encoding: String.getBytes()."}}}]}]}]},{"message":{"text":"[See in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/issues/3B8D90A8EABF871317D6470F9D835905?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026filter=issueType%3Alocalized-name%3DSensitive%20Cookie%20with%20Improper%20SameSite%20Attribute%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dwebgoat-lessons%2Fjwt%2Fsrc%2Fmain%2Fjava%2Forg%2Fowasp%2Fwebgoat%2Fjwt%2FJWTVotesEndpoint.java)\n\nThe application returns a `Set-Cookie` HTTP response header without the `SameSite` attribute. As a result, the client will use the default value which, in older browsers, is the insecure value `None`. In this case, the client will send the cookie for cross-origin requests, making Cross-Site Request Forgery (CSRF) attacks possible if other mitigating controls are absent."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/jwt/src/main/java/org/owasp/webgoat/jwt/JWTVotesEndpoint.java"},"region":{"startLine":104}}}],"ruleId":"sigma.missing_samesite_attribute:servlet|java","partialFingerprints":{"ruleIdLocationHash/v1":"6167eab2afe0ce7d94b3b2c6f94b23b0480786daa5b0160fc44e2f50281f350a"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/jwt/src/main/java/org/owasp/webgoat/jwt/JWTVotesEndpoint.java"},"region":{"startLine":104}},"message":{"text":"The application returns a `Set-Cookie` HTTP response header without the `SameSite` attribute. As a result, the client will use the default value which, in older browsers, is the insecure value `None`. In this case, the client will send the cookie for cross-origin requests, making Cross-Site Request Forgery (CSRF) attacks possible if other mitigating controls are absent."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/jwt/src/main/java/org/owasp/webgoat/jwt/JWTVotesEndpoint.java"},"region":{"startLine":104}},"message":{"text":"Set the `Samesite` attribute on this cookie to a safe value such as `Strict` or `Lax`."}}}]}]}]},{"message":{"text":"[See in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/issues/FEF70227D61D8D33D0822619C6BDBACE?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026filter=issueType%3Alocalized-name%3DExpected%20Behavior%20Violation%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dwebgoat-lessons%2Fchallenge%2Fsrc%2Fmain%2Fjava%2Forg%2Fowasp%2Fwebgoat%2Fchallenges%2Fchallenge7%2FPasswordResetLink.java)\n\nThis code creates a java.util.Random object, uses it to generate one random number, and then discards the Random object. (\u003ca href=\"/doc/en/spotbugs/sb_checker_ref.html#FB.DMI_RANDOM_USED_ONLY_ONCE\" target=\"_blank\"\u003eFrom SpotBugs description\u003c/a\u003e)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/challenge/src/main/java/org/owasp/webgoat/challenges/challenge7/PasswordResetLink.java"},"region":{"startLine":17}}}],"ruleId":"FB.DMI_RANDOM_USED_ONLY_ONCE|java","partialFingerprints":{"ruleIdLocationHash/v1":"78f57ca0f976c319a453e195215a48424ce163d67c2db65f01803bf5f95b42ff"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/challenge/src/main/java/org/owasp/webgoat/challenges/challenge7/PasswordResetLink.java"},"region":{"startLine":17}},"message":{"text":"Random object created and used only once."}}}]}]}]},{"message":{"text":"[See in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/issues/D7C74E460BEEBAE8DFB405B634E8C847?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026filter=issueType%3Alocalized-name%3DPI:%20Do%20not%20reuse%20public%20identifiers%20from%20Java%20Standard%20Library%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dwebgoat-lessons%2Fsql-injection%2Fsrc%2Fmain%2Fjava%2Forg%2Fowasp%2Fwebgoat%2Fsql_injection%2Fmitigation%2FServers.java)\n\nIt's essential to avoid reusing public identifiers from the Java Standard Library as class names. (\u003ca href=\"/doc/en/spotbugs/sb_checker_ref.html#FB.PI_DO_NOT_REUSE_PUBLIC_IDENTIFIERS_CLASS_NAMES\" target=\"_blank\"\u003eFrom SpotBugs description\u003c/a\u003e)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/mitigation/Servers.java"},"region":{"startLine":51}}}],"ruleId":"FB.PI_DO_NOT_REUSE_PUBLIC_IDENTIFIERS_CLASS_NAMES|java","partialFingerprints":{"ruleIdLocationHash/v1":"170e2bb017c6c42831e86b64ea0f9f911e21905dbbcaf55b129820d41207db0a"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/mitigation/Servers.java"},"region":{"startLine":51}},"message":{"text":"Class name ?\u003e?1/1??? in source file ?\u003e?2/1??? shadows the publicly available identifier from the Java Standard Library."}}}]}]}]},{"message":{"text":"[See in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/issues/6780AB3F0A4DD38E3D83BD3BB1CCCADB?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026filter=issueType%3Alocalized-name%3DImproper%20Resource%20Shutdown%20or%20Release%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dwebgoat-lessons%2Fjwt%2Fsrc%2Fmain%2Fjava%2Forg%2Fowasp%2Fwebgoat%2Fjwt%2FJWTFinalEndpoint.java)\n\nLeak of a system resource"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/jwt/src/main/java/org/owasp/webgoat/jwt/JWTFinalEndpoint.java"},"region":{"startLine":167}}}],"ruleId":"resource_leak|java","partialFingerprints":{"ruleIdLocationHash/v1":"a8e7e9863865f857a948a4496709a69277c50459711f9f2bad65d1539a60561d"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/jwt/src/main/java/org/owasp/webgoat/jwt/JWTFinalEndpoint.java"},"region":{"startLine":167}},"message":{"text":"A new resource is returned from allocation method \"createStatement\"."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/jwt/src/main/java/org/owasp/webgoat/jwt/JWTFinalEndpoint.java"},"region":{"startLine":167}},"message":{"text":"Resource \"connection.createStatement()\" is not closed or saved in \"executeQuery\"."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/jwt/src/main/java/org/owasp/webgoat/jwt/JWTFinalEndpoint.java"},"region":{"startLine":167}},"message":{"text":"Failing to save or close resource created by \"connection.createStatement()\" leaks it."}}}]}]}]},{"message":{"text":"[See in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/issues/D1240D82A405EBF9E423440BD93BB6E3?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026filter=issueType%3Alocalized-name%3DAssignment%20to%20Variable%20without%20Use%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dwebgoat-container%2Fsrc%2Fmain%2Fjava%2Forg%2Fowasp%2Fwebgoat%2Fcontroller%2FStartLesson.java)\n\nThis instruction assigns a value to a local variable, but the value is not read or used in any subsequent instruction. (\u003ca href=\"/doc/en/spotbugs/sb_checker_ref.html#FB.DLS_DEAD_LOCAL_STORE\" target=\"_blank\"\u003eFrom SpotBugs description\u003c/a\u003e)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"webgoat-container/src/main/java/org/owasp/webgoat/controller/StartLesson.java"},"region":{"startLine":79}}}],"ruleId":"FB.DLS_DEAD_LOCAL_STORE|java","partialFingerprints":{"ruleIdLocationHash/v1":"0a04a33e5b5f2d81e67dfe821bcaf2e73f17cd3a4d0a182d049e88ac00dc4888"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-container/src/main/java/org/owasp/webgoat/controller/StartLesson.java"},"region":{"startLine":79}},"message":{"text":"Dead store to context."}}}]}]}]},{"message":{"text":"[See in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/issues/C2BCFFDC620641CF1BD0683ADDFD7F5E?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026filter=issueType%3Alocalized-name%3DInclusion%20of%20Functionality%20from%20Untrusted%20Control%20Sphere%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dgoat-with-reverseproxy.yaml)\n\nThe Docker Compose file does not explicitly set `image` attribute with a specific stable version. Pinning the version of the base image will make the container being built more predictable. Relying on the latest version may silently inherit newer packages, which in the best case may affect application reliability and in the worst case may introduce vulnerabilities."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"goat-with-reverseproxy.yaml"},"region":{"startLine":23}}}],"ruleId":"sigma.unspecified_software_version:docker_compose|text","partialFingerprints":{"ruleIdLocationHash/v1":"31c7b0837b8dc062b1139b4ebfd51f2036d12047444cf8f0093bd1419a69263a"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"goat-with-reverseproxy.yaml"},"region":{"startLine":23}},"message":{"text":"The Docker Compose file does not explicitly set `image` attribute with a specific stable version. Pinning the version of the base image will make the container being built more predictable. Relying on the latest version may silently inherit newer packages, which in the best case may affect application reliability and in the worst case may introduce vulnerabilities."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"goat-with-reverseproxy.yaml"},"region":{"startLine":23}},"message":{"text":"Explicitly set the `image` attribute to a specific stable version."}}}]}]}]},{"message":{"text":"[See in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/issues/7788758A5555B87D33954ABC9C05E118?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026filter=issueType%3Alocalized-name%3DImproper%20Privilege%20Management%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Ddocker-compose-postgres.yml)\n\nThe Docker container requests the `NET_RAW` capability, either explicitly or by default, granting access to the host's network interfaces."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"docker-compose-postgres.yml"},"region":{"startLine":30}}}],"ruleId":"sigma.container_requesting_net_raw:docker_compose|text","partialFingerprints":{"ruleIdLocationHash/v1":"3ff3f935f619be2f9ed2c0c5a2e0f04fa98088fd1de25d3d950105b30677787f"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"docker-compose-postgres.yml"},"region":{"startLine":30}},"message":{"text":"The Docker container requests the `NET_RAW` capability, either explicitly or by default, granting access to the host's network interfaces."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"docker-compose-postgres.yml"},"region":{"startLine":30}},"message":{"text":"Explicitly remove the `NET_RAW` capability by adding either `NET_RAW` or `ALL` to the `cap_drop` list and avoiding the `NET_RAW` capability in the `cap_add` list."}}}]}]}]},{"message":{"text":"[See in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/issues/981D7D3A88F9FA155D995510EF7CC67B?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026filter=issueType%3Alocalized-name%3DUse%20of%20a%20One-Way%20Hash%20with%20a%20Predictable%20Salt%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dwebgoat-integration-tests%2Fsrc%2Ftest%2Fjava%2Forg%2Fowasp%2Fwebgoat%2FCryptoTest.java)\n\nHashing a password without using a random and unique salt as part of the input."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"webgoat-integration-tests/src/test/java/org/owasp/webgoat/CryptoTest.java"},"region":{"startLine":87}}}],"ruleId":"weak_password_hash:weak_salt|java","partialFingerprints":{"ruleIdLocationHash/v1":"616188e9293139e1e9ee26a5152cf232d420ea53d161a8ea00c08791c34e8f18"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-integration-tests/src/test/java/org/owasp/webgoat/CryptoTest.java"},"region":{"startLine":76}},"message":{"text":"Hashing a password without using a salt as part of the input. If password hashes leak to an attacker, they can use readily-available hash lookup tables to recover large numbers of passwords with little effort."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-integration-tests/src/test/java/org/owasp/webgoat/CryptoTest.java"},"region":{"startLine":86}},"message":{"text":"Assigning: \"secret\" = \"org.owasp.webgoat.crypto.HashingAssignment.SECRETS[secret$index]\". Now \"secret\" is equal to \"SECRETS\"."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-integration-tests/src/test/java/org/owasp/webgoat/CryptoTest.java"},"region":{"startLine":87}},"message":{"text":"Calling \"getHash\". This call uses \"secret\" for sensitive computation."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-integration-tests/src/test/java/org/owasp/webgoat/CryptoTest.java"},"region":{"startLine":87}},"message":{"text":"The recommended method of hashing sensitive password data is to generate a random sequence of bytes (a \"salt\") for each password to hash, hash the password and the salt with an adaptive hash function such as bcrypt, scrypt, and PBKDF2 (Password-Based Key Derivation Function 2), and then store the hash and the salt for subsequent password checks."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/crypto/src/main/java/org/owasp/webgoat/crypto/EncodingAssignment.java"},"region":{"startLine":48}},"message":{"text":"Calling at a later point \"getBasicAuth\". This call taints \"SECRETS\"."}}}]}]}]},{"message":{"text":"[See in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/issues/0B49DC38A16F511DD62B13374A5D86C7?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026filter=issueType%3Alocalized-name%3DUse%20of%20Hard-coded%20Credentials%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dwebgoat-lessons%2Finsecure-deserialization%2Fsrc%2Ftest%2Fjava%2Forg%2Fowasp%2Fwebgoat%2Fdeserialization%2FDeserializeTest.java)\n\nA secret, such as a password, cryptographic key, or token is stored in plaintext directly in the source code, in an application's properties, or configuration file. Users with access to the secret may then use the secret to access resources that they otherwise would not have access to."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/insecure-deserialization/src/test/java/org/owasp/webgoat/deserialization/DeserializeTest.java"},"region":{"startLine":69}}}],"ruleId":"sigma.hardcoded_secret:pattern|java","partialFingerprints":{"ruleIdLocationHash/v1":"e05bf5237e468c798e0b53babd2738f7353a4f5271e1a30b6984689f069658c0"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/insecure-deserialization/src/test/java/org/owasp/webgoat/deserialization/DeserializeTest.java"},"region":{"startLine":69}},"message":{"text":"A secret, such as a password, cryptographic key, or token is stored in plaintext directly in the source code, in an application's properties, or configuration file. Users with access to the secret may then use the secret to access resources that they otherwise would not have access to. Secret type: Token (generic)."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/insecure-deserialization/src/test/java/org/owasp/webgoat/deserialization/DeserializeTest.java"},"region":{"startLine":69}},"message":{"text":"Avoid setting sensitive configuration values as string literals. Instead, these values should be set using variables with the sensitive data loaded from an encrypted file or a secret store."}}}]}]}]},{"message":{"text":"[See in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/issues/44B421545CB51CC34F34F3C3E832290E?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026filter=issueType%3Alocalized-name%3DNULL%20Pointer%20Dereference%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dwebgoat-lessons%2Fjwt%2Fsrc%2Ftest%2Fjava%2Forg%2Fowasp%2Fwebgoat%2Fjwt%2FJWTVotesEndpointTest.java)\n\nReturn value of function which returns null is dereferenced without checking"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/jwt/src/test/java/org/owasp/webgoat/jwt/JWTVotesEndpointTest.java"},"region":{"startLine":163}}}],"ruleId":"null_pointer_dereference_exception:return_value|java","partialFingerprints":{"ruleIdLocationHash/v1":"46a0032d9b0b051c7d88a7c27237db4821546f4b4d697726384f7819c0cd3c02"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/jwt/src/test/java/org/owasp/webgoat/jwt/JWTVotesEndpointTest.java"},"region":{"startLine":163}},"message":{"text":"\"findNodeByTitle\" returns \"null\" (checked 0 out of 2 times)."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/jwt/src/test/java/org/owasp/webgoat/jwt/JWTVotesEndpointTest.java"},"region":{"startLine":163}},"message":{"text":"Calling a method on null object \"findNodeByTitle(nodes, \"Admin lost password\")\"."}}}]}]}]},{"message":{"text":"[See in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/issues/3AA47B43784A57F541BF82A19ED61787?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026filter=issueType%3Alocalized-name%3DUse%20of%20Hard-coded%20Credentials%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dwebgoat-lessons%2Finsecure-deserialization%2Fsrc%2Ftest%2Fjava%2Forg%2Fowasp%2Fwebgoat%2Fdeserialization%2FDeserializeTest.java)\n\nA secret, such as a password, cryptographic key, or token is stored in plaintext directly in the source code, in an application's properties, or configuration file. Users with access to the secret may then use the secret to access resources that they otherwise would not have access to."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/insecure-deserialization/src/test/java/org/owasp/webgoat/deserialization/DeserializeTest.java"},"region":{"startLine":82}}}],"ruleId":"sigma.hardcoded_secret:pattern|java","partialFingerprints":{"ruleIdLocationHash/v1":"d67c455f4de0abdca8e88950ec89f86fd3745de7877cc47858e577689890e8dd"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/insecure-deserialization/src/test/java/org/owasp/webgoat/deserialization/DeserializeTest.java"},"region":{"startLine":82}},"message":{"text":"A secret, such as a password, cryptographic key, or token is stored in plaintext directly in the source code, in an application's properties, or configuration file. Users with access to the secret may then use the secret to access resources that they otherwise would not have access to. Secret type: Token (generic)."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/insecure-deserialization/src/test/java/org/owasp/webgoat/deserialization/DeserializeTest.java"},"region":{"startLine":82}},"message":{"text":"Avoid setting sensitive configuration values as string literals. Instead, these values should be set using variables with the sensitive data loaded from an encrypted file or a secret store."}}}]}]}]},{"message":{"text":"[See in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/issues/B96A6277B7EFFB46F16E27AEBC6C7E27?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026filter=issueType%3Alocalized-name%3DImproper%20Resource%20Shutdown%20or%20Release%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dwebgoat-lessons%2Fclient-side-filtering%2Fsrc%2Fmain%2Fjava%2Forg%2Fowasp%2Fwebgoat%2Fclient_side_filtering%2FSalaries.java)\n\nLeak of a system resource"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/client-side-filtering/src/main/java/org/owasp/webgoat/client_side_filtering/Salaries.java"},"region":{"startLine":62}}}],"ruleId":"resource_leak|java","partialFingerprints":{"ruleIdLocationHash/v1":"fdd8379072580a9329728675536265c573187c7b8f105e4890f484e0802f1193"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/client-side-filtering/src/main/java/org/owasp/webgoat/client_side_filtering/Salaries.java"},"region":{"startLine":58}},"message":{"text":"Condition \"!targetDirectory.exists()\", taking true branch."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/client-side-filtering/src/main/java/org/owasp/webgoat/client_side_filtering/Salaries.java"},"region":{"startLine":62}},"message":{"text":"\"new java.io.FileOutputStream(new java.io.File(targetDirectory, \"employees.xml\"))\" creates a new resource."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/client-side-filtering/src/main/java/org/owasp/webgoat/client_side_filtering/Salaries.java"},"region":{"startLine":62}},"message":{"text":"Resource \"new java.io.FileOutputStream(new java.io.File(targetDirectory, \"employees.xml\"))\" is not closed or saved in \"copy\"."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/client-side-filtering/src/main/java/org/owasp/webgoat/client_side_filtering/Salaries.java"},"region":{"startLine":62}},"message":{"text":"Failing to save or close resource created by \"new java.io.FileOutputStream(new java.io.File(targetDirectory, \"employees.xml\"))\" leaks it."}}}]}]}]},{"message":{"text":"[See in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/issues/3F487070B8A7CD48E0AA3A25EEECC4A5?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026filter=issueType%3Alocalized-name%3DCross-Site%20Request%20Forgery%20%28CSRF%29%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dwebgoat-lessons%2Fchallenge%2Fsrc%2Fmain%2Fjava%2Forg%2Fowasp%2Fwebgoat%2Fchallenges%2FFlag.java)\n\nThe web application controller modifies data or state and is unprotected from cross-site request forgery."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/challenge/src/main/java/org/owasp/webgoat/challenges/Flag.java"},"region":{"startLine":74}}}],"ruleId":"csrf:database_update|java","partialFingerprints":{"ruleIdLocationHash/v1":"9c77dd950f1fea1a72fe90ce78398d352b4bfec59c20f7eb6dc204755e02deda"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-integration-tests/src/test/java/org/owasp/webgoat/CSRFTest.java"},"region":{"startLine":70}},"message":{"text":"Example 1: Examples of CSRF validator calls."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/challenge/src/main/java/org/owasp/webgoat/challenges/Flag.java"},"region":{"startLine":74}},"message":{"text":"\"org.owasp.webgoat.challenges.Flag.postFlag\" is a web-app entry point that requires protection from cross-site request forgery (CSRF)."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/challenge/src/main/java/org/owasp/webgoat/challenges/Flag.java"},"region":{"startLine":74}},"message":{"text":"Use the CSRF validator method \"org.owasp.webgoat.CSRFTest.checkAssignment3\" to protect against CSRF. Please refer to the examples of its use elsewhere."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/challenge/src/main/java/org/owasp/webgoat/challenges/Flag.java"},"region":{"startLine":80}},"message":{"text":"Condition \"expectedFlag.equals(flag)\", taking false branch."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/challenge/src/main/java/org/owasp/webgoat/challenges/Flag.java"},"region":{"startLine":87}},"message":{"text":"Calling \"save\u003corg.owasp.webgoat.users.UserTracker\u003e\" updates the database."}}}]}]}]},{"message":{"text":"[See in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/issues/75EF5B560022599FABFDE2A3EFBB8AB4?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026filter=issueType%3Alocalized-name%3DSQL%20Injection%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dwebgoat-lessons%2Fsql-injection%2Fsrc%2Fmain%2Fjava%2Forg%2Fowasp%2Fwebgoat%2Fsql_injection%2Fmitigation%2FServers.java)\n\nUntrusted user-supplied data is inserted into a SQL statement without adequate validation, escaping, or filtering."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/mitigation/Servers.java"},"region":{"startLine":72}}}],"ruleId":"sql_injection:sink|java","partialFingerprints":{"ruleIdLocationHash/v1":"0c1ce703471737c6d236b4665af92a28716c71fa0cc1bd5cbe80c196a4734c29"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/mitigation/Servers.java"},"region":{"startLine":69}},"message":{"text":"\"sort\" is an entry point function."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/mitigation/Servers.java"},"region":{"startLine":69}},"message":{"text":"The \"column\" is tainted."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/mitigation/Servers.java"},"region":{"startLine":72}},"message":{"text":"Creating a tainted string using \"column\"."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/mitigation/Servers.java"},"region":{"startLine":72}},"message":{"text":"Calling \"prepareStatement\". Passing the tainted value \"\"select id, hostname, ip, mac, status, description from servers  where status \u003c\u003e 'out of order' order by \" + column\" to the SQL API may allow an attacker to inject SQL. (The virtual call resolves to \"java.sql.Connection.prepareStatement(java.lang.String)\".)"}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/mitigation/Servers.java"},"region":{"startLine":72}},"message":{"text":"Use one of the following methods:\n* Use a query-preparation API to safely construct the SQL query containing user-supplied values.\n* Only concatenate a user-supplied value into a query if it has been checked against a whitelist of safe string values, or if it must be a Boolean or numeric type.\n"}}}]}]}]},{"message":{"text":"[See in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/issues/E57C2F6047700A7E0DC272BC6011FF48?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026filter=issueType%3Alocalized-name%3DCross-site%20Scripting%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dwebgoat-lessons%2Fjwt%2Fsrc%2Fmain%2Fjava%2Forg%2Fowasp%2Fwebgoat%2Fjwt%2FJWTFinalEndpoint.java)\n\nUntrusted user-supplied data is inserted into a context that can execute JavaScript without adequate validation, escaping, or filtering."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/jwt/src/main/java/org/owasp/webgoat/jwt/JWTFinalEndpoint.java"},"region":{"startLine":112}}}],"ruleId":"xss|java","partialFingerprints":{"ruleIdLocationHash/v1":"d2f1d99f2c348503a079df65697513615b472f07339163b676161493267f438d"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/jwt/src/main/java/org/owasp/webgoat/jwt/JWTFinalEndpoint.java"},"region":{"startLine":91}},"message":{"text":"Entering this function as a framework entry point. Parameter \"jsonPayload\" is tainted because it comes from an HTTP request."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/jwt/src/main/java/org/owasp/webgoat/jwt/JWTFinalEndpoint.java"},"region":{"startLine":91}},"message":{"text":"Parameter \"jsonPayload\" receives the tainted data."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/jwt/src/main/java/org/owasp/webgoat/jwt/JWTFinalEndpoint.java"},"region":{"startLine":101}},"message":{"text":"Passing the tainted data through \"io.jsonwebtoken.impl.TextCodec.encode(java.lang.String)\"."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/jwt/src/main/java/org/owasp/webgoat/jwt/JWTFinalEndpoint.java"},"region":{"startLine":105}},"message":{"text":"Passing the tainted data, \"encodedPayload\", to \"org.owasp.webgoat.jwt.JWTFinalEndpoint.getJWTSignature(java.lang.String, java.lang.String, java.lang.String, java.lang.String)\"."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/jwt/src/main/java/org/owasp/webgoat/jwt/JWTFinalEndpoint.java"},"region":{"startLine":105}},"message":{"text":"\"org.owasp.webgoat.jwt.JWTFinalEndpoint.getJWTSignature(java.lang.String, java.lang.String, java.lang.String, java.lang.String)\" returns the tainted data."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/jwt/src/main/java/org/owasp/webgoat/jwt/JWTFinalEndpoint.java"},"region":{"startLine":105}},"message":{"text":"Passing the tainted data through \"io.jsonwebtoken.impl.TextCodec.encode(byte[])\"."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/jwt/src/main/java/org/owasp/webgoat/jwt/JWTFinalEndpoint.java"},"region":{"startLine":112}},"message":{"text":"Concatenating \"encodedSignature\" to an HTML page allows cross-site scripting, because it was not properly sanitized for context HTML PCDATA block."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/jwt/src/main/java/org/owasp/webgoat/jwt/JWTFinalEndpoint.java"},"region":{"startLine":112}},"message":{"text":"Perform the following escaping in the following order to guard against cross-site scripting attacks with Java.\n\nFor example: \"Encode.forHtml(encodedSignature)\"\n\n\n* Use the \"Encode.forHtml\" function from the OWASP Java Encoder. This escapes the output for HTML.\n\n"}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/jwt/src/main/java/org/owasp/webgoat/jwt/JWTFinalEndpoint.java"},"region":{"startLine":114}},"message":{"text":"Printing to HTML output."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/jwt/src/main/java/org/owasp/webgoat/jwt/JWTFinalEndpoint.java"},"region":{"startLine":117}},"message":{"text":"Parameter \"encodedPayload\" receives the tainted data."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/jwt/src/main/java/org/owasp/webgoat/jwt/JWTFinalEndpoint.java"},"region":{"startLine":118}},"message":{"text":"Concatenating the tainted data."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/jwt/src/main/java/org/owasp/webgoat/jwt/JWTFinalEndpoint.java"},"region":{"startLine":127}},"message":{"text":"Passing the tainted data through \"java.lang.String.getBytes(java.nio.charset.Charset)\"."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/jwt/src/main/java/org/owasp/webgoat/jwt/JWTFinalEndpoint.java"},"region":{"startLine":127}},"message":{"text":"Passing the tainted data through \"javax.crypto.Mac.doFinal(byte[])\"."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/jwt/src/main/java/org/owasp/webgoat/jwt/JWTFinalEndpoint.java"},"region":{"startLine":127}},"message":{"text":"Returning the tainted data."}}}]}]}]},{"message":{"text":"[See in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/issues/15C6FDFEFA6CB8EBB971D3A3766DDACF?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026filter=issueType%3Alocalized-name%3DBad%20Use%20Of%20Null-like%20Value%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dwebgoat-container%2Ftarget%2Fclasses%2Fstatic%2Fjs%2Flibs%2Face.js)\n\nPerforming an operation that would be invalid on a null or undefined value."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"webgoat-container/target/classes/static/js/libs/ace.js"},"region":{"startLine":7631}}}],"ruleId":"null_pointer_dereference_exception:constant|javascript","partialFingerprints":{"ruleIdLocationHash/v1":"6738e3258388fdb187375eb07b8fe6380b28e13a734321bce57fff5f91a2a904"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-container/target/classes/static/js/libs/ace.js"},"region":{"startLine":7607}},"message":{"text":"Condition \"!this.completionKeywords\", taking false branch."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-container/target/classes/static/js/libs/ace.js"},"region":{"startLine":7609}},"message":{"text":"Assigning: \"completionKeywords\" = \"undefined\"."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-container/target/classes/static/js/libs/ace.js"},"region":{"startLine":7629}},"message":{"text":"Condition \"!append\", taking false branch."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-container/target/classes/static/js/libs/ace.js"},"region":{"startLine":7631}},"message":{"text":"Accessing a property of null-like value \"completionKeywords\"."}}}]}]}]},{"message":{"text":"[See in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/issues/581116341E3D1EB13687F67B816E4320?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026filter=issueType%3Alocalized-name%3DUnchecked%20Error%20Condition%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dwebgoat-lessons%2Fpassword-reset%2Fsrc%2Fmain%2Fjava%2Forg%2Fowasp%2Fwebgoat%2Fpassword_reset%2FResetLinkAssignmentForgotPassword.java)\n\nThis method might ignore an exception. (\u003ca href=\"/doc/en/spotbugs/sb_checker_ref.html#FB.DE_MIGHT_IGNORE\" target=\"_blank\"\u003eFrom SpotBugs description\u003c/a\u003e)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/password-reset/src/main/java/org/owasp/webgoat/password_reset/ResetLinkAssignmentForgotPassword.java"},"region":{"startLine":94}}}],"ruleId":"FB.DE_MIGHT_IGNORE|java","partialFingerprints":{"ruleIdLocationHash/v1":"db3f46bb4bb5ba11777f77d02905f026492ed84a3015b97a0a006f79e61466c5"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/password-reset/src/main/java/org/owasp/webgoat/password_reset/ResetLinkAssignmentForgotPassword.java"},"region":{"startLine":94}},"message":{"text":"org.owasp.webgoat.password_reset.ResetLinkAssignmentForgotPassword.fakeClickingLinkEmail(String, String) might ignore java.lang.Exception."}}}]}]}]},{"message":{"text":"[See in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/issues/40D24A40669E348721D7437A510218DF?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026filter=issueType%3Alocalized-name%3DCross-Site%20Request%20Forgery%20%28CSRF%29%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dwebgoat-lessons%2Fsql-injection%2Fsrc%2Fmain%2Fjava%2Forg%2Fowasp%2Fwebgoat%2Fsql_injection%2Fintroduction%2FSqlInjectionLesson8.java)\n\nThe web application controller modifies data or state and is unprotected from cross-site request forgery."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson8.java"},"region":{"startLine":53}}}],"ruleId":"csrf:database_update|java","partialFingerprints":{"ruleIdLocationHash/v1":"ff53fcc82a95a2d918be032c5d81f7b1d505f55e4ed61759df8c18eb4346ef47"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson8.java"},"region":{"startLine":53}},"message":{"text":"\"org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson8.completed\" is a web-app entry point that requires protection from cross-site request forgery (CSRF)."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson8.java"},"region":{"startLine":53}},"message":{"text":"Use the CSRF validator method \"org.owasp.webgoat.CSRFTest.checkAssignment3\" to protect against CSRF. Please refer to the examples of its use elsewhere."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson8.java"},"region":{"startLine":54}},"message":{"text":"Calling \"injectableQueryConfidentiality\" updates the database."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-integration-tests/src/test/java/org/owasp/webgoat/CSRFTest.java"},"region":{"startLine":70}},"message":{"text":"Example 1: Examples of CSRF validator calls."}}}]}]}]},{"message":{"text":"[See in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/issues/35874029376F957BCB8B4086F47F5DFA?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026filter=issueType%3Alocalized-name%3DSQL%20Injection%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dwebgoat-lessons%2Fchallenge%2Fsrc%2Fmain%2Fjava%2Forg%2Fowasp%2Fwebgoat%2Fchallenges%2Fchallenge5%2FAssignment5.java)\n\nUntrusted user-supplied data is inserted into a SQL statement without adequate validation, escaping, or filtering."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/challenge/src/main/java/org/owasp/webgoat/challenges/challenge5/Assignment5.java"},"region":{"startLine":59}}}],"ruleId":"sql_injection:sink|java","partialFingerprints":{"ruleIdLocationHash/v1":"cb4cc38d7ade4c2e263ea2acd68c9599716f348436860e8c00919f64200541e7"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/challenge/src/main/java/org/owasp/webgoat/challenges/challenge5/Assignment5.java"},"region":{"startLine":51}},"message":{"text":"\"login\" is an entry point function."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/challenge/src/main/java/org/owasp/webgoat/challenges/challenge5/Assignment5.java"},"region":{"startLine":51}},"message":{"text":"The \"password_login\" is tainted."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/challenge/src/main/java/org/owasp/webgoat/challenges/challenge5/Assignment5.java"},"region":{"startLine":59}},"message":{"text":"Creating a tainted string using \"password_login\"."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/challenge/src/main/java/org/owasp/webgoat/challenges/challenge5/Assignment5.java"},"region":{"startLine":59}},"message":{"text":"Calling \"prepareStatement\". Passing the tainted value \"\"select password from challenge_users where userid = '\" + username_login + \"' and password = '\" + password_login + \"'\"\" to the SQL API may allow an attacker to inject SQL. (The virtual call resolves to \"java.sql.Connection.prepareStatement(java.lang.String)\".)"}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/challenge/src/main/java/org/owasp/webgoat/challenges/challenge5/Assignment5.java"},"region":{"startLine":59}},"message":{"text":"Use one of the following methods:\n* Use a query-preparation API to safely construct the SQL query containing user-supplied values.\n* Only concatenate a user-supplied value into a query if it has been checked against a whitelist of safe string values, or if it must be a Boolean or numeric type.\n"}}}]}]}]},{"message":{"text":"[See in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/issues/285E7398056C3D1B8BB5042F9FD8CE4E?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026filter=issueType%3Alocalized-name%3DImproper%20Control%20of%20Document%20Type%20Definition%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dwebgoat-lessons%2Fxxe%2Fsrc%2Fmain%2Fjava%2Forg%2Fowasp%2Fwebgoat%2Fxxe%2FContentTypeAssignment.java)\n\nPassing tainted input data with possibly arbitrary DTDs to a weakly configured XML parser."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/xxe/src/main/java/org/owasp/webgoat/xxe/ContentTypeAssignment.java"},"region":{"startLine":64}}}],"ruleId":"xml_external_entity:unrestricted_dtds|java","partialFingerprints":{"ruleIdLocationHash/v1":"703c62cead21f4eb115fbd38e3188e1ee69d23b5b9e803ed994ddbb32e859a63"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/xxe/src/main/java/org/owasp/webgoat/xxe/ContentTypeAssignment.java"},"region":{"startLine":53}},"message":{"text":"\"createNewUser\" is an entry point function."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/xxe/src/main/java/org/owasp/webgoat/xxe/ContentTypeAssignment.java"},"region":{"startLine":53}},"message":{"text":"The \"commentStr\" is tainted."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/xxe/src/main/java/org/owasp/webgoat/xxe/ContentTypeAssignment.java"},"region":{"startLine":64}},"message":{"text":"Calling \"parseXml\". Passing the tainted value \"commentStr\" to a weakly configured XML parser. (The virtual call resolves to \"org.owasp.webgoat.xxe.Comments.parseXml(java.lang.String)\".) An attacker-controlled DTD may include external entity URLs, and the resolution of external entities may expose sensitive data or result in unwanted server requests. Processing an attacker-controlled DTD may also result in an overwhelming number of entity expansions, causing denial of service."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/xxe/src/main/java/org/owasp/webgoat/xxe/ContentTypeAssignment.java"},"region":{"startLine":64}},"message":{"text":"The recommended and strongest prevention against both external entity and entity expansion attacks is to disable DTD processing in the parser. A \"javax.xml.stream.XMLInputFactory\" instance \"xiFactory\" can be configured to disable DTD processing by calling \"xiFactory.setProperty(XMLInputFactory.SUPPORT_DTD, false)\"."}}}]}]}]},{"message":{"text":"[See in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/issues/5F7E75FA827C8213535D8C2F0D6AC213?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026filter=issueType%3Alocalized-name%3DAssignment%20to%20Variable%20without%20Use%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dwebgoat-lessons%2Fwebwolf-introduction%2Fsrc%2Fmain%2Fjava%2Forg%2Fowasp%2Fwebgoat%2Fwebwolf_introduction%2FLandingAssignment.java)\n\nThis instruction assigns a value to a local variable, but the value is not read or used in any subsequent instruction. (\u003ca href=\"/doc/en/spotbugs/sb_checker_ref.html#FB.DLS_DEAD_LOCAL_STORE\" target=\"_blank\"\u003eFrom SpotBugs description\u003c/a\u003e)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/webwolf-introduction/src/main/java/org/owasp/webgoat/webwolf_introduction/LandingAssignment.java"},"region":{"startLine":61}}}],"ruleId":"FB.DLS_DEAD_LOCAL_STORE|java","partialFingerprints":{"ruleIdLocationHash/v1":"9ad000e847a569258a07d87e05e9cb5b37ba79be027e964a076d747248344a2f"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/webwolf-introduction/src/main/java/org/owasp/webgoat/webwolf_introduction/LandingAssignment.java"},"region":{"startLine":61}},"message":{"text":"Dead store to uri."}}}]}]}]},{"message":{"text":"[See in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/issues/21D600BB3D7798F8CCDBA86431866AE5?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026filter=issueType%3Alocalized-name%3DImproper%20Resource%20Shutdown%20or%20Release%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dwebgoat-lessons%2Fsql-injection%2Fsrc%2Fmain%2Fjava%2Forg%2Fowasp%2Fwebgoat%2Fsql_injection%2Fintroduction%2FSqlInjectionLesson2.java)\n\nLeak of a system resource"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson2.java"},"region":{"startLine":72}}}],"ruleId":"resource_leak|java","partialFingerprints":{"ruleIdLocationHash/v1":"07ad5d29031b7ad93b8f0ce9922c3395ce3402f03882c3be8edf8dc0e7138bee"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson2.java"},"region":{"startLine":61}},"message":{"text":"A new resource is returned from allocation method \"createStatement\"."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson2.java"},"region":{"startLine":61}},"message":{"text":"Assigning: \"statement\" = resource returned from \"connection.createStatement(1004, 1007)\"."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson2.java"},"region":{"startLine":62}},"message":{"text":"Resource \"statement\" is not closed or saved in \"executeQuery\"."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson2.java"},"region":{"startLine":67}},"message":{"text":"Condition \"results.getString(\"department\").equals(\"Marketing\")\", taking false branch."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson2.java"},"region":{"startLine":72}},"message":{"text":"Variable \"statement\" going out of scope leaks the resource it refers to."}}}]}]}]},{"message":{"text":"[See in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/issues/DD5A57521411F9EF46E14B667011CB56?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026filter=issueType%3Alocalized-name%3DExpected%20Behavior%20Violation%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dwebgoat-lessons%2Fcross-site-scripting%2Fsrc%2Fmain%2Fjava%2Forg%2Fowasp%2Fwebgoat%2Fxss%2FDOMCrossSiteScripting.java)\n\nThis code creates a java.util.Random object, uses it to generate one random number, and then discards the Random object. (\u003ca href=\"/doc/en/spotbugs/sb_checker_ref.html#FB.DMI_RANDOM_USED_ONLY_ONCE\" target=\"_blank\"\u003eFrom SpotBugs description\u003c/a\u003e)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/cross-site-scripting/src/main/java/org/owasp/webgoat/xss/DOMCrossSiteScripting.java"},"region":{"startLine":42}}}],"ruleId":"FB.DMI_RANDOM_USED_ONLY_ONCE|java","partialFingerprints":{"ruleIdLocationHash/v1":"ed94d5fd43f85d45b8b3246dd7581fddcd317ebb904b391f93107d16626e2d64"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/cross-site-scripting/src/main/java/org/owasp/webgoat/xss/DOMCrossSiteScripting.java"},"region":{"startLine":42}},"message":{"text":"Random object created and used only once."}}}]}]}]},{"message":{"text":"[See in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/issues/BA20D4F664F8678DB81BCFC3E592D33C?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026filter=issueType%3Alocalized-name%3DDm:%20Dubious%20method%20used%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dwebgoat-lessons%2Fpath-traversal%2Fsrc%2Ftest%2Fjava%2Forg%2Fowasp%2Fwebgoat%2Fpath_traversal%2FProfileUploadTest.java)\n\nFound a call to a method which will perform a byte to String (or String to byte) conversion, and will assume that the default platform encoding is suitable. (\u003ca href=\"/doc/en/spotbugs/sb_checker_ref.html#FB.DM_DEFAULT_ENCODING\" target=\"_blank\"\u003eFrom SpotBugs description\u003c/a\u003e)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/path-traversal/src/test/java/org/owasp/webgoat/path_traversal/ProfileUploadTest.java"},"region":{"startLine":74}}}],"ruleId":"FB.DM_DEFAULT_ENCODING|java","partialFingerprints":{"ruleIdLocationHash/v1":"6e66ac8109cbe566d1cd3232aa8651a2da9408533ad50a0ed9bebef5bc0dbcbc"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/path-traversal/src/test/java/org/owasp/webgoat/path_traversal/ProfileUploadTest.java"},"region":{"startLine":74}},"message":{"text":"Found reliance on default encoding: String.getBytes()."}}}]}]}]},{"message":{"text":"[See in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/issues/EE0C8A7424B861D0F7E55A2C027D7873?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026filter=issueType%3Alocalized-name%3DInsufficient%20Session%20Expiration%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dwebgoat-lessons%2Fjwt%2Fsrc%2Ftest%2Fjava%2Forg%2Fowasp%2Fwebgoat%2Fjwt%2FJWTSecretKeyEndpointTest.java)\n\nThe instance of `JwtBuilder` doesn't set the expiration time when generating the token. Ignoring the expiration time for a JSON web token means it is valid forever. Since the token never expires, an attacker has a longer window to brute-force or exploit the stolen the token."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/jwt/src/test/java/org/owasp/webgoat/jwt/JWTSecretKeyEndpointTest.java"},"region":{"startLine":79}}}],"ruleId":"sigma.jwt_non_expiring_token:io_jsonwebtoken|java","partialFingerprints":{"ruleIdLocationHash/v1":"36abe88185479e27f226eb9213490f47c8194ed0929d1436982e87f80f1a7663"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/jwt/src/test/java/org/owasp/webgoat/jwt/JWTSecretKeyEndpointTest.java"},"region":{"startLine":79}},"message":{"text":"The instance of `JwtBuilder` doesn't set the expiration time when generating the token. Ignoring the expiration time for a JSON web token means it is valid forever. Since the token never expires, an attacker has a longer window to brute-force or exploit the stolen the token."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/jwt/src/test/java/org/owasp/webgoat/jwt/JWTSecretKeyEndpointTest.java"},"region":{"startLine":79}},"message":{"text":"Set the expiration time of the token by invoking `JwtBuilder.setExpiration()` or `Claims.setExpiration()`."}}}]}]}]},{"message":{"text":"[See in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/issues/82B2DA45FEB54E2F9202CCA94C9C5102?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026filter=issueType%3Alocalized-name%3DImproper%20Privilege%20Management%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Ddocker-compose.yml)\n\nThe Docker Compose file sets the `no-new-privileges` attribute to `false` or omits it as the default value is `false`. This doesn't restrict the container from acquiring additional privileges via SUID or SGID bits. This allows privilege escalation, meaning a user can set the security context of the container and can perform root-level operations."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"docker-compose.yml"},"region":{"startLine":5}}}],"ruleId":"sigma.container_privilege_escalation_allowed:docker_compose|text","partialFingerprints":{"ruleIdLocationHash/v1":"b62688b0e9384ff7dc2fd89825670bb5c20120fe9c859f36136f4c3e432c0104"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"docker-compose.yml"},"region":{"startLine":5}},"message":{"text":"The Docker Compose file sets the `no-new-privileges` attribute to `false` or omits it as the default value is `false`. This doesn't restrict the container from acquiring additional privileges via SUID or SGID bits. This allows privilege escalation, meaning a user can set the security context of the container and can perform root-level operations."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"docker-compose.yml"},"region":{"startLine":5}},"message":{"text":"Disable container privilege escalation by explicitly setting `no-new-privileges` to `true`."}}}]}]}]},{"message":{"text":"[See in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/issues/90E4523DDE66EF77C7A82B05466E4595?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026filter=issueType%3Alocalized-name%3DImproper%20Privilege%20Management%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Ddocker-compose.yml)\n\nThe Docker container requests the `NET_RAW` capability, either explicitly or by default, granting access to the host's network interfaces."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"docker-compose.yml"},"region":{"startLine":17}}}],"ruleId":"sigma.container_requesting_net_raw:docker_compose|text","partialFingerprints":{"ruleIdLocationHash/v1":"9535428c0f17a8833a65bd0210dfccef209bae9b1dd132afdc70e082a60338fb"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"docker-compose.yml"},"region":{"startLine":17}},"message":{"text":"The Docker container requests the `NET_RAW` capability, either explicitly or by default, granting access to the host's network interfaces."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"docker-compose.yml"},"region":{"startLine":17}},"message":{"text":"Explicitly remove the `NET_RAW` capability by adding either `NET_RAW` or `ALL` to the `cap_drop` list and avoiding the `NET_RAW` capability in the `cap_add` list."}}}]}]}]},{"message":{"text":"[See in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/issues/3A3D532F293CEB74FE1B14C39B6D993E?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026filter=issueType%3Alocalized-name%3DUrF:%20Unread%20field%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dwebgoat-lessons%2Fwebgoat-lesson-template%2Fsrc%2Fmain%2Fjava%2Forg%2Fowasp%2Fwebgoat%2Ftemplate%2FSampleAttack.java)\n\nThis field is never read. (\u003ca href=\"/doc/en/spotbugs/sb_checker_ref.html#FB.URF_UNREAD_FIELD\" target=\"_blank\"\u003eFrom SpotBugs description\u003c/a\u003e)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/webgoat-lesson-template/src/main/java/org/owasp/webgoat/template/SampleAttack.java"},"region":{"startLine":79}}}],"ruleId":"FB.URF_UNREAD_FIELD|java","partialFingerprints":{"ruleIdLocationHash/v1":"3d8a933fa35bc986a0cb228a34fc356fccfb70483076f3bb12fc0d41511a033c"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/webgoat-lesson-template/src/main/java/org/owasp/webgoat/template/SampleAttack.java"},"region":{"startLine":79}},"message":{"text":"Unread field: org.owasp.webgoat.template.SampleAttack$Item.price."}}}]}]}]},{"message":{"text":"[See in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/issues/5E647A92F75CCA211D6CD5EBCC5DBF5E?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026filter=issueType%3Alocalized-name%3DUse%20of%20Hard-coded%20Credentials%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dwebgoat-lessons%2Fsql-injection%2Fsrc%2Fmain%2Fresources%2Fhtml%2FSqlInjectionAdvanced.html)\n\nA secret, such as a password, cryptographic key, or token is stored in plaintext directly in the source code, in an application's properties, or configuration file. Users with access to the secret may then use the secret to access resources that they otherwise would not have access to."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/sql-injection/src/main/resources/html/SqlInjectionAdvanced.html"},"region":{"startLine":42}}}],"ruleId":"sigma.hardcoded_secret:pattern|html","partialFingerprints":{"ruleIdLocationHash/v1":"e9c3cb0b07d52811be7804e58e5323d58b61e99dbc0c402a7ca2527adf377ace"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/sql-injection/src/main/resources/html/SqlInjectionAdvanced.html"},"region":{"startLine":42}},"message":{"text":"A secret, such as a password, cryptographic key, or token is stored in plaintext directly in the source code, in an application's properties, or configuration file. Users with access to the secret may then use the secret to access resources that they otherwise would not have access to. Secret type: Password (generic)."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/sql-injection/src/main/resources/html/SqlInjectionAdvanced.html"},"region":{"startLine":42}},"message":{"text":"Avoid setting sensitive configuration values as string literals. Instead, these values should be set using variables with the sensitive data loaded from an encrypted file or a secret store."}}}]}]}]},{"message":{"text":"[See in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/issues/8B2F36EE49F290B609AF3FDC0E8575FC?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026filter=issueType%3Alocalized-name%3DUnreachable%252C%20Unused%20or%20Dead%20Code%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dwebgoat-container%2Ftarget%2Fclasses%2Fstatic%2Fjs%2Flibs%2Face.js)\n\nCode can never be reached because of a logical contradiction"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"webgoat-container/target/classes/static/js/libs/ace.js"},"region":{"startLine":45}}}],"ruleId":"deadcode:logical_contradiction|javascript","partialFingerprints":{"ruleIdLocationHash/v1":"704ee4d86d8c779f7e8ce6b5a9c7fd34ee5bb14f5d4e216c21ff9d33df0e6dc5"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-container/target/classes/static/js/libs/ace.js"},"region":{"startLine":39}},"message":{"text":"Assigning: \"ACE_NAMESPACE\" = \"\"ace\"\"."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-container/target/classes/static/js/libs/ace.js"},"region":{"startLine":45}},"message":{"text":"At condition \"ACE_NAMESPACE\", the truth value of \"ACE_NAMESPACE\" must be true."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-container/target/classes/static/js/libs/ace.js"},"region":{"startLine":45}},"message":{"text":"At condition \"ACE_NAMESPACE\", the type of \"ACE_NAMESPACE\" must be string."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-container/target/classes/static/js/libs/ace.js"},"region":{"startLine":45}},"message":{"text":"The condition \"!ACE_NAMESPACE\" cannot be true."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-container/target/classes/static/js/libs/ace.js"},"region":{"startLine":45}},"message":{"text":"Execution cannot reach the expression \"typeof requirejs !== \"undefined\"\" inside this statement: \"if (!ACE_NAMESPACE \u0026\u0026 (type...\"."}}}]}]}]},{"message":{"text":"[See in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/issues/D70A3DD62EFD0434004DBBAEEEB7F69E?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026filter=issueType%3Alocalized-name%3DUse%20of%20Hard-coded%20Credentials%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dpim.json)\n\nA secret, such as a password, cryptographic key, or token is stored in plaintext directly in the source code, in an application's properties, or configuration file. Users with access to the secret may then use the secret to access resources that they otherwise would not have access to."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"pim.json"},"region":{"startLine":4}}}],"ruleId":"sigma.hardcoded_secret:pattern|text","partialFingerprints":{"ruleIdLocationHash/v1":"40f624f5e445afcf1cb4d94097bd1b20453b8eac3ead18e92957166c824d1687"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"pim.json"},"region":{"startLine":4}},"message":{"text":"A secret, such as a password, cryptographic key, or token is stored in plaintext directly in the source code, in an application's properties, or configuration file. Users with access to the secret may then use the secret to access resources that they otherwise would not have access to. Secret type: Access token (generic)."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"pim.json"},"region":{"startLine":4}},"message":{"text":"Avoid setting sensitive configuration values as string literals. Instead, these values should be set using variables with the sensitive data loaded from an encrypted file or a secret store."}}}]}]}]},{"message":{"text":"[See in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/issues/3B95D7175B4AF3C59AFE2AA5C1DF7BF5?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026filter=issueType%3Alocalized-name%3DImproper%20Privilege%20Management%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dwebgoat-server%2Fsrc%2Fmain%2Fdocker_rpi3%2FDockerfile)\n\nThe Docker container is configured to run as the root user."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"webgoat-server/src/main/docker_rpi3/Dockerfile"},"region":{"startLine":2}}}],"ruleId":"sigma.container_running_as_root:dockerfile|text","partialFingerprints":{"ruleIdLocationHash/v1":"f7e4619aba9834b1ecdaa87d1f0941e32e5d1b8cbed22ef9ef3a021f9a3bbd7e"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-server/src/main/docker_rpi3/Dockerfile"},"region":{"startLine":2}},"message":{"text":"The Docker container is configured to run as the root user."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-server/src/main/docker_rpi3/Dockerfile"},"region":{"startLine":2}},"message":{"text":"Explicitly set the last `USER` value to a non-root user to prevent the container from running in a privileged context."}}}]}]}]},{"message":{"text":"[See in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/issues/9FF2DAE2CAA1B650873C387265C8080E?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026filter=issueType%3Alocalized-name%3DUse%20of%20Hard-coded%20Credentials%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dwebgoat-lessons%2Fpassword-reset%2Fsrc%2Fmain%2Fjava%2Forg%2Fowasp%2Fwebgoat%2Fpassword_reset%2FResetLinkAssignment.java)\n\nA secret, such as a password, cryptographic key, or token is stored in plaintext directly in the source code, in an application's properties, or configuration file. Users with access to the secret may then use the secret to access resources that they otherwise would not have access to."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/password-reset/src/main/java/org/owasp/webgoat/password_reset/ResetLinkAssignment.java"},"region":{"startLine":48}}}],"ruleId":"sigma.hardcoded_secret:pattern|java","partialFingerprints":{"ruleIdLocationHash/v1":"28903f9d38cd65c741d9ece7289c2c9fc498a66841fe7d8f309cc8a9aa15b81d"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/password-reset/src/main/java/org/owasp/webgoat/password_reset/ResetLinkAssignment.java"},"region":{"startLine":48}},"message":{"text":"A secret, such as a password, cryptographic key, or token is stored in plaintext directly in the source code, in an application's properties, or configuration file. Users with access to the secret may then use the secret to access resources that they otherwise would not have access to. Secret type: Password (generic)."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/password-reset/src/main/java/org/owasp/webgoat/password_reset/ResetLinkAssignment.java"},"region":{"startLine":48}},"message":{"text":"Avoid setting sensitive configuration values as string literals. Instead, these values should be set using variables with the sensitive data loaded from an encrypted file or a secret store."}}}]}]}]},{"message":{"text":"[See in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/issues/CC1C4BB61989316AC85BA7424578D74C?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026filter=issueType%3Alocalized-name%3DUseless%20Call%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dwebgoat-lessons%2Fvulnerable-components%2Fsrc%2Ftest%2Fjava%2Forg%2Fowasp%2Fwebgoat%2Fvulnerable_components%2FVulnerableComponentsLessonTest.java)\n\nA function is called that is only useful for its return value, and this value is ignored."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/vulnerable-components/src/test/java/org/owasp/webgoat/vulnerable_components/VulnerableComponentsLessonTest.java"},"region":{"startLine":75}}}],"ruleId":"useless_call|java","partialFingerprints":{"ruleIdLocationHash/v1":"52e377c4e3dc6a17170b2a56dfa6443beb02539a32de81d4566491dd4f677b8d"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-lessons/vulnerable-components/src/test/java/org/owasp/webgoat/vulnerable_components/VulnerableComponentsLessonTest.java"},"region":{"startLine":75}},"message":{"text":"Calling \"((org.owasp.webgoat.vulnerable_components.Contact)xstream.fromXML(\"bullssjfs\")).getFirstName()\" is only useful for its return value, which is ignored. (The virtual call resolves to \"org.owasp.webgoat.vulnerable_components.ContactImpl.getFirstName\".)"}}}]}]}]},{"message":{"text":"[See in Polaris](https://pim.altair.synopsys.com/portfolio/portfolios/fc7e733e-7956-43d0-8d0d-4aa33c4c2ef7/portfolio-items/0c21d02d-1ab1-4c0e-8cad-0a209bf54bf1/projects/80a77e1c-bbc9-4b01-ab3b-cc1a7694e990/issues/D0210096CE26A3BDFF6ED6B05F267C97?branchId=741c7cee-872e-45d9-b798-54e6a5dc72b7\u0026filter=issueType%3Alocalized-name%3DUnreachable%252C%20Unused%20or%20Dead%20Code%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dwebgoat-container%2Ftarget%2Fclasses%2Fstatic%2Fjs%2Flibs%2Face.js)\n\nAn expression is useless because it has no side effects and its result is ignored."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"webgoat-container/target/classes/static/js/libs/ace.js"},"region":{"startLine":9100}}}],"ruleId":"no_effect|javascript","partialFingerprints":{"ruleIdLocationHash/v1":"517715a9dba035a58535d619ebba3742d8ad51aaf1147c00d6f9388ce4a8f7eb"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-container/target/classes/static/js/libs/ace.js"},"region":{"startLine":9100}},"message":{"text":"Reading variable \"i\" and discarding the result. What was this code intended to accomplish?"}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"webgoat-container/target/classes/static/js/libs/ace.js"},"region":{"startLine":9100}},"message":{"text":"Perhaps this code is incomplete or mistyped in some way."}}}]}]}]}]}],"version":"2.1.0"}